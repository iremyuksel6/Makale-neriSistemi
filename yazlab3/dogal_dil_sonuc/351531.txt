priori sparsiti pattern parallel spars approxim invers precondition parallel algorithm comput spars approxim invers spars matrix either use prescrib sparsiti pattern approxim invers attempt gener good pattern part algorithm paper demonstr pde problem pattern power sparsifi matric psm use priori effect approxim invers pattern addit effort adapt sparsiti pattern calcul may requir psm pattern relat variou approxim invers sparsiti pattern matrix graph theori heurist concern pde green function parallel implement show psmpattern approxim invers significantli faster construct approxim invers construct adapt often give precondition compar qualiti b introduct spars approxim invers approxim invers usual spars matrix spars matrix accomplish exampl leastsquar method minim matrix residu norm 1 f constraint spars gener degre freedom problem nonzero valu well locat minim consid variabl simultan howev complex thu simpl approach prescrib set nonzero sparsiti pattern perform minim object function 11 decoupl sum squar 2norm n individu column ie e j j jth column ident matrix matrix respect leastsquar matrix small number column equal number nonzero correspond j nonsingular leastsquar matric full rank thu approxim invers construct solv n leastsquar problem parallel howev spars approxim invers attract parallel precondit primarili precondit oper spars matrix vector product cost construct approxim invers larg matrix usual high especi adapt pattern select strategi describ competit construct parallel diagon domin entri 1 decay rapidli away diagon 17 band pattern produc good approxim invers work perform auspic us depart energi lawrenc livermor nation laboratori contract w7405eng48 center appli scientic comput lawrenc livermor nation laboratori l560 box 808 livermor ca 94551 echowllnlgov 1 form right approxim invers use notat slightli clearer matrix distribut parallel processor row left approxim invers comput rowwis gener set without applicationspec inform clear best choos sparsiti pattern algorithm develop rst comput approxim invers initi pattern updat new minim problem solv either exactli inexactli process repeat threshold residu norm satis maximum number nonzero reach 12 15 22 refer adapt procedur one procedur use iter method minim residu start spars initi guess 12 approxim minim 12 ie nd spars approxim solut suppos spars initi guess j use rst iter spars maintain sparsiti strategi drop small element usual use either search direct iter prescrib pattern necessari sinc sparsiti pattern emerg automat method ecient sparsespars oper must use product spars matrix spars vector p nonzero involv p column spars matrix anoth adapt procedur call spai 15 22 use numer test determin nonzero locat ad current sparsiti pattern jth column numer test ad nonzero locat k form toler residu given sparsiti pattern column j j current approxim test 14 lower bound improv squar residu norm pattern j augment entri k ad toler satis lefthand side 14 larg compar valu k cost perform test spars dot product r column k locat test interprocessor commun need test k correspond column local processor adapt algorithm util addit degre freedom minim aord locat nonzero allow much gener problem solv adapt method howev tend expens thu paper focus problem select preprocess step spars approxim invers comput immedi minim 11 section 2 rst examin sparsiti pattern produc nonadapt adapt scheme section 3 test idea use pattern power sparsi matric psm priori sparsiti pattern spars approxim invers numer test present section 4 comparison sequenti parallel version current method final section 5 draw conclus 2 graph interpret approxim invers sparsiti pattern 21 use pattern variant structur spars matrix order n direct graph ga whose vertic integ whose edg j correspond nonzero odiagon entri notat usual impli matric nonzero diagon entri subset ga direct graph vertic subset edg ga priori pattern spars approxim invers 3 graph ga represent sparsiti pattern clear context distinguish structur vector x order n subset ng correspond nonzero entri x associ matrix order n often refer structur x subset vertic associ matrix notic structur column j matrix set vertic ga edg point vertex j plu vertex j structur row j vertex plu set vertic point vertex j invers matrix show unknown linear system depend unknown structur matrix show immedi depend suggest structur 1 edg whenev direct path vertex vertex j ga 21 nonsingular ignor coincident cancel structur call transit closur ga denot g irreduc matrix result say invers full matrix suggest possibl truncat transit closur process approxim invers spars matrix heurist often employ vertic closer vertex j along direct path import retain approxim invers sparsiti pattern idea support decay element observ tang 30 discret green function mani problem sparsiti pattern rst use benson frederickson 4 symmetr case also dene matric pattern qlocal matric given graph ga structur symmetr matrix full diagon structur jth column qlocal matrix consist vertex j qth level nearestneighbor ga 0local matrix diagon matrix 1local matrix sparsiti pattern sparsiti pattern common priori pattern use approxim 1 give good result mani problem usual improv fail mani problem one improv use higher level q unfortu nate storag precondition grow quickli q increas even impract mani case 20 huckl 24 propos similar pattern may eectiv nonsymmetr includ pattern correspond graph ga densiti former particular grow quickli increas k primarili pattern use envelop pattern adapt spai algorithm select pattern give upper bound interprocessor commun requir parallel implement 23 cosgrov daz 14 propos augment pattern without go full 2local matrix suggest ad nonzero j way minim number new row introduc jth leastsquar matrix express 12 augment structur determin structur kolotilina yeremin 28 propos similar heurist augment sparsiti pattern factor spars approxim invers sparsic instead augment pattern also possibl diminish pattern rel full accomplish spar sicat drop small element matrix use result pattern introduc kolotilina 26 comput spars approxim invers dens matric see also 10 32 kaporin 25 spars matric factor approxim invers sparsic combin use higher level neighbor tang 30 show sparsifi matrix prior appli adapt spai algorithm eectiv anisotrop problem observ storag therefor oper count requir precondition produc way much smaller techniqu gener pattern power sparsi matric idea explicitli combin sparsic use higher level neighbor use alleon et al 1 attribut techniqu cosnuau 16 approxim invers dens matric electromagnet howev test show higher level warrant tang wan 31 also use sparsi cation appli qlocal matrix pattern q 1 approxim invers use multigrid smoother show sparsic caus deterior converg rate problem work alleon et al tang wan repres rst use psm pattern instead appli sparsic also appropri case appli sparsic spars approxim invers comput 27 31 use reduc cost use approxim invers rel full 22 insight adapt scheme adapt scheme gener pattern dierent pattern exampl gener pattern much sparser nevertheless pattern produc adapt scheme interpret use graph consid rst approxim minim method describ section 1 follow algorithm nd spars approxim solut minim residu iter drop strategi element search direct r encapsul function drop step 4 may depend current pattern algorithm 21 spars approxim solut 1 spars initi guess 2 r e j 3 loop krk tol reach max iter 4 dropr 5 q ad 6 rq 7 8 r r q 9 endloop element r alreadi candid new element vector r gener essenti product thu structur r set vertic edg point vertic structur initi guess consist singl nonzero element locat j structur grow outward vertex j ga iter algorithm search direct iter method r instead r kth entri search direct r ae k drop strategi base size entri similar one base test 14 attempt minim updat residu norm method candid new element rst second level neighbor vertic nonsymmetr direct edg import priori pattern spars approxim invers 5 exactli graph interpret spai algorithm see huckl 24 comput column j vertic far vertex j enter pattern least initi algebra mean nonzero locat r ae k intersect valu test zero ecient implement spai use graph idea narrow indic k need check earli parallel implement spai 18 test rst level neighbor vertex rather rst second level good approxim mani case implement also assum structur symmetr onesid interprocessor commun necessari recent parallel implement spai 2 3 implement algorithm exactli code implement onesid commun messag pass interfac mpi use dynam load balanc case processor nish comput row earlier other 3 pattern power sparsi matric 31 graph interpret section 2 observ prescrib sparsiti pattern pattern gener adapt method gener subset pattern low power given full diagon typic increas accuraci higher power clearli method relat neumann seri characterist polynomi 24 structur column j approxim invers subset vertic level set direct edg vertex j ga good vertic choos level set neighborhood vertex j algorithm dier vertic select convectiondomin anisotrop problem upstream vertic vertic prefer direct greater uenc other column j invers figur 31 show discret green function point pde convect nonsymmetri function show upstream nonzero row column exact invers greater magnitud other without addit physic inform direct ow howev often possibl use sparsic identifi prefer upstream directions51525010203001030507 fig 31 green function point pde convect examin sparsiti pattern produc adapt algorithm tri determin could gener simpler graph algorithm simpl exampl turn structur produc exactli close transit closur subset ga ie structur sparsi 6 edmond chow matrix figur 32 show structur sever matric orsirr2 harwellbo collect b 0 sparsic origin matrix c transit closur g structur produc spai algorithm latter gure select 2 show exampl eectiv spars approxim invers pattern problem howev bothersom featur exampl approxim invers four independ diagon block note approxim adapt gener pattern well pattern c gener use transit closur b sparsi orsirr2 c transit closur b pattern spai fig 32 adapt gener pattern approxim transit closur c 32 sparsifi simplest method sparsifi matrix retain entri matrix greater global threshold thresh exampl figur use import howev make sure diagon element retain otherwis structur singular matrix would result case gener diagon alway retain priori pattern spars approxim invers 7 one strategi choos threshold choos one retain exampl onethird origin nonzero matrix fewer nonzero retain power sparsi matrix number nonzero grow quickli threshold chosen small problem test section 4 number level use may increas precondition reach target number nonzero best choic paramet problemdepend special problem strategi may eectiv exampl matrix contain uniqu valu matrix sparsi use global threshold matrix scale becom import often case matrix contain mani dierent type equat variabl scale way exampl consid matrix rst row column scale larg number z threshold z chosen diagon matrix retain third row sparsi matrix becom independ row thu appli threshold matrix symmetr scale one diagon eg matrix scale matrix threshold less equal 1 guarante diagon retain scale also make easier choos threshold method scale foolproof avoid simpl problem graph sparsi matrix 0 vertex connect vertic accomplish sparsifi matrix one retain least xed number edg vertex exampl one correspond largest matrix valu given paramet implement column j select diagon jth element plu 1 largest odiagon element column j origin matrix guarante 1 vertic edg vertex j appli rowwis guarante 1 vertic edg eman vertex j choos explicitli keep diagon matrix thu column row least nonzero choos may simpler meaning choos threshold matrix valu dierent valu may use dierent vertic depend vertex initi degre number incid edg denot structur matrix 0 sparsi denot structur set vertic edg whenev path distanc less 0 structur 1 subset matrix form ignor coincident cancel call level set expans sparsi matrix pattern power sparsi matrix psm pattern heurist 3 test alleon et al 1 equival use variabl level perform sparsic mention also possibl perform sparsic everi level set expans denot variant variant valu need comput propos follow stress larger element drop denot sparsic process dene note 1 gener subset complic strategi possibl threshold dierent level note determin much dicult determin sinc valu need comput 33 factor form approxim invers spars approxim invers choleski lu factor often use analogu leastsquar method minim 11 factor spars approxim invers fsai techniqu kolotilina yeremin 28 implement parallel field 19 normal equat method use solv leastsquar system choleski lu factor requir comput approxim invers mean howev adapt pattern select scheme use sinc matrix whose invers approxim avail priori sparsiti pattern must use instead given spars approxim invers approxim u 1 spars matric g h respect pattern g h chosen pattern gh close sens good pattern approxim 1 suppos good pattern 1 upper lower triangular part good pattern g h sinc pattern gh includ pattern pattern test section 4 may also possibl use pattern power exact approxim l u known l u factor discret pde invers often band element decay rapidli away main diagon techniqu may appropri approxim l u avail exampl spars incomplet lu factor oppos invers irreduc matric invers choleski lu factor often spars order thu appli give factor whose invers well approxim spars matric experiment fewer nonzero exact invers factor translat lower construct cost better perform factor approxim invers comput incomplet biconjug process 7 8 transit closur use comput number nonzero exact invers choleski factor base height node elimin tree lead reorder strategi approxim minim height elimin tree thu number nonzero invers factor allow predict well approxim invers might perform given problem 7 8 34 approxim invers schur complement determin good pattern schur complement matrix notic schur complement thu good sparsiti pattern 1 determin good sparsiti pattern 1 simpli 22 priori pattern spars approxim invers 9 block good sparsiti pattern 1 b small order compar global matrix els method overli costli code may possibl comput approxim invers extract approxim 1 comput partial approxim invers ie row column approxim invers correspond 1 11 almost order 35 parallel comput comput equival structur spars matrixmatrix product sparsi matric comput also view n level set expans one row column perform parallel vertic near vertic dierent processor commun necessari commun reduc partit graph sparsi matrix among processor number edgecut reduc unfortun gener onesid commun requir comput spars approxim invers processor need request row processor processor predict row need send onesid commun may implement mpi processor occasion probe messag processor latenc probe critic perform factor multithread environ possibl dedic thread local process node servic request row server thread remain thread comput row make request row necessari worker thread consid matrix approxim invers comput partit way row across sever processor algorithm 31 describ one organ parallel comput processor comput level set expans row continu next level level request repli processor coalesc allow fewer larger messag use like 3 extern row cach processor case need comput row commun numer phase valu comput algorithm implement use occasion probe onesid commun algorithm 31 parallel level set expans comput commun row 1 initi set vertic v empti 2 sparsifi row local processor 3 merg structur local sparsi row v 4 level 5 nonloc k 2 v request receiv row k 6 sparsifi receiv row 7 merg structur new sparsi row v 8 endfor 9 nonloc k 2 v request receiv row k comput structur row 10 local row j 11 initi v j singl entri locat j 12 level 13 new sparsi structur row k v j 14 endfor 15 endfor comput valu row 16 local row j nd pattern v j also implement second parallel code follow featur multithread take advantag multipl processor per sharedmemori node symmetr multiprocessor comput use server worker thread easili implement onesid commu nicat use simpler algorithm algorithm 31 comput row perform associ commun continu next row multipl thread use avoid worker thread need synchron coordin row request node smaller messag use commun also spread entir execut time algorithm scalabl use memori thu also slower rst version use directaddress tabl trade memori faster comput time second code report next section limit time rst code also shown also work factor implement symmetr matric guarante precondition also symmetr implement make simpl chang step 16 algorithm 31 requir onesid commun full matrix store 4 numer test 41 precondit qualiti first test qualiti sparsiti pattern gener power sparsi matric small problem harwellbo collect particular chose problem test spai 22 order make comparison perform test exactli condit solv linear system use gmres20 rel residu toler 10 8 zero initi guess report number gmre step need converg indic converg use symbol right precondit use tabl 41 45 show test result unfactor column 2 factor column 3 form approxim invers compar result leastsquar ls method use pattern origin matrix fsai leastsquar method nonsymmetr factor form 28 use pattern origin matrix unfactor form also display result spai method report 22 use choic paramet adapt method factor form also avail 5 6 29 test global threshold shown tabl scale matrix use perform sparsic tabl also show number nonzero nnz unfactor precondition entri lsfsai number nonzero result show precondition almost qualiti adapt spai achiev use pattern case even better precondition result sometim even less storag tabl 41 result also show use pattern gener give good precondition problem sherman2 rel hard problem spars approxim invers result report 22 show spai could reduc residu norm 10 5 precondition 26327 nonzero 7 step result similar pattern full residu norm reduct achiev approxim invers denser note case sparsic priori pattern spars approxim invers 11 tabl iter count orsirr2 pattern unfactor factor nnz lsfsai 335 383 5970 spai 84 5318 tabl iter count sherman1 pattern unfactor factor nnz lsfsai 145 456 3750 spai threshold appli origin matrix rather diagon scale matrix although matrix valu 27 order magnitud diagon scale foolproof factor approxim invers eectiv problem pattern saylr4 rel hard problem gmre grote huckl 22 report spai could solv problem gmre could bicgstab also true pattern result tabl 45 bicgstab cours mani problem dicult psmpattern approxim invers includ nnc666 gre1107 harwellbo collect fidap problem navierstok simul problem howev solv use adapt method 12 problem pose diculti psm pattern green function heurist invalid problem either pde problem modi eg fidap problem use penalti formul tabl 46 47 show test result unfactor form approxim invers 0 ls pattern problem sinc gener superset guarante better pattern term norm r show also display matrix residu norm paramet shown tabl use sparsifi matric level set expans result show priori method approach qualiti adapt method close 42 parallel time result result show precondit qualiti pde problem signicantli degrad use nonadapt scheme base power sparsi matric section illustr main advantag precondition low construct cost compar adapt scheme section 43 show result use multithread version code parasail parallel spars approxim invers least squar like parallel version spai 3 make comparison parasail implement tabl iter count sherman2 pattern unfactor factor nnz lsfsai 23094 spai 26327 tabl iter count pores3 pattern unfactor factor nnz lsfsai 3474 spai 599 16745 precondition object isi solver librari 13 code gener spars approxim invers partit across processor row thu left precondit use code leastsquar problem aros solv use lapack routin qr decomposit problem rel full approxim invers solv leastsquar problem take major comput time test run multipl node ibm rs6000 sp supercomput lawrenc livermor nation laboratori node contain four 332 mhz powerpc cpu time perform use userspac mode much ecient internetprotocol mode howev nonthread code use one processor per node userspac mode test spai one processor per node parasail four processor per node iter solver matrixvector product code also nonthread use one processor per node rst problem test nite element model three concentr spheric shell dierent materi properti matrix order 16881 nonzero spai algorithm use default paramet target residu norm row 04 produc much sparser precondi tioner 171996 nonzero solv problem use gmres50 toler step comparison purpos chose paramet parasail gave similar number nonzero precondition particular 3 paramet 3 gave precondition 179550 nonzero solv problem 331 step figur 41 show two result sparsiti pattern tabl 48 report variou number node npe wallclock time precondition setup phase precon iter solv phase solv total time total time construct precondition code includ time determin sparsiti pattern due rel small size next problem one worker one server thread use per node ie two processor per node parasail run one processor use spai run comparison tabl 49 show result use rst nonthread occasion mpi probe onesid commun version code code priori pattern spars approxim invers 13 tabl iter count saylr4 pattern unfactor factor nnz lsfsai 22316 spai 67 84800 tabl iter count sherman3 step nnz krkf ls 20033 173620 spai 264 48480 much faster use directaddress array quickli merg sparsiti pattern row directaddress array length global size matrix scalabl parasail b spai fig 41 structur spars approxim invers concentr shell problem test second larger problem model workharden metal squeez make pancakelik particular exampl pattern sparsi matrix 0 paramet 3 lead good precondition parasail produc precondition 141848 nonzero solv problem 142 step spai produc precondition 120192 nonzero 14 edmond chow tabl iter count sherman4 step nnz krkf ls 199 3786 62503 spai 86 9276 tabl time concentr shell problem parasail spai npe precon solv total precon solv total solv problem 139 step result vari number process node shown tabl 410 result show nonadapt parasail algorithm implement mani time faster adapt spai algorithm 43 implement scalabl section experiment investig implement scalabl construct spars approxim invers parasail let n p time construct approxim invers order n parallel comput use p processor dene scale ecienc en p n 1t pn p en implement perfectli scalabl ie one could doubl size problem number processor without increas execut time howev long en p bound away zero xed n p increas say implement scalabl consid 3d constant coecient pde discret use standard nite dierenc uniform mesh anisotrop paramet problem use test scalabl multigrid solver 9 problem constant size per comput node 10 3 local problem size node topolog 1 3 5 3 use thu largest problem cube 60 unknown node use four processor 4 worker thread 1 server thread problem precondition construct phase ie 500 processor largest congur threshold parasail chosen nonzero along strongest z direct retain 3 pattern use although symmetr problem precondition symmetr use gmres50 iter solver zero initi guess converg toler 10 6 priori pattern spars approxim invers 15 tabl concentr shell problem time precondition setup use direct address npe precon tabl time workharden problem parasail spai npe precon solv total precon solv total tabl 411 show result includ wallclock time construct precondition iter solv phase number iter requir converg averag time one iter solv phase e p e scale ecien cie construct precondition one step solv phase figur 42 43 graph scale ecienc e p e respect implement seem scalabl valu p may encount comparison tabl 412 show result spai use 40 3 local problem size larger problem led excess precondition construct time one processor per node use spai 5 conclus paper demonstr eectiv pattern power sparsi matric spars approxim invers pde problem oppos mani exist method prescrib sparsiti pattern psm pattern use valu structur origin matrix spars pattern produc psm pattern allow simpler direct method construct spars approxim invers precondition use compar precondit qualiti adapt method signicantli less comput cost numer test show addit eort adapt sparsiti pattern calcul alway requir acknowledg author indebt weipai tang one rst use sparsic comput approxim invers sparsiti pattern john gilbert instrument direct attent transit closur matrix motiv possibl nding good pattern priori michel benzi made help comment direct author 24 author also grate ongo support robert clay andrew esmond ng ivan otero yousef saad alan william nalli cogent comment anonym refere tabl time iter count ecienc parasail local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es 50 50 50 local problem size npe n precon solv iter solveit ep es local problem size npe n precon solv iter solveit ep es tabl time iter count ecienc spai local problem size npe n precon solv iter solveit ep es priori pattern spars approxim invers 17 1200103050709number node scale effici fig 42 implement scalabl parasail precondition construct phase 1200103050709number node scale effici fig 43 implement scalabl one step iter solut r mpi implement spai precondition t3e portabl mpi implement spai precondition isi iter solut larg spars linear system aris certain multidimension approxim problem order method factor approxim invers pre condition semicoarsen multigrid distribut memori machin class precondit method dens linear system boundari ele ment approxim invers techniqu blockpartit matric etud dun pr decay rate invers band matric parallel implement spars approxim invers precondition predict structur spars matrix comput parallel precondit spars approxim invers precondit conjug gradient method solv discret analog explicit precondit system linear algebra equat dens matric factor spars approxim invers precondit factor spars approxim invers precondit ing iter method spars linear system toward e spars approxim invers smoother multigrid precondit boundari integr equat tr ctr kai wang sangba kim jun zhang kengo nakajima hiroshi okuda global local parallel precondit techniqu larg scale solid earth simul futur gener comput system v19 n4 p443456 may robert falgout jim e jone ulrik meier yang conceptu interfac hypr futur gener comput system v22 n1 p239251 januari 2006 robert falgout jim e jone ulrik meier yang pursu scalabl hypr conceptu interfac acm transact mathemat softwar tom v31 n3 p326350 septemb 2005 kai wang jun zhang chi shen parallel multilevel spars approxim invers precondition larg spars matrix comput proceed acmiee confer supercomput p1 novemb 1521 chi shen jun zhang parallel two level block ilu precondit techniqu solv larg spars linear system parallel comput v28 n10 p14511475 octob 2002 denni c smolarski diagonallystrip matric approxim invers precondition journal comput appli mathemat v186 n2 p416431 15 februari 2006 edmond chow parallel implement practic use spars approxim invers precondition priori sparsiti pattern intern journal high perform comput applic v15 n1 p5674 februari 2001 oliv brker marcu j grote spars approxim invers smoother geometr algebra multigrid appli numer mathemat v41 n1 p6180 april 2002 luca bergamaschi giorgio pini flavio sartoretto comput experi sequenti parallel precondit jacobidavidson larg spars symmetr matric journal comput physic v188 michel benzi miroslav tma parallel solver largescal markov chain appli numer mathemat v41 n1 p135153 april 2002 anwar hussein ke chen fast comput method locat fold point power flow equat journal comput appli mathemat v164165 n1 p419430 1 march 2004 p k jimack domain decomposit precondit parallel pde softwar engin comput technolog civilcomp press edinburgh uk 2002 e flrez garca l gonzlez g montero effect order spars approxim invers precondition nonsymmetr problem advanc engin softwar v33 n710 p611619 29 novemb 2002 michel benzi precondit techniqu larg linear system survey journal comput physic v182 n2 p418477 novemb 2002