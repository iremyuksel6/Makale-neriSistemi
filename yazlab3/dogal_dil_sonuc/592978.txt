scalabl session lock distribut file system file system provid interfac applic obtain exclus access file process hold privileg file preempt restrict capabl process local file system maintain inform privileg current file session check subsequ session compat implement exclus access manner distribut file system degrad perform requir everi new file session regist lock server maintain global session state present two techniqu improv perform session manag distribut environ introduc distribut lock manag file access call isemipreempt lock allow client cach privileg semipreempt lock file system creat new session without messag lock manag improv perform exploit local affin file client also present data structur algorithm idynam evalu lock allow distribut file system effici manag arbitrarili complex lock case complex mean object lock larg number uniqu mode combin techniqu result distribut lock scheme support finegrain concurr control low memori messag overhead assur lock system correct avoid unnecessari deadlock b introduct distribut file system becom princip method share data distribut applic programm understand file system semant well use easili gain access share data exactli reason distribut file system easi use difficult implement distribut file system take respons provid synchron access consist view share data shield applic programm task move complex file system distribut clientserv file system present local file system interfac remot share data file system client take respons implement semant local file system translat local interfac onto clientserv network protocol heterogen distribut file system mani client oper system system may translat semant sever differ local file system onto singl network protocol work present lock construct call file session lock implement session file defin open close call applic file session enforc concurr constraint eg one client open file exclus write permit concurr reader open read client must forbidden lock design provid data consist cach coher suitabl cach coher protocol requir addit file session lock instead lock allow client choos among mani exclus access share option avail nativ file system interfac semant local open enforc throughout distribut system help encod enforc session distribut environ contribut semipreempt lock allow file system client cach session privileg client hold semipreempt lock file right access file mode specifi held lock client maintain file open session state local need transact file system server open close file client may continu hold lock even open instanc way client cach access privileg right open file servic subsequ open request without messag server mechan reduc server traffic elimin open close messag consequ reduc latenc avoid messag round trip time client cach access privileg file belief file use local use anoth client semipreempt lock also reduc distribut lock state client often hold multipl open instanc singl file concurr client local creat concret lock session held context distribut lock open instanc grant singl semipreempt lock rather hold separ lock everi open singl semipreempt lock summar client open state distribut system semipreempt lock combin two concept lock manag first client manag lock hierarch separ session state lock state second client use semipreempt also call lazyrevoc sticki lock 24 retain privileg file absenc activ session use term hierarch differ lock literatur gener term hierarch describ lock held concurr differ level abstract data object achiev granular lock 12 27 instead use term describ two level lock higher level abstract summar client lock state server lower level concret repres session interfac open file creat session mani option allow applic specifi intend action restrict concurr action client express option lock data gener multipl lock mode uniqu semant number differ possibl lock mode increas exponenti number access method lock complex data object use exist method quickli becom unmanag take windowsnt interfac exampl establish point file system take six binari argument open file requir 64 uniqu lock mode describ session consid lock mode pairwis compat 4096 combin lock compat held concurr furthermor larg number mode interfac fulli specifi possibl access mode exampl address concurr exclus access file system metadata exist method lock manag fall short either fail scale well number lock mode becom larg ad hoc system poorli specifi databas system employ static data structur call lock compat tabl 12 describ relationship lock mode pairwis data structur fulli specifi interact lock mode grow quadrat size respect number lock mode altern modern file system use ad hoc rulebas method evalu lock effici compact 16 howev without formal specifi semant interact lock mode difficult reason implement correctli present formal specif lock mode deriv data structur algorithm manag distribut lock call dynam evalu method advantag scale well number lock mode addit specifi fulli interact among lock mode eas implement correct lock protocol system obviat need static data structur lock compat tabl use databas system requir memori respect number legal lock mode system lock compat evalu algorithm base small static lock structur requir memori olog n distribut file system provid good exampl complex lock system feel dynam lock evalu wide applic distribut system 2 storag area network file system brief digress file system architectur implement file session lock help motiv perform advantag storag tank project ibm research build distribut file system storag area network san figur 1 san high speed network storag area network control network tape server server server client client client server cluster figur 1 schemat storag tank distribut file system storag area network san give comput share access storag devic current san construct fibr channel network 4 futur expect network attach storag devic avail gener purpos data network san construct network gigabit ethernet 9 distribut file system built san remov server bottleneck io request give client direct data path disk file system client san access data directli storag area network contrast tradit clientserv file system 26 14 16 7 store data server privat disk client function ship data request server perform io behalf unlik tradit file system storag tank client perform io directli share storag devic direct data access model similar file system network attach secur disk nasd 11 use share disk ip network global file system 21 san attach storag devic client commun storag tank server gener purpos network obtain file metadata addit serv file system metadata server manag cach coher protocol authent alloc file data manag data placement free space unlik file system metadata data store separ metadata includ locat block file share storag kept server san storag devic contain block data file way share devic san optim data traffic block transfer data server privat storag optim metadata workload frequent small read write san environ simplifi distribut file system server remov data task radic chang server perform characterist previous server perform measur data rate perform occasion limit network bandwidth often limit server abil read data storag write network san environ server perform properli measur transact per second analog databas server without data read write storag tank server perform mani transact tradit file server equal process power without rel slow process ship data client server hide protocol head minim messag traffic file system oper becom import protocol overhead network server resourc ad latenc use clientserv messag tradit clientserv file system client go server obtain data ship data client take significantli longer use mani resourc singl server messag overhead associ messag open close file hidden cost ship data storag tank protocol overhead limit perform semipreempt lock allow client open file without contact server messag avoid time save critic path 3 semipreempt file lock distribut file system littl data share occur practic 2 17 data share indic two client concurr access file addit client often access data recent use claim support effect data cach environ 19 15 matur distribut file system 14 7 24 16 1 13 19 23 take advantag observ cach file data client even process activ use data design decis cach file data file close improv perform subsequ open system like request anoth client access data subsequ access cach improv perform avoid server messag data read disk howev anoth client attempt access data see addit latenc file system server invalid cach client hold data grant access new client reason cach improv perform data access semipreempt lock improv perform file open local process request open file lock held client obtain semipreempt lock grant open local process close file client record open file instanc current use lock hold onto lock await futur open file analog data cach hold access lock past close decreas latenc avoid server messag subsequ open cach lock add latenc open client server must revok lock grant access client server client client b open instanc lock held open file client semipreempt demand messag open state client client b figur 2 demand semipreempt lock accept deni depend upon client file system open state record open instanc associ access lock client differenti lock held protect open file therefor releas lock held improv perform subsequ open consid second client wish obtain exclus access file alreadi lock first client server process second client request demand 1 lock first client send messag request releas held lock first client hold open instanc file requir held lock protect instanc deni demand request server figur 2 howev process hold open instanc client longer util held lock releas safe access lock call semipreempt server must demand preemptibl lock howev client refus demand request semipreempt lock system particularli appropri sanbas distribut file sy tem data obtain server lock held client directli access data share storag need interact server without direct access storag client must interact server data file system save messag semipreempt lock use term demand consist exist terminolog despit fact client refus demand term like request would appropri describ server action request often use describ client process acquir lock server manag complex lock manag includ lock protocol lock evalu protocol describ lock obtain releas system use semipreempt protocol lock evalu enforc semant lock semant encod lock mode file session lock mode defin action allow lock action restrict concurr session file system larg number possibl lock mode describ possibl combin action restrict evalu lock becom difficult number lock mode grow larg techniqu reduc number lock mode explor altern implement full complement possibl mode although techniqu reduc complex neg affect concurr reduc perform storag tank implement possibl lock mode greatest degre concurr applic correct howev describ techniqu comparison 41 implement subset implement chosen subset possibl lock mode system trade reduc complex minor semant violat file system often select set distribut lock file access simpler semant underli file open system call 7 15 mismatch open semant lock result either concurr open allow violat open semant concurr open disallow open semant would permit file system opt disallow legal open polici imping concurr rather correct extrem exampl subset protect object singl exclus lock lock easi reason implement manag one client hold time give client total control lock object howev lock allow concurr action client session would mean one open instanc file time singl exclus lock oper reason data consist protocol lock preempt howev nonpreempt lock concurr restrict intoler 42 multipl simpl lock break singl complex lock multipl lock simpler semant anoth techniqu reduc complex strategi desir individu lock mode therefor easi manag introduc either deadlock livelock ultim limit perform problem aris lock truli independ applic requir multipl lock held concurr oper applic semant tie seemingli independ lock togeth complex set lock mode singl lock implement multipl lock simpl semant obtain individu exampl lock protect data file write data updat metadata broken two separ lock one write one metadata updat howev lock obtain atom exampl client need obtain multipl preemptibl lock conduct oper experi livelock guarante ever make progress consid two client tri obtain set lock client hold lock current request remain lock client obtain lock lock revok neither client ever guarante get full complement lock need continu increas number client resourc content number lock mode exacerb livelock techniqu elimin livelock introduc deadlock elimin livelock client need multipl lock deni ignor revoc current held lock await lock requir two client livelock exampl request set lock would impass ignor revoc neither client releas lock hold neither client obtain lock need deadlock gener handl either avoid detect 12 regardless chosen techniqu deal deadlock alway incur perform penalti protect access use singl lock complex semant rather multipl individu lock avoid deadlock livelock associ ineffici rather need obtain multipl lock applic atom obtain singl lock request evalu immedi server grant deni applic lock state alway progress 5 compat tabl comparison system dynam evalu present compat tabl develop manag distribut concurr databas 12 key critic structur scale well number lock mode becom larg fair databas number lock mode tend small contrast file system static data structur adequ compat tabl determin whether incom lock request grant conjunct current outstand lock system defin set lock fill data structur defin symbol name descript r read reader lock w write reader writer lock share reader lock writer updat writer lock writer exclus reader writer held request none r w u x tabl 1 lock mode compat tabl file system open mode lock lock manag open file client select lock mode best match semant open request correspond lock lock server server use compat tabl evalu whether incom request servic present exampl base lock mode compat tabl tabl 1 subset possibl lock tabl consist row index mode incom lock request column index lock current held client tabl cell hold plu indic request compat outstand lock minu indic request held lock conflict exampl server receiv request w write lock file outstand lock r read share evalu lock follow first look cell request mode w held mode r see lock mode compat continu evalu w see incompat w lock immedi grant given current lock state server demand lock grant w lock demand succe n lock mode compat tabl contain n 2 entri databas system lock program compat tabl present problem howev look implement structur possibl lock distribut file system amount state daunt concern correct mainten implement 6 dynam lock evalu reduc memori use static lock data structur defin simpl algorithm evalu compat lock request algorithm requir client server store number allow access method k need record everi lock mode associ compat tabl algorithm support possibl lock mode given set access mode unlik system implement subset possibl lock limit complex algorithm use follow quantiti l set lock mode set valid access mode permit access mode disallow share mode lock x appropri thought order pair hp x dx access mode permit access mode disallow permit mode access method lock holder perform disallow mode access method lock holder forbid client perform concurr permit disallow access mode vari possibl subset set thu contain k differ access mode 2 2k differ potenti lock number distinct subset equal 2 k develop algorithm evalu lock state begin cast definit lock compat set theoret term definit creat simpl algorithm evalu lock request server process local open request server lock demand client lock compat evalu dynam fashion ie compat need precomput store tabl definit 61 compat lock x compat iff px two lock compat forbid access mode lock protect compat must symmetr lock state distribut system depend order lock acquir help avoid nondeterminist behavior due race condit illustr consid compat symmetr could two lock x x compat vice versa two client obtain lock lock x obtain first anoth client could get lock hand obtain first x would unavail final lock state would vari depend upon order lock request arriv addit lock compat use evalu lock request client requir concept lock strength weak manag lock hierarch determin lock transit strength weak use client either upgrad held lock servic local file open request downgrad lock respons server demand definit 62 strength lock x stronger lock iff p px definit 63 weak lock x weaker iff stronger x stronger lock permit access method restrict share compar weaker lock strength weak definit includ ident lock ie two ident lock mutual stronger weaker although abstract seem incongru simplifi lock algorithm address boundari condit follow theorem help show definit match intuit file access lock semant ident compat strength weak static lock data structur first lock hierarchi valid strength weak relat transit requir condit order theorem 61 x stronger stronger z impli x stronger z proof x stronger impli p px dx also stronger z impli observ p z px dz dx exactli condit x stronger z corollari 1 x weaker weaker z impli x weaker z lock strength close relat compat use help determin transit among lock mode system next theorem express key concept client use summar lock evalu lock transit theorem 62 x weaker lock compat compat x proof x weaker px p dx also lock z compat impli px conclud x compat z constrain z x compat lock compat corollari 2 x compat lock stronger x also incompat proof sake contradict conjectur z stronger x compat theorem 62 z compat impli x compat establish contradict z exist present descript lock defin semant must implement lock evalu algorithm algorithm dynam lock evalu compar lock request transit definit rather perform look preset data structur elimin memori requir store lock tabl l1 l2 l3 l4 l3 l3 l2 l3 l4 l4 summari bitlock bit 1 bit 2 bit 3 bit 4 bit 5 bit bit 7 bit 8 outstand figur 3 lock manag data structur 7 summar data structur lock evalu addit formal definit lock semant requir data structur lock request client lock granter server fulli specifi algorithm lock evalu server task receiv incom lock request evalu compat request current outstand lock obviou implement might elect data structur enumer outstand lock receiv new lock request server iter exist lock compar compat request lock implement base lock tabl work exactli fashion perform tabl look compar request lock current outstand lock defin data structur allow algorithm evalu lock compat directli without iter fundament concept data structur summar share restrict permit access mode outstand lock singl locat evalu incom lock request summari data structur also allow server find lock need demand directli without search concept summar lock state similar gener use strongest outstand lock repres outstand lock 12 howev system make provis lock compat yet strengthrel occur possibl combin access mode allow lock summari data structur contain list outstand lock addit summari index list lock figur 3 allow data structur evalu new lock request summari also permit contribut individu lock summari calcul remov lock releas lock summari data structur use bit vector repres individu lock lock system k uniqu access mode bit vector contain 2k bit first k bit correspond set access mode lock permit next k bit indic set access mode lock disallow exampl lock system metadata read metadata write read write access mode r bit vector h1011 0001i describ lock permit metadata read data read write disallow client hold write privileg punctuat bit vector colon indic semant differ first second k bit data structur contain list call outstand list individu lock current held client list hold descript lock 2k bit describ permit access concurr disallow lock mode h index lock identifi l stand bit vector represent set p server pick lock identifi incom lock request subsequ lock oper conduct lock identifi sinc clientserv lock oper conduct context lock identifi server alway look entri list quickli possibl maintain list order index lock look name o1 engin restrict 2 often requir uniqu nondecreas lock identifi lock identifi maintain use extend hash 8 scalabl fast look time olog n n outstand lock data structur also contain summari outstand lock lock summari consist union permit access mode union disallow concurr held mode system lock l outstand summari 1 data structur repres summari use bit vector set singl lock set oper union intersect comput use logic oper bit vector bitwis union bitwis intersect bit oper legal appli two vector length oper pairwis bit vector produc result bit vector length implement encod two union summari term bit oper whose bit compon expand arriv equival logic express maintain union permit disallow lock mode time server implicitli evalu compat incom lock request lock evalu request summari request lock disallow access mode permit recoveri 3 benefit uniqu nondecreas lock identifi summari summari disallow permit mode access ie intuit behind summari lock state system repres equival singl lock construct union permit concurr prohibit access mode addit summari outstand list requir addit list aid process lock request effici maintain summari bit lock summari keep bitlock structur contain list lock outstand set bit high bitlock list describ set lock contribut set individu bit summari high algorithm lock manag use list effici determin lock need revok request lock compat current lock state lock outstand also refer pointer locat bitlock list lock appear lock releas lock manag algorithm use refer quickli remov releas lock bitlock list refer actual point entri outstand list actual entri bitlock list head list diagram might indic allow algorithm look entri bitlock list unit time 71 correct establish evalu lock request base summari equat 3 correct show summari express deriv logic simplif compat criteria request lock compat outstand lock state grant compat definit 61 outstand lock system lock l outstand request lock must evalu compat lock l transform show evalu summari equival evalu outstand lock origin motiv summar data structur first develop formal lock present section 6 upon see express evalu compat singl request lock set compat outstand lock determin simplifi summar data structur lock evalu mere captur logic simplif 8 algorithm lock manag base dynam lock evalu semipreempt protocol develop set algorithm manag distribut set lock algorithm base summar data structur logic rule lock evalu also captur design goal elimin lock state use hierarch lock storag tank semipreempt protocol restrict client lock hold singl distribut session lock file client may mani local open instanc given file protect singl lock client must abl modifi current held lock chang protect access share without releas lock need aris two instanc 1 client hold semipreempt lock protect local open instanc anoth client request lock file conflict open instanc incompat held semipreempt lock 2 client hold semipreempt lock protect open instanc local process request anoth open instanc compat current open instanc access share requir semipreempt lock provid first case held lock strong client must convert weaker compat lock still protect open instanc process lock downgrad client releas lock outright obtain weaker lock current open instanc protect downgrad lock demand receiv server must contain type file access lock request client resolv compat appropri downgrad second case held lock provid access share requir new request held lock weak client attempt obtain stronger lock protect current open instanc new request obtain stronger lock continu hold old lock call lock upgrad concept strength weak help system determin action take ie chang lock state servic local open request server demand messag note upgrad lead deadlock file session lock databas term upgrad sometim use interchang term promot 12 describ process read data object one lock promot lock write type promot lead deadlock exampl two process read object hold weaker lock requir stronger lock write neither receiv promot lock neither releas weaker lock protect content object read contrast file session lock upgrad chang abstract distribut lock modifi mode actual session ie upgrad promot conflict upgrad session lock result deadlock semipreempt protocol allow server deni conflict lock request 81 server algorithm server act central manag author grant revok lock take incom lock request client take action revok outstand lock make request lock compat grant request possibl perform action server use summar lock data structur server receiv lock request multipl client concurr process request seri alli distribut lock requir lock state chang occur atom reason server consid one lock oper time multipl request lock queu server execut serial process one lock request may result multipl chang lock state grant lock server may demand multipl lock reflect mani state chang summari ever serverdriven state chang rather client request therefor conduct context singl clientiniti lock request upon receiv incom lock request server must evalu request lock compat demand incompat lock grant request server follow step figur 4 evaluatelockrequest input request lock dr lock summari data structur evalu compat request lock 1 0 lock compat proceed step 5 grant lock 2 els demand incompat lock nonzero bit demand lock summari disallow access mode desir request lock ie demand lock bitlocksi b similarli nonzero bit dr demand lock summari permit access bit request lock disallow ie dr demand lock bitlocksi 3 receiv process respons demand request use function releaselock downgrad lock 4 lock holder refus demand deni lock request return 5 grant request lock reflect chang lock state summari data structur use grantlock return figur 4 server routin evalu incom lock request determin compat incom lock request respect current system state server first evalu lock summari step 1 determin lock compat outstand lock grant immedi request immedi fulfil one current outstand lock conflict request must demand server determin demand set conflict lock step 2 outstand lock incompat disallow one access mode requir request lock step 2a altern outstand lock incompat permit access mode request lock disallow step 2b routin evalu conflict access mode use request lock summari high bit dr routin demand lock set bit remaind routin implement semipreempt lock protocol clientserv interact client deni demand request lock refus otherwis demand succeed server grant lock request step 5 routin evalu lock request result outstand lock releas new lock grant chang global lock state server updat lock data structur reflect chang use subroutin grant lock figur 5 client releas lock figur 6 grant lock server updat lock data structur reflect new outstand lock figur 5 new lock ad list outstand lock step 1 summari modifi reflect chang lock state step 2 final everi access mode permit disallow new lock must ad bitlock list refer ad lock entri outstand entri bitlock grantlock input lock grant dg lock summari data structur 1 regist lock grant list outstand lock creat entri list outstand 2 calcul contribut lock grant summari pg b dg 3 add refer g bitlock data structur bit permit disal low entri add link og bitlock list b bitlocksi figur 5 server routin updat summar data structur grant lock client releas lock server updat data structur use routin figur 6 releas lock consist remov lock list outstand lock step 3 updat summari reflect chang state step 2 remov refer lock step 1 present algorithm process upgrad request downgrad request oper treat combin releas request import differ upgrad releaselock input lock releas dr lock summari data structur 1 look refer find remov occur r bitlock list 2 bitlock list becom empti set correspond bit low summari ie 3 remov outstand list figur server routin process releas lock summari client 1 client 2 client 3 23 summari held summari held summari server client 1 client 2 client 3 held figur 7 hierarch lock manag among client server downgrad combin simpler oper upgrad downgrad must perform atom atom multipl oper achiev server allow singl process access lock data structur time howev unlik server algorithm clientserv protocol must contain upgrad downgrad primit protocol atom guarante across multipl oper 82 client algorithm semipreempt lock protocol allow client hold lock even use hold lock use cach lock client optimist retain privileg premis last client lock resourc like lock design aim minim chang lock state associ messag transact overhead client use two techniqu manag distribut lock local process oper lock first client allow local process use subset access mode allow lock ie client requir use full strength held lock also client allow multipl local process oper distribut lock implement techniqu client manag held lock local process hierarch client hold distribut lock h server figur 7 h encapsul action local process take lock resourc local process access data use mode specifi lock prohibit concurr access mode encod h held lock client map access mode share limit local process local lock local lock local manag abstract visibl client server client hold mani local lock use summar data structur server figur 3 evalu manag local lock client summari describ inus access mode disallow mode local process access data summari restrict alway weaker distribut held lock allow held lock protect concurr guarante express summari therefor need local lock manag client summar data structur differ server mani way manag simpler local lock held local process nonpreempt elimin demand revoc held lock way manag complex client chang local lock state must consid distribut system state encapsul held distribut lock h main principl manag multipl local lock singl distribut lock theorem 62 state lock compat outstand lock distribut system lock weaker lock also compat ensur remaind distribut system act accord held lock permit access share local lock respect lock client respond sever stimuli request obtain releas local lock local pro cess demand request lock server client obtain upgrad distribut lock behalf local process requir stronger local lock downgrad releas lock respons server demand effect client act server lock local process constraint client hold suitabl distribut lock reason lock acquisit releas upgrad grant oper client use routin much like server owe similar omit detail descript oper remain client action process demand request server figur 8 demand initi server attempt alter distribut lock state order grant lock anoth client lock mode request client includ server demand messag request lock evalu current open state step 1 client evalu whether request lock grant given local lock state client know local state must evalu request determin conflict outstand lock client make final determin compat request current system state compar request lock current local lock state client compat local lock downgrad distribut lock choos lock mode downgrad mani possibl choic present two extrem choic possibl heuri tic first client elect retain strong lock possibl minimum downgrad heurist processdemand input remot request lock includ demand messag dr client lock summari data structur 1 evalu whether request lock compat current held local lock 0 proceed step 2 els deni demand return 2 determin downgrad lock mode requir protect current held lock request lock use one two follow heurist maximum downgrad heurist b minimum downgrad heurist 3 inform server downgrad return figur 8 client routin determin need lock downgrad client reduc hold littl possibl lock strength sens make lock compat request lock choic would perform well futur access object like occur local client howev interest object move client polici may result futur demand altern downgrad lock hold much possibl maximum downgrad heurist downgrad lock mode exactli lock summaryth fewest permit access mode disallow mode need local lock 9 compar dynam evalu tradit lock present execut time memori usag bound lock evalu algorithm illustr dynam evalu asymptot outperform evalu base static data structur lock system complex amount space use lock system divid static dynam use space static space contain inform system need know lock mode properli run lock protocol dynam space contain inform current outstand lock convent wisdom hold dynam cost domin static cost howev lock system becom complex assert alway true static space cost grow exponenti number access mode static data structur k differ access mode result 2 2k uniqu lock lock tradit data structur requir space 4k 2 4k entri lock compat tabl 2 2k lock dynam lock evalu algorithm need know differ lock mode use space ok dynam space usag lock use tradit data structur nk n outstand lock system store list k mode n outstand lock dynam evalu use summar data structur hold dynam lock state nk data structur outstand list n entri size k k differ bitlock list total n entri list n incom pointer refer entri execut time look long oper take respect amount outstand lock state n amount static state k lock evalu static data structur take time n request must check outstand lock dynam lock evalu use execut time ok evalu lock updat lock summari fill bitlock outstand list similarli releas lock take time ok concurr high mani outstand lock domin k dynam evalu oper effici total space requir dynam evalu lock alway asymptot less equal requir evalu base static data structur howev dynam space requir dynam evalu lock larger constant factor list lock use static evalu equival size content outstand list portion summar data structur overhead true space save realiz static data structur becom import k grow larg perhap import space time save improv manag eas implement implement use lock compat tabl must reason pair lock complet entri tabl task difficult even 64 lock window nt addit lock mode must preprogram dynam evalu implement need identifi object access dynam evalu algorithm manag concurr compat relat research mani distribut file system client transact server everi open close file synchron 25 5 26 simplest techniqu implement local file system open semant distribut environ howev file open file close request requir network oper andrew file system 15 interact server everi open close use open close point synchron cach data andrew implement data cach hold data past close gener callback demand mechan howev callback appli preemptibl data lock like storag tank calypso file system 7 use open mode synchron lock call token implement local file system semant calypso token fulli preemptibl client held past close everi file system open close gener token request releas file system open state token request conflict manag complet server calypso use simpl lock hierarchi data lock hierarchi appli open mode synchron token df file system 16 describ token mechan similar semipreempt lock manag data metadata open state like semipreempt lock client refus permit revoc token depend upon local state token manag df differ element system lock includ file access lock data lock byterang lock manag singl token mechan df treatment token manag less concret discuss lock address map local file system semant distribut lock system work omit discuss synchron presenc failur distribut file system present local file system interfac remot share storag must continu compon fail mani modern file system 24 21 18 storag tank use leasebas 6 protocol ensur oper safeti high avail presenc client server failur network partit conclus distribut file system need manag open state referenti integr synchron access file exist distribut system address problem either relax local file system semant send everi file open request server introduc lock construct semipreempt lock permit file system client grant file open request local without server transact avoid server messag open client improv perform exploit local access file file system client semipreempt lock use summar open state mani open file may grant protect singl semipreempt lock reduc global lock state reduc clientserv messag also present set algorithm data structur dynam evalu lock dynam evalu provid formal compact framework evalu lock compat runtim dynam evalu obviat lock compat tabl exponenti reduc space requir describ lock system also obviat ad hoc system lock evalu provid formal manag lock correctli without deadlock r serverless network file system measur distribut file system fast crash recoveri distribut file system fibr channel gigabit commun io comput network univers file server analyt studi opportunist leas renew recoveri calypso file system extend hash fast access method dynam file gigabit ethernet 100 1 file server scale networkattach secur disk filesystem networkattach secur disk transact process concept techniqu design multicastbas distribut file system scale perform distribut file system synchron cach issu andrew file system decorum file system architectur overview disconnect oper coda file system coher distribut file cach directori write behind cach sprite network file system authent servic comput network authent network attach storag highli avail file system distribut workstat environ scalabl distribut file system locu distribut oper system overview sun network file system tr