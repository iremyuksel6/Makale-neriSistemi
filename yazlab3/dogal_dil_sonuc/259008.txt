gener effici virtual world visual use partial evalu dynam compil argu runtim program transform partial evalu dynam compil essenti tool autom gener flexibl highli interact graphic interfac particular techniqu help bridg gap highlevel function descript effici implement support claim describ applic techniqu function implement nvision realtim visual system repres multivari relat nest 3d interactor auto visual rulebas system design nvision visual highlevel task specif nvision visual specifi use simpl function languag program transform cach dataflow graph partial evalu use particular computationintens function applic result compil nativ code function represent simplifi gener correct code program transform ensur good perform demonstr transform improv perform done compil time b introduct modern program languag implement techniqu extrem import even essenti implement flexibl effici interact visual tool case point describ new version nvision visual tool origin develop present multivari function interact 3d virtual world 3 appear acm sigplan confer partial evalu semanticsbas program manipul pepm97 use function program program transforma tion partial evalu dynam compil improv function effici origin version nvision ad benefit simplifi product mainten code primari focu research improv graphic visual system knowledgebas autom design gener gener believ captur rule techniqu graphic design appli specif applic domain increas qualiti visual present user reliev user burden creat visual experiment autom gener system develop varieti field includ inform visual 13 5 16 3 21 pictori explan 17 multimedia explan 6 1 current work continu develop autovisu 3 rulebas compon design nvision visual highlevel userspecifi visual task autovisu produc represent real time interact graphic scene actual small function program gener render graphic object respons user input program composit small known compon allow user interact explor 3d visual multivari lation space possibl visual produc extrem larg divers autom tool help search thu promis domain autom gener research unfortun straightforward evalu visual program ineffici even specialpurpos 3d graphic hardwar comput render compon scene anim frame expens achiev frame rate 1020hz need make effect interact visual therefor redesign nvision perform care select transform optim program specif exploit frame coher defin tendenc success frame anim sim ilar avoid redund comput frame 7 first visual specif transform cach dataflow graph node whose input valu chang sinc previou fire reevalu cach output valu use instead simpl form memoiz effect situat second partial evalu dynam compil use optim sampl loop user function visual render computationintens part nvision get larg speedup factor subexpress function invari within loop find even though optim sim ple strateg applic improv effici nvision enorm time simplifi implement observ mani languag still batchori assum compil done runtim conclud work improv languag model implement would benefit interact system develop greatli specif conjectur function stage compil expos avail programm runtim produc sort visibl compil nvision autovisu nvision visual system design explor multivari function novel display interact metaphor call world within world use repres higher dimens use realtim 3d graphic stereo display 3d input devic user work highest possibl natur dimens nvision world vari complex design implement quit difficult user get good grasp space function wish view much less space possibl visual function address problem develop autovisu knowledgebas system design implement nvision world world within world world within world method use hierarchi nest graph graph interactor dynam object respond user input consid function fx1 x2 graph height field surfac plot 3d instead gx1 x5 height field use graph slice function creat hold three variabl constant program languag term constant c3 c4 c5 creat closur origin function plot instead use scheme syntax would defin slice function follow defin gslice lambda x1 x2 g x1 x2 c3 c4 c5 allow user interact modifi valu x3 x4 x5 redefin replot gslice whole function space could explor interact defin higherord function actual slice defin gslicer x3 x4 x5 lambda x1 x2 g x1 x2 x3 x4 x5 whenev valu x3 x4 x5 chang reevalu gslicer result function graph height field key world within world repres slice depend graphic creat 3d volum x3 x4 x5 bound axi point within volum determin particular constant c3 c4 c5 call outer world emb anoth 3d world insid inner world contain surfac plot gslice origin constrain lie within bound outer world posit inner world origin rel outer world determin valu x3 x4 x5 user translat inner world within outer world closur recomput result graph redrawn exampl nvision world seen figur 1 thu world within world method compos graph becom browser higherdimension space tradit graph use display function think outer world graph higherord function point within space determin uniqu function user view function particular point place origin function graph techniqu appli recurs visual variabl given function hx1 x8 could three level world inner two would outermost axe would bound x6 x7 x8 higherord function graph within outermost world must return higherord function form gslicer defin hslicer x6 x7 x8 lambda x3 x4 5 lambda x1 x2 h x1 x2 x3 x4 x5 number instanc world may place level give multipl sampl higherdimension space world may rotat scale well tran late oper equival semant translat use adjust world better view present particular 3d exampl obvious world within world method flexibl implement number variat clearli variabl function may also permut bound differ axe howev world may also graphic real izabl dimens 0 3 graph function may also type eg line graph imag volum render requir graph appropri encod function repres world figur 2 show visual multipl inner world volum render use display mani sampl function possibl also extend notion world redisplay portion function graph gener defin world tool virtual interact devic use select valu tool redisplay describ fulli 3 beyond scope paper autovisu nvision world quit complex design variabl may permut function slice mani differ way differ graph type substitut forth factor difficult master figur 1 nvision world repres function 5 variabl hierarchi graph height field inner world encod function constant valu x3 x4 x5 determin posit inner world origin rel outer world user translat inner world nvision updat height field tediou control interact allevi complex build autovisu knowledgebas system transform user function highlevel task specif interact nvision world work autovisu motiv mani design featur new version nvision design process must criteria evalu qualiti particular design specif autovisu use criteria deriv set forth mackinlay work apt 13 gener static graph must express effect express graph present exactli desir data user less effect graph easi read draw infer autovisu tri establish design potenti express potenti effect interact graph display data user must potenti see data time similarli everi view interact 3d graph effect must possibl user find one viewpoint configur visual effect furthermor graph must reason respons visual complex display real time hard work new method repres nvision world function eas burden autovisu function composit small gener compon allow autovisu design wide varieti world yet abl verifi particular implement correct exhibit reason perform repres visual graphic applic one primari optim techniqu exploit coher tendenc neighbor pixel imag region similar often common subexpress comput imag figur 2 nvision world repres function 6 variabl inner world simpl volum render sampl function three variabl encod result color multipl inner world instanti give user quick overview behavior function factor evalu anim gener exhibit frame coher tendenc success imag similar henc comput redun danci unfortun interact applic nvision possibl determin redund compil time depend user action exploit frame coher wrap function applic cach function effect implement simpl form memoiz nvision world specifi use simpl function languag function express describ scene render base user input express evalu repeatedli insid interact loop express languag easili transform execut dataflow graph standard method repres scene graphic applic display list develop earli histori comput graphic hierarch display list repres graphic scene hierarch composit refer frame coordin system object instanc rel particular refer frame howev display list gener represent function depend graphic compon hierarch structur allow object defin rel limit applic particular limit repres complex depend inher nvision world data depend implicit part function specif obviat need special chang propag mechan activ variabl 4 20 whenev function node graph evalu interpret automat distribut result node requir depend specifi partial order function evalu ensur function evalu argument calcul node need evalu regardless often result use languag definit function languag use implement nvision world quit simpl singleassign languag support let followedbi express function appli cation function may multipl return valu also function may tag volatil indic sideeffect current lambda express sup port function defin compil runtim implement direct manipul 18 requir access geometri valu comput previou anim frame therefor need represent state followedbi express provid function form followedbi head rest construct infinit lazi stream first element stream valu first argument evalu first iter interact loop kth element list k 1 valu second argument evalu iter interact loop dataflow transform dataflow graph construct function specif visual function node creat call site express repres argument call recurs transform dataflow graph output port root node connect appropri input port function node constant valu place special node attach directli input port node contain volatil function mark function alway evalu node fire case followedbi express special node two input creat first fire remov token left arc subsequ fire remov token right arc arc creat construct argument graph allow back arc allow valu comput one iter graph use next graph construct transform engin perform two standard optim first constant fold argument function call constant function label volatil express evalu function node output port replac constant node second optim find elimin common subexpress addit reduc comput within node optim tend reduc number node henc overhead execut dataflow graph cach graph construct pass run anim loop evalu graph produc imag screen mention graphic applic often display frame coher impli valu comput particular call site high probabl one iter loop next use special cach mechan wrap around everi function node exploit valu transmit around dataflow graph small data structur call token token bit call changebit indic whether current valu differ previou one constant token changebit true first iter graph forc evalu node fals addit everi function node cach output token node fire none input valu chang function evalu cach token use instead changebit set fals one input valu chang function reevalu cach updat newli comput valu compar correspond cach valu new old valu equal changebit outgo token set fals figur 3 show pseudocod cach mechan equal oper specifi per type user object equal expens comput may assign oper alway return fals larg object often use equal pointer summari node evalu one input valu chang node reevalu produc valu valu subsequ node evalu thu function act lowpass filter result comput filter well valu chang leaf node graph comput avoid except applic volatil node overhead travers graph token type struct tokent bool ch changedbit tx1n input token ty1m output token cach y1m hold newli comput valu eval shorthand multipl return valu y1 forint i1 im forint i1 im figur 3 c pseudocod cach mechan function evalu node nvision partial applic present model essenti comput nvision use curri function serv two purpos mention consid nvision visual represent curri represent seem natur also help simplifi discuss use partial evalu simplic assum function f visual nvision map ntupl real number singl real valu design autovisu first produc new function f 0 partit argument f multipl ntupl correspond level visual curri result produc f 00 level visual correspond partial applic f 00 consid exampl given function autovisu design visual three level world 2d innermost world contain line graph outermost world w0 encod x1 x2 middl world w1 encod x3 x4 innermost world w2 plot valu function x5 curri version g call h0 visual outermost world w0 repres h0 select point w0 appli h0 yield h1 function repres w1 similarli world w2 repres h2 obtain appli point select world note h2 type function encod tradit line graph within world w2 sampl set 1d point fs0 partial evalu within comput anim frame sampl function graph far expens comput henc target optim partial evalu compil sampl loop obviou optim situat complic dynam natur design process run applic unlik mani applic discuss 11 10 must run partial evalu runtim effect autovisu gener program fli dynam higherord function languag process optim facil must oper fli well consid twolevel visual shown figur 2 3 theta 3 theta 3 grid innermost world calcul 4 theta 4 theta 4 grid requir 1700 sam ple reason visual would least theta 16 theta 16 grid within world requir 100 000 sampl anim visual rate say 10hz move entir grid inner world would thu requir one million function sampl per second clearli goal appli partial evalu optim function h previou section languag provid user implement function visual quit simpl consist sole constant variabl primit function serv two purpos partial evalu much simpler write result lightweight ie small fast goal verifi partial evalu use context build full special result partial evalu littl cogen oper constant fold howev enough confirm expect partial evalu import tool visual softwar especi use runtim discuss section sophist special design could substitut within innermost sampl loop want evalu smallest possibl function exampl function would h2 obviou optim therefor would like precis result specialis partial evalu algorithm take argument abstract syntax tree function special list l list variabl eg list repres partial applic level visual order begin outermost level work inward gener autovisu algorithm take first set variabl label static perform bind time analysi syntax tree partit forest complet static sub tree one tree dynam valu algorithm recurs dynam tree prune static subtre gener residu function gener function evalu prune subtre wrap around residu result return result set nest function implement partial applic perform much comput possibl stage compil dynam link ensur optim perform step 6 subtl evalu static paramet yield new valu must made avail residu function step new valu locat ad argument list residu function known ariti rais cover detail 11 page 224 new argument given gener variabl name form gvi seen gener code figur 5 step 7 gener list let bind captur valu comput subtre label static bind splice result function code step 8 prune tree fullystat subtre replac refer variabl defin bind list previou step follow pseudocod use scheme macro notat construct new function scope let construct cover entir algorithm function unpars convert syntax tree sexpress given function g defin g x1 x2 x3 x4 x5 1 given abstract syntax tree list l list variabl name 2 let 3 tl nil return valu lambda vs unpars 4 label leav either constant variabl v v vs els 5 travers depth first label intern node either subexpress node label els perform depth first search tree stop node label node variabl add name list vn gener uniqu variabl name attach node add name vn 7 let bl variabl v vn creat list v unpars st st subtre label v add result list bl 8 let nt copytreet variabl v vn replac subtre label v v 9 let ttl tail tl htl head tl let rfrecurs nt con append vn htl ttl let rfn uniqu function name 10 return valu lambda vs let rfn rf let bl lambda figur 4 pseudocod partial evalu use optim visual function partion list l special gener code figur 5 result compact effici two partial applic result function perform one multipl one addit per call effici present estim effici gain result dataflow cach partial evalu set measur obvious highli depend individu program run howev observ gener trend applic present approxim figur first dataflow architectur introduc extra cost execut graph cach mechan dataflow execut run lambda x1 x2 let rf1 lambda x3 x4 gv0 gv1 let rf0 lambda x5 gv2 gv1 let gv2 gv0 x3 x4 lambda let gv0 x1 x2 lambda x3 x4 figur 5 special code function five variabl cach activ alway miss overhead averag 10 15 percent typic 20 percent node label volatil alway fire remain node one third reevalu averag interact control made vari continu program control climb 100 percent gener though mani control user move time howev node carri equal weight render oper perform volatil node function sampl node intens clean structur function program specif make easi guarante node fire absolut necessari know hard experi true event propag system commonli use user interfac softwar partial evalu dynam compil perform well time requir special typic less second henc unnotic inter action happen function first defin compil load take sever second oper requir disk activ believ given small inmemori code gener delay would also unnotic run time function easi construct unbalanc function visual speedup gain howev function tri sampl time within innermost loop gener less 20 percent origin sometim low percent consid formid multipli discuss section import gain precompil import realiz complex design space visual understand partial evalu dynam compil describ necessari assum moment function user wish visual fix design visual fix except order bind variabl particular axe featur make use nvision pleasant eg allow user specifi new function visual without recompil nvision absolut essenti howev reorient view multidimension space select reorder axe often essenti comprehens function must allow user dynam given fix point ask follow question precomput compil function implement possibl sampl loop possibl bind axe innermost world comput intens could gener compil partiallyevalu optim function gener equat number function must precompil howev gener function sampl three variabl volum render innermost world reduc equat tox 2 perform matrix transposit result sampl appropri dont need gener function permut paramet uniqu set maximum three sampl variabl isx 6 3 graph number sampl function need without permut shown figur 6 clearli even without permut number function need increas unaccept past 9 10 vari abl ideal would like nvision use function mani variabl this100300500700900 figur number function would need precomput user function n variabl implement dataflow interpret implement c datatyp function use comput also defin c simpl preprocessor written awk use provid nice syntax multipl return valu code gener evalu guard cach function runtim type inform gener dynam construct dataflow graph also typecheck scheme bind creat connect dataflow node constant gener scheme macro function use implement syntax function languag perform transform program current scheme interpret stk8 reason effici excel support user nvision function restrict tini languag describ section partial evalu special express sourc languag gener c code compil load dynam conclus futur work though yet seri definit benchmark clear exist system give good perfor manc increas flexibl dataflow system previou implement make redesign implement autovisu much easier clearli mani optim could done cach transform simplist minimum need support lambda function languag appli cach guard hi erarch avoid travers well recomput whole subgraph even better would statist model reevalu behavior node clearli partial evalu dataflow node sampl function may benefici better schedul dataflow graph also possibl larg section could almost certainli convert straight code howev believ done import optim next step finish autom gener system allow us evalu wide varieti visual configur realli put system test believ help pinpoint much accur optim done partial order comput specifi function program precis requir parallel comput believ design extend distribut version interpret though built one yet partialevalu appli similar situat inspir appli partial evalu nvision synthesi effici oper system use partial evalu one optim techniques14 berlin weis use partial evalu special scientif computations2 believ system requir differ solut dynam natur clear us optim techniqu use especi expos languag featur invok runtim leon lee use partial evalu runtim code gener fabiu improv perform mllike language12 current evalu whether fabiu flexibl necessari effici implement nvision fur thermor believ simpl bind time analysi special subsum recent work multilevel special 9 19 applic would benefit sophist languag implement function without loss effici gener believ function compil system ie pars typecheck optim tran format code gener made visibl programm invok directli would possibl build program would simpler yet interact effici make perfect sens one imagin user interfac flexibl user actual program interact act kind onlin script gener compil still batchori believ languag compil need interact truli build interact applic tri small way new version nvision acknowledg would like thank bruce naylor origin inspir transform function scene represent cach dataflow graph research describ support part onr contract n000149410564 nsf grant cda9024735 columbia univers cat high perform comput commun healthcar fund ny state scienc technolog foundat gift digit imag design r wip automat synthesi multimod present compil scientif code use partial evalu scope autom gener graphic interfac autom gener coordin multimedia explan comput graphic principl practic design meta object protocol wrap standard graphic toolkit effici multilevel gener extens program special introduct partial evalu partial evalu automat program gener lightweight runtim code gen erat autom design graphic present relat inform effici implement fundament oper system servic tcl toolkit data character intellig graphic present autom gener intentbas 3d illustr direct manipul step beyond program languag cogen six line use activ data uim data character automat visual heterogen inform tr autom design graphic present relat inform use activ data uim scope autom gener graphic interfac data character intellig graphic present taskanalyt approach autom design graphic present autom gener intentbas 3d illustr synthesi effici implement fundament oper system servic partial evalu automat program gener wip automat synthesi multimod present autom gener coordin multimedia explan tcl comput graphic 2nd ed c cogen six line introduct partial evalu auto visual effici multilevel gener extens program special design meta object protocol wrap standard graphic toolkit data character automat visual heterogen inform compil scientif code use partial evalu ctr david durand paul kahn mapa system induc visual hierarchi websit proceed ninth acm confer hypertext hypermedia link object time spacestructur hypermedia system link object time spacestructur hypermedia system p6676 june 2024 1998 pittsburgh pennsylvania unit state