handl updat crash vod system though sever recent effort develop disk base video server approach ignor topic updat disk server crash paper present prioriti base model build video server handl two class event user event could includ enter play paus rewind fastforward exit well assystem event insert delet serverdownserverup correspond upload new movi block onto disk elimin exist block disk andor experienc disk server crash present algorithm handl event algorithm provabl correct comput polynomi time furthermor guarante certain reason condit continu client experi jitter free present justifi effici techniqu prototyp implement experiment result b introduct last year tremend drop digit cost accompani concomit drop price secondari tertiari storag facil advanc sophist compress technolog three advanc amongst other caus great increas qualiti quantiti research design video server 2 4 11 6 10 16 model video server date assum follow paramet 1 movi store part entireti one disk 2 videoondemand vod system respons handl event occur client event studi includ ffl enter new client system request movi ffl exit exist client system ffl activ continu client eg play fast forward rewind paus handl event refer process vod server assign job differ disk server optim perform criterion varieti algorithm handl event studi research author address depart comput scienc univers maryland colleg park md 20742 event user event sens invok caus activ user vod system howev realiti anoth class event must account call system event includ event serverdown specifi certain disk server crash serverup specifi disk server previous crash insert specifi system manag wish includ new movi block movi disk delet specifi system manag wish delet movi server disk array work date server crash focus import topic recoveri data crash disk realli look satisfi client vod system promis servic base part expect crash disk would satisfi request main focu paper develop vod server algorithm handl user event also handl system event problem updat video server crucial sever applic video data gather regular interv place vod system exampl movieondemand vendor may regular interv includ new movi repertoir movi offer potenti custom movi need place disk array vendor may use lead insert oper similarli newsondemand system new news video audio report may becom avail continu basi need made avail editor news program creat current date news show mani similar system today done take system accomplish updat bring system back obviou undesir aspect way handl updat servic must deni custom wish access server thu lead lost revenu vod vendor algorithm propos paper treat updat collect event schedul occur concurr userev manner ensur 1 exist custom see deterior reason restrict qualiti servic 2 updat get incorpor time fashion particular algorithm flexibl adapt load disk incorpor much updat possibl resourc avail reduc updat rate resourc previous commit 3 system taken order accomplish updat unlik issu updat disk crash certainli studi extens year 2 12 howev consid problem vod server made certain commit custom crash occur vod server must tri ensur client servic disk crash switch anoth disk servic client need furthermor vod server must ensur fact disk crash taken account process new event vein disk server previous crash come back mean new system resourc avail thu enabl vod server take appropri action eg admit wait client redistribut load server achiev good load balanc etc show framework handl updat handl crash well certain limit cours particular propos algorithm call vsuc video server updat crash algorithm handl event includ user event well updat event crash sever nice properti particular disk array server disk array server n disk array client 1 client 2 client m1 client high speed network router figur 1 system structur ffl vsuc guarante certain condit ensur continu jitter free servic client admit make condit precis theorem 41 ffl vsuc also guarante certain condit client deni servic arbitrarili long cf theorem 42 ffl vsuc react client event well system event polynomi time system architectur throughout paper use term video block block denot video segment assum size block arbitrari fix word one vod applic may choos block size frame anoth may consid size 60 frame video data store disk mean start video block locat singl page disk contain block data laid collect disk assum collect disk partit disjoint subset dc 1 furthermor assum disk dc homogen ie ident characterist singl disk server ds regul access disk drive dc entir possibl dc contain one disk could contain note requir two disk collect dc need characterist henc disk dc may vastli differ characterist dc j accomplish heterogen design disk server well known 2 4 11 6 10 16 simplest form disk server piec softwar given physic disk address retriev object locat address case disk server ds mediat access collect dc disk mean given diskid physic disk address server retriev block locat given disk address specifi disk figur 1 show structur system describ inform architectur video server respons follow task 1 event user event system event occur video server must determin handl event accompani creat schedul accomplish event decid instruct must sent disk server involv success handl event exampl user event play instruct could includ fetch client cl id block start page p disk note disk server necessarili need know client ident cl id 2 addit video server may need switch client one disk server anoth exampl client cl id 1 may serv disk server ds 1 new client cl id 20 request movi block avail disk server ds 1 disk server ds 1 alreadi function peak capac may possibl switch client cl id 1 anoth disk server say ds 2 resourc need satisfi client cl id 1 3 third video server may split job smaller manag job distribut smaller job differ server lead better system util 4 fourth whenev event disk server crash occur vod server must reassign exist client server possibl schedul system gener recoveri event minim damag caus crash 21 system paramet vod system particip entiti may divid follow compon 1 server disk server retriev specifi block relev disk 2 client process makingissu request server 3 data includ movi block laid disk order success model vod system develop provabl correct effici algorithm purpos must model paramet well interact compon tabl 23 4 show notat use denot relev paramet server client movi respect throughout paper assum set movi wish store disk movi bnumm block block denot level granular wish store reason mediadata exampl block may singlefram finest granular consecut sequenc 100 frame applic develop free select size block way wish block size select commit use select block size applic word free choos block size wish make choic must stick symbol mean bufi total buffer space associ disk server state total cycl time read oper server state total disk bandwidth associ disk server state timeslic alloc client j state server set server handl request client state set server contain block b movi accord placement map state server clienti set client assign nonzero timealloc disk server state server statusi statu flag server true server work fals otherwis time requir disk server switch one client job anoth client job state buffer space need server match consumpt rate client j state priority prioriti event e state figur 2 server paramet symbol mean consumpt rate client state set data block server provid client j state inusei set consist 3tupl j k b specifi server provid block b movi k client j state activ client set client activ state clientm set client watch movi state rew wini size rewind window client state mean client rewind movi mani block size fast forward window client state mean client fast forward movi mani block play wini time limit client access system state paus wini time limit client paus state figur 3 client paramet symbol mean number block movi figur 4 movi paramet 3 state transit model paper develop state transit model follow properti ffl state feasibl configur system includ inform disk server serv client servic provid client resourc commit server client accomplish servic provid ffl state system may chang time trigger event event includ client event enter exit fastforward paus rewind play well server event serverdown serverup server goe come back manag event insert delet note manag event could either initi human vod system manag tertiari storag devic stage data onto disk though go possibl detail paper 31 state system state consist follow compon 1 set activ client activ client state 2 current cyctimei server system 3 consumpt rate activ client consi state 4 time timealloci j within cyctimei alloc server client j state 5 locat b movi block ie set server block b movi locat state 6 set data block datai j provid server client j state 7 client map specifi client c set server c specifi server serv client c 8 set serverss consist set server state 9 set insert list consist set 3tupl form b movi b block server block insert set use model set insert updat yet handl 10 set delet list consist set 3tupl form b movi b block server block delet set use model set delet updat yet handl 3 system state must satisfi certain simpl constraint list 1 server sum timealloc assign client serv server must less cycl time server captur 2 server process request data data must avail server captur express 3 sum consumpt rate client serv given disk server must exceed total disk bandwidth server captur express 4 server activ client captur express constraint specifi basic constraint tie togeth resourc vod disk server system requir client 32 priorit event inform speak event someth potenti caus vod system make transit current state next new state studi perform disk server multimedia applic vari substanti depend upon space event consid model framework space event allow fall two categori ffl client event enterexitpauseplayfastforwardrewind ffl system event serverup serverdown insert delet event associ integ call prioriti event set attribut exampl event serverup attribut specifi server thu serverup2 specifi event server 2 occur state likewis event insert three attribut server id movi id block number specifi server event assign movi identifi movi block identifi exampl event insert2m1b1 specifi block b1 movi m1 insert server 2 prioriti event chosen either import event inher attribut event exampl handl client event like play inher impli deliv continu data stream client data stream interrupt due reason client may experi degrad qualiti servic degrad avoid choos appropri prioriti play event exampl system event consid delet event case enough disk space avail download hot movi system abl make space delet data block soon possibl expedit data delet event assign high prioriti specifi event handl describ concept underli approach 33 model usag constraint vod system system administr may wish enforc usag constraint paper tri forc constraint upon system howev make avail system administr abil articul enforc certain type constraint feel desir system ffl paus time constraint paus time constraint associ client c upper bound paus winc amount time custom paus movi watch exampl suppos paus win john smith s25 mean far system concern john smith paus time exceed time unit state paus window expir resourc alloc vod system taken back satisfi user request gener custom paus server satisfi custom request continu hold resourc assign system clearli hold resourc indefinit period wise paus window specifi custom upper bound period time custom paus movi ffl fastforwardrewind window constraint addit paus window constraint discuss client c associ fastforward rewind window constraint specifi upper bound number data block client fastforward rewind respect fastforward rewind window associ client c state specifi ff winc rew winc ffl play time constraint final sometim might desir put restrict time client servic server request constraint help prevent valuabl resourc taken arbitrari long time irrespons usag also establish maximum time client access system request everi request eventu satisfi server total play time constraint client specifi play wini exampl play win john smith s180 say john smith 180 time unit finish view current movi client c1 read delet m1b1 c1 rewind m5 b21b40 m4 b01b30 m3 b41b50 m2 b31b60 m5 b21b40 m4 b01b30 m3 b41b50 m2 b31b60 figur 5 delet block 34 updat boundari suppos system state arbitrari point time j client serv server state contain data tupl specifi data provid client server exampl consid situat describ exampl section 31 exampl state shown server 1 present block b2 b3 movi m1 client c 1 suppos system administr wish delet block b1 movi m1 server 1 figur 5 show situat system manag abil make request time precis time request actual schedul ie precis time delet block schedul must take account exist client watch movi wrt server question case question need address happen client c 1 wish rewind b1 delet incorpor immedi upon receipt delet request rewind request client deni situat may may desir thu given point time client associ rewind boundari associ server specifi far back server support rewind request issu client rewind boundari may chang time rewind boundari dual concept fastforward boundari defin definit 31 rewind boundari rewind boundari movi wrt server state defin follow rewind boundarym set min perform empti movi clientm empti rewind exampl let us return movi m2 server 2 state 1 client c 5 read block b4 movi m2 2 client c 6 read block b3 movi m2 block read c5 block read c6 rewind boundari rewind window c5 rewind window c6 block updat min two boundari figur rewind boundari comput 3 client read movi m2 exactli pertin exampl rewind window client c5 2 client c 6 1 rewind boundari associ server 2 movi m2 state given 2 let us tri see case statement mean figur 6 illustr reason ffl two client viz c 5 read part movi m2 disk server 2 tri updat copi movi m2 resid disk server 2 client affect current state therefor client c 5 c 6 client c 5 current read block b4 rewind window length 2 mean go back 2 block movi execut rewind command effect mean access block block b2 ffl likewis client c 6 current read block b3 rewind window length 1 mean go back 1 block movi execut rewind command effect mean access block block b2 ffl minimum two block b2 mean neither client read access block b1 state ffl thu wish updat block 1 lie rewind boundari safe analog situat occur wrt fast forward boundari defin state c3 ffwindow c2 ffwindow c4 ffwindow c1 ffwindow current read block13 figur 7 fast forward boundari comput definit 32 fast forward boundari fast forward boundari movi state defin follow ff boundarym set max perform empti movi clientm empti ff exampl consid singl disk server figur 7 disk server contain sever movi one viz movi m4 shown figur block 15720 movi avail disk server suppos state four client watch particular movi client may watch movi block client watch fast forward window client given client block watch ff win fast forward boundari given ff mean block 1320 movi may updat point time primari use rewind boundari fast forward boundari ensur updat request made system manag user view applic flexibl rewind fast forward within limit fast forwardrewind boundari notic alway possibl guarante exampl figur 7 client c 1 wish fast forward block 6 way satisfi request without switch anoth disk server disk server figur 7 block 6 definit mind readi defin handl event handl event section provid detail algorithm handl event first provid abstract declar specif constitut appropri way handl event provid algorithm success handl event 41 optim event handl specif semant suppos valid state system e event occur section first specifi mean state 0 handl event e occur state done without specifi find state 0 later provid algorithm handl event definit 41 event handl state 0 said handl event e state iff one follow condit true 1 new client e new client c enter request movi 2 old client e old client c exit system 3 continu client e continu client c watch normal view mode block b movi b e continu client c paus c e continu client c fast forward block b block b e continu client c rewind block b block 4 server statu event e disk server crash b e disk server come back rewind windowforward window rewind ff boundari figur 8 exampl defer updat 5 updat event statu movi server delet list 0 handl updat event requir intuit let us suppos movi contain 100 block store entireti one disk server 2 client c 1 watch movi via server let us say watch block 45 c 2 watch block 50 consum 1 block per time unit keep thing simpl let us say system manag wish updat entir movi replac old block new one may view simultan insert delet addit client c rewind window fast forward window 5 block figur 8 show situat ffl stage rewind fast forward boundari movi 40 55 respect ffl mean block may safe updat right away assum enough bandwidth avail ffl block b 40 b 55 updat later ie updat block must defer ffl exampl one time unit block 40 updat 2 time unit block 41 updat skeptic reader immedi wonder whether definit allow us postpon updat event arbitrarili long time answer state updat event could get defer ever avoid situat also assign differ prioriti differ client introduc notion prioriti associ event client initi system initi defer prioriti higher prioriti import event particular e updat event e defer time unit e updat must increment es prioriti factor ffi e thu differ event differ associ priorit step may select system manag base import event determin himher mean prioriti updat event gradual rise till defer longer discuss scheme detail also show idea appli prioriti nondef event 42 prioriti scheme event whenev event occur event assign initi prioriti either system system administr system maintain list default prioriti assign event differ prioriti assign made system administr latter overrid former integ use repres initi prioriti assign though shall see noniniti prioriti assign may realvalu precis integ use initi prioriti assign realli import import rel prioriti order initi prioriti assign figur 9 show initi prioriti assign rational assign discuss 1 system event highest prioriti reason server crash server come back event hard control possibl instanc defer delay crash occur system must transit new state handl crash best possibl 2 next exist client alreadi serv system must highest prioriti reason vod system made commit serv client well must tri honor commit howev exist client may spawn differ event includ exit paus play fast forward rewind event differ prioriti highest prioriti assign event exit process exit event earli desir gener done fast furthermor free resourc may use satisfi client continu client well potenti new client b next highest prioriti class assign paus event first event request new resourc henc satisfi immedi second paus window event may lead futur exit event fact c next highest prioriti class assign play event reason case play event rel easi satisfi mere requir next block movi fetch case next block disk alreadi serv client last two event categori equal prioriti rewind fast forward event may requir substanti switch client ie client may switch current server anoth block skip current server longer block sever jump ahead block current scan 3 new client enter system wait servic lowest prioriti among user event reason video server start serv client servic continu minim disrupt case new client reason expect delay servic start howev shouldnt caus new client wait infinit paper situat handl increas prioriti increment event type event prioriti system server 9 system server 9 client old exit 7 client continu paus 6 client continu play 5 client continu fast forward 4 client continu rewind 4 client enter enter 3 manag delet 27 manag insert 1 figur 9 initi assign prioriti differ event 4 system event delet event highest prioriti reason delet event accomplish simpl oper remov pointer appropri block contrast insert event requir greater resourc eg disk bandwidth need write onto disk prioriti step suppos updat request receiv block b movi server suppos rwb fwb denot respect rewind boundari fast forward boundari associ current state difficult see must rwb ffb updat carri immedi rwb b ffb consequ might need defer updat howev mention defer updat might caus event indefinit delay one possibl way avoid assign higher prioriti updat event client event handl first problem might caus continu stream experi interrupt handl updat event eventu well minim effect continu stream defin prioritystep prioriti step ffi u specifi system administr updat request u ffi u nonneg real number interpret follow current state updat u occur prioriti p shown figur 9 p must either 1 2 state occur consecut 0 defer updat u ffl prioriti p updat event u state p thu exampl suppos u delet request system manag assign step 02 u 6 state chang ie state 6 prioriti updat 32 would exceed prioriti new event occur state mean new client enter system state 6 request movi server question would ask consid higher prioriti updat request u oppos serv custom make step size small system manag allow greater period time elaps make updat higher prioriti new client exampl system manag set ffi u exampl 0002 501 state chang would occur updat us prioriti exceed new client furthermor system manag specifi prioriti step updat differ updat differ associ prioriti would expect real life system readi give algorithm manipul prioriti shown figur 9 prioriti step handl event occur given point time video server updat crash vsuc algorithm main handleev newev oldev f set event cant schedul cycl set client event schedul success timeout evtlist get first event evtlist switch f case case case play rewind fastforward handlecontev evt case paus handlepauseev evt case case enter handleenterev evt case insert handleinsertev evt case delet handledeleteev evt increas prioriti event evtlist merg event evtlist waitlist return procedur handleserverdownev evt data block b crash server updat placement map b visibl event e crash server insert e evtlist preserv sort order procedur handleserverupev evt f data block b recov server updat placement map b visibl procedur handleexitev evt f releas resourc data structur alloc evt procedur handlecontev evt f set block necessari servic evt depend event type way block read disk differ exampl play event certain number continu block read rewindff event intermedi block skip match speed server assign evt contain block block f updat data compon evt insert evt donelist return set server contain block block placement map error f make evt consid block insert decreas evt prioriti insert evt evtlist preserv sort order return set server dserver satisfi resourc constraint f evt prioriti decreas previous f finish svlist 6 finish f select one server randomli svlist event e serv exist 0 6s satisfi e switchabl 6 finish f select one event randomli switchabl evt serv use resourc releas e 0 f releas resourc e 0 updat resourc alloc alloc resourc evt updat resourc alloc alloc resourc e 0 updat resourc alloc put evt donelist finish f make evt schedul prior client next cycl increas evt prioriti ffi 0 evt insert evt waitlist els f make evt consid schedul normal continu client decreas evt prioriti ffi evt insert evt evtlist preserv sort order els f server rserver f specifi criteria f alloc resourc evt updat resourc alloc insert evt donelist procedur handlepauseev evt f yield disk bandwidth updat event next cycl keep statu unchang procedur handleenterev evt f enter event handl way similar handl continu event differ case enter event resourc assign previous therefor check alreadi assign server handl event necessari enter event procedur handleinsertev evt f evt server data block insert specifi evt size data insert evt data size server evt handl use avail resourc f alloc resourc evt updat resourc alloc evt dsize updat placement map inform evt els f dsize cant insert entireti alloc resourc evt updat resourc alloc evt msize reduc evt data size msize increas evt prioriti insert waitlist procedur handledeleteev evt f number delet calcul rewind fast forward boundari movi rewind boundari b evt ff boundari delet b evt updat placement map inform els f evt defer next cycl increas evt prioriti ffi evt insert waitlist easi prove vsuc algorithm describ number nice properti state theorem inform descript properti follow ffl certain reason condit client alreadi admit system experi jitter independ event occur result appli 1 placement map full ie either entir movi avail server none 2 client watch movi entir normal view mode 3 server outag occur ffl everi event eventu get handl long server go eventu come back ffl vsuc algorithm run polynomi time ie current state ev set event occur new state 0 togeth perhap defer event comput polynomi time theorem 41 continu commit suppos current state system c continu client state watch movi normal mode furthermor suppos 1 movi contain entireti server sv 2 2 server goe time 3 updat u client c enter system defer client c enter pr pr u prioriti updat u client c enter system ffi u prioriti step associ updat ffi c prioriti step associ c 4 updat u client c enter system enter system client c enter newpr newpr u prioriti updat u enter system client c movi request event satisfi vsuc algorithm proof sketch vsuc algorithm event diminish system resourc higher prioriti continu client server event defer updat event howev assumpt statement theorem server serv client c go henc highest prioriti event either defer updat continu client suppos server sv serv client c request part full defer event occur server continu servic client c request next block howev defer event occur two possibl 1 suppos defer updat u request client c enter system pr u 5 ffi follow throughout normal play movi client c prioriti higher updat u thu server sv continu serv client c without allow defer event obtain prioriti client c 2 hand defer updat request client c enter system client c guarante obtain prioriti updat newpr henc client c continu serv server sv 2 theorem import implic admiss control new client new updat ffl client admiss guarante continu servic new client c admit system defer updat u need handl client c enter system must know pr u 5 ffi ffl updat admiss guarante continu servic exist client new updat u admit system newpr theorem 42 updat event get handl eventu suppos current state system ev updat event requir set sv server suppos time server sv exist time 0 one server sv go exist time 0 server sv come back updat event ev occur exist time ev ev get handl time ev proof sketch updat event ev get handl execut vsuc algorithm event ev prioriti strictli increas till exce 7 point 0 time handl unless one server need servic event ev restrict statement theorem exist time 0 server sv simultan guarante event handl latest time 2 theorem 43 suppos evt set event occur time time taken vsuc algorithm termin polynomi sum number event evt number defer event proof follow immedi function call main algorithm run time polynomi wrt sum 2 5 experi 51 crash handl vs surviv rate simul experi suggest vod architectur carri mention video server consist multipl disk server possibl differ rel perform charact istic perform characterist disk server defin 1the lowest 4the highest three disk server configur consid experi homogen server highest perform characterist homogen server lowest perform characterist heterogen server differ perform characterist 3 follow experi examin resil video server disk server crash differ disk server configur ie well video server perform crash occur number disk server crash crash time gener randomli assum crash recoveri time uniform recoveri time disk server would avail use compar resili video server repeat experi differ frequenc server crash measur averag number continu client crash figur show effect handl server crash number continu client regardless server configur system could support stream crash handl without crash handl howev depend upon perform characterist server involv number continu client could support vari notabl improv shown case homogen server highest perform characterist frequenc disk crash increas system experi much difficulti schedul client resourc video data crash server avail crash recoveri crash handl handl effect server crash averag number continu client probabl server crash averag number continu client heterogen homogenouslow homogenoushigh figur 10 effect disk server crashes2040608010012040 70 100 130 160 190 220 250 280 310 340 370 400 430 460 490 520 550 580 surviv percentag period server crash homogeneoushigh homogeneouslow hetergen figur 11 effect server crash rate surviv rate 1 number video clip 800 minut video 400 minut video 200 minut video 100 2 size video segment 1080 minut 3 size block 02 second compress video data 4 number request 8002000 request pattern base actual data referenc 5 6 number disk server 7 type disk server buffer disk bandwidth group 3 32mb 16mb group 4 16mb 8mb 8 buffer size avg 50 mb per server 9 disk bandwidth avg 20 mb combin per server tabl 1 paramet use simul measur mani client continu even server crash defin surviv rate ratio client continu serv total number client system crash occur figur 11 show homogen disk server show stabl surviv rate respect disk crash howev heterogen disk server show notic variat surviv rate next experi use differ disk server configur examin effect crash disk server differ perform characterist request pattern video data tabl 1 show sever paramet relat experi experi use four differ type disk server server highest perform characterist belong group 1 server lowest belong group 4 normal oper server higher perform characterist store video segment support concurr stream lower perform characterist therefor effect disk crash vari depend perform characterist server crash figur 12a 12d show mani client crash server continu serv even disk crash vari system load comparison show number continu client crash handl without crash handl crash handl mean stream crash server discontinu uncondit figur differ top line bottom line number client crash disk averag crash handl vod server algorithm satisfi half client affect crash reschedul stream avail server number client server crash number client crash handl number client crash handl continu client beforeaft server crash group1 client system number continu client number client server crash number client crash handl number client crash handl continu client beforeaft server crash group2 client system number continu client continu client group 1 b continu client group 2 number client server crash number client crash handl number client crash handl continu client beforeaft server crash group3 client system number continu client number client server crash number client crash handl number client crash handl number continu client beforeaft server crash group4 client system number continu client c continu client group 3 continu client group 4 figur 12 continu client server crash 52 perform vs segment experi examin perform video server differ segment segment refer continu sequenc video block assum video object divid sever segment equal size segment place disk server way adjac segment place differ disk server otherwis multipl segment merg one larg segment singl server video segment place server manner proport size disk storag avail ie probabl video segment place disk capac 5 gb 5 time probabl segment place 1 gb disk segment placement scheme two disk server adjac segment synchron seamless display video stream soon segment consum first server next segment deliv second server without delay second server deliv next segment time client may experi deterior qualiti servic show later situat relax increas buffer space stream number segment 1 number segment 2 number segment 4 number segment 8 800 1000 1200 1400 1600 1800 2000 2200200600100014001800normal continu client without glitch client system number client experienc glitch number segment 1 number segment 2 number segment 4 number segment 8 1000 1200 1400 1600 1800 2000 220010305070averag interrupt time experienc client client system length cycl number continu client b averag block time number segment 1 number segment 2 number segment 4 number segment 8 800 1000 1200 1400 1600 1800 2000 22002060100140180averag initi respons time client system respons time cycl number segment 1 number segment 2 number segment 4 number segment 8 800 1000 1200 1400 1600 1800 2000 2200300500700900number updat execut client system number updat execut c averag initi wait time number updat execut figur 13 experi result figur 13a show mani stream experi intermedi stream delay due server switch retriev adjac segment video object store entireti need server switch ongo stream number segment movi increas number client experienc intermedi delay due server switch increas figur 13b examin averag intermedi stream delay experienc client show video object segment averag stream delay decreas number segment increas due fact smaller segment client stay server shorter time larger segment shorter stay server resourc avail disk server becom flexibl therefor server switch done easili frequent figur 13a 13b might conclud store video object entireti one disk server best scheme two criteria show scheme disadvantag well figur 13c show server respons time specifi long client wait till first frame video object display moder larg number client system system respons time increas sharpli number segment decreas also number updat done simul increas number segment increas figur 13d show mani updat request done simul furthermor mention earlier intermedi stream delay due server switch compens certain degre increas buffer space stream figur 13b averag stream delay less cycl total number client 1800 therefor increas buffer space stream number client experienc actual intermedi display delay reduc 6 conclus though extens work handl disk crash work occur area recoveri data crash disk likewis though extens work develop system support handl vcrlike function video server work ignor two possibl 1 oper video server updat might occur problem handl updat adequ address literatur 2 similarli oper video server one server might crash andor otherwis becom inaccess mean client current serv server must satisfi way date formal theoret work extend vod server handl possibl primari aim paper provid formal model vod system capabl handl event well provid vsuc algorithm neatli handl variat resourc avail may aris consequ event particular vsuc algorithm mani nice properti knowledg propos first time ffl first vsuc algorithm guarante certain reason condit user vod server alreadi made commit experi disrupt jitter servic long watch movi normal mode ffl second vsuc algorithm guarante certain reason restrict request made continu client deni servic forev ie eventu handl ffl third vsuc algorithm react user event system event polynomi time acknowledg work support armi research offic grant daah049510174 daah 049610297 arparom lab contract f3060293c0241 arpa order nr a716 armi research laboratori cooper agreement daal019620002 feder laboratori atirp consortium nsf young investig award iri9357756 grate dr b prabhakaran care read manuscript make mani use comment critiqu r stagger stripe multimedia inform sy tem fault toler design multimedia server eventbas model continu media data heterogen disk server support fulli interact playout disk arraybas video server gener interv cach polici mix interact long video workload toward workload character video server digit librari applic distribut hierarch storag manag videoon demand system multimedia repositori issu design storag server videoondemand case redund array inexpens disk introduct disk drive model disk stripe distribut design perform tradeoff cluster video server design ondemand multimedia servic optim placement multimedia object disk array schedul algorithm modern disk drive tr