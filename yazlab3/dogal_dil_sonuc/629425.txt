gener algorithm parallel sort product network abstractw gener wellknown oddeven merg sort algorithm origin due batcher 2 show gener algorithm appli sort product networksif g arbitrari factor graph n node rdimension product contain nr node algorithm sort nr key store rdimension product g or2fn time fn depend g show factor graph g fn establish upper bound or2n time complex sort nr key product networkfor product network bound r eg grid lead asymptot complex sort nr key optim sever instanc product network factor graph fnorm log2n lead asymptot run time orm log2n sort nr key network bound n eg hypercub asymptot complex becom or2w show appli algorithm sever case wellknown product network well other introduc recent compar perform algorithm wellknown algorithm develop specif network well other result comparison led us conjectur propos algorithm probabl best determinist algorithm found term low asymptot complex small constant b introduct recent increas interest product network literatur partli due eleg mathemat structur product network partli due fact sever wellknown network hypercub grid tori instanc famili product network mani instanc product network propos recent product de bruijn network 9 28 product petersen graph 25 meshconnect tree 8 product complet binari tree gener class rout properti product network studi 4 10 topolog embed properti product network analyz 9 paper asid gener studi algorithm import class network paper make attempt toward fill gap present gener sort algorithm product network first version algorithm present well gener algorithm sever differ problem propos 11 expect research eventu develop varieti addit algorithm product network 2 batcher present two effici sort network algorithm deriv network present number differ parallel architectur like shuffl exchang network 30 grid 22 31 cubeconnect cycl 27 mesh tree 24 one batcher sort network main compon subnetwork sort biton sequenc biton sequenc concaten nondecreas sequenc key nonincreas sequenc key rotat sequenc sort algorithm base method gener call biton sorter sever paper devot gener biton sorter 3 17 21 23 main compon sort network propos batcher 2 subnetwork merg two sort sequenc singl sort sequenc call oddeven merg network sever paper gener network merg k sort sequenc k 2 gener call kway merg network exampl green 12 construct network base 4merg drysdal young tseng lee 32 parker parberri 26 lisza batcher 20 lee batcher 16 construct network base multiway merg similarli algorithm base multiwaymerg concept present commonli known leighton columnsort algorithm 19 initi object algorithm show exist boundeddegre onnod network olog n time network permut phase hardwir sort done ak network limit applic practic purpos howev aggarw huang 1 show possibl use columnsort basi appli recurs parker parberri network cite also base modif columnsort algorithm behav nice number key larg compar number processor paper develop anoth multiwaymerg algorithm merg sever sort sequenc singl sort sequenc key multiwaymerg oper deriv sort algorithm show use approach obtain effici sort algorithm homogen product network basic spirit multiwaymerg algorithm somehow similar recent version columnsort 18 page 261 although develop independ outperform columnsort due fundament differ interpret basic concept first algorithm base seri merg process recurs appli columnsort base seri sort step time use sort n 2 key columnsort hand use sever recurs call order merg second observ fundement relationship structur properti product network definit sort order abl avoid rout step requir columnsort algorithm among main result paper show time complex sort n r key n r node rdimension product graph bound 2 n also illustr special case product network run time 2 olog 2 n sort n r key grid meshconnect tree 8 9 bound number dimens algorithm run asymptoticallyoptim time rdimension hypercub algorithm asymptot complex 2 batcher oddeven merg sort algorithm hypercub 2 although asymptot faster sort algorithm hypercub 6 practic use reason number less 2 20 key 18 note howev random algorithm perform better hypercub network batcher algorithm practic 5 adapt approach product network appear interest problem futur research product de bruijn network 9 28 approach yield asymptot complex 2 log 2 n time sort n r key reduc olog 2 n time number dimens fix run time obtain product shuffleexchang network also product shuffleexchang network equival comput power ie asymptot complex algorithm product de bruijn network 9 run time asymptot complex sort n r key n r node de bruijn shuffleexchang network batcher algorithm final summar main contribut paper effect implement sort algorithm homogen product network ffl obtain gener upper bound run time requir sort homogen product network regardless topolog factor network use build ffl show sever import instanc homogen product network upper bound deriv match run time mostpopular algorithm develop specif network paper organ follow section 2 present basic definit notat use paper section 3 present multiwaymerg algorithm show use sort section 4 show implement multiwaymerg sort algorithm homogen product network analyz time complex section 5 appli algorithm sever homogen product network obtain correspond time complex conclus paper given section 6 figur 1 recurs construct multidimension product network factor twodimension product c threedimension product definit notat 21 definit notat relat product network let g nnode connect graph defin rdimension homogen product follow given graph g vertex set arbitrari edg set eg rdimension homogen product g denot pg r graph whose vertex set v whose edg set e pgr defin follow two vertic adjac pg r follow condit true 1 x differ exactli one symbol posit 2 differ symbol index paper assum rtupl label node pg r index 1 delta delta delta r 1 refer rightmost posit index r refer leftmost posit index intuit level construct pg r pg g describ refer figur 1 let x node pg rgamma1 let g rgamma1 graph obtain prefix everi vertex x pg rgamma1 u vertex x becom ux first place vertic pg rgamma1 along straight line shown figur 1 draw n copi pg rgamma1 vertic ident label fall column next extend vertex label obtain g rgamma1 final connect column interconnect pattern factor graph g ux connect u 0 x u construct use g rgamma1 refer uth copi pg rgamma1 explicitli state fact g rgamma1 uth copi dimens r extend notat allow us add new symbol posit vertex label purpos use g mean vertex label pg extend insert valu u posit result symbol posit j move posit allow us observ construct preced paragraph could restat g posit leftmost posit convers obtain g subgraph eras dimensioni edg pg r process repeat recurs describ simpl extens notat use u vpg ij rgamma2 refer subgraph isomorph pg rgamma2 obtain eras connect dimens j pg r particular subgraph obtain distinguish uniqu combin u v valu index posit j respect notat similarli extend eras arbitrari number dimens order valu squar bracket correspond order superscript 22 definit properti sort order arbitrari factor graph g vertex label 0 defin ascend order data sort howev need defin order node pg r determin final locat sort key order defin known snake order rdimension product graph pg r 1 snake order correspond order use label node g 2 r 1 suppos snake order alreadi defin pg rgamma1 g r order pg rgamma1 u even revers order u odd b valu g r preced valu vp g r snake order product graph close relat graycod sequenc fundament properti two consecut term sequenc differ exactli one bit deal nari symbol instead binari symbol therefor need use nari graycod sequenc first recal definit ham distanc ham weight let z rtupl f0 ham distanc z ds absolut valu ham weight rtupl allow one element rtupl special symbol defin later symbol rtupl symbol index posit omit whenev rtupl involv comput ham distanc ham weight say sequenc q r nari graycod sequenc order r element rtupl f0 two consecut element unit ham distanc consequ ham weight two consecut term differ pariti use rq r denot sequenc obtain list element q r revers order definit show one way construct nari graycod sequenc arbitrari order recurs let uq k denot sequenc obtain prefix element q k symbol u u even prefix element rq k u u odd definit 3 nari graycod sequenc order r denot q r obtain 1 2 concaten sequenc insid curli bracket note q r fact snake order defin vertic rdimension product network pg r exampl 3ari graycod sequenc order r 112 102 101 100 200 201 202 212 211 210 220 221 222g note q r could defin insert valu u posit definit rather leftmost posit observ allow us use uq denot subsequ q r contain valu u posit especi interest subsequ uq 1 1 given u element subsequ posit u u given observ ident relationship q r snake order node pg r follow pg r contain sequenc key sort snake order key subgraph g 1 also sort snake order posit u etc whole sequenc consid divid q r n rgamma1 subsequ n consecut element observ definit 3 two element within subsequ would differ rightmost symbol thu distinguish particular subsequ element common symbol posit 2 use denot group sequenc obtain q r fashion stand 0 exampl given q 3 group sequenc stand 0 1 2 thu explicitli write element g form ham weight g even form ham weight g odd moreov two success element still unit ham distanc given relat q r pg r element g identifi dimension1 gsubgraph pg r gsubgraph pg r node label valu symbol posit 2 say gsubgraph even resp odd ham weight correspond element even resp odd extend notat write q 21 rgamma2 identifi set pg 2 subgraph dimens f1 2g two consecut element q 21 rgamma2 unit ham distanc thu element q 21 rgamma2 order graycod sequenc element rgamma2 even odd ham weight correspond subgraph said even odd 3 multiwaymerg sort algorithm section develop basic step propos sort algorithm without regard specif network discuss even matter whether algorithm perform sequenti parallel subsequ section give implement detail product network sort sequenc defin sequenc key multiwaymerg algorithm combin n sort sequenc singl sort sequenc sinc case implement algorithm product network assum power n henc result sort sequenc j contain n k key heart propos sort algorithm multiwaymerg oper thu spend much time discuss merg process order build intuit understand basic idea merg oper assum key sort place twodimension block shown figur 2 impli twodimension organ data product network implement algorithm product network row data contain store 1dimension subgraph product graph twodimension organ figur 2 reader conveni visual happen data variou step algorithm use term row column order refer group key subject step algorithm use term row column interpret impli physic organ data two dimension array subject clarif initi assum sort sequenc differ row see figur 2 also assum exist algorithm sort make assumpt effici algorithm yet section 5 discuss sever possibl way obtain effici algorithm purpos purpos assumpt maintain gener discuss independ factor network use build product network show correct algorithm use zeroon principl due knuth mn figur 2 initi situat merg process start sort sequenc repres horizont block row 13 zeroon principl state algorithm base compareexchang oper abl sort sequenc zero one sort sequenc arbitrari key 31 multiwaymerg algorithm consid merg n sort sequenc singl larg sort sequenc initi situat pictur figur 2 merg oper consist follow step 1 distribut key sort sequenc among n sort subsequ 1 subsequ b ij form equival write key n theta n array snake order shown figur read key columnwis column j array becom b ij 1 note subsequ b ij sort sinc key rel order appear figur 4 illustr situat complet process n row contain n sort subsequ b ij b ij box figur 4 correspond column key figur 3 written horizont exampl step 2 merg n subsequ b ij found column j figur 4 singl sort sequenc c j 1 done parallel column recurs call multiwaymerg process total number key column least n 3 number key column figur 4 n 2 sort algorithm sequenc length n 2 use alreadi assum exist algorithm recurs call merg process would make much progress n 2 point clear end section end step write result subsequ vertic n column length situat step illustr figur 5 mn figur 3 distribut key among n subsequ b ij thick line repres key snake order mn figur 4 situat step 1 sequenc distribut n subsequ subsequ contain mn element still sort figur 5 situat merg subsequ column key sort top bottom step 3 interleav sequenc c j singl sequenc sequenc form simpli read theta n array figur 5 rowmajor order start top row sequenc redrawn figur 6 c j sequenc figur 5 chang organ data figur 6 ident figur 5 except regard one big sequenc read rowmajor order prove almost sort situat shown figur 6 key sort take valu zero one shade area repres posit zero white area repres posit one obtain read valu rowmajor order potenti dirti area window key sort length larger n 2 fact shown lemma 1 step 4 clean dirti area start divid sequenc mn subsequ n 2 consecut key denot subsequ 1 ith subsequ form first n row key figur 6 equival figur 5 concaten obtain next n row concaten obtain e 2 see figur 7a independ sort subsequ row figur 7a altern order use algorithm assum avail sort n 2 key e transform sequenc f see figur 7b f contain key e sort nondecreas order even nonincreas order odd appli two step oddeven transposit sequenc f ie vertic direct figur 7b first step oddeven tran posit pair sequenc f f i1 even compar element element two sequenc g g i1 form shown figur g second step oddeven transposit g g i1 row figur sequenc obtain interleav order goe top bottom read success row left right shade area fill zero white area fill one boundari area n row shown lemma 1 odd compar similar manner form sequenc h h i1 figur 7c show situat two step oddeven transposit final sort sequenc h nondecreas order gener sequenc figur 7d final sort sequenc j concaten sequenc need show process describ actual merg sequenc use zeroon principl mention earlier sort input sequenc zero one sequenc obtain complet step 3 sort except dirti area never larger n 2 proof assum merg sequenc zero one let z number zero sequenc 1 rest key one step 1 break sequenc n subsequ b ij 1 easi observ way step 1 implement number zero subsequ b ij bz 1 therefor given sequenc b ij differ number zero one start step 2 column j compos subsequ b ij 1 end step 2 zero begin sequenc number zero sequenc c j sum number zero b ij fix j 1 thu two sequenc c j differ n zero step 3 interleav n sort sequenc sequenc take one key time sequenc c j sinc two sequenc c j differ number zero n sinc n sequenc interleav b c f f figur 7 clean dirti area length window key mixtur one zero n 2 show last step actual clean dirti area sequenc lemma 2 sequenc j obtain concaten sequenc snake order complet step 4 sort proof know dirti area sequenc obtain step 3 length n 2 divid sequenc consecut subsequ dirti area either fit exactli one subsequ distribut two adjac subsequ dirti area fit one subsequ e k initi sort oddeven transposit sequenc h contain exactli key sequenc e 1 last sort sequenc h final concaten sequenc yield sort sequenc j howev dirti area distribut two adjac subsequ e k two subsequ contain zero one figur 7a present exampl initi situat first sort zero locat one side f k side f k1 see figur 7b one two oddeven transposit affect distribut go move zero second sequenc first one first second two step h k fill zero h k1 fill one see figur 7c therefor one sequenc contain zero one combin last step sort sort sequenc entir sequenc j sort see figur 7d 32 need special algorithm n 2 key reader observ end step 3 dirti area still length n 2 even merg n sequenc length n thu make much progress appli multiwaymerg process case fundament properti merg process weak algorithm difficulti overcom number way keep run time low depend applic area basic idea merg algorithm exampl interest build sort network implement subnetwork base recurs updat n smaller valu merg sequenc length repeat recurs singl sequenc obtain paper focu develop sort algorithm product network assum avail special sort algorithm design twodimension version product network consider subsequ section discuss sever method obtain algorithm consid specif product network effici special algorithm import effect overal complex final sort algorithm propos approach case consid turn result run time either asymptot optim close optim number dimens bound 33 sort algorithm use algorithm algorithm sort sequenc length n 2 easi obtain sort algorithm sort sequenc length n r r 2 first divid sequenc subsequ length n 2 sort subsequ independ appli follow process one sequenc remain 1 group sort sequenc obtain set n sequenc figur 1 sort n r key initi n rgamma3 group contain n sort sequenc length n 2 2 merg sequenc group singl sort sequenc use algorithm shown previou section one sort sequenc termin otherwis go step 1 4 implement homogen product network mainli focu implement multiwaymerg algorithm kdimension product network pg k detail sort algorithm trivial follow merg oper describ initi scenario n sort sequenc store n subgraph g k pg k snake order sort algorithm start processor hold one key sort sort algorithm processor need enough memori hold two valu compar throughout discuss step implement illustr threedimension product graph g node interconnect pattern g irrelev discuss step 1 step need comput rout recal section 2 subgraph u vpg k1 kgamma2 g k contain subsequ key sort snake dimens 3 dimens 2 dimens 1 figur 8 initi situat exampl 3dimension product graph dimens 1 dimens 3 dimens 2 b dimens 1 dimens 3 dimens 2 figur 9 step 2 multiwaymerg algorithm order posit key subsequ respect total sort sequenc v therefor sequenc b uv alreadi store subgraph u vpg k1 kgamma2 sort snake order illustr figur 8 three sequenc merg avail snake order three subgraph form remov edg dimension3 subgraph 0p g 3 leftmost subgraph figur 8 contain 0 subgraph 1p g 3 center contain 1 subgraph 2p g 3rightmost subgraph contain 2 exampl b uv contain n key fit one g subgraph gener b uv avail snake order u vpg k1 kgamma2 exampl u vpg 31 realli correspond gsubgraph dimens 2 ie column figur 8 step 2 step implement merg togeth sequenc subgraph u vpg k1 u valu one sequenc vp g 1 2 merg done directli sort algorithm pg 2 step done recurs call multiwaymerg algorithm subgraph vp g 1 merg sort dimens 3 dimens 2 dimens 1 figur 10 step 3 multiwaymerg algorithm sequenc store u vpg k1 subgraph illustr step figur 9 clariti first show initi situat figur 9a situat figur 8 dimens 1 3 exchang show subsequ merg togeth explicitli b uv sequenc merg togeth column figur 9a result merg shown figur 9b c v sort snake order found subgraph vp g 1step 3 step directli done reintroduc dimension1 connect pg k read key snake order pg k graph movement data involv step explicitli show result sequenc exampl figur 10 switch dimens 1 3 figur 9b reader observ figur 10 key appear close fulli sort order compar figur 10 figur 11d show final sort order fact know lemma 1 case sort zero one left small dirti area impli everi key within distanc n 2 final posit step 4 last step clean potenti dirti area recal 2dimension subgraph 2 pg k identifi group sequenc element g q 21 kgamma2 identifi uniqu pg 2 subgraph dimens f1 2g pg 2 subgraph order correspond group sequenc defin snake order subgraph step independ sort key subgraph dimens f1 2g sort order altern consecut subgraph subgraph sort snake order use algorithm assum avail two dimens result step illustr figur 11a perform two step oddeven transposit subgraph first step key node odd pg 2 subgraph compar key correspond node predecessor subgraph key exchang key predecessor subgraph larger figur 11b show result first step exampl key 3 2 node 1 2 1 1 2 2 exchang two key valu 4 node 0 2 1 0 2 2 second step oddeven transposit key node even pg 2 subgraph compar possibl exchang predecessor subgraph figur 11c show result second step figur key 5 node 200 exchang key 6 node 100 dimens 3 dimens 1 dimens 2 dimens 3 dimens 1 dimens 2 b3 4 4 dimens 3 dimens 1 dimens 2 c dimens 3 dimens 1 dimens 2 figur 11 step 4 multiwaymerg algorithm final sort within 2dimension subgraph end merg process figur 11d one point need examin detail depend graph g node hold two key need compar possibl exchang may may adjac pg k g hamiltonian path node g label order appear hamiltonian path defin sort order g two step oddeven transposit easi implement sinc involv commun adjac node pg k howev g hamiltonian eg complet binari tree two node whose key need compar may adjac alway common g subgraph case permut rout within g may use perform compareexchang step follow first two node need compar key send key depend result comparison node either keep origin key key alreadi correct order drop origin key keep new order cover gener case comput run time assum g hamiltonian thu implement compareexchang step use permut rout algorithm see whether g hamiltonian effect constant term run time complex function 41 analysi time complex analyz time taken sort algorithm initi studi time taken merg process kdimension network time denot k n also denot time requir sort pg 2 rn denot time requir permut rout g lemma 3 merg n sort sequenc n kgamma1 key pg k take k step proof step 1 take comput time step 2 recurs call merg procedur dimens henc take kgamma1 n time step 3 take comput time final step 4 take time one sort pg 2 two permut rout g step oddeven transposit one sort pg 2 therefor valu k n recurs express initi condit yield deriv valu r n theorem 1 factor graph g time complex sort n r key pg r proof algorithm section 32 time taken sort n r key pg r time taken sort 2dimension subgraph merg block n sort sequenc increas number dimens express time follow r never smaller rn time obtain r follow corollari present asymptot complex algorithm one main result paper corollari 1 g connect graph time complex sort n r key pg r proof prove claim first comput complex sort algorithm rdimension toru refer result 8 show g connect graph pg r emul comput n r node rdimension toru embed toru pg r dilat 3 congest 2 sinc embed constant dilat congest emul constant slowdown 14 fact slowdown 6 need g hamiltonian cycl final use slowdown valu comput exact run time pg r comput complex sort rdimension toru basic need sort algorithm literatur sort n 2 key twodimension toru snake order also need algorithm permut rout nnode cycl exampl use sort algorithm propos kund 15 complex also known permut rout done nnode cycl n2 step henc sort n r node rdimension toru 3r gamma 1 step sinc emul algorithm pg r requir slowdown factor 6 arbitrari n r node rdimension product network sort complex 5 applic specif network section obtain time complex sort use multiwaymerg sort algorithm present sever product network literatur obtain upper bound valu 2 n rn network use valu theorem yield desir run time grid schnorr shamir 29 shown possibl sort n 2 key n 2 node 2dimension grid 3non time step also trivial show time perform permut nnode linear array rn valu 2 n rn impli algorithm take 4r gamma 1 step sort n r key n r node rdimension grid number dimens r bound express simplifi algorithm asymptot optim r fix sinc diamet grid bound number dimens valu may need travel far diamet network r bound diamet n r node grid mean run time algorithm optim valu factor r meshconnect tree mct network introduc 9 extens studi 8 obtain product complet binari tree due corollari 1 sort n r node rdimension meshconnect tree 2 n time step r bound run time run time asymptot optim r fix bisect width n r node rdimension mct rgamma1 shown 8 worst case may need move omegagamma n r valu across bisect network r fix algorithm bisectionbas lower bound factor r 2 diameterbas lower bound use grid help tighten lower bound diamet mct logarithm number node 8 appear interest investig possibl sort lower run time 2 n r bound algorithm exist must use complet differ approach valu 2 n theorem 1 less due bisect width twodimension mct network hypercub hypercub fix 2 hard sort snake order twodimension hypercub 3 step permut rout onedimension hypercub take one step therefor time sort hypercub algorithm run time run time wellknown batcher oddeven merg algorithm hypercub fact batcher algorithm special case algorithm petersen cube petersen cube rdimension product petersen graph shown figur 12 petersen graph contain 10 node consist outer 5cycl inner 5cycl connect five spoke product graph obtain petersen graph studi 25 like hypercub product petersen graph fix n therefor way graph grow increas number dimens sinc petersen graph hamiltonian twodimension product contain twodimension grid subgraph thu use grid algorithm sort 100 key twodimension product petersen graph constant time consequ rdimension product petersen graph time constant involv small go unreason larg either may well figur 12 petersen graph possibl improv constant develop special sort algorithm twodimension product petersen graph howev outsid scope paper product de bruijn shuffleexchang network sort twodimension instanc use embed factor network present 9 small constant dilat congest particular n 2 node shuffleexchang network embed n 2 node 2dimension product shuffleexchang network dilat 4 congest 2 also n 2 node de bruijn network embed 2dimension product de bruijn network dilat 2 congest 2 sort n 2 node shuffleexchang de bruijn network done olog 2 n time use batcher algorithm 30 thu sort n 2 node 2dimension product shuffleexchang de bruijn network emul n 2 node shuffleexchang de bruijn network 2 step use theorem 1 algorithm take 2 log 2 n time step sort n r key r bound express simplifi olog 2 n r bound run time algorithm asymptot run time sort n r key n r node de bruijn shuffleexchang graph batcher algorithm come across interest open problem see possibl sort product network asymptot less time unbound number dimens 6 conclus paper present unifi approach sort homogen product network present algorithm base gener oddeven merg sort algorithm 2 obtain 2 n upper bound complex sort product network r dimens n r node time taken sort algorithm grid meshconnect tree bound number dimens optim hypercub algorithm take 2 reach asymptot complex oddeven merg sort algorithm hypercub product network algorithm run time compar network instanc product de bruijn shuffleexchang graph run time 2 log 2 n asymptot run time batcher algorithm n r node shuffleexchang de bruijn graph theoret point view interest investig better algorithm product network r bound sever interest altern appear feasibl although time investig instanc could tri gener hypercub random algorithm product network r network complex sort graph problem simul crcw pram interconnect network sort network applic biton sort network unifi framework offlin permut rout parallel network comparison sort algorithm connect machin cm2 determinist sort nearli logarithm time hypercub relat comput improv dividesortmerg sort network comput properti mesh connect tree versatil architectur parallel comput product network logarithm diamet fix degre gener framework develop adapt faulttoler rout algorithm homogen product network processor interconnect improv nonadapt sort algorithm search sort workpreserv emul fixedconnect network optim sort multidimension meshconnect comput multiway merg sort network sort multipl biton sequenc introduct parallel algorithm architectur array tight bound complex parallel sort modulo merg sort network gener biton sort network biton sort meshconnect parallel comput kway biton sort effici vlsi network parallel process base orthogon tree fold petersen network new commun effici multiprocessor topolog construct sort network ksorter cubeconnect cycl versatil network parallel comput productshuffl network toward reconcil shuffl butter fli optim sort algorithm mesh connect com puter parallel process perfect shuffl sort meshconnect parallel comput parallel sort scheme whose basic oper sort n element econom construct sort network tr ctr yuhshyan chen chihyung chang tsunghung lin chunbo kuo gener faulttoler sort algorithm product network journal system architectur euromicro journal v51 n3 p185205 march 2005 shanchyun ku biingfeng wang tingkai hung construct edgedisjoint span tree product network ieee transact parallel distribut system v14 n3 p213221 march