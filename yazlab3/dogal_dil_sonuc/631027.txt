perform comparison three modern dbm architectur introduct power workstat connect local area network lan inspir new databas manag system dbm architectur offer high perform characterist author examin three softwar architectur configur clientserv cs radunifi type dbm ru enhanc clientserv ec specif function compon design rational discuss three simul model use provid perform comparison differ job workload simul result show ru almost alway perform slightli better cs especi light workload ec offer signific perform improv cs ru reason updat rate ec cs ru perform ratio almost proport number particip client less client author also examin impact certain key paramet perform three architectur show ec scalabl two b introduct central dbmss present perform restrict due limit resourc earli eighti lot research gear toward realiz databas chine special expens hardwar softwar use built complex system would provid high transact throughput rate util parallel process access multipl disk recent year though observ differ trend research technolog local area network matur workstat becam fast inexpens data volum requir continu grow rapidli 2 light develop comput systemsand dbmss particular order overcom long latenc adopt altern configur improv perform paper present three configur dbmss strive high throughput rate name standard clientserver23 radunifi type dbms19 enhanc clientserv architecture16 primari goal studi examin perform relat issu three architectur differ workload achiev develop close queu network model architectur implement simul packag experi differ workload express context job stream analyz simul perform ratio deriv conclus system bottleneck final show light updat rate 15 enhanc clientserv offer perform almost proport number particip workstat configur 32 less workstat hand radunifi perform almost alway slightli better pure clientserv architectur section 2 survey relat work section 3 discuss three dbm architectur identifi specif function compon section 4 propos three close queu network model three configur talk briefli implement simul packag section 5 present differ workload simul experi discuss deriv perform chart conclus found section 5 relat work number studi tri deal similar issu like investig roussopoulo kang 18 propos coupl number workstat mainfram workstat mainfram run dbm workstat free select download data mainfram paper describ protocol cach mainten cach data hagman ferrari 11 among first tri split function databas system offload part dedic backend machin instrument ingr dbm assign differ layer dbm two differ machin perform sever experi compar util rate cpu disk network among result found gener 60 overhead disk io suspect overhead similar size cpu cycl attribut find mismatch oper dbm system cooper server number workstat engin design environ examin 13 dbm prototyp support multilevel commun workstat server tri reduc redund work end describ dewitt et al 8 examin perform three workstationserv architectur objectori dbm point view three approach build server propos object server file server detail simul studi present differ load concurr control report page file server gain object cluster page object server heavili depend size workstat buffer final file page server perform better experi write type transact respons time measur wilkinson niemat 26 propos two algorithm maintain consist workstat cach data algorithm base cach notifi lock new lock compat matric propos novel point work server concurr control cach consist treat unifi approach simul result show cach lock alway give better perform twophas lock notifi lock perform better cach lock whenev job cpu bound alonso et al 2 support idea cach improv perform inform retriev system consider introduc concept quasicach differ cach algorithm allow variou degre cach consist discuss studi use analyt queu model deli roussopoulo 6 simul approach examin perform server base inform system light updat show architectur offer signific transact process rate even consider updat server resid data 17 describ modern clientserv dbm architectur report preliminari result perform 7 examin scalabl three clientserv dbm configur carey et al 5 examin perform five algorithm maintain consist cach data clientserv dbm architectur import assumpt work client data maintain cach memori disk resid wang row 25 similar studi examin perform five cach consist algorithm clientserv configur simul experi indic either two phase lock certif consist algorithm offer best perform almost case work indirectli relat issu examin paper goda distribut file system project 20 cach coher algorithm describ 3 ec modelpres herei slightli modifi abstract system design describ 18 discuss 16 paper extend work three way first give rel perform measur two exist dbm configur analyz role key system paramet valu final provid insight scalabl architectur 3 modern dbm architectur briefli review three altern modern databas system architectur highlight differ number reason made configur realiti 1 introduct inexpens extrem fast processor workstat larg amount main memori medium size disk 2 evergrow volum oper databas 3 need data stage extract user class portion databas defin user oper region although architectur gener describ relat model 31 clientserv architectur cs clientserv architecturec extens tradit central databas system model origin engin applic data mostli process power client central repositori check protocol predominantli use maintain data consist cs databas 23 client run applic workstat client databas access server depict figur 1a one client shown sake present commun server client done remot call local area network lan 22 applic process carri client site leav server free carri databas work model also applic singl machin one process run server other run client configur avoid transmiss data network obvious put burden system load server paper assum server client process run differ hardwar 32 radunifi type dbm architectureru broad avail high speed network fast process diskless workstat princip reason introduct radunifi type dbm ar chitectureru present rubinstein et al 19 main object configur improv respons time util client process capabl memori architectur depict figur 1b role server execut low level dbm oper lock page readswrit figur 1b suggest server maintain lock data manag client perform queri process determin plan execut datapag retriev sent diskless client memori carri rest process studi experiment result present mostli look oper perform much better tradit clientserv configur also acknowledg architectur may perform well assumpt light updat load specif system prototyp requir one server databas writer permit time novel point architectur introduct client cach memori use databas process therefor client use cpu process page resid cach server degener file server lock manag paper 19 suggest transfer page appropri client memori give improv respons time least case small medium size retriev oper natur depend size client cach memori 33 enhanc clientserv architectur ec ru architectur reliev cpu load server littl biggest bottleneck io data manag enhanc clientserv architectur reduc cpu io load cach queri result incorpor client fullfledg dbm increment manag cach data 15 16 share databas server dbm commun softwar cs server commun softwar applic soft client commun softwar applic soft server dbm commun softwar share databas share databas server dbm lock data manag commun softwar commun softwar applic soft cach data lan lan lan radunifi server ec server client client client client dbm client dbm figur 1 cs ru ec architectur initi client start empti databas cach queri result time permit user creat local databas subset pertin user applic essenti client databas partial replica server databas furthermor user integr herhi local databas privat data access other cach gener present advantag disadvantag two major advantag elimin request data server boost perform client cpu work local data copi presenc updat though system need ensur proper propag new item valu appropri client figur 1c depict new architectur updat direct execut server primari site page modifi read main memori updat flush back server disk everi server relat associ updat propag log consist timestamp insert tupl timestamp qualifi condit delet tupl updat commit tupl record log amount byte written log per updat gener much smaller size page read main memori queri involv server relat transmit process initi server result queri cach local relat first time local relat bound server relat use extract result everi bind record server dbm catalog state three item interest particip server relat applic condit relat timestamp condit essenti filter mechan decid qualifi tupl particular client timestamp indic last time client seen updat may affect cach data two possibl scenario implement bind catalog inform first approach server undertak whole task case server maintain inform cach time second altern client individu keep track bind inform releas server dbm respons keep track larg number cach data subset differ updat status multipli quickli number client queri process bound data preced request increment updat cach data server requir look portion log maintain timestamp greater one seen submit client possibl done bind inform demand client avail first implement altern use done readili howev second solut follow client request accompani along proper bind templat enabl server perform correct tupl filter relev fraction increment modif propag client site set algorithm carri task base increment access method relat oper describ 15 involv look updat log server transmit differenti file 21 significantli reduc data transmiss network transmit increment affect bound object compar tradit cs architectur queri result continu transmit entireti import point characterist concurr control mechan assum ec architectur first sinc updat done server 2oe lock protocol assum run server dbm also suggest recent studi 25 time commerci dbmss reveal 2oe commit protocol assum updat singl server transact second assum updat log server lock therefor server process multipl concurr request increment updat 4 model dbm architectur section develop three close queu network model one three architectur implement simul packag base first discuss common compon model specif element close network 41 common model compon dbm lock model maintain w orkload gener part either client workstat w orkload gener respons creation job either read write type everi job consist databas oper selec tion project join updat oper repres sqllike languag develop part simul interfac interfac specifi type oper well simpl join page select role w orkload gener randomli gener client job initi menu job also respons maintain mix read write type oper job finish suc cess w orkload gener submit next job process continu entir sequenc queriesupd process accur measur throughput assum site queryupd job continu thinktim job three model network manag perform two task 1 rout messag acknowledg server client 2 transfer resultsdatapagesincr correspond client site depend csruec architectur respect result answer queri request job datapag page request ru queri process workstat site increment new record tupl networkparamet mean v alu time overhead 10 msec remot procedur call net rate network speed 10 mbitssec mesg length averag size 300 byte request messag tabl 1 network paramet identifi delet record use ec model increment mainten cach data relat paramet network manag appear tabl 1 time overhead everi remot call repres init time 14 net rate network transfer ratembitssec averag size job request messag mesg length lock page level two type lock model share exclus use lock compat matrix describ 10 standard twophas lock protocol 42 clientserv model figur 2 outlin close queue network cs model extens model propos 1 consist three part server network manag client one client depict figur client model run applic program direct dbm inquiri updat network manag cs server network manag rout request server transfer result queri appropri client node job submit client site pass send queue network server input queue final arriv readi queue system await servic maximum multiprogram degre assum model limit maximum number job concurr activ compet system resourc server pend job remain readi queue number activ job becom less multiprogram level mpl job becom activ queu concurr control manag readi compet system resourc cpu access disk page lock tabl consid memori resid structur presenc multipl job cpu alloc workload gener server client commit queue cmt output queue receiv queue send queue mpl concurr control queue ccm updat queue upd block queue read queue rd abort queue abrt updat block oper read abort oper readi queue input queue process queue network manag figur 2 queu model cs architectur roundrobin fashion physic limit server main memori client main memori see later alloc databas buffer may contribut extra data page access disk number page access determin formula given 24 depend type databas oper job servic queue fifo disciplin concurr control manag ccm attempt satisfi lock request job sever possibl depend happen set lock request request lock acquir correspond page request queu readqueu process io rd modul page read rd buffer p rocessingqueu cpu work prc job queu p rocessingqueu page lock success part request process normal rdprc remain part reenter concurr control manag queue obvious due lock conflict rout ccm block queue lock acquir conflict ceas exist updat request correspond page exclus lock subsequ buffer updat upd job unsuccess obtain lock queu block queue lock request pass unsuccess predefin number time block queue deadlock detect mechan serverparamet mean v alu server cpu mip process power server 21mip disk tr averag disk transfer time 12msec main memori size server main memori 2000 page instr per lock instruct execut per lock 4000 instr select instruct execut per select page 10000 instr project instruct per project page 11000 instr join instruct per join page 29000 instr updat instruct per updat page 12500 instr rd page instruct read page disk 6500 instr wr page instruct write page disk 8000 ddlock search deadlock search time kill time time requir kill job 02 sec mpl multiprogram level 10 tabl 2 server paramet trigger detect mechan simpli look cycl waitfor graph maintain throughout process job cycl found job least amount process done far abort restart abort job releas lock rejoin system readi queue final job commit chang reflect disk lock releas job depart server relat paramet appear tabl 2 paramet also applic two model selfdescrib give process overhead time penalti ratio rang system variabl two issu mention first queu model assum averag valu disk access therebi avoid issu relat data placement disk second whenev deadlock detect system time charg amount equal ddlock search activ job kill time therefor deadlock overhead proport number activ job databas paramet applic three model describ set paramet shown tabl 3 relat databas consist follow inform uniqu name rel name number tupl card size tupl rel size stream mix indic composit stream submit w orkload gener term read write job note also size server main memori defin hold portion disk resid databas 25 case multiprogram equal onew appli fraction concept later size client main mem dataparamet mean v alu name db name databas testdatabas dp size size data page 2048 byte num rel number relat 8 fill factor page fill factor 98 rel name name relat r1 r2 r8 card cardin everi relat 20k rel size size relat tupl byte 100 stream mix queryupd ratio 10 tabl 3 data paramet ori select paramet valu everi segment multiprogram main memori equal 200 page main memorympl 43 radunifi model abort queue abrt readi queue concurr control queue ccm upd updat queue read queue rd input queue send queue workload gener rec queue network manag commit queue cmt output queue radunifi server diskless client block queue mpl process queue abort commit job figur 3 queu model radunifi architectur figur 3 depict close network model radunifi type architectur differ cs model ffl everi client use cach memori buffer datapag queri process ffl one writer time allow updat server databas everi client work finit capac cach time want request addit page forward request server ffl handl abort done slightli differ manner w orkload gener creat job proper sendqueu network server inputqueu direct server readyqueu function mpl processor modifi account singl writer requir ment one writer may coexist one reader time function upd rd processor correspond queue well queue block job similar previou model promin differ previou model queri job page read readqueu rd servic modul network direct workstat buffer await process architectur capit workstat process capabl server becom devic respons lock page retriev make low level databas system opera tion write type job execut sole server servic updatequeu upd servic modul soon page buffer client site p rocessingqueu local cpu may commenc process whenev avail intern loop ru client model correspond subsequ request page may resid client cach sinc size cach finit may forc request page mani timesdepend type job 24 replac perform either least recent use lru disciplin way specif databas oper call ie case sortmerg join oper waitfor graph process execut maintain server respons compon deadlock detect deadlock found job select kill job queu abortqueu abrt process element releas lock process send abort signal appropri client client abandon process current job discard datapag fetch far server instruct w orkload gener resubmit job process commit notifi proper signal diskless client compon correct job schedul take place presenc incomplet job still either activ pend server w orkload gener take action await either commit abort signal 44 enhanc clientserv model close queu model ec architectur shown figur 4 major differ previou model ffl server extend facilit increment updat propag cach data andor cach new data everi time client send request appropri section server log need ship server back client action decid whether recent chang latest seen request client addit client may demand new data previous cach local disk process applic readi queue mpl concurr control queue ccm updat queue upd block queue abort queue abrt updat block oper abort oper receiv messag network manag read type xaction send queue workload gener commit queue cmt rec queue updat process upd input queue output queue messag ec server ism data access process client rdm logrd queue figur 4 queu model ec architectur initi clientdisk cach data server relat defin use paramet ff rel correspond percentag server relat cach particip client job initi client site alway dispatch server process messag output queue send queue server receiv request input queue via network forward readi queue job final schedul concurr control manag ccm type determin job write type servic updat block abort queue upd abrt process element commit time updat page flush disk fraction write log fract page append log modifi relat assum fraction page tupl modifi per page time read job rout logrd queue queue accommod log read manag logrdm decid pertin chang need transmit job evalu client new portion data download client increment decid examin piec log read filter client applic condit factor decid amount new data cach per job defin everi client individu paramet cont cach perc last factor determin percentag new page cach everi time paramet set zero initi set experi log read manag send queue either request data increment along newli read data acknowledg model client requir modif due client disk exist transact commenc respect workload gener sent network server server answer receiv two possibl exist first data transfer server acknowledg increment exist case client dbm goe execut queri hand increment chang receiv server accommod increment servic modul ism respons reflect local disk servic queri evalu provid loop repeat data page access process clearli overhead involv whenev updat server affect client cach data new data cach tabl 4 show addit paramet model averag client disk access time client cpu process power client main memori size describ client dist tr client cpu mip client main memori respect num client number client particip system configur everi experi instr log page number instruct execut ec server order process log page clientparamet mean v alu applic model client disk tr averag disk transfer time 15 msec ec client cpu mip process power client 20 mip ru ec client main memori size client main memori 500 page ru ec initi cach fraction 030 040 ec server relat rel instr log page instruct process 5000 ec log page log fract fraction updat page 010 ec record log cont cach perc continu cach factor 0 ec client number client 48162456 cs ru ec tabl 4 addit cs ru ec paramet 45 simul packag simul packag written c size rang 46k 54k line sourc code twophas lock protocol use implement timeout mechan detect deadlock abort job schedul immedi delay number round restart execut time three simul complet workload one day decstat 5000200 also ensurethrough method batch means9that simul reach stabil confid 96 5 simul result section discuss perform metric describ experi conduct use three simul system data relat paramet valu appear tabl 1 4 51 perform metric queryupd stream work load set main perform criteria evalu averag throughput jobsmin throughput speedup defin ratio two throughput valu speedup relat throughput gap 12 measur rel perform two system configur sever job stream also measur server disk access reduct ratio server disk access perform two system configur cach memori hit variou system resourc util databas experi consist eight base relat everi relat cardin 20000 tupl requir 1000 disk page main memori server retain 2000 page multiprogram job client retain 500 page databas process main memori case ru ec configur initi databas resid server disk time progress part cach either cach memori ru client disk main memori ec client order evalu three dbm architectur w orkload gener creat sever workload use mix queri modif queryupd streamqu sequenc queri updat job mix predefin ratio first two experi paper mix ratio 10 qu includ one updat per ten queri qu job randomli select predetermin set oper describ workload everi client submit execut qu termin job complet success exactli qu submit configur lenght quss select 132 job sinc gave confid 96 result goal examin system perform divers paramet set princip resourc dbm configur compet cpu cycl disk ac cess qu consist three group job two queri updat sinc mix job play import role system perform boral dewitt show 4 chose small larg queri first two experi includ paper correspond low high workload small size queri set sq consist 8 select base relat tupl select 5 2 done cluster attribut 4 2way join oper join select 02 larg size queri set lq consist 8 select tupl select equal select tupl select 404 select done cluster attribut 3 project final 4 2way join join select 40 updat job u made 8 modif vari updat rate 4 use cluster tribut updat rate give percentag page modifi relat updat experi updat rate set follow valu 0 modif 2 4 6 8 given group classif formul two experi sqsu lqsu job stream particular experi say sqsu x updat rate consist queri sq group updat u modifi x throughput cs ru throughput rate sqsu client figur 5 cs ru throughput server relat page anoth set experi design around wisconsin benchmark found 16 52 experi sqsu lqsu figur 5 throughput rate cs ru architectur present number client vari 4 56 clearli two group curv cs locat lower part chart ru locat upper part chart overal could say throughput averag 116 job per minut cs 237 ru case 4 16 cs client throughput increas cs configur capit upon resourc 24 cs client observ throughput declin nonzero updat stream attribut high content higher number abort restart job ru 0 curv alway remain rang 32 33 jobsmin sinc client cach memori essenti provid much larger memori partit correspond one cs one writer time requir ru configur play major role almost linear decreas throughput perform nonzero updat curv number client increas note 56 client ru perform valu obtain qu 4 8 updat rate cs counterpart evid figur sinc ru util cach throughput ec throughput sqsu client figur memori cpu client dbm page process perform consider better cs counterpart except case mani client submit nonzero updat stream ru throughput rate compar obtain cs configur averag ru throughput improv experi calcul 204 time higher cs figur 6 show ec throughput ident stream 0 updat curv show throughput system increas almost linearli number client benefit due two reason 1 client use local disk achiev maxim parallel access alreadi cach data 2 server carri neglig disk oper updat therefor log empti handl short messag acknowledg rout network data movement across network observ case updat rate increas 2 4 level achiev throughput rate remain high increas almost linearli number workstat hold station observ small declin due higher conflict rate caus increas number updat similar declin observ other 0 updat curv figur 5 6 see perform ec significantli higher cs ru ec maximum process rate 13164 jobsmin 56 client attach singl server 0 updat maximum throughput 0 ruc 2 ruc 4 ruc 6 ruc 8 ruc 0 ecsc 2 ecsc 4 ecsc 6 ecsc 8 ecscs21e015throughput client figur 7 ecsc ruc throughput speedup valu cs 126 jobsmin ru 329 jobsmin number workstat observ declin job throughput term maximum throughput threshold mtt vari updat rate instanc 2 curv come 35 workstat 6 8 curv appear region around 20 workstat mtt greatli depend type submit job composit qu well server concurr control manag sophist flexibl manag 26 one use simul packag would increas mtt valu figur 7 depict throughput speedup ru ec architectur cs axi depict logarithm scale suggest averag throughput ec almost proport number client least light updat stream 0 2 4 rang 4 32 station 4 updat stream rel throughput ec 17 time better csru counterpart 56 client worth note even worst case 8 updat ec system perform remain 9 time higher cs declin though start earlier client still maintain 10 time higher job process capabl lower part figur 7 ru cs speedup shown although ru perform gener better cs stsu workload reason given earlier correspond speedup notabl much smaller ec princip reason 2 ecsc 4 ecsc 6 ecsc 8 ecscs1e015ruc reduct curv reduct client server disk reduct sqsu figur 8 ecsc ruc disk reduct superior ec load server disk oper parallel use local disk figur 8 support hypothes present server disk access reduct achiev ec cs similarli one achiev ru cs ec server disk access 0 updat stream caus insignific disk access assum pertin user data cach alreadi workstat disk 2 updat rate quss reduct vari 102 32 time entir rang client expect reduct drop updat intens stream ie curv 4 6 8 howev even 8 updat disk reduct rang 26 8 time signific gain disk reduct rate ru architectur cs vari 24 26 time throughout rang client qu curv achiev predominantli use client cach memori larger correspond main memori multiprogram partit cs configur avoid mani page replac figur 9 reveal one greatest impedi perform ec log oper graph show percentag log pertin disk perform log read write total number server disk access presens 40 client log disk oper constitut larg fraction server disk access around 69 percentag log access total server disk access client percentag figur 9 percentag server page access due log oper figur depict time spent network configur updat rate 0 4 8 ec model caus least amount traffic network increment result small size ru model caus highest network traffic datapag must transfer workstat process hand cs transfer qualifi recordsresult 56 client ru network traffic almost doubl cs 215 7 time ec figur 11 summar result ltsu experi although natur queri mix chang consider notic speedup curv compar figur 7 differ nonzero updat curv move upward closer 0 curv mtt appear much later 50 client posit speedup deviat observ nonzero curv compar rate seen figur 7 interest note gain produc ru model lower stsu experi offer follow explan number page process ru server disk increas significantli larger selectionjoin select project oper involv experi impos delay server site disk util rang 93 workstat cpu contribut much system averag throughput 4 ec 8 ecs21e0552ru relat curv cs relat curv client time spent network sqsu figur 10 time spent network 53 effect model paramet section vari one one system paramet signific impact perform examin architectur run sqsu experi final compar obtain result figur 7 paramet vari client disk access time 9msec correspond 40 reduct averag access time figur 12 present throughput speedup achiev ec experi use new client access time ec result depict figur 6 surprisingli new ec perform valu increas averag 123 factor curv repres seriou gain noupdat curv indic constant 53 throughput rate improv rest curv indic signific gain rang 4 40 client 40 client gain insignific explan larg number updat increas linearli number submit client impos seriou delay server natur ru cs throughput valu affect experi server disk access time set 7 msec observ one8 nonzero updat curv approach 0 curv mtt area appear much later 40 station provid faster disk access time server job execut faster caus 0 ecsc 2 ecsc 4 ecsc 6 ecsc 8 ecsc 0 rucs21e015 rest ruc curv throughput client figur 11 ruc ecsc throughput speedup lqsu fewer restart client cpu set 110mip result similar figur 6 except notic averag increas 1516 jobsmin throughput rate updat curv indic extrem fast process workstat alon moder impact perform ec architectur server cpu set 90mip observ shift curv toward top right corner graph push mtt right allow client work simultan two reason behavior 1 updat mildli consum cpu therefor provid faster cpu finish much faster fast cpu result lower lock content turn lead fewer deadlock server log process also carri faster well 54 experi section perform four experi examin role clean updat workload special design quss small number client submit updat effect continu cach paramet cont cach perc ec model well abil model scaleup pure updat workload experi updat rate 6 remain constant throughput ec speedup client disk access 9msec 15msec client figur 12 ec speedup client disk access time 9msec client access time 15 msec qu made updat job pure updat workload figur 13 give throughput rate configur cs ec model show similar curv shapewis rang 410 client throughput rate increas beyond point influenc extens block delay creat deadlock perform declin consider 56 client ec achiev half throughput obtain 8 client use overal cs better ec latter also write log extra disk page access commit time also interest note almost linear declin perform ru configur sinc strictli one writer time set experi job sequenc mpl processor model execut one time due lack reader concurr assist cs ec client lower rang 4 8 achiev better throughput rate ru counterpart later advantag job concurr mani writer time csec case diminish significantli limit number updat client experi number client dedic updat rest client submit read request simul environ larg number readonli user constant number updat class databas includ system use stock cs ru throuhgput client pure updat workload figur 13 quss consist updat job market figur 14 present throughput speedup result sqsu experi note three client experi design writer remain queri databas ruc curv remain perform valu level observ figur 7 except number client increas effect writer amort reader thu nonzero updat curv converg 0 ruc curv client ecsc curv suggest spectacular gain ec configur perform system increas almost linearli number particip client updat curv note well mtt disappear graph natur mtt appear much later 56 client use configur shown figur chang data local ec client far consid case client continu demand new data server cach disk goal experi address issu tri qualifi degrad ec perform carri experi use paramet cont cach perc ccp repres percentag new page relat involv queri cach client disk paramet enabl us simul constantli chang client work set data figur 15 show 0 2 6 curv figur 6 ccp 0 superimpos curv throughput limit number updat job strem client 0 ruc 6 ecsc 8 ecsc 4 ecsc 2 ecsc 0 ecsc 8 ruc figur 14 throughput speedup rate three writer client per experi experi sqsu ccp equal 1 2 taken account everi queri requir new part server data percentag contribut larg number addit disk access augment process time part server fact make almost linear format origin 0 curv disappear specif 56 client origin experi attain 13163 jobsmin ccp1 achiev 4161 jobsmin accomplish 2066 jobsmin perform degrad heavi updat qu ie 6 less noteworthi sinc alreadi seriou server block abil scaleup also interest scaleup behavior architectur presenc larg number workstat purpos ran experi number client rang 4 120 per server figur 16 depict result curv stsu experi graph indic beyond mtt region speedup ec cs gradual decreas 40 client updat intes quss speedup declin less sharp 2 curv detarior due satur server resourc great client number creat note howev even 120 client ec architectur process 61 199 time job cs architectur nonzero updat curv 0 updat curv show satur continu increas almost linearli major reason perform cs configur 0 ec 2 ec 0 ec 2 ec 6 ec throughput sqsu experi three contcachingperc ccp valu client 6 ec 6 ec 2 ec figur 15 experi three valu ccp paramet 56 client remain stabl rang 900 125 jobmin due high util resourc network show sign extrem heavi util gain ru configur remain level report experi stsu 6 conclus present model compar three contemporari dbm architectur aim high throughput rate simul result show follow characterist ffl radunifi architectur give averag 21 time perform improv cs util main memori cpu client ffl although ec perform declin qu queri updat ratio decreas still offer seriou speedup rate two architectur pure updat workload ec give worst perform client ffl light updat rate 15 perform speedup ec cs ru almost proport number particip workstat 100030005000model scalabl experi throughput client 0 ecsc 2 ecsc 4 ecsc 6 ecsc 8 ecsc 0 ruc rest ruc curv figur scalabl experi rang 432 experi stream without updat ecsc speedup increas almost linearli number workstat ffl either heavier updat rate mani concurr impos modif ec server becom system bottleneck introduc maxi mum throughput threshold mtt identifi bottleneck point respect updat rate ffl faster workstat disk access time improv perform ec ffl ec perform diminish significantli whenev client constantli demand new data element server ffl databas environ exclus writer number reader offer good perform result ec configur ffl pure updat workload ec architectur scalabl two futur work includ experiment use local databas workstat explor behavior configur differ server concurr control protocol develop period updat propag strategi bring transact throughput close 0 updat curv aknowledg author grate anonym refere valuabl comment suggest well jennif carl georg panagopoulo comment earlier version paper r model stude concurr control perform altern implic data cach issu inform retriev system cach coher protocol evalu use multiprocessor simul model methodolog databas system perform evalu data cach tradeoff clientserv dbm architectur server base inform retriev system light updat load perform scalabl clientserv databas architec ture studi three altern workstat server architectur objectori databas system comput system perform evalu granular lock degre consist share databas perform analysi sever backend databas architectur perform consider oper system transact manag cooper object buffer manag advanc inform manag prototyp environ develop faulttoler softwar increment access method view cach concept evalu enhanc workstationserv dbm architectur modern clientserv dbm architectur principl techniqu design adm benchmark simpl databas oper highli avail file system distribut workstat environ differenti file applic mainten larg databas unix network program architectur futur data base system databas knowledgebas system volum volumeiithevolum new technolog cach consist concurr control clientserv dbm architectur maintain consist clientcach data tr perform analysi sever backend databas architectur cach coher protocol evalu use multiprocessor simul model principl techniqu design admsf6wwp concurr control perform model altern implic benchmark simpl databas oper perform consider oper system transact manag coda data cach issu inform retriev system studi three altern workstat server architectur objectori databas system maintain consist clientcach data architectur futur data base system unix network program environ develop faulttoler softwar increment access method viewcach data cach tradeoff clientserv dbm architectur cach consist concurr control clientserv dbm architectur evalu enhanc workstationserv dbm architectur differenti file principl databas knowledgebas system methodolog databas system perform evalu cooper object buffer manag advanc inform manag prototyp perform scalabl clientserv databas architectur ctr svend frlund pankaj garg designtim simul largescal distribut object system acm transact model comput simul tomac v8 n4 p374400 oct 1998 vinay kanitkar alex deli time constrain push strategi clientserv databas distribut parallel databas v9 n1 p538 januari 1 2001 vinay kanitkar alex deli realtim process clientserv databas ieee transact comput v51 n3 p269288 march 2002 alexand thomasian distribut optimist concurr control method highperform transact process ieee transact knowledg data engin v10 n1 p173189 januari 1998 alex deli nick roussopoulo perform scalabl clientserv databas architectur proceed 18th intern confer larg data base p610623 august 2327 1992 jeho park vinay kanitkar alex deli logic cluster architectur network databas distribut parallel databas v10 n2 p161198 septemb 2001 alex deli nick roussopoulo techniqu updat handl enhanc clientserv dbm ieee transact knowledg data engin v10 n3 p458476 may 1998 vinay kanitkar alex deli effici process client transact realtim distribut parallel databas v17 n1 p3974 januari 2005 alfredo goi arantza illarramendi eduardo mena jo miguel blanco optim cach feder databas system journal intellig inform system v9 n2 p125155 septoct 1997