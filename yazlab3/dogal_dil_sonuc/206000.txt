tighter lower bound exact complex string match paper consid exact number charact comparison need find occurr pattern length text length n use onlin gener algorithm onlin algorithm lower bound 1frac94m1cdot n charact comparison obtain gener algorithm lower bound 1frac2m3cdot n charact comparison obtain lower bound complement onlin upper bound 1frac83m1cdot n comparison obtain recent cole hariharan lower bound obtain find pattern interest combinatori properti also shown pattern offlin algorithm effici onlin algorithm b introduct classic string match problem problem find occurr pattern text string match among extens studi problem comput scienc survey variou algorithm devis found ah90 among effici algorithm devis string match algorithm gain inform pattern text perform comparison pattern text charact algorithm need prior knowledg possibl infinit alphabet pattern text drawn investig exact comparison complex string match model obtain lower bound number comparison requir worst case lower bound allow algorithm preprocess pattern text lower bound remain valid even algorithm know alphabet advanc provid alphabet contain charact appear pattern two kind comparison base algorithm studi onlin algorithm algorithm examin text charact window size slide monoton right furthermor window slide right match pattern instanc left window align window discov gener offlin algorithm algorithm access pattern text unrestrict manner perhap wide known linear time algorithm string match knuthmorrispratt kmp77 boyermoor bm77 algorithm refer kmp bm algorithm respect kmp algorithm make comparison bound tight exact complex bm algorithm open question recent shown kmp77 bm algorithm make 6n comparison pattern occur text courant institut new york univers new york 10012 first two author support part nsf grant ccr8902221 ccr8906949 ccr9202900 ccr8901484 z depart comput scienc univers warwick coventri cv4 7al england author support part esprit bra programm ec contract 3075 alcom 7141 alcom ii part work carri author visit tel aviv univers x depart comput scienc tel aviv univers tel aviv 69978 israel part work carri author visit univers warwick guiba odlyzko go80 reduc 4n assumpt cole final prove essenti tight bound 3n gamma nm comparison bm algorithm whether pattern occur text version kmp bm algorithm consid preced paragraph comparison base interest note algorithm variant pure comparison base fall categori algorithm consid paper failur function kmp algorithm kmp77 yield finit automata perform string match read charact exactli howev simul automata requir prior knowledg alphabet number comparison need simul transit depend alphabet size transit simul unit time use text charact address array pointer allow model standard bm algorithm bm77 use two shift function determin distanc shift pattern mismatch occur one shift function occurr shift give rightmost posit pattern unmatch text charact occur effici implement shift function alphabet depend second shift function use bm algorithm comparison base analysi cole cole91 show occurr shift function improv worst case behaviour bm algorithm occurr shift function import practic howev ensur sublinear time variou probabilist set see bgr90 studi kmp bm algorithm behav practic reader refer hs91 apostolico crochemor ac89 gave simpl variant kmp algorithm make 3 comparison apostolico giancarlo ag86 gave variant bm algorithm make 2n gamma m1 comparison crochemor et al show recent rememb recent match portion reduc upper bound bm 3n 2n comparison recent galil giancarlo cgg90gg92 analyz modifi string match algorithm design colussi coll91 show make 4 comparison fact gg92 give bound sharper form function period z pattern bound becom n g galil giancarlo gg91 also shown onlin algorithm string match must perform least 4 comparison string string aba exampl shown lower bound also appli gener algorithm patterntext comparison allow algorithm galil giancarlo gg92 effici rel short pat tern may becom ineffici longer pattern breslauer galil bg92 cole hariharan ch92 shown string match problem becom easier length pattern increas breslauer galil bg92 develop algorithm perform 1 logm charact comparison text length n pattern length cole hariharan ch92 obtain algorithm perform 1 1 comparison shall see essenti tight galil giancarlo gg91 show onlin algorithm must perform least comparison pattern odd length gener algorithm must perform least 1 comparison pattern length work improv lower bound onlin offlin algorithm also show certain pattern offlin algorithm effici tighter lower bound string match 3 onlin algorithm lower bound appli model text text patterntext comparison allow suspect pattern texttext comparison improv effici string match algorithm improv lower bound follow onlin algorithm use patterntext comparison lower bound 1 comparison obtain 1 onlin algorithm allow use patterntext texttext comparison lower bound charact comparison obtain algorithm allow use patterntext texttext comparison lower bound 1 comparison obtain 2 also get offlin lower bound of3 delta charact comparison patterntext comparison allow onlin lower bound present come close onlin upper bound obtain cole hariharan ch92 worstcas comparison complex string match therefor almost exactli determin asymptot form 1 algorithm 9 3 gener algorithm 3 work build work galil giancarlo gg91 point view howev bit differ galil giancarlo gg91 investig number comparison requir function n text length pattern length interest number comparison requir function text length specif pattern sought next section explain detail rule string match game comparison model set section 3 describ adversari argument lie heart lower bound proof offlin lower bound present section 4 follow almost immedi argument section 3 specif lower bound obtain everi pattern lower bound depend first second period pattern see next section offlin lower bound shown tight interest famili pattern exploit addit restrict place onlin algorithm obtain section 5 6 improv onlin lower bound lower bound section 5 depend first second period pattern addit period complic combinatori structur use section 6 section 7 obtain onlin upper bound string form k ba match onlin offlin lower bound section 4 5 final section 8 exhibit pattern abaa offlin algorithm actual onlin small lookahead perform better onlin algorithm preliminari version paper appear chpz93 2 preliminari algorithm consid allow access text pattern queri form queri algorithm suppli ye answer algorithm charg queri make comput free charg algorithm may adapt choos queri depend answer earlier queri algorithm model may view sequenc decis tree similar comparison model use studi comparison problem sort search select string w let cw denot minim constant exist string match algorithm find occurr pattern w text length n use cw comparison text pattern charact pair text charact variant cw c w algorithm allow compar pair text charact obvious cw c w definit cw c w allow unrestrict offlin algorithm random access charact text contrast defin c k w c k w correspond minim constant algorithm access text slide window size jwjk jwj denot length w furthermor algorithm allow slide window past text posit alreadi report whether occurr pattern start text posit algorithm use slide window size jwj ie tradit call onlin algorithm call algorithm use larger window finit lookahead window algorithm clearli cw c k w c 0 w k 0 show section 8 w k c k w c 0 w specif show c 4 abaa c 0 abaa mean pattern algorithm use larger window may effici algorithm use smaller window still open problem whether exist string w cw c k w everi k 0 known whether exist string optim offlin algorithm better finit lookahead algorithm clear howev c k w nonincreas k follow lemma also easili establish lemma 21 string w lim k1 c k proof let cn number comparison requir worst case find occurr w text length n use unrestrict algorithm definit cw get cn cw everi consid follow algorithm lookahead k algorithm find occurr w window size k jwj use ck window slid k posit process repeat number comparison perform algorithm text length n k w constant depend w k particular get w easi check lim k1 c k w cw therefor cw clear howev lim k1 c k w cw requir equal follow easi see 1 cw c 0 w c w c 0 w everi string w kmp algorithm show 1 c everi w algorithm galil giancarlo gg92 show 1 c 3 everi w algorithm breslauer galil bg92 show 1 c everi string length fi nalli algorithm cole hariharan ch92 show 1 c everi string w length algorithm kmp77gg92bg92ch92 mention onlin use patterntext comparison galil giancarlo gg91 show c m3 pattern odd length show infinit mani valu exist string length c 4m1 also show tighter lower bound string match 5 infinit mani valu exist string length c 7m27 show algorithm cole hariharan far optim show c w cw m3 pattern show essenti lower bound obtain gg91 onlin algorithm also hold gener algorithm let w string length say z 1 z period w minim period period exist sinc alway period w let z 2 minim period w divis z 1 second period exist set z 1 call z 1 period w z 2 second period w period properti play major role sequel well known see eg kmp77 z 1 z 2 period w period w z 1 z 2 first second period w gcdz 1 z 2 period w consequ 2 3 adversari argument lower bound deriv use adversari fill text answer algorithm queri adversari alway tile text overlap occurr pattern everi charact text eventu becom part occurr algorithm must find consequ algorithm must establish ident text charact achiev get least one ye answer posit adversari tri avoid give ye answer whenev possibl give ye answer answer would either contradict previou answer prevent complet tile text argument section gener similar argument galil giancarlo gg91 statement made least one ye answer must obtain algorithm text posit cover occurr pattern seem obviou inde immedi patterntext comparison allow slightli complic argument need handl possibl texttext comparison lemma 31 comparison base algorithm certain ident text charact text receiv least ye answer proof construct graph g one vertex text posit one vertex k distinct symbol appear pattern w everi edg g correspond ye answer receiv algorithm ye answer given queri edg ad vertex correspond tj vertex correspond symbol wi ye answer given queri edg ad vertic correspond ti tj stage algorithm graph g construct far repres posit inform known charact text text posit correspond vertic compon g contain pattern symbol vertex text posit ident charact known sinc alphabet size unlimit charact text posit yet determin sinc compon size p contain pattern symbol vertex least edg total number known text posit total number ye answer next describ scheme use adversari give algorithm rel larg number answer begin simpl exampl 6 cole hariharan paterson zwick pattern string aba let 1 consid famili text string length n defin follow place posit 3j text v posit 3j simplic number posit 0 famili may depict schemat ba ab ba ab ba ab find occurr aba text string f equival determin index vector v 2 f0 1g r adversari forc least one answer reveal bit v follow definit generalis properti exampl definit 32 let w string famili text length n said rsepar w exist distinct indic r 1 everi r everi text v contain occurr w start posit u 0 v occurr w posit u 1 v 2 answer queri form wi tj either ye text text v ye text v v fix 1g follow lemma easili establish proof omit lemma 33 rsepar famili answer texttext queri either ye text v v ye v v k1 1 ye v v k1 phi v ye v v k1 1g exampl given definit 32 texttext queri whose answer ye v k1 1g situat may aris howev pattern w contain two distinct charact readi prove lemma 34 f rsepar famili w comparisonbas algorithm w exist text v 2 f algorithm receiv least r answer abl locat occurr w v proof adversari maintain set e contain linear equat binari field gf2 variabl v stage least one vector v 2 f0 1g r satisfi equat e vector v 2 f0 1g r satisfi equat e text v consist answer given far adversari number equat e number answer given adversari begin queri made text still possibl adversari respond new queri answer queri text v v solut e adversari respond common answer set e remain unchang invari remain satisfi otherwis adversari answer add equat e follow way answer current queri text f exist definit 32 lemma 33 either singl equat e 1 tighter lower bound string match 7 two equat e 1 e 2 answer queri ye v answer queri accord v ye e 1 satisfi e 1 equat obtain e 1 complement free coeffici ad e answer queri accord v ye e 1 e 2 satisfi least one e 1 e 2 independ equat e otherwis answer would surviv text e 1 depend e equat e 1 ad e otherwis e 2 ad easi verifi requir invari still satisfi algorithm task done uniqu solut e happen set e contain least r equat equat ad result answer adversari therefor give algorithm least r answer lemma 31 34 combin togeth give lower bound n everi text v separ famili f use lemma 34 everi text posit cover occurr pattern w separ famili construct next section 4 offlin lower bound theorem 41 w string z 1 z 2 first second period z1z2 proof assum without loss gener everi v 2 f0 1g r construct text v length n everi occurr w start jz 1 either jz 1 jz 1 accord whether v 1 easi verifi rsepar famili w u 0 construct depict figur 1 note z 1 consid comparisonbas algorithm find occurr w string length n accord lemma 34 get least r answer least one text v0 v 0 2 f0 1g r also easi see everi text v particular v0 complet cover occurr w accord lemma 31 must therefor get least n ye answer v0 total must make worst case least n z1z2 comparison text length n exampl note string aba z 5 separ famili use obtain lower bound may depict ba ab aba ba ab aba ba ab famili properti everi text famili everi posit cover occurr aba separ famili aba given definit 32 properti exampl note string abaa z therefor cabaa 8 7 section 8 shown bound tight 7 see theorem 71 c 0 4 provid exampl string offlin algorithm effici onlin algorithm theorem 42 w string z 1 z 2 first second period 2z z2 8 cole hariharan paterson zwick fig 1 configur use prove cw fig 2 configur use show cw proof proof similar proof theorem 41 separ famili everi text almost complet tile occurr w may obtain time without use occurr w common text famili assum 1 everi v 2 f0 1g r construct text v length n occurr w start jz 2 1 easi check rsepar famili w time u 0 r construct depict figur 2 note z period w 2z everi posit text v except perhap first last z posit cover occurr w thu proof theorem 41 show algorithm must perform worst case least n1 exampl string aabaa z therefor caabaa 5 4 separ famili use time ba ab aa ba ab aa ba ab theorem 43 c 3 proof upper bound follow theorem 71 lower bound tighter lower bound string match 9 follow theorem 42 condit jwj satisfi special argument need case argument given assum pattern text comparison allow seem extend simpl manner case patterntext texttext comparison allow lower bound obtain use separ famili aba given definit 32 complic aris howev text famili complet cover occurr aba assum 1 adversari start put text posit 3j set posit 3j either ab ba repli least one queri concern posit adversari answer queri algorithm follow way queri text posit alreadi set adversari answer consist set return queri t3j posit 3j k yet set adversari respond set posit 3j either ab ba whichev consist answer text posit form 3j eventu cover occurr aba adversari therefor forc least one answer two ye answer pair posit form 3j necessarili cover occurr aba howev posit 3j cover occurr posit set ba posit 3j 1 3j 2 set ab algorithm must still queri posit 3j least case either verifi rule occurr aba start posit 3j gamma 1 complet proof nonperiod string w ie string z 1 theorem give trivial lower bound cw 1 bound tight howev mani string match algorithm see eg coll91gg91 ch92 perform n comparison search nonperiod pattern text length n corollari theorem 42 get corollari 44 k 2 ca k ba proof easi check first second period 1 claim follow immedi theorem 42 section 7 shown bound given corollari 44 tight even match use onlin algorithm corollari theorem 42 corollari 44 get corollari 45 everi exist string wm k ba k length algorithm find occurr wm text length n must make least comparison worst case know see last paragraph section 2 z 1 z 2 first second period w z 1 2 z 2 z get z 2 jwj3 e corollari 45 therefor strongest result kind impli theorem 42 5 onlin lower bound short section show lower z2 obtain offlin algorithm 2z onlin algorithm even condit hold theorem 51 w string z 2 second period c 0 w z2 fig 3 configur use prove c 0 w proof suppos onlin algorithm found occurr w text window slid z 1 posit right place two copi w shift z 1 z 2 posit w shown figur 3 denot copi w 0 w 00 sinc z period w two copi w 0 w 00 must disagre least one posit end found occurr w adversari extend found occurr w either w 0 w 00 way forc algorithm get least one answer algorithm make queri whose answer ident continu adversari give algorithm common answer stage algorithm make queri distinguish two noncompat continu matter queri adversari answer adversari choos continu consist answer question accordingli algorithm find chosen occurr algorithm either made least z queri slide window z 1 posit made least z 2 1 queri slide window z 2 posit note verifi occurr pattern text algorithm must get least one ye answer charact occurr process repeat forc algorithm make least 1 queri text length n next section obtain use complic argument better lower bound onlin algorithm see corollari 63 65 6 onlin lower bound ii proof theorem 51 shown everi nonperiod pattern adversari forc algorithm make least one mistak ie get least one answer occurr pattern use tile text show certain pattern adversari forc algorithm make least two mistak occurr algorithm cole hariharan ch92 make two mistak occurr adversari forc algorithm make least three mistak occurr tile theorem 61 let w string length let z period w everi 1 period w none multiset fwm contain charact exactli zk ii addit none multiset fwm contain exactli zk proceed proof theorem tri clarifi condit appear consid k copi w posit array k number column number copi th row shift z posit right respect copi 0 th tighter lower bound string match 1112134511211213451121 set hw b set hw 12 9 11 12i fig 4 two simpl setup theorem 61 appli row array depict figur 4a string figur 4b string w z contain charact appear column array correspond w requir claus column lie end copi 0 th row end copi charact appear one row easi check case depict figur 4 condit satisfi note requir three charact column either equal distinct check condit claus ii one need look pair column compar pair charact appear row number j equal pair requir satisfi j 6 k gamma 1 easili verifi condit satisfi array w array w thu w 10 obtain c 5 w 12 infer c 6 proof proof statement simpl extens proof theorem 51 suppos onlin algorithm found occurr w text window slid z 1 posit right w place k copi w shift z posit respect reader may refer figur 3 imagin k instead two copi appear sinc none period w pair copi must disagre least one posit end found occurr w adversari extend found occurr w one k copi way forc algorithm get least two answer algorithm ask question whose answer k continu adversari give algorithm common answer stage algorithm make queri answer ye accord continu accord rest adversari answer queri condit ii impli least two continu consist answer adversari give common answer queri distinguish remain continu stage algorithm make anoth queri answer possibl adversari answer least one continu consist repli given adversari adversari choos one answer subsequ queri accordingli algorithm find next occurr w algorithm made least z slide window z posit henceforth say setup w string period w none z period w string w 10 shortest string setup satisfi condit theorem 61 obtain string w 12 shortest string setup satisfi condit condit ii theorem 61 obtain two last statement verifi use comput search next show obtain setup satisfi condit theorem 61 infinit sequenc setup help investig asymptot number comparison requir length pattern string tend infin infinit sequenc obtain pad basic setup let u v string padu v denot string obtain place copi v charact u thu pad 121 gener 1 theorem 62 hw z setup satisfi condit theorem 61 w proof setup hw z satisfi condit theorem 61 setup hw see note first inde period w none 6 j period verifi first condit theorem 61 note everi column setup hw either column allzero column second condit verifi similar way statement theorem follow theorem 61 appli fact 1 2 theorem 62 motiv search setup hw z satisfi condit theorem 61 2jwj high possibl best setup found follow hw setup 2jwj 4 corollari theorem 62 obtain corollari 63 everi exist string wm length onlin algorithm find occurr wm text length n must make least comparison worst case use comput enumer verifi better setup possibl pattern length 250 howev better setup satisfi first condit theorem 61 obtain use four instead three overlap let follow lemma easili verifi lemma 64 setup hu k satisfi first condit theorem 61 tighter lower bound string match 13 setup hu 1 20 29 32 34i exampl is1211213331211213331212112133312112112112133312112133312121121333121121a ju k get corollari corollari 65 everi exist string wm length onlin algorithm use patterntext comparison find occurr wm text length n must make least comparison worst case corollari 65 asymptot better corollari 63 best onlin bound obtain verifi use comput search better setup four five overlap obtain use string length 250 believ hw z setup satisfi condit theorem 61 8 jwj true result corollari 65 essenti best obtain use method 7 onlin upper bound next theorem exhibit interest famili string theorem 51 tight theorem 71 everi k 1 c 0 k ba proof lower bound corollari theorem 51 match upper bound fairli straightforward case k need care k describ algorithm work case algorithm k ba algorithm describ sequenc step text charact compar align pattern charact case mismatch occurr pattern verifi window shift along next posit pattern occurr possibl repres state algorithm step inform string uxv u 2 f0 ag k v 2 ag x 2 f0 bg describ part current knowledg algorithm text charact window 0 inform string indic inform avail correspond posit b indic charact posit known b b indic charact correspond posit known b state written specifi form necessari window shift inform string must consist pattern algorithm make b queri choos forget neg inform repres b shall call 1st posit window bposit other aposit aposit alway queri bposit alway queri b term inform string algorithm simpli describ 0 inform string queri rightmost 0 ag queri bposit 14 cole hariharan paterson zwick procedur repeat text string exhaust prove upper bound first establish follow pair invari invari ii contain subword 1 invari hold x becom b inform string form u0a follow shift x 6 b invari ii test u made shift u come v separ previou content u x previou inform string nearli comparison associ text posit follow way queri made aposit associ correspond text posit bposit queri b result associ text posit result b care need sinc k result repres 0 u howev case shift size 1 made invari ii least one 0 shift inform string queri associ text charact correspond one 0 remain case bposit queri queri associ text posit note queri shift 1 made result inform string made step chang clearli accumul shift least posit must occur two extra queri upper bound follow corollari get theorem 51 also tight member k ba famili appli corollari 72 k 2 ca k ba maxfkg2 8 lookahead use section present string match algo rithm specif tailor string abaa algorithm use window size eight perform match gener lower bound obtain abaa use theorem 41 thu 8 4 abaa therefor string lookahead use abaa algorithm present shed light intricaci optim string match algorithm descript quit complic optim algorithm longer string may even complic descript algorithm string abaa algorithm requir window size 8 state algorithm given inform string oe 2 8 k1 f0 b bg k oe repres inform known text symbol prefix window describ algorithm specifi state next queri made amount shift next state correspond two possibl answer repres queri b queri singl doubl underlin respect appropri symbol inform string exampl state p tabl 1 queri made fourth posit window certain inform string task find pattern occurr decompos two logic disjoint task check occurr finit prefix check remaind state repres tabl pair state connect phi exampl state r tabl 1 seventh symbol found suffici check separ occurr within tighter lower bound string match 15 transit state inf queri match mismatch state shift state shift r a00a000 tabl main transit tabl abaa algorithm new state state inf queri match mismatch worstcas cost a0aa g a00a00a phi b f 4 tabl secondari transit tabl abaa algorithm r u 45 fig 5 transit diagram abaa algorithm first five posit state f text string begin sixth posit state q tabl show finit subproblem aris way next queri made number queri requir worst case resolv subproblem latter comput recurs follow transit tabl 2 p tabl 2 indic full occurr pattern found treatment current subproblem finish indic treatment current subproblem end without find occurr tabl 1 main part algorithm present graph show transit state tabl 1 given figur 5 correspond number comparison make transit finish consequ subproblem result shift shown arrow verifi worst case correspond iter cycl pr prove c 4 abaa 8 7 9 conclud remark hardest string find perhap disappoint answer aba mum dad know c 3 string w gg92 believ c establish yet except jwj 8 ch92 would impli aba like strictli hardest string find interest note shown c 3 exact valu caba known yet know 6 3 task comput exact valu c 0 w three variant everi given pattern w seem present hard constant c principl comput algorithm sinc onlin algorithm finit number state repres current inform finit number possibl next queri among optim onlin algorithm w next queri depend inform state finit though huge number differ algorithm kind everi w task find cw c w may even harder know present whether cw c w alway ration although would odd small gap still remain lower bound upper bound cole hariharan ch92 close gap practic valu think may reveal mani interest properti string string match algorithm acknowledg author thank anonym refere suggest improv paper r algorithm find pattern string boyermooregalil string search strategi revisit optim canon substr string analysi boyermoor type string search algorithm effici comparison base string match fast string match algorithm tight bound complex boyermoor algorithm correct effici pattern match algorithm tighter upper bound comparison complex string match pattern hard find exact complex string match speed two stringmatch algorithm exact complex string match lower bound exact complex string match upper bound new proof linear boyermoor string search algorithm fast pattern match string tr