formal model express fragment xslt extens extens style sheet languag xsl variabl pass data valu templat rule gener power xml queri languag extens style sheet languag transform xslt inform introduct xstl given base formal model fragment xslt defin formal model spirit tree transduc semant defin rewrit relat shown express power fragment alreadi beyond xml queri languag final import properti termin closur composit consid b introduct xsl 6 current w3c 8 propos xml extens stylesheet lan guag origin primari role allow user write transform xml html thu describ present xml document nowaday mani peopl use xsl basic tool xml xml transform render xsl xml queri languag note databas commun 9 1 though transform xsl express rather limit instanc xsl join skolemfunct henc sophist group output data word xsl lack basic properti queri languag relat com plete howev languag still develop featur chang time recent variou extens ad languag 7 appar one addit variabl paramet pass templat rule show addit togeth use mode actual state use nite state machin alreadi dene earlier version xsl render xsl power queri languag inde xsl becom relat complet explicit group without skolem function simul regular path express simul current xml queri languag work author support ec tmr network getgrat research assist fund scientic research flander work partli perform visit univers california san diego contact author submiss actual togeth addit new featur xsl split two part xsl transform xslt 7 xpath 5 latter contain descript xsl associ pattern languag former dene real transform languag emphas focus transform part new featur refer xsl xslt rest paper main sourc denit xslt specic 7 bit dicult read especi one want impress languag work capabl remedi dene abstract formal model xslt incorpor featur necessari simul say xmlql purpos model twofold clean formal semant provid necessari mathemat model studi properti xslt ii formal model abstract away actual syntax xslt emphas featur way interest reader get feel languag capabl next use model gain insight xslt first obtain xslt comput unari monad secondord mso structur properti brief mso rstorder logic fo extend set quantic express versatil logic tree instanc captur mani robust formal like regular tree languag 25 queri automata 20 nite valu attribut grammar 22 moreov mso take inher order children vertic account desir properti xml pattern languag 13 24 structur pattern mean mso without join check whether valu two attribut see section 4 detail fact neven schwentick 19 show alreadi wrt structur pattern mso express fo extend variou kind regular path express thu current xml queri languag base fo extend regular path express alreadi indic xslt simul say xmlql next show xslt simul exist xml queri languag studi decid type check milo suciu vianu 16 dene k pebbl treetransduc formal captur express exist queri languag includ xmlql 9 xql 23 lorel 2 struql 14 unql 4 previou version xsl model take valu equat account need join instanc easili modi obtain xslt simul model therebi establish xslt express concret simul refer interest reader 3 show xmlql queri 9 express actual xslt want emphas provid model xslt instanc exclud forloop variabl instanti data valu result tree fragment idea want use variabl lookahead fetch data valu occur far current node result languag henc ture complet hope ecient evalu studi properti formal model howev beyond scope present paper import fact dene languag express say xmlql oppos previou version xsl 9 1 1 rest paper structur follow section 2 introduc import featur xslt mean two exampl section 3 dene formal model final section 4 obtain express result 2 xslt exampl basic xslt program collect templat rule rule consist match pattern mode indic nite state comput templat see exampl program figur 2 comput document start root start mode 2 proce roughli follow comput arriv node say u certain mode say q program tri nd templat rule mode q whose match pattern match u 3 nd templat rule program execut correspond templat latter usual instruct xslt produc xml output variou posit xml output select list node process refer pattern select node process select pattern select node process independ final document construct subprocess insert posit subprocess gener illustr new featur xslt use dtd figur 1 describ organ sequenc group togeth list top manag group id consist manag list group consist list employe simplic identifi employe id xslt program figur 2 comput pair employe top manag dierent bill direct indirect manag e 2 pair encod simpli pair element attribut topmgrid employeeid face program make join list top manag group manag one occur top manag list one occur manag group howev rather direct procedur way brief xslt program start appli rst templat rule root mode start rule select top manag mode selecttopmgr particular pattern organizationtopmgremploye match current node previou work dene formal model version xsl incorpor data valu 15 actual mode option conveni assum everi templat one start mode 3 usual exampl match pattern refer label current node fact show section 4 pattern suce organ element organ group topmgr element topmgr employe element group mgr group employe element mgr employe attlist group id id requir fig 1 dtd describ organ label organ select employe children topmgr children mean child select employe mode selecttopmgr second templat rule appli store employe id say e variabl varid veri use latter whether e 1 dierent bill select descend group manag id e 1 mode display particular select pattern second templat rule say select employe descend group child group whose manag id one store variabl varid symbol mean descend express bracket lter group element latter select xslt program pass id e 1 along paramet next employe select latter select program output element pair attribut valu e 1 e 2 attribut topmgrid employeeid respect program best way xslt comput desir queri nice illustr three import featur xslt mode variabl pass data valu let us discuss brie mode enabl xslt act dierent upon arriv element type instanc describ program arriv employe element action depend actual mode select display element select ii variabl use two purpos appar one illustr queri allow perform join data valu less appar applic use lookahead figur 5 give fragment xslt program evalu binari tree repres boolean circuit truth valu essenti use variabl allow bottomup comput restrict binari tree expositori purpos fact shown xslt evalu bottomup tree automaton unrank tree 17 brief arriv orlabel node program return correct truth valu base upon truth valu rst second subtre iii pass data valu templat rule crucial perform join item join far apart moreov xsltemplat matchorgan modestart xslapplytempl selectorganizationtopmgremploye modeselecttopmgr xsltemplat xsltemplat matchemploye modeselecttopmgr xslvariabl namevarid xslvalueof selectid xslvariabl xslif testvarid bill xslapplytempl modedisplay selectgroupmgremployeeidvaridgroupemploye xslwithparam namevarid selectvarid xslapplytempl xslif xsltemplat xsltemplat matchemploye modedisplay xslparam namevarid xslattribut nametopmgrid xslvalueof selectvarid xslattribut xslattribut nameemployeeid xslvalueof selectid xslattribut xsltemplat fig 2 xslt program comput queri section 2 group idhr employe idbil group idhrprod employe idedna group idhrprodempl employe idkat employe idronald group idhrqa employe idjohn group idhrqaempl employe idjan employe idjak employe idbil employe idjohn fig 3 xml document conform dtd figur 1 pair topmgridjohn employeeidjan pair topmgridjohn employeeidjak fig 4 output xslt program figur 2 document figur 3 node id present xml document 4 use mechan place pebbl input document enabl us complic group oper exactli three featur render xslt quit power transform languag xsltemplat matchor xslvariabl namearg1 xslapplytempl select1 xslvariabl xslvariabl namearg2 xslapplytempl select2 xslvariabl xslchoos xslwhen xslvalueof selectfals xslwhen xslotherwis xslvalueof selecttru xslotherwis xslchoos xsltemplat fig 5 fragment xslt program evalu treestructur boolean circuit take care ornod next section give abstract formal syntax xslt first restrict match pattern test label current node alreadi case figur 2 restrict theorem 8 show test mani properti current node bodi templat rule divid templat rule two part variabl denit part construct part variabl assign data valu particular variabl dene valu attribut current node xslt applytempl statement return exactli one data valu refer special templat select templat rule construct part templat rule actual output dene rel condit valu variabl paramet attribut valu current node possibl whether current node root leaf rst last child parent 4 xsl capabl gener see section 4 3 formal model xslt 31 tree forest start necessari denit regard tree forest nite alphabet symbol correspond element name xml document tree repres use tree adequ abstract actual xml document extend attribut take valu innit domain g set forest denot f induct dene follow everi 2 forest 2 f 2 f f forest f 1 f f 1 fn forest tree forest form f denot set tree note priori bound number children node forest follow whenev say tree forest alway mean tree forest reason consid forest even use xsl tree tree transform sometim need specifi templat rule construct forest everi forest f 2 f set node f denot nodesf subset n induct dene follow g thu tree node repres root ui repres ith child u forest node iu repres node u ith tree forest next add xml attribut dene attribut end rest paper x nite set attribut attribut forest domain pair f f 2 function assign valu node f set attribut forest domain denot f usual take howev creat output templat rule use attribut forest dfx 1 variabl refer dene variabl dene part templat cours real xml document usual element type set attribut obvious conveni necessari restrict analog way one dene set attribut tree denot set b f denot set attribut forest f b symbol b may appear leav f formal model abstract away particular select pattern languag recal xslt use pattern languag describ xpath 5 see 26 formal semant pattern rather involv illustr second templat rule figur 2 pattern depend valu variabl varid addit pattern also move instruct like select parent left sibl right sibl rst child actual proof theorem 9 indic local select enough simul exist xml queri languag follow assum innit set variabl x dene pattern variabl x x function denot set pattern x idea follow let p pattern tree variabl assign variabl p pt u set select node pattern appli node u 32 syntax denit 1 xslt program tupl alphabet input symbol alphabet output symbol c nite set construct select mode start 2 c start mode r nite set construct select templat rule dene mention end section 2 distinguish two type templat rule construct select one former use creat output result appli forest latter use fetch data val ue one return exactli one domain element mode determin natur templat construct select denit 2 construct applytemplatesexpress r atexpress short form qp z q 2 c p pattern z possibl empti sequenc variabl x domain element select express dene construct one restrict p select singl node everi tree assign variabl node u pt u singleton set denot set construct select atexpress c instanc applytempl express second templat figur 2 construct one correspond model express p pattern groupmgremployeeidvaridgroupemploye note applic pattern eventu lead gener element express construct sens eventu produc output denit 3 attribut express express form attribut atom test one follow express attribut express variabl domain ii express form root leaf rstchild lastchild final test boolean combin atom test comput express evalu valu attribut current node root leaf rstchild lastchild evalu true whenev current node root leaf rst last child parent select templat rule dene next recal output one domain element denit 4 let q 2 c 2 q select templat rule templat q x 1 return xs ys variabl former paramet latter local r 2 attribut express r 2 everi variabl occur among 1 c test contain variabl x fx everi z domain element variabl x select atexpress restrict variabl occur belong x denit 5 let q 2 c 2 q construct templat rule form select rule z forest f dx recal forest attribut take valu x leav may label construct atexpress restrict variabl occur atexpress occur leaf z x keep model total determinist requir exist exactli one q templat rule mode ensur xslt program gener tree tree translat requir z start construct templat rule tree rather forest exampl 6 illustr translat program figur 2 syntax pattern p 1 refer pattern rst second templat rule respect second templat rule displayp 2 varid tree consist one node label displayp 2 varid denot empti tree last rule pairtopmgrvarid employeeidmyid denot tree consist one node topmgrid employeeid myid readabl omit test true mode construct templat organizationstart return templat employeeselecttopmgr return varid 6 bill displayp 2 templat employeedisplayvarid return 33 semant dene semant need follow let w consist sequenc variabl x domain element function denot sequenc domain element obtain w replac occurr variabl x w x x 1 nd denot function map x next dene semant xslt program p tree thereto need follow concept local congur element nodest intuit u q mean program select node u mode q valu paramet eas present dene result p denot p direct procedur way latter advantag usual denit term rather complic formal correct rewrit relat tran parent drawback deal border case xslt program get innit cycl howev clear p un dene whenev one gener subprocess comput forev defer formal semant term rewrit relat full version paper distinguish two case let label u suppos q select mode p 2 let q templat rule form speci denit 4 r q p attribut express intuit templat evalu follow first valu variabl 1 dene valu attribut valu current node dene invok atrul comput desir data valu output determin z c rst test evalu true suppos variabl 1 assign domain valu e 1 atexpress e map x j j node select p p attribut express e u next suppos c rst condit evalu true interpret j e j x j j u root leaf rstchild lastchild true u root leaf rst last child parent respect ensur translat total requir least one c exist 5 z determin output valu follow way z constant variabl attribut express p equal correspond valu z select atexpress q 0 p w wxn yne v node select p pt xn fvg suppos q construct mode p let q templat rule form speci denit 5 suppos variabl 1 get assign valu e 1 rst condit evalu true z determin output valu follow way recal z forest f dx c forest attribut take valu x leav may label construct atexpress p forest obtain z replac everi occurr j x j valu attribut data valu e j j respect everi occurr q 0 p w atexpress leav z forest wxn wxn denot document order recal p wxn yne return attribut forest initi local congur dene start denit 7 result xslt program p tree denot p dene p start 34 remark conclud section remark first note xslt make explicit distinct construct select templat rule 5 obvious one could also add otherwis construct rather condit even variabl denit part construct part templat rule howev feel make explicit program becom structur hand incorpor everyth xslt oer instanc refrain includ forloop nevertheless show next section captur power fragment capabl simul exist xml queri languag even 4 express next show xslt capabl comput express structur pattern thereto rst say view attribut tree logic structur sens mathemat logic 10 binari relat symbol e unari relat symbol 2 domain view structur equal set node ie nodest e edg relat equal set pair v v everi v v 2 nodest relat speci order children node equal set pair v nodest set node label logic mso mso vocabulari mso dene usual way see eg 10 extend atom formula form attribut 2 denot latter atom formula semant dene follow attribut u valu note allow atom formula form allow join clearli mso dene xpath match pattern even fo denabl next theorem say xslt capabl express unari mso pattern particular mean one need match pattern templat xslt actual allow specifi rule like xsltemplat matchp modeq p pattern rather label mean rule appli node satisfi p next theorem impli one test p bodi templat rule henc need match pattern theorem 8 let x mso formula exist xslt program p mode q p u q proof due space limit give brief hint proof refer interest reader 17 start terminolog subtre root v denot v envelop v denot v tree obtain delet subtre root v keep v note v v v common let quantierdepth k denot unari mso formula x quantierdepth k hold x interpret v well known k v nite v xed k whether depend k 6 would case atom formula form comput unrank tree automata work v v v respect 20 v v tree v v distinguish node henc remain show xslt program comput bottomup unrank tree automata brief done use variabl lookahead like xslt program figur 5 studi decid type check milo suciu vianu 16 dene kpebbl treetransduc formal captur express exist xml queri languag transduc transform binari tree binari tree 7 next describ determinist transduc equal test data valu kpebbl determinist treetransduc use k pebbl mark certain node tree transit determin uniqu way current node symbol current state mode pre enceabs variou pebbl current node equal test attribut valu node pebbl locat pebbl order number 1 k machin place pebbl root move around remov actual use pebbl restrict stack disciplin ensur model becom power accept nontreeregular languag move transit output tran sition move transit follow kind movetopar movetorst child movetolastchild movetolefts movetorights remainand changest placenewpebbl pickcurrentpebbl two kind output transit binari output output symbol possibl attribut dene attribut valu pebbl node spawn two comput branch comput independ left right subtre branch inherit posit pebbl input commun branch move pebbl independ nullari output node output leaf output tree possibl attribut comput halt clear apart pebbl describ model extrem close xslt xslt equip mode state local movement simpl output transit assumpt node uniqu id xslt also simul pebbl 8 inde use k variabl x 1 x k time instanc x contain id node ith pebbl locat discuss immedi lead next theorem impli xslt simul current queri languag like instanc xmlql 16 refer interest 7 prove properti xml transform restrict binari tree usual sucient unrank one encod rank one cours case one tri dene formal model xslt work directli unrank tree 8 actual assumpt necessari xslt equip function generateid gener uniqu id current node furthermor id depend current node invok node sever time return valu need store node id comput demand reader 3 show xmlql queri 9 express actual xslt theorem 9 xslt simul kpebbl determinist treetransduc equal test data valu point nondeterminist treetransduc simul give nondeterminist semant xslt obviou way although discuss kpebbl transduc seem extrem close formal model xslt clear whether former simul latter inde theorem 8 show xslt check mso properti root tree know whether determinist kpebbl transduc fact problem close relat seemingli dicult open problem formal languag theori treewalk automata without pebbl dene mso denabl tree languag 11 12 21 hand theorem 8 hold nondeterminist kpebbl transduc furthermor clear whether determinist transform express simul xslt regardless known queri languag base rstorder logic extend regular path express like xmlql weaker mso 19 henc theorem 8 theorem 9 weaker xslt acknowledg last author thank bertram ludasch victor vianu encourag help discuss r data web lorel queri languag semistructur data exampl translat xmlql xslt queri languag optim techniqu unstructur data xml path languag xpath extens stylesheet languag xsl xsl transform version 10 world wide web consortium queri xml data finit model theori trip tree catch boat strudel experi websit manag system structur document transform base xsl type check xml transform design analysi queri languag structur document extens attribut grammar structur document queri express e queri automata power treewalkingautomata design xql semistructur data xml formal semant pattern xslt tr queri languag optim techniqu unstructur data languag automata logic express structur document queri languag base attribut grammar catch boat strudel queri automata macro tree transduc attribut grammar mso defin tree translat data web typecheck xml transform express effici pattern languag treestructur data extend abstract quilt structur document transform base xsl extens attribut grammar structur document queri ctr frank neven automata theori xml research acm sigmod record v31 n3 septemb 2002 michael benedikt wenfei fan gabriel kuper structur properti xpath fragment theoret comput scienc v336 n1 p331 25 may 2005 joost engelfriet hendrik jan hoogeboom bart samwel xml transform treewalk transduc invis pebbl proceed twentysixth acm sigmodsigactsigart symposium principl databas system june 1113 2007 beij china andrea maletti heiko vogler incompar result class polynomi tree seri transform journal automata languag combinator v10 n4 p535568 januari 2005 maarten marx maarten de rijk semant character navig xpath acm sigmod record v34 n2 june 2005 marten frank neven frontier tractabl typecheck simpl xml transform proceed twentythird acm sigmodsigactsigart symposium principl databas system june 1416 2004 pari franc marten frank neven complex typecheck topdown xml transform theoret comput scienc v336 n1 p153180 25 may 2005 frank neven thoma schwentick power treewalk automata inform comput v183 n1 p86103 may 25 frank neven power walk queri treestructur data proceed twentyfirst acm sigmodsigactsigart symposium principl databas system june 0305 2002 madison wisconsin makoto onizuka fong yee chan ryusuk michigami takashi honishi increment mainten materi xpathxslt view proceed 14th intern confer world wide web may 1014 2005 chiba japan marten frank neven frontier tractabl typecheck simpl xml transform journal comput system scienc v73 n3 p362390 may 2007 frank neven thoma schwentick victor vianu finit state machin string infinit alphabet acm transact comput logic tocl v5 n3 p403435 juli 2004 jan hidder philipp michiel jan paredaen roel vercammen lixqueri formal foundat xqueri research acm sigmod record v34 n4 p2126 decemb 2005 thoma schwentick automata xmla survey journal comput system scienc v73 n3 p289315 may 2007