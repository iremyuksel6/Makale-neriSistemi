combinatori structur waitfre solvabl task paper present selfcontain studi waitfre solvabl task new necessari condit waitfre solvabl base restrict set execut prove set execut induc simpletounderstand structur use prove tight bound kset consensu renam framework base topolog use elementari combinator contrast previou work reli algebra geometr argument b introduct paper studi task solv waitfre protocol sharedmemori asynchron system sharedmemori system consist n commun read write share variabl assum atom readwrit regist also assum process complet asynchron ie process run complet arbitrari speed process start input perform protocol halt output task specifi set output allow assign input process protocol waitfre process halt output within finit number step regardless behavior process task waitfre solvabl exist waitfre protocol solv studi waitfre solvabl task central theori distribut comput earli research studi specif task show solvabl eg approxim agreement 9 2nrenam 2 kset consensu k gamma 1 failur 7 unsolv eg consensu 10 n1renam 2 necessari suffici condit solvabl task presenc one process failur present 3 1993 signific advanc support grant 920233 unit statesisrael binat scienc foundat bsf jerusalem israel fund promot research technion email hagitcstechnionacil part work done visit mit laboratori comput scienc cambridg research laboratori dec support conacyt dgapa project unam email rajsbaumservidorunammx made understand problem 4 17 20 advanc yield new imposs result kset consensu 4 17 20 later 6 14 15 renam 17 15 well necessari suffici condit waitfre solvabl 17 18 particular interest use topolog notion investig problem suggest 17 20 yet much develop remain inaccess mani research sinc reli algebra geometr tool topolog paper present selfcontain studi waitfre solvabl task start first principl introduc new necessari suffici condit waitfre solvabl condit use prove tight bound renam kset consensu also use deriv extens necessari condit 3 approach borrow critic idea previou work area especi 4 5 17 18 20 integr unifi framework discuss relationship work previou work provid feel result present follow rough descript key notion combinatori topolog color simplex set element call vertic color process id color complex collect color simplex close contain map vertic one color complex vertic anoth simplici map simplex simplex color preserv vertex id p map vertex id p final complex whose largest simplex contain vertic pseudomanifold everi simplex contain either one two simplex vertic precis definit appear section 3 reli algebra geometr interpret novel combinatori concept use pseudomanifold divid imag simplex roughli pseudomanifold divid imag simplex boundari simplex divid imag preserv topolog structur simplex prove new necessari condit waitfre solvabl corollari 13 task waitfre solvabl exist divid imag complex possibl input straightforward see decis made protocol must induc simplici map divid imag complex possibl output must agre task specif present necessari suffici condit waitfre solvabl ie character waitfre solvabl task consid task waitfre protocol solv explicitli show subset protocol execut call immedi snapshot execut 4 20 induc divid imag complex possibl input use solut particip set problem 5 show properti also suffici name exist simplici map divid imag induc immedi snapshot execut output complex agre task problem waitfre solvabl prove divid imag induc immedi snapshot execut orient prove combinatori theorem extend sperner lemma orient divid imag theorem key complet combinatori proof mrenam waitfre solvabl 2n use basic sperner lemma also show kset consensu waitfre solvabl k n bound known tight see 2 7 respect divid imag play role similar span geometr version use 17 18 14 algebra version introduc 15 discuss definit 1 divid imag weaker mathemat properti geometr span particular may hole show full version paper orient divid imag correspond natur manner algebra span shown span exist 17 proof requir combin algebra homolog theori geometr subdivid simplex argument exist algebra span certain properti impli imposs set consensu renam 15 without reli involv argument 17 necessari suffici condit deriv exactli one prove herlihi shavit 18 explicitli construct specif wellstructur divid imag induc immedi snapshot execut herlihi shavit show arbitrari span exist 17 notion immedi snapshot execut introduc 4 20 basic idea need show immedi snapshot execut induc divid imag alreadi appear borowski gafni paper 4 howev interest properti immedi snapshot execut prove imposs result set consensu shown orient properti use renam imposs induc algebra span simpler combinatori notion divid imag gener condit waitfre solvabl deriv full version paper deriv anoth necessari condit waitfre solvabl corollari 13 differ natur condit base connect therefor comput condit extend condit solvabl presenc one failur 3 follow 11 16 comput necessari suffici condit waitfre solvabl 2 model comput model standard use mani paper follow 1 system consist n process determinist state machin possibl infinit number state associ process set local state among state process subset call initi state anoth subset call output state process commun mean finit number singlewrit multiread atom regist also call share variabl assumpt made regard size regist therefor may assum process p one regist r process p two atom oper avail entir state r read share variabl r return valu v system configur consist state process regist formal configur c vector hs local state process p v j valu share variabl r j denot state share variabl may attain valu domain includ special undefin valu initi configur configur everi local state initi state share variabl set consid interleav model concurr execut model sequenc step step perform singl process step process p perform either write oper read r oper perform local comput chang next local state next configur result modif assum process p follow local protocol p determinist determin p next step p determin whether p write read case read variabl r read function p local state next state function p current state valu v read r p write r p determin p next state function p current state assum local protocol ident ie depend state process id protocol collect p local protocol p event p simpli p index schedul finit infinit sequenc event execut finit infinit altern sequenc configur event c initi configur c k result appli event j k c kgamma1 k 1 schedul execut given execut process p view p ff denot ffji sequenc state c 0 state c intuit exampl decid ff without take step inform contain ffji p initi state process p faulti infinit schedul oe take finit number step ie finit number event oe nonfaulti otherwis definit also appli execut mean schedul assum process two special part state input valu output valu initi configur differ input valu process want local protocol depend process id id provid explicitli part input assum output valu irrevoc ie protocol overwrit output valu note definit process halt decid write output valu continu take step irrelev task delta domain input valu domain output valu specifi assign input valu process output valu written process protocol solv delta finit execut output valu alreadi written process complet infinit extens execut process nonfaulti output valu process allow input valu execut protocol waitfre everi nonfaulti process eventu write output valu 3 combinatori topolog concept section introduc basic topolog concept use pa per previou paper area eg 8 14 17 18 20 use geometr algebra interpret topolog structur contrast approach pure combinatori abstract idea 12 19 21 basic notion basi definit notion complex complex k collect finit nonempti set close contain oe element k everi nonempti subset oe element k nonempti subset oe face oe face oe proper equal oe element complex call simplex complex k 0 subcomplex complex k k 0 k dimens simplex oe dimo number element minu one simplex dimens m1 element call msimplex dimens complex k maximum dimens simplex consid complex finit dimens complex dimens call mcomplex sometim use superscript notat denot dimens simplex complex eg oe msimplex k mcomplex vertex set k union 0simplex k identifi vertex v 0simplex fvg consid two complex k l let f function vertic k vertic l f simplici everi simplex fv k simplex l note ffv 0 treat set sinc f need onetoon may repetit impli simplici map f extend simplex k intuit simplici map f map everi simplex oe k simplex foe perhap smaller dimens l extend f set simplex k defin fs set simplex foe l oe rang simplex clearli subcomplex k fs subcomplex l divid imag mcomplex k full dimens everi simplex k contain msimplex k let k complex full dimens gamma 1simplex k extern contain exactli one msimplex otherwis intern boundari complex k denot boundk subcomplex contain face extern simplex k clearli boundk full dimens abus notat let boundo set gamma 1face simplex oe complex k mpseudomanifold full dimens everi contain either one two msimplex 5 mmanifold mpseudomanifold everi gamma 1simplex contain two msimplex ie extern simplex follow combinatori definit play key role later cast structur protocol topolog framework complex complex k weak divid imag exist function assign simplex l subcomplex k 1 everi 2 k exist simplex oe 2 l 2 oe 2 everi oe singl vertex 3 everi oe oe assum k divid imag l also satisfi follow condit 4 everi oe 2 l oe dimoepseudomanifold say k divid imag l intuit divid imag obtain l replac simplex pseudomanifold make sure fit togeth sens condit 3 addit condit 1 guarante map condit 2 guarante map vertic l vertic k final condit 4 guarante preserv dimens boundari simplex l fig 1 show exampl divid imag complex contain two simplex figur solid line show boundari l 2 imag k 2 consid set oe let oe complex consist oe proper subset oe mpseudomanifold consist singl msimplex face particular import us case k divid imag oe case oe remark concept divid imag reminisc notion acycl carrier 7 19 associ subcomplex one complex simplex anoth munkr use acycl carrier studi subdivis fundament concept algebra topolog cf 19 21 howev divid imag differ subdivis even requir connect ad exampl 2dimension toru triangl remov surfac divid imag 2simplex sinc boundari 1dimension triangl howev 5 algebra topolog pseudomanifold assum addit properti requir applic 6 notic boundo set simplex boundo complex union simplex 7 confus notion carrier defin later fig 1 k 2 divid imag l 2 neither acycl carrier subdivid simplex sinc hole non trivial homolog group next proposit state simpl properti divid imag proof left full paper proposition2 let k divid imag l everi oe oe ii everi pair jsimplex oe j oe j2 l oe j6 oe j 2 oe j oe j6 pseudomanifold dimens strictli smaller j iii everi isimplex oe divid imag oe iv simplex extern extern simplex oe carrier simplex 2 k denot carr simplex oe 2 l smallest dimens 2 oe intuit carrier simplex smallest simplex l map definit 11 everi simplex 2 k oe oe 2 l proposit 2ii carrier uniqu therefor carrier welldefin connect j 0 jgraph k consist one vertex everi jsimplex k edg two vertic intersect j gamma 1simplex k k jconnect jgraph connect k 0connect consist singl vertex lemma 3 let k divid imag oe exist complex restrict k divid imag oe everi 1 everi oe 2 oe color complex k color associ valu set color vertic color proper differ vertic simplex differ color simplici preserv everi vertex v k color proper simplici map color preserv simplex fv vertic differ ie foe dimens oe let k divid imag l simplici map sperner color everi v 2 k v 2 carrv intuit fold k l requir vertex k goe vertex carrier main combinatori definit use complex k weak chromat divid imag l weak divid imag l proper sperner color let k divid imag oe next wellknown lemma say odd number msimplex k must go oe particular least one simplex lemma use section 7 follow index lemma lemma 17 present later lemma 5 sperner lemma consid divid imag k oe sperner color k exist odd number model task protocol section model distribut task use combinatori topolog adapt 17 18 framework task denot id ng domain valu v let p v set pair consist id id valu v domain input input complex n complex includ nsimplex ie subset n1 element p face vertic nsimplex differ id field domain output output complex n defin similarli val vertex n val denot input valu process p val vertex n val output valu process p note n n properli color id field full dimens n addit complex color necessarili properli correspond domain valu use combinatori topolog notion task identifi tripl n input complex n output complex delta map nsimplex n nonempti set nsimplex n sometim mention delta n n clear context simplex deltao n admiss output simplex oe n intuit oe n input simplex n 2 deltao n admiss simplex n admiss output configur system start input oe n extend delta simplex dimens smaller n ie execut n process less take step follow recal must possibl complet output process execut output process allow input execut therefor delta map input simplex oe dimens smaller n face nsimplex deltao n dimens id input simplex oe n contain oe extend manner deltam oe n subcomplex n anoth variant waitfre solvabl allow explicitli defin delta simplex dimens smaller n captur model ad part input bit tell process whether particip nonparticip process requir output default valu protocol complex say view process final process written output execut ff set f0 viewsff given protocol p protocol complex p n defin final view reachabl execut p follow nsimplex final view p n viewsff execut ff p addit p n contain face nsimplex protocol complex input nsimplex oe p n oe subcomplex p n contain nsimplex correspond execut p process start input oe face intuit exist execut ff initi valu oe view process ff note howev ff necessarili uniqu protocol complex p n union complex p n oe input nsimplex oe protocol waitfre p n oe finit sinc process termin finit number step observ protocol complex depend possibl interleav step schedul also transit process local state one regard p n color four colorsan id input valu view output valu note id color proper protocol impli decis map specifi output valu final view process p solv delta hold 2 correspond output simplex therefor ffi p simplici preserv id color furthermor input nsimplex oe ffi p p n oe complex sinc protocol depend input valu two input nsimplex oe oe 0 input valu ie differ permut id p n oe obtain p n oe 0 appli permut id therefor decis map must anonym ie ffi p p n oe determin ffi p p n oe 0 protocol depend id given part input definit impli solv hi n n deltai ffi p p n oe deltam oe everi nsimplex oe 2 n say agre delta round execut ff 1 round b execut ff 2 fig 2 execut ff 1 ff 2 indistinguish p1 p2 topolog interpret oper definit protocol solv task present end section 2 5 condit waitfre solvabl section defin immedi snapshot execut prove subcomplex induc chromat divid imag input complex impli necessari condit task solvabl waitfre protocol condit also suffici sinc immedi snapshot execut emul execut immedi snapshot execut short ise protocol sequenc round defin follow round k specifi concurr class call block 20 process id k process k call activ round k round k first activ process perform write oper increas order id activ process read regist ie perform oper increas order id assum concurr class alway nonempti seen given protocol immedi snapshot execut ff complet character sequenc concurr class therefor write immedi snapshot execut interest captur comput power model task delta waitfre solvabl exist waitfre protocol solv delta immedi snapshot execut shown part proof theorem 14 although wellstructur immedi snapshot execut still contain degre uncertainti sinc process know exactli process activ last round round p activ round k observ process p j activ ie perform write p know whether p j activ round k gamma 1 round k consid exampl fig 2 p 0 distinguish execut ff 1 view execut distinguish howev prove proposit 8 uncertainti process immedi snapshot execut denot subcomplex protocol complex contain immedi snapshot execut e n input simplex oe n 2 n e n oe n subcomplex immedi snapshot execut start oe n fig 3 ise complex process take one step show protocol waitfre use readwrit op erat ise complex divid imag input complex done defin function assign subcomplex e n simplex n fig 3 contain exampl immedi snapshot execut complex singl input simplex complex process take one step note simplex correspond execut ff 1 ff 2 fig 2 inde vertic correspond p 1 p 2 simplex ie p 1 p 2 view first need simpl definit simplex oe n n e n let idso set id appear vertic oe simplex oe n inputso set pair input correspond id appear vertic oe final simplex oe e n let viewso set view appear vertic oe let observedo set id process whose oper appear viewso 8 intuit p observedo view oe execut p take step notic id observ sinc process alway observ defin oe 2 n oe complex contain simplex face notic oe full dimens dimo fact use later proposition6 2 e n oe 2 n 2 oe id proof 0 face id 0 thu definit impli 2 oe id 8 recal id known process unless explicitli given input make definit concret special part process state captur ident defer exact detail full version idso sinc protocol waitfre exist execut process process idso process id view let simplex e n correspond execut note face claim follow ut first show ise complex weak divid imag input complex fact properti depend protocol waitfre type memori oper use ie protocol use atom readwrit oper lemma 7 e n weak chromat divid imag n proof clearli process id proper sperner color e n proceed prove three condit weak divid imag definit 1 hold condit 1 consid simplex n simplex oe n 2 n id n face n 2 oe n condit 2 follow sinc protocol determinist condit 3 follow proposit happen say process p j silent execut ff exist round everi round r k intuit mean process ever see step p j p j silent ff seen round formal process p j seen round k exist process p 0 last seen round p j largest round k p j seen definit impli proposition8 consid finit immedi snapshot execut ff p j silent ff k last seen round p j ff everi round r k b k 6 fp j g c either g consequ next lemma lemma 9 consid immedi snapshot execut complex e n let 1 isimplex e n correspond execut ff p 2 id p silent ff exist anoth isimplex e n differ p view correspond ff 0 ii exist anoth isimplex e n differ p view correspond ff 0 p j silent ff ff 0 k last seen round p j ff without loss gener p j kth concurr class 1 kth concurr class 2 fp j g lemma 10 everi simplex oe proof let follow definit show notic observ process id idso see step p j see step process idso follow p j view determin protocol determinist name igamma1 contain singl isimplex henc face definit 2 boundo direct proof similar sinc 2 boundo face impli igamma1 face singl observ lemma 9i henc observ follow impli 2 boundo ut intuit next lemma impli fix view process one remain process may one two view correspond two option proposit 8c show uncertainti anoth process restrict last seen round lemma 11 everi simplex oe 2 n oe ipseudomanifold proof note oe full dimens show simplex contain two isimplex let 2 oe igamma1 face sinc igamma1 properli color id exist id p j p j appear igamma1 fact simplex oe includ p j let ff prefix execut step process idso correspond take prefix two case case 1 p j silent ff observ see id idso view determin henc uniqu case 2 p j silent ff let k last seen round p j ff lemma 9ii impli two possibl view compat view g ut lemma 7 e n weak chromat divid imag n lemma 11 impli condit 4 definit 1 therefor theorem12 e n chromat divid imag n impli follow necessari condit waitfre solvabl deltai task exist waitfre protocol solv task exist chromat divid imag e n n colorpreserv id anonym simplici map ffi e n n agre delta restrict attent fullinform protocol process write whole state everi write share regist complex induc immedi snapshot execut fullinform protocol input complex n call full divid imag n follow necessari suffici condit waitfre solvabl theorem 14 let hi n n deltai task exist waitfre protocol solv task exist full divid imag e n n colorpreserv id anonym simplici map ffi e n n agre delta sketch proof assum exist protocol p solv delta without loss gener may assum p process oper write read regist r solv delta must solv delta immedi snapshot execut theorem 12 ise complex e n chromat divid imag n sinc protocol simul fullinform protocol correspond full divid imag also chromat divid imag n clearli ffi p colorpreserv id anonym simplici map n agre delta assum exist full divid imag e n n colorpreserv id anonym simplici map ffi e n n agre delta use protocol particip set problem 5 immedi snapshot execut simul fullinform manner use ffi output rule protocol get direct theorem ut remark theorem ignor issu comput clearli suffici condit requir ffi comput furthermor task solvabl impli way comput ffi therefor add requir comput necessari suffici condit waitfre solvabl previou theorem provid character waitfre solvabl task depend topolog properti hi see task solvabl input complex finit produc edivid imag n check simplici map ffi requir exist note interest protocol bound waitfre ie protocol hold within predetermin number step n produc e divid imag input complex finit recurs orient show ise complex e n orient chromat divid imag use prove induc algebra span 15 leav proof orient chromat divid imag induc algebra span full paper sinc obvious requir definit algebra span algebra concept differ flavor rest paper mpseudomanifold orient simplex equival class order vertic consist one particular order even permut vertic color id could consid posit orient one vertic order fig 4 orient 2pseudomanifold color bracket id small larg neg one two vertic smallest id exchang orient togeth even permut denot oe face oe vertex id remov eg oe 1 face id f0 mg orient msimplex induc orient face oe accord sign gamma1 exampl oe 2 orient hv induc orient k orient exist orient msimplex gamma 1simplex contain two msimplex get opposit induc orient k togeth orient orient pseudoman ifold see exampl fig 4 simpl orient 2pseudomanifold induc orient sequel sometim use combinatori notion orient full paper prove previou usual definit orient equival combinatori definit chromat pseudomanifold lemma 15 chromat pseudomanifold k orient msimplex partit two disjoint class two simplex share gamma 1face belong differ class say chromat divid imag oe k orient everi oe 2 oe oe orient theorem16 let e n chromat divid imag oe n correspond ise complex start input oe n processor take number step everi execut e n orient proof let oe face oe explicitli partit isimplex oe two disjoint class posit neg let length immedi snapshot execut number concurr class isimplex 2 oe posit length immedi snapshot execut correspond even otherwis neg ativ consid two isimplex iand share gamma 1face let p j processor whose view differ lemma 9 without loss gener kth concurr class iand kth concurr class ii last seen round p j furthermor sinc view processor exactli follow length correspond execut differ exactli one henc correspond simplex differ class ie differ orient ut 6 number monochromat simplex section prove combinatori lemma number monochromat simplex binari color orient divid imag lemma use next section show lower bound renam orient chromat divid imag oe fix orient k induc orient boundari k symmetr two ifac oe oe iand oe oe oe isomorph onetoon simplici map order preserv id v w belong simplex idv idw binari color b k symmetr definit motiv notion comparisonbas protocol renam present next section number monochromat msimplex k count orient ie msimplex count 1 posit orient otherwis count gamma1 exampl k consist two msimplex monochromat count would 0 sinc would opposit orient henc one would count 1 gamma1 main theorem section state k symmetr orient chromat divid imag oe symmetr binari color b proof theorem reli index lemmaa classic result combinatori topolog gener sperner lemma cf 12 p 201 state prove index lemma need follow definit fix color c k mg ksimplex k complet c color k content c c number complet msimplex count orient complet simplex count 1 order vertic given color agre orient count 1 order given color belong equival class order orient els count gamma1 exampl 2simplex 1 fig 4 order hv color order h0 1 2i henc would count 1 hand 2simplex 2 fig 4 order color order h1 0 2i henc would count gamma1 index c number 1simplex boundari k also count orient orient induc uniqu msimplex contain gamma 1simplex msimplex consid separ count 1 gamma1 induc orient argu prove consid follow case gamma 1face inter nal contribut 0 sinc contribut two msimplex contain cancel obvious intern gamma 1face contribut 0 extern gamma 1face boundari k count gamma1 orient therefor prove consid msimplex look follow case contain two 1face complet color complet color contribut 0 c note contribut 0 also sinc contribut two face cancel contain exactli one gamma 1face complet color must complet color contribut 1 gamma1 orient c well contain gamma 1face complet color complet color therefor contribut 0 c well final note contain two complet color ut theorem18 binari color theorem let k symmetr orient chromat divid imag oe symmetr binari color b proof let ae simplici map oe map vertex v whose id vertex whose id map rotat id rest proof assum subindic taken defin color k 1 everi v notic msimplex complet color c monochromat b moreov everi v let c content index k c clearli 6 0 proof induct 6 0 induct step consid boundk squeez use contract contract boundk obtain identifi one vertic v 0 anoth vertex v color delet simplex contain v v 0 consid intern gamma 2simplex mgamma2 2 boundk contain two link vertic v 1 vertex 1 mgamma2 v 2 vertex 2 mgamma2 binari color irreduc link vertic intern gamma 2simplex simplex oe differ binari color first stage proof appli sequenc specif contract color irreduc preserv properti contract appli symmetr contract choos intern gamma 2simplex mgamma2 2 oe contract appli two link vertic binari color contract mgamma2 simplex symmetr oe sequenc 1 contract notic simplex symmetr mgamma2 also intern link vertic binari color boundari proper symmetr boundari symmetr orient chromat divid imag oe symmetr binari color b next claim show symmetr contract preserv properti proper symmetr boundari assum appli symmetr contract boundk get complex bound 0 bound 0 nonempti proper symmetr boundari furthermor ibound 0 proof given note therefor bound 0 chromat also easi see orient bound 0 still well defin two gamma 1simplex gamma 2face common contract contract differ exactli one vertex addit v 1 thu two simplex opposit orient definit symmetr contract bound 0 remain symmetr induct hypothesi theorem monoo 6 0 everi sinc contract remov simplex opposit orient binari color monoo everi impli bound 0 nonempti ut claim 19 rest proof assum boundo nonempti proper symmetr boundari irreduc binari color recal 1simplex boundari k count sign proof first argu everi complet gamma 1simplex oe count sign see assum without loss gener consid color first compon vertex id second binari color consid path gamma 1simplex 2 color id color path must exist sinc lemma 3 assum oe 1connect notic color assign c 1 count remain show 1 orient henc count sign note path consist sequenc gamma 1simplex share mgamma2fac previou simplex differ previou simplex exactli one binari color thu path correspond sequenc binari vector start 0s vector end 0s vector vector differ previou vector exactli one binari color path correspond cycl hypercub graph sinc hypercub graph bipartit length cycl even therefor length path even clearli sinc complex orient consecut simplex path differ orient sinc length path even 1 orient henc 1 2 count sign next show complet gamma 1simplex differ oe also count sign without loss gener assum count note c color 1 f0 0 1 1g show complet gamma 1simplex 3 2 oe count sign without loss gener assum 3 complet id mg thu binari color vertex process id must 1 order get color 0 c impli c color 3 f1 1 2 binari color 1g consid simplex 2 2 oe 0 imag 1 symmetri map ae 0g consid path oe 0 3 sinc binari color vector 3 differ binari color vector 2 exactli one posit length path must odd therefor 3 must differ orient c color 3 f1 1 2 rotat wrt id henc order 2 3 agre sign permut odd eg 0g final orient 1 gamma1 time orient 2 sinc symmetr simplex oe oe 0 orient 1 2 agre even disagre otherwis therefor orient 1 3 agre count sign ut sinc bound nonempti contain least one simplex claim 20 impli 6 0 prove theorem ut applic section appli condit waitfre solvabl present earlier corollari 13 deriv two lower bound renam kset consensu first lower bound also reli theorem 18 therefor fact chromat divid imag induc immedi snapshot execut orient full version paper also deriv anoth necessari condit base connect 71 renam renam task 2 process start input valu origin name larg domain requir decid distinct output valu new name domain small possibl clearli task trivial process access id case process p decid yield smallest possibl domain avoid trivial solut requir process protocol anonym 2 process p origin name x execut protocol process p j origin name x captur combinatori topolog languag mrenam task tripl hd contain subset domain origin name differ valu n contain subset 0m new name differ valu delta map oe n 2 n nsimplex n use theorem 12 theorem prove waitfre anonym protocol mrenam task 2n gamma 1 bound tight sinc exist anonym waitfre protocol 2 2nrenam problem theorem 21 2n anonym waitfre protocol solv renam task proof assum way contradict p waitfre protocol mrenam task 2n gamma 1 without loss gener assum everi process execut number step also p comparisonbas ie protocol produc output input orderequival see herlihi 13 attribut observ eli gafni assum assum origin name 0 2n corollari 13 exist chromat full divid imag input complex n decis map impli p theorem 16 orient sinc protocol comparisonbas anonym follow two isimplex oe iand oe iof n ffi p map oe oe simplex output valu perhap differ process id binari color pariti new name assign therefor assumpt theorem satisfi soe n therefor least one simplex soe n monochromat ffi 0 hand note domain 0 2n gamma 1 includ n differ odd name similarli domain 0 2n gamma 1 includ n differ even name impli ffi 0 color simplex zero one ie simplex monochromat contradict ut 72 kset consensu intuit kset consensu task 7 process start input valu domain requir produc k differ output valu assur nontrivi requir output valu input valu process captur combinatori topolog languag kset consensu task tripl hd n n deltai n p domain delta map subset nsimplex n contain k differ valu valu oe n full version paper use theorem 12 sperner lemma prove waitfre protocol problem must least one execut k 1 differ valu output impli theorem22 k n exist waitfre protocol solv kset consensu task bound tight protocol 7 paper present studi waitfre solvabl base combinatori topol ogi inform defin notion chromat divid imag prove necessari condit waitfre solvabl exist simplici chromat map divid imag input output agre problem specif abl use theorem combinatori properti divid imag deriv tight lower bound renam kset consensu result use homolog group whose comput may complic also deriv new necessari suffici condit base specif well structur chromat divid imag mani question remain open first interest find applic necessari suffici condit present particular deriv interest protocol suffici condit second sever direct extend framework eg allow fewer n failur done one failur 3 handl primit object besid readwrit regist cf 14 6 incorpor ongo task acknowledg would like thank javier bracho eli gafni mauric herlihi nir shavit mark tuttl comment paper use discuss r waitfre algorithm fast renam asynchron environ combinatori character distribut 1solvabl task gener flp imposs result tresili asynchron comput immedi atom snapshot fast renam implic borowskygafni simul set consensu hierarchi choic allow fault set consensu problem total asynchron system tight lower bound kset agreement reach approxim agreement presenc fault imposs distribut commit one faulti process 3processor task undecid combinatori introduct topolog tutori set consensu use arbitrari object algebra span decid distribut decis task asynchron comput theorem resili task simpl construct comput theorem waitfre comput element waitfre kset agreement imposs topolog public knowledg tr ctr faith fich eric ruppert hundr imposs result distribut comput distribut comput v16 n23 p121163 septemb