tri approxim string match abstracttri offer text search cost independ size document search import larg document requir spell checker case insensit limit approxim regular secondari storag approxim search search pattern differ document k substitut transposit insert delet hitherto carri cost linear size document present triebas method whose cost independ document size experi show new method significantli outperform nearest competitor arguabl import case linear cost k method begin catch small file 2 larger file complex argument indic tri outperform linear method larger valu k trie index combin suffix compact storag text need store spell checker even obtain neg overhead 50 compress discuss varieti applic extens includ best match spell checker case insensit limit approxim regular express match b introduct need find approxim match string aris mani practic problem exampl optic charact reader interpret automat checker would need look result word say eoit dictionari find edit match one substitut writer may transpos two letter keyboard intend word worstcas run preproc time extra space ref naiv mn shiftor om jsigmaj ojsigmaj 4 patricia om log n 10 figur 1 exact match algorithm say sent detect instead error snet applic occur string text string dna base pair string music pitch durat string edg length displac diagram addit substitut transposit error includ insert delet approxim match problem string develop simpler problem exact match given text w n n charact alphabet sigma string pm charact p w baezay 2 review exact match algorithm summar figur 1 algorithm except naiv approach requir preprocess ing knuthmorrispratt kmp boyermoor bm shiftor algorithm preprocess search string p save comparison boyermoor algorithm sublinear practic better bigger depend n patricia method build trie truli sublinear 1 preprocess text search string although substanti greater linear algorithm need done text note tri size n built ram time secondari storag memori differ make better use n log n method practic size trie quot complex triebas method best suit larg text requir secondari storag emphas paper compar triebas method experiment linear method approxim string match add paramet k algorithm report match string differ text 1 term sublinear literatur two mean distinguish sublinear truli sublinear truli sublinear n mean ofn f sublinear function eg log n 1 sublinear mean truli sublinear multipl constant less 1 k chang chang replac substitut insert delet also transposit illustr oper formul damerau 8 notion edit distanc given levenshtein 15 dynam program dp algorithm shown wagner fischer 26 omn worst case ukkonen 24 improv okn clearli k find cutoff dp chang lawler 7 worst case get sublinear expect time onmk log om space oppos om 2 earlier method build suffix tree 27 16 patricia trie morrison 19 pattern method detect common substr kim shawetaylor 12 propos om log n algorithm preprocess gener ngram text repres trie compact baezay perlberg 5 propos count algorithm run time independ k r r bound zero charact pm distinct figur 2 summar discuss agrep 28 packag base relat idea also limit regular express match ie pm regular express regular express match kapproxim string match solv worstcas run preproc time extra space ref cutoff okn ok okn 24 suffix tree okn om om 7 ngram om log n 12 figur 2 kapproxim match algorithm differ problem problem area overlap eg p oneplac wildcard written regular express also 3approxim match coincid recent review techniqu book stephen 23 hall dowl 11 give earli survey approxim match techniqu work direct search rel small text ie larg fit ram text requir secondari storag far slow need olog n faster method convent file contain separ record 17 price must pay store index must built whole text unless text chang interest text order sequenc charact must store text well index repres addit storag requir interest text substr contain dictionari spell check need store index often achiev compress well retriev speed tri use index larg text 10 18 known truli sublinear way tri tree node empti potenti subtre letter alphabet sigma encod data eg 0 1 binari tri data repres node path root leaf thu string share prefix repres path branch common initi path consider compress achiev 2 substr match involv find path cost om log n plu term number result match log n compon reflect number bit requir store pointer text unimport regular express match 2 note compress index may still larger text typic index everi charact text section 4 index five time size text index everi word index smaller compress results18 dictionari search section 6 great compress simul regular express trie 9 also fast olog n n ff ff1 paper propos kapproxim match algorithm use damerau levenshtein dp text repres trie insight trie represent text drastic shorten dp theta n dp tabl use match given pm text w n would new tabl suffix w length n trie represent w compress suffix overlap path correspond column need evalu furthermor ukkonen cutoff use termin unsuccess search earli soon differ exceed k chang lawler 7 show ukkonen algorithm evalu ok column impli search trie depth ok fanout trie sigma trie method need evalu ok jsigmaj k dp tabl entri present method term fulltext retriev index text must store applic spell checker 14 text dictionari set word need store separ index special case describ case method offer neg storag overhead virtu compress addit fast perform compar work experiment agrep 28 show tri outperform agrep significantli small k number mismatch sinc agrep complex linear k trie search complex exponenti k agrep expect becom better tri larg k experi show breakeven occur beyond practic import case 1 sinc author agrep compar work thoroughli approxim search techniqu 28 make comparison paper organ follow next section introduc damerau levenshtein dp approxim string match section 3 briefli describ data structur give new algorithm approxim search text tri give experiment result compar approxim trie method agrep section 5 6 discuss extens advanc applic method includ import case dictionari check attain speedup compress conclud discuss possibl research program pattern target string respect use dpm distanc minimum number edit oper chang pm w edit oper either transpos two adjac symbol pm assum symbol drawn finit alphabet sigma given exampl exampl dp 7 3 sinc chang p 7 w 7 need 1 delet l edit distanc recurs defin follow els null charact els els evalu dpm w need invok four time subscript decreas two thu brute forc evalu must take o2 minm call howev dpm w m1theta1 possibl valu dp evalu dpm w store possibl valu mtheta tabl tabl 1 show 3theta4 dp tabl p 2 ab w 3 bbc tabl 1 dynam program furthermor necessari evalu everi valu dp tabl entri ukkonen 24 propos algorithm reduc tabl evalua tion algorithm work follow let c j maximum given j c j 0 given set c j largest 0 dp prove algorithm evalu expect entri shown tabl 2 p 4 adfd w 7 acdfbdf 5theta840 entri ukkonen algorithm evalu 23 entri k1 ukkonen algorithm set dp 1 initi time evalu first column row c 0 12 sinc largest entri valu column row 2 set c 1 2 evalu second column row c 1 13 sinc largest entri valu column row 2 set c 2 2 similarli evalu third column row c 2 13 get c 3 2 fourth column get c 4 3 fifth column get c 5 0 indic imposs chang prefix adfd acdfb less one edit oper thu know stop evalu want know exact valu dp 4 3 trie approxim search follow gonnet et al 9 use semiinfinit string sistr sistr suffix text start posit text consist mani sistr assum sistr start word boundari text echo enfold sampl enfac exampl six sistr kind figur 3 show sistr index trie construct sistr make figur 3 simpler truncat sistr first blank index full size sistr simpli replac leaf node sistr locat text prevent sistr proper suffix anoth append either arbitrari number null symbol text uniqu endoftext symbol index trie mani distinct properti ffl conduct depthfirst travers get sistr also get lexicograph order ffl search string say exampl branch decis node given charact string sought trie figur 3 test first letter e get left branch second letter x get right branch result search time proport length pattern string independ text size echo enfold sampl enfac exampl sistr echo enfold sampl enfac exampl enfold sampl enfac exampl sampl enfac exampl enfac exampl exampl exampl e f ho c ce ld ampl x le trie figur 3 text sistr index trie ffl common prefix sistr store trie give substanti data compress import index larg text trie method text found 10 18 22 describ briefli construct trie larg number extrem long sistr consid represent huge trie secondari storag tri could repres tree pointer subtre propos morrison 19 first came patricia trie text search orenstein 21 compact pointerless represent use two bit per node adapt secondari storag merrett shang 18 22 refin method made workabl patricia tri one bit per node essenti pointerless represent would entail sequenti search trie except bit partit secondari storag block trie node block group level level node either entir entir level block addit two integ per block sequenti search restrict within block may search tree detail represent see 22 31 two observ introduc approxim search algorithm give two observ link trie method dp techniqu observ trie path prefix share sistr subtri evalu dp tabl sistr ident column prefix therefor column need evalu suppos search string sane trie shown figur 3 calcul distanc word need evalu six tabl tabl 3 show three tabl entri ith column depend entri ji th column first letter target word word sampl prefix sam therefor share tabl entri third column first column word echo enfac enfold exampl first three column word enfac enfold gener given path length x dp entri word subtri ident xth column observ tell us edit distanc index word sistr gener calcul travers trie meantim store evalu one dp tabl share common prefix trie structur save us index space also search time observ ii entri column k word prefix distanc k therefor stop search subtri last tabl tabl 3 entri second column 1 search word differ stop evalu string subtri sure dsane en 1 reason evalu fourth column tabl sampl find entri 1 therefor stop evalu observ tell us necessari evalu everi sistr trie mani subtri bypass extrem case exact search one subtri trim 32 search algorithm algorithm figur 4 show two function dfsearch rieroot 1 travers index trie depthfirst editdist j evalu jth column dp tabl pattern string p target string w purpos illustr start stop evalu word boundari follow explan essenti algorithm trie walker cutoff reject reach leav given node c roottoc path w 1 w 2 w x prefix share string subt riec chang w 1 w 2 w x possibl prefix p cost k string subt riec array gamma1max gamma1max integ array 0max integ variabl ukkonen cutoff array 0max charact pattern target string w number allow error procedur dfsearch rienod anod level integ begin depthfirst trie search rienod leaf node charact node retriev charact one one wlevel retriev charact find target word output w1w2wj1 return editdist return level els child node retriev child node one one childnod retriev node wlevel retriev charact find target word output w1w2wj1 return editdist search subtri return dfsearch childnod level1 search subtri function begin evalu one column dp tabl i1 min cj11 lengthp evalu one tabl entri r pi1wj piwj1 1 els return cj0 1 els ti1j figur 4 approxim trie search algorithm mismatch henc need walk subtriec cutoff occur letter w j 1jx path caus call editdistj use ukkonen algorithm minim row evalu suppos misspel word pexsampl want word mismatch figur 5 show index trie intermedi result search evalu dp ech find entri third column 2 accord observ ii word w prefix ech reject word echo continu travers evalu dp enf know word w prefix enf therefor need walk subtri cut subtri sinc ech enf share prefix e copi first column ech evalu enf observ evalu path 3 find accept word search stop cut path 4 sa figur 5 show intermedi result search pattern string search path 2 search path 3 search path 4 string distanc action exsampl ech enf exampl sa reject cutoff accept cutoff depth first e fho c ce ld ampl x le figur 5 approxim trie search exampl 4 experiment result built tri five text 1 king jame bibl retriev ak barcacwashingtonedu 2 shakespear complet work provid oxford univers press next inc 3 section one unix manual page solbourn comput inc 4 c sourc program select randomli department teach machin 5 randomli select ftp file name provid bunyip inform system sistr start charact except word boundari blank tab charact tabl 4 show size five text index tri 41 search time randomli pick 5 substr five text search substr use agrep 28 trie algorithm elaps time cpu time measur two 25mhz next machin one 28mb ram 8mb ram tabl 5 show measur time averag five substr second test result show trie search algorithm significantli outperform agrep exact match approxim match one error exact match trie method usual give search time proport length search string measur show trie search time exact match directli relat text size requir data transfer one search path therefor insensit ram size let aek averag trie search depth averag number column evalu assur k proven aek k k less target string length 24 7 complet trie worst case text trie trie search algorithm find substr k mismatch ok jsigmaj k expect time jsigmaj k path depth k column dp tabl k row time independ trie size fact trie algorithm better agrep small k larg k agrep scan text linearli trie grow exponenti measur text rel small trie search bring data ram agrep ram size larger data size measur cpu time closer elaps time sinc queri test repeatedli data text trie cach ram therefor search cpubound howev smaller ram size larger text data search wait data transfer secondari storag sinc agrep scan entir text search time linearli proport text size file name differ test text file name distinct two substr resembl less help agrep stop evalu quickli help trie search make trie shallow toward complet trie take time scan top trie level extens trie search algorithm extend variou way exampl spell checker like ask best match rather word fix number error optic charact recogn may search word substitut search telephon licens number postal code etc user requir penalti certain type edit oper also combin exact search approxim search often rememb number sure text search pattern often express term regular express extens describ section except section 55 discuss 28 present use dp 51 best match applic know exact number error search want string minim number mismatch ie string 0k mismatch string text k 0 k mismatch use algorithm defin preset k small number less minim distanc ie exist string text dpattern k simpl method set k let arbitrari string text set better way search pattern use delet insert substitut travers trie follow pattern string whenev subtri correspond charact pattern skip charact pattern look subtri next charact number skip charact use initi k travers k path root leaf node whenev k k 0 set clear string found best match search decreas monoton 52 weight cost distanc evalu assum cost 1 edit op erat sometim may want differ cost exampl substitut cost least one delet one insert disallow delet complet make edit oper cost differ need modifi distanc function let r cost insert delet substitut transposit respect assum cost disallow oper say insert set 1 otherwis redefin els els furthermor may add cost c chang case exampl case insensit search set case sensit search set may even disallow case chang set check case differ let b mean b case defin c ij c els replac els els concept chang case extend even gener exampl search white page telephon number dont want apart number 304b recogn telephon number ie replac charact unless digit digit reason may want mix letter digit punctuat search licens plate rmp167 postal code h3a 2a7 applic use definit give new interpret c elabor 53 combin exact approxim search sometim know advanc certain part pattern may error exampl mani spell checker may give suggest garante suppos knew suffix rante spell right case want search part pattern exactli follow agrep standard 28 denot pattern garante charact insid edit use one four oper support exact approxim search pattern need modifi ij predic determin whether p member charact insid exact match let function p predic tell whether p last charact insid new definit els els els els r p els definit string guarante also match garante two insert disallow insert end exact match introduc anchor symbol borrow unix standard pattern garante mean target string must suffix rante need chang set p fals ie pattern look like similar way introduc anoth anchor symbol prevent insert begin exact match exampl garante mean target string must start letter g end suffix rante time set j p 0 true 54 approxim regular express search abil match regular express error import prac tice regular express match kapproxim string match solv differ problem may overlap coincid exampl regular express ac oneplac wildcard written 1approxim match substitut insert second charact baezay 5 propos search algorithm full regular express tri section extend trie algorithm deal regular express oper error howev extens oper work singl charact ie group oper exampl may search ab mismatch ab search tri full regular express approxim open problem 541 altern oper suppos want find postal code h3a 2a either 1 3 7 first introduc notat 137 borrow unix standard describ either 1 3 7 formal oper defin set altern charact thu h3a 2a7 match pattern h3a 2a137 exactli h3a 2a4 match pattern one mistak substitut one charact set allow charact easili achiev redefin oper section 2 section 52 respect pattern p 7 h3a 2a137 either 1 w j 3 w j 7 w j word p set allow charact match one charact defin oper case insensit version syntact sugar unix standard may denot az lower case letter ie rang charact aeiou anyth vowel ie complement list charact charact ie wild card 542 kleen star kleen star allow associ charact delet free replac one ident charact free exampl ac abc abbc abbbc match pattern abc exactli a09c mean unbound number digit appear c let function lambdap predic say kleen star associ pattern charact p support kleen star oper need chang ij ij rememb p mean delet p cost insert number cost give new definit follow els els 55 counter algorithm also extend provid counter unlik kleen star eg abc mean unbound number bs appear c pattern abc say ac abc match exactli want string abbc abbbc abbbbc abbbbbc ie two five bs c write pattern abbbbbc abf25gc unix syntax support counter need modifi ij sinc p mean charact delet free let us defin function p say counter symbol associ pattern charact p new definit els 6 dictionari search dictionari mean text file contain keyword ie set string pairwis distinguish dictionari search interest keyword relat pattern measur case edit distanc order locat keyword import us applic text file store entir trie structur trie figur 3 dictionari trie experiment result 22 show dictionari trie size 50 file size english word word provid algorithm exact approxim search also data structur compress data 50 search done structur without decompress oper search soundex code 20 exampl dictionari search replac english word soundex code store code dictionari trie abl search given soundex code effici exact trie search also reduc soundex code size half search invert file anoth exampl dictionari search invert file sort list keyword text trie structur keep order key store keyword dictionari trie either search keyword locat furthermor trie algorithm provid search method variou pattern without mismatch 7 conclus tri use search exact match long time paper expand trie method solv k approxim string match problem approxim search algorithm find candid word k differ larg set n word ok jsigmaj k expect worst time search time independ n algorithm achiev time complex known algorithm search trie depth first shortcut smaller k subtri cut irrelev subtri cut give exact string search time proport length string sought algorithm also use search full regular express 3 propos trie structur use two bit per node pointer trie structur design store larg set word string secondari storag trie partit page neighbor node parent children sibl cluster term page page organ tree like structur search time logarithm file size trie method outperform agrep result show order magnitud k0 factor 4 k1 k2 linear worst case perform agrep begin beat trie method moder larg document measur 8 futur work spell checker base search minim edit distanc perform excel typograph error phonet error exampl exsampl exampl one differ sinari sceneri three differ deal phonet misspel may follow veroniss work 25 give weight edit oper base phonet similar use noninteg distanc obtain finer grain score typograph phonet similar anoth solut follow convent assum mistak first two letter give higher penalti first mistak exclud first error allow us bypass mani subtri near trie root give quicker search time also reduc number possibl candid small set candid word impos linear phonet check even one differ short word say 2 letter match mani english word short word long word type error difficult correct context acknowledg work support canadian network centr excel nce institut robot intellig system iri project b3 ic2 natur scienc engin research council canada grant nserc ogp0004365 r myriad virtu suffix tree string search algorithm effici text search regular express new approach text search fast practic approxim string match fast string search algorithm approxim string match sublinear expect time techniqu comput detect correct spell error effici search text pictur new indic text pat tree pat array approxim string match approxim stringmatch algo rithm fast pattern match string techniqu automat correct word text binari code capabl correct delet space econom suffix tree construct algorithm relat inform system trie method repres text patent number multidimension tri use associ search trie method text spatial data secondari stor age string search algorithm find approxim pattern string computer correct phonograph error stringtostr correct problem linear pattern match algorithm fast text search tr ctr johan rnnblom higherror approxim dictionari search use estim hash comparison softwarepractic experi v37 n10 p10471059 august 2007 eik schallehn kaiuw sattler gunter saak advanc group aggreg data integr proceed tenth intern confer inform knowledg manag octob 0510 2001 atlanta georgia usa r w p luk timespac tradeoff analysi morphic trie imag ieee transact knowledg data engin v13 n6 p10281032 novemb 2001 kimmo fredriksson onlin approxim string match natur languag fundamenta informatica v72 n4 p453466 decemb 2006 sreeniva gollapudi rina panigrahi dictionari approxim string search longest prefix search proceed 15th acm intern confer inform knowledg manag novemb 0611 2006 arlington virginia usa liang jin chen li nick kouda anthoni k h tung index mix type approxim retriev proceed 31st intern confer larg data base august 30septemb 02 2005 trondheim norway eik schallehn kaiuw sattler gunter saak effici similaritybas oper data integr data knowledg engin v48 n3 p361387 march 2004 gonzalo navarro ricardo baezay joo marcelo azevedo arcoverd matchsimil flexibl approxim match tool search proper name journal american societi inform scienc technolog v54 n1 p315 januari jungim sanghyun park jeehe yoon sangwook kim effici approach sequenc match larg dna databas journal inform scienc v32 n1 p88104 februari 2006