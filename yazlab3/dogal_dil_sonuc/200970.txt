develop reflect model collabor system recent year seen shift percept natur hci interact system interfac work increasingli becom focu attent social scienc expand appreci import issu work practic adapt evolut interact system reorient view interact system accompani call new model design center around user need particip articl argu new process design enough new view necessit similar reorient structur system build outlin requir system support deeper concept interact argu tradit system design techniqu suit creat system final use exampl ongo work design open toolkit collabor applic illustr principl comput reflect metaobject protocol lead us toward new model base open abstract hold great promis address issu b introduct last ten year seen remark shift perspect design evalu use interact system field hci move rel minor compon softwar engin focu attent research varieti disciplin includ psycholog social scienc studi investig perspect led gradual evolut concept interfac computerbas work gener result hci increasingli come concern mechan interfac rang relat issu concern context interact system use 11 studi work interfac ground discuss new view interact system develop discuss three area research inform customis interact system embed within social organis coadapt system work practic 111 customis customis adapt comput system studi varieti context trigg et al 1987 studi adapt notecard hypertext system describ four aspect adapt could allow tool use differ applic area user differ work style flexibl provid gener reusabl object behaviour parameteris offer rang altern behaviour user could select integr link applic environ tailor allow user make chang system work show adapt system could appli wide essenti serv infrastructur within varieti inform manag applic could gener maclean et al 1990 also concern customis button system button graphic onscreen object encapsul behaviour incorpor onlin document sent electron mail button support multipl level customis simplest level name placement graphic appear customis advanc user chang explicit paramet customis particular need radic chang behaviour made modifi lisp code contain button design around level tailor flatten learn curv interact system establish tailor cultur customis encourag share also crucial investig share customis customis activ focu attent research mackay 1990b 1991 studi pattern share customis form configur file either whole part technic organis found remark amount customis perform share group rather privat activityeven softwar customis singleus nardi miller 1991 show similar collabor activ goe notion singleus activ program debug spreadsheet customis clearli widespread import phenomenon studi highlight import design system understand flexibl har exploit 112 social aspect system use ethnograph studi work practic technolog point strong social element present appar individu use technolog heath luff 1991 studi activ control room london underground transport system observ rang complex practic employ control ler particular show control would peripher monitor other activ order coordin action colleagu heath luff observ individu would quietli offer commentari activ specif might use colleagu work other use peripher monitor anticip similar set observ filippi theureau 1993 suchman 1992 harper et al 1991 studi differ settingin case control room air traffic control cen tre observ appar individualist activ frequent design facilit coordin individu investig point role physic artefact play process flight stripsus air traffic control record detail flight current manag air spacear notion design record inform individu howev practic emerg around artefact becom focu coordin activ suchman 1987 discuss issu gener concentr particular situated technolog use technolog technolog interact embed within social organis situat influenc must taken account attempt analys predict aspect system interact studi call question extent interact activ predict extern viewpoint yet predict basi tradit system develop approach 113 coadapt system practic third aspect draw togeth element previou two concern longerterm mutual evolut system work practic mackay 1990a present varieti case studi illustr pattern discuss perhap interest one studi inform len malon et al 1988 mackay 1989 len system design filter sort electron mail investig use reveal user adaptedor even subvertedfeatur inform len match work style turn led chang develop strategi incorpor develop mechan user creat spiral process base mutual interact system develop pattern usein mackay term coadapt phenomenon echo unanticip interact technolog work practic found sproull kiesler 1991 work organis impact electron commun technolog often constru electron offic memo subject rule procedur howev experi typic aspect electron mailin particular rapid turnaround emerg selforganis interest groupsresult differ pattern use often much surpris organis pattern becom better establish affect develop technolog coadapt spiral continu 12 revis view interact system set gener issu underli particular concern rais studi togeth form part wider reapprais natur computerbas work encourag us look beyond widget design understand interact system instanc focuss develop notion user interfac grudin 1993 shown extend beyond comput incorpor wider social organis issu aris use comput system elsewher grudin 1990 place develop within histor framework chang concern interfac design microlevel sentiment echo bower rodden 1993 found factor work specif settingth instal larg network cscw system particular observ studi customis social natur computerbas work coevolut system work practic address issu organis computerbas work practic highlight strong relationship practic social organis work gener computerbas work highli social organis result studi place emphasi variabl use point complex relationship gener pattern use detail particular activ surpris studi result reorient view fundament natur interact system reorient take account expand understand comput usag inde reorient take place move away view system fix blackbox artifact could object studi assess toward new view systemsinus acknowledg influenc element new view system situat within particular organis practic dynam place greater import studi pattern use cycl softwar adopt evolv specif work practic behaviour emerg around interact system time system tailor particular work style word system must abl support variabl expos investig like discuss shift perspect larg address interact system appear user particular set inde part gener trend toward particip usercentr approach system build howev rais import issu particularli design implementor interact system issu reach interfac paper want concentr structur system creat believ implic reconcept hci forc us reconsid notion systembuild mean chang process design alsocriticallyto artefact design particular show fundament mechan use construct softwar system support design interact system chang evolv draw work done area system develop ment show principl comput reflect lead open model system de velop revis key element use exampl ongo work design open cscw toolkit illustr approach tackl number exist flexibl problem start point investig questionwhat shift view interact system impli natur system design implic interact system design increas appreci issu discuss accompani call form design sensit thema form design orient specif around user need user involv see exampl norman draper 1986 ehn 1988bdker grnbk 1991 follow grudin 1991 highlight conflict usercentr approach design tradit system develop process take start point want explor construct system support sort practic outlin princip involv look technic implic new approach interact system work toward architectur model address aspect systemsinus perspect identifi two set consequ design concern cycl design creat evolv system 21 cycl design first reconsider cycl design tradit waterfal model softwar engin royc 1970 design system happen fix pointaft specif implement recent model boehm 1988 booch 1991 adopt iter prototypebas approach design distribut evenli develop process concentr one place despit differ least one point fundament agreement among model state point product deliv user commun point revis softwar design process assumpt must reconsid light systemsinus model take perspect forc ask question design happen de sign stop look interact system evolv artifact use follow process design end deliveri system commun user instead continu use adapt system lead second focuss set concern system develop look system structur construct deliv 22 creat evolv system develop interact system must concern tradit issu system de sign also issu provid system amen evolut adapt focu three particular aspect problem 1 open infrastructur perspect systemsinus begin see deliv system close static rather infrastructur specialis refin endus design provid framework within user chang adapt basic system pattern usag system develop concern appropri open within system ensur lend adapt natur appropri consid depth later moment consid appropri lend appropri ation addit extend model customis must consid way system lend customis function semant manipul inform interact system well present surfacelevel issu view interact 2 dynam reactiv system think user behaviour chang time must consid interact system support respond chang point view system need design dynam react pattern use activ system respons must situat sens user activ user need highli depend mani contextu factor pattern activ chang configur similarli system behaviour react context use 3 adapt evolv system addit immedi view system reactiv develop must also concern longerterm view evolut system research customis coadapt show evolut root social aspect work enabl part share customis impli import address issu natur customis mechan mean distribut share evolv timesupport maclean et al tailor cultur tailor context impli abil make chang also crucial chang adapt separ core function principl way maintain reach tailor core separ crucial tailor adapt transport abl person person also across softwar releas softwar product cycl shrink essenti user reli without separ user unlik make invest time effort tailor involv sinc effect lost next softwar releas issu system design develop set techniqu construct softwar system enabl distribut design phase throughout whole lifecycl system support softwar adapt evolut signific departur tradit focu softwar design focu develop fix algorithm manipul model applic domain instead focus way model might construct manipulateda metalevel problem one step remov applic domain 3 reflect open abstract view develop ongo work design system computersupport cooper work cscw cscw system natur strong requir flexibl open customis may perform user group whole even singl group might employ wide varieti work style cours work factor bring system develop facetofac issu reactiv adapt problem magnifi develop gener toolkit use gener varieti cscw applic may embodi differ model collabor result major goal work also provid applic develop suffici flexibl creat rang applic style reflect shift design focu outlin emphasi framework mechan interact style creat rather tradit approach provid select mechan particular compon select system approach develop base principl comput reflect smith 1982 mae 1987 particular metaobject protocol kiczal et al 1991 approach crucial steppingston toward goal flexibl design outlin provid way incorpor flexibl need design process artefact design fundament system open explicit chang adapt worth take time look mechan reflect way establish link gener model system action perform action rest section outlin reflect approach show develop metaobject protocol illustr protocol use particular case represent program languag show generalis notion open implemen tation return look design issu interact system 31 comput reflect metaobject protocol comput reflect principl comput system embodi within model behaviour selfrepresent causal connect behaviour causal connect impli represent describ also control behaviour system first result system examin behaviour examin model system reason activ second system make chang model henc chang behaviour essenti addit tradit baselevel comput concern system applic domain reflect enabl metalevel comput concern system manipul execut baselevel concept principl origin demonstr part execut model 3lisp reflect dialect lisp program languag 3lisp reflect facil realis give languag explicit access interpret program control behaviour de rivir smith 1984 look interpret structur 3lisp program could examin execut state stanc program could look function call sequenc record interpret data structur ask question like function arriv make chang struc ture program could alter futur behaviour instanc modif process bind structur would allow program chang way valu associ variabl sinc interpret structur repres program execut provid access gave 3lisp program facil reason control behaviour recent principl embodi 3lisp reflect model combin techniqu objectori program yield metaobject protocol metaobject protocol embodi reflect selfrepresent structur objectori program selfrepresent metaobject protocolbas system less explicit 3lisp much represent encod objectori structur access represent manipul provid object system use standard techniqu objectori program subclass specialisa tion overload etc exampl illustr mechan modifi system behaviour metaobject protocol provid first full metaobject protocol mop develop within definit common lisp object system clo bobrow et al 1988 bobrow et al 1993 1 clo mop creat reflect object system use object mechan creat objectori represent behaviour 2 reflect model chang standard objectori techniqu like objectori definit allow applic programm adapt object system semant particular need perhap effici particular platform compat system specialis behaviour enabl develop specialis applic 32 use clo mop explain clo mop littl concret present exampl applic programm revis design decis implement languag particular exampl focus issu instanc represent implement illustr gener approach objectori program languag clo implementor must design represent instanc object 3 record properti ident instanc valu slot simpl obviou mechan might alloc enough memori instanc slot defin size instanc particular class compil slot refer program appropriatelyvalu offset instanc bodi shown figur 1a posit slot x wellknown refer alway compil refer address object plu size slot x represent effici mani applic might built program languag let compil gener fast code slot access howev applic program well serv represent instanc consid knowledgebas applic applic programm might wish defin class refer peopl class might mani slot mani hundr refer variou properti individu might howev given instanc class would perhap defin use case simpl represent outlin abovewhich alloc memori slot whether hold valueswould inappropri instead applic programm would prefer mechan alloc space slot assign valueperhap one base lookup tabl instanc figur 1b illustr altern represent instanc maintain pointer slot actual valu tradit languag implement choic represent scheme hidden fix sinc hidden programm becom awar indirectlyeg effect perfor 1 sinc metaobject protocol incorpor relat languag eulisp bretthauer et al 1992 dylan shalit 1992 2 word clo reflect also metacircular defin 3 throughout paper use clo terminolog objectori concept individu object instanc class instanc contain number defin variabl call slot classspecif behaviour defin method group togeth gener function defin pattern interact manc particular case sinc fix programm use highlevel inform pro gram behaviour inform implement decis instead write code suit decis alreadi made implementorwhat kiczal 1992 refer code line mopbas languag howev applic programm revis decis languag implementorin case chang represent model use done tradit objectori techniqu fact program clo mop perform clo exampl mechan would roughli follow 1 class call standardclass normal userdefin class instanc stan dardclass known metaclass classesa metaclass class class 2 metaobject protocol defin gener function class includ function implement instanc alloc slot lookup method oper specialis standardclass henc appli instanc normal class 3 new metaclass embodi new instanc represent spars tabledriven approach defin subclass standardclass call sparseclass 4 sinc sparseclass subclass standardclass inherit method instanc alloc slot lookup standardclass howev defin new specif method overrid exist one appli instanc sparseclass 5 applic programm defin new method allocateinst gener function creat instanc represent slotvalueusingclass look slot figur 1a pack represent data valu held within object fix wellknown posit figur 1b spars represent object contain tabl associ assign slot pointer data contain x x x age weight height valu specif instanc sparseclass implement new spars slot represent 6 programm creat class like person sparseclass meta class class inherit classlik behaviour sparseclass henc use spars tabledriven instanc represent scheme exampl programm use knowledg requir specif applic revis implement decis revis perform use system reflect model behaviour new specialis behaviour associ subclass one system intern class sinc mop guarante use gener function implement intern behaviour approach use redirect object system behaviour sinc exploit polymorph objectori program techniqu new behaviour appli object specifi whose metaclass sparseclass without facil would necessari write ap plicat code convolut way live ineffici perform abandon particular object system altogeth benefit applic developerwho tailor system need particular applicationand languag implementorwho design languag much wider applic tradit one defin closs behaviour term metaobject protocol develop languag mean make languag open adapt avoid tradit problem within languag toolkit designa prematur commit forc upon system design make implement decis limit choic open later user system instead system specifi default behaviour baselevel behaviour object system whatev also provid mechan behaviour revis make appropri particular circumst result cours design mopbas system much less specif idea system use default behaviour specifi particular system gener use gener behaviour metaobject protocol defin framework within user creat customis system complex twolevel design task 33 extend mop approach exampl reflect system given concentr program languag 3lisp clo inde primari use reflect techniqu date provid flexibl semant program languag howev seen essenc reflect approach close relat problem open adapt discuss interact system design possibl could adapt reflect techniqu use area exampl show one start point would silica rao 1991 reflect window system form basi common lisp interfac manag clim silica provid basic window system infrastructur gener graphic window applic howev also provid set metalevel abstract use applic develop reach window infrastructur tailor need specif applic much saw clo silica metalevel interfac defin term metaobject window window compon contract contract manag relationship system compon deal issu geometri manag window stack refresh forth metalevel interfac use avoid sort problem motiv clo metaobject protocolthat situat implement decis window system infrastructur limit applic particular situat silica repres new departur discuss reflect system unlik 3lisp clo generalpurpos program languag silica defin termsa window system provid languag use construct window system clo 3lisp metacir cular wherea silica rao notion implement reflect embodi silica show appli reflect techniqu much wider rang applic area seen far recent work aris metaobject protocol experi open notion gener mean provid system client control abstract use kiczal 1992 present metaobject protocol one techniqu use realis open impl mentationssystem implement augment tradit abstract barrier modif terfac allow higherlevel user reach make appropri chang approach appli wide rang problem aris area infrastructur must support wide rang applic kiczal also introduc complementari notion open behaviour se mantic rather implement open chang higher level exampl clo domain pclo paepck 1988 pclo exploit metalevel hook mechan object creat access destroy creat persist version languag map object onto longterm storag databas behaviour system extend rather implement particular applic platform notion gener origin work program languag design point applic reflect techniqu much wider rang softwar applic areasin clude domain interact system 4 reflect toolkit cscw design approach system architectur present result current work design prospero flexibl toolkit cscw system individu cscw applic need flexibl along variou dimens first must static flexibl term customis particular individu group practic work style explor detail greenberg 1991 second must dynam flexibl respons chang group behaviour cours specif collabor even specif collabor session third must implement flexibl infrastructur interop requir chang time toolkit need provid develop suffici flexibl gener applic wide rang group applic usag set program languag fix implement languag abstract exist cscw toolkit groupkit roseman greenberg 1992 mmconf crowley et al 1990 forc structur impos fix model abstract distribut data man agement follow directli tradit structur techniqu softwar develop hide implement detail behind abstract barrier reach applic develop clearli valu approach particular isol applic develop toolkit concern focuss attent area specif applic cost rang applic develop within toolkit greatli restrict sinc implement decis within toolkit constrain kind interact support applic isol toolkit provid prevent develop use highlevel inform applic inform lowerlevel decis appropri current work use reflect techniqu address problem structur cscw toolkit around metaobject protocol allow us tackl two issu first well provid default behaviour specifi natur behaviour system give programm opportun specialis refin gener framework toolkit mean toolkit use provid customis support particular situat applic second selfrepresent present applic runtim allow appropriatelywritten program respond dynam adapt use section outlin way reflect approach appli cscw domain take highlevel descript gener applic behaviour show area concern cscw applic develop varieti strategi support within singl metalevel framework 41 use reflect cscw design appli reflect design cscw toolkit must open implement involv specifi gener behaviour underli system oper gener entiti behaviour act provid explicit access gener behaviour allow toolkit user ie programm specialis particular situat gener behaviour broken subprotocol specif area respons clearli huge number potenti area respons within toolkit one major issu mop design identif particular set concern design address order creat system flexibl manag look particular experi develop build applic toolkit cooper system see number issu embed design infrastructur yet strong implic kind applic support area candid approach current work concentr three main area manag user data distribut across time space mechan manag conflict user interact control linkag compon multipl user interfac area approach fundament involv specifi gener behaviour defin term gener function invoc metaob ject explicit represent system behaviour gener behaviour specialis applic develop increment modif represent action look use reflect techniqu area necessari lay highlevel structur relat full descript approach use prospero beyond scope paper simplifi account present interest reader refer treatment eg dourish 1994 consid system oper term gener edit oper appli share object gener layer function provid function editobject object user editop statemark object local refer global share object collabor workspac user represent user perform oper editop encod oper perform gener function editobject appli edit oper object return statemark describ new state implement term number lowerlevel gener function findobject object shobject lockobject shobject user editop lockid applyedit shobject user editop changemark propag changemark lockid statemark function perform compon oper editobject map local object pre 1 function given format use lisp program languag first term function name subsequ term name argument function sent within interfac object compon share workspac obtain access object appli chang propag chang wide releas lock use chang marker statemark encapsul state system variou point changemark record edit made yet commit statemark checkpoint global statu model present protocol use synchronis present view edit chang perform local howev long true gener model implement may behav differ set gener framework investig system variabl area data distribut conflict manag interfac linkag manag 411 data distribut issu data distribut bone content within cscw implement commun time term data distribut cover mechan system manag user data storag manipul data may replic distribut across multipl comput system must present view singl coher data store system mmconf crowley et al 1990 take fulli replic approach particip confer privat copi data other rapport ahuja et al 1990 use centralis architectur concentr data singl point network greenberg et al 1992 argu favour hybrid system combin approach solutionsrepl centralis hybridmak tradeoff effici complex approach taken particular toolkit seem clear solut appropri everi case occas centralis replic hybrid approach appropri time might need other instanc consid disconnect system interfac involv collabor perman connect other situat network latenc high intragroup interact low might use adopt migratori mechan allow data object move one node anoth network migrat isnt separ strategi combin three basic techniqu approach posit particularli appropri situat need abl express variabl toolkit perhap importantli data distribut approach adopt toolkit applic import consequ appear function usabl applic use centralis data store instanc neg affect respons time system use replic approach implic mainten data consist odd tradit view factor data distribut suffici lowlevel safe encapsul hidden behind abstract barrier 1 rather make decis upfront take reflect approach within toolkit provid default mechan manag data within multius system also give access mechan data distribut accomplish allow programm may find default behaviour inappropri case eg network topolog use reach toolkit provid new mechan use applic sampl subprotocol outlin manag data distribut larg findobject propag mechan isol locat distribut detail detail actual make chang object use findobject encod new mechan map interfac object underli share data instanc centralis system findob 1 interact distribut data manag issu synchroni interact also critic merit longer investig present ject alway return pointer central object store propag return local chang object server hand fulli replic system share object refer alway local complic method propag allow chang synchronis ap propriat import note though approach mere provid switch two mode instead provid framework new solut devis gener findobject propag allow mani altern includ hybrid migratori system creat sinc represent avail runtim rather simpli system defin opportun present amend data distribut mechan use dynam model would allow distribut strategi chang cours ongo collabor session allow applic adapt need group aris instanc consid two user share scrawlstyl whiteboard applic connect ethernet segment sinc connect fairli low roundtrip packet time high data integr system requir data manag fairli minim centralis approach probabl entir adequ howev thing chang third user join confer distanc connect via much slower dialup line situat centralis approach longer appropri sinc bandwidth link third user suffici support network interact data server action interfac system must switch runtim one algorithm anotherfrom centralis replic data represen tation reflect approach provid potenti multipl behaviour within gener frame work thu support form dynam adapt distribut associ object mixin 1 class chang class object result dynam switch differ behaviour reflect approach provid framework within new mechan defin mean attach use mechan select differ part system give three princip benefit would avail tradit solut first applic develop longer constrain decis within toolkit free adapt toolkit mechan need applic second toolkit develop longer need second guess specif need de velop restrict applic toolkit subset potenti applic third use reflect model runtim allow applic respond dynam environ requir particular situat within singl coher framework see pattern benefit repeat area appli comput reflect toolkit design 412 conflict manag import area concern collabor applic manag avoid conflict within share workspac conflict might occur instanc two user appli chang object variou techniqu employ deal sort situat includ floor control exclus lock system shredit mcguffin olson 1992 lock region share workspac prevent simultan updat sinc one user hold lock region given time other grove elli gibb 1989 use algorithm fix conflict afterward effect impos posthoc serialis chang user make essenc conflict manag strategi system abl provid guarante us er chang data lead loss synchronis data integr prospero exploit explicit represent guarante approach explor detail dourish 1994 ac 1 mixin class one ad class order bring new behaviour orthogon defin base class count howev focu sole system provid rapid access singl thread control even choos simpl approach lock consid impact particular lock mechan defin within toolkit might higherlevel usag issu instanc collabor system support freeform sketch brainstorm emphasi probabl unencumb access share work surfac user explicitli request explicitli relinquish lock data control floor overhead would high progress work would sever disrupt looser form control would need hand looser control would inappropri system data integr must rigor maintain control collabor softwar engin applic multius cad system gener control instruct mill machin data error due uncheck conflict could potenti disastr much stronger explicit form lock would requir neither approach satisfi need gener toolkit address problem reflect toolkit attempt provid metalevel interfac defin gener oper involv request obtain releas lock simpl protocol outlin start section 4 focu call lockobject implicit releaselock call propag protocol embodi lock polici instead deal procedur lock obtain facil creat instal new mechan gener function specifi well object lock function argument includ user request lock type oper perform system take inform account select lock mechan differ lock strategi may appli differ user activ differ sort object within system implementor reli object system gener dispatch mechan dynam select appropri lock implementa tion programm tailor lock strategi particular applic also build system lock mechan use reli specif detail user object involv basic mechan suffici open wide rang lock strategi defin allow implement standard strong weak lock also multiway lock held multipl peopl tickl lock idl may implicitli reassign user perform oper inde reproduc scheme grove dopt algo rithm explicit lock use make lockobject construct appropri state vector distribut call propag node use inform resolv ambigu aris conflict misord oper case regard dopt state vector implicit lock sens object allow conflict resolut word basic mechan use encod form conflict manag hardli lockbas 413 interfac linkag one obviou differ cscw system level link interfac fea ture linkag determin level control user way interfac appear without affect user collabor applic grossest level linkag screenrep licat use exampl timbuktu faralon 1987 screen linkag mean user see exactli thing screen share x system garfinkel et al 1989 link interfac level win dow user share content window screen may show independ applic window placement vari person person mani explicit multius tool shredit much looser replic data 1 user may differ view data may provid individu edit cursor within class system differ user see other interfac mani system separ user isol interfac research group interact synchron share system shown lowlevel cue use collabor creat awar activ progress group whole dourish bellotti 1992 recent work dewan choudhari 1991 haak wilson 1992 look provis switchabl linkag state user choos much interfac mirror other similar twomod switch facil avail ribi rein elli 1991 see requir flexibl within applic toolkit flexibl dynam compon nondynam aspect nowfamiliar toolkitlevel problem differ applic requir differ linkag strategi gener toolkit must abl support rang linkag option dewan work suit haak wilson sepia tackl problem well address dynam problem switch differ linkag mode collabor session howev system provid flexibl link specif mode predefin linkag strategi address part problem differ user group requir differ linkag strategi situat call strategi predefin option remain within framework clearli goal provid flexibl flexibl within constraint set need anticip toolkit de signer mechan parameteris open approach taken prospero make aspect interfac compon share object exactli like workspac data object illustr figur 2 way compon menu button state cursor posit subject mechan outlin earlier dynam distribut algo rithm mechan maintain consist workspac object use synchronis interfac result flexibl appli distribut data manag also appli 1 note concern replic interfac featur rather underli data represent discuss earlier system data guarante consist replic interfac figur 2 data object also interfac compon part share workspac interfac manag interfac compon explicitli share caus aspect interfac link separ broadcast allow individu control abl see other state privat case user see addit anoth properti common share data object move share workspac cours collabor mean link aspect user interfac dynam control adjust collabor continu 5 reflect adapt comput paper mainli concern use comput reflect relat techniqu way open implement provid flexibl techniqu discuss develop primarili domain program languag design recent similar issu come promin number area variou radic solut adopt go beyond tradit separ mechan polici often address issu similar discuss within context cscw design commun protocol data network tradit base layer approach form design exemplifi sevenlay iso protocol stack zimmerman 1980 endtoend commun requir broken differ area respons data represent convers direct hosttohost commun internetwork commun compon encapsul layer given machin layer interact layer directli recent howev need handl interact multimedia traffic issu aris design protocol gigabit network result breakdown model place flatter approach emerg traffic manag control directli applic rather hidden network softwar omalley peterson 1992 describ model applic compos kernelintern microprotocol larger unit optimis particular requir clark tennenhous 1990 propos concept integr layer process mechan avoid interlay ineffici emerg infrastructur examin point view particular endtoend system area oper system much function usual domain system open extern control one obviou exampl mach extern pager rashid et al 1987 allow user program involv aspect virtual memori system oper similarli anderson et al 1992 describ schedul activ mean avoid tradeoff implement thread tradit complet opaqu abstract implement base either oper system kernel user librari schedul activ provid finer grain control explicitli design allow applicationspecif customis trend repeat mani area interprocessor commun felten 1992 even microprocessor design athana silverman 1993 principl work exampl base understand tradit close abstract alway appropri highlevel system design gener particular design infrastructur compo nent variou solut orient around downward flow inform higher level applic lower level toolkit infrastructur order support better interact two downward flowfrom applic requir detail system supportmirror problem prospero address reflect techniqu reflect achiev open underli implement allow applic programm explor altern implement behaviour within metalevel framework correspond kay 1993 characteris latebind systemsthos design implement decis affect observ behaviour delay resolv much context possibl techniqu discuss deriv work program languag design latebind use import interact system especi cscw system contextu factor play larg part interact prospero toolkit cscw applic develop base principl concentr primarili issu data distribut conflict manag interfac linkag exampl paper drawn work progress system provid default behaviour use construct applic usual way appropri importantli though also provid metalevel framework use revis implement decis extend structur cover new area make toolkit appropri rang applic 6 summari primari focu paper model implement interact system argu recent year seen fundament reorient view interact system use turn forc reorient view system design structur particular appreci need use customis facil role work practic situat system use coadapt natur system use user behaviour lead us model system design emphasis open dynam behavior evolut system practic move away static system lead us reconsid architectur underli interact system enough simpli chang process design instead need chang natur artefact draw principl techniqu comput reflect deriv origin research program languag semant outlin model interact system design orient specif toward new goal flexibl adapt particular model current use implement basi toolkit cscw design outlin toolkit tackl number current problem cscw toolkit must use wide rang differ circumst situat work current ongo hope reflect toolkit cscw provid insight gener applic notion open implement behaviour rang current problem interact system design acknowledg idea express paper would never seen light day without contribut encourag mani peopl would particularli like thank hal abelson bob anderson victoria bel lotti danni bobrow jon crowcroft gregor kiczal wendi mackay fruit enlighten di cussion grate annett adler jon crowcroft laura dekker marg eldridg lorna goul den jonathan grudin gillian ritchi lisa tweedi anonym review care read valuabl comment earlier draft paper r comparison applic share mechan realtim desktop conferenc system schedul activ effect kernel support userlevel manag parallel processor reconfigur instructionset metamorphosi common lisp object system specif clo context shape design space cooper prototyp user design mutual activ spiral model softwar develop enhanc object orient design explod interfac experi cscw network balanc eulisp metaobject protocol architectur consider new gener protocol mmconf infrastructur build share multimedia applic flexibl user interfac coupl collabor system divergencebas model synchroni distribut collabor system awar coordin share workspac workori design comput artifact concurr control groupwar system timbuktu next best thing case applicationspecif commun protocol sharedx multius interfac user guid version 20 personalis groupwar accommod individu role group differ human technic factor distribut group draw tool comput reach histor continu interfac design obstacl user involv softwar product develop implic cscw interfac evolv concept support collabor write hyperdocu harmoni work cscw comput technolog air traffic control collabor activ technolog design task coordin london underground control room earli histori smalltalk art metaobject protocol toward new model abstract softwar engin user customis softwar coadapt phenomenon pattern share customis softwar trigger barrier customis softwar shredit share electron workspac usertailor system press issu button comput reflect semistructur messag surprisingli use computersupport coordin twinkl light nest loop distribut problem solv spreadsheet develop usercent system design pclo flexibl implementaton clo persist rendezv architectur synchron multius applic implement reflect silica machineindepend virtual memori manag page uniprocessor multiprocessor architectur ribi realtim group hypertext system implement procedur reflect languag groupkit groupwar toolkit build realtim conferenc applica tion manag develop larg softwar system dylan objectori dynam languag reflect semant procedur languag connect new way work network organis plan situat action technolog account lizard aeroplan adapt tailor notecard osi refer modelth iso model architectur open system interconnect tr semistructur messag surprisingli use computersupport coordin machineindepend virtual memori manag page uniprocessor multiprocessor architectur spiral model softwar develop enhanc pclo flexibl implement clo persist concurr control groupwar system experienc inform len user use rule object orient design applic comparison applic share mechan realtim desktop conferenc system usertailor system press issu button pattern share customiz softwar mmconf infrastructur build share multimedia applic architectur consider new gener protocol ribi obstacl user involv softwar product develop implic cscw cooper prototyp flexibl user interfac coupl collabor system trigger barrier custom softwar art metaobject protocol connect harmoni work cscw twinkl light nest loop dynam network architectur groupkit awar coordin share workspac support collabor write hyperdocu sepia schedul activ interfac evolv concept earli histori smalltalk clo context explod interfac human technic factor distribut group draw tool processor reconfigur instructionset metamorphosi implement reflect silica ctr carljohan orr christoph paul middup sphere collabor peopl space technolog coloc meet proceed 4th nordic confer humancomput interact chang role p389392 octob 1418 2006 oslo norway robert w hall amit mathur farnam jahanian atul prakash craig rassmussen corona commun servic scalabl reliabl group collabor system proceed 1996 acm confer comput support cooper work p140149 novemb 1620 1996 boston massachusett unit state weigang wang jrg haak tailor groupwar cooper hypermediaapproach comput support cooper work v9 n1 p123146 2000 jakob humm bernard merialdo design extens componentbas groupwar comput support cooper work v9 n1 p5374 2000 kai lin david chen chengzheng sun geoff dromey maintain constraint collabor graphic system cogs approach proceed ninth confer european confer comput support cooper work p185204 septemb 1822 2005 pari franc paul dourish consist guarante exploit applic semant consist manag collabor toolkit proceed 1996 acm confer comput support cooper work p268277 novemb 1620 1996 boston massachusett unit state paul dourish part way diverg data manag collabor work proceed fourth confer european confer computersupport cooper work p215230 septemb 1014 1995 stockholm sweden richard bentley paul dourish medium versu mechan support collabor customis proceed fourth confer european confer computersupport cooper work p133148 septemb 1014 1995 stockholm sweden demonstr custom share whiteboard support userdefin semant relationship among object proceed 2001 intern acm siggroup confer support group work septemb 30octob 03 2001 boulder colorado usa matthew chalmer hermeneut inform represent european journal inform system v13 n3 p210220 septemb 2004 matthew chalmer areti galani seam interweav heterogen theori design interact system proceed 2004 confer design interact system process practic method techniqu august 0104 2004 cambridg usa paul dourish w keith edward tale two toolkit relat infrastructur andus flexibl cscw toolkit comput support cooper work v9 n1 p3351 2000 peter j kammer gregori alan bolcer richard n taylor arthur hitomi mark bergman techniqu support dynam adapt workflow comput support cooper work v9 n34 p269292 aug 2000 richard bentley flexibl architectur cscw system support acm sigoi bulletin v15 n3 p57 april 1995 panagioti lourida pericl loucopoulo gener model reflect design acm transact softwar engin methodolog tosem v9 n2 p199237 april 2000 lesley seebeck richard kim simon kaplan emerg tempor behaviour collabor work proceed ninth confer european confer comput support cooper work p123142 septemb 1822 2005 pari franc matthew chalmer histor view context comput support cooper work v13 n34 p223247 august 2004 paul dourish use metalevel techniqu flexibl toolkit cscw applic acm transact computerhuman interact tochi v5 n2 p109155 june 1998 prasun dewan integr approach design evalu collaborativeappl infrastructur comput support cooper work v10 n1 p75111 jan 2001