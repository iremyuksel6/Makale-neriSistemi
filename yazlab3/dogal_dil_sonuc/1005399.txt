logicbas subsumpt architectur describ logicbas ai architectur base brook subsumpt architectur architectur axiomat differ layer control firstord logic fol use independ theorem prover deriv layer output given input implement subsumpt lower layer higher layer use nonmonoton reason principl particular use circumscript make default assumpt lower layer nonmonoton retract assumpt higher layer draw new conclus also give formal semant approach final describ layer design task robot control system implement use architectur control nomad 200 mobil robotour system combin virtu use representandreason paradigm behavioraldecomposit paradigm allow multipl goal servic simultan reactiv also allow highlevel task toler differ chang elabor knowledg runtim final allow us give commonsens knowledg robot report sever experi empir show feasibl use fulli express fol theorem prover robot control architectur benefit claim b introduct brook 1986 rodney brook provid decomposit problem robot control layer correspond level behavior rather accord sequenti function form within set introduc idea subsumpt complex layer could depend lower reactiv layer could also influenc behavior result architectur one could servic simultan multipl potenti conflict goal reactiv fashion give preced high prioriti goal realiz hardwar architectur lack declar make difficult implement higherlevel reason make semant unclear furthermor increas hardwar complex new layer introduc scale problem fi nalli reli hardwar specif architectur specif orient toward robot control applic softwar agent softwarebas intellig agent problem extend similar architectur complex task goal agent necessarili physic alreadi rais discuss gener line minski 1985 stein 1997 knowledg practic ai architectur develop along line paper describ architectur model spirit brook subsumpt architectur reli logic framework wider applic extend manner describ logicbas subsumpt architectur includ set logic theori correspond layer sens brook archi tectur layer suppli separ theorem prover allow system layer oper concur rentli use approxim nonmonoton reason model connect theori allow layer make nonmonoton assump tion layer perform independ perform layer thu support reactiv iti demonstr architectur model brook first two layer show empir layer greatest demand reactiv suffici fast 02 03 second per controlloop cycl empir result show generalpurpos theorem prover use intellig agent without sacrif reactiv remaind paper organ follow give brief introduct brook system logic ai describ gener architectur embodi collect theori use decoupl interact exhibit complex behavior describ represent first two layer brook system describ subsumpt gener oper system implement use theorem prove negationasfailur techniqu give formal semant approach use circum scription discuss implement issu conclud comparison relat work sketch futur direct work first step toward creat gener logicbas ai architectur effici scalabl support reactiv architectur longterm goal background 21 brook subsumpt architectur brook show decompos system parallel task behavior increas level compet oppos standard function decomposit advantag wherea typic function decomposit might resembl sequenc sensor task recognit motor control brook would decompos domain follow avoid object monitor chang identifi object plan action reason object behavior increas level compet potenti benefit approach includ increas robust concurr support increment construc tion eas test underli assumpt complex behavior product simpl mechan interact complex environ focu simplic led design individu layer compos simpl state machin modul oper asynchron without central control gener differ layer complet depend exampl decomposit wander explor depend robot abil avoid object often system may abl servic multipl goal parallel despit depen denc howev occasion goal one layer conflict anoth layer instanc would expect higher prioriti goal overrid lower prioriti one address issu subsumpt architectur provid mechan higher layer may interfer oper lower layer first possibl higher layer observ state lower layer second possibl higher layer inhibit output andor suppress overrid input modul lower layer consequ compet layer adjust behavior reactiv layer time possibl high prioriti task lower layer halt object deadahead continu high preced simpli allow higher layer tamper particular task brook 1986 brook describ detail first three layer one particular robot control system implement use subsumpt architectur con cept first two shown figur 1 briefli describ three layer avoid basic layer system endow robot obstacl avoid capabl obstacl appear directli ahead robot path halt collid gener whenev obstacl vicin use direct distanc respect robot comput new head move away obstacl much possibl detail layer accept sonar read robot surround sonar modul output map vicin base read ing collid modul check obstacl directli ahead forc robot stop regardless modul feelforc modul use map calcul combin repuls forc surround object exert robot runaway modul check forc signific enough pay attent case determin new head speed robot move away forc turn modul command robot make requir turn pass speed forward modul halt state command robot move forward specifi speed away robot get smaller speed comput runaway modul wander wander layer consist two modul togeth avoid layer caus robot move around aimlessli otherwis oc cupi everi often wander modul choos new random direct robot move avoid modul combin output avoid layer feelforc modul comput overal head suppress input avoid layer turn modul henc wander mode activ overrid default head comput avoid layer explor layer begin add primit goaldirect behavior robot repertoir robot period check see idl choos locat distanc head toward explor explor mode inhibit wander layer remain less track toward destin howev like wander layer take advantag avoid layer capabl prevent collis dont model layer paper first two layer suffici demonstr propos refer reader brook 1986 detail 22 logic circumscript sinc earli day ai logic held promis serv main knowledg represent languag futur intellig machin mccarthi 1958 last decad theorem prover becam wide spread formal verif tool late robot system wield logic emerg eg shanahan 1996gi acomo lesper levesqu 1997 logic paradigm mccarthi circumscript mccarthi 1980 one first major nonmonoton reason tool sinc debut nonmonoton reason line work expand sever textbook exist give fair view nonmonoton reason use eg brewka 1991 antoni 1997 brewka dix konolig 1997 dm gabbay 1994 sandewal 1994 shanahan 1997 motiv nonmonoton reason vari formal common sens reason elabor toler repres uncertainti belief revis expand motiv reader may look shanahan 1997mccarthi 1998pearl 1990 antoni 1997 detail direct mccarthi circumscript formula mccarthi feelforc runaway turn forward avoid wander collid sonar head turn fwd object wanderhead encod sensorread robot head forc robot robot speed figur 1 layer 0 1 brook subsumpt architectur robot control system say theori paramet relat function sequenc minim element ap z still consist allow vari z order allow p becom smaller take exampl follow simpl theori circumscript block vari noth ing circt block equival minim block conclud block world mention origin theori 3 logicbas subsumpt architectur section dedic describ propos ar chitectur first give intuit account approxim semant system describ architectur detail give idea goal embodi final describ build system approxim brook propos way 31 intuit logicbas subsumpt architectur lsa compos sequenc logic theori suppli theorem prover theori commun underneath sequenc subsum modifi control behavior lowerlevel ori asid collect theori sensor affect theori manipul affect theori precis result found theorem prover descript follow assum architectur use control cylindr robot sonar sensor perimet wheel control motion sensor manipul assum stage want system base premis work loop follow first physic sonar collect data assert form logic axiom sonar readingsonar dist axiom ad 1 appropri theori sequenc theori compris system time assert input come layer higherlevel theori kind input replac cycl new input ask theorem prover layer find requir output layer output specifi action nipul reach conclus transmit relev one output specifi action manipul robot manipul robot execut request action loop start figur 2 illustr process theori 1 theori 0 sensor effector figur 2 abstract diagram lsa 1 iter sonar read replac previou input new one logicbas subsumpt architectur follow gener pattern make sure loop fast enough time get conclus world differ world base conclus eg make sure robot fall cliff plan way avoid cliff edg notic fact sever loop differ time differ layer theorem prover reactiv loop one count speed overal loop describ behavior achiev next section 32 architectur behavior decomposit first import idea borrow brook architectur decompos domain along behavior line rather along standard sequenti function line chang paradigm make possibl view robot control problem set loos coupl process henc paralleliz claim get similar perform benefit appli paradigm logic version subsumpt architectur build lsa repres layer axiomat layer behavior layer input output state includ depend support task layer architectur layerinput layeroutput predicatesfunct intend go either fromto sensorsactu fromto lower layer ignor interlay interact moment output layer determin run separ theorem prover layer treatment represent buy us benefit first axiomat layer gener much smaller whole system cycl less comput expens run one theorem prover whole compound axiomat second decoupl differ layer behavior way becom possibl achiev reactiv behavior brook system lower layer control basic behavior need wait higher layer complet comput respond situat rather sinc lower layer trust autonom higher layer ac tive lower layer still behav validli layer simpler axiomat gener cycl time comput output shorter higher complex layer lead overal high perform import exampl want robot continu avoid obstacl tri plan next line action note although modul import construct brook architectur represent modul serv mostli syntact sugar provid conceptu clariti regard oper layer given theori denot hasten point howev rel independ modul axiomat could also exploit eg separ theorem prove session determin intermedi modul output make possibl pipelin oper layer subsumpt principl cours layer fulli independ fundament featur brook subsumpt architectur abil higher layer observ interfer oper lower layer particular suppress inhibit capabl provid mean otherwis independ layer may interact allow highlevel goal overrideadjust default lowlevel reactiv behavior adopt view togeth taskbas decomposit idea coupl approach repres import natur paradigm intellig agent gener robot control particular see stein 1997 howev implement idea logic set rais follow issu gener one layer overrid anoth two disagre particular modul input therefor two correspond theori inconsist need formal higherlay theori preced lowerlay way conflict fact either theori hold overal state system b event conflict overal state side higher layer c independ fact eg input either layer remain unchang number techniqu develop logic com muniti nonmonoton techniqu belief vision applic chosen use circum scription although agre approach may equal interest appropri circumscriptionbas subsumpt describ earlier layer logic theori distinguish three part logic theori 1 bodi level 2 sensori latch input latch 3 output see figur 3 bodi layer constant theori layer latch use accept input replac everi cycl rather accumul output simpli output sentenc prove layer includ latch follow assum arbitrari level theori layer languag l distinguish input languag l ae l constitut languag allow latch layer languag theori influenc serv assert come sensor higherlevel layer output languag ae l use limit queri theori ask languag includ output assert lowerlevel layer use actuat control implement idea subsumpt let layer assumpt input may later adjust higherlevel layer assumpt take form abnorm bodi l1 input sensor output latch bodi sensor output latch l2 input figur 3 detail look two layer predic ab whose negat precondit sentenc languag l bodi layer assumpt also take form close worldassumpt cwa minim predic l minim vari l make sure assumpt propag exam ple higherlevel layer assert lowerlevel layer exist object previous exclud use cwa cycl particular layer first assert layer latch sentenc higher layer may infer respect output languag higher layer appli sumption circumscrib ab predic input predic enforc cwa theori vari predic function l theorem prover obtain appropri output layer take account sert interfer higher layer formal let layer theori layer ab addit abnorm constant symbol c set predic l wish assert cwa subsumpt achiev use parallel circumscript polici implement point view mani time formula substitut simpl extern logic mechan interfer determin valu minim predic discuss issu section 4 semant ignor mechan run behind scene moment eg ignor time differ theorem prover differ layer consid entir system layer one logic theori formal logic theori follow let layer ab c mention combin system describ equival circlay 0 circlay 1 33 model brook system part describ logic theori correspond roughli layer 0 1 brook subsumpt ar chitectur divid theori conceptu correspond layer modul mention figur 1 simplic omit part descript refer reader appendix layer 1 differ slightli brook instead implement random wander layer support simpl movement toward goal locat goal locat specifi layer 2 imagin first construct plan explor step plan assert theori layer 1 via subsumpt latch next goal locat layer 1 make simpl calcul determin eight quadrant surround goal posit locat see figur 4 layer 1 assert theori layer 0 way anoth subsumpt latch exist virtual push object oppos quadrant avoid capabl layer 0 effect push robot away object robot head direct goal although may deviat direct path depend physic object vicinity3 figur 4 quadrant push object cycl layer 0 theorem prover layer 0 ask find requir action modul turn forward describ attempt prove fwdhead speed turnhead angl head speed head angl instanti proof result translat appropri robot command input layer sonar data output layer 1 input languag includ symbol sonar read sonar direct object direct distanc halt robot output includ fwd turn sonar sonar modul take input physic sonar assert form axiom schema sonar readingsonar dist translat map object type symbol defin appendix 2 8dist sonar readingsonar sonar directionsonar dist sonar number 1 reason implic sonar object minim object circumscript reason dont includ axiom state one object point collid take predic object check see detect object lie directli front us object ahead halt robot object ahead 2 feelforc feelforc dirti work comput combin repuls forc differ detect object 3 forc direct forc x forc forc runaway ab avoid head ab avoid head speed forc strength assum robot 0 radian refer point straight ahead front sonar number 0 sonar number consecut counterclockwis 0 nsonar gamma 1 3 feelforc may implement librari function rather logic theori gain much logic represent implement effici procedur logic represent use librari function anyway turn need turnhead angl turnhead angl forward halt robot need turnhead angl need fwdhead speed fwd head speed need turnhead angl fwd0 circumscrib theori final add parallel circumscript formula input layer current locat data robot output layer 2 input languag includ symbol got move cmd curr locat output includ note unlik layer 0 coordin layer term fix coordin system independ robot locat 4 simpl move push objectquadrantx 0 push 8quad push objectquad circumscrib theori add parallel circumscript formula implement issu implement theori use pttp theorem prover stickel 1988b stickel 1988a stickel 1992 sun ultra60 creator3d 640mb ram run solari 26 quintu prolog underli interpret pttp theori yet implement physic robot yet simul done abovedescrib machin help us identifi point difficulti use theorem prover task control intellig agent 4 robot abl maintain posit cartesian space origin posit last zero eg power 41 choic theorem prover first difficulti encount fact find suitabl theorem prover theori includ sever mathemat comput sever trigonometr function see appendix much better suit systemat algorithm theorem prover sinc also want algebra sophist theori need semant attach examin mani theorem prover none seem support semant attach easili conveni control theorem prove process via strategi otherwis prover examin close otter 5 resolut theorem prover acl2 6 industrialstrength version boyer moor theorem prover atp 7 model elimin theorem prover major difficulti encount difficulti encount inabl append semant attach ea ili complex make theorem prover run given platform inabl control infer process easili lack document addit also examin proof checker pv 8 proof checker hol 9 getfol 10 found unsuit due need least human intervent pttp prolog technolog theorem prover modelelimin theorem prover given theori made claus necessarili disjunct without quantifi pttp produc set prologlik horn claus make sure sound unif produc avoid negationasfailur proof produc prolog infer algorithm also make sure infer algorithm complet use id iter deepen proof space togeth ensur pttp sound complet theorem prover one featur like pttp despit lack suitabl document although fair number exampl theorem prover easi custom relianc underli languag implement prolog lisp allow easi use semant attach collect exampl togeth pttp softwar illustr despit difficulti incur use semant attach builtin predic algebra gave us rel troubl either instal use 6 httpwwwcsutexaseduusersmooreacl2acl2 dochtml manualhtml 9 httpwwwcomlaboxacukarchiveform methodsholhtml 42 run pttp theori embodi feelforc modul c function get forc need input return forc vector strength direct work call prolog bagof oper collect object exist proof found simpli comput sum forc subject object cwa close world assumpt achiev limit size proof longer specifi constant experi littl got constant 20 16 object proof around 36 object got second proof happen 48 experi final get forcel ab other treat builtin functionspred given underli prolog evalu turn may call c function get forc prolog pred icat way one manag get semant attach without need abl prove mani properti algebra formula rest theori stay provis constant nsonar min dist incorpor aid predic nsonarsx min disti ran theori differ simul sensori input result sampl run shown figur 5 7 6 appendix result achiev 02 03 second depend whether turn need lean toward 02 second forward move need lean mostli toward 03 second worth mention comput get forc appli cach comput forc sinc pttp appli cach result major improv effici sever second proof 0203 use simpl scheme due fact everi proof reprov get forc mani time 43 nonmonoton consider mention way treat nonmonoton experi use naf negationa failur default prove wrong certain amount time treat fals particular three point nonmonoton requir 1 cwa object world 2 halt robot assum fals unless otherwis prove 3 ab avoid allow complet overrid forc constraint input layer 0 layer 1 assum fals sinc use facil overrid implement level 1 cwa object look proof longer 20 halt robot proposit 5 relat work work show theorem prover use implement robot control also show extend version brook subsumpt architectur implement use theorem prover logic theori extend version propos gener architectur build intellig agent notic includ specif action theori l0 show theori influenc l0 compar work shanahan shana han 1996 shanahan 1998 baral tran baral tran 1998 reiter et al reiter 1998 lespranc et al 1996 reiter 1996 shanahan 1998 describ mapbuild process use abduct abduct special specif scenario spatial occup nois one may wish includ implement theori algorithm abid logic theori account abduct contrast work implement algorithm rather use generalpurpos theorem prover show use theorem prover control long theori remain small rel simpl describ way join theorem prover theori structur allow larger theori interact complic behavior establish although control theori much simpler shanahan 1998 fact includ version origin theori present shanahan upper layer also sinc robot sophist mobil robot inclus theori take account differ sensor sonar instead switch work baral tran baral tran 1998 focus relationship member famili action languag gelfond lifschitz 1993 giunchiglia kartha lifschitz 1997 kartha reactiv control modul defin control modul form stimulusrespons sr agent see nilsson 1998 state defin set fluent valu either sensori memori sequenc rule defin action agent take given condit state provid way check sr modul correct respect action theori ar final provid algorithm creat sr agent action theori work although deal reactiv seem abl deal worldcomplex model sensor mani possibl input valu account sever input fluent one decid use algorithm describ baral tran produc simpl sr modul complex algorithm worstcas exponenti number fluent allow end life time also lack hierarchyoftheori model use work final work reiter levesqu colleagu levesqu et al 1997 giacomo lesper anc levesqu 1997 reiter 1998 lespranc et al 1996 reiter 1996 giacomo reiter soutchanski 1998 focus languag golog vari ant specif highlevel robot action paradigm planner computesplan golog program offlin let robot execut golog program onlin languag includ among other test truth condit perform primit action perform sequenc action nondeterminist choic two action nondeterminist iter use hierarch model reason merg plan execut work split plan execut plan done line also use logic semant golog program given use situat calculu mccarthi hay 1969 6 discuss futur work last 5 year logic approach ai got reinvigor posit result differ frontier plan eg work bibel selman kautz kautz mcallest selman 1996 sens ai architectur eg shanahan 1996 lesper et al 1994 giacomo lesper levesqu 1997 paper present logicbas architectur formal brook subsumpt architec ture use circumscript implement subsumpt combin reactiv advantag brook architectur declar advantag logic produc first cut architectur perform sens plan act concurr moment system partial implement level 0 simul comput besid implement system mobil robot futur work plan includ expand layer describ paper contain plan layer map creat layer eg creat map world po sibli follow work shanahan layer contain belief world eg may want doubt conclus certain locat believ moment ago distant locat reason chang done world put us new locat etc project also serv experi elabor toler layer approach acknowledg wish thank mark stickel allow us use pttp sourc prolog lisp provid help answer inquiri regard use research support arpa onr grant n000149410775 nation physic scienc consortium npsc fellowship r reason relat theori action reactiv control nonmonoton reason overview nonmonoton reason logic foundat common sens robust layer control system mobil robot repres action chang logic program reason concurr execut execut monitor highlevel robot pro gram indeterminaci ramifica tion action indirect effect preliminari report encod plan proposit logic logic approach highlevel robot program progress report kuiper foundat logic approach agent program golog logic program languag dynam domain philosoph problem standpoint artifici intel ligenc program common sens mechanis thought process formal common sens elabor tol eranc societi mind artifici intellig reason uncertainti natur action knowledg action logic foundat describ implement dynam system featur fluent robot common sens informat situat solv frame problem logic account common sens informat situat mobil robot postmodular system architectur principl cognit robot th intern confer autom deduc tion prolog technolog theorem prover implement extend prolog compil prolog technolog theorem prover new exposit implement prolog logic theori appendix draw entir logic theori version brook subsumpt architectur exampl brook object obj sonar number sum forc search cost 1 proof search cost 2 proof search cost 3 proof proof goal 1222 infer 002 second proof goal 36 needturn314 6 12664 infer 024 second tr applic circumscript formal commonsens knowledg autom deduct theori resolut societi mind prolog technolog theorem prover implement extend prolog comput relationship circumscript negat failur principl metareason frame problem situat calculu prolog technolog theorem prover introduct hol situat view represent control build brain bodi repres action behaviorbas robot computeraid reason reinvent shakey interpol theorem nonmonoton reason system logicbas subsumpt architectur spatial agent implement logic express languag effici approxim triangul minimum treewidth decisiontheoret highlevel agent program situat calculu ccgolog highlevel robot control logic prolog technolog theorem prover layer resourceadapt agent robocup simul dynam subsumpt architectur program intellig agent