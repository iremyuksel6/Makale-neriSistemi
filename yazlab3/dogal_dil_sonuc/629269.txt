detect weak unstabl predic distribut program paper discuss detect global predic distribut program earlieralgorithm detect global predic propos chandi lamport 1985work stabl predic predic stabl turn fals itbecom true algorithm detect even unstabl predic without excessiveoverhead past predic regard difficult detectth predic specifi use logic describ formal paper discussdetect weak conjunct predic form conjunct predicatesloc process system detect method detect whether apred true interleav event system regardless whether thepred stabl also predic reduc set weak conjunctivepred detect class predic captur mani global predic thatar interest programm messag complex algorithm bound byth number messag use program main applic result indebug test distribut program algorithm incorpor ina distribut debugg run network sun workstat unix b introduct distribut program one run multipl processor connect commun network state program distribut across network process access global state instant detect global predic ie condit depend state multipl process fundament problem distribut comput problem aris mani context design test debug distribut program global predic may either stabl unstabl stabl predic one never turn fals becom true exampl stabl predic deadlock termin system termin stay termin unstabl predic one without properti valu may altern true fals chandi lamport 3 given eleg algorithm detect stabl predic algorithm base take consist global snapshot system check snapshot satisfi global predic snapshot satisfi stabl predic infer stabl predic true end work support part nsf grant ccr 9110605 navi grant n0003991c0082 trw faculti assistantship award ibm agreement 153 vk garg electr comput engin dept univers texa austin austin jaypineeceutexasedu b waldeck austin system center schlumberg well servic austin snapshot algorithm similarli predic fals snapshot also fals begin snapshot algorithm take snapshot period stabl properti detect boug 2 spezialetti kearn 22 extend method repeat snapshot approach work unstabl predic may true two snapshot time snapshot taken entir differ approach requir predic paper present approach detect larg class unstabl predic begin defin logic use specif global predic formula logic interpret singl run distribut program run distribut program gener partial order event mani total order consist partial order call formula strong true total order weak exist total order true consid special class predic defin logic global state formula either disjunct conjunct local predic sinc disjunct predic simpli detect incorpor local predic detect mechan process focu conjunct predic paper describ algorithm detect weak type predic detect strong predic discuss 10 mani detect algorithm use timestamp vector propos fidg 6 mattern 17 process detect local predic record timestamp associ event timestamp sent checker process use timestamp decid global predic becam true show method use optim number comparison provid adversari argument also show check process decentr make algorithm use even larg network algorithm present paper mani appli cation debug distribut program programm may specifi breakpoint condit use logic detect condit becam true algorithm also use test distribut program condit must true valid run distribut program may specifi occurr verifi import properti algorithm detect even error may manifest particular execut may differ process speed exampl consid distribut mutual exclus algorithm run may possibl two process access critic region even permiss enter critic region algorithm detect scenario certain condit describ paper cooper marzullo 5 haban weigel 11 also describ predic detect deal gener predic detect predic intract sinc involv combinatori explos state space exampl algorithm propos cooper marzullo 5 complex ok n k maximum number event monitor process execut n number process fundament differ algorithm algorithm algorithm explicitli check possibl global state wherea algorithm miller choi 19 discuss mainli link predic discuss detect conjunct predic sens use distribut program moreov make distinct program messag messag use detect algorithm result link predic detect miller choi algorithm may true debugg present may becom fals remov algorithm avoid problem hurfin plouzeau raynal 12 also discuss method detect atom sequenc predic distribut computa tion spezialetti kearn 23 discuss method recogn event occurr without take snapshot ever approach suitabl monoton event similar stabl properti overview approach found 20 paper organ follow section ii present logic describ unstabl predic distribut program describ notion distribut run global sequenc logic specif global predic section iii discuss necessari suffici condit detect weak conjunct predic also show detect weak conjunct predic suffici detect global predic finit state program global predic written boolean express local condit section iv present algorithm detect weak conjunct predic section v describ techniqu decentr algo rithm section vi give detail implement algorithm distribut debugg final section vii give conclus paper ii model distribut run assum looselycoupl messagepass system without share memori global clock distribut program consist set n process denot commun sole via asynchron me sage paper concern singl run r distribut program process p run gener singl execut trace ri finit sequenc state action altern begin initi state state process defin valu variabl includ program counter exampl process p gener trace i0 i0 i1 local state local action process p three kind action intern send receiv send action denot send mean send messag oe process p process p j receiv action denot receiv mean receiv messag oe process p process p j assum paper messag lost alter spurious introduc make assumpt fifo natur channel run r vector trace ri trace process p reliabl messag obtain receiv also defin happenedbefor relat denot state similar lamport happenedbefor relat event 1 state trace ri happenedbefor state trace rj one follow hold 1 occur ri 2 action follow send messag action recept messag 3 exist state u one trace relat partial order state process system result rule 2 3 definit say messag path state state differ process run visual valid errorfre process time diagram 16 exampl 2 consid follow distribut program process var xinteg initi 7 var yzinteg initi 00 begin begin possibl valu program counter distribut run r given anoth run r 0 construct two messag sent process p 1 receiv revers order b global sequenc run defin partial order set action state simplic ignor action run focu state trace thu ri denot sequenc state p gener mani total order consist linear partial order global sequenc correspond view run could obtain given exist global clock thu global sequenc sequenc global state global state vector local state definit global state differ chandi lamport includ state channel model channel set messag sent receiv yet sinc set deduc local state requir state channel explicitli includ global state denot set global sequenc consist run r linearr global sequenc g finit sequenc global state denot l k global state 0 k l suffix start l denot g k clearli observ restrict attent singl process p would observ ri stutter ri stutter ri finit sequenc state ri may repeat finit number time stutter aris purpos avoid refer physic time let skt mean 6 6 global sequenc run defin definit 3 g global sequenc run r denot follow constraint hold restrict p stutter ri state p global state g k exampl 4 global sequenc consist run r exampl 2 given l l model distribut run global sequenc assum system comput alway specifi interleav local action next global state global sequenc may result multipl independ local action c logic oper three syntact categori logic bool lin form syntax logic follow form lin j e lin lin lin lin j lin j bool bool predic global system state bool boolean express defin singl global state system valu determin global state known exampl global state bool x true x could variabl differ process lin tempor formula defin global sequenc 3 lin mean exist suffix global sequenc lin true suffix 21 also use 2 dual 3 also introduc binari oper captur sequenc directli p q mean exist suffix g g j global sequenc p true suffix g q true suffix g j j form defin set global sequenc simpli lin qualifi univers existenti e quantifi thu semant logic follow lin lin e quantifi set global sequenc distribut run may exhibit given trace pro cess ap mean predic p hold global sequenc ep mean predic p hold global sequenc call formula start strong formula formula start e weak formula intuit behind term strong strong formula true matter fast slow individu process system execut hold execut speed gener trace individu process weak formula true exist one global sequenc true word predic made true choos appropri execut speed variou processor difficulti check truth global predic aris two sourc first n process system total number global sequenc global state repeat exponenti n size trace secondli global state distribut across network actual run thu detect gener predic logic feasibl distribut program avoid problem combinatori explos focu detect predic belong class believ captur larg subset predic interest programm use word local refer predic condit involv state singl process system condit easili check process detect predic boolean express local predic follow exampl formula detect algorithm 1 suppos develop mutual exclus algo rithm let cs repres local predic process p critic section follow formula detect possibl violat mutual exclus particular run 2 exampl 4 check note true global sequenc g true global sequenc h algorithm detect predic true run r even though global sequenc execut may g 3 assum databas applic serializ enforc use two phase lock scheme 15 assum two type lock read write follow formula may use identifi error implement iii weak conjunct predic weak conjunct predic wcp true given run exist global sequenc consist run conjunct true global state practic speak type predic use bad undesir predic ie predic never becom true case programm would like know whenev possibl bad predic may becom true exampl consid classic mutual exclus situat may use wcp check correct criterion never two process critic section time met would want detect predic process x critic section process critic section import observ algorithm report possibl mutual exclus violat even violat execut happen detect occur exist consist cut local predic true thu techniqu detect error may hidden run due race condit import weak conjunct predic conjunct predic form interest class predic detect suffici detect global predic written boolean express local predic observ shown lemma 5 let p predic construct local predic use boolean connect detect use algorithm detect pure conjunct local predic proof first write p disjunct normal form thu e 3 pure conjunct local predic next observ f semant e 3 g f semant g f semant e 3 g thu problem detect reduc solv l problem detect pure conjunct local predic approach use global predic written boolean express local predic exampl consid distribut program z three differ process rewritten part weak conjunct predic note even global predic boolean express local predic satisfi finit number possibl global state rewritten disjunct weak conjunct predic exampl consid predic x differ process local predic depend process howev know x take valu f0 1g express rewritten equival disjunct express weak conjunct predic observ predic form 2bool also easili detect simpli dual detect shown section paper emphas conjunct predic disjunct predic reason disjunct predic quit simpl detect detect disjunct predic e3lp 1 lp 2 lpm suffici process p monitor lp process find local predic true disjunct predic true b condit weak conjunct predic use lp denot local predic process p lp denot predic lp true state say occur sequenc ri aim detect whether e 3lp 1 lp hold given r assum n lp lp j anoth local predic lp lp j belong process present theorem state necessari suffici condit weak conjunct predic hold theorem 6 e 3lp 1 lp true run r iff 1 lp true state j incompar 6 j r ks proof first assum e 3lp 1 lp true run r definit global sequenc 2 linearr global state g local predic true defin ri consid two distinct indic j 1 sinc j correspond global state j must incompar s2 therefor 9s ks prove direct 2 proof gener case similar assum exist state state 1 2 incompar lp 1 impli messag path 1 2 viceversa thu messag receiv 2 could sent 1 messag receiv 1 could sent 2 fig 1 illustr thu 1 1 2 2 p1 freez s1 p2 execut s2 2 step 1 p1 p2 execut p1 s1 p2 s2 fig 1 incompar state produc singl global state possibl construct follow execut global 1 let process execut consist run r either p 1 1 p 2 2 p 2 2 p 1 1 assum without loss gener former case hold 2 freez p 1 1 let p 2 execut 2 possibl messag sent receiv 2 global state g true g iv detect weak conjunct predicates2 100 110 fig 2 exampl lcmvector theorem 6 show necessari suffici find set incompar state local predic true detect weak conjunct predic section present central algorithm later see algorithm decentr algorithm one process serv checker process involv wcp refer noncheck process process shown fig 3 check local predic noncheck process keep local lcmvector last causal messag vector timestamp timestamp vector slight modif virtual time vector propos 617 process p j lcmvec tori 6 j messag id recent messag p anybodi causal relationship process p j next messag id p j use maintain lcmvector inform requir everi process includ lcmvector program messag send whenev process receiv program messag updat lcmvector take componentwis maximum lcmvector one contain messag fig 2 illustr show lcmvector interv whenev local predic process becom true first time sinc recent sent messag begin trace gener debug messag contain local timestamp vector send checker process one reason algorithm practic process requir send lcmvector everi time local predic detect simpl observ tell us lcmvector need sent messag activ sinc last time lcmvector sent lcmvector chang valu messag sent receiv show suffici send lcmvector messag sent irrespect number messag receiv let local denot local predic true state defin predic first true iff local predic true first time sinc recent sent messag begin trace var lcmvector array 1n integ last causal msg rcvd process 1 n firstflag boolean init true local pred boolean express local pred test process 2 send send prog upon receiv prog msg upon local pred true firstflag firstflag fals send dbg lcmvector checker process fig 3 algorithm weak conjunct predic noncheck process p id say state differ process make wcp true theorem 6 theorem 7 9s proof trivial true show symmetri suffici prove exist 0 1 1 first state trace p 1 sinc recent sent messag begin trace local 0 true 1 exist know 0 exist choic 0 1 true proof oblig show wcp 0 suffici show ks j 1 6 j messag sent 0 also j 6 0 impli contradict therefor conclud ks j 2 j analyz complex noncheck process space complex given array lcmvector main time complex involv detect local predic sequenti debugg addit time requir maintain time vector everi receiv messag worst case one debug messag gener program messag sent worst case messag complex om number program messag sent addit program messag includ time vector give algorithm checker process detect wcp use debug messag sent process checker process separ queue process involv wcp incom debug messag process enqueu appropri queue assum checker process get messag process fifo order note requir fifo underli comput detect algorithm need implement fifo properti effici purpos underli commun fifo checker process ensur receiv messag noncheck process fifo use sequenc number messag checker process appli follow definit determin order two lcmvector two lcmvector u v furthermor know process vector came comparison two lcmvector made constant time let p roc ng map lcmvector process belong requir comput check lcmvector u less lcmvector v lemma 8 let state process p p j lcmvector u v respect messag path fore sinc p j updat lcmvector upon receipt messag updat done take componentwis maximum know follow hold furthermor sinc vj next messag id use could seen valu 6 therebi know vj uj henc follow hold show first part theorem skt messag path state state viceversa henc p p j therefor thu task checker process reduc check order lcmvector determin order state follow observ critic reduc number comparison checker process lemma 9 lcmvector head one queue less lcmvector head queue smaller lcmvector may elimin consider check see wcp satisfi proof order wcp satisfi must find set lcmvector one queue incompar other set lcmvector head one queue q less head anoth queue q j know less lcmvector q j queue increas order head tail also later arriv q j must greater head q henc entri q j ever incompar head q head q may elimin consider check see wcp satisfi algorithm given fig 4 initi whenev new lcmvector receiv correspond queue nonempti simpli insert queue wise exist possibl conjunct predic may becom true algorithm check var chang newchang set f12mg upon recvelem p k chang chang 6 oe begin newchang fg chang j f12m gdo begin newchangednewchang fig newchangednewchang fjg chang newchang chang deleteheadq end fig 4 algorithm weak conjunct predic checker process incompar lcmvector compar head queue moreov compar head queue compar earlier purpos use variabl chang set indic head queue date loop maintain invari done find element lower element includ chang mean two compar element f1 2 mg gamma chang loop termin chang empti point queue non empti invari deduc head incompar let queue p element queue next theorem deal complex algorithm theorem 10 algorithm requir om 2 p comparison proof let compk denot number comparison requir k th iter loop let denot total number iter loop total number comparison equal repres valu chang k th erat jchangedkj k 2 repres number element delet iter loop structur forloop get therefor total number comparison requir follow theorem prove complex problem thu show algorithm optim 8 theorem 11 algorithm determin whether exist set incompar vector size chain size p make least pmm gamma 12 comparison proof first show case size queue exactli one ie 1 adversari give algorithm set either zero exactli one pair element compar adversari also choos answer incompar first mm gamma tion thu algorithm determin set compar pair unless ask pair show result gener p let q k denot k th element queue q adversari give algorithm q follow characterist thu problem reduc p instanc problem check element incompara ble algorithm complet solv one instanc adversari choos instanc show queue consist answer differ final outcom v decentr detect algorithm show techniqu decentr algorithm properti p1 deduc set vector form antichain pair vector incompar follow hold 8 distinct denot condit predic inc follow theorem show process check inc decompos check smaller set theorem 12 let u set lcmvector take componentwis maximum vector set x inc iff inct inct incu clearli true show conjunct prove similar fashion p 2 deduc 8 distinct sp roct mean max p definit max p 2 also deduc 8 u mean definit maxu two assert conclud show p 2 hold ie 8 distinct belong either u true inct incu let us assum without loss gener 2 u 2 u need show tp roct roct part prove sim ilarli inct conclud tp roct max p roct maxu p roct conclud tp roct roct use theorem notion hierar chi algorithm check wcp decentr follow may divid set process two group group checker process check wcp within group find one send maximum lcmvector higher process hierarchi process check last two conjunct theorem clearli argument gener hierarchi depth exampl 13 consid distribut program four process let lcmvector correspond process instead check whether entir set consist incompar vector divid two subset check one incompar comput done group checker process group higherlevel process process check strictli greater maxu first two compon maxu strictli greater max last two compon henc theorem 12 vector set pairwis incompar vi implement utddb main applic result debug test distribut program incorpor algorithm distribut debugg call utddb univers texa distribut debugg 14 onlin debugg abl detect global state sequenc global state distribut comput utddb consist two type process coordin monitor type exist one coordin process number monitor process number applic process underli distribut comput coordin process serv checker process wcp well userinterfac utddb programm accept input programm distribut predic detect also report programm predic detect monitor process hidden programm monitor process detect local predic defin within domain applic process monitor ing done singl step program step monitor examin address space applic process check simpl predic list true also respons implement algorithm describ noncheck process section particular maintain vector clock mechan distribut debugg delay occurr predic detect halt program may substanti thu program final halt may longer state programm interest therefor weak conjunct predic ut ddb give programm option roll back distribut comput consist global state predic true coordin use set timestamp detect wcp predic calcul global state send monitor applic process execut record incom event file monitor receiv messag tell roll back applic process monitor restart applic process replay record event process reach local state part global state weak conjunct predic true restart assum nondetermin program due reorder messag algorithm also use trace analyz anoth part utddb distribut program 4 analyz monitor distribut program gather enough inform form distribut run describ section ii approach reduc probe effect distribut program may experi detect carri program execut user ask utddb whether predic express subset logic describ paper ever becam true current extend algorithm detect sequenc global predic 1925 relat global predic 24 vii conclus discuss detect global predic distribut program earlier algorithm detect global predic propos chandi lamport work stabl predic algorithm detect even unstabl predic reason time space messag complex experi algorithm extrem encourag current implement main overhead local monitor process check local predic provid special hardwar support even overhead reduc exampl architectur provid special hardwar support breakpoint trap certain locat access featur use make detect local predic form program line x effici believ algorithm present paper part everi distribut debugg incur low overhead quit use identifi error program acknowledg would like thank bryan chin moham gouda greg hoagland jay misra william myre pazel alex tomlinson comment observ enabl us strengthen work would also like thank bryan chin implement offlin version algorithm greg hoagland incorpor algorithm utddb would also like thank anonym refere meticul review earlier version paper r distribut debug tool heterogen distribut system repeat snapshot distribut system synchron commun implement csp distribut snapshot determin global state distribut system offlin debugg distribut program consist detect global predic partial order parallel debug causal distribut break point optim algorithm decompos partial order set concurr regular express relationship petri net languag detect unstabl predic distribut program global event global breakpoint distribut system detect atom sequenc predic distribut comput comput particular snapshot distribut system debugg distribut program databas system concept time clock order event distribut system virtual time global state distribut sy tem debug concurr program breakpoint halt distribut program detect causal relationship distribut comput search holi grail complex proposit linear tempor logic effici distribut snapshot gener approach recogn event occurr distribut comput detect relat global predic distribut system detect unstabl predic debug distribut program tr complex proposit linear tempor logic databas system concept repeat snapshot distribut system synchron commun implement csp global event global breakpoint distribut system partial order parallel debug debug concurr program consist detect global predic detect unstabl predic debug distribut program concurr regular express relationship petri net optim algorithm decompos partial order set detect relat global predic distribut system detect atom sequenc predic distribut comput distribut snapshot time clock order event distribut system detect unstabl predic distribut program ctr vijay k garg method observ global properti distribut system ieee parallel distribut technolog system technolog v5 n4 p6977 octob 1997 sujatha kashyap vijay k garg intract result predic detect inform process letter v94 n6 p277282 hsienkuang chiou willard korfhag enhanc distribut event predic detect algorithm ieee transact parallel distribut system v7 n7 p673676 juli 1996 loonbeen chen ichen wu effici distribut onlin algorithm detect strong conjunct predic ieee transact softwar engin v28 n11 p10771084 novemb 2002 punit chandra ajay kshemkalyani distribut algorithm detect strong conjunct predic inform process letter v87 n5 p243249 15 septemb karun n biyani sandeep kulkarni test dynam adapt distribut system proceed second intern workshop autom softwar test p10 may 2026 2007 ajay kshemkalyani finegrain modal classif global predic ieee transact parallel distribut system v14 n8 p807816 august michel hurfin masaaki mizuno mukesh singhal michel raynal effici distribut detect conjunct local predic ieee transact softwar engin v24 n8 p664677 august 1998 sujatha kashyap vijay k garg exploit predic structur effici reachabl detect proceed 20th ieeeacm intern confer autom softwar engin novemb 0711 2005 long beach ca usa guy dumai hon f li distribut predic detect seriesparallel system ieee transact parallel distribut system v13 n4 p373387 april 2002 craig chase vijay k garg detect global predic techniqu limit distribut comput v11 n4 p191201 octob 1998 vijay k garg brian waldeck detect strong unstabl predic distribut program ieee transact parallel distribut system v7 n12 p13231333 decemb 1996 scott stoller detect global predic distribut system clock distribut comput v13 n2 p8598 april 2000 punit chandra ajay kshemkalyani causalitybas predic detect across space time ieee transact comput v54 n11 p14381453 novemb 2005 anish arora sandeep kulkarni murat demirba resett vector clock journal parallel distribut comput v66 n2 p221237 februari 2006 anirban majumdar clark thomborson manufactur opaqu predic distribut system code obfusc proceed 29th australasian comput scienc confer p187196 januari 1619 2006 hobart australia felix c grtner fundament faulttoler distribut comput asynchron environ acm comput survey csur v31 n1 p126 march 1999