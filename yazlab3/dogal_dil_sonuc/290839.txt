estim lower bound schedul algorithm highlevel synthesi produc effici design highlevel synthesi system abl analyz varieti costperform tradeoff system use lowerbound perform estim method identifi puun inferior design without producint complet design present lowerbound perform estim method faster exist method also produc better lower bound case lower bound produc algorithm tightschedul algorithm branchandbound need fast effect lowerbound estim method often larg number partial schedul dataflow graph reduc search space extend method effici estim complet time partial schedul problem address exist method literatur lowerbound estim shown effect reduc size search space use branchandbound schedul algorithmour method handl multicycl oper pipelin function unit chain oper also present extens handl condit branch salient featur extend method applic specul execut well cselect implement condit branch b introduct highlevel synthesi take abstract behavior specif digit system find registertransf level structur realiz given behavior usual mani differ structur use realiz given behavior one main goal synthesi system find structur best meet constraint limit number function unit regist power minim paramet like number time step oper schedul datapath construct core highlevel synthesi obtain effici design term area speed schedul datapath oper best time step task whose import recogn mani system 12 14 15 16 sinc schedul intract problem highlevel synthesi system use heurist find good schedul absenc good lowerbound estim difficult evalu perform heurist synthesi system produc effici design capabl analyz differ costperform tradeoff schedul explor design space varieti resourc constraint instead produc schedul everi resourc constraint schedul use estim identifi prune inferior design furthermor estim lower bound use evalu heurist solut estim tool use much faster actual schedul lower bound produc tight possibl propos effici estim techniqu lowerbound perform test estim method number benchmark compar result known method literatur 17 20 method faster method 17 20 method produc better lower bound mani case case lower bound tight mani schedul algorithm branch bound method 3 multischedul method 2 search design space construct schedul oper one step time search process schedul subset oper dfg produc evalu check lead complet schedul target upperbound perform schedul method need method estim lower bound complet time partial schedul sinc number partial schedul gener high design space search process estim faster estim entir dfg paper propos fast effect lowerbound estim method partial schedul dfg extens method lowerbound estim entir dfg approach defin use data structur need comput given dfg explor use data structur method comput lower bound partial schedul ok time k number readi unfinish oper defin later paper partial schedul method 5 17 20 21 origin propos estim entir dfg address estim partial schedul slow use partial schedul exampl method 17 20 use partial schedul take oc 2 respect comput lower bound partial schedul n number oper schedul c critic path length implement method method 17 separ branch bound schedul algorithm test number benchmark result show method least 20 time faster equal effect reduc size search space method use schedul algorithm schedul one step time use method optim dynam program schedul algorithm 1 develop drastic reduc size search space could obtain optim schedul short comput time method handl multicycl oper pipelin function unit chain oper extend method handl condit branch extend method applic specul execut well cselect execut oper condit branch knowledg estim method literatur support specul execut next section brief overview previou work lower bound estim present section 3 model terminolog defin method estim lower bound entir dfg present section 4 comput complex method compar sharma method 20 analyz section lowerbound estim method partial schedul present section 5 extens handl condit branch chain explain section 6 experiment result present section 7 conclus section 8 previou work sever method propos literatur lowerbound estim cost well perform jain et al 7 propos mathemat model predict areadelay curv lowerbound method fast trivial consid preced constraint techniqu propos fernandez bussel 4 comput minimum number oper must schedul subinterv time step deriv maximum increas total execut time interv enough processor accommod oper interv method consid homogen resourc appli multiprocessor schedul method extend highlevel synthesi sharma et al 20 comput increas length interv due concentr type oper interv also address lower bound area cost includ interconnect cost method comput complex onc 2 n number node dfg c critic path length method propos ohm et al 10 estim lower bound function unit well regist techniqu function unit estim refin basic techniqu 20 applic lowerbound perform estim complex method nc 2 n e e number edg dfg method propos 17 use relax techniqu ilp formul schedul problem lowerbound estim perform resourc constraint comput complex number time step produc lower bound good 20 mani benchmark method 21 similar 17 relax preced constraint solv relax problem use slack driven list schedul algorithm hu et al 5 propos method estim lower bound iter time function unit cost function pipelin dfg complex method onck 2 k initi latenc recurs techniqu propos 8 lowerbound perform estim complex complex method lowerbound perform estim entir dfg complex 3 model definit dfg data flow graph e direct acycl graph represent behavior descript set node v repres set oper set edg e denot set depend preced constraint oper two oper finish oper start node x call predecessor successor x direct path x g use arc e oper without predecessor call input oper oper without successor call output oper associ oper x v singl type indic function unit type use execut oper resourc constraint given set order tupl dt delay number time step clock cycl oper type take complet nt number avail resourc type resourc type pipelin one instanc resourc type assign one oper overlap fashion latenc overlap denot ffi clearli let x denot delay oper x equal delay type resourc execut x soon possibl earliest timestep v schedul start execut assum unlimit resourc msat v minimum step oper minimum number time step schedul g go take complet oper v assum unlimit resourc critic path length minimum number timestep schedul g go take assum unlimit resourc comput maximum taken output oper v 4 lowerbound estim perform intuit idea behind lowerbound estim follow resourc type group oper type three nonoverlap interv comput lowerbound sum length interv final lower bound maximum among resourc type possibl group oper type let p number oper type dfg oe oper type asap valu less equal least p oper schedul first time step similarli oe j type oper msat valu less j least p oper paper resourc refer singlefunct function unit schedul execut last j time step thu least p oper either schedul first time step schedul execut last j step schedul three interv consid first step interv 1 last step interv 3 interv two interv 2 overlap two length interv 1 3 j respect length 2 depend minimum number type oper interv well number avail resourc type number oper 2 depend asap msat valu oper determin data depend thu lowerbound estim take account preced constraint resourc constraint note take least time step oper 2 start execut least j step last oper finish execut length 1 3 independ set oper schedul interv thu purpos lowerbound estim three interv nonoverlap denot minimum number type oper interv 2 qi j minimum length 2 due type oper hi j explain qi j valu hi j comput qi j follow oper schedul dkre stage type resourc pipelin stage take dt time step dt delay type resourc pipelin latenc ffi stage except last take ffi step last stage either case take dt step henc pipelin r e dt otherwis lower bound complet time schedul given dfg oe 1 oe 2 oe 3 oe 4 oe 5 oe 6 order pair next node show asap msat valu figur 1 exampl lowerbound estim entir dfg given max tijc fhi c critic path length proof discuss impli lower bound given j type express best lower bound among j condit make sure interv nonoverlap 2 figur 1 show exampl lowerbound comput order pair next node indic asap msat valu respect assum addit take one time step multipl take two one adder one nonpipelin multipli valu oe oe multipl addit shown figur exampl multipl oper 1 2 asap valu less equal 2 henc oe 2 2 similarli addit oper 6 7 8 9 msat valu less 2 henc oe 2 4 exampl dfg maximum valu obtain i0 j2 complex analysi asap valu comput topdown fashion start input oper follow v input oper asap v 1 otherwis g msat valu similarli comput bottomup fashion start output oper follow v output oper g let n number oper dfg number edg dfg grow linearli n sinc number input oper gener bound small number two henc asap msat valu found time number resourc type gener bound small number oe oe found recurs follow oe number type oper asap valu similarli oe number type oper msat valu 1 valu found comput asap msat valu without affect complex henc comput oe oe take oc time c critic path length final comput lower bound use valu take oc 2 time oc 2 interv thu complex algorithm estim lower bound entir dfg method 20 similar method estim length interv time step comput requir comput cycl type sum minimum overlap oper type interv differ requir avail comput cycl type divid number avail function unit type get increas length interv method interv minimum overlap oper determin henc complex onc 2 method comput number oper interv constant time use precomput data structur oe oe thu complex 5 estim lower bound partial schedul dfg schedul algorithm branch bound method need comput lower bound complet time larg number partial schedul dfg method 20 17 propos purpos estim lower bound entir graph method use estim lower bound partial schedul time spent estim may high advantag estim nullifi take onc 2 comput lower bound partial schedul method previou section also take time section present extens method lowerbound partial schedul comput effici method take ok time k number readi unfinish oper defin later section partial schedul rest paper call partial schedul configur configur r result schedul r time step unschedul oper r schedul time step greater r call r depth r denot depthr let fv denot time step oper v schedul start execut oper x said readi r schedul yet predecessor schedul finish r ie predecessor x note delay set readi oper r denot readyr multicycl oper x said unfinish r schedul start execut time step less equal depthr finish depthr ie fx depthr 1 set unfinish oper r denot unfinishedr number unschedul oper type configur r denot unschr basic idea behind estim partial schedul follow partial schedul subset oper alreadi schedul satisfi preced constraint well resourc constraint instead consid possibl valu j divid oper interv consid follow special case resourc type unschedul portion dfg find maxfijo 0g intuit number time step current step type unschedul oper start execut j number time step complet schedul current configur take last type oper finish execut step comput lower bound configur r resourc type follow 1 comput j 2 qi j unschr sinc oe 3 comput hi j qi j explain previou section lower bound number time step schedul remain oper type quantiti depthr j lower bound complet time schedul r maximum lower bound resourc type unschedul oper type give lower bound complet time schedul configur r lead nontrivi step comput lower bound comput j step 1 import merit algorithm comput j effici way describ figur 2 node u oper type ffu defin minimum number time step type successor u start start time u valu ffu set infin u successor type node u valu 0 type oper readyr otherwis given mina b ffu number time step u finish r valu j given mina b fiu set oper unfinishedr type successor figur 2 comput valu j oper type fiu defin minimum number time step schedul given dfg go take complet type successor u valu fiu comput min v fmsat vg v type successor u u successor type u type oper fiu otherwis set infin note lower bound type comput unschedul oper type therefor valu j never infin formula comput j base follow lemma unschedul oper x configur r x either member readyr exist readyr unfinishedr predecessor x x unschedul oper x readyr predecessor p x schedul schedul finish execut among p let q farthest x ie length longest path q x maximum among p q schedul finish execut q unfinishedr q readyr predecessor q 1 q schedul unfinishedr note q 1 predecessor x also q 1 farther q x contradict henc q readyr 2 f type complet oper readyr complet figur 3 exampl estim lowerbound complet time partial schedul figur 3 show exampl estim lowerbound complet time partial schedul dfg assum schedul first step finish one adder one multipli delay one timestep lowerbound complet time 7 timestep target perform 6 timestep lowerbound estim suggest select oper 2 3 first timestep wrong method section especi use class schedul algorithm comput lower bound larg number configur design space explor matric ff fi oper dfg resourc type comput design space explor done comput transit closur direct graph transit closur comput use depthfirst search onen e number edg graph 18 alreadi explain e grow linearli n dfg sinc number input oper gener bound small number two thu ff fi comput 2 time note valu oper readyr unfinishedr use comput valu j henc lowerbound configur r comput ok time k number oper anoth major advantag method introduc littl memori overhead overhead store matric ff fi larg number partial schedul memori requir domin amount inform store configur schedul algorithm take full advantag lowerbound estim need store littl inform configur 6 extens 61 condit branch use approach divid type oper three nonoverlap interv explain section 4 length first third interv independ resourc constraint length second interv function total resourc requir oper schedul interv condit branch resourc requir equal number oper presenc condit branch howev one oper share one resourc timestep effect oper requir fraction resourc oper share resourc comput weight oper cdfg f partit oper condit block oper x cdfg f b gamma block x number block type oper mutual exclus block b figur 4 outlin procedur comput weight oper oper timestep minimum resourc requir 1n 1 refer quantiti weight oper given resourc type minimum total resourc requir interv comput sum weight type oper interv given weight individu oper comput sum weight oper interv similar comput number oper impact complex partial schedul use sum weight unschedul oper type place unschr configur r thu increas complex extens condit branch due comput weight oper figur 4 show outlin procedur comput weight individu oper partit oper block oper condit behavior place block sinc oper block control behavior concept mutual exclus oper easili extend block x type oper block b given control step x share resourc one type oper block mutual exclus b henc n block mutual exclus b type oper weight x 1n 1 method 19 handl condit branch extens 20 approach interv oper one condit path consid maxim minimum resourc requir interv sinc condit path analysi perform interv method slow use schedul algorithm partial schedul actual time spent estim outweigh advantag result prune comparison method comput weight oper complex remain step remain unchang method base distributejoin represent cdfg cselect implement cselect implement oper condit branch execut correspond condit resolv mani schedul algorithm recent literatur allow execut branch oper correspond condit 24 23 26 27 known specul execut shown produc faster schedul mani benchmark 27 estim method support cselect implement specul execut cselect implement control preced treat way data depend consid comput asap msat valu op erat specul execut control depend ignor comput asap msat valu 62 chain chain oper handl divid time step timeunit extend definit msat asap valu term timeunit let length timestep timeunit let v denot delay oper v term timeunit two oper u chain function unit execut u freed v finish 19 therefor span across timestep may result underutil resourc avoid follow assumpt 19 oper v chain end oper u enough time v finish time step u finish execut condit impos check u mod 6 0 let av mv asap msat valu oper term timeunit valu recurs comput similar comput asap msat u v 2 e earliest timeunit execut result u avail v au howev v chain u v start execut begin next time step henc av given chain u chain u similarli mv given aev chain v chain v valu correspond asap msat valu deriv lowerbound comput use asap msat valu explain section 4 7 experiment result implement method c languag sun sparc2 workstat test use number benchmark literatur benchmark use ar filter 6 fifthord ellipt wave filter 13 twice unfold wave filter complex biquad recurs digit filter 13 sixthord ellipt bandpass filter 13 discret cosin transform 11 fast discret cosin transform 9 biquad filter exampl use three time step multipli one adder use resourc type adder addit subtract comparison exampl use two time step multipl one adder 71 lower bound estim partial schedul branch bound method mention section 1 branch bound schedul method reli estim lower bound partial schedul keep design space explod gener lower bound need estim larg number partial schedul configur time spent lowerbound estim high big neg impact overal time taken schedul algorithm implement branch bound schedul algorithm 3 test benchmark first find schedul use list schedul algorithm use perform upper bound branch bound algorithm search design space exhaust optimum schedul partial schedul estim lower bound schedul complet time exce upperbound partial schedul lead complet schedul target perform explor separ measur time spent lowerbound estim use method section 5 rim method 17 result report tabl 1 method least 20 time faster case measur effect lowerbound estim reduc size search space also measur number configur visit use method separ result also report tabl 1 method equal effect sinc estim slow cpu time taken use method time taken without use lowerbound estim case howev major case search space explod without lowerbound estim thu show necess estim resourc configur method rim 17 method rim ar filter 2 3 035 82 1769 3497 unrol 2 3 013 29 770 723 twice unrol filter 2 3 40 812 33182 27767 filter fast discret 1 1 014 31 688 892 tabl 1 cpu time number configur branch bound algorithm branch bound schedul algorithm method suitabl exist method use schedul algorithm incorpor method dynam program schedul dp algorithm 1 develop obtain excel result 72 lowerbound estim entir dfg test benchmark differ resourc constraint pipelin multipli latenc 1 nonpipelin multipli case lower bound compar optim solut obtain use dp algorithm 1 tabl 2 3 present lower bound case obtain method section 4 column dp tabl show number step optim solut lower bound tight 156 198 case 22 case differ one step also implement algorithm rim 17 sharma 20 compar result method give better lower bound 17 nine case five case lower bound better 20 17 lower bound one method jain 7 also report copi second last column jain lower bound resourc optimum solut lower bound lower bound differ rim 17 jain 7 sharma 20 ar filter 1 3 twice unrol wave filter 3 2 50 50 0 50 fast complex multipl take 3 time step lower bound case better rim z lower bound case better sharma tabl 2 lower bound nonpipelin multipli tabl benchmark case report tabl lower bound ident rim 17 averag cpu time 21 ms 25 ms 270 ms method rim method sharma method respect thu method faster fastest nontrivi method literatur 17 produc better lower bound case method one order faster method 20 still produc better result case lower bound 7 far inferior lower bound resourc optimum solut lower bound lower bound differ rim 17 jain 7 sharma 20 fast 1 1 26 26 0 26 26 transform complex multipl take 3 time step tabl 3 lower bound pipelin multipli 73 result cdfg tabl 4 show result exampl condit behavior maha 14 parker high level synthesi benchmark suit kim 25 waka 22 mult 23 resourc column list number adder subtract compar use case addit subtract comparison singlecycl present number time step schedul obtain dp algorithm lower bound case tight obtain schedul cselect implement allow specul execut cselect implement oper mutual exclus branch alway share resourc howev sinc control preced strict preced critic path length may increas tabl 4 maha parker two exampl high degre branch cselect impl mentat advantag condit resourc share nullifi increas critic path length length schedul could reduc even ad resourc comparison specul execut give much superior result ad resourc reduc schedul length benchmark resourc time step cselect spec exec maha 111 11 y7 maha 211 11 y6 maha 222 11 5 parker 111 11 y6 parker 221 11 5 parker 222 11 5 case lower bound one step less lower bound tight tabl 4 cselect specul execut condit branch benchmark 8 conclus futur research present simpl effici techniqu estim lowerbound complet time schedul problem propos techniqu handl multicycl oper pipelin function unit condit branch chain oper method entir dfg faster produc better lower bound 17 20 also present extens techniqu especi suitabl find lowerbound partial schedul dfg extend method use keep search space explod schedul algorithm branch bound method exis method literatur give special consider comput lower bound partial schedul conduct extens experi use method fastest nontrivi method known literatur 17 estim partial schedul branch bound algorithm method found least 20 time fatser equal effect reduc size search space current investig estim lower bound presenc loop multifunct function unit use also investig estim lower bound addit constraint interconnect storag r optimum dynam program schedul resourc constraint multischedul approach highlevel synthesi experi local microcod compact horizont machin bound number processor time multiprocessor optim schedul lower bound iter time number resourc function pipelin data flow graph experi adam synthesi system predict systemlevel area delay pipelin nonpipelin design recurs techniqu comput lowerbound perform schedul new approach pipelin optim comprehens lower bound estim behavior descript person commun slicer state synthes intellig silicon compil high level synthesi techniqu base linear pro gram maha program datapath synthesi sehwa softwar packag synthesi pipelin synthesi pipelin behavior specif lowerbound perform estim highlevel synthesi schedul problem algorithm c estim design algorithm behavior synthesi asic estim architectur resourc perform highlevel synthesi applic estim implement bound real time dsp applic specif circuit resourc share control synthesi method condit branch global schedul independ control depend base condit vector treebas schedul algorithm controldomin circuit schedul algorithm condit resourc share global schedul highlevel synthesi applic new symbol techniqu controldepend schedul tr experi adam synthesi system algorithm c global schedul independ control depend base condit vector treebas schedul algorithm controldomin circuit comprehens lower bound estim behavior descript global schedul highlevel synthesi applic maha multischedul approach highlevel synthesi estim design algorithm behavior synthesi asic new approach pipelin optimis ctr shen zhaoxuan jong ching chuen lower bound estim hardwar resourc schedul highlevel synthesi journal comput scienc technolog v17 n6 p718730 novemb 2002 helvio p peixoto margarida f jacom new techniqu estim lower bound latenc high level synthesi proceed 10th great lake symposium vlsi p129132 march 0204 2000 chicago illinoi unit state margarida f jacom gustavo de veciana lower bound latenc vliw asip datapath proceed 1999 ieeeacm intern confer computeraid design p261269 novemb 0711 1999 san jose california unit state margarida f jacom gustavo de veciana lower bound latenc vliw asip datapath read hardwaresoftwar codesign kluwer academ publish norwel 2001 margarida f jacom gustavo de veciana viktor lapinskii explor perform tradeoff cluster vliw asip proceed 2000 ieeeacm intern confer computeraid design novemb 0509 2000 san jose california