achil turtl undecid bounded problem small datalog program datalog languag logic program without function symbol consid paradigmat databas queri languag possibl elimin recurs datalog program bound sinc bound program execut parallel constant time possibl automat bounded detect believ import issu studi mani paper bounded prove undecid differ kind semant assumpt syntact restrict mani differ proof techniqu use paper propos uniform proof method base discoveri call achillesturtl machin make strong improv known undecid result particular solv famou open problem kanellaki show uniform bounded undecid singl rule program call also sirupsthi paper full version j marcinkowski proc 13th stac lectur note comput scienc 1046 pp 427438 j marcinkowski 11th ieee symposium logic comput scienc pp 1324 b introduct 11 introduct queri relat r answer given direct graph databas possibl given two node reach one odd number step first order one lack recurs first order logic observ led studi datalog databas logic program combin existenti posit first order logic recurs exampl relat r defin odddist datalog program rxi exi e edg relat graph e call extension predic treat input abl prove new fact r output intension predic idb program prove fact first rule initi rule extension predic bodi second rule contain intension predic among premis use recurs deep proof construct clear graph path element b odd length n prove ra b support kbn grant 8t11c02913 jmatcsuniwrocpl institut comput scienc wroclaw univers ul przesmyckiego 20 j marcinkowski element proof depth log n may need huge databas arbitrarili deep proof necessari evalu program hand consid program comput 3tail queri iii 1tailz ez x v 3tailz 2taili ez 3taila provabl exist proof fact deeper 3 regardless number element databas 1tail 2tail 3tail idb predic second third rule recurs fact recurs elimin last program possibl write equival one proof deep 1 necessari recurs elimin given program program equival first order queri priori upper bound depth proof need evalu queri everi fact deriv program deriv constant time parallel polynomi mani processor independ size databas equival prove 3 direct nontrivi program call bound 12 previou work contribut problem distinct whether given datalog program bound import datalog queri optim gener undecid suffici condit bounded given 17 10 18 19 decidabilityundecid border case differ syntact restrict semant assumpt studi 20 5 2 6 8 9 24 23 syntact restrict consid number rule recurs rule program maxim ariti idb symbol linear rule semant assumpt concern statu idb relat execut program empti deal weak program bounded arbitrari relat must consid possibl idb input strong uniform bounded studi undecid uniform bounded impli undecid program bounded fix syntact restrict possibl addit initi rule see section 17 discuss survey previous known result iv illustr differ level difficulti undecid proof uniform program bounded decid prove monad program program bounded also uniform 6 5 type singl rule program 20 also known program uniform bounded decid program singl linear recurs rule idb predic binari 24 moreov program bounded decid binari program idb predic defin one recurs rule 23 undecid prove program bounded linear binari program 9 achil turtl small datalog program 3 ii program bounded program one recurs rule two initi 2 iii program bounded program consist two linear recurs rule one initi 9 iv uniform bounded ternari program 9 v uniform bounded ariti 5 linear program 8 decid uniform bounded program consist one rule state open problem 11 nphard problem prove 2 12 undecid result uniform bounded program small number rule prove sinc paper give strong improv result iiv show vi uniform bounded undecid ternari linear program section 31 improv result iv v vii uniform bounded undecid singl recurs rule ternari program section 33 improv iv addit improv program syntact simpler recurs rule quasilinear mean gener speak form j intension predic sinc recurs rule proof program tree one possibl long branch notic vi vii still allow number initi result hold also program bounded viii uniform program bounded undecid program consist one linear recurs rule one initi section 43 sinc program bounded clearli decid program consist one rule result viii close numberlinear rule classif program bounded strong improv ii iii final section 45 solv problem kanellaki show ix uniform bounded singl rule program undecid 13 method differ techniqu use proof result iv reduct halt mortal problem ture machin reduct halt problem two counter machin syntact reduct arbitrari datalog program singl recurs rule program develop result univers method base encod conway function learn conway function paper philipp devienn patrick lebegu jeanchristoph routier 7 use prove undecid call cycl unif feel paper would written without previou work encod nevertheless quit differ one 7 first differ languag function use construct call achillesturtl machin variant ture machin next use version conway theorem prove construct realli univers machin encod achillesturtl machin datalog program due particular simplic achillesturtl machin one realli tempt claim simplest known univers machin possibl encod syntact small datalog program believ last time achillesturtl machin use undecid proof 4 j marcinkowski combin conway function method techniqu use binari edb relat order chain long enough relat think repres tape machin chain proof long method goe back 9 8 14 open problem classif finish program bounded follow syntact restrict still give interest open problem concern decid uniform bounded binari program ii linear binari program iii program consist singl linear rule know exampl syntact restrict uniform bounded would decid program bounded seem like candid exampl class linear binari program program bounded known undecid class 15 preliminari datalog program finit set horn claus call rule languag first order logic without equal without function predic use program bodi rule call extension predic edb predic occur head rule call intension idb rule call recurs idb predic occur bodi rule recurs initi rule recurs rule linear one occurr idb bodi program linear recurs claus linear ariti datalog program highest ariti idb predic use exampl two program section 11 predic e extension predic intension rule iii initi rule ii iv v recurs rule iv v linear 3 tail program linear also monad odddist program binari databas finit set ground atom formula deriv proof ground atom formula program p databas finit tree node label ground atom formula ii leaf label atom iii nonleaf node exist rule r program p substitut oe oe head r label node substitut bodi r label children iv label root tree depth proof depth deriv tree instead write proof program p databas use express simpli proof context clear notic p linear program pproof sequenc ground atom formula case use word length depth proof gener program p bound everi databas atom prove p proof deeper fix constant c differ convent concern input output datalog program correspond differ definit bounded predic program uniform bounded studi program predic bound respect fix predic pre constant c everi databas fact idb predic everi ground atom atom proof p proof deeper c definit reflect situat edb predic input one achil turtl small datalog program 5 predic output program program p program bound predic bound idb predic program uniformli bound constant c everi databas suppos idb predic occur everi ground atom atom proof p proof deeper c predic view input output program 16 exampl program bounded vs uniform bounded make differ program bounded uniform bounded clear reader give exampl program bound uniformli bound signatur program consist one extension predic e one intension predic predic binari rule conveni think e graph kind pebbl game initi rule start game place pebbl node tail length least 2 rule iii need distinguish pebbl rule iv v alway move one pebbl neighbour node final two pebbl meet node end tail length least two rule ii move pebbl two node prove program program bound uniformli bound lemma 11 databas input predic empti either proof pair de element fact id e prove 7 deriv step proof consid two case case 1 element ea b ebc hold first step use rule prove ia use twice rule v get ic use rule iii get ia c twice rule v get ic c final rule ii use deriv id e case 2 element databas sinc given empti proof possibl structur proof lemma 11 well structur program good illustr one idea proof section 3 4 program contain initi rule rule allow start kind game comput exist substructur requir form databas enough fact databas proceed comput termin use analogon rule ii flood 6 j marcinkowski databas otherwis enough fact short proof possibl proof exampl lemma 12 constant c exist databas nonempti input predic element ia b pprovabl shortest proof fact requir c step proof databas contain element c follow fact ec show fact ic 2c c 1 provabl shortest proof exactli step first show proof exist kth step use alreadi prove fact deriv ic rule use kth deriv step v k odd iv k even show shorter proof possibl notic bodi rule iiiv satisfi rule use defin distanc node follow distanc 0 distanc b less equal k exist node c either ebc ec b distanc b 1 distanc pair node b pair node c defin sum distanc c b notic fact form ia b deriv k step fact ic rule iiiv use proof distanc b c greater k final observ distanc c 17 program bounded vs uniform bounded discuss notion uniform program bounded formal technic level inform notion bounded uniform bounded need program consider subprogram bigger one happen predic suppos output program also part input program bounded hand correspond view entir datalog program definit possibl mani output predic similar distinct program uniform equival datalog program see 21 first notion appli entir program second one subprogram equival known program equival undecid uniform equival decid 52122 observ also case bounded uniform version given syntact restrict priori decid suppos program bounded decid syntact restrict restrict allow arbitrari number initi uniform bounded also decid restrict see consid program p signatur idb symbol 1 let q program p signatur enrich new edb symbol ariti e equal ariti k new rule easi see q program bound p uniformli bound reduc decis problem uniform bounded p problem program bounded program q survey result give evid difficult prove undecid uniform bounded undecid program bounded argument show reason hand know exampl syntact restrict uniform bounded achil turtl small datalog program 7 would decid program bounded like candid exampl class linear binari program program bounded undecid class decid uniform bounded open 2 achillesturtl machin 21 tool conway function definit 20 conway function function g natur argument defin system equat q natur number q ji mean iq natur number q jp conway function g given natur number n let cg n statement assert exist natur number g see section 23 find nice exampl give idea conway function proof follow theorem found 4 14 7 theorem 21 conway problem given conway function g natur number n cg n hold undecid main tool follow refin version theorem 21 theorem 22 1 exist comput sequenc fgn g conway function 2g recurs complet ii g n q coeffici definit function 2 iii g n 2 exist univers conway function g set fn cg 2 n g recurs complet ii q coeffici definit function g 2 iii n proof 1 known problem given finit automaton 2 counter comput start fix begin state empti counter reach fix final state undecid even requir final state reach counter empti read remark end section see precis mean finit automaton 2 counter given automaton kind construct conway function g satisfi condit ii iii theorem cga 2 hold comput reach final state first 8 j marcinkowski need modifi littl bit construct automaton b termin termin satisfi follow condit iv second counter b increas first counter decreas comput step v state b number counter increas comput step state chang j detail construct b left easi exercis hint must done ad coupl new state exampl instruct increas second counter keep first unchang must substitut two instruct first increas first counter chang state new one second increas second counter decreas first suppos state automaton b begin state let increas sequenc prime sequenc found k sinc densiti prime around n c log n encod configur b state first counter contain number n second counter contain natur number 2 easi notic x code two subsequ configur b yx depend remaind x mod p yx 2 defin requir conway function defin first step properli put code begin configur put also p f reach 1 iter function next one code final configur reach 2 use well known fact exist particular finit automaton counter problem comput start fix begin state b given first counter empti second counter reach configur fix final state f empti counter undecid proof similar start comput properli put even p j ji hold n hold g2 n last code begin configur remark automata counter notion finit automaton two counter similar one kozen book 13 differ assum automaton input tape sinc two counter automata readonli input tape power ture machin problem whether given automaton kind termin given input undecid input separ hide input finit control automaton fact input tape finit object input also problem whether given automaton without input tape termin start fix begin state empti counter undecid show need proof second claim theorem 22 exist particular finit automaton 2 counter problem comput start fix begin state b given first counter empti second counter reach configur fix final state f empti counter undecid first observ exist automaton requir 3 counter univers achil turtl small datalog program 9 ture machin content part tape left head rememb one counter right head second counter auxiliari third counter need oper first two use standard techniqu encod three counter two see 13 detail convent 23 sinc consid conway function g n exist prove theorem 22i particular assum claim ii iii theorem 22i hold 22 achillesturtl machin given conway function g given input n construct achillesturtl machin comput subsequ iter gn variant multihead ture machin readonli tape cell tape colour one colour k 0 k p definit function g cell x colour colour k denot fact k x cell sx successor function tape colour k j p colour k 0 call white call red 3 head first symbol achil second turtl third call guid transit rule design way head never go left achil guid move right step comput achil tri catch turtl configur machin describ posit head begin comput achil arbitrari white cell x tape turtl guid cell n x begin configur conx n x n x successor function tape idea comput reach configur form achil exactli k cell behind turtl g comput step head machin move accord one follow transit rule r sinc q rule r run rule rule j jump rule configur form call special see section 23 nice exampl achillesturtl machin follow easi lemma give intuit comput machin proce lemma 24 configur machin turtl cell x guid ii configur machin turtl cell x achil k x none jump rule use later j marcinkowski comput iii suppos configur machin achil cell x turtl x guid r x one jump rule use later iv special configur result transit done accord one jump rule v achil alway white cell vi configur machin guid cell x next configur r x proof claim true begin configur everi configur result use jump rule run rule move guid right keep turtl cell ii achil right turtl jump rule use run rule move achil right iii follow ii iv guid never left turtl run rule move right execut run rule right turtl v start white cell move p cell right step vi sinc hold everi see convent 23 formul prove lemma equival behaviour conway function result comput achil turtl machin goal lemma 25 follow condit equival cg n hold ii achillesturtl machin reach configur form iii achillesturtl machin reach configur form conasasa iv achillesturtl machin reach configur form lemma 26 suppos special configur machin achil cell turtl guid k step configur con gammai ii exactli two configur reach k proof k step done accord rule r k step achil cell kp kpa q turtl ii con gammai reach k step rule r may use lead con pgammai rule j may use lead lemma 27 suppos special configur machin achil cell turtl guid p follow two condit equival achil turtl small datalog program 11 possibl reach special configur conx l x l x next special configur proof lemma 26 ii configur k step either first case achil alreadi right turtl lemma 24 iiiv special configur reach prove equival show configur reach second case form conx gm x gm x fact conx gm x gm x lemma 28 follow two condit equival achillesturtl machin reach configur form conx l x l x ii exist natur number j g j proof iii implic prove induct number special configur reach comput iii implic prove induct j case lemma 27 use induct step proof lemma 25 ii iii equival lemma 28 convent 23 claim iii theorem 22i clearli ii impli iv also iv impli ii configur reach number step k 1 hold consid configur last step comput done accord jump rule last step turtl move configur 23 achillesturtl machin exampl order give reader idea machin work go provid nice exampl conway function rather conwaylik function achillesturtl machin built function function g start wellknown collatz j marcinkowski function take natur number even divid two odd multipli three add one problem iter procedur give final result 1 regardless natur number start open formal spirit definit 20 defin function g ae open problem whether multipli number also add 1 realli conway function sens definit 20 anyway find exampl inter est construct achillesturtl machin function rule exampl achillesturtl machin initi configur conx n x n transit rule run rule jump rule final configur conxsxsx coeffici run rule white jump rule calcul accord definit r j begin section 22 left hand side red jump rule con 2 4 g 4 g would follow definit place add 1 form 3n 1 suppos concret exampl n 5 subsequ iter g 5 16 8 4 2 1 begin configur machin cona 5 5 white cell comput sequenc machin con 4 x 5 x 17 x rr con 26 x con 6 x 22 x 22 x rj con 28 x con 8 x 22 x 23 x wr con con 12 x 22 x 25 x wr con 34 x 38 x 38 x wj con 14 x 22 x 26 x wr con 36 x 38 x 39 x wr achil turtl small datalog program 13 con con con 20 x 22 x 29 x wr con 42 x 42 x 43 x wr con 22 x 22 x rr mean red run rule use obtain configur wr white run rule rj red jump rule wj white jump rule configur mark depict fig 1 3 ternari program 31 ternari linear program p theorem 31 conway function g n theorem 22i exist effici construct ariti 3 linear datalog program p one idb predic uniformli bound cgn 2 hold signatur program contain one binari edb symbol go serv kind order us p monad edb symbol play colour ternari idb symbol con program p consist transit rule flood rule conxyzconst r k 1 km understood k j mod p sinc longer true successor must explain mean l symbol rule notat convent exampl rule understood conx2i 4 x1 conxx1i let us explain mean rule transit rule achillesturtl machin except check cell node achil run paint properli flood rule prove everyth one step turtl red node initi allow start comput white node properli colour piec tape near node lemma 32 cgn 2 hold c exist databas tupl element conat g prove p proof conat g requir c step 14 j marcinkowski g g g g fig 21 subsequ configur exampl achillesturtl machin proof long enough schain see definit 34 empti idb relat first prove flood rule use databas provid cgn 2 hold suppos use mean prove red follow proof conat g notic give legal comput achillesturtl machin first fact proof begin configur machin achil turtl small datalog program 15 contradict lemma 25 take first element z order initi conz 2 z 2 z use 2c time run rule 2 get shortest proof fact con 2pc go prove lemma 33 cgn 2 hold exist c databas everi tupl b c element conabc prove program p exist proof conabc shorter c step proof suppos hold mean start comput achillesturtl machin configur conx 2 x 2 x possibl reach final configur conasasa notic comput none head move left x right sa let k distanc x sa let k number step comput necessari reach final configur clearli pk1 k go prove ck2 proper constant need definit definit 34 schain element databas set x sxm xm1 km xm decreas schain element databas set x km xm km understood k mod p case say chain begin x 0 definit 35 let k natur number say node w databas kfound exist decreas schain begin w consist k element w kfound chain exist definit 36 let k natur number say databas kfound exist schain consist k element obvious kfound chain exist consid 2 case lemma 37 kfound tupl b c element fact conabc prove proof requir k2 step proof take x exist schain length k begin x thank initi rule conx 2 x 2 x provabl proof length 1 pretend chain x k x tape start comput achillesturtl machin sinc transit rule machin rule program p step comput encod one step proof exist element chain st red prove k1 step one step use flood need prove con everi tupl lemma 38 let kfound databas i0 pproof flood rule use proof k i0 pproof suppos shortest possibl proof conam bm cm flood rule use last step proof iii conabc pprove tupl b c proof requir k proof set subsequ schain length pm j marcinkowski ii suppos step done accord flood rule shorter proof conam iii follow ii end proof lemma 33 theorem 31 theorem 39 uniform bounded ternari linear datalog program undecid proof follow theorem 22 31 32 ariti 5 singl recurs rule program r theorem 310 conway function g n theorem 22 exist effici construct ariti 5 datalog program r consist one quasilinear recurs rule initi uniformli bound iff hold previou subsect signatur program contain one binari edb symbol go serv kind order us p monad edb symbol play colour ternari idb symbol con also addit idb symbol steer ariti 5 program r consist recurs rule g initi transit rule g g g gk initi flood rule steerxt r sk 1 initi cona 2 2 ak 0 k 1 let us explain go tripl achil turtl guid node graph defin 3 mean order colour proof either program p r path graph graph given edb relat defin datalog program without recurs want defin vertic begin node g onlin comput reach node p must use one rule rule linear read noth inform edb situat around defin graph advanc initi one recurs rule enough graph access program case rule quasilinear make use addit idb recurs predic steer reader would ask question steer predic ariti 6 want hide rule achil initi simpler recurs claus fact addit problem aris sinc flood rule achil forc design recurs rule way uniform achil turtl small datalog program 17 reason crucial achil goe chain thank say long chain long proof lemma 38 312 case 1 could write initi hypothet 6ari steer way achil would move chain run accord steer fact prove initi would control given steer begin lemma 311 cgn 2 hold c exist databas tupl b c element conabc prove program r proof ca b c requir c step proof lemma 32 lemma 312 cgn 2 hold exist c everi databas everi tupl b c element conabc prove r exist proof conabc shorter c step definit 313 b c tupl element databas say conabc fact proof lemma 312 suppos cgn 2 hold comput achillesturtl machin start configur conx 2 x 2 x reach conysi sy comput requir space kp distanc x kp natur k consid 2 case case 1 1pfound everi proof fact longer 1 achil part recurs rule analog lemma 38 case 2 c take v k1p v chain length k 1p v initi rule conv 2 v provabl proof length 1 pretend chain v kp1 v tape let achil turtl play game among rule possibl given predic steer also standard achillesturtl machin rule k move configur con kp v reach allow use flood everi fact form conabc prove one step new fact prove later cours noth new idb predic steer prove first step end proof lemma 312 theorem 310 33 ternari singl recurs rule program q theorem 314 conway function g n theorem 22i exist effici construct ariti 3 datalog program q consist one quasilinear recurs rule initi uniformli bound iff hold similarli previou subsect signatur program contain one binari edb symbol go serv kind order us p monad edb symbol play colour ternari idb symbol con graph defin ariti 5 relat previou section defin intersect four graph defin ternari constraint four addit ternari idb symbol languag program rule program q recurs rule j marcinkowski g g 0 initi constraint rule g 0 rule g 0 rule 0 rule g g 0 rule g pa g g 0 k 1 initi prove correct construct shall argu ternari relat realli defin graph relat steer last section easi notic steerat g prove one initi g g 0 also prove opposit inclus suppos red first consid relat e gtt 0 sinc guid see far achil guid constraint allow turtl stay place jump accord proper jump rule relat e att 0 decid turtl allow jump achil far away turtl wait achil catch turtl turtl allow jump see 1 anywher relat e gtt 0 anywher g proper way alreadi first two relat forc turtl behav relat forc guid move ahead allow guid execut jump rule turtl jump togeth prevent achil turtl small datalog program 19 danger guid jump turtl run whatev turtl guid allow use proper run rule danger turtl jump guid run allow achillesturtl machin rule prevent relat e tt 0 remain place guid allow go anywher move guid must join red constraint allow guid turtl go anywher theorem 315 uniform bounded singl recurs rule ternari datalog program undecid proof follow theorem 22i 314 remark could use theorem 22ii instead get univers datalog program exampl theorem 31 would form exist ariti 3 linear datalog program p one idb predic comput sequenc fpng initi rule program p pn uniformli bound cg n hold g univers conway function theorem 22 ii fact form 15 howev done section 4 decid present result gener version preserv notat uniform instead 4 singl rule program 41 constant notat proviso section 42 45 go encod comput achillesturtl machin small number rule one two afford separ predic colour instead go one binari predic col understand colca colour c instead predic need constant name colour constant datalog fact want use say constant simpli increas ariti idb symbol k write sequenc c variabl k last argument occurr idb predic program one reason program follow section high ariti exampl program constant b written mean p x constant understood b thank suppos constant languag use follow constant jump run joker constant colour colour also call white colour 1 red colour 2 pink j marcinkowski 42 achillesturtl game section modifi descript achillesturtl machin defin equival version one transit rule make notat compat databas notat go forget tape use kind infinit graph instead distinguish version machin call achillesturtl game transit rule achil turtl machin index three pa ramet first either jump run remain two colour turtl cell guid cell transit idea go bellow treat paramet argument occur goal bodi singl rule solv first four goal bodi substitut proper paramet variabl cond tcolor gcolor paramet use comput posit achil turtl guid execut rule follow definit introduc predic use construct singl rule hope reader understand definit read proof lemma 42 definit 41 given conway function g theorem 22 achillesturtl graph relat structur g exactli node relat list node g colour joker infinit sequenc node c hold node c colr joker hold iv hold hold j 0 mod p 0 v hold hold hold vi hold achil turtl small datalog program 21 hold vii hold hold k hold k viii hold hold ix hold colour hold hold colour trulerun red joker joker hold hold hold hold set node c graph natur way understood tape achillesturtl machin notic fact definit local sens element c c j directli connect fact white node c c j go use relat achillesturtl graph encod rule machin one transit rule conf bodi conjunct follow fact 22 j marcinkowski coltcolort g lemma 42 suppos red comput singl comput step achillesturtl machin conf reach conf g singl step achillesturtl graph game proof clear move achil perform way machin game simpli move p cell ahead check also case turtl guid direct easier transit machin done accord run rule substitut run variabl cond els substitut jump variabl tcolor substitut colour turtl cell variabl gcolor substitut colour guid cell white node g g 0 substitut exactli one white node substitut node x 1 two node substitut first x 1 second x 2 notic condit ii theorem 22 two white node g g 0 grule goal line vvii bodi satisfi way cond run substitut x 3 notic case cond jump substitut joker x 3 two trule goal bodi satisfi way satisfi last two goal substitut joker x 4 cond run cond jump substitut g 0 x 4 direct first notic conjunct satisfi realli distanc achil turtl transit smaller p jump allow accord achil turtl machin rule rule guid defin claim vi vii viii definit 41 assur cond tcolor gcolor chosen fair way guid game move way one machin turtl cond run move fact conjunct satisfi cond jump turtl go node guid conjunct satisfi everi choic joker substitut x 3 conjunct achil turtl small datalog program 23 satisfi x follow lemma much easier prove lemma 42 left exercis reader lemma 43 c red configur form conf reach conf singl step graph game hint put cond equal run tcolor equal red 43 singl linear rule program initi section use achillesturtl game construct datalog program one linear recurs rule one initi uniformli bound cg 2 hold edb predic program use definit 41 one ternari idb predic config variabl g fact form usual understood achil turtl guid consid databas suppos colour run joker occur motorway sequenc element databas use play achil turtl game definit 44 suppos element say sequenc motorway subgraph order set element consid g databas definit 41 exampl requir sx 3 hold motorway readi write linear recurs rule program conf conjunct fact need sequenc motorway notic last line rule exactli liter bodi 0 g 0 occur run substitut cond red substitut tcolor j marcinkowski initi program conf thank last line recurs rule sure fact conf prove one step conf iga g also prove one step fact form conf red see proof lemma 48 case 1 next goal show long proof use recurs rule possibl databas long motorway lemma 45 consid sequenc element databas 0 k x gamma 1 subsequ motorway also whole sequenc motorway proof condit ix definit 41 local element c j occur condit white node c c j lemma 46 suppos conf conf conf conf sequenc fact 0 conf deriv conf singl use recurs rule exist sequenc element databas motorway proof follow lemma 45 construct recurs rule definit 47 g tupl node databas say fact readi prove cg 2 hold program uniformli bound lemma 48 cg 2 hold exist constant c everi databas program prove fact fact prove c deriv step achil turtl small datalog program 25 proof cg 2 hold achillesturtl game reach configur conf x sx sx white x sx red suppos k move need reach configur node machin graph left right sx visit comput go prove k2 good candid c consid element 2 possibl case 1 motorway length k 1p databas last node suppos motorway initi rule conf prove one deriv step next k deriv step one simul k step achillesturtl game k1 step deriv conf sinc gammap1 red one argu like proof lemma 43 see next deriv step prove 0 g 0 last line recurs rule fact prove case 2 motorway lemma 46 everi proof less k3 step still need show cg 2 hold program unbound lemma 49 cg 2 hold constant c exist databas empti input idb relat fact prove databas proof requir c step 26 j marcinkowski proof enough show arbitrarili long proof need achil turtl game graph suppos idb input fact start done initi use 2c time run rule turtl pinkcolour cell notic posit turtl remain unchang comput final configur shortest proof fact realli requir 2c1 step includ initi summar theorem 410 uniform bounded program bounded undecid program consist one linear rule one initi proof problem given conway function g cg 2 hold undecid abl even function satisfi condit ii iii theorem 22i function construct datalog program one linear rule one initi program bound cg 2 hold lemma 49 uniformli bound cg 2 hold lemma 48 44 singl rule program one construct would like modifi construct previou section get singl rule program problem initi predic conf ig simplest solut would initi check way use motorway goal bodi rule check need edb fact hold rule look like conf conf way one could think secur possibl start comput achillesturtl machin place deriv step made enough go footstep proof lemma 48 requir initi configur provabl realli secur wouldb rule provabl bound number step fact one step previou section think new trick assur 45 singl rule program construct singl recurs rule achil turtl small datalog program 27 conf igrun z conf igw run g main premis conf igjump run 2 2 initi premis jumprun premis constant joker occur p time predic motorway ad two addit argument recurs predic rule assert someth deriv first argument run constant run jump interpret way databas fact prove program provabl provabl 0 step given part input also fact requir deep proof proof possibl fact given input jumprun premis normal useless main initi premis deriv step jump second argument run jump equal databas use show anyth prove everyth prove one step must hold joker red use method section 43 prove construct singl rule program uniformli bound cg 2 hold lemma 411 cg 2 hold exist constant c everi databas fact prove rule proof deeper c proof let k like proof lemma 48 need consid two case case 1 jump run differ element databas 28 j marcinkowski suppos fact proof length least k2 follow proof lemma 48 use fact need initi given input short 0step proof show everyth prove k2 deriv step case 2 jump run interpret element databas suppos anyth prove p conf igjump jump joker joker joker hold databas sinc hold sinc joker red everi fact form conf igrun z prove one deriv step lemma 412 cg 2 hold constant c exist databas fact conf igrun run prove rule databas proof requir c step proof proceed similar way proof lemma 49 follow differ longer assum idb input empti instead requir follow conf ig fact input x c conf ii requir x c hold end proof theorem 413 uniform bounded singl rule datalog program undecid achil turtl small datalog program 29 r bounded undecid datalog program singl recurs rule datalog versu first order logic parallel evalu recurs rule queri decid optim problem databas logic program halt problem one binari recurs horn claus undecid undecid optim problem databas logic program undecid bounded problem datalog program time bound materi recurs defin view logic program parallel complex element relat databas theori handbook theoret comput scienc 3 frenchmen method prove undecid uniform bounded singl recurs rule ternari datalog program undecid uniform bounded singl rule datalog program recurs axiom relat databas data independ recurs deduct databas decid class bound recurs comput restrict project repres instanc posit result bounded multipl recurs rule decid undecid result bounded linear recurs queri tr ctr foto afrati stavro cosmadaki eugni foustouco datalog program persist number acm transact comput logic tocl v6 n3 p481518 juli 2005 evgeni dantsin thoma eiter georg gottlob andrei voronkov complex express power logic program acm comput survey csur v33 n3 p374425 septemb 2001