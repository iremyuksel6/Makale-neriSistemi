tool build asynchron server support speech audio applic distribut clientserv model becom increasingli preval multimedia system advanc user interfac design multimedia applic exampl may play record audio use speech recognit input use window system graphic io softwar architectur system simplifi applic commun multipl server eg audio server recognit server manag differ type input output paper describ tool rapidli prototyp distribut asynchron server applic emphasi support highli interact user interfac tempor media multimod io socket manag handl lowlevel connect manag devic io support callback mechan connect initi shutdown read incom data byte stream manag consist rpc compil runtim librari support synchron asynchron call programmat interfac telnet interfac allow server act command interpret paper detail tool develop build asynchron server sever audio speech server built use tool applic exploit featur provid server b introduct softwar tool describ paper draw predecessor system emphas featur found import build user interfac highli interact applic involv speech audio goal work provid environ rapid prototyp distribut asynchron server applic emphasi support multipl media multimod io work exist user interfac softwar within current softwar engin paradigm distribut clientserv model use decadeand becom increasingli preval multimedia systemsand advanc user interfac design mani current graphic user interfac use x window system client applic commun window system server manag screen output mousekeyboard input 17 advantag use similar softwar design methodolog develop new user interfac use form io sucha speechrecognit synthesi incorpor tempor media record speech distribut design allow multipl applic share limit io resourc eg display microphon loudspeak etc without knowledg applic softwar tool describ paper assist creation server client applic address issu prototyp debug distribut environ 11 applic environ multimedia applic may play record audio use speech recognit input speech synthesi output access remot inform servic use window system graphic io architectur system simplifi applic commun multipl server eg audio server recognit server synthesi server manag differ type input output environ desir 1 build mani server standard maintain lowlevel architectur rather handcraft server 2 develop tool address specif need manag timevari media audio sever audio server base x window system model client applic commun server manag speech audio io workstat 1 2 4 client applic make request server perform audio function play sound file request ideal asynchron avoid roundtrip network delay permit server send user input event client user interfac server handl tempor media audio video must also concern type event exampl applic place request start play sound applic ideal receiv asynchron notif play action complet applic also request event server regular interv exampl sound record energi inform sent server visual display client applic type event significantli differ associ window system yet essenti use tempor media 7 12 overview socket managerhandl lowlevel connect manag devic io support callback mechan connect initi ation shutdown read incom data byte stream manag higher level tool consist runtim librari remot procedur call rpc stub gener specif use rpc compil ident syntax use call call program synchron asynchron call support server built rpc librari simultan support programmat interfac ascii telnet inter face ascii interfac simpl yet power tool rapid prototyp debug server applic paper first describ asynchron server build tool detail audio recognit server well sever applic built use tool paper conclud review relat work socket managersm librari simplifi handl asynchron input commun setup distribut program sm hide underli interprocess commun code deal socket bind listen accept replic build network base applic sm current run unix use internet domain socket reliabl tcpip commun 10 client open connect server specifi servic name option host name new servic creat callback procedur regist sm procedur asynchron execut incom servic request receiv callback also regist read data avail commun socket devic applic byte stream manag respons actual read data addit handl inform socket addit file descriptor regist sm allow physic devic digit sound equip speech recogn use within framework smbase server sm librari usedbi server client initi server applic process block 1 data read devic socket 2 request set tear connect 3 applic defin timer expir portion sm execut callback data avail overlap function x toolkit xt allow maximum flexibl sm librari built two form one standalon client server processeswithout graphic interfac compat librari use sm function built top xt routin singl server support multipl client well multipl servic see also section 41 exampl server provid speech process capabl support two relat servic one servic provid raw signal process capabl client servic provid current statu inform server number client memori usag etc servic provid separ commun port 21 client server peer terminolog client server confus particularli deal asynchron messag sent direct commun parti framework describ paper client commun server synchron remot procedur call asynchron messag server server code rpc stub oper system event callback dispatch applic code rpc stub oper system client server figur 1 server client architectur typic send asynchronousmessag rpc repli back client client server process thu act sender receiv messag symmetr peer relationship applic server byte stream manag socket manag exploit dualiti client server thu simplifi design implement softwar singl mechan use commun client server commun server client byte stream manag bsm work top socket manag format manag asynchron messag remot procedur call bsm consist rpc compil stub gen erat runtim librari tune write xlike server client overal architectur typic server client shown figur 1 bsm simultan support three commun mode select perconnect basi 1 c program interfac effici nonhuman read abl data encod 2 c program interfac human readabl data encod ing mode use debug clientserv commun 3 ascii telnet interfac interact commun server mode server act interpret use test debug purpos 31 asynchron rpc librari gener function support server defin procedur call specif file format specif base function prototyp ansi c complex data type array structur deliber support sinc inclus would complic ascii telnet interfac server specif function argument implicitli defin whether call synchron asynchron function return valu modifi argument 1 function handl block rpc call function return valu chang argument 2 function handl asynchron messag remot procedur call implement one asynchron messag client server correspond repli server back client procedur declar either return int void return valu one argument requir connectionspecif 1 ie least one argument call refer 2 ie argument call valu file descriptor identifi entiti end peer connect number serverspecif argument specifi follow data type current support data type descript int doubl doubl float point number char singl charact string null termin c string byte structur contain arbitrari data length send audio data pointer data type call refer design preced argument bemodifiedbyaremot procedur syntax rpc declar summar intvoid funcnam int fd datatyp name typic specif look like 3 1 void sstartint fd int timem 2 void srecordint fd string name 3 int sgetlengthint fd string name 4 void sgetdirint fd string dirnam exampl 1 2 sent asynchronousmessag exampl 3 synchronousrpc sinc function return valu exampl 4 also synchron sinc string dirnam pass refer fill server rpc start bsm buffer incom messag respons receiv match origin rpc request rpc complet applic code finish execut buffer messag dispatch firstin firstout manner messag contain sequenc number time stamp sequenc number use consist check synchron rpc return valu time stamp avail timedepend applic user interfac symmetr relat applic ser vice usual two specif file associ servic one file specifi synchron asynchron call client server specifi asynchron event sent server client 4 compil rpc specif file 5 produc three code file c header file h two code file repres rpc stub server client respect third code file typic link applic provid improv programmat interfac applic regist callback rather enforc predefin callback name applic applic regist interest particular event turn call local clientdefin function mechan allow runtim rather compiletim bind function server gener event 32 telnet interfac telnet 10 16 use interact commun server allow act command interpret allow access server machin without code run remot machin figur 2 illustr sampl telnet session audio server describ section 41 ascii string interfac also allow client written environ 3 note number argument use 4 server typic make rpc client 5 rpc stub gener built use lex yacc standard compil build tool corient rpc gener easili use eg lisp machin server function call name shorten name argument defin specif file function name argument enter string exampl function call form sstartfd 8000 would enter telnet interfac sstart 8000 simpli start 8000 6 asynchron event server return valu argument synchron rpc call similarli sent display ascii string telnet interfac also support crude form help gener bsm compil list function support server argument print sent server style interfac server found extrem use debug server applic command server easili type past window telnet connect server allow command script interact test without compil code addit telnet interfac bsm librari run mode data packet sent peer print featur use often difficult task debug distribut program section detail sever audio recognit server built use sm bsm addit sever system implement includ server find user locat 13 video snapshot server 41 sparcstationbas audio server exist highlevel librari interfac audio capabl sun sparcstat 20 convert run asynchron server replac old synchron procedur call fell three categori 1 call obtain statu inform server eg much current sound file hasbeen play convert synchron rpc 2 call set paramet eg set playback gain perform simpl oper eg copi sound file start play sound replac asynchron messag 3 asynchron event sent applic server complet timebas oper origin applic would poll use librari routin determin play record finish termin condit eg maximum length reach silenc detect timebas oper pass applic regist callback function exampl audio record end asynchron record done event messag sent audio server indic activ complet figur 2 show sampl interact telnet session audio server addit varieti new asynchron call creat awkward implement convent librarybas procedur call environ exampl callback regist asynchron receiv energi valu record interv specifi applic mechan also creat asynchron play record buffer manag applic play buffer client send messag server includ first buffer audio data intern buffer server need data asynchron messag 6 sinc one connect possibl telnet file descriptor first argument use function name form soundstart shorten start user input font server output font comment list server function argument void halt halt current play record action int length stringfilenam get length sound file void paus detect inttrueorfals enabl paus detect record void get dir string dirnam get current sound directori etc length greetingsnd length sound file greetingsnd repli returnvalue3457 length 3457 millisecond 3457 get dir current sound directori repli dirnamesoundbaron directori name return paus detect 1 stop record user paus record testsnd record sound file record begin ev data0 handle0 record start event record done ev data0 termination5 handle0 length3604 record termin 3604 play testsnd play sound file play begin ev data0 handle0 play start play done ev data0 termination6 handle0 position3604 play end normal play testsnd play sound file play begin ev data0 handle0 play start halt user interrupt play play done ev data0 termination1 handle0 position926 play interrupt 0926 figur 2 sampl output interact telnet session sent client execut clientdefin callback callback new data buffer typic sent back server asyn chronous sequenc oper similar spirit rpc server obtain data client howev scheme neither client server ever block wait repli synchron remot procedur call sound play record server either file buffer play file easiest applic server intern handl file manipul io use buffer provid flexibl applic permit exampl sound synthes onthefli play realtim use buffer howev greater burden place client manag file io send data server request multicli support incorpor audio server current model share audio resourc fall area client prioriti lock data interest event gener x window system philosophi followedprovid flexibl mechan server rather polici server use howev manag resourc necessari share polici incorpor server allow multipl applic use server simultan without write separ audio manag equival window manag prioriti applic classifi three prioriti level urgent normal background prioriti assign per applic basi rather per command basisfor type audio applic envis coars prioriti structur appear suffici 7 higher prioriti applic preempt lower prioriti applica 7 although possibl applic chang prioriti dynam tion exampl normal prioriti applic play sound request arriv high prioriti applic play sound b sound halt sound b play sound b finish play sound resum 8 server send event lower prioriti client indic preemption resumpt play activ receiv preemption event client cancel pend play request automat resum request equal lower prioriti arriv client queu firstin firstout manner execut audio play record resourc becom avail record prioriti handl similar manner except record action termin preemption automat restart behavior chosen applic provid appropri prompt feedback user restart record lock applic desir lock resourc server exclus use client abil need applic must ensur uninterrupt sequenc play record action exampl one applic could request play sound file sound file b start playinga separ applic prioriti request play file c howev fifo queue play request sound may play cb order instead desir abc order similar intermix play record also possibl server capabl play record simultan client request lock server resourc exclus use 9 exampl need workstationbas telephon answer machin answer machin applic 8 sound restart point sever second interrupt 9 vox audio server control larger array speech audio devic allow lock subset devic rather entir server 4 must lock server telephon line taken offhook sinc applic abl play record phone call complet applic writer discourag lock server unless absolut necessari releas server lock soon possibl audio activ block client server lock server lock client complet control servera higher prioriti client interrupt preempt data interest event allow flexibl type applic 10 written client regist interest receiv event varieti server activ client exampl request event whenev server begin play record client multipl client may need simultan receiv sound data record howev one process audio server read audio data record hardwar exampl one client record telephon messag anoth client may want receiv copi record data detect presenc dtmf tone 11 present visual display record level eg vu meter enabl client work togeth server allow record data distribut number interest client client regist circumst wish receiv record data well intend use data exampl client specifi go perform speech recognit whenev anoth client record scheme flexibl allow client get record data varieti condit 1 process record 2 anoth process perform particular oper record data dtmf detect 3 time regardless audio server activ data interest consid background task multipl data interest handl simultan prioriti use primari task server play record file record data distribut interest client asynchron event data broadcast multicast client may start record differ time may request receiv differ length data packet process captur background speech section 51 exampl may want receiv larg packet audio infrequ interv dtmf detect client may want small packet reduc latenc interact applic queu request server request halt sound play execut receiv server howev request server queu handl immedi exampl play sound file subsequ play request client queu previou request complet applic desir explicitli queue command would normal handl immedi audio server allow speed sound chang playback con stant pitch timecompress exampl graphic slider use interact adjust playback speed howev applic may want play sound play sound b eventu audio manag touchton differ speed sequenti send three request server 1 play 2 set speed 3 play b would desir effect speed sound would chang soon second messag arriv client could wait receiv done event first play request send me sage howev would entail roundtrip server client possibl caus discontinu play sound overcom limit possibl explicitli turn command queu server exampl applic send command server 1 play 2 turn queu 3 set playback speed 4 play b techniqu request chang speed play b queu play action complet similar approach command queu taken vox dec audio server 1 4 simpl mechan suffici mani applic inadequ other applic may want perform sophist branch logic server base termin condit user input rather reli simpl queu mechan audio server ideal support interpret program languag tcl 15 client defin procedur execut within server program extens capabl provid network extens window system news 24 statu servic addit primari play record servic provid audio server secondari statu servic provid debug log purpos intern state server number client current playrecord statu error inform etc sent client statu servic facil power simpli log inform file sever reason first realtim oper server easili monitor simultan varieti locat second statu connect establish current intern state server sent client summari formsuch inform may difficult visual extract log file 42 pcbase speech recognit server exist librari interfac pcbase speech recogn convert asynchron server ad sever sm call defin rpc specif file librari commun extern speakerdepend isol word speech recogn serial interfac 12 initi server file descriptor recognit hardwar regist sm server function access applic asynchronousmessag applic request server load file speech templat start recognit server asynchron send event applic word recogn event provid recognit server close relat keyboard mous input relat tempor media provid audio server 43 softwarebas speech recognit server second speech recognit server softwar interfac built use softwarebas recogn 9 run entir sparcstat speakerdepend isol word recogn run realtim sparc processor recognit server get speech data audio server via data interest event appli recognit algorithm send recognit event interest client typic applic use recognit server requir distribut softwar architectur client often commun audio server recognit server window server window server audio server recognit server client figur 3 client use audio recognit window server recognit server turn get record audio data audio server configur shown figur 3 refin applic program interfac api support recogn vari perform characterist would like support differ class recogn speaker ind pendent continu etc well abl handl recogn specif attribut differ train protocol varieti applic implement speech research group use audio recognit server addit two applic detail section sever applic built take advantag multipl audio server execut parallel separ machin process migrat speech audio applic use sparcstationbas audio server environ lead highli distribut configur allow varieti sound process server layer top audio server see figur 4 addit sever applic lowlevel server two midlevel server obtain data audio server shown 51 captur background speech applic built use audio server continu record backgroundaudio inmemori buffer later playback graphic speechonli interfac built access record audio inform graphic interfac use audio server x window server graphic output mous input 11 speechonli interfac use recognit server control playback captur audio 23 describ similar system run macintosh environ 52 voic mail messag collect voic mail speech research group gather client applic run sun sparcstat applic commun phoneserverprocessthat monitor isdn telephon activ call answer messagesar play record use audio server record control use realtim silenc detect function provid audio server inform call call parti suppli phoneserv allow messag deliv electron record messag heard remot telephon local workstat use interact graphic interfac 22 applic audio server import part softwar infrastructur speech research groupth voic mail applic run continu answer dozen telephon call per day 6 relat work 61 handbuilt server sever handcraft server use speechresearch group provid inform servic interact applic eg 13 26 sinc research environ contain divers machin architectur least common denomin approach network commun usual taken ascii string protocol use predefin commun port server written support either synchron asynchron call arrang sever drawback first commun portion server client evolv ad hoc unmain tainabl manner second access server procedur interfac requir translat command properli format string pars output string sent serverth serial deseri data stream code hand ascii telnet interfac found power enough requir server design speechresearch group tool describ paper support ascii interfac procedur interfac server provid highlevel abstract establish connect client server 62 remot procedur call messag pass remot procedur call system built date oper synchron manner 8 14 one process send call messag process block repli receivedin model one process activ given time masterslav relationship suffici mani kind distribut environ ideal construct interact applic multimod user interfac anrpc system often use instead asynchronousmessagepass ing procedur call primari control structur data transfer mechan program languag messag pass better suit rpc dialog system multipl convers parti resid differ host mail ing system inform sent regardless process right away 21 rpc stub gener compil help reduc develop time simplifi code debug lowlevel routin 25 rpc gener autom process serial deseri data pass remot procedur call often convert data machin independ format dispatch incom call appropri routin tool describ paper allow use rpc messag pass within procedur call framework provid sever data serial format 63 x window system x toolkit version 11 xwindow system use asynchronousmessag pass protocol howev request librari act like rpc systemand wait expectedrepli xwindowsystem intend complet independ oper system network transport program languag thu instead use rpc gener protocol defin perform portabl reason x toolkit provid comprehens event select dispatch mechan client applic 6 xt also allow applic regist addit devic applic specif timer handl main event loop unfortun extens captur voic note vu meter phone server audio server answer machin window server dtmf server recognit server figur 4 multipl server environ facil avail applic use toolkit window system user interfac requir graphic display micesom speech research group current work deal handheld speechonli interfac keyboard display use 3 23 earli work remot procedur call system suggest procedur call well understood programm thu easi adopt rpc paradigm preval xt mechan callbackbas program allow similar mechan use rang multimedia user interfac applic xt support commun windowrel data betweencli provid gener commun mechan client type server tool describ paper provid mani lowlevel commun event dispatch mechan provid x xt without requir presenc window system 64 previou audio server earli serialcontrol audio server develop speech research group 18 reli handbuilt client side librari support singl client remot procedur call compil use vox audio server 5 support synchronousrpc asynchronousmessag howev necessari explicitli declar data sent synchron asynchron vox support complex clientdefin construct server repres audio rout configur need client vox howev allow data exchang server client dec audio server 1 model close x window system server henc use protocol rather rpc gener ator server design also base vox audio server complex serversid construct howev mean share resourc dec server mix multipl soundswhen play simultan tool describ paper use rpc gener rapid develop rather handcraft code support protocol rpc specif implicitli defin whether call synchron asynchron sparcbas server directli support file also allow data buffer exchangedbetween server client 7 conclus new user interfac softwar engin paradigm emerg ubiqu networkbas servic tool describ paper provid flexibl rapid prototyp environ creat network server applic tool allow server built easili retain power familiar remot procedur call callbackstyl program use asynchronousmessag simpl specif file gener code synchron rpc asynchron messag procedur call gener though current limit simpl data type support sever commun mode includ telnet interfac allow direct interact use server futur direct softwar includ ad interpret server reduc traffic client server elimin queu mechan also consider port system use appl event macintosh oper system recent suggest 19 rpc evolv mainstream mode commun clientserv model key compon distribut applic distribut oper system tool describ paper provid differ perspect consid design futur rpc system particular use asynchron messag multimedia applic system manag tempor media 27 simpl power tool allow applic easili incorpor new media new interact style facil promot develop new applic user interfac techniqu especi involv tempor media speech audio video acknowledg chri schmandt particip earli design discuss sm bsm architectur ralph swick provid inform x xt intern chri schmandt lisa stifelman wayn yamamoto review earlier draft paper jordan slott assist develop audio server work sponsor sun microsystem appl comput r integr audio telephoni distribut workstat environ design audio server toolkit support speech user interfac navig speechonli hyperm dia voic audio server multimedia workstat vox audio server workstat audio windowbas graphic similar dif ferenc implement remot procedur call person commun internetwork tcpip ubiquit audio captur spontan collabor speech interfac workstat window manag activ server run cant hide remot control embedd command languag telnet protocol specif x window system speech research group softwar commun mechan procedur call versu messag anoth voic mail system voicenot applic voic control handheld comput sun microsystem inc sun microsystem inc person commun symmetr asynchron protocol support workstat integr teleservic tr x window system hyperspeech internetwork tcpip 2nd ed vol clientserv comput ubiquit audio implement remot procedur call ctr scott flinn coordin heterogen timebas media independ applic proceed third acm intern confer multimedia p435444 novemb 0509 1995 san francisco california unit state barri aron speechskimm system interact skim record speech acm transact computerhuman interact tochi v4 n1 p338 march 1997 debbi hindu chri schmandt chri horner captur structur repres ubiquit audio acm transact inform system toi v11 n4 p376400 oct 1993 barri aron speechskimm interact skim record speech proceed 6th annual acm symposium user interfac softwar technolog p187196 decemb 1993 atlanta georgia unit state