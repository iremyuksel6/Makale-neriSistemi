approxim algorithm feedback vertex set problem applic constraint satisfact bayesian infer feedback vertex set undirect graph subset vertic intersect vertex set cycl graph given undirect graph g n vertic weight vertic polynomialtim algorithm provid approxim problem find feedback vertex set g smallest weight weight vertic g equal perform ratio attain algorithm 42n improv previou algorithm achiev approxim factor osqrtlog n case gener vertex weight perform ratio becom min2delta2 4 log2 n delta denot maximum degre g special case planar graph ratio reduc 10 interest special case weight graph perform ratio 42n achiev one prescrib subset vertic socal blackout vertic allow particip feedback vertex setit shown algorithm improv search perform constraint satisfact problem applic area bayesian infer graph blackout vertic also present b introduct e undirect graph let weight function vertic g cycl g path whose two termin vertic coincid feedback vertex set g subset vertic f v g cycl g pass least one vertex f word feedback vertex set f set vertic g remov f g along edg incid f forest obtain minimum feedback vertex set weight graph g w feedback vertex set g minimum weight weight minimum feedback vertex set denot g w weight feedback vertex set wfv problem defin find minimum feedback vertex set given weight graph g w special case w constant function 1 call unweight feedback vertex set ufv problem given graph g integ k problem decid whether g 1 k known npcomplet gj79 pp 191192 henc natur look effici approxim algorithm feedback vertex set problem particularli view recent applic algorithm artifici intellig show sequel suppos algorithm find feedback vertex set fa given undirect weight graph g w denot sum weight vertic fa wfa perform ratio g w defin ra g g perform ratio r n w w supremum ra g w graph g vertic weight function w w constant function 1 call r n 1 unweight perform ratio final perform ratio r n supremum r n w weight function w defin graph n vertic approxim algorithm ufv problem achiev unweight perform ratio 2 log 2 n essenti contain lemma due erdo posa ep62 result improv monien schulz ms81 achiev perform ratio log n section 2 provid approxim algorithm ufv problem achiev unweight perform ratio 4 gamma 2n algorithm draw upon theorem simonovit si67 analysi use result voss vo68 actual consid gener ufv problem prescrib subset vertic call blackout vertic allow particip feedback vertex set problem subcas wfv problem wherein allow vertex unit weight blackout vertex infinit weight interest graph blackout vertic motiv loop cutset problem applic updat problem bayesian infer explor section 4 section 3 present two algorithm wfv problem first devis primaldu algorithm base formul wfv problem instanc set cover problem algorithm perform ratio 10 weight planar graph 4 log 2 n gener weight graph ratio achiev extend erdo posa lemma weight graph second algorithm present section 3 achiev perform ratio weight graph deltag maximum degre g result interest low degre graph notabl applic approxim algorithm ufv problem artifici intellig due dechter pearl follow dp87 de90 given set valu finit domain also everi given constraint subset r ij theta j defin allow pair valu taken pair variabl task find assign variabl constraint r ij satisfi instanc problem associ undirect graph g whose vertex set set variabl constraint r ij strictli contain theta j ie r ij edg g connect x x j result graph g call constraint network said repres constraint satisfact problem common method solv constraint satisfact problem backtrack repeatedli assign valu variabl predetermin order backtrack whenev reach dead end approach improv follow first find feedback vertex set constraint network arrang variabl variabl feedback vertex set preced variabl appli backtrack procedur valu variabl feedback vertex set determin backtrack procedur algorithm switch polynomialtim procedur solvetre solv constraint satisfact problem remain forest solvetre succe solut found otherwis anoth backtrack phase occur complex modifi backtrack algorithm grow exponenti size feedback vertex set feedback vertex set contain k variabl domain size 2 procedur solvetre might invok 2 k time procedur solvetre run polynomialtim develop dechter pearl also prove optim tree algorithm dp88 consequ approxim algorithm find small feedback vertex set reduc complex solv constraint satisfact problem modifi backtrack algorithm furthermor domain size variabl vari solvetre call number time bound product domains variabl whose correspond vertic particip feedback vertex set take logarithm domain size weight vertex solv wfv problem weight optim complex modifi backtrack algorithm case domain size allow vari 2 unweight feedback vertex set problem best approxim algorithm prior work ufv problem attain perform ratio log n ms81 use result si67 vo68 order obtain approxim algorithm ufv problem attain perform fact actual consid slight gener ufv problem mark vertex graph either allow vertex blackout vertex graph feedback vertex set contain blackout vertic denot set allow vertic g ag set blackout vertic bg note problem reduc ufv problem feedback vertex set found graph g blackout vertic everi cycl g contain least one allow vertex graph g properti call valid graph motiv deal modifi problem clarifi section 4 use algorithm develop herein reduc comput complex bayesian infer throughout section g denot valid graph nonempti set vertic v g partit nonempti set ag allow vertic possibl empti set bg blackout vertic set edg eg possibl parallel edg self loop use g shorthand notat g w w assign unit weight allow vertex infinit weight blackout vertex neighbor v vertex connect v edg eg degre delta g v v g number edg incid v g selfloop vertex v contribut 2 degre v degre g denot deltag largest among degre vertic g vertex g degre 1 call endpoint vertex degre 2 call linkpoint vertex higher degre call branchpoint graph g call rich everi vertex v g branchpoint notat delta g stand largest among degre vertic ag degre vertex ag take account incid edg includ lead neighbor bg rich valid graph delta g 3 two cycl valid graph g independ vertex set share blackout vertic note size feedback vertex set g bound largest number pairwis independ cycl found g cycl gamma g call simpl visit everi vertex v g clearli set f feedback vertex set g intersect everi simpl cycl g graph call singleton contain one vertex singleton call selfloop contain least one self loop singleton g selfloop g otherwis graph g connect everi two vertic connect path g everi graph g uniqu decompos isol connect compon similarli everi feedback vertex set f g partit feedback vertex set f feedback vertex set g henc 23subgraph valid graph g subgraph h g degre h everi vertex ag either 2 3 degre vertex belong bg h restrict 23subgraph exist valid graph forest maxim 23subgraph g 23subgraph g subgraph 23subgraph g maxim 23subgraph easili found appli depthfirstsearch df g linkpoint v 23subgraph h call critic linkpoint v allow vertex cycl gamma g fvg refer cycl gamma g wit cycl v note assum wit cycl simpl verifi whether linkpoint v h critic linkpoint easi remov set vertic g incid edg appli breadthfirstsearch bf check whether cycl v remain graph cycl valid graph g branchpointfre pass allow branchpoint branchpointfre cycl pass allow linkpoint blackout vertic g rest section devot show follow algorithm correctli output vertex feedback set achiev unweight perform ratio less 4 algorithm subg23 input valid graph g output feedback vertex set f g g forest f els begin use df find maxim 23subgraph h g use bf find set x critic linkpoint h let set allow branchpoint h find set w cover branchpointfre cycl h cover x end note isol cycl h w consist one vertex cycl elabor set w comput bg 6 let h 0 graph obtain h remov set x along incid edg let h b subgraph induc allow linkpoint blackout vertic h 0 everi isol cycl h b arbitrarili choos allow linkpoint cycl w next replac maxim respect contain chain allow linkpoint h b edg result graph h b assign unit cost edg correspond chain allow linkpoint zero cost edg comput minimumcost span forest h b add w one linkpoint chain allow linkpoint h b correspond edg h straightforward verifi complex subg23 linear jegj follow two lemma gener claim use proof theorem 1 si67 use prove subg23 output feedback vertex set valid graph g h maxim 23subgraph valid graph g let gamma simpl cycl g one follow hold gamma wit cycl critic linkpoint h allow branchpoint h c gamma cycl h consist blackout vertic allow linkpoint h proof let gamma simpl cycl g assum contrari neither ac hold impli particular gamma entir contain h distinguish two case 1 gamma intersect h 2 gamma intersect h blackout vertic allow linkpoint h case 1 case could join gamma h obtain 23subgraph h g contain h proper subgraph howev contradict maxim h case 2 gamma intersect h blackout vertic case 1 join gamma h contradict maxim h suppos gamma intersect h allow linkpoint h note case gamma must intersect h least two distinct allow linkpoint h els gamma would wit cycl intersect critic linkpoint sinc gamma contain h assumpt find two allow linkpoint v 1 v 2 v gamma v h connect path p along gamma p entir contain h join p h obtain 23subgraph g contain h proper subgraph thu contradict maxim h h maxim 23subgraph g let gamma 1 gamma 2 wit cycl g two distinct critic linkpoint h independ cycl name proof let v 1 v 2 critic linkpoint associ respect assum contrari v contain allow vertex path p g run along part cycl gamma 1 gamma 2 start pass u end v 2 wit cycl g sinc v 1 v 2 distinct critic linkpoint vertex u possibl coincid either therefor path p entir contain h join p h obtain 23subgraph g contain h proper subgraph thu reach contradict theorem 3 everi valid graph g set f comput subg23 feedback vertex set g proof let gamma simpl cycl g follow three case lemma 1 show gamma wit cycl critic linkpoint h construct critic linkpoint h f allow branchpoint h construct allow branchpoint h f c gamma cycl h consist blackout vertic allow linkpoint contain critic linkpoint subg23 select linkpoint feedback vertex set f otherwis cycl gamma must entir contain graph h b use creat w show w cover cycl h b assum contrari let gamma cycl h b cover w recal construct h b chain allow linkpoint gamma replac edg unit cost let result cycl h b sinc w cover gamma unitcost edg gamma necessarili chosen minimumcost span forest hand sinc contain cycl must least one zerocost edg gamma contain henc delet one unitcost edg gamma insert instead particular zerocost edg gamma obtain new span forest 0 b howev cost 0 smaller contradict assumpt minimumcost span forest reduct graph g 0 undirect graph g graph obtain g sequenc follow transform ffl delet endpoint incid edg ffl connect two neighbor linkpoint v selfloop singleton new edg remov v graph two incid edg reduct graph valid graph g necessarili valid sinc reduct process may gener cycl consist blackout vertic interest reduct sequenc transform yield valid graph lemma 4 let g 0 reduct graph g g 0 valid proof let g sequenc reduct graph h obtain remov one linkpoint possibl endpoint h igamma1 sinc g 0 valid h valid graph well let v linkpoint remov h obtain h i1 first show g 0 g suppos f feedback vertex set h i1 cycl h pass v reduct gamma obtain replac linkpoint v gamma edg connect neighbor v yield cycl h i1 vertex set gamma intersect set f henc f also feedback vertex set h impli h show g 0 g suppos f minim feedback vertex set h f contain v f also feedback vertex set h i1 otherwis write claim set f 0 fail cover one cycl h i1 fail would two distinct cycl gamma 1 gamma 2 h contain v case cycl h induc v would cover f thu contradict fact f feedback vertex set h follow minim f set f 0 fail cover exactli one cycl h i1 cycl contain least one allow vertex u h i1 valid graph therefor set f 0 fug feedback vertex set h i1 henc h reduct graph g graph g minim g valid graph proper reduct graph g 0 g valid lemma 5 g minim reduct graph g g contain blackout linkpoint everi feedback vertex set g contain allow linkpoint g proof recal g valid graph g contain blackout linkpoint remov creat valid reduct graph contradict minim g assum f feedback vertex set g v allow linkpoint f remov v yield graph valid v must includ f remov v yield valid graph g minim next lemma need order establish perform ratio subg23 variant lemma 4 vo68 lemma 6 let g valid graph blackout linkpoint vertex degre less 2 everi feedback vertex set f g contain linkpoint g proof suppos g case jv gj 3jv therefor lemma hold trivial assum jf j jv gj denot set edg eg whose termin vertic vertic f denot set edg eg whose termin vertic vertic x also let e fx denot set edg g connect vertic f vertic x clearli e f ex e fx form partit eg graph obtain delet f g nonempti forest x therefor je howev vertex x branchpoint g linkpoint assum f vertic degre less 2 therefor ie hand combin last two inequ obtain main claim section follow theorem 7 unweight perform ratio subg23 4 gamma 2jv gj proof let f feedback vertex set comput subg23 valid graph g forest show jf j 4 2 theorem follow immedi inequ let h x w subg23 suppos cycl g pass allow vertex v g vertex v critic linkpoint h v linkpoint h h cycl otherwis one readili verifi h must contain exactli two branchpoint either case jf j 2 assum g 2 everi v 2 x let gamma wit cycl v g lemma 2 cycl gamma pairwis independ therefor minimum number vertic need cover cycl jxj let fgamma j g set branchpointfre cycl h contain critic linkpoint h note cycl gamma j independ wit cycl gamma claim smallest set w 0 vertic v h intersect vertex set gamma j must size jw j see note w 0 contain allow linkpoint h remov h b edg correspond linkpoint belong w 0 clearli end forest construct minimum number edg allow linkpoint need remov h b make forest jw j recal everi cycl gamma j independ wit cycl gamma set w 0 possibl intersect cycl gamma henc order cover cycl fgamma g need least jxj vertic therefor hand recal jf distinguish follow two case case 1 case 2 feedback vertex set g size g let w 0 smallest subset f intersect vertex set gamma clearli w 0 consist allow linkpoint h show earlier proof jw h 1 subgraph h obtain remov critic linkpoint h linkpoint w 0 delet linkpoint also remov recurs result endpoint h obtain h 1 thu delet linkpoint h decreas number branchpoint 2 henc number branchpoint left h 1 least furthermor graph h 1 contain endpoint 1 minim reduct graph h 1 let h 2 valid graph obtain remov singleton compon h 1 sinc h 1 contain endpoint number branchpoint h 1 preserv h 1 h 2 therefor graph h 2 contain least jy branchpoint hand sinc h 1 minim reduct due lemma 5 blackout linkpoint h 1 everi feedback vertex set h 1 contain allow linkpoint h 1 furthermor graph h contain endpoint follow appli lemma 6 h 2 feedback vertex set h 2 thu obtain equal due lemma 4 therefor recal w 0 chosen subset smallest feedback vertex set f g let x 0 smallest subset f cover wit cycl fgamma g let z 0 smallest subset f cover cycl h 1 sinc h 1 contain critic linkpoint h wit cycl gamma independ cycl h 1 also follow previou discuss addit construct h 1 thu follow combin 1 obtain desir result weight feedback vertex set section consid approxim wfv problem describ section 1 given undirect graph g weight function w vertic find feedback vertex set g w minimum weight previou section assum g may contain parallel edg selfloop weight reduct graph g 0 undirect graph g graph obtain g sequenc follow transform ffl delet endpoint incid edg ffl let u v two adjac vertic wu wv v linkpoint connect u neighbor v remov v graph two incid edg follow lemma easili verifi see eg proof lemma 4 weight reduct graph g w g weight reduct graph g graph g minim weight reduct graph g 0 g equal g graph call branchi endpoint addit set linkpoint induc independ set ie linkpoint either isol selfloop singleton connect two branchpoint clearli minim weight reduct graph must branchi note complex transform graph branchi graph linear jegj readi present algorithm find approxim minimumweight feedback vertex set given weight graph section 31 give algorithm achiev perform ratio 4 log 2 jv gj section 32 present algorithm achiev perform ratio 31 primaldu algorithm basi first approxim algorithm next lemma gener lemma due erdo posa ep62 lemma 3 lemma obtain erdo posa estim smallest number edg graph contain given number pairwis independ cycl later ep64 provid bound valu g 1 term largest number pairwis independ cycl g tighter bound g 1 obtain simonovit si67 voss vo68 lemma 9 shortest cycl branchi graph g least two vertic length proof let smallest even integ 2 delta 2 t2 jv gj appli bf g depth start vertex v claim search hit vertex twice exist cycl length 2t g inde induc bf tree would contain least 2 delta 2 t2 distinct vertic g contradict iter propos algorithm first find minim weight reduct graph find cycl gamma smallest number vertic minim weight reduct graph algorithm set ffi minimum among weight vertic v gamma valu ffi subtract turn weight vertex v gamma vertic whose weight becom zero ad feedback vertex set delet graph iter repeat graph exhaust algorithm miniwcycl input g w output feedback vertex set f g w h forest begin find minim weight reduct graph find cycl gamma 0 h 0 smallest number vertic remov x incid edg h end find shortest cycl done run bf vertex cycl found select smallest effici approach find shortest cycl describ ir78 hard see miniwcycl comput feedback vertex set g analyz algorithm employ techniqu similar use ho82 ho83 khvy94 note algorithm also analyz use local ratio theorem baryehuda even baev85 theorem 10 perform ratio algorithm miniwcycl 4 log 2 jv gj proof assum jv gj 1 given feedback vertex set f g w let indic vector f name x denot c set cycl g problem find minimumweight feedback vertex set g w formul term x integ program problem follow minim rang nonneg integ vector 2 let c v denot set cycl pass vertex v g consid follow integ program pack problem maxim rang nonneg integ vector gamma2c clearli linear relax 3 dual linear relax 2 dual variabl weight reduct graph comput iter algorithm miniwcycl cycl follow vertic v gamma 0 belong g otherwis unfold transform step perform obtain h 0 h backward order ie h 0 back h step add gamma 0 chain linkpoint connect vertic delet process finish cycl gamma 0 h 0 transform cycl gamma g show miniwcycl interpret primaldu algorithm first show comput dual feasibl solut 3 certain maxim prop erti initi dual feasibl solut one dual variabl gamma zero cycl chosen iter miniwcycl let gamma associ cycl g may view comput iter miniwcycl set valu dual variabl gamma weight ffi lightest vertex v gamma 0 updat weight wh 0 v everi precis slack dual constraint correspond v clear choic ffi valu dual variabl gamma end iter miniwcycl satisfi dual constraint 4 correspond vertic thu follow dual constraint hold vertic let v vertex remov h obtain h 0 iter miniwcycl remain show dual constraint 4 correspond vertex hold iter j algorithm everi j show backward induct j previou discuss follow constraint correspond vertic exist last iter hold suppos dual constraint correspond vertic v h 0 iter j violat show dual constraint correspond vertic v iter also violat let c chain linkpoint h iter j let v 1 v 2 two branchpoint adjac c let u vertex minimum weight among v 1 v 2 vertic c note weight reduct procedur delet vertic c except possibl one repres depend whether u c one adjac branchpoint observ set cycl pass linkpoint c linkpoint c contain set cycl pass v 1 also contain set cycl pass v 2 impli dual constraint correspond u violat dual constraint correspond vertex c also violat algorithm essenti construct primal solut x dual solut select feedback vertex set vertic correspond dual constraint tight ii iter constraint first becam tight correspond vertex belong graph state earlier construct yield feasibl solut let x denot optim primal dual fraction solut respect follow dualiti theorem wv wv gamma2c gamma2c henc prove theorem suffic bound ratio lh rh 5 first note gamma 6 0 cycl gamma g associ cycl gamma 0 chosen iter miniwcycl construct x clear dual variabl gamma cycl gamma contribut valu v vertic henc gamma2c iter graph h 0 branchi graph therefor lemma 9 jv gamma 0 j 4 log 2 jv gj henc theorem prove proposit 11 planar graph weight perform ratio miniwcycl 10 proof first notic weight reduct process preserv planar fore iter algorithm miniwcycl remain planar graph claim everi rich planar graph g must contain face length 5 assum contrari sum length face get 2jej 6jzj z denot set face g euler formula henc howev sinc degre vertex least 3 get contradict furthermor impli branchi planar graph must contain cycl length 10 32 lowdegre graph algorithm present section base follow variant lemma 6 lemma 12 let g branchi graph everi feedback vertex set f g proof let f feedback vertex set g assum without loss gener f contain branchpoint sinc assumpt decreas jf j let g 0 minim unweight reduct graph g ie g 0 contain branchpoint isol selfloop singleton clearli f also feedback vertex set g 0 thu g 0 f satisfi condit lemma 6 delta delta yield sinc g 0 branchi graph number linkpoint g deltag 0 henc present weight greedi algorithm find feedback vertex set graph g algorithm wgreedi input g w output feedback vertex set f g w h forest begin find minim weight reduct graph h 0 h wh f remov u h 0 incid edg end subset v let ws denot sum weight vertic prove follow theorem theorem 13 let g branchi graph denot f feedback vertex set comput algorithm wgreedi f minimumweight feedback vertex set g proof assum number iter loop execut algorithm wgreedi p defin follow weight function w g weight function w defin 1 p follow subset let w denot sum weight vertic weight function w clearli suppos one weight reduct step algorithm wgreedi chain c equal weight linkpoint reduc singl vertex say v either belong c one two branchpoint adjac c suppos v ad f f also contain vertex chain c without loss gener assum vertex replac v let obvious 1 claim p assum case respect order vertic enter f algorithm wgreedi let u first vertex u 2 f remov graph weight reduct step mean u time remov linkpoint adjac vertex u 0 smaller weight exchang u u 0 f obtain feedback vertex set smaller weight contradict optim f henc vertex therefor notic graph h 0 weight function w assign weight vertic henc lemma 12 w theorem follow follow lemma 8 perform ratio algorithm wgreedi g w 2delta 2 g graph g 4 loop cutset problem applic section 41 consid variant wfv problem direct graph section 42 describ applic bayesian infer 41 loop cutset problem underli graph direct graph undirect graph form ignor direct edg loop subgraph whose underli graph cycl vertex v sink respect loop gamma two edg adjac v direct v everi loop must contain least one vertex sink respect loop vertex sink respect loop gamma call allow vertex respect gamma loop cutset direct graph set vertic contain least one allow vertex respect loop problem find minimumweight loop cutset given direct graph weight function denot w sum weight vertic loop cutset greedi approach loop cutset problem suggest suc90 st90 method shown perform ratio bad omegagamma n4 certain planar graph st90 applic approxim algorithm loop cutset problem area bayesian infer describ later section approach take reduc weight loop cutset problem weight feedback vertex set problem solv previou section given weight direct graph w defin split weight undirect graph w follow split vertex v two vertic v v incom edg v becom undirect incid edg v outgo edg v becom undirect incid edg v addit connect v v undirect edg set w v w v wv set vertic x defin x set obtain replac vertex v v x respect vertex v vertic origin algorithm easili state algorithm loopcutset input w output loop cutset f w construct appli miniwcycl w obtain feedback vertex set x f x note loop associ uniqu cycl viceversa straightforward manner let gamma denot loop imag cycl gamma 1 k denot cycl imag loop k clear map next lemma show algorithm loopcutset output loop cutset w lemma 14 let w direct weight graph w split graph f feedback vertex set w finit weight f loop cutset w w u loop cutset set u obtain u replac vertex v 2 u vertex v feedback vertex set proof prove proof ii similar let gamma loop prove lemma show allow vertex respect gamma belong f let 1 gamma uniqu cycl imag gamma sinc f cycl cover finit weight must vertex v 2 f 1 gamma clear vertex v 2 gamma v origin allow vertex respect gamma need complet proof finit must w vertex f follow lemma 14 addit due theorem 10 appli graph sinc number vertic twice number vertic get follow bound perform ratio algorithm loopcutset theorem 15 perform ratio loopcutset 4 log 2 2jv dj show unweight loop cutset problem achiev perform ratio better 4 case vertex v 2 weight v 2 one unit weight v 2 1 fall within framework consid section 2 sinc vertic infinit weight treat blackout vertic therefor appli subg23 loopcutset algorithm instead appli miniwcycl obtain follow improv perform ratio theorem use subg23 unweight perform ratio loopcutset 4 gamma 2jv dj proof equal due lemma 14 inequ due theorem 7 sinc dj claim prove 42 applic conclud section applic approxim algorithm loop cutset problem let p distribut u draw valu finit set call domain u direct graph direct cycl call bayesian network p 11 map fu vertic associ vertex p written follow sourc vertic incom edg vertex worth note bayesian network use knowledg represent scheme mani artifici intellig task bayesian network allow wide spectrum independ assumpt consid model builder practic balanc establish comput need adequaci conclus complet explor subject see pe88 suppos variabl fv among fu assign specif valu respect updat problem comput probabl principl comput straightforward bayesian network defin joint probabl distribut condit probabl comput divid appropri sum howev comput ineffici time space unless use condit independ assumpt defin eq 6 shall see next approxim algorithm loop cutset problem reduc comput need solv updat problem trail bayesian network subgraph whose underli graph simpl path vertex b call sink respect trail exist two consecut edg b b c trail activ set vertic z 1 everi sink respect either z descend z 2 everi vertex along outsid z otherwis trail said block z verma pearl vepe88 prove bayesian network p trail vertex fr vertex fs block g correspond set variabl fu r 1 independ condit fu 1 g furthermor geiger pearl gp90 prove convers theorem result present extend gvp90 use close relationship block trail condit independ kim pearl kip83 develop algorithm updatetre solv updat problem bayesian network everi two vertic connect one trail updatetre view vertex processor repeatedli send messag neighbor vertic equilibrium reach vertex contain condit probabl distribut p comput reach equilibrium regardless order execut time proport length longest trail network pearl pe86 solv updat problem bayesian network follow first set vertic select two vertic network connect one activ trail z z subset vertic updatetre appli combin valu assign variabl correspond final result combin algorithm call method condit complex grow exponenti size note accord definit activ trail set pearl algorithm loop cutset bayesian network paper develop approxim algorithm find domain size variabl vari updatetre call number time bound product domain size variabl whose correspond vertic particip loop cutset take logarithm domain size weight vertex solv weight loop cutset problem weight optim pearl updat algorithm case domain size allow vari use relat feedback vertex set problem vertex cover problem order establish lower bound perform ratio attain feedback vertex set problem vertex cover undirect graph subset vertex set intersect edg graph vertex cover problem find minimum weight vertex cover given graph simpl polynomi reduct vertex cover problem feedback vertex set problem given graph g extend g graph h ad vertex v e edg e 2 eg connect v e vertic g e incid g easi verifi alway exist minimum feedback vertex set h whose vertic v g feedback vertex set also minimum vertex cover g essenc reduct replac edg g cycl h thu transform vertex cover g feedback vertex set h due reduct follow perform ratio obtain feedback vertex set problem better one obtain vertex cover problem latter problem attract lot attent year far resist approxim algorithm achiev gener graph constant perform ratio less 2 note reduct retain planar howev planar graph baker bak94 provid polynomi approxim scheme pa vertex cover problem ufv problem exampl show 4 tightest constant perform ratio algorithm subg23 anoth consequ reduct lower bound unweight perform ratio follow greedi algorithm greedycyc feedback vertex set problem iter greedycyc remov vertex maxim degre graph add feedback vertex set remov endpoint graph similar greedi algorithm vertex cover problem present jo74 lo75 latter algorithm shown unweight perform ratio better omegagammahan jv gj jo74 due reduct cycl cover problem lower bound hold also greedycyc demonstr graph jo74 tight upper bound worstcas perform ratio greedycyc unknown final one notic follow heurist may improv perform ratio algorithm exampl iter miniwcycl choos place cover zeroweight vertic found smallest cycl choic might rather poor especi mani weight equal may use case perturb weight vertic run algorithm similarli algorithm subg 23 point take blindli branchpoint h appropri heurist may pick branchpoint one one decreas order residu degre furthermor subgraph h construct contain mani high degre vertic possibl remark preliminari version paper present bagnr94 conjectur constant perform ratio attain polynomi time algorithm wfv problem recent verifi beg94 babf94 perform ratio 2 obtain acknowledg would like thank david johnson bring ep62 attent samir khuller help discuss r constant ratio approxim weight feedback vertex set problem undirect graph approxim algorithm npcomplet problem planar graph localratio theorem approxim weight vertex cover problem approxim algorithm feedback vertex set problem applic constraint satisfact bayesian infer approxim algorithm loop cutset prob lem cycl cutset method improv search perform ai enhanc scheme constraint process backjump maxim number disjoint circuit graph independ circuit contain graph logic causal model independ bayesian network approxim algorithm set cover vertex cover problem effici bound stabl set find minimum circuit graph approxim algorithm combinatori problem primaldu parallel approxim techniqu appli weight set vertex cover comput model combin causal diagnost reason infer system ratio optim integr fraction cover four approxim algorithm feedback vertex set problem probabilist reason intellig system network plausibl infer enc new proof gener theorem erdo posa graph without k heurist find loop cutset multipli connect belief network cooper g semant express properti graph contain k independ circuit tr ctr paola festa pano pardalo mauricio g c resend algorithm 815 fortran subroutin comput approxim solut feedback set problem use grasp acm transact mathemat softwar tom v27 n4 p456464 decemb 2001 rudolf berghamm alexand fronk exact comput minimum feedback vertex set relat algebra fundamenta informatica v70 n4 p301316 april 2006 rudolf berghamm alexand fronk exact comput minimum feedback vertex set relat algebra fundamenta informatica v70 n4 p301316 decemb 2006 ioanni caragianni christo kaklamani panagioti kanellopoulo new bound size minimum feedback vertex set mesh butterfli inform process letter v83 n5 p275280 15 septemb 2002 mawshang chang chinhua lin chuanmin lee new upper bound feedback vertex number butterfli inform process letter v90 n6 p279285 camil demetrescu iren finocchi combinatori algorithm feedback problem direct graph inform process letter v86 n3 p129136 16 may rastislav krlovi peter ruika minimum feedback vertex set shufflebas interconnect network inform process letter v86 n4 p191196 31 may jiong guo jen gramm falk hffner rolf niedermei sebastian wernick compressionbas fixedparamet algorithm feedback vertex set edg bipart journal comput system scienc v72 n8 p13861396 decemb 2006 venkatesh raman saket saurabh c r subramanian faster fix paramet tractabl algorithm find feedback vertex set acm transact algorithm talg v2 n3 p403415 juli 2006 reuven baryehuda keren bendel ari freund dror rawitz local ratio unifi framework approxim algorithm memoriam shimon even 19352004 acm comput survey csur v36 n4 p422463 decemb 2004