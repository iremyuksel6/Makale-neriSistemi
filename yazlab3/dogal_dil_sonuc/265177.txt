parallel static schedul algorithm abstractmost static algorithm schedul parallel program repres macro dataflow graph sequenti paper discuss essenti issu pertain parallel static schedul present two effici parallel schedul algorithm propos algorithm implement intel paragon machin perform evalu algorithm produc highqual schedul much faster exist sequenti parallel algorithm b introduct static schedul util knowledg problem characterist reach global optim near optim solut although mani peopl conduct research variou manner share similar underli idea take direct acycl graph repres parallel program input schedul onto processor target machin minim complet time npcomplet problem gener form 7 therefor mani huerist algorithm produc satisfactori perform propos 11 13 5 14 12 4 9 although schedul algorithm appli parallel program algorithm sequenti execut singl processor system sequenti algorithm slow scalabl static schedul restrict sinc larg memori space requir store task graph natur solut problem use multiprocessor schedul task multiprocessor fact without parallel schedul algorithm run parallel comput scalabl schedul feasibl parallel schedul algorithm follow featur ffl high qualiti abl minim complet time parallel program ffl low complex abl minim time schedul parallel program two requir contradict gener usual highqual schedul algorithm high complex modifi criticalpath mcp algorithm introduc 13 offer good qualiti rel low complex paper propos two parallel version mcp describ mcp algorithm next section discuss differ approach parallel schedul well exist parallel algorithm section 3 section 4 5 present vpmcp hpmcp algorithm respect comparison two algorithm present section 6 2 mcp algorithm macro dataflow graph direct acycl graph start point end point 13 macro dataflow graph consist set node fn 1 connect set edg denot en node repres task weight node execut time task edg repres messag transfer one node anoth node weight edg equal transmiss time messag two node schedul process element pe weight edg connect becom zero defin schedul algorithm succinctli first defin aslateasposs time node alap time defin critic length critic path leveln length longest path node n end point includ node n 6 fact highqual schedul algorithm less reli alap time level modifi criticalpath mcp algorithm design schedul macro dataflow graph bound number pe mcp algorithm 1 calcul alap time node 2 sort node list increas alap order tie broken use smallest alap time successor node successor successor node 3 schedul first node list pe allow earliest start time consid idl time slot delet node list repeat step 3 list empti 2 step 3 determin start time idl time slot creat commun delay also consid node insert first feasibl idl time slot method call insert algorithm mcp algorithm compar four wellknown schedul algorithm assumpt ish 10 etf 8 dl 12 last 3 shown mcp perform best 2 complex mcp algorithm 2 logn n number node graph second step tie broken randomli simplifi version mcp schedul qualiti vari littl complex reduc 2 follow use simplifi version mcp 3 approach parallel schedul algorithm basic idea behind parallel schedul algorithm instead identifi one node schedul time identifi set node schedul parallel follow pe execut parallel schedul algorithm call physic pe ppe order distinguish target pe tpe macro dataflow graph schedul qualiti speed parallel schedul depend data partit two major data domain schedul algorithm sourc domain target domain sourc domain macrodataflow graph target domain schedul target processor consid two approach parallel schedul first one call vertic scheme ppe assign set graph node use space domain partit also maintain schedul one tpe second one call horizont scheme ppe assign set graph node use time domain partit result schedul also partit ppe maintain portion schedul everi tpe ppe schedul portion graph ppe exchang inform determin final schedul vertic horizont scheme illustr figur 1 task graph map timespac domain assum three ppe schedul graph six tpe thu vertic scheme ppe hold schedul two tpe horizont scheme ppe hold portion schedul six tpe vertic scheme horizont scheme outlin figur 2 3 respect vertic scheme ppe exchang inform schedul graph node tpe frequent inform exchang result larg commun overhead horizont partit ppe schedul graph partit without exchang inform anoth ppe last step ppe exchang inform subschedul concaten obtain final schedul problem method start time partit first one unknown time need estim schedul qualiti depend estim almost work design parallel algorithm schedul fact algorithm vertic scheme yet algorithm area horizont space time space time vertic scheme b horizont scheme p1target processor target processor physic processor physic processor task schedul task schedul task graph task graph figur 1 vertic horizont scheme 1 partit graph p equal size set use space domain partit 2 everi ppe cooper togeth gener schedul ppe maintain schedul one tpe figur 2 vertic scheme parallel schedul 1 partit graph p equal size set use time domain partit 2 ppe schedul graph partit gener subschedul 3 ppe exchang inform concaten subschedul figur 3 horizont scheme parallel schedul scheme parallel bsa pbsa algorithm 1 bsa algorithm take account link content commun rout strategi pe list construct breadthfirst order pe highest degre pivot pe algorithm construct schedul increment first inject node pivot pe tri improv start time node migrat adjac pe pivot pe migrat improv start time node node migrat anoth pe successor also move next pe pe list select new pivot pe process repeat pe pe list consid complex bsa algorithm op 2 en p number tpe n number node e number edg graph pbsa algorithm parallel bsa algorithm horizont scheme node graph sort topolog order partit p equal size block partit graph schedul target system independ pbsa algorithm resolv depend node partit calcul estim start time parent node belong anoth partit call remot parent node rpn time estim earliest possibl start time latest possibl start time partit schedul independ develop schedul concaten complex pbsa algorithm op 2 enp 2 p number ppe 4 vpmcp algorithm mcp list schedul algorithm list schedul node order list accord prioriti node front list alway schedul first schedul node depend node schedul node therefor basic sequenti algorithm heavi depend make parallel mcp difficult mcp node must schedul one one howev schedul node start time node differ tpe calcul simultan parallel exploit vertic scheme multipl node schedul simultan result schedul may one produc mcp schedul length vari gener longer produc sequenti mcp exploit parallel may lower schedul qualiti studi degre qualiti degrad increas parallel vertic scheme multipl node may select schedul time way parallel increas overhead reduc horizont scheme differ partit must schedul simultan parallel execut therefor result schedul sequenti one call vertic version parallel mcp vpmcp algorithm horizont version hpmcp algorithm vpmcp algorithm describ section hpmcp algorithm present next section describ vpmcp algorithm present simpl parallel version mcp algorithm version schedul one node time produc schedul sequenti mcp algorithm ppe maintain schedul one tpe therefor vertic scheme call algorithm vpmcp1 shown figur 4 node first sort alap time cyclicli divid p partit node place sort list assign ppe node schedul one one node broadcast ppe along parent inform includ schedul tpe number time start time node differ tpe calcul parallel node schedul tpe allow earliest start time consequ ppe node child newli schedul node correspond parent inform node updat 1 comput alap time node sort node list increas alap order tie broken randomli b divid node list cyclic partit equal size partit partit assign ppe 2 ppe first node list broadcast node along parent inform ppe b ppe obtain start time node tpe earliest start time obtain parallel reduct minimum c node schedul tpe allow earliest start time parent inform children schedul node updat delet node list repeat step list empti figur 4 vpmcp1 algorithm vpmcp1 algorithm parallel mcp algorithm directli produc exactli schedul mcp howev sinc time one node schedul parallel limit granular fine solv problem number node could schedul simultan increas granular reduc commun node schedul simultan may conflict conflict may result degrad schedul qualiti follow lemma state condit allow node schedul parallel without reduc schedul qualiti lemma 1 node schedul earliest start time without conflict former node schedul place would schedul sequenti mcp proof mcp schedul sequenc node obtain earliest start time former node list schedul set node schedul parallel node obtain earliest start time independ node may obtain earliest start time earlier one mcp schedul former node set schedul case must conflict one former node therefor node schedul place conflict former node obtain earliest start time schedul place would mcp schedul sequenc 2 lemma set node obtain earliest start time simultan schedul accordingli node conflict former node node rest node schedul obtain new earliest start time way one node schedul time howev mani node may earliest start time tpe therefor could mani conflict case one two node schedul time increas number node schedul parallel may allow conflict node schedul suboptim place therefor node found conflict former node schedul next nonconflict place strategi p node schedul time p number tpe use strategi vertic version parallel mcp call vpmcp algorithm detail algorithm shown figur 5 besid sort node list readi list construct sort alap time set node select readi list broadcast ppe start time node calcul independ start time made avail everi ppe anoth parallel concaten node may compet time slot tpe conflict resolv smallestalaptimefirst rule node get best time slot tri second best place schedul nonconflict place time calcul alap time sort oen log n parallel schedul step 2 p therefor complex vpmcp algorithm oen log nn 2 p n number node e number edg p number ppe number commun 2n vpmcp1 2np vpmcp p number tpe vpmcp algorithm compar vpmcp1 tabl workload test consist random graph variou size use random graph gener 1 three valu communicationcomputationratio ccr select 01 1 10 weight node edg gener randomli averag valu ccr correspond 01 1 10 set graph use subsequ experi section use set graph 2000 node graph schedul four tpe vertic scheme number ppe larger number tpe 1 comput alap time node sort node list increas alap order tie broken randomli b divid node list cyclic partit equal size partit partit assign ppe initi readi list consist node parent sort list increas alap order 2 first p node readi list broadcast ppe use parallel concaten oper along parent inform less p node readi list broadcast entir readi list b ppe obtain start time node tpe start time node made avail everi ppe parallel concaten c node schedul tpe allow earliest start time one node compet time slot tpe node smaller alap time get time slot node get time slot schedul time slot allow second earliest start time an parent inform updat children schedul node delet node readi list updat readi list ad node freed node repeat step readi list empti figur 5 vpmcp algorithm tabl comparison vertic strategi number schedul length run time second ccr ppe vpmcp1 vpmcp vpmcp1 vpmcp tpe must maintain singl ppe seen tabl vpmcp1 produc better schedul qualiti howev heavi commun result low speedup speedup vpmcp reduc run time still provid accept schedul qualiti schedul length 03 12 longer produc vpmcp1 5 hpmcp algorithm horizont scheme differ partit must schedul simultan parallel exe cution call horizont version parallel mcp hpmcp algorithm shown figur 6 1 comput alap time node sort node list increas alap order tie broken randomli b partit node list equal size block partit assign ppe 2 ppe appli mcp algorithm partit produc subschedul edg node rpn ignor 3 concaten pair adjac subschedul walk schedul determin actual start time node figur hpmcp algorithm hpmcp algorithm node first sort alap time therefor node list topolog order partit p equal size block assign p ppe way graph partit horizont graph partit ppe schedul partit produc subschedul subschedul concaten form final schedul three problem address schedul concaten inform estim concaten permuta tion postinsert inform estim major problem horizont scheme resolv depend par tition gener latter partit depend former partit schedul partit parallel ppe need schedul inform former partit sinc imposs obtain inform schedul former partit produc estim necessari although latter ppe know exact schedul former partit estim help node determin earliest start time latter partit pbsa algorithm 1 start time rpn remot parent node estim done calcul two paramet earliest possibl start time epst latest possibl start time lpst epst node largest sum comput time start point node exclud node lpst node sum comput time node schedul node exclud node estim start time est rpn defin ffepst equal 1 rpn critic path otherwis equal length longest path start point rpn end point divid length critic path given estim start time rpn still necessari estim tpe rpn schedul rpn critic path node assum schedul tpe highest level critic path node local partit otherwis tpe randomli pick one rpn schedul call estim pbsa estim estim necessarili accur better simpler estim use hpmcp hpmcp simpli ignor depend partit therefor entri node partit start time furthermor assum schedul former pe end time call estim hpmcp estim tabl ii comparison estim algorithm number schedul length run time second ccr ppe hpmcp est pbsa est hpmcp est pbsa est compar two approach estim section number node graph 2000 graph schedul four tpe comparison shown tabl ii column hpmcp est show perform hpmcp column pbsa est show perform hpmcp pbsa estim schedul length run time compar run time pbsa estim longer notic ppe produc longer schedul length show tradeoff schedul qualiti parallel hand superlinear speedup observ due graph partit schedul length produc pbsa estim alway longer produc hpmcp estim impli complex estim algorithm promis good schedul simpler algorithm may better howev say use simplest one futur still possibl find good estim improv perform simpl estim use hpmcp set baselin futur estim algorithm concaten permut ppe produc subschedul final schedul construct concaten subschedul accur inform former subschedul easi determin optim permut tpe adjac subschedul determin latter tpe concaten former tpe huerist necessari pbsa algorithm tpe earliest node concaten tpe former subschedul allow earliest execut tpe concaten tpe former subschedul breadthfirst order 1 hpmcp algorithm assum start time node within partit therefor algorithm appli simpli perform permut tpe hpmcp tpe latter subschedul concaten tpe former sub schedul altern huerist describ follow ppe find within subschedul tpe criticalpath node permut tpe tpe 0 permut mani critic path node possibl schedul tpe critic path length could reduc permut algorithm compar non permut algorithm tabl iii time spent permut step caus algorithm slower sinc extra time spent determin weather node critic path term schedul length permut algorithm make four test case better nonpermut algorithm two case wors permut algorithm improv perform much therefor permut perform hpmcp algorithm postinsert final walk entir concaten schedul determin actual start time node refin perform step horizont scheme latter ppe abl insert node former subschedul due lack inform lead tabl iii comparison permut algorithm number schedul length run time second ccr ppe permut permut permut permut perform loss partial correct concaten time insert node latter subschedul former subschedul improv postinsert algorithm shown tabl iii compar noninsert postinsert algorithm reduc schedul length eight test case increas four case overal postinsert algorithm improv schedul qualiti howev spend much time postinsert follow perform postinsert time calcul alap time sort oe n second step parallel schedul 2 p 2 third step spend oen 2 p 2 time postinsert oe time noninsert therefor complex hpmcp algorithm without postinsert oe number node e number edg graph p number tpe p number ppe 6 perform vpmcp hpmcp algorithm implement intel paragon present perform three measur schedul length run time speedup tabl iv comparison postinsert algorithm number schedul length run time second ccr ppe insert insert insert insert first perform vpmcp algorithm present tabl v vi graph 1000 2000 3000 4000 node schedul four tpe schedul length provid measur schedul qualiti result shown tabl v schedul length ratio schedul length produc vpmcp algorithm schedul length produc mcp algorithm ratio obtain run vpmcp algorithm 2 4 ppe paragon take ratio schedul length produc mcp run one ppe one see tabl almost effect graph size schedul qualiti case schedul length vpmcp 1 longer produc mcp run time speedup vpmcp algorithm shown tabl vi speedup defin sequenti execut time optim sequenti algorithm p parallel execut time run time vpmcp one ppe compar mcp run time one ppe mcp run time singl processor sequenti version without parallel overhead low speedup vpmcp caus larg number commun next experi studi vpmcp perform differ number tpe tabl vii viii show schedul length run time graph 4000 node 2 4 tabl v schedul length produc vpmcp ratio mcp graph size number node ccr number 1000 2000 3000 4000 ppe length ratio length ratio length ratio length ratio tabl vi run time second speedup vpmcp graph size number node ccr number 1000 2000 3000 4000 ppe time time time time 8 16 tpe differ schedul length vpmcp mcp within 1 case notic tabl number tpe increas schedul length decreas ratio increas slightli therefor schedul qualiti scale quit well higher speedup obtain ppe next studi perform hpmcp algorithm number tpe four tabl ix x tabl ix ratio obtain run hpmcp algorithm 2 4 8 16 ppe paragon take ratio schedul length produc mcp run one ppe deterior perform hpmcp due estim start time rpn concaten 48 test case shown tabl one case hpmcp perform 10 wors mcp 31 tabl vii schedul length ratio differ number tpe produc vpmcp number tpe ccr number 2 ppe length ratio length ratio length ratio length ratio tabl viii vpmcp run time second speedup differ number tpe number tpe ccr number 2 ppe time time time time within 1 16 1 10 interest two case hpmcp produc even better result mcp sinc mcp heurist algorithm possibl sometim parallel version could produc better result correspond sequenti one run time speedup hpmcp algorithm shown tabl x superlinear speedup case tabl hpmcp lower complex mcp complex mcp 2 complex hpmcp p ppe oen log nn 2 p 2 therefor speedup bound p 2 instead p speedup 16 ppe good expect graph size larg enough rel overhead larg tabl xi xii show hpmcp schedul length run time graph 4000 node 2 4 8 16 tpe speedup decreas number tpe caus increas depend tpe compar perform vpmcp hpmcp perform shown figur 7 8 graph 4000 node number tpe number ppe figur 7 show percentag schedul length produc mcp neg number indic schedul length shorter produc mcp 2 4 ppe hpmcp produc shorter schedul length howev ppe vpmcp produc better schedul qualiti produc hpmcp gener vpmcp provid stabl schedul qualiti figur 8 compar speedup vpmcp hpmcp algorithm hpmcp faster vpmcp higher speedup schedul node ppe execut horizont scheme major commun step necessari move node howev number ppe equal number tpe vertic scheme avoid commun step node resid ppe execut becom import schedul algorithm use runtim next compar two algorithm horizont scheme hpmcp pbsa pbsa algorithm take account link content commun rout strategi hpmcp consid factor therefor edg weight pbsa vari differ topolog wherea hpmcp constant comparison purpos implement simplifi version pbsa assum edg weight constant pbsa much slower hpmcp complex much higher complex pbsa op 2 enp 2 hpmcp oe 50 120 time faster pbsa set graph compar schedul length produc hpmcp pbsa result shown tabl xiii tabl schedul length produc sequenti mcp bsa algorithm run singl processor also compar tabl ix schedul length produc hpmcp ratio mcp graph size number node ccr number 1000 2000 3000 4000 ppe length ratio length ratio length ratio length ratio tabl x run time second speedup hpmcp graph size number node tabl xi schedul length ratio differ number tpe produc hpmcp number tpe ccr number 2 ppe length ratio length ratio length ratio length ratio tabl xii hpmcp run time second speedup differ number tpe number tpe 40 45 50 number ppe 05 10 15 20 25 30 35 40 45 number ppe 30 20 10 10 20 30 40 number ppe figur 7 comparison schedul qualiti produc vpmcp hpmcp number ppe number ppe number ppe figur 8 comparison speedup vpmcp hpmcp ccr 01 1 schedul length produc mcp slightli shorter produc bsa ccr 10 mcp much better bsa parallel version two algorithm perform differ number ppe increas schedul length produc hpmcp increas slightli pbsa increas significantli figur 9 compar hpmcp pbsa sum schedul length four graph 1000 2000 3000 4000 node differ ccr differ number ppe tabl xiii schedul length produc hpmcp pbsa graph size number node ccr number 1000 2000 3000 4000 ppe hpmcp pbsa hpmcp pbsa hpmcp pbsa hpmcp pbsa 7 conclud remark parallel schedul faster abl schedul larg macro dataflow graph parallel schedul new approach still develop mani open problem need solv highqual parallel schedul algorithm low complex develop achiev parallel exist sequenti schedul algorithm design new parallel schedul algorithm develop vpmcp hpmcp algorithm parallel sequenti mcp algorithm perform approach studi vpmcp hpmcp algorithm much faster pbsa produc highqual schedul term schedul length 300000 schedul length number ppe pbsa 300000 schedul length number ppe pbsa 300000 500000 schedul length number ppe pbsa figur 9 comparison schedul length produc hpmcp pbsa acknowledg grate yukwong kwok ishfaq ahmad provid pbsa program random graph gener test r parallel approach multiprocessor schedul perform comparison algorithm static schedul dag multiprocessor last algorithm heuristicsbas static task alloc algorithm applic perform analysi compiletim optim approach list schedul algorithm distribut memori multiprocessor schedul parallel program task onto arbitrari target machin task schedul parallel distribut system comput intract guid theori npcomplet schedul preced graph system interprocessor commun time comparison multiprocessor schedul heurist duplic schedul heurist dsh new preced task schedul parallel processor system partit schedul parallel program multiprocessor compiletim schedul heurist interconnectionconstrain heterogen processor architectur program aid messagepass system dsc schedul parallel task unbound number processor tr ctr sukanya suranauwarat hideo taniguchi design implement initi evalu advanc knowledgebas process schedul acm sigop oper system review v35 n4 p6181 octob 2001