parallel algorithm reduct tridiagon form eigendecomposit onesid orthogon transform orthogon column matrix relat method find singular valu advantag lend parallel vector implement simplifi access data requir access row column use find eigenvalu matrix given factor form finit sequenc transform lead partial orthogon column describ permit tridiagon matrix whose eigenvalu squar singular valu deriv implement fujitsu vpp seri discuss time result present b introduct symmetr eigenvalu problem appear mani applic rang comput chemistri structur engin algorithm symmetr eigenvalu problem extens discuss literatur 11 9 implement variou softwar packag eg lapack 1 broader introduct parallel comput scientif comput new parallel algorithm suggest 7 2 follow anoth new parallel algorithm suggest particularli well adapt vector parallel comput low oper count eigenvalu problem solv iter algorithm gener algebra sens equival find n zero polynomi howev two main class method solv symmetr eigenvalu problem first class requir matrix vector product inspect alter matrix element matrix class includ lanczo method 9 date novemb 1995 1991 mathemat subject classif 65y0565f30 key word phrase parallel comput reduct algorithm onesid reduct comput scienc laboratori australian nation univers canberra act 0200 australia anu supercomput facil australian nation univers centr mathemat applic australian nation univers hegland h kahn r osborn particular advantag spars matric howev gener lanczo method difficulti find eigenvalu eigenvector second class method iter appli similar transform matrix get sequenc orthogon similar matric converg diagon matrix second class method consist mainli two subclass first subclass use given matric similar transform jacobi method success implement parallel 2 12 disadvantag method high oper count second subclass method first reduc matrix orthogon similar transform tridiagon form use special method symmetr tridiagon matric part algorithm pose major challeng parallel implement second stage tridiagon eigenvalu problem solver popular method includ divid conquer 7 multisect 9 reduct tridiagon form discuss earlier algorithm use block matrix algorithm see 6 5 3 howev method achiev optim perform one problem similar transform requir multipl side seen 12 jacobi method base onesid transform allow better vector requir less commun origin jacobi algorithm assum posit semidefinit intermedi matric b defin factor seen follow onesid idea also use reduct algorithm algorithm form part subroutin librari distribut memori comput fujitsu vpp 500 often applic subroutin librari allow user littl freedom choic distribut data local memori processor onesid algorithm allow larg rang distribut perform equal well next section one twosid reduct tridiagon form de scribe section 3 reinterpret reduct orthogonalis procedur similar gramschmidt procedur reinterpret use introduc new onesid reduct algorithm section 4 comput eigenvector discuss section 5 contain time comparison algorithm reduct tridiagon form 3 2 reduct tridiagon form class method solv eigenvalu problem symmetr matric 2 r nthetan first reduc tridiagon form second step solv eigenvalu problem tridiagon matrix problem find eigendecomposit tridiagon matrix discuss accumul transform use find eigenvector symmetr matrix reduct tridiagon form produc factor q orthogon symmetr tridiagon offdiagon element nonzero posit factor uniqu determin first column q 9 proof fact lead directli lanczo algo rithm lanczo method advantag especi spars matric method base sequenc simpl orthogon similar transform 9 p118 prefer dens matric 21 household reduct method attribut household use household transform reflect follow let ff ij denot element matrix hwahw zero row 3 n first column column 3 n first row comput hw equival w fl fi 1 requir multipl n addit o1 use matrix vector product v applic hw rank two updat 4 hegland h kahn r osborn take n 2 n multipl addit comput p 2n2 multipl addit comput q n 2 multipl 2n 2 addit rank two updat give total 2n 2 multipl 3n 2 second step v found hvhwahwhv addit zero column 4 n second row row 4 n second column procedur repeat remain matrix tridiagon size remain submatric decreas step n gamma k matrix size k process requir multipl 3k 2 addit give total multipl addit tridiagon matrix uniqu determin problem exampl differ start vector lanczo procedur lead differ tridiagon matric also differ matric obtain differ arithmet precis use 9 p123124 howev despit appar lack definit eigenvalu eigenvector origin problem still determin error proport machin precis summari sequenti household tridiagon algorithm follow calcul fl w ak end vector parallel processor household algorithm disad vantag firstli iter progress length vector use calcul decreas effici use vector processor prefer long vector length secondli parallel environ input matrix partit band manner across onedimension array processor algorithm reduct tridiagon form 5 sever load imbalanc avoid variou author suggest use cyclic 5 toruswrap map data 10 3 also parallel impl mentat rank two updat requir copi vector w q processor lead heavi commun load 22 onesid reduct onesid algorithm develop overcom difficulti inher parallel version sequenti household algorithm addit expect onesid algorithm gener less fillin spars matric twosid algorithm matrix given finit element form real symmetr matric either given factor repres factor form b choleski factor use spectrum might shift gamma posit definit paramet chosen use gershgorin shift exact arithmet use reduct eigenvector gamma equal eigenvector eigenvalu shift howev precis comput affect introduct shift household similar transform done appli hw b rank one modif must comput flbw comput p requir multipl addit rank one modif n 2 multipl n 2 addit give togeth 2n 2 n multipl 2n addit contrast twosid algorithm number addit approxim number multipl algorithm advantag architectur addit multipl parallel mean better load balanc comput w costli method origin household method household vector w comput first column 1 column reconstruct first factor represent requir n 2 n multipl addit thu comput household matrix hv requir o1 term multipl n 2 addit 6 hegland h kahn r osborn ad term one reduct step need multipl addit overal cost algorithm multipl addit total number oper increas compar origin algorithm time use comput addit multipl parallel speed matrix alreadi factor howev time would taken account well summari sequenti version onesid algorithm follow calcul fl w k end 3 onesid algorithm orthogon procedur order develop parallel version algorithm onesid reduct interpret orthogon procedur like gramschmidt process let b denot ith column b matrix interpret gramian b follow onesid tridiagon procedur construct gramian c tridiagon condit orthogon certain c 2 34 reduct tridiagon form 7 first step orthogon c establish set ffi kj denot kroneck delta subsequ step linear combin form c 4 orthogon c 2 c orthogon c 1 linear combin well subsequ step destroy earlier orthogon relat basic observ use proof method algorithm reduct tridiagon form follow c 1 k end fl k ij new c k orthogon c kgamma1 matrix ijkn orthogon iter k find orthogon transform c kgamma1 c k j orthogon c kgamma1 equival make offdiagon element ff jkgamma1 ff kgamma1j zero proposit 31 let c k j comput previou algorithm c 1 8 hegland h kahn r osborn c n tridiagon orthogon matrix q proof proof base fact mention earlier orthogon relat invari use induct proof similar one given next section correspond parallel algorithm remark origin household algorithm formul similar way treat b inner product coordin transform chang matrix tridiagon 31 parallel algorithm follow singl program multipl data model spmd use basic assumpt processor program way although action might slightli differ thu spmd algorithm describ pseudocod denot one processor data matrix b distribut processor column cyclic fashion mean processor 1 contain column contain p total number processor formal processor q contain b pg order simplifi notat let n ng processor number furthermor mod denot mod function map posit neg integ c 1 broadcast c 1 1 els receiv c 1for k gather c k end coeffici fl h ij ij modifi column orthogon last unmodifi one thu ng n q reduct tridiagon form 9 coeffici also form orthogon matric follow c k overwritten c k note last calcul c k duplic p processor leav c k k processor readi next step commun requir iter gather p vector c k proposit 32 let c k j comput previou algorithm c 1 c n tridiagon orthogon matrix q proof let c 1 first show 1 orthogon matrix q k 2 linear hull c k n orthogon linear hull c 1 3 proposit 32 consequ obtain set 1 proof use induct k statement easili seen true case n dimension ident matrix case orthogon condit empti matrix 1 two two matrix thu tridiagon remaind proof consist prove induct step assum three properti valid shown also valid construct follow c orthogon g thu q one retriev first properti particular exist g follow exist construct household matric linear hull c m1 n subspac linear hull c n thu orthogon c 1 furthermor construct orthogon c second properti follow hegland h kahn r osborn final tridiagon remain show 2nd column zero first row first element column c m1 zero second properti proof use sequenti parallel algorithm practic implement orthogonalis c k j achiev form product c kgamma1 correspond individu element updat version symmetr matrix household transform use zero relev offdiagon element first stage iter transform carri local gather step transform p form element replic processor although household transform use would also possibl use given transform 32 analysi use onesid reduct tridiagon one step complet eigensolv sever possibl compon error first choleski factor howev result wilkinson 11 equat 4443 show quantiti extrem small thu error incur work choleski factor b subsequ calcul minim second step tridiagon matrix c ngamma2 produc success reduct orthogon similar transform c k transform matrix calcul kth stage error eigenvalu c ngamma2 bound numer error transform 11 kth step given p exact orthogon matrix correspond actual comput data stage bound differ follow wilkinson 11 equat 3453 fact ij word length error introduc reduct tridiagon small final stage calcul eigenvalu tridiagon matrix determin accuraci high rel largest element tridiagon matrix appli exampl eigenvalu comput use reduct tridiagon form 11 sturm procedur result guarante high rel accuraci determin small eigenvalu import jacobi method becom method choic 4 4 calcul eigenvector order calcul eigenvector symmetr matrix orthogon matrix q defin reduct accumul achiev start ident matrix distribut cyclic processor updat multipli household transform use updat c form q explicitli prefer store detail transform appli eigenvector tridiagon matrix usual procedur sequenti implement reason matrix q distribut way render multipl left ineffici discuss fulli follow 41 calcul eigenvector oneprocessor version n theta n symmetr matrix reduc tridiagon form sequenc household transform repres orthogon n theta n matrix q nlambdan tridiagon onesid algorithm actual calcul eigendecomposit given diagon matrix contain eigenvalu v 2 r nlambdan matrix eigenvector combin two equat give eigenvector column matrix q obtain rediagon procedur repres household matric h eigenvector matrix v tridiagon matrix repres matrix element order get matrix element represent u form product hegland h kahn r osborn product done two differ way first method multipli v h k formal defin sequenc u u method often use exampl 8 call backward transform second method comput elementwis represent q first recurs specif comput matrixvector product qv call forward accumul 8 differ two method first one appli household transform h k left second appli right addit second method requir comput product two matric element form sequenti case use twosid household duction first method prefer avoid matrix multipl howev multiprocessor version multipl left household transform requir extra commun column matrix eigenvector v distribut processor fact one purpos onesid reduct avoid commun reduct tridiagon form certainli commun requir matrix multipl qv fewer larg block matrix less demand 42 multiprocessor version multiprocessor case ad complic b assum cyclic distribut although explicitli laid use p permut transform b cyclic layout matrix q product 2 theta n gamma 2 matric form household transform h 1 j refer transform carri local step reduct h 2 j refer transform use one column b processor reduct tridiagon form 13 carri redundantli processor find q start ident matrix distribut cyclic across processor match implicit layout b matrix updat transform household transform use updat b obtain tridiagon matrix matrix eigenvector v tridiagon matrix obtain block layout whilst matrix q cyclic layout find eigenvector origin symmetr matrix must taken account instead need qpv cyclic order must revers final eigenvector given premultipl permut p involv reorder coeffici eigenvector carri local processor involv commun 5 time parallel onesid reduct tridiagon implement test fujitsu vpp500 vpp500 parallel supercomput consist vector processor connect full crossbar network theoret peak perform pe 16 gflop maximum size memori processor gbyte vpp500 scalabl 4 222 process element access avail 16 processor machin processor perform send receiv oper simultan crossbar network peak data transfer rate 400 mbytess onesid algorithm particularli suit architectur vpp500 calcul element updat matrix current version c vectoris loop length n size input matrix convent twosid household reduct vector length decreas iter tabl show time speed obtain 16 processor vpp500 two time speed given first reduct without accumul transform later eigenvector calcul second reduct accumul speed given gflop code written parallel languag vppfortran basic fortran77 ad compil direct achiev parallel construct data layout interprocessor commun perform figur appear algorithm scalabl far perform maintain size problem increas along 14 hegland h kahn r osborn 1024 38 846 53 1018 2048 26 1000 37 1164 3072 28 3135 43 3371 tabl 1 time speed matric increas size number processor onesid reduct tridiagon matrix size 2048 use 2 processor achiev nearli 70 peak perform approxim 60 matrix size 4096 use 4 processor formal analysi commun requir onesid algorithm give commun volum proport number processor comput load proport n 3 isoeffici obtain pp gamma 1n 2 n 3 constant scalabl algorithm evid speed matric size n p processor compar matric size 4n use 2p processor exampl compar speed doubl gflop rate interest compar perform figur publish result altern parallel twosid household reduct tridiagon comparison gener algorithm machin architectur differ straightforward comparison time taken reduc matrix fix size measur machin similar peak gflop rate practic first step choleski factor add overhead one tenth time taken onesid reduct tridiagon access publish result refer algorithm implement intel machin reduct tridiagon form 15 dongarra van de geijn 5 give time parallel reduct tridiagon use panel wrap storag 128 node 520 node intel touchston delta equat peak mflop rate suggest compar 6 processor vpp500 matrix size 4000 implement intel took twice long onesid reduct size matrix 4 processor vpp500 scalapack implement parallel reduct tridiagon given choi dongarra walker 3 extrapol graph gflop rate seen time taken variou size problem two three time taken onesid algorithm size problem vpp500 compar peak perform smith hendrickson jessup 10 use squar toruswrap map matrix element processor test code intel machin correspond 12 processor vpp500 twosid algorithm infer taken time slightli larger problem 16 processor vpp500 use onesid algorithm smith et al algorithm sophist twosid algorithm use toruswrap map level 3 bla 6 conclus new algorithm reduct symmetr matrix tridiagon first step find eigendecomposit develop start choleski factor symmetr matrix orthogon transform base household reduct appli factor matrix tridiagon form reach refer onesid reduct lead updat factor matrix iter rank one rather rank two convent household reduct tridiagon transform also accumul allow calcul eigenvector algorithm suit parallelvector architectur fujitsu vpp500 shown perform well complet calcul eigenvalu eigenvector symmetr matrix extra time choleski factor observ one tenth requir reduct tridiagon signific overhead 7 acknowledg author would like thank prof r brent help comment mr makato nakanishi fujitsu japan help access vpp500 hegland h kahn r osborn r solut singularvalu symmetr eigenvalu problem multiprocessor array design parallel jacobi method accur qr reduct condens form eigenvalu problem distribut memori architectur block reduct matric condens form eigenvalu comput fulli parallel algorithm symmetr eigenvalu problem matrix comput symmetr eigenvalu problem parallel algorithm household tridiagon izat algebra eigenvalu problem parallel order algorithm effici onesid jacobi svd comput tr