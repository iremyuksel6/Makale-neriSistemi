short signatur weil pair introduc short signatur scheme base comput diffiehellman assumpt certain ellipt hyperellipt curv standard secur paramet signatur length half dsa signatur similar level secur short signatur scheme design system signatur type human sent lowbandwidth channel survey number properti signatur scheme signatur aggreg batch verif b introduct short digit signatur need environ strong bandwidth constraint ex ampl product registr system often ask user key signatur provid cd label human ask type digit signatur shortest possibl signatur need similarli due space constraint short signatur need one print barcod digit signatur postag stamp 41 37 third exampl consid legaci protocol alloc xed short eld nonrepudi 1 25 one would like use secur signatur ts allot eld length two frequent use signatur scheme rsa dsa produc rel long signatur compar secur provid exampl one use 1024bit modulu rsa signatur 1024 bit long similarli one use 1024bit modulu standard dsa signatur 320 bit long ellipt curv variant dsa ecdsa also 320 bit long 2 320bit signatur long key human propos signatur scheme whose length approxim 170 bit provid level secur similar 320bit dsa signatur signatur scheme secur existenti forgeri chosenmessag attack random oracl model assum comput diehellman problem cdh hard certain ellipt curv nite eld gener signatur simpl multipl curv verifi signatur done use bilinear pair curv signatur scheme inher use properti curv consequ equival scheme f construct short signatur old problem sever propos show shorten dsa preserv level secur naccach stern 37 propos variant dsa signatur length approxim 240 bit mironov 35 suggest dsa variant similar length give concret secur analysi construct random oracl model anoth techniqu propos reduc dsa signatur length signatur messag recoveri 38 41 system one encod part messag signatur thu full version paper appear asiacrypt 01 12 support nsf packard foundat shorten total length messagesignatur pair long messag one achiev dsa signatur overhead 160 bit howev short messag eg 64 bit total length remain 320 bit use signatur scheme signatur length alway order 160 bit howev short messag messag transmit along signatur dsa signatur messag recoveri long standard dsa signatur also note patarin et al 40 construct short signatur whose secur depend hidden field equat hfe problem signatur scheme use group cdh problem hard decis die hellman problem ddh easi rst exampl group given 27 previous use 26 10 call group gap diehellman group gdh group short show construct signatur scheme gdh group prove secur scheme show build gdh group lead short signatur signatur scheme resembl undeni signatur scheme chaum pederson 13 signatur scheme sever use properti describ section 5 exampl signatur gener dierent peopl dierent messag aggreg singl signatur 11 signatur also support standard extens threshold signatur blind signatur 9 notat use ef q denot ellipt curv r 1 use ef q r denot group point e f q r use jef q r j denot number point ef q r diehellman group bilinear map present signatur scheme rst review concept relat bilinear map gap diehellman group use follow notat 1 g 1 g 2 two multipl cyclic group prime order p 2 g 1 gener g 1 g 2 gener g 3 isomorph g 2 g 1 g 2 4 e bilinear map e one set g allow gener case g 1 6 g 2 take advantag certain famili nonsupersingular ellipt curv describ section 43 proof secur requir ecient comput isomorph one could take ident map g 1 6 g 2 need describ explicitli ecient comput isomorph map essenti secur illustr give next section exampl bilinear map engend insecur signatur scheme precis exist setup obtain natur gener cdh ddh problem comput codiehellman cocdh comput h 2 g 1 decis codiehellman coddh ye b otherwis answer ye say codiehellman tupl problem reduc standard cdh ddh next dene cogdh gap group pair pair group coddh easi cocdh hard dene advantag algorithm solv comput codiehellman problem adv cocdha word probabl uniform random choic z p h g 1 coin toss say algorithm break comput codiehellman run time adv cocdha least denit 21 two group gap codiehellman pair cogdh pair satisfi follow properti 1 group action g 1 g 2 map g 2 g 1 comput one time unit 2 decis codiehellman problem solv one time unit 3 algorithm break comput codiehellman say g 1 gapdiehellman group gdh group note denit normal time algorithm take one time unit normal algorithm break cdh 21 bilinear map current exampl gap diehellman group aris bilinear map 27 brie dene bilinear group show give gdh group possibl construct gap diehellman group exist two group addit group g jg 1 jg j bilinear map follow properti 1 bilinear u ab 2 nondegener eg denit 22 two orderp group bilinear group pair satisfi follow properti 1 group action g 1 g 2 map g 2 g 1 comput one time unit 2 group g order p bilinear map e exist e comput one time unit 3 algorithm break comput codiehellman joux nguyen 26 show ecientlycomput bilinear map e provid algorithm solv decis codiehellman problem follow tupl g consequ two group bilinear group pair also t2 cogdh group pair convers probabl true 3 signatur scheme base gap diehellman group present signatur scheme work gap codiehellman group pair prove secur scheme next section show lead short signatur scheme resembl undeni signatur scheme propos chaum pederson 13 okamoto pointchev 39 brie note gap problem give rise signatur scheme howev gap problem lead short signatur signatur element g 1 signatur scheme compris three algorithm keygen sign verifi make use fulldomain hash function secur analysi view h random oracl 7 section 32 weaken requir hash function h key gener pick random x r public key v 2 g 2 secret key x sign given secret key x 2 z p messag 2 f0 1g comput h x signatur 2 g 1 veric given public key v 2 g 2 messag 2 f0 1g signatur 2 g 1 comput verifi g 2 v h valid codiehellman tupl output valid output invalid signatur singl element g 1 construct short signatur therefor need cogdh pair element g 1 short represent construct group section 4 31 prove secur signatur scheme existenti forgeri chosenmessag attack random oracl model existenti unforg chosen messag attack 24 signatur scheme keygen sign verifi dene use follow game challeng adversari setup challeng run algorithm keygen obtain public key pk privat key sk adversari given pk queri proceed adapt request signatur pk q messag choic challeng respond queri signatur output eventu output pair win game 1 dene adv sig probabl win game taken coin toss keygen denit 31 forger q q h break signatur scheme run time make q signatur queri q h queri hash function adv sig least signatur scheme existenti unforg adapt chosen messag attack forger q q h break follow theorem show signatur scheme secur theorem 32 let order p signatur scheme existenti forgeri adapt chosenmessag attack random oracl model satisfi c g 1 constant depend g 1 e base natur logarithm henc secur signatur scheme follow hard cocdh base standard comput diehellman assumpt g 1 proof theorem 32 suppos forger algorithm q break signatur scheme show construct 0 time algorithm b solv cocdh probabl least 0 contradict fact let g 2 gener g 2 algorithm b given 2 goal output h 2 g 1 algorithm b simul challeng interact forger follow start give gener g 2 public key u g r random z p hqueri time algorithm queri random oracl h respond queri algorithm b maintain list tupl hm explain refer list hlist list initi empti queri oracl h point 2 f0 1g algorithm b respond follow 1 queri alreadi appear hlist tupl hm respond 2 otherwis b gener random coin c 2 f0 1g prc 3 algorithm b pick random b 2 z p 4 algorithm b add tupl hm hlist respond set note either way w uniform g 1 independ current view requir signatur queri let signatur queri issu algorithm b respond queri follow 1 algorithm b run algorithm respond hqueri obtain w hm correspond tupl hlist report failur termin 2 know c observ therefor valid signatur public key 2 algorithm b give algorithm output eventu algorithm produc messagesignatur pair f f signatur queri issu f tupl hlist contain f b issu queri hm f ensur tupl exist assum f valid signatur f given public b report failur termin next algorithm b nd tupl hm f w b ci hlist report failur termin otherwis output requir h h h r u b g 2 rb complet descript algorithm b remain show b solv given instanc cocdh problem probabl least 0 analyz three event need b succeed abort result signatur queri gener valid messagesignatur forgeri f f tupl contain f hlist succe event happen probabl follow claim give lower bound term 1 probabl algorithm b abort result signatur queri least 1e henc proof without loss gener assum ask signatur messag twice prove induct make signatur queri probabl b abort least 1 1q claim trivial true ith signatur queri let hm correspond tupl hlist prior issu queri bit c independ view valu could given depend c hm distribut hm whether c therefor probabl queri caus b abort 1q 1 use induct hypothesi independ c probabl b abort queri least 1 1q prove induct claim sinc make signatur queri probabl b abort result signatur queri least 1 1q 2 algorithm b abort result signatur queri algorithm view ident view real attack henc pre proof public key given distribut public key produc algorithm keygen respons hqueri real attack sinc respons uniformli independ distribut g 1 respons signatur queri valid therefor produc valid messagesignatur pair probabl least henc pre 3 probabl algorithm b abort output valid forgeri least proof given event e 1 e 2 happen algorithm b abort gener forgeri tupl hm f w b ci hlist c 1 time gener output know valu c issu signatur queri remain independ view inde issu signatur queri valu given depend c hm distribut hm whether c could issu signatur queri f know c independ current view therefor use bound claim equat 1 show b produc correct answer probabl least eq algorithm bs run time run time plu time take respond q h q hash queri q signatur queri queri requir exponenti g 1 assum take time c g 1 henc total run time complet proof theorem 32 analysi use proof theorem 32 resembl coron analysi full domain hash note probabilisitc full domain hash pfdh signatur 16 tighter secur reduct fdh signatur improv secur reduct appli signatur scheme howev random signatur scheme pfdh would increas length signatur defeat main goal construct short signatur necess recal proof secur reli exist ecient comput isomorph show necess give exampl bilinear map e cocdh problem believ hard g 1 yet result signatur scheme insecur let q prime let g 2 subgroup z q prime order p gener g let g 1 group g addit modulo p dene map clearli bilinear sinc eax b ab cocdh problem given problem believ hard sinc algorithm comput cocdh give algorithm comput discret log g 2 henc condit theorem 32 except known comput isomorph easi see result signatur scheme bilinear map insecur given one messagesignatur pair easi recov secret key comment one avoid use cost make stronger complex assumpt without necessari assumpt prove secur polynomi time algorithm comput h 2 g 1 given natur exist group consid reason reli stronger complex assumpt 32 hash onto ellipt curv signatur scheme need hash function next section use ellipt curv construct cogdh group therefor need g 1 subgroup ellipt curv sinc dicult build hash function hash directli onto subgroup ellipt curv slightli relax hash requir let ef q ellipt curv dene point prime order p wish hash onto subgroup g suppos given hash function 1g hash function h 0 built standard cryptograph hash function secur analysi view h 0 random oracl use follow determinist algorithm call maptogroup hash messag f0 1g onto g 1 fix small paramet dlog 2 log 2 1e desir bound failur probabl algorithm dene h f0 1g g 1 follow 1 given 2 f0 1g set 0 2 repres ibit string 3 fx quadrat residu f q 3a let q two squar root fx use b 2 f0 1g choos root choos full order f q ensur 1 greater 0 accord order swap 0 1 necessari set point 3b comput pm pm g 1 output maptogroup h 0 stop 4 otherwis increment go step 2 reach 2 report failur failur probabl made arbitrarili small pick appropri larg probabl h 0 k lead point g approxim 12 probabl choic random oracl h 0 henc expect number call h 0 approxim 2 probabl given messag found unhash lemma 33 let ef q ellipt curv let ef q order let g 1 subgroup ef q order p assum p 2 divid suppos cogdh signatur scheme secur group use 2 c g 1 secur hash function h comput maptogroup h 0 h 0 random hash function 1g proof sketch suppos forger algorithm f 0 break signatur scheme hash function h comput use maptogroup h 0 build algorithm f break signatur scheme h random oracl new forger f run f 0 black box algorithm f pass signatur queri made f 0 signatur oracl f use hash oracl simul f 0 behavior maptogroup h 0 use array ij whose entri element f q f0 1g array q h row 2 column initi f ll ij uniformlyselect element f q f0 1g f run f 0 keep track index uniqu messag f 0 request h 0 hash f 0 ask h 0 hash messag w k whose forger f previous seen whose w arbitrari ibit string f scan row ij 0 j 2 seek point g smallest j ij map g 1 f replac ij dierent point dene follow let construct random point follow 1 let p note mp integ sinc p divid furthermor mp invers modulo p sinc p 2 divid henc mp rel prime p 2 pick random point 3 set random point ef q mp set map step 3a maptogroup maptogroup h 0 requir preliminari patch complet f abl answer h 0 hash queri f 0 string w k simpli return iw simul h 0 f 0 see statist indistinguish real attack thu f 0 succe break signatur scheme use maptogroup h 0 f run f 0 consult h succe likelihood suer runningtim penalti maintain addit inform run exponenti step 3 maptogroup algorithm assum exponenti g 1 take time c g 1 build cogdh group small represent use weil 29 pp 243245 tate 18 pair obtain cogdh group certain ellipt curv recal necessari fact ellipt curv see eg 29 44 show use certain curv short signatur 41 ellipt curv weil pair goal construct bilinear group lead cogdh group discuss section 21 let ef q ellipt curv rst dene use constant call secur multipli subgroup hp ef q denit 41 let q prime power ef q ellipt curv point ef q let p ef q point prime order p say subgroup hp secur multipli integ 0 order q f p word secur multipli ef q secur multipli largest prime order subgroup ef q describ two famili curv provid 6 standard secur paramet sucient obtain short signatur open problem build use ellipt curv slightli higher say rst step dene g 1 g 2 describ bilinear map e describ isomorph discuss intract cocdh balasubramaniankoblitz let ef q ellipt curv let p 2 ef q point prime order p p 6 q suppos subgroup hp secur multipli 1 ie p q 1 use result balasubramanian koblitz 3 show ef q contain point q order p linearli independ p set g note g 1 ef q g 2 ef q weil tate pair let ep group point order divid p ef q group ep isomorph z p z p 44 also g 1 g 2 ep weil pair q follow properti 1 2 bilinear r 1 3 nondegener r 2 ep er r 0 4 comput r 1 pair er 1 comput polynomi time 34 note er 1 r 1 r 2 linearli depend see 31 10 denit weil pair descript algorithm comput tate pair 18 anoth use bilinear map ep properti similar weil pair necessarili satisfi properti 1 ident weil pair curv e give comput nondegener bilinear f q enabl us solv decis codiehellman problem group tate pair nondegener g 1 g 2 also use solv decis codiehellman trace map present comput isomorph use trace map tr send point ef q ef q let galoi map f q f q also trace map tr ef q dene fact 42 let p 2 ef q point prime order p 6 q let hp secur multipli 1 let q 2 ef q point order p linearli independ p trq 6 tr isomorph hqi hp proof suppos r 2 ef q point order p r hp p r gener ep therefor ep ef q follow ep r 2 f q order p sinc otherwis e would degener ep sinc 1 know p divid q 1 consequ element order p f q henc must r 2 hp follow point ef q order p contain hp sinc trq 6 know trq 2 ef q order p therefor trq 2 hp henc tr isomorph hqi hp henc trq 6 trace map isomorph g 2 g 1 comput polynomi time log q requir intract cocdh remain question diculti cocdh problem necessari condit cdh intract best known algorithm solv cocdh comput discretelog g 1 fact discretelog cdh problem g 1 known comput equival given extra inform group g 1 30 therefor suce consid necessari condit make discretelog problem ef q intract let hp subgroup ef q order p secur multipli brie discuss two standard way comput discretelog hp 1 mov use ecient comput homomorph mov reduct 32 map discret log problem hp discret log problem extens f q say f q solv discret log problem f use number field siev algorithm 43 imag hp homomorph must subgroup f q order p thu denit impli henc mov method best reduc discret log problem hp discret log problem subgroup f q therefor ensur discret log hard hp want curv sucient larg make discret log f q intract 2 gener gener discret log algorithm babystepgiantstep pollard rho method 33 run time proport p p therefor must ensur p sucient larg summari want curv ef q gener discret log algorithm ef q number field siev f q intract 42 cogdh signatur ellipt curv summar construct cogdh group adapt signatur scheme use group point ellipt curv cogdh group use dene follow 1 let ef q ellipt curv let p 2 ef q point prime order p 1 p 6 q divid jef q j 2 let 1 secur multipli hp balasubramanian koblitz 3 exist point q 2 ef q linearli independ p easi construct q expect polynomi time number point ef q known sinc 1 know q 62 ef q ensur trq 6 replac q q p q p order p linearli independ p trq 3 4 sinc p q linearli independ weil pair give nondegener bilinear map q comput polynomi time log q tate pair nondegener g 1 g 2 also use bilinear map 5 sinc trq 6 trace map ef q isomorph g 2 g 1 comput polynomi time log q subgroup g 1 g 2 ellipt curv ef q signatur scheme work follow recal maptogroup h 0 hash function maptogroup built hash function q f0 1g describ section 32 key gener pick random x r xq public key v 2 ef q secret key x sign given secret key x 2 z p messag 2 f0 1g 1 comput 2 xr 2 ef q 3 output xcoordin signatur 2 f q veric given public key v 2 g 2 messag 2 f0 1g signatur 2 f q 1 find 2 f q point order p ef q exist output invalid stop 2 comput 3 test either e output valid otherwis output invalid signatur length dlog 2 qe note veric accept signatur account fact signatur 2 f q could come either point ef q secur theorem 32 suce studi diculti cocdh best known algorithm solv cocdh problem requir comput discret log g 1 comput discret log f q 43 use nonsupersingular curv eld high characterist remain build ellipt curv desir secur multipli next two section show curv secur multipli describ famili nonsupersingular ellipt curv famili outlin miyaji et al 36 call mnt curv idea follow suppos veri p divid q 6 1 divid q 1 0 6 p prime curv ef q p point like secur multipli discrimin signatur size dlog secur mov secur 28894627 177 177 1062 9877443 206 206 1236 tabl 1 nonsupersingular ellipt curv cogdh signatur e curv prime eld f q p largest prime divid order mov reduct map curv onto eld discrimin complex multipl eld ef q build ef q p point use complex multipl 8 chapter viii brie explain suppos integ anoth posit integ integ prime complex multipl method produc ellipt curv ef q point time od 2 log q 3 valu call trace curv want curv f q p point plug valu 2 get lead xed 4 need integ satisfi equat prime prime small multipl prime solut verifi get curv ef q secur multipli find integ solut equat type 3 done reduc pell equat whose solut well known 45 tabl valu lead suitabl curv signatur scheme exampl get curv ef q q 168bit prime signatur use curv 168bit best algorithm cocdh ef q requir either 1 gener discret log algorithm take time approxim 2 83 2 discret log 1008bit nite eld larg characterist 44 special supersingular curv anoth method build curv secur multipli 6 use special supersingular curv ef 3 specic use curv mov reduct map discret log problem ef 3 f use two simpl lemma describ behavior curv see also 47 28 lemma 43 curv dene curv e dene proof see 28 section 2 lemma 44 let e ellipt curv dene 1 5 jef 3 j divid 3 6 1 proof see 47 togeth lemma 43 44 show relev valu group curv multipli 6 specic j 6 whether secur paramet actual 6 particular prime subgroup curv must determin comput automorph use automorph make primeord subgroup oppos cogdh group fact use shrink size public key sinc make possibl public key live ef 3 oppos ef 3 6 automorph dene follow mod 12 1 5 comput three element f 3 6 u r r satisfi consid follow map f 3 6 lemma 45 let mod 12 equal 1 5 automorph automorph e f 3 6 moreov p point order p point order p linearli independ p proof see silverman 44 p 326 let ef 3 one e point prime order p set g group gener p let ef 3 automorph curv dene modi weil pair standard weil pair ep lemma 45 know p linearli independ e nondegener follow g 1 gdh group two implic signatur scheme secur signatur scheme base diculti standard comput diehellman problem g 1 oppos cocdh problem public key element g 1 henc shorter public key automorph exist curv l sig size dlog secur mov secur tabl 2 supersingular ellipt curv gdh signatur p largest prime divisor j mov reduct map curv onto eld characterist 3 size 3 6 use curv use instanti curv present tabl 2 note restrict instanti prime avoid weildesc attack 21 22 except 121 recent shown certain weildesc attack eectiv case 17 suggest may safe use perform galbraith et al 20 baretto et al 4 show frobeniu map use speed comput weil tate pair curv result signic speedup signaturever algorithm consequ signatur scheme use curv much faster scheme use curv previou section bad news mov reduc discret log problem discret log problem f discretelog algorithm due coppersmith 14 43 specic design comput discret log small characterist eld consequ discretelog problem f much easier discretelog problem f p prime approxim size 3 n get secur equival dsa use 1024bit prime would use curv much larger 1024 bit lead much longer signatur defeat point use curv word xed signatur length supsersingular curv lead signatur reduc secur compar curv previou section 45 open problem higher secur multipli curv section 43 secur multipli sucient construct short signatur secur compar dsa use 1024bit prime howev obtain secur compar dsa use 2048bit prime signatur length bit ellipt curv higher say would result short signatur higher secur need 2048bit discretelog secur let q larg prime power say q 2 160 current open problem construct ellipt curv ef q ef q prime order baretto et al 5 show build ellipt curv e ef q given secur multipli howev largest prime order subgroup ef q much smaller q consequ curv use secur short signatur gener discretelog algorithm ef q break scheme time proport p p p largest prime factor jef q j one could also build gdh group higher genu galbraith 19 construct supersingular curv higher genu larg secur multipli exampl jacobian supersingular curv point jacobian curv genu two character two valu f 2 two xcoordin reduc divisor length signatur 2 bit henc might obtain signatur length 2 secur comput cdh nite eld f 2 12 factor 6 length signatur degre nite eld ellipt curv case henc genu 2 curv improv secur signatur give varieti curv use short signatur discret log jacobian curv reduc discretelog eld characterist 2 consequ one must take coppersmith discret log algorithm 14 account discuss end section 44 obtain larger secur multipli rubin silverberg 42 propos certain abelian varieti superci show signatur produc use curv section 44 shorten 20 result nbit signatur pair reduc discret log problem nite eld size approxim 2 75n use exampl current know multipli greater 6 extens signatur support threshold signatur batch veric surprisingli signatur distinct peopl distinct messag aggreg singl convinc signatur brie survey extens refer boldyreva 9 verheul 46 boneh et al 11 full descript proof secur 51 aggreg signatur common environ requir manag mani signatur dierent parti distinct messag exampl certic chain contain signatur distinct certic issu variou certi cate author signatur scheme enabl us aggreg multipl signatur distinct entiti distinct messag singl short signatur parti signatur aggreg signatur aggreg done increment two signatur aggr gate third ad aggreg see 11 applic bilinear group pair prime order p suppos n user publicpriv suppos user sign messag 2 f0 1g obtain signatur aggreg signatur comput simpli 1 2 n 2 g 1 aggreg veric given public f0 1g aggreg signatur 2 g 1 verifi sign messag test 1 messag distinct 2 e condit hold accept aggreg signatur otherwis reject refer 11 exact secur model proof secur attack existenti forg aggreg signatur subvert solv cocdh aggreg signatur veric requir bilinear map gener gap diehellman group appar insuci gener gap diehellman group sucient verifi aggreg signatur messag dierent peopl verifi aggreg signatur distinct messag person 52 batch veric suppos n user sign messag 2 f0 1g obtain n signatur show n signatur veri batch much faster verifi one one similar properti hold signatur scheme 6 cogdh group pair prime order p suppos user privat key x public key v verifi n signatur batch use techniqu due bellar et al 6 1 pick random integ c n rang 0 b valu b b control error probabl discuss 2 comput 3 test g 2 v hmu coddh tupl accept n signatur reject otherwis theorem 33 6 show incorrectli accept n signatur probabl 1b henc verifi n signatur batch faster verifi one one note signer requir prove knowledg privat key take c sucient yield even faster batch veric 9 similar batch veric procedur use verifi quickli n signatur distinct messag issu public key 53 threshold signatur use standard secret share techniqu 33 signatur scheme give immedi robust toutofn threshold signatur 9 threshold signatur scheme n parti possess share privat key parti use share privat key produc share signatur messag complet signatur construct least share signatur avail robust toutofn threshold signatur scheme deriv signatur scheme follow central author gener publicpriv key pair let x 2 z p privat key public key central author pick random degre 1 polynomi user valu x share privat key author publish public key v n valu signatur messag 2 f0 1g need parti wish particip signatur gener publish share signatur loss gener assum user particip gener share anyon verifi share valid check g 2 codiehellman tupl share valid complet signatur recov mod fewer user abl gener signatur messag user use solv cocdh threshold scheme robust particip contribut bad partial signatur detect immedi sinc g codiehellman tupl note need trust third parti gener share privat key n user gener share privat key without help trust third parti use protocol due gennaro et al 23 6 conclus present short signatur base bilinear map ellipt curv signatur one element nite eld standard signatur base discret log dsa requir two element signatur much shorter current variant dsa secur show scheme existenti unforg chosen messag attack random oracl model assum comput diehellman problem hard certain ellipticcurv group gener signatur scheme instanti gap diehellman group co gdh group pair present two famili ellipt curv suitabl obtain short signatur rst base 36 famili nonsupersingular curv prime nite eld second use supersingular curv f 3 famili curv produc nbit signatur discret log problem curv reduc discret log problem nite eld size approxim 2 6n henc 1024bit secur get signatur size expect rst famili curv nonsupersingular curv one use short signatur 171bit signatur 1024bit secur discuss end section 44 second famili curv supersingular curv f 3 use short signa ture problem discret log curv reduc discret log nite eld characterist 3 coppersmith algorithm use implement result 20 4 indic signatur scheme perform well signatur gener simpl multipl ellipt curv faster rsa signatur gener veric requir two comput bilinear map slower rsa signatur veric section 45 outlin open problem would enabl us get even better secur maintain length signatur hope futur work construct ellipt curv higher genu curv help solv problem acknowledg author thank steven galbraith alic silverberg moni naor victor shoup scott renfro paulo barreto doug kuhlman help discuss work r dstu x9 62 fip 1862 improb ellipt curv subexponenti discret log problem menezesokamotovanston algorithm construct ellipt curv prescrib embed degre fast batch veri exact secur digit signatur sign rsa rabin ellipt curv cryptographi aggreg veri short signatur weil pair wallet databas observ fast evalu logarithm field charaterist two exact secur full domain hash optim secur proof pss signatur scheme ghsattack odd characterist tate pair discret logarithm appli ellipt curv cryptosystem supersingular curv cryptographi implement tate pair cryptograph applic weil descent construct destruct facet weil descent ellipt curv secur distribut key gener discretelog base cryptosystem digit signatur scheme secur adapt chosenmessag attack iso 8583 financi transact card origin messag one round protocol tripartit diehellman separ decis diehellman diehellman cryptograph group ellipt curv implement finit field digit signatur algorithm ellipt function toward equival break diehellman protocol comput discret logarithm ellipt curv public key cryptosystem reduc ellipt curv logarithm logarithm finit field handbook appli cryptographi short program function curv short signatur secur dsa new explicit condit ellipt curv trace frreduct sign postcard messag recoveri signatur scheme base discret logarithm problem gap problem new class problem secur cryptograph primit postal revenu collect digit age supersingular abelian varieti cryptolog discret logarithm e arithmet ellipt curv algorithm resolut diophantin equat abelian varieti finit field tr ctr meiyuan zhao sean w smith david nicol aggreg path authent effici bgp secur proceed 12th acm confer comput commun secur novemb 0711 2005 alexandria va usa gyeong kang je hong park relationship squar pair plain pair inform process letter v97 n6 p219224 31 march 2006 giusepp atenies alfredo de santi anna lisa ferrara barbara masucci provablysecur timebound hierarch key assign scheme proceed 13th acm confer comput commun secur octob 30novemb 03 2006 alexandria virginia usa giusepp atenies susan hohenberg proxi resignatur new definit algorithm applic proceed 12th acm confer comput commun secur novemb 0711 2005 alexandria va usa giusepp atenies jan camenisch breno de medeiro untrac rfid tag via insubvert encrypt proceed 12th acm confer comput commun secur novemb 0711 2005 alexandria va usa