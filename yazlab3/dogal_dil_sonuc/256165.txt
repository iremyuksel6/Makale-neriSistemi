data structur effici broker implement profus text databas internet becom increasingli hard find use databas given queri attack problem sever exist propos system employ broker direct user queri use local databas summari inform avail databas summari inform must effect distinguish relev databas must compact allow effici access offer evid one broker gloss effect locat databas interest even system hundr databas examin perform access gloss summeri two promis storag method grid file partit hash show method tune provid good perform particular workload within broad rang workload discuss tradeoff two data structur side effect work show grid file broadli applic previous thought inparticular show vari polici use construct grid file provid good perform wide rang workload even store highli skew data b introduct last year seen explos amount inform avail onlin fall cost storag process commun contribut explos emerg infrastructur provid worldwid web associ applic increasingli key issu whether piec inform avail onlin result emerg area research concern broker system help user locat text databas like contain answer queri perform servic broker use summari inform avail databas broker must abl queri updat summari inform central problem broker design find represent summari inform effect abil select appropri inform resourc effici queri maintain gloss glossaryofserv server 17 18 one broker keep databas summari choos promis databas given queri initi studi gloss encourag work partial support arpa contract f336159311339 inria rocquencourt 78153 le chesnay franc email anthonytomasicinriafr z comput scienc depart stanford univers stanford ca 943052140 usa email x current address trident system sunnyval ca usa email cluetridmicrcom depart k55801 ibm almaden research center 650 harri road san jose ca 951206099 usa email schwarzalmadenibmcom lauraalmadenibmcom experi small number databas indic although gloss summari order magnitud smaller inform summar contain enough inform select best databas queri paper show gloss summari employ represent summari inform larg scale system par ticular offer evid gloss effect locat databas interest even system hundr databas suggest appropri data structur store larg scale gloss summari experi two data structur partit multiattribut hash grid file partit hash offer best averag case perform wide rang workload number hash bucket chosen correctli howev grid file perform well grow grace number size summari increas grid file develop store spatial data typic employ data fairli uniformli distribut gloss summari store highli skew show vari split polici use construct grid file provid good perform wide rang workload even store highli skew data thu side effect work demonstr grid file gener applic previous believ provid explor effect differ split polici grid file perform summari paper studi emerg problem construct distribut inform retriev system name perform broker access updat summari inform section 2 review gloss represent summari inform section 3 discuss glosss effect larg number databas next four section focu choos storag method summari inform section 4 discuss issu involv choos storag method describ altern section 5 introduc idea use grid file store gloss summari describ variou split polici manag grid file growth present simul studi grid file perform rang workload sever split polici section 6 examin partit hash altern method effici store gloss summari section 7 compar result two storag method explain recommend grid file section 8 posit work respect work broker last section summar result conclus provid idea futur work glossglossaryofserv server section briefli describ gloss help user choos databas queri evalu user first submit queri gloss obtain rank databas accord potenti use given queri inform use gloss produc rank consist vector indic mani document databas contain word databas vocabulari count total number document databas 17 summari inform much smaller complet content databas approach scale well number avail databas increas tabl 1 show portion gloss summari two databas row correspond word column databas exampl word inform appear 1234 document databas db 1 30 document databas db 2 last row tabl show total number document databas databas db 1 1234 document databas db 2 1000 document rank databas given queri gloss estim number document match queri databas gloss produc estim gloss summari varieti way one possibl gloss assum queri word appear docu databas word db 1 db 2 inform 1234 retriev document 1234 1000 tabl 1 part gloss summari two databas ment follow independ uniform probabl distribut estim number document match queri databas accordingli exampl queri inform retriev expect number match db 1 use gloss summari inform tabl expect number match db 2 9 gloss would return db 1 promis databas queri follow db 2 sever estim function given 18 3 effect gloss given set candid databas set queri explor abil gloss suggest appropri databas queri origin gloss studi 17 18 test glosss abil select among six databas sure gloss would use larg scale broker scale number databas two order magnitud section describ set experi demonstr gloss select relev databas effect among larg set candid present metric evalu close list databas suggest gloss correspond optim list evalu gloss base metric experi use data complet set unit state patent 1991 patent issu describ entri includ variou attribut eg name patent owner issu date well text descript patent total size patent data 34 gigabyt divid patent 500 databas first partit fifti group base date issu divid group ten subgroup base high order digit subjectrel patent classif code partit scheme gave databas rang size order magnitud least somewhat differenti subject properti one would expect see real distribut environ test queri use set 3719 queri submit inspec databas offer stanford univers folio boolean inform retriev system inspec patent databas cover similar rang technic subject expect fair number hit patent data queri boolean conjunct one word eg microwav interferomet document consid match queri contain word conjunct test glosss abil locat databas greatest number match docu ment compar recommend omnisci databas select mechan implement use fulltext index content 500 patent databas queri found exact number match document databas use fulltext index rank databas accordingli compar rank rank suggest gloss calcul variou valu n ratio total number match document top n databas recommend gloss total number match document n best databas accord ideal rank metric normal cumul mean std dev 9 0764 0299 tabl 2 normal cumul recal 500 databas inspec trace recal approach 10 n approach 500 number databas interest n small metric meaning queri match document databas elimin queri reduc number queri sampl 3286 tabl 2 show result experi tabl suggest compar omnisci selector gloss reason job select relev databas averag find seventi percent document could found examin equal number databas ideal circumst gradual improv number databas examin creas larg standard deviat aris although gloss perform well major queri remain stubborn minor perform poor nev ertheless use gloss give dramat improv randomli select databas search fraction storag cost fulltext index felt initi result promis enough pursu use glosss represent summari inform rigor investig progress ideal would like use real set test databas instead one construct partit match set queri submit databas includ boolean disjunct well conjunct tri character queri gloss perform poorli studi impact number queri term effect metric includ exampl metric reveal whether match document scatter thinli across mani databas concentr larg clump would allow us measur correspond impact effect effect also measur use inform retriev metric 7 4 altern data structur gloss summari choic good data structur store gloss summari depend type frequenc oper gloss server gloss server need support two type oper effici queri process summari updat queri arriv gloss access complet set document frequenc associ queri keyword new updat summari arriv gloss updat data structur oper frequenc associ singl databas effici access databas might also need differ broker exchang databas summari develop expertis 32 allow user relev feedback 31 ask databas similar given databas two type oper pose conflict requir gloss data structur process queri gloss need fast access tabl word wherea handl frequenc updat gloss need fast access tabl databas thu ideal would like simultan minim access cost dimens gener howev cost word databas access trade consequ one must consid rel frequenc oper tri find polici minim overal cost unfortun rel frequenc word databas access difficult estim depend paramet number databas cover gloss intens queri traffic actual frequenc summari updat etc illustr tradeoff let us assum queri process frequent opera tion gloss server receiv 200000 queri request per day typic rate lyco worldwid web index 1 likewis let us assum updat databas summari day given scenario gloss cover 500 databas ratio access word access databas would 4001 data structur might therefor favor perform access word databas proport howev server receiv 350000 queri day cover differ number databas receiv updat frequent vastli differ ratio could occur therefor gloss need data structur tune adapt actual condit observ practic simpl data organ gloss cluster record accord associ word build index word eg spars b tree provid effici access word 17 thu yield fast queri process implement gloss use approach could adapt techniqu build invert file document eg8 42 37 6 howev approach support fast access databas updat summari exchang broker organ spatial data provid varieti techniqu appli gloss particular interest techniqu support partialmatch queri effici need access gloss record word databas treebas approach includ quad tree kd tree kdb tree 39 r tree 19 r tree 34 bv tree 15 well suit type access answer partialmatch queri might follow mani path root tree leav similar problem aris techniqu like one base z order 29 contrast directori structur grid file 26 address scheme partit multiattribut hash 22 make well suit answer partialmatch queri 5 use grid file gloss section describ grid file 26 use store gloss summari describ seri experi explor perform show tune grid file favor access summari inform word databas 51 grid file basic grid file consist data block store disk contain actual data record directori map multidimension key data block gloss twodimension word databas identifi pair initi one data block directori consist singl entri point data block record insert data block becom full split two block grid file directori chang reflect 1 lyco access httplycoscscmuedu directori db1 db6 ostrich db3 2 data block directori db1 db3 db6 directori db1 db3 db6 data block data block z z 1 2 llama db5 5 data block data block buffalo db2 2 llama db5 5 llama db5 5 z ostrich db3 2 data block figur 1 success configur grid file record insert split data block figur 1 show grid file data block capac two record 1 insert two record grid file llama db 5 5 zebra db 1 2 one data block fill capac contain two record one directori entri point data block insert record ostrich db 3 2 locat data block record belong first read directori entri correspond word ostrich databas db 3 sinc data block full split split data block differ databas differ word 2 split data block databas record databas rang go one block record databas db 4 rang go block also split grid file directori contain two entri one point data block insert record buffalo db 2 2 first locat data block record belong look directori find pointer associ rang db 1 db 3 z correspond data block data block alreadi two record ostrich db 3 2 insert new tupl caus data block overflow 3 split data block word reflect split directori creat new row first row directori correspond word rang second word rang n z thu overflow data block split one block record buffalo db 2 2 anoth block record ostrich db 3 2 zebra db 1 2 note directori entri correspond databas rang db 4 point data block overflow thu need split yet two directori entri form region region may contain number directori entri alway convex grid file refer divis directori entri region partit region region exampl directori contain singl partit locat portion directori correspond record look keep one scale per dimens grid file scale onedimension array indic partit taken place dimens exampl word scale grid file configur 3 z correspond databas scale db 52 split block rule use decid split data block call split polici split polici use adjust overal cost use grid file store summari inform goal find evalu split polici easili parameter support observ ratio frequenc word databas access describ two extrem split polici character endpoint spectrum split behavior introduc three addit parameter polici adjust minim overal cost insert record gloss grid file first find block record belong use grid file directori record fit block insert 2 otherwis block must split either divid two word divid two databas split databas tend benefit access databas wherea split word tend benefit access word choic split dimens therefor basic tool control rel access cost limit growth grid file directori howev alway look way split block take advantag preexist partit directori 3 one entri grid file directori map overflow block region directori contain least one partit either word databas region either side partit nonempti use one preexist partit split block without introduc new entri directori one partit exist favor databas word multipl partit exist singl dimens choos one split block nearli half see section 54 variat polici reduc amount unus space block precis figur 2 show basic algorithm insert record grid file line 1 comput region block record insert accord databas word scale grid file directori line 2 attempt insert record overflow insert succe otherwis overflow block line 5 check region record insert partit databas scale partit region divid half along partit line record block region redistribut old new block new block assign new region process elimin partit region creat new region line 78 word scale qualifi partit line 10 need creat one introduc new row column directori tabl 3 describ sever polici choos split dimens dbalway polici alway attempt split block databas thu favor access databas access word convers wordalway polici alway attempt split word thu favor access word access databas two extrem lie spectrum possibl bound polici allow databas scale grid file directori split 2 compress content block grid file appli method use store spars matric effici 30 use method 42 compress invert file exampl method effect increas capac disk block term number record hold 3 sever altern organ grid file directori control growth make proport data size altern organ includ regionrepresent directori br 2 directori 3 2level directori organ 20 show implement directori disk yet explor techniqu would work environ 1 comput region block record 2 record fit block 3 insert record 4 els 5 usabl partit databas scale 6 divid region half databas scale 7 els usabl partit word scale 8 divid region half word scale 9 els 10 split directori 11 divid region chosen scale 12 insert record figur 2 algorithm insert record grid file gloss polici split dimens dbalway databas wordalway word bound dbsplit bound databas els word probabilist random probbound databas els word prepartit like wordalway prepartit databas tabl 3 differ polici choos split dimens bound time resort split word thu allow split databas favor access databas put upper bound number block read might need access record word bound set infin bound behav dbalway wherea bound set zero bound behav wordalway probabilist polici split databas probabl probbound unlik bound polici favor split databas initi polici allow choic split dimens made independ split prepartit polici work like wordalway except databas scale directori prepartit region databas insert see seed databas scale evenlyspac partit improv perform size region b db c db number avail databas note scale chosen may possibl split block scale instanc may choos split block databas scale scale may singl valu associ block consequ everi record block databas valu case automat split scale 53 metric evalu evalu polici tabl 3 implement simul grid file c ibm risc6000 workstat ran experi use 200 500 patent databas describ section 3 around 13 gigabyt data result grid file 200 column one 200 databas 402044 row one distinct word appear patent record file contain 2999676 total record four byte per entri assum disk block could hold 512 record evalu variou polici base follow metric db split number split occur databas scale word split number split occur word scale total block total number block grid file exclud scale directori blockfil factor ratio use block space total block space measur indic effect data pack block directori size number entri databas scale grid file directori time number entri word scale measur indic overhead cost grid file directori four byte would need directori entri actual implement averag word databas access cost number block access read record singl word databas ie entir row column grid file averag word databas correspond scale expans factor word databas ratio number block access read record singl word databas minimum number block would requir store mani record averag word databas correspond scale metric compar access cost use grid file best possibl access cost could achiev note sinc assum 512 record store block 200 databas record singl word alway fit one block thu minimum number block requir word one expans factor word alway equal averag word access cost averag trace word access cost expans factor trace word similar word scale metric averag word occur repres set patent queri instead word measur use 1767 queri issu real user novemb 1994 fulltext patent databas access http townhallorgpatentpatenthtml queri contain 2828 word appear least one 200 databas count repetit repres less one percent total vocabulari queri word trace trace word occur averag 9996 databas compar averag 746 word thu trace word occur rel high frequenc databas weight trace averag cost metric give overal cost use grid file given observ ratio word databas access calcul multipli wordtodatabas access ratio averag trace word access cost ad averag databas access cost exampl ratio word databas access observ 1001 weight averag cost 100 averag word access cost averag databas access cost although choic split polici major factor determin behavior grid file perform also sensit number subtl variat gloss summari map onto grid file therefor discuss variant move main bodi result 54 map gloss grid file insert gloss summari data databas grid file one must first defin map word integ correspond row grid file explor two altern map alpha freq alpha map word databas gather singl alphabet order list assign sequenti integ identifi freq map set word order frequenc instead alphabet frequenc word sum frequenc word across summari 4 differ map two effect first although vast major row exactli one record freq map cluster row multipl record upper part grid file top row grid file contain record everi databas alpha map row multipl record spread throughout grid file contrast distribut record across column grid file fairli uniform second effect due fact artifact construct summari databas order alphabet alpha map therefor word id frequenc pair insert increas nonsequenti wordidentifi order contrast insert essenti random order sinc word order alphabet identifi order frequenc similar consider pertain order databas insert grid file consid sequenti order seq random order random seq case databas 1 insert databas identifi 1 databas 2 databas identifi 2 etc random order map permut randomli seq order correspond static load grid file collect summari random order correspond dynam addit delet summari inform updat exchang among broker practic one could approxim freq map use predefin map tabl rel common word assign identifi order remain infrequ word map split averag cost total blockfil directori word databas polici word db word db block factor size alpha seq middl 119 117 10492 10969 10859 54 13923 alpha seq right 138 115 8355 11589 8584 68 15870 alpha random middl 204 85 6103 15940 9258 63 17340 alpha random right 187 120 8734 13344 10586 55 22440 freq seq right 118 167 5841 10836 8750 67 19706 random middl 194 127 6914 12830 9737 60 24638 freq random right 167 142 8329 11877 10398 56 23714 tabl 4 dbalway polici differ map split option consequ seq order insert data grid file determinist particular notic default mean choos partit case overflow bad one sinc databas insert left right lefthand member pair split block never revisit subsequ insert alway insert righthand block thu databas scale split line 11 algorithm figur 2 would advantag choos rightmost valu block valu split furthermor given choic preexist partit use split block would advantag choos rightmost partit split line 6 algorithm examin effect parameter algorithm figur 2 choos either rightmost valu partit right middlemost valu partit middl per origin algorithm ran experi eight combin map split option dbalway wordalway bound probabilist polici tabl 4 show result dbalway polici conclus draw appli polici well note combin option chosen signific effect perform averag word access cost worst combin option 18 time averag word access cost best combin averag databas access cost factor 15 blockfil factor vari worst case 046 best case 068 tabl show combin frequenc order assign word identifi sequenti insert databas right option block split achiev lowest access cost word databas blockfil factor slightli poorer best observ therefor use combin subsequ experi base paramet experi summar tabl 5 55 comparison split polici begin comparison split polici examin basic behavior five polici tabl 6 7 provid perform measur polici parameter polici probabilist prepartit bound present data singl repres paramet valu defer discuss paramet valu later section start wordalway polici sinc behavior regular start experi singl empti block databas insert block overflow word scale split point balanc result block time 200 databas insert word scale split 8878 time result grid file data block therefor contain complet frequenc inform number word ie multipl row paramet valu word row 402044 record 2999676 record per block 512 databas insert seq word insert freq block divis right tabl 5 paramet valu base set experi see section 54 descript paramet split total blockfil directori polici word db block factor size probabilist 05 202 101 8887 66 20402 prepartit bound tabl perform measur base experi five polici introduc section 52 grid file number word data block depend number databas correspond word appear expect averag word access cost one block read clearli polici favor one possibl access word access record databas howev everi block must read averag databas access cost therefor equal total number block file polici minim size grid file directori sinc reduc directori onedimension vector pointer data block next consid dbalway polici measur show databas scale split 167 time howev size grid file far exce capac 167 block split must occur word well cf section 52 split take advantag exist polici avg word avg db expans factor avg trace cost dev cost dev db dev word cost dev wordalway 100 000 887800 000 71009 115257 100 000 prepartit bound tabl 7 perform measur base experi five polici introduc section 52 e word access cost fraction databas bound prepartit probabilist figur 3 averag word access cost bound chang partit word scale exist otherwis word scale directori split split word scale occur 118 time experi lead averag databas access cost 10836 polici 884 time minimum number block must read best averag databas access cost polici measur howev 5841 worst averag word access cost frequent occur word trace queri cost even higher point comparison two extrem dbalway wordalway polici measur probabilist polici parameter word databas scale would chosen equal probabl distribut data uniform two scale polici would averag split scale number time tabl show howev data polici behav much like dbalway polici polici skew natur data ie vastli larger number distinct valu word scale make mani attempt split databas scale unsuccess effect databas scale quickli becom satur larg number split must occur word scale paramet valu probabilist polici give poorer averag databas access cost slightli better averag word access cost compar dbalway polici differ pronounc averag trace word access cost blockfil factor vari littl figur 3 4 show three tunabl polici bound prepartit probabilist behav tune paramet vari order graph result common set axe express paramet fraction total number databas thu studi 200 databas xaxi valu 05 figur repres paramet valu 10 10 bound prepartit probabilist polici respect figur 5 reveal hidden cost bound polici uptotenfold inflat size gridfil directori paramet valu midway extrem occur bound polici forc split databas occur earli possibl insert process wherea two polici distribut evenli bound polici therefor e databas access cost fraction databas bound prepartit probabilist figur 4 averag databas access cost bound changes500001500002500003500000 02 04 06 08 1 directori size fraction databas bound prepartit probabilist figur 5 directori size function polici paramet weight averag cost fraction databas bound 1001 prepartit 1001 probabilist 1001 figur weight averag cost wordtodatabas access ratio 1001 rel split word occur earli insert process region split typic one databas wide bound reach mani split word requir subdivid remain portion grid file introduc number addit directori entri equal bound valu polici number split word group databas fairli constant across width grid file total number split word henc directori size much smaller 56 weight averag cost tabl 7 present clear winner term overal polici choic perform polici reduc singl number ratio access word access databas determin appropri weight overal access cost calcul wordtodatabas access ratio 1001 figur 6 show weight averag cost polici across entir paramet rang 5 lowest point set curv repres best choic polici paramet access ratio correspond probabilist polici paramet 025 best select variou ratio given tabl 8 9 weight averag cost weight trace averag cost respect access word predomin wordalway give best perform access databas common access word common dbalway prefer polici probabilist polici appropri paramet domin choic 5 wordalway dbalway polici repres point probabilistic0 probabilistic1 respect weight avg cost blockfil factor 11 dbalway 167 67 10001 wordalway 9878 66 tabl 8 polici choic minim weight averag cost differ wordtodatabas access ratio weight trace avg cost blockfil factor 11 dbalway 213 67 10001 wordalway 9878 66 tabl 9 polici choic minim weight trace averag cost differ wordto databas access ratio 57 bound access cost databas summar gloss grow gradual time weight access cost grid file must grow well use recommend polici tabl 8 9 increas cost distribut word databas access cost minim weight averag cost respons time given queri howev depend word access cost term contain increas without bound grid file grow respons time growth unaccept bound prepartit polici use put upper limit word access cost case queri cost depend number term queri upper limit word access cost polici determin paramet valu prepartit polici word access cost exactli paramet valu eg cost word prepartition10 bounded10 polici give upper limit averag cost lower 7 mani word cost reach bound howev tabl 6 7 section 55 show penalti improv averag word access cost fourfold increas directori size databas averag access cost correspond tradeoff valu paramet deduc figur 3 4 5 section 55 58 experi number experi complet evalu grid file storag method gloss summari particular sinc must abl maintain updat summari effici test polici simul updat also ran experi smaller block size see affect result detail found 38 result gener accept serv differenti variou polici henc repeat 6 use partit hash gloss section analyz partit multiattribut hash 22 altern techniqu gloss access record effici word databas first describ partit hash handl gloss summari show experiment result perform use data section 5 61 partitionedhash basic partit hash gloss record store hash tabl consist bucket bucket identifi string b bit b w b bit associ word attribut record b remain bit databas attribut record hash function hw h db map word databas string b w b db bit respect record w db f word w databas db store bucket address hw wh db db form juxtaposit hw w h db db bit string access record word w search bucket whose address start hw w access record databas db search bucket whose address end h db db 6 hw hash function map word integ 0 2 bw gamma 1 given word n 0 hw map first translat word w integ 41 take bi w mod 12 bw c 0618033988722 similarli h db hash function map databas number integ 0 2 b db gamma 1 given databas number db h db map integ bi db mod 12 b db c initi assign one disk block per hashtabl bucket bucket overflow assign disk block given fix valu b vari valu b w b db let b w greater b db favor access gloss record word sinc fewer bucket associ word databas gener consid configur b w less b db sinc number word much higher number databas model record access frequent word databas follow section analyz experiment impact b w b db paramet perform partit hash gloss 62 experiment result analyz perform partit hash gloss ran experi use 2999676 record 200 databas section 5 experi assum 512 record fit one disk block bucket span one block averag want bucket 70 full averag therefor around bucket dedic approxim bit bucket address section 7 show result valu b access record word w must access 2 b db bucket address prefix hw w access bucket involv access one disk block depend whether bucket overflow figur 7 show averag word access cost function b w expect number block per word decreas b w increas sinc number bucket per word decreas convers figur 8 show averag databas access cost increas steepli b w increas extrem case b b db 0 need access everi block everi bucket hash tabl result expans factor databas around 77328 7 contrast b 6 improv scheme appli methodolog 12 use gray code achiev better perform partialmatch queri 7 smarter bucket organ help allevi situat sort record databas insid bucket exampl howev bucket hash tabl would still examin get record databas weight avg cost blockfil factor tabl 10 choic b w b db minim weight averag cost differ word todatabas access ratio averag around 1124 time mani block databas would need record cluster databas partit hash distribut record uniformli across differ bucket exampl record correspond databas db belong bucket address suffix h db db surprisingli characterist partit hash lead poor blockfil factor averag blockfil factor differ valu b w b db mostli higher 06 mean averag block least 60 full high valu blockfil factor partli due fact last block bucket partial empti block bucket complet full measur perform partit hash access word far comput averag valu variou paramet word combin vocabulari 200 databas figur 7 also show curv use word queri trace section 5 averag trace word access cost similar averag word access cost two aspect partit hash experi explain behavior firstli number block read word w depend number record associ w access 2 b db bucket prefix hw w consequ access similar number block word exampl b number block access per word rang 66 82 secondli 2 bw possibl differ word access cost hash function hw map word 2 bw differ valu trace word w contribut random sampl set 2 bw possibl cost furthermor number word queri trace 2828 word occurr set 1304 differ word signific respect number differ access cost valu b use experi determin best valu b w b db observ wordtodatabas access ratio comput weight averag cost differ access ratio section 56 figur 9 show result 1001 wordtodatabas access ratio ie access word 100 time frequent access databas ratio best choic b weight averag cost around 184451 tabl 10 summar result differ access ratio tabl 11 show correspond result trace word 8 7 compar grid file partit hash store sum mari comparison tabl 8 9 tabl 10 11 show ideal choic paramet either structur partit hash grid file competit data structur store gloss summari grid file outperform partit hash word databas equal frequent howev number practic reason believ grid 8 1 23 studi analyt deriv valu bw bdb would minim number bucket access given queri distribut averag word access cost 333 averag trace word access cost 222 figur 7 averag word access cost function b w averag databas access cost 3 figur 8 averag databas access cost function b w weight trace avg cost blockfil factor tabl 11 choic b w b db minim weight trace averag cost differ wordtodatabas access ratio weight averag cost 1001 333 weight trace averag cost figur 9 weight averag cost wordtodatabas access ratio 1001 function b w file better suit applic firstli get optimum perform partit hash critic choos total number bucket correctli instanc suppos overestim number record gloss summari set number bit identifi bucket instead experi section 6 tabl 12 show expect averag blockfil factor drop half valu see tabl 10 twice mani bucket number record best averag access cost also deterior exampl weight averag cost 1001 wordtodatabas access ratio grow 2624 altern underestim number record gloss summari set obtain result tabl 13 case averag blockfil factor higher case howev averag access cost significantli higher exampl 1001 wordtodatabas access ratio weight averag cost experi show crucial perform partit hash choos right number bucket hash tabl sinc expect databas grow time even initi optim choic degrad databas size increas contrast grid file grow grace dynam version multiattribut hash like one 24 solv problem expens complic algorithm result techniqu close relat grid file secondli partit hash tradeoff word databas access cost fix time divis hashvalu bit made way correct error rebuild hash tabl contrast valu probabilist split paramet grid file dynam tune although chang paramet may abl correct unfortun split exist grid file least futur split decis improv final partit hash treat word regardless mani databas occur likewis treat databas regardless number word contain contrast cost read row column grid file tend proport number record contain weight avg cost blockfil factor tabl 12 choic b w b db minim weight averag cost differ word todatabas access ratio weight avg cost blockfil factor 1001 9 3 262305 072 tabl 13 choic b w b db minim weight averag cost differ word todatabas access ratio 8 relat work mani approach solv text databas discoveri problem propos 27 33 fall two group distribut brows system eg 4 25 queri system eg 21 14 10 distribut brows system user follow predefin link data item wealth inform access way link must maintain hand therefor frequent date nonexist find inform frustrat say least address problem increas number system allow user queri collect metainform avail databas eg 36 2 28 content router 35 11 metainform typic provid sort summari content databas thu system fit gener concept broker cours differ system use differ represent summari inform implement vari substanti scale grow number avail databas system index document titl gener small fraction document eg worldwid web worm 9 veronica 14 approach sacrific import inform content databas system keep succinct sometim humangener summari content databas eg aliweb system 10 wai 21 humangener summari often date sinc databas chang summari gener english text summari wai may captur inform user want gloss attack problem use word databas summari automat updat summari databas chang glossbas metainform queri facil implement server 11 system architectur rang central server lyco 12 yahoo 13 collect broker mediat indi shorthand distribut index 10 9 harvest 5 broker know subset data sourc special broker keep informa 9 worldwid web worm access httpwwwcscoloradoeduhomemcbryanwwwwhtml access httpwebnexorcoukaliwebdocaliwebhtml 11 gloss access httpglossstanfordedu 12 lyco access httplycoscscmuedu 13 yahoo access httpyahoostanfordedu tion broker 32 whoi 40 allow broker indexserv whoi exchang inform sourc index forward queri receiv knowledg broker 13 similarli allow site forward queri like sourc base case inform receiv sourc past recent 7 appli infer network tradit inform retriev text databas discoveri problem approach summar databas use document frequenc inform term type inform gloss keep databas togeth vers collect frequenc differ term infer network use inform rank databas given queri mani propos summar databas content use summari answer queri perform studi area 32 includ simul studi effect broker exchang content summari concern content summari cost store exchang 7 studi infer network approach experiment likewis 17 18 examin effect storag effici gloss without worri cost access updat represent summari inform distribut text databas clearli import broad rang queri system paper goe beyond exist work address storag inform studi perform access updat inform 9 conclus investig report paper repres import step toward make gloss use tool larg scale inform discoveri show gloss fact effect distinguish among text databas larg system hundr databas identifi partit hash grid file use data structur store summari inform gloss requir show partit hash offer best averag case perform wide rang workload perform degrad dramat amount data store grow beyond initi estim grid file tune perform well requir initi assumpt ultim size summari inform examin characterist gloss summari make polici split block grid file critic factor determin ultim row column access cost evalu sever specif polici use databas contain us patent offic data investig show expect ratio row access column access high greater 10001 experi best polici alway split word exist distribut inform retriev servic exceed high ratio ratio low updat exceed queri best polici split databas whenev possibl extrem polici split databas given probabl use achiev desir balanc row column access cost given probabl expect number databas split ds polici perform better polici prepartit databas scale ds time alway divid databas scale ds time import firm bound queri cost polici prepartit divid databas scale fix number time use work need explor util gloss summari represent summari inform broker effect studi realist environ real databas match queri queri involv disjunct well conjunc tion work done storag summari well unfortun aspect grid file need rel larg directori techniqu report control directori size 3 must examin whether techniqu applic highlyskew grid file gener gloss summari compress techniqu 42 would signific impact perform figur report final build oper gloss server larg number real databas way truli determin right ratio word databas access cost broader front mani issu remain studi vastli expand number scope onlin inform sourc make clear central solut databas discoveri problem never satisfactori show need explor architectur base hierarchi 16 network broker r optim partialmatch retriev field independ specifi inform broker share knowledg heterogen distribut system new algorithm comput join grid file harvest scalabl fast increment index fulltext inform retriev search distribut collect infer network optim dynam invert index mainten distribut index scalabl mechan distribut inform retriev distribut index autonom internet servic content rout network wai server multiattribut hash use gray code inform retriev system network resourc veronica servic gener solut ndimension btree problem gener gloss vectorspac databas broker hierarchi effect gloss textdatabas discoveri problem precis recal gloss estim databas discoveri dynam index structur spatial search implement grid file design concept experi inform system corpor user wide area inform server art comput program volum optim partialmatch retriev prospero file system global file system base virtual system model grid file adapt internet resourc discoveri servic distribut activ catalog metadata cach descript name servic class data structur associ search spars matrix technolog introduct modern inform retriev scalabl comparison internet resourc discoveri approach content rout system distribut inform server queri network autonom databas increment updat invert list text document retriev data structur effici broker implement principl databas knowledgebas system architectur whoi file organ databas design effici index techniqu fulltext databas system tr implement grid file design concept experi multiattribut hash use gray code principl databas knowledgebas system vol file organ databas design optim dynam invert index mainten distribut index content rout distribut inform server effect gioss text databas discoveri problem increment updat invert list text document retriev search distribut collect infer network gener solut ndimension btree problem perform issu distribut sharednoth informationretriev system art comput program volum 2 3rd ed grid file optim partialmatch retriev field independ specifi precis recal italicgiossital estim databas discoveri introduct modern inform retriev class data structur associ search rtree internet resourc discoveri servic new algorithm comput join grid file rtree effici index techniqu full text databas fast increment index fulltext inform retriev gener gloss vectorspac databas broker hierarchi ctr ray r larson distribut resourc discoveri use z3950 build crossdomain inform server proceed 1st acmieeec joint confer digit librari p5253 januari 2001 roanok virginia unit state athman bouguettaya boualem benatallah mourad ouzzani lili hendra webfindit architectur system queri web databas ieee internet comput v3 n4 p3041 juli 1999 jian xu yinyan cao eepeng lim weekeong ng databas select techniqu rout bibliograph queri proceed third acm confer digit librari p264274 june 2326 1998 pittsburgh pennsylvania unit state hosain h newton rahman dynam adapt multikey index distribut databas system proceed 9th wsea intern confer comput p16 juli 1416 2005 athen greec lui gravano hector garciamolina gener gloss vectorspac databas broker hierarchi proceed 21th intern confer larg data base p7889 septemb 1115 1995 jame c french allison l powel metric evalu databas select techniqu world wide web v3 n3 p153163 2000 athman bouguettaya boualem benatallah brahim medjah mourad ouzzani lili hendra adapt webbas databas commun inform model internet applic idea group publish hershey pa ouzzani b benatallah bouguettaya ontolog approach inform discoveri internet databas distribut parallel databas v8 n3 p367392 juli 2000 lui gravano hctor garcamolina anthoni tomas gloss athman bouguettaya boualem benatallah lili hendra mourad ouzzani jame beard support dynam interact among webbas inform sourc ieee transact knowledg data engin v12 n5 p779801 septemb 2000 diego puppin fabrizio silvestri domenico laforenza querydriven document partit collect select proceed 1st intern confer scalabl inform system p34e may 30june 01 2006 hong kong allison l powel jame c french compar perform collect select algorithm acm transact inform system toi v21 n4 p412456 octob