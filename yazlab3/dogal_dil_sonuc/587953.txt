global price updat help period global updat dual variabl shown yield substanti speed advantag implement pushrelabel algorithm maximum flow minimum cost flow problem paper show context bipartit match assign problem global updat yield theoret improv well bipartit match pushrelabel algorithm use global updat run obigsqrt n mfraclogn2mlog nbig time match best bound known perform wors factor sqrt n without updat similar result hold assign problem algorithm assum integ cost rang cldot c run time osqrt n mlognc match best costscal bound known present b introduct pushrelabel method 10 13 best current known way solv maximum flow problem 1 2 18 method extend minimum cost flow problem use cost scale 10 14 implement techniqu proven competit wide class problem 11 context idea period global updat node distanc price critic obtain best run time practic sever algorithm bipartit match problem run karp 15 first propos algorithm achiev bound karzanov 16 even tarjan 5 prove block flow algorithm dinitz 4 run time appli bipartit match problem two phase algorithm base combin pushrelabel method 13 augment path method 7 propos 12 19 feder motwani 6 give graph compress techniqu combin algorithm dinitz yield log n algorithm best time bound known problem relev theoret result assign problem follow best current known strongli polynomi time bound onm log n achiev classic hungarian method kuhn 17 assumpt input cost integ rang gabow tarjan 9 use cost scale block flow techniqu obtain nm lognc time algorithm algorithm use idea similar global updat run time appear 8 twophas algorithm run time appear 12 19 first phase algorithm base pushrelabel method second phase base success augment approach show algorithm base pushrelabel method global updat match best bound bipartit match assign problem result base new select strategi minimum distanc strategi bipartit match case minimum price chang assign problem case also prove algorithm perform significantli wors without global updat similar result obtain maximum minimum cost flow network unit capac result step toward theoret justif use global updat heurist practic paper organ follow section 2 give definit relev bipartit match maximum flow section 3 outlin pushrelabel method maximum flow show applic bipartit match section 4 present time bound bipartit match algorithm global updat section 5 show without global updat algorithm perform poorli section 6 give definit relev assign problem minimum cost flow section 7 describ costscal pushrelabel method minimum cost flow appli method assign problem section 8 9 gen denot number node edg respect eral bipartit match result assign problem section 10 give conclus suggest direct research 2 bipartit match maximum flow e undirect bipartit graph let match g subset edg e node common cardin match jm j bipartit match problem find maximum cardin match convent assum maximum flow problem follow let v e digraph integervalu capac ua associ arc 2 2 e assum r denot revers arc pseudoflow satisfi follow 2 e antisymmetri constraint notat conveni often take advantag fact mention arc nonneg flow everi case antisymmetri constraint satisfi simpli set revers arc flow appropri valu pseudoflow f node v excess flow v denot e f v defin v preflow pseudoflow properti excess everi node except nonneg node v 6 e f v 0 call activ flow pseudoflow f node v 2 v e f preflow f flow activ node maximum flow problem find flow maxim e f 3 pushrelabel method bipartit match reduc bipartit match problem maximum flow problem standard way breviti mention forward arc flow network arc give unit capac revers arc capac zero given instanc bipartit match problem construct instanc delta maximum flow problem set ffl node v 2 x place arc v e ffl node v 2 place arc v e sometim refer arc endpoint eg v w ambigu multipl arc v w altern refer v tail w head precis inconveni given match instanc bipartit match instanc correspond maximum flow instanc revers arc shown figur 1 reduct bipartit match maximum flow ffl edg fv wg 2 e place arc v w e graph obtain reduct call match network note g match network integr pseudoflow f arc 2 e ua fa 2 f0 1g inde integr flow g interpret conveni match g match exactli edg correspond arc 2 x theta 1 wellknown fact 7 maximum flow g correspond maximum match g given pseudoflow f residu capac arc 2 e set residu arc e f contain arc 2 e fa ua residu graph graph induc residu arc distanc label function say distanc label valid respect pseudoflow f residu arc v w properti call admiss arc begin highlevel descript gener pushrelabel algorithm maximum flow special case match network algorithm start zero flow set fs initi distanc label algorithm set algorithm appli push relabel oper order current pseudoflow flow push relabel oper describ preserv properti current pseudoflow f preflow current distanc label valid respect f pushv w send unit flow v w end relabelv replac dv min vw2ef f end figur 2 push relabel oper push oper appli admiss arc v w whose tail node v activ consist push unit flow along arc ie increas fv w one increas e f w one decreas e f v one relabel oper appli activ node v tail admiss arc consist chang vs distanc label v tail least one admiss arc ie set dv largest valu preserv valid distanc label see figur 2 analysi pushrelabel method base follow fact see 13 detail note arc match network unit capac thu pushv w satur arc v w 2 distanc label decreas comput 3 relabelv increas dv 4 number relabel oper comput per node 5 work involv relabel oper onm node v relabel time comput segment number push v degreev 7 number push oper comput onm lemma impli pushrelabel algorithm run onm time given work involv select next oper appli exceed work involv appli oper easili achiev use simpl data structur describ 13 4 global updat minimum distanc discharg algorithm section specifi order push relabel oper yield certain desir properti also introduc idea global distanc updat show algorithm result oper order global updat strategi run time node v w let dw v denot breadthfirstsearch distanc v w residu graph current preflow w unreach v residu graph dw v infinit set everi node v call global updat oper oper accomplish om work amount two breadthfirstsearch comput order oper use call minimum distanc discharg consist repeatedli choos activ node whose distanc label minimum among activ node admiss arc leav node push unit flow along admiss arc otherwis relabel node conveni denot gammaf simpli gamma minimum distanc label activ node respect pseudoflow f distanc label let gamma max denot maximum valu reach gamma algorithm far attain new maximum perform global updat oper analysi hing paramet k rang 2 k n chosen later divid execut algorithm four stage first two stage excess move final two stage excess reach sink return analyz first stage pair use follow lemma lemma 41 minimum distanc discharg algorithm use work period begin gamma first exce end gamma first exce j proof number relabel occur gamma max lie interv j 1 thu relabel push requir work observ global updat requir om work period oj gamma global updat complet proof lemma 41 allow us account period gamma nk algorithm expend okm work period studi behavior algorithm remaind execut introduc combinatori lemma special case wellknown decomposit theorem 7 see also 5 lemma 42 integr pseudoflow f 0 residu graph integr preflow f match network decompos cycl simpl path pairwis nodedisjoint except endpoint path path take one follow form ffl ffl node v e f v 0 node w e ff 0 w ffl node v e f v 0 lemma 42 allow us show gamma max outsid interv cover lemma 41 amount excess algorithm must process small lemma 43 gammaf k 2 total excess reach sink nk gamma 1 proof let f maximum flow g let f pseudoflow g f therefor decompos path lemma 42 gamma k valid distanc label respect f path activ node g f must contain least node particular excesstosink path lemma 42 contain least k node nodedisjoint except endpoint sinc g contain n2 node nk gamma 1 path sinc f maximum flow amount excess reach sink g f nk gamma 1 proof next lemma similar lemma 44 gammaf n k total excess node v nk gamma 1 lemma 43 lemma 44 show outsid interv cover lemma 41 total excess process algorithm 2nk gamma 1 complet bound work expend algorithm outsid interv use follow lemma fact om work take place consecut global updat deduc time suffic process excess outsid interv cover lemma 41 lemma 45 two consecut global updat oper least one unit excess reach sourc sink proof everi node v least one v v finit therefor immedi global updat oper least one admiss arc leav everi node definit global updat henc first unit excess process algorithm immedi global updat arriv relabel occur time bound minimum distanc discharg algorithm choos n balanc two term see minimum distanc discharg algorithm global updat run feder motwani 6 give algorithm run time produc com press version g bipartit graph adjac inform preserv asymptot fewer edg origin graph e dens graph consist origin node x well set addit node w edg fx yg appear e either fx yg 2 e g contain lengthtwo path x node w possibl show analogu lemma 42 hold graph path decomposit may nodedisjoint node w remain node x enough show minimum distanc discharg algorithm graph compress run log n time bound match bound feder motwani dinitz algorithm 1 initi establish jx j unit excess one node x 2 node x relabel onebyon v 2 x 3 e f jy j 31 unit excess move node v 2 x node w 2 32 w relabel 33 unit excess move w increas e f one 4 singl node x 1 e f relabel dx 1 2 5 1 6 n remark node v 2 v except one node dx node x 61 node excess except singl node x relabel onebyon 62 node 2 621 unit excess push node x 622 relabel 623 unit excess push node x 2 x 624 x relabel node still distanc label otherwis 63 7 excess push onebyon node x label figur 3 minimum distanc discharg execut bad exampl 5 minimum distanc discharg algorithm without global updat section describ famili graph minimum distanc discharg algorithm without global updat valu thetan show updat improv worstcas run time algorithm given n construct graph g follow g complet bipartit graph straightforward verifi graph edg note jx j jy j figur 3 describ execut minimum distanc discharg algorithm g match network deriv g time complic analysi possibl show everi execut minimum distanc discharg algorithm g straightforward verifi execut outlin process take place activ node minimum distanc label among activ node anoth import fact execut relabel chang distanc label two henc execut use thetanm work cours thetan 2 relabel 6 minimum cost circul assign problem given weight function c set edg defin weight sum weight edg assign problem find maximum cardin match minimum weight assum cost integ rang c 1 note alway make cost nonneg ad appropri number arc cost minimum cost circul problem adopt follow framework given graph e integervalu capac function addit capac function given integervalu cost ca arc 2 e assum ca gammaca r everi arc circul pseudoflow f properti e f everi node v 2 v absenc distinguish sourc sink account differ nomenclatur circul flow cost pseudoflow f given fa0 cafa minimum cost circul problem find circul minimum cost 7 pushrelabel method assign problem reduc assign problem minimum cost circul problem follow unweight case mention forward arc give unit capac revers arc zero capac obey cost antisymmetri given instanc delta assign problem construct instanc delta minimum cost circul problem ffl creat special node set ffl node v 2 x place arc v e defin cs ffl node v 2 place arc v e defin cv ffl edg fv wg 2 e place arc v w e defin cv cv w ffl place n2 arc e defin ct g obtain reduct interpret integr circul g match g bipartit match case straightforward verifi minimum cost circul g correspond maximum match minimum weight g given assign instanc assign problem instanc correspond minimum cost circul instanc given cost larg neg cost zero cost figur 4 reduct assign minimum cost circul price function function r given price function p reduc cost arc v w c p v ftg note arc e one endpoint u one endpoint complement u set arc whose tail node u constant ffl 0 pseudoflow f said ffloptim respect price function everi residu arc 2 e f ae pseudoflow f ffloptim f ffloptim respect price function p arc cost integ ffl 1n ffloptim circul optim given f p arc 2 e f admiss iff ae 2 e u c p ffl admiss graph graph induc admiss arc asymmetr definit ffloptim admiss natur context assign problem benefit complementari slack condit violat arc correspond match arc symmetr definit complementari slack violat omegagamma arc procedur mincostv e u c ffl 1n end figur 5 cost scale algorithm procedur refineffl f p f circul appli push relabel oper returnffl f p end figur 6 gener refin subroutin first give highlevel descript success approxim algorithm see figur 5 algorithm start begin everi iter algorithm divid ffl constant factor ff satur arc c p 0 iter modifi f p f circul fflffoptim respect p ffl 1n f optim algorithm termin number iter algorithm dlog ff nce reduc ffl task subroutin refin input refin ffl f p except first iter circul f ffloptim respect p output refin ffl circul f price function p f ffl 0 optim respect p first iter zero flow coptim respect zero price function everi simpl path residu graph length least gammanc standard result refin remain true gener refin subroutin describ figur 6 begin decreas valu ffl set f satur residu arc neg reduc cost convert f ffloptim pseudoflow inde 0optim pseudoflow subroutin convert f ffloptim circul appli sequenc push relabel oper preserv ffloptim gener algorithm specifi order oper appli next describ push relabel oper pushv w send unit flow v w end relabelv replac pv els replac pv max uv2ef f pu end figur 7 push relabel oper unitcapac case maximum flow case push oper appli admiss arc v w whose tail node v activ consist push one unit flow v w relabel oper appli activ node v oper set pv smallest valu allow ffloptim constraint name max vw2ef otherwis analysi cost scale pushrelabel algorithm base follow fact 12 14 scale iter 1 node price increas 2 everi relabel decreas node price least ffl 3 v 2 v pv decreas onffl 8 global updat minimum chang discharg algorithm section gener idea minimum distanc discharg global updat context minimum cost circul problem analyz algorithm embodi gener analyz singl execut refin simplifi notat make assumpt affect result assum price function ident zero begin iter analysi goe without assumpt requir condit achiev increas asymptot cost replac arc cost reduc cost set node price zero first step refin assumpt iter begin zero price function price chang node v iter gammapv analog match case defin denot maximum valu attain gammaf p far iter minimum chang discharg strategi consist repeatedli choos node v appli push relabel oper v weight context global updat take form set node price path ga everi excess deficit node v e f v 0 everi node reachabl ga node excess lie path amount modifi shortestpath comput done om time use idea dial work 3 perform global updat everi time gamma max increas least ffl sinc last global updat develop global updat implement heurist minimum cost circul problem 11 retrospect prove similar assign context oneprocessor hungarian search techniqu develop 8 use essenti argument unweight case analyz part algorithm execut gamma max small lemma 81 minimum chang discharg algorithm use period begin gamma first exce end gamma first exce j proof similar lemma 41 larg argument use unweight case gener true gammapv give bound breadthfirstsearch distanc v deficit residu graph let ef denot total excess pseudoflow f ie follow lemma analog lemma 42 lemma 82 given match network g circul g pseudoflow f g g decompos ffl cycl ffl path node u e f u 0 node v e f v 0 element decomposit pairwis nodedisjoint except endpoint path element carri one unit flow denot path node u node v decomposit u v follow lemma similar spirit 8 12 although singlephas pushrelabel framework algorithm chang structur proof lemma 83 point refin ef theta gamma max ffl proof let c denot reduc arc cost function begin execut refin let e denot residu graph instant simplic follow analysi view pseudoflow entiti graph g let f p current pseudoflow price function recent point execut refin ef complet proof show deriv upper bound quantiti definit reduc cost let p decomposit f path cycl accord lemma 82 note cycl make contribut sum rewrit express sinc node u e f never relabel node decomposit p must account f excess deficit rewrit deriv upper bound c p f gamma cf straightforward verifi match network g integr circul g g g exactli n arc fact execut refin begin residu graph ffffloptim circul deduc n negativecost arc e arc cost least gammaffffl cf gammaffnffl henc c consid c ffloptim f respect p say r 2 lemma 82 f decompos cycl path deficit excess let p denot decomposit observ c p interior path p ie path minu endpoint initi final arc let p denot set contain initi final arc p p cycl p write total number arc cycl path interior n2 nodedisjoint also total excess never n initi final arc path number 2n arc carri posit flow reduc cost ffl therefor c p f gamma cf complet time bound use follow lemma lemma 84 two consecut global updat oper least one unit excess reach deficit proof lemma simpl consequ ffloptim f respect p particular definit ffloptim impli push oper move unit excess node anoth node higher price chang inde two consecut push oper given unit excess suffic move excess node strictli lower price chang definit global updat oper properti suffic ensur unit excess reach deficit immedi global updat relabel occur lemma 83 show gamma total excess remain onk lemma 84 show om work suffic cancel unit excess remain unweight case total work execut refin omk choos give time bound execut refin overal time bound follow olognc bound number scale iter graph compress method 6 appli graph weight compress graph preserv adjac inform encod arbitrari edg weight henc federmotwani techniqu appli assign problem context 9 minimum chang discharg algorithm without global updat present famili assign instanc show refin without global updat performsomegagamma nm work first scale iter minimum distanc discharg select rule henc famili match network suffic show global updat account asymptot differ run time famili assign instanc show refin without global updat take structur famili bad exampl use unweight case except two addit node one addit edg cost edg present unweight exampl zero two extra node connect share edg cost ff begin first scale iter ff execut start set 1 point execut refin restrict node arc present unweight exampl parallel execut maximum flow algorithm detail section 5 10 conclus open question given algorithm achiev best time bound known bipartit match name log n assign problem cost scale context name nm lognc also given exampl show without global updat algorithm perform wors henc conclud global updat use tool theoret develop algorithm shown famili assign instanc refin perform poorli proof seem hing detail reduct appli first scale iter ation interest open question exist famili instanc assign problem refin usesomegagamma nm time everi scale iter r goldberg algorithm maximum flow perspect comput studi implement goldberg maxflow algorithm comput vestig algorithm 360 shortest path forest topolog order algorithm solut problem maximum flow network power estim network flow test graph connect cliqu partit faster scale algorithm network problem effici graph algorithm sequenti parallel comput effici implement scale minimumcost flow algorithm new approach maximum flow problem find minimumcost circul success approxima tion nakhozhdenii maksimalnogo potoka v setyakh spetsialnogo vida nekotorykh prilozheniyakh hungarian method assign problem implement goldbergtarjan maximum flow algo rithm new scale algorithm assign minimum cycl mean problem tr