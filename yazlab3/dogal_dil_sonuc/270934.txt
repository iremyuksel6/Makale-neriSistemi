scalabl parallel implement list rank finegrain machin abstractw present analyt experiment result finegrain list rank algorithm compar scalabl two repres algorithm random list address question local properti imag edg list use improv perform highli datadepend oper start wylli algorithm anderson miller random algorithm base use spatial local edg link deriv scalabl algorithm design exploit characterist imag edg test actual synthet edg data approach achiev signific speedup maspar mp1 mp2 compar standard list rank algorithm modifi algorithm exhibit good scalabl robust across wide varieti imag type also show load balanc fine grain machin perform well larg problem machin size ratio b introduct list rank fundament oper mani algorithm graph theori comput vision problem moreov repres larg class fine grain data depend algorithm given link list n cell list rank determin distanc cell head list sequenti machin problem solv time simpli travers list howev much difficult perform list rank parallel machin due irregular data depend commun pattern problem list rank random list studi extens pram model sever clever techniqu develop implement algorithm exist parallel machin 2 3 10 11 paper studi scalabl techniqu finegrain machin present effici algorithm perform list rank edg pixel imag perform result base implement maspar machin discuss algorithm propos literatur either simpl workeffici 2 10 11 workeffici employ complex data structur larg constant factor associ 1 3 11 12 order studi perform scalabl algorithm actual applic scenario exist parallel machin chosen two repres algorithm wylli algorithm anderson miller random algorithm 11 assum list rank intermedi step parallel task therefor gener case link list like spread entir machin random fashion studi perform algorithm applic comput vision imag process local link list present due neighborhood connect edg pixel purpos present modifi approach take advantag local connect properti similar techniqu describ 10 arbitrari link list reidmil work assign list cell processor determin algorithm wherea arbitrari case assum preassign random cell distribut approach deriv independ motiv contrast random list case characterist edg imag show case random list cell randomli preassign processor random algorithm run faster wylli algorithm maspar machin list rel long howev wylli algorithm perform better short list agre result report machin 2 10 also impli order achiev scalabl polyalgorithm approach need long list use random algorithm size list reduc certain length use wylli algorithm approach also use design theoret processortim optim solut show howev list rank edg pixel imag finegrain simd machin standard wylli algorithm random algorithm take good advantag imag edg characterist modifi techniqu describ section 4 run two ten time faster depend imag size standard wylli random algorithm 16k processor maspar mp1 moreov wherea standard algorithm scale well imag edg list modifi algorithm exhibit good scalabl respect increas imag size number processor studi perform propos algorithm imag vari edg characterist remaind section 1 briefli describ architectur maspar machin outlin notion scalabl use work section 2 present overview parallel algorithm list rank perform result standard wylli random algorithm discuss section 3 scalabl behavior analyz effici parallel algorithm perform list rank imag edg list present section 4 section 5 contain implement result discuss scalabl modifi parallel list rank algorithm imag edg list 11 finegrain simd machin parallel algorithm describ paper implement maspar mp1 mp2 finegrain simd machin finegrain machin gener character larg number processor fairli simpl arithmet logic unit alu processor maspar machin massiv parallel simd machin maspar mpseri system consist high perform unix workstat front end data parallel unit dpu consist 1k 16k process element pe 16 kbyte 1mbyte memori pe execut instruct broadcast array control unit acu lock step pe indirect address capabl select disabl clock rate mp1 mp2 machin 125 mhz processor mp2 employ 32bit alu compar 4bit alu mp1 processor pe connect eight neighbor via xnet local commun besid xnet machin global router network provid direct pointtopoint global commun router implement threestag circuit switch network provid pointtopoint commun two pe constant latenc regardless distanc third network call global ortre use move data individu processor acu network use perform global oper global maximum prefix sum global etc across data entir array experi use maspar mp1 mp2 repres finegrain machin use router network provid pointtopoint commun two processor constant latenc ensur perform result independ specif network topolog also run experi mp1 mp2 show effect process power individu processor perform algorithm use extend version sequenti ansi c maspar program languag mpl keep implement free machinedepend softwar featur 12 scalabl parallel algorithm analyz scalabl algorithm implement use sever architectur algorithm paramet studi perform vari machin problem size vari characterist input imag vari processor speed sever notion scalabl exist 5 analys defin scalabl follow consid algorithm run n p time p processor architectur input problem size n algorithm consid scalabl architectur n p increas linearli increas problem size decreas linearli increas number processor machin size 7 8 experi use definit intut studi scalabl algorithm implememnt like singl algorithm scalabl entir rang machin problem size one import factor limit rang scalabl sequenti compon parallel algorithm identifi region scalabl differ algorithm present paper compar analyt result experiment data parallel algorithm list rank implement use wylli parallel algorithm anderson miller random algorithm list rank 11 section outlin algorithm gener case random list compar parallel algorithm list rank literatur 11 3 12 chosen algorithm simplic eas implement small constant factor particular determinist algorithm base rule set graph color 3 easili amen implement exist parallel machin 21 wylli pointer jump algorithm link list n cell c head list first element list predecessor refer tail list list rank problem deal find rank cell respect head list wylli algorithm use pointer jump dereferenc find rank cell pointer jump successor cell c modifi successor successor given one iter pointer jump reassign successor c c i2 cell c maintain valu ranki distanc cell c current successor succi intuit round link list divid two link list half length see fig 1 logn iter cell point nil ranki contain exact rank cell c p processor processor assign np cell random although algorithm simpl run time n log n pprocessor machin workeffici compar serial algorithm take time next section describ workeffici random algorithm 22 anderson miller random algorithm anderson miller random algorithm modifi version workeffici algorithm devis miller reif 9 assum processor hold np cell queue algorithm consist two phase first phase call pointer jump phase processor splice cell top queue condit two consecut cell list assign two differ processor splice simultan order decid cell splice processor toss coin assign h cell top queue furthermor cell top queue assign processor splice cell top queue cell mark h predecessor assign see fig 1 b first phase end cell processor splice splice cell c consist two atom assign follow updat ranki follow second phase refer reconstruct phase cell put back b c b c b c b figur 1 pointer jump wylli algorithm edg label show rank edg predecessor cell current iter b splice condit anderson miller algorithm top cell splice queue revers order splice reconstruct queue rank cell c respect head list updat expect run time algorithm onp assum np log n addit detail algorithm analysi found 11 rest paper refer algorithm random algorithm 3 implement result use random list algorithm present previou section implement maspar chine section studi impact variou machin problem paramet perform algorithm random list gener random link list size n travers array n cell serial order cell assign pointer random locat array ensur cell array point one cell input random algorithm also assign revers pointer target locat gener doubli link list requir algorithm result random link list read parallel processor array everi processor hold np cell array sinc np cell processor may point n array locat sublist processor gener contain success cell link list 31 scalabl analysi fig 2 show perform wylli random algorithm maspar mp1 use variou machin problem size experiment result present fig 2 b consist theoret analysi asymptot complex wylli algorithm random list size n p processor onp log n complex random algorithm onp howev random algorithm larger constant factor due increas overhead cointoss record keep involv reconstruct stage algorithm wylli algorithm suit smaller link list due small constant factor random algorithm outperform wylli algorithm problem size increas probabilist splice element gener lower congest commun network exampl shown fig 2 crossov point occur random list size 94k element 16k processor mp1 random list size n time mp1 16384 processor wylli random number processor p time random list wylli random b figur 2 perform wylli random algorithm mp1 random list vari size b perform algorithm random list size 16k vari number processor mp1 interest featur fig 2 b execut time random algorithm start increas number processor exce 4k random list size 16k fix problem size number processor increas beyond certain point size queue np processor becom small henc like cell top queue processor point cell top queue anoth processor thu reduc chanc cell splice particular iter increas total number iter thu increas execut time algorithm vari problem size machin size abl determin region problem machin size algorithm fastest experi also demonstr scalabl best achiev chang algorithm approach problem size increas fact agre approach use algorithm design develop processortim optim solut list rank problem 11 perform experi maspar mp2 well mp1 mp2 use router commun network differ architectur faster processor mp2 thu studi impact processor speed compar perform algorithm 4096 processor mp1 mp2 case problem size greater 16k random algorithm outperform wylli algorithm howev wylli algorithm 35 faster random algorithm 40 faster mp2 comput vision list rank intermedi step variou edgebas match repres compact data structur effici process subsequ step 2 assum input form binari imag pixel mark edg nonedg pixel furthermor result oper edg link edg pixel point successor edg pixel 8connect neighborhood successor function defin direct edg n theta n imag divid p subimag size n theta n processor assign one subimag straightforward divis distribut edg pixel processor might caus load imbal section 55 describ effect load imbal present altern datadistribut scheme improv load balanc across processor 41 imag edg list fig 5 show edg map deriv variou real synthet imag particular fig 5 imag picnic scene fig 5 b edg map obtain perform edg detect picnic imag follow edg link oper creat link list contigu edg pixel imag edg list use experi deriv perform sequenti edg link 4 oper edg map variou imag edg list result imag typic sever properti may affect effici standard list rank algorithm exampl averag number list fairli larg list short length edg list exhibit spatial continu impli list cell assign singl processor contigu form sublist furthermor one processor may contain piec sever edg list one hand properti advers affect perform standard list rank algorithm exampl run wylli algorithm disregard connect properti sever edg point belong sublist processor may compet commun link access successor inform processor similarli random algorithm processor may toss coin edg point successor alreadi store processor overhead make standard wylli random algorithm unattract comput rank edg pixel imag hand imag edg properti use modifi standard algorithm achiev better perform edg list imag describ next section 42 modifi algorithm fig 3 compar perform wylli random algorithm random list versu perform edg map equival size obtain picnic imag achiev count number edg pixel picnic imag creat random list number element fig 3 clear local properti imag edg list caus perform degrad especi larg imag size wylli picnic imag wylli random list imag size execut time wylli algorithm random picnic imag random random list imag size execut time random algorithm b figur 3 comparison perform algorithm random list versu equival size picnic imag 16k processor mp1 follow outlin modifi approach take advantag connect properti insid processor reduc sublist singl edg call bypass edg approach use wylli random algorithm bypass edg imag addit elimin redund work within processor approach also reduc amount commun across processor approach consist three step step 1 convert sublist contigu edg pixel subimag bypass edg perform serial list rank oper sublist within processor exampl see fig 4 associ edg length sublist repres list span processor correspond bypass edg connect bypass edg imag contour processor figur 4 bypass edg step 2 run wylli algorithm random algorithm list bypass edg step 3 serial updat rank edg pixel within subimag use final rank bypass edg repres pixel modifi algorithm thu thought combin serial parallel list rank algorithm analyz scalabl list rank algorithm imag edg list assum imag n edg pixel uniformli distribut across p processor processor hold onp edg pixel simplifi assumpt unlik strictli true actual imag howev sinc number edg pixel per processor rel low finegrain implement extent number edg pixel per processor deviat onp limit modifi approach first step take onp comput time form bypass edg last step take onp time updat rank edg pixel thu total time taken serial compon modifi algorithm onp analyz parallel execut time second step assum imag multipl edg list vari length length longest edg l note l properti underli imag edg map deriv sinc edg assum uniformli distribut across processor length longest list consist bypass edg olp assum np pixel processor divid k set set contain success pixel edg list assign processor ie processor contain k bypass edg first step algorithm simplifi assumpt assumpt execut time second step log l wylli algorithm ok expect time random algorithm assum k logkp time taken parallel compon modifi algorithm therefor total execut time onpk log l modifi wylli algorithm onp modifi random algorithm sinc constant factor modifi random algorithm higher outperform modifi wylli algorithm l larg ie imag long edg algorithm present section inher finegrain due high commu nicationcomput ratio irregular pattern interprocessor commun effici algorithm coarsegrain machin implement describ 6 5 implement result use imag edg list use edg map number real synthet imag studi perform list rank algorithm fig 5 show edgemap use experi fig 5 b c deriv perform edg detect edg link oper grayscal imag edg characterist imag differ significantli exampl edg written text imag local compar imag typic edg densiti percent edg pixel compar total number pixel real imag rang 3 8 percent contrast edg map also gener synthet edg map vari edg densiti length fig 5 e f show synthet gener edg map straight line spiral respect gener imag edg densiti rang 5 50 percent edg characterist real synthet imag help gain insight perform algorithm imag vari edg densiti edg length 51 comparison standard algorithm perform modifi algorithm compar perform standard algorithm fig 6 fig 6 show execut time vari size picnic imag 16k processor mp1 modifi algorithm significantli faster straightforward wylli random algorithm algorithm effici exploit local edg imag verifi result differ machin size mp1 mp2 fig 6 b show execut time algorithm dens synthet spiral edg map spiral edg map differ picnic edg map much higher edg densiti much longer imag edg despit vastli differ imag characterist modifi algorithm significantli faster standard algorithm also test algorithm differ edg map shown fig 5 similar result thu conclud modif result signific perform improv standard wylli random algorithm imag edg list point fig 6 rel perform modifi algorithm vari depend imag characterist spiral imag modifi random algorithm faster modifi wylli imag size greater 350 theta 350 pixel hand picnic imag modifi random algorithm alway slower modifi wylli explain behavior detail section 53 52 scalabl analysi scalabl modifi algorithm studi use differ imag vari imag size number processor result obtain use differ edg map shown fig 5 similar henc restrict discuss perform modifi algorithm b c figur 5 picnic imag detect edg contour differ imag use experi real picnic scene b edgemap picnic scene c edgemap written text edgemap street scene e synthet edgemap straight line f synthet edgemap spiral random modifi random modifi wylli imag size execut time picnic imag 6 random modifi random modifi wylli imag size execut time dens spiral imag b figur perform algorithm variou size picnic imag b spiral imag 16384 processor mp1 edg map deriv picnic scene fig 7 examin scalabl modifi wylli modifi random algorithm respect increas problem size plot display overal execut time well serial parallel compon modifi algorithm small imag size parallel compon domin overal execut time rel larg constant factor parallel compon compar sequenti compon larg imag size subimag size per processor grow execut time sequenti compon grow much faster correspond parallel compon consist analyt result sinc execut time sequenti list rank compon grow linearli size subimag onp parallel compon grow proport number bypass edg subimag case modifi wylli algorithm crossov point execut time sequenti parallel compon occur subimag size assign processor 64 pixel case modifi random algorithm crossov point occur subimag size 128 pixel see fig 8 b fig 8 show scalabl behavior modifi algorithm respect chang machin size notic sequenti compon domin execut time high problemmachin size ratio parallel compon domin low problemmachin size ratio result shown mp1 mp2 perform curv sequenti parallel total imag size execut time modifi wylli parallel total imag size execut time modifi random b figur 7 perform sequenti parallel compon modifi wylli b modifi random algorithm execut time picnic imag 16k processor mp1 similar shape howev mp2 crossov point parallel compon begin domin execut time occur larger problemmachin size ratio due faster processor higher computationcommun ratio mp1 sequenti parallel total number processor execut time modifi wylli sequenti parallel total number processor execut time modifi random b figur 8 scalabl respect number processor modifi wylli algo rithm b modifi random algorithm execut time picnic imag size 512 theta 512 mp1 fig 9 plot perform modifi algorithm number processor increas linearli imag size thu problemsizemachines ratio constant size subimag processor constant observ sequenti time proport size subimag processor remain approxim small increas parallel compon due fact maspar ma0102 sequenti parallel total imag size execut time modifi wylli parallel total imag size execut time modifi random b figur 9 scalabl constant problemsizemachines ratio 256 element per processor mp1 modifi wylli algorithm b modifi random algorithm chine increas number processor number link router network chang proport howev sinc overal increas execut time small conclud modifi algorithm exhibit speedup proport imag size ratio images number processor constant 53 effect imag characterist studi perform algorithm imag vari characterist term edg densiti edg length discuss section 42 total execut time onpk log l modifi wylli algorithm onpk modifi random algorithm fig 10 indic increas execut time proport increas imag edg densiti onp true modifi wylli modifi random algorithm fig 11 show behavior modifi algorithm edg map vari edg length fig 11 modifi random algorithm alway slower modifi wylli algorithm also case picnic scene imag see fig 6 due larg constant factor modifi random algorithm howev fig 11 b modifi random algorithm significantli faster modifi wylli algorithm beyond certain images machines ratio imag imag imag size execut time modifi wylli imag imag imag size execut time modifi random b figur 10 perform synthet line imag vari densiti 16k processor mp1 modifi wylli algorithm b modifi random algorithm modifi wylli modifi random imag size execut time line imag modifi wylli modifi random imag size execut time spiral imag b figur 11 perform modifi algorithm synthet imag densiti differ edg length 16k processor mp1 line imag b spiral imag parallel execut time modifi random algorithm ok compar ok log l modifi wylli algorithm sinc serial compon equaldens line imag spiral imag onp expect modifi random algorithm run faster length longest edg l larg case spiral imag 54 mp1 vs mp2 effect processor speed perform algorithm studi execut algorithm 4k processor maspar mp1 mp2 machin shown fig 12 wylli algorithm faster mp2 compar mp1 primarili due increas processor speed similar behavior exhibit random algorithm worth note although mp2 lower execut time scalabl behavior algorithm two machin similar crossov point sequenti compon domin overal execut time occur larger imagesizemachines ratio mp2 sequenti parallel total imag size execut time modifi wylli mp1 sequenti parallel total imag size execut time modifi wylli mp2 b figur 12 perform modifi wylli algorithm vari size picnic imag 4k processor mp1 b 4k processor mp2 55 load balanc input deriv real oppos synthet imag like edg contour concentr particular portion imag case simpl partit imag p subimag assign subimag processor may yield unbalanc load across processor order studi effect load imbal perform experi variou loadbalanc techniqu gener techniqu base first comput load varianc across processor redistribut load processor light load fail yield high perform comput data redistribut loadbalanc step becom signific part total execut time regardless load redistribut commun overhead remain follow outlin simpl heurist address load balanc problem present perform result heurist base divid input imag subimag assign one subimag processor partit input imag kp ident size subimag number subimag row shuffl order follow arrang subimag k set set contain grid contigu subimag number subimag set rowmajor order set processor j exampl rowshuffl order imag 16 processor machin assum shown figur 13 figur 13 heurist partit scheme input imag 16 processor machin figur 14 compar distribut edg pixel 1k theta 1k picnic imag 16k processor mp1 use simpl partit use partit base describ heurist loadbalanc partit scheme number processor zero edg pixel reduc half time varianc load edg pixel per processor across entir machin reduc 214 89 figur 15 16 compar perform modifi wylli algorithm without loadbalanc vari imag machin size observ loadbalanc pay larg imag size case simpl partit scheme use earlier section sequenti execut time domin parallel execut time larg imag size loadbalanc partit scheme sequenti execut time reduc expens increas parallel compon increas parallel compon due fact edg pixel processor successor resid processor increas content commun link pointer jump phase thu increas parallel time sequenti time decreas larg ratio n p extent load imbal possibl small ratio alway low sinc size subimag assign processor small claim well support figur 15 b 16 b number processor number processor b figur 14 histogram edgepixel distribut 1k theta 1k picnic imag 16k processor mp1 origin distribut b distribut loadbalanc conclus loadbalanc scheme perform well larg images machines ratio term scalabl respect machin size well problem size behavior use load balanc scheme much differ simpl partit scheme unbalanc loadbalanc imag size execut time execut time parallel unbalanc parallel loadbalanc imag size execut time sequenti parallel compon b figur 15 comparison execut time unbalanc loadbalanc modifi wylli algorithm overal execut time b sequenti parallel compon execut time picnic imag 16k processor mp1 1024 4096 16384002006 unbalanc loadbalanc number processor execut time execut time 1024 4096 16384001003005 sequenti unbalanc parallel unbalanc parallel loadbalanc number processor execut time sequenti parallel compon b figur comparison scalabl respect number processor unbalanc loadbalanc modifi wylli algorithm overal execut time b sequenti parallel compon execut time picnic imag size 512 theta 512 mp1 6 conclus paper studi scalabl list rank algorithm fine grain machin present effici algorithm list rank imag edg list wylli anderson miller algorithm list rank chosen repres determinist random algorithm respect perform algorithm studi random list imag edg list shown algorithm perform poorli imag edg list also singl algorithm cover entir rang scalabl show poli algorithm approach algorithm approach chang data size reduc requir scalabl across machin problem size imag edg list present modifi algorithm exploit local properti edg list perform modifi algorithm actual imag demonstr gain achiev use applic characterist algorithm design 16k processor maspar mp1 modifi algorithm run two time faster small imag ten time faster larg imag standard wylli random algorithm modifi algorithm robust across wide varieti imag final result extens experiment shown standard algorithm scalabl list rank imag edg list tailor algorithm exhibit good scalabl respect increas imag size number processor also respect chang imag characterist also shown load balanc fine grain machin pay unless problem machin size ratio larg summari studi provid insight perform finegrain machin applic employ light comput intens data depend commun contrast result list rank edg list coarsegrain machin result present demonstr implement commun intens problem finegrain machin sensit characterist input data machin paramet r simpl parallel tree contract algorithm effici parallel process imag contour faster optim parallel prefix sum list rank sequenti edg link measur scalabl parallel algorithm architectur contour rank coars grain machin case studi lowlevel vision comput introduct parallel algorithm scalabl data parallel algorithm implement object recog nition parallel tree contract applic list rank list scan cray c90 list rank parallel tree contract effici algorithm list rank solv graph problem hypercub tr ctr isabel gurin lassou jen gustedt portabl list rank experiment studi journal experiment algorithm jea 7 p7 2002