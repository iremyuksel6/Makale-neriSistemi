constraintbas structur network protocol complex design protocol led composit techniqu design verifi protocol propos techniqu base notion parallel composit protocol view composit protocol interleav execut compon protocol subject set constraint use constraint build block defin sever constraintbas structur structur combin properti compon protocol differ way instanc compon protocol multifunct protocol structur composit protocol perform individu function concurr perform one depend order initi compon protocol provid infer rule infer safeti live properti composit protocol properti deriv compon protocol other deriv structur mechan set constraint use combin compon protocol b introduct distribut protocol typic complex perform sever function modul perform variou function may interact one anoth complex manner make design verif protocol difficult task sever formal specifi protocol propos 9 2 14 provid basic oper process synchron modular design protocol sever structur techniqu protocol specifi formal pro pose structur techniqu follow separ concern paradigm function protocol first decompos subfunct protocol variou subfunct design separ combin use fix set rule obtain protocol entir problem advantag techniqu allow design focu one aspect subfunct time addit certain case properti composit protocol infer compon protocol sequenti composit one structur techniqu allow design protocol perform multipl function sequenc 8 7 6 16 13 15 let two protocol p perform first subtask q perform second subtask sequenti composit p q requir p execut q site exampl p perform connect establish q data transfer protocol p q denot protocol first establish connect transfer data suffici condit deriv infer properti combin protocol exampl show compon protocol deadlock free properli termin composit protocol also deadlockfre properli termin mani multifunct protocol sever activ may perform concurr case combin compon protocol execut interleav manner interact one anoth refer parallel composit protocol wherein compon protocol execut concurr sever formal base parallel composit propos 3 propos notion superimposit parallel composit basic comput p control protocol q case q observ event p constrain execut exampl deadlock avoid protocol superimpos basic comput control basic comput prevent deadlock methodolog propos 12 oper constraint form proposit ad guard send statement p q constrain execut constraint p may includ variabl q union construct propos 5 also allow interleav execut compon protocol without constraint propos techniqu parallel composit protocol model parallel composit interleav execut compon protocol p q subject set constraint constraint local natur describ interact p q paper studi two type constraint synchron inhibit describ interact use constraint build block defin sever constraintbas structur combin set compon protocol structur combin properti compon protocol differ way use structur show sever exist protocol redesign modular fashion synchron constraint requir certain action p q synchro nize constraint use combin p q produc multifunct protocol perform function p q concurr exampl problem nprocess mutual exclus decompos subproblem enforc mutual exclus pair process use synchron constraint combin twoprocess mutual exclus protocol one pair process obtain nprocess protocol combin protocol data transfer protocol flow control also design protocol transfer data flow control inhibit constraint specifi process may requir q inhibit initi p q constraint use inhibit execut one protocol may alreadi execut initi anoth protocol inhibit constraint use exampl design multifunct protocol potenti perform function specifi compon protocol must perform one exampl design leader elect protocol elect site leader must elect one give set rule infer safeti live properti composit protocol safeti live properti composit protocol infer compon protocol wherea infer structur impos constraint proof system close relat one 10 project method verifi protocol propos project techniqu alreadi design protocol decompos purpos analysi techniqu view invers project method exampl p q compos obtain r project r variabl messag p give protocol ident p except guard may addit boolean conjunct show differ protocol obtain impos differ constraint set compon protocol mention sequenti composit allow construct multifunct protocol perform function sequenc 15 model sequenti composit use order constraint p q techniqu propos paper also view composit term set constraint allow construct multifunct protocol either perform compon function concurr perform one togeth order constraint propos techniqu use design complex protocol also advoc use techniqu conjunct stepwis refin techniqu 11 17 first simpl protocol mayb ineffici one correct deriv use techniqu refin stepmann optim paper organ follow next section present formal specifi protocol section 3 discuss exampl section 4 present composit principl section 5 describ properti composit protocol final conclud section 6 model protocol p set process model commun channel p p j sequenc ch ij messag messag form mpara list type messag para list list paramet statement j marg list execut p caus marg list append end ch ij statement mpara list execut p j remov messag head ch ij exist messag type head channel store content messag para list execut mpara list block exist messag type head channel p follow normal form 1 init l1 l ena l init initi action use specifi initi valu variabl therefor assum contain local comput l guard action l label ena l guard l comput associ action guard ena l form bool l rec l bool l boolean express rec l receiv statement part option bool l rec l evalu true bool l true messag indic rec l receiv head channel comput l may contain send statement local comput execut altern statement l1 l ena l gamma l involv evalu guard action execut action x ena x true statement involv repetit execut statement figur 1 give twoprocess mutual exclus protocol mut j process j protocol singl token circul process process hold token enter critic section variabl hold ij true hold token variabl ext set true want enter critic section hold token check whether pend request one exist enter critic section set true check made check ij set true exit critic section set fals check ij true hold token critic section send token j protocol site j similar except initi section hold set fals denot set variabl appear p varp denot set messag sent receiv p messp state p defin valu variabl varp use predic initp character initi state p predic reflect assign made init state channel p p j valu ch ij state system tupl state process repres state channel initi state system state channel empti initp 1 event associ action event occur comput associ action execut use denot event correspond true rtoken ij j token gamma hold ij trueenter ij check ij hold ij gamma check ij true ext gamma check ij gamma j token check ij hold ij falserequest ij gamma ext true figur 1 protocol mut j site th execut action assum execut event atom respect event execut protocol maxim sequenc 0 initi state l event e l enabl state g l execut comput associ e l transform state g l g l1 say reachabl g 0 exist sequenc em e l transform state g l g l1 1 l defin proposit initiatep follow initiatep initi fals becom true action loop statement p execut inform whether p site initi sinc init use specifi initi valu p consid initi execut action loop statement also defin initi initi pn activ p initi pn say p initi p exist execut p p send messag receiv messag inform initi protocol process start protocol send messag process without first receiv messag protocol one initi assert invari p true initi state p state reachabl initi state defin relat follow ff fi execut p iff follow hold x ff true g x exist state g x fi hold g ff fi execut p inform ff fi impli ff becom true fi becom true futur exampl ext mut impli want enter critic section eventu prove properti assum follow strong fair condit action enabl infinit often execut delay indefinit 3 composit approach let p q two compon protocol composit protocol r framework structur set interact compon protocol interact protocol specifi set constraint constraint local natur ie specifi process site therefor r deriv process site p q compon protocol r constraint introduc constraint use exampl 31 synchron constraint synchron constraint action p q requir execut synchron ie system treat p q singl action enabl ena p ena q true synchron constraint use design protocol perform multipl function concurr function may impos differ restrict common action synchron constraint ensur restrict compon protocol satisfi first set exampl protocol use synchron constraint involv problem decompos subproblem subproblem origin problem smaller size exampl mutual exclus problem three site 1 2 3 decompos three subproblem involv mutual exclus pair site figur 1 show twoprocess mutual exclus protocol mi j pair j site threeprocess protocol mut1 2 3 obtain combin m1 2 m1 m2 follow mut1 2 3 want ensur 1 protocol m1 2 maintain 1 2 requir enter 12 set 1 true execut receiv permiss 2 form token mut1 ensur 1 3 similar way impos synchron constraint enter 12 enter 13 ensur mut1 2 3 enent 12 enent 13 true 1 assign valu true maintain invari similar constraint need enforc site protocol extend nprocess mutual exclus protocol anoth exampl consid protocol sender send set data item number receiv synchron manner sender send data item receiv receiv acknowledg receiv send next data item consid correspond protocol data ri sender singl receiv ri iter protocol iter sender send next data item wait acknowledg increment next origin protocol obtain combin synchron action increment next share variabl ensur next data item sent acknowledg receiv receiv anoth class multifunct protocol design use synchron constraint consist protocol involv distinct type subproblem consid protocol data f low shown figur 2 protocol data perform function send sequenc data item array sdata11 sender receiv r store rdata11 data data item sent variabl use increment action send data item readi transmiss assum higher layer protocol produc data item set readyx true place data item x sdatax protocol f low perform function flow control protocol send req messag r credit whenev credit left receiv req messag r send credit spend increment use action spend whenev credit avail protocol dataf low perform data transfer flow control obtain execut data f low interleav manner synchron constraint action spend send action impos differ constraint variabl use increment discuss later use increment spend send execut result data item sent readi transmiss credit avail add properti dataf low increment fashion f low avail 0 use 0 use avail gamma use use data use 0 readyus use use low r grant 0 grant sreqx gamma grant data r next 0 recr sdatay gamma next figur 2 data flow control protocol instanc channel may reorder messag dataf low guarante sdatai guarante order deliveri compos low protocol seq ensur order deliveri messag impos restrict array rdata updat receiv site notion superimposit 3 composit mechan model use synchron constraint superimposit requir p superimpos q messag type q action send ingreceiv q must synchron action sendingreceiv p sinc superimposit framework design reason control protocol synchron allow sendingreceiv action 32 inhibit constraint inhibit constraint specifi pair p indic initi p execut q must inhibit use constraint describ interact wherein one protocol may inhibit execut anoth protocol constraint use deriv sever type multifunct protocol shown follow exampl certain multifunct protocol may requir one compon protocol explicitli termin anoth compon protocol exampl connect manag protocol typic perform follow two function connect establish disconnect disconnect protocol initi time initi protocol execut data transfer phase inhibit case site sender receiv initi process belong disconnect protocol termin process belong connect protocol specifi interact disconnect protocol termin connect establish protocol implement p termin q specifi p inhibit q termin relat asymmetr one gener may allow p q inhibit one anoth relationship use design multifunct protocol perform one possibl multipl function time consid case compon protocol singl initi p q initi site defin conf lict relat specifi p q inhibit case initi one inhibit initi p q initi differ site initi concurr case specifi prioriti relationship say p prioriti q q inhibit initi concurr implement specifi p inhibit q p j initi p q inhibit p j thu q initi first lead initi q select execut figur 3 give threeprocess travers protocol traverse1 1 initi network three site ident 1 2 3 protocol node 1 send messag contain ident 2 3 set leader 1 true receiv ack messag 2 3 protocol perform function elect 1 leader obtain leaderelect protocol combin traverse1 traverse2 traverse3 specifi constraint traversei prioriti traversej j constraint implement rule travers initi node larger ident encount travers smaller ident travers smaller ident inhibit anoth exampl consid simpl connect establish protocol sent 1 gamma 2 captureid 1 sent 1 trueelect 1 win 12 gamma leader 1 true recd 21 recd 31 figur 3 3process travers algorithm initi site establish connect j consid composit connect1 2 connect2 1 fullduplex protocol connect allow direct concurr design combin connect1 2 connect2 1 constraint howev connect one direct allow specifi connect1 2 prioriti connect2 1 viceversa initi differ site case initi connect establish time connect 1 2 establish 1 consid protocol connect1 2 connect1 3 1 allow establish connect one site time instanc 1 server 2 3 client server may allow connect one client time achiev specifi use sequenti composit combin result protocol get iter protocol connect establish disconnect protocol return initi state choic avail establish connect either direct connect1 2 connect1 conflict protocol initi site use combin constraint mani complex protocol design illustr section set compon protocol structur differ way use differ set constraint although protocol discuss design use techniqu make design modular help understand overal structur protocol aim make disciplin use constraint combin protocol welldefin structur discuss order ensur properti combin use infer rule next section develop framework formal restrict constraint 4 composit principl section give formal definit composit techniqu discuss algorithm obtain composit protocol consid composit two compon protocol let two compon protocol assum p q share messag p q may share variabl composit protocol r obtain p q specifi one type constraint synchron constraint inhibit constraint constraint given p q constraint composit protocol involv interleav execut p q subject specifi constraint follow section discuss composit use synchronz constraint inhibit constraint 41 composit use synchron constraint synchron constraint specifi use set synchp q pair b belong synchp q specifi action b subject synchron constraint b action belong p q respect section give first give algorithm obtain composit protocol r p q constraint discuss rule infer r p q present algorithm defin certain restrict constraint ensur properti compon protocol combin use welldefin rule first defin notion match action action ap aq p q respect match action updat variabl action enter 12 enter 13 comput check 12 true ext 1 1 true ext 1 fals check 13 true ext 1 1 true ext 1 fals match denot set action p q updat variabl exampl fenter request 12 request 13 g say p q match protocol action sharedp q belong p q exist distinct match action q p match function onetoon exampl protocol mut1 2 mut1 match sinc fenter 12 enter 13 g fexit 12 exit 13 g frequest request 13 g match pair action say action p belong synchp q b 2 synchp q action b q requir follow restrict must match everi match pair action must belong synchp q belong synchp q ena involv receiv messag 2 note addit action requir present restrict s1 addit pair action also restrict given defin match infer rule given folow possibl defin way use constraint associ infer rule less restrict gener impli complex infer rule extrem case allow arbitrari constraint specifi provid infer rule would requir analysi composit protocol directli 2 sinc channel share restrict requir ensur deadlock freedom framework assum p q share messag extend framework allow messag share relax s3 allow action receiv share messag case match action b also involv receiv share messag 411 algorithm gener composit protocol section discuss algorithm obtain composit protocol r p q synchp q constraint implement sever way instanc creat control process node superimpos p q enforc constraint follow give implement constraint creat singl process r p q constraint a1 initi action p q respect initi action r a2 action loop statement r obtain follow action p q ffl 62 synchp q ena gamma r ffl let ena gamma c 1 c c 2 action sharedp q b enb gamma 4 match action ab r ab new label case say action ab obtain fuse action b deriv three process mutual exclus protocol use protocol figur 1 discuss mut1 2 mut1 match henc first obtain 0 combin mut1 2 mut1 3 synch set protocol 0 three process 0 1 obtain combin mut1 mut1 protocol 0 mut2 3 follow pair match action enter req belong sharedm also match combin protocol obtain mut1 2 3 shown figur 4 412 properti composit protocol present rule enabl us infer properti composit protocol compon protocol let f p set formula hold 12 true hold 13 rtoken 12 2 token gamma hold 12 truertoken 13 3 token gamma hold 13 check 13 hold 12 hold 13 gamma check 12 true check 13 1 gamma hold 12 check 12 gamma 2 token check 12 hold 12 falsestoken 13 hold 13 check 13 1 gamma 3 token check 13 fals hold 13 falserequest 1 gamma ext true figur 4 three process mutual exclus protocol refer variabl varp let ef p set formula refer variabl varp proposit form 2 ch ij messag set ef p allow refer number messag channel posit messag channel let r protocol obtain combin p q synchp q follow lemma allow us infer invari r p q condit s1 updat share variabl q p made p q readi make updat henc updat share variabl made consist manner lemma 41 2 ef p invari p invari r know invari mut j correspond invari mut1 2 mut2 use lemma 41 infer 8i invari mut1 2 3 use share variabl invari relat variabl p q also infer exampl protocol low grant next impli receiv never receiv data item grant permiss infer invari grant use invari f low use next invari data invari infer constraint impos lemma 42 reflect natur structur impos synchron constraint let occur proposit true event e occur defin earlier refer th execut action lemma 42 b 2 synchp q ff occura invari p invari q ff fi invari r exampl mut1 2 3 let recd1 2 sent1 3 auxiliari variabl indic number time 1 receiv token 2 number time 1 sent token 3 recd1 12 invari mut1 2 sinc 1 token initi occurent x invari mut1 3 henc recd1 invari mut1 2 3 use show mut1 2 3 process send token readi send one addit invari design proof rule gener safeti properti exampl p satisfi ff unless fi execut ff true g either ff remain true subsequ state exist ff true g k true g j ff unless fi p ff fi 2 ef p ff unless fi r inform follow fact state g k belong q invalid ff refer variabl ff e k sinc invalid ff e k invalid ff discuss live properti first give set proof rule infer live properti protocol follow let fffg ffig mean ff true execut fi true execut ff fi via p follow hold invari p 2 fffg ffig 3 action b fff enbg b fff fig ff fi p one follow true invari action p set formula 8b 2 disjunct formula let firstch ij denot messag head channel ch ij protocol p free unspecifi recept exist reachabl state g state g j firstch ij action p j receiv enabl g p free unspecifi recept messag ch ij commun channel need ensur r free unspecifi recept restrict s3 follow lemma lemma 43 p q free unspecifi recept r free unspecifi recept follow assum r free unspecifi recept give infer rule deriv live properti r lemma 44 ff fi via p ff fi 2 ef p synchp q ff fi r say local p deriv involv applic rule l1 action synchp q corollari lemma 44 corollari 41 ff fi local p ff fi r combin mut1 2 mut1 3 exampl hold 21 check 21 hold 12 local mut1 2 therefor hold composit protocol 0 consid case b belong synchp q ff fi via c action obtain fuse b assum ff hold r state g ena hold g show c eventu execut enb must becom true sinc thu follow lemma lemma 45 b 2 synchp q ff fi via p ena ff enb r invari r ff fi r consid flow control protocol shown figur 2 know readyy data infer properti low follow infer use invari lemma 42 follow invari invaraint f low use rule l1 use avail use local f low use composit protocol rule l4 use use lemma 45 readyy hold composit protocol special case identifi check c alway execut irr spectiv ff exampl show b 2 synchp q p impli ff fi r instanc shown follow class composit let iter protocol p 1 execut action execut action iter p 2 q 2 similar synchp exampl would satisfi given restrict synchron constraint must respect cyclic order condit gener iter protocol two process 42 composit use inhibit constraint discuss composit use inhibit constraint requir inhibit constraint specifi use set inhibitp q consist pair process p belong inhibitp q initi p inhibit initiatep becom true action q execut requir inhibitp q satisfi follow restrict use inhibit constraint specifi termin prioriti conflict relat defin relat domin follow p q belong domin p termin q p prioriti q requir domin relat acycl 421 algorithm gener composit protocol use follow rule deriv composit process r p q b1 let initi action p q p q respect introduc two new variabl enabl p enabl q initi action r b2 action loop statement r obtain follow let action p first appli rule modifi action appli b modifi rule appli modifi action q p modifi ena gamma fals els modifi b q modifi ad enabl p conjunct guard addit involv command new action new enabl p introduc r new new label optim rule b2 first action loop statement execut p known need add enabl q fals action section 3 discuss deriv threeprocess leader elect protocol combin travers protocol protocol construct algorithm use constraint discuss section 32 shown figur 5 422 properti composit protocol inhibitp q nonempti share variabl allow howev case protocol inhibit addit action ad modifi channel contentsm therefor invari refer channel content may preserv henc follow lemma lemma 46 inhibitp q nonempti 2 f p invari p invari r use lemma 46 infer leader recd 21 recd 31 invari leader elect protocol fact invari travers 1 lemma 46 refin special case exampl 2 ef p invari p termin q p prioriti q p q conflict initi p invari r intuit initi p impli p inhibit q therefor execut p impact q henc invari refer channel content preserv 1 gamma sent 12 sent 12 gamma 2 captureid 1 sent 12 sent 13 gamma 3 captureid 1 sent 13 win 12 gamma leader 1 figur 5 three process elect algorithm recal initi p true execut p initi initi activ p true process p initi let enabl enabl pn definit initi p activ p fals intial state stabl predic becom true remain true hand enabl p true initi state stabl enabl p assign fals q lemma 47 p termin q initi p invari r b p prioriti q initi p invari r c p q conflict initi p invari r corollari 42 ff initi p fi activ q invari p q respect ff 2 f p fi 2 f q p prioriti q p conflict ff invari r consid leader elect protocol discuss earlier know leader 1 activ raverse1 leader 2 initi raverse2 invari traverse1 traverse2 respect sinc traverse2 prioriti traverse1 invari composit protocol similarli use corollari 42 show protocol obtain combin connect1 2 connect2 1 connect establish one direct protocol obtain combin connect1 2 connect establish either 2 3 sinc p q share commun channel need ensur r free unspecifi recept addit transit ad rule b2b follow lemma lemma 48 p q free unspecifi recept r free unspecifi recept consid case inhibitp q nonempti initi protocol enabl exist pair q p possibl ff becom true p inhibit fi never becom true fore gener state exist pair q ff fi p ff enabl p fi r howev may suffici infer interest live properti r follow lemma exploit properti inhibit constraint infer addit live properti lemma 49 let ff fi p ff fi 2 ef p p termin q p prioriti q p q conflict ff initi p fi q prioriti activ corollari 43 true fi p p true fi q q inhibitp q empti true applic corollari 43 consid composit traverse1 traverse2 sinc true leader 2 traverse2 true leader 1 traverse1 corollari 43 infer true composit protocol use lemma 49 also show true activ p p true activ q q p prioriti q p q conflict true activ p phi activ q r reflect natur composit dictat one becom activ 5 conclus present framework compos protocol use synchron inhibit constraint synchron constraint allow deriv multifunct protocol perform compon function concurr inhibit constraint use design multifunct protocol perform one compon function demonstr use constraint design sever protocol present set rule infer safeti live properti composit protocol 15 model sequenti composit set protocol execut order constraint propos formal view composit protocol concurr execut compon protocol subject set constraint futur work involv develop unifi formal allow order synchron inhibit constraint find mani composit protocol requir combin constraint instanc order synchron constraint two protocol sever type control protocol structur use inhibit constraint exampl consid snapshot protocol 4 record global state typic initi whenev chang network state observ node dynam network snapshot protocol progress node detect chang may reiniti protocol node requir particip new initi initi protocol consid new execut inhibit old execut model would requir extens framework allow messag share protocol interact use inhibit constraint part futur work r two normal form theorem csp program finit state descript commun protocol composit approach superimposit distribut snapshot determin global state distribut system parallel program design decomposit method analysi design finit state protocol disciplin construct multiphas commun protocol decomposit distribut program commun close layer commun sequenti process methodolog construct commun protocol multipl concurr function improv method construct multiphas commun protocol hierarch correct proof distribut algo rithm construct multiphas protocol design distribut algorithm mean formal sequenti phase reason latticestructur proof techniqu appli minimum span tree algorithm tr hierarch correct proof distribut algorithm composit approach superimposit relat notat state transit system disciplin construct multiphas commun protocol distribut snapshot commun sequenti process improv method construct multiphas commun protocol design distribut algorithm mean formal sequenti phase reason extend abstract decomposit method analysi design finit state protocol