reduct nonclaus theorem prove paper present ta methodolog new framework gener nonclaus autom theorem prover present complet descript atp classic proposit logic name tasd idea make use implic implic extend natur manner firstord logic nonclass logic method base applic number reduct strategi subformula rewritesystem style order reduc complex formula much possibl branch specif introduc concept complet reduct extens pure liter rule ofth collaps theorem strategi allow limit size ofth search space addit tasd syntact countermodel construct exampl power tasd studi class formula linear proof number branch either resolut dissolut factor appli appli method formula get proof without branch addit experiment result report copyright 2001 elsevi scienc bv b introduct much research autom theorem prove focus develop satisfi tester set claus howev experi point number disadvantag natur specifi realworld problem claus form translat claus form easi handl although number ecient translat method model usual preserv translat addit clausal method easi extend nonclass logic partial standard claus form defin wider set nonclaus theorem prove research mainli focus either tableaux method matrixbas method also idea base data structur bdd partial support cicyt project number tic970579c0202 stand transformacion de arbol sintactico spanish translat syntact tree transform use context recent path dissolut 6 introduc generalis analyt tableaux allow tableaux deduct substanti speed central point ecienc satisfi tester control branch approach focuss previou reduct formula branch much possibl actual branch specif introduc concept complet reduct extens pure liter rule collaps theorem hand anoth interest point design atp capabl build model provid input formula satisfi nonclaus algorithm satisfi test classic proposit calculu name tasd describ input algorithm need conjunct normal form normal form output either unsatisfi satisfi latter case also model formula given determin satisfi given formula firstli reduc size formula appli satisfiabilitypreserv transform choos variabl branch recurs repeat process gener task featur allow obtain use inform origin structur formula make clearer proof extend method nonclass logic wide accept normal form although intent paper introduc requir metatheori tasd current test obtain promis result opinion result test allow consid ta framework reliabl approach autom theorem prove ta idea wide applic appli dierent type logic flexibl provid uniform way prove sound complet addit easili adapt switch dierent logic possibl without redesign whole prover fact alreadi extend classic first order logic 4 tempor logic 5 multiplevalu logic 1 2 structur paper follow 1 firstli necessari definit theorem support reduct strategi introduc section 2 2 later algorithm tasd describ section 3 3 final compar exampl includ section 4 show class formula linear proof number branch either resolut dissolut factor appli 3 7 appli tasd formula get proof without branch 11 overview tasd tasd satisfi tester classic proposit logic therefor use refut atp method like tableaux method syntact model construct reduct strategi main novelti method respect nonclaus atp like method tasd base disjunct normal form power base intrins parallel design involv transform also fact transform appli one guid syntaxdirect criteria describ section 22 24 whose complex polynomi criteria allow us 1 detect subformula either valid unsatisfi equival liter 2 detect liter possibl obtain equisatisfi formula appear therefor decreas size problem much possibl branch check criteria give opportun reduc size problem creat one subproblem addit reduct contribut exponenti growth howev import featur reduct enabl exponenti growth rate limit atp tasd sound complet furthermor model build method gener countermodel natur manner 12 preliminari concept definit throughout rest paper work classic proposit languag connect standard semant v denot set proposit denot set liter liter opposit liter also use usual notion claus cube implic implic negat normal form nnf denot subformula denot proper subformula assign applic set proposit variabl v 0 1 domain assign uniqu extend preserv standard semant whole languag formula said satisfi exist assign 1 case said model formula b said equisatisfi satisfi b satisfi formula b said equival denot b assign denot logic consequ final symbol mean truth falsiti transform formula nnf linear repeat applic de morgan rule doubl negat rule equival b ab follow consid formula nnf addit use associ law consid connect flexibl ariti express like 1 n 1 n well form formula use standard notion tree address node tree address syntact tree formula mean confus aris subformula correspond node address denot address root node similarli say subformula b mean occurr b b denot address node correspond b set liter 1 2 n set liter express denot formula obtain substitut everi occurr c formula b abc denot result substitut occurr b c 1 n set liter c formula express 1 c 1 n c n denot formula obtain substitut everi occurr c address c nnf express ac formula obtain substitut subtre root c ad inform tree list set idea underli reduct strategi use inform given partial assign extens use quin method 8 unitari assign show power manner associ nnf two list 2 liter denot associ list two set denot c c whose element obtain associ list subformula list set key tool method reduc size formula analys satisfi 21 list nutshel respect list implic implic purpos list twofold firstli transform formula equival smallers one section 22 secondli mean c b set section 23 24 get equisatisfi smallers one formal definit follow 1 given nnf recurs defin follow addit element 0 list consid conjunct connect element 0 list consid disjunct connect simplif appli name 0 0 simplifi 1 simplifi use list lexicograph order facilit present exampl reader interpret set intuit behind definit easi explain sinc 0 intend calcul implic 0 sinc union implic conjunct set implic conjunct use exampl 1 2 3 ps st 22 inform list section studi inform contain list given formula first theorem state element 0 implic element 1 implic follow easili structur induct definit b list theorem 1 let nnf liter 1 0 equival 2 1 equival immedi corollari previou theorem follow result structur list corollari 1 everi nnf one one follow possibl b 0 1 b follow corollari state condit 1 list directli impli satisfi formula satisfi 1 assign model hand follow result state condit list assur valid unsatisfi formula corollari 3 let nnf 1 conjunct 0 claus 1 2 w n disjunct 0 cube 0 proof 1 let use result theorem 1 0 therefor 2 similar previou one definit 2 nnf label mean associ node order let us name formula whose list allow determin either valid unsatisfi definit 3 nnf said finaliz one follow condit hold 1 2 definit applic current formula detect unsatisfi follow three definit refer subformula current formula detect either valid unsatisfi equival liter 1 conclus one follow condit hold 1 2 disjunct 0 cube 0 0 conclus one follow condit hold 1 2 conjunct 0 claus 1 simpl liter rs nil nil qst qr nil figur 1 tree previou result state amount inform list enough detect unsatisfi result appli given formula result one said restrict formal definit follow definit 4 let nnf said restrict satisfi follow condit finaliz subtre either 0 conclus 1 conclus simpl neither leav 3 previou result state nnf repeatedli appli follow sequenc step get restrict formula 1 label 2 substitut subformula b either b 1 conclus b 0 conclus liter b simpl 3 simplifi logic constant soon introduc use 01law 4 check unsatisfi name chech whether finaliz exampl 2 given formula linear transform allow get nnf equival negat depict fig 1 readabl reason leav label figur label method find node 6 rightmost branch ssimpl ssimpl subtre substitut formula b fig 2 obtain new applic list get inform equival formula given follow theorem corollari 3 although input formula suppos contain occurr logic constant introduc reduct see rs nil nil qst r figur 2 tree tb theorem 2 let nnf liter 1 0 2 1 proof 1 let assign prove theorem 1 item 1 sinc 0 therefor result obviou second item prove similarli immedi consequ previou theorem follow satisfiabilitypreserv result state use later corollari 4 let nnf 0 equisatisfi furthermor model extens 1 model follow theorem allow substitut whole subformula c liter theorem 2 logic constant theorem 3 let nnf c 1 2 3 0 0 c ac 4 0 1 c ac proof 1 theorem 1 c c let interpret rest item prove similarli 23 set previou section inform list use local inform b use reduc node use theorem 1 section purpos defin new structur set allow globalis inform inform b refin inform ancestor given restrict nnf defin set c whose element pair filter b list associ subformula b address b section 24 see transform formula equisatisfi smaller size one use set definit set base filter oper filter inform list accord theorem 2 3 specif liter list allow substitut subformula either consequ theorem 3 hand theorem applic still possibl delet rest domin applic theorem 2 fact domin liter delet frame use extens mix collaps theorem given restrict nnf b filter 0 b 1 liter consequ theorem 3 item 1 3 2 result frame liter consequ theorem 2 item 1 2 resp filter 1 b 1 liter consequ theorem 3 item 2 4 2 result frame liter consequ theorem 2 item 2 1 resp definit 5 let restrict formula b 0 1 set c recurs defin follow liter c c otherwis c subformula b b nil follow exampl present stepbystep calcul c set exampl 3 consid formula whose label tree appear nil rs r nil ps r nil q q nil qr tree c liter p node 3111 3112 311 frame occurr 0 liter node 3112 frame occurr 1 hand c follow c qs 22122 qr 221 qr 222 q 22 pq 2 3 node 211 substitut occurr q 1 2 q 1 211 node 22121 substitut occurr p 1 2 final occurr frame occurr p 1 2 occurr q frame occurr q 1 2 b set meaningpreserv result section studi inform extract set state theorem 4 proof use follow fact set given restrict nnf element c sinc restrict nnf finaliz c b address leaf sinc c c liter 0 c list frame liter note liter frame inform list ancestor follow theorem state label label also allow substitut subformula either theorem 4 let restrict nnf 1 c 2 c proof 1 suppos c let c subformula address definit c exist formula b c b liter satisfi corollari 1 use 0 c address correspond leaf restrict nnf specif simpl subformula get 1 note clearli enough prove b bc firstli prove hypothes 1 b 1 bc b 0 b 0 bc proof induct depth b denot db db commut associ case would 1 c contradict fact 1 therefor must consequ bc use 1 1 therefor 1 ii assum result dx us prove db result obviou induct hypothesi 1 b 1 c 1 bc induct hypothesi 1 case c b 2 similar proof b obtain dualiti final prove b bc consid two possibl 1 0 c 1 b bc theorem 3 bc theorem 1 0 c 0 b bc theorem 3 bc b theorem 1 2 proof similar note theorem introduc meaningpreserv transform allow substitut subformula constant inform given list substitut subformula equival either 1 conclus 0 conclus howev hypothes theorem need true equival either nnf said restrict restrict satisfi follow element c element c nnf label mean label associ root order pair c c note given restrict nnf calcul c c unsatisfi equival restrict nnf mean substitut determin theorem 4 01lawsb set satisfiabilitypreserv result follow result allow use inform set substitut nnf equisatisfi smaller size occurr liter occur complet reduct theorem begin corollari 4 state term set follow theorem 5 complet reduct let nnf c satisfi satisfi furthermor model extens 1 model note result allow elimin occurr liter appear name complet reduct use shown exampl generalis pure liter rule introduct set allow generalis wellknown pure liter rule set claus firstli recal standard definit result formula nnf definit 7 let liter occur nnf liter said pure occur nnf pure liter satisfi satisfi furthermor model extens 1 model set allow generalis definit pure liter consequ get extens lemma definit 8 let nnf liter said pure satisfi follow condit 1 occur c 2 occurr c frame next theorem proper extens lemma 1 appli even occur theorem 6 generalis pure liter rule let nnf let pure liter let b formula obtain follow substitut c node substitut ii c node substitut satisfi b satisfi furthermor model b extens 1 model proof theorem 2 definit set c addit b c addit therefor consid formula obtain appli equival item b get liter pure applic lemma 1 get formula b complet proof rest section introduc necessari definit extend collaps result introduc 9 collaps theorem definit 9 let nnf 1 2 liter liter 1 2 01bound follow condit satisfi 1 occurr 4 either 1 2 c 1 2 2 occurr either 1 2 c definit set remark 1 1 2 01bound everi leaf liter 1 ancestor maxim sens associ list satisfi one follow condit ancestor none liter 1 2 1 2 occur list associ ascend none liter 1 2 1 2 occur list associ use follow notat proof collaps result liter b 0 1 theorem 7 collaps let nnf let 1 2 liter 1 2 01bound satisfi 1 1 satisfi furthermor model 1 1 extens 1 model proof part immedi part let us suppos satisfi let satisfi assign noth prove let us consid prove also satisfi assign 1 remark 1 consid formula languag follow set atom everi leaf either formula liter 1 note 1 1 let assign obtain chang valu follow 4 section say occurr mean unfram occurr assign satisfi 1 coincid rest leav therefor satisfi assign 1 result generalis van gelder collaps lemma treat case occurr 1 bound 1 2 1 2 repres singl liter 1 2 see 9 detail result drop requir occurr defin subset 1 2 children node occurr defin subset 1 2 children node obvious previou result straightforwardli extend case n liter collaps one definit 10 let nnf let 1 n liter liter 1 n 01bound follow condit satisfi 1 c occurr 1 n c 1 n j 2 c occurr 1 n c 1 n j corollari 5 generalis collaps let nnf let 1 n liter 0 1bound satisfi 1 n1 1 n1 satisfi furthermor model 1 n1 1 n1 extens j model exampl 4 van gelder reduct lemma appli formula exampl 3 collaps sens theorem 7 follow set c c qs 22122 qr 221 qr 222 q 22 pq 2 3 specif p q 01bound order state generalis mix collaps need follow definit definit 11 let nnf b 0 1 let 1 2 liter liter 1 bbound 2 follow condit satisfi 1 c occurr neither frame unfram either 1 1 2 c 1 2 1 2 definit 1 bbound 2 formula everi leaf belong ascend theorem 8 mix collaps let nnf 1 2 liter 1 1 0bound 2 formula obtain appli follow substitut c substitut 1 1 c substitut 1 1 satisfi satisfi addit satisfi assign extens 1 assign 2 1 1bound 2 formula obtain appli follow substitut c substitut satisfi satisfi addit satisfi assign extens 1 assign proof 1 note consid formula languag set atom everi leaf either formula liter 1 1 let satisfi assign 1 theorem 2 everi leaf 1 2 0 theorem 2 2 theorem 2 consid assign obtain chang valu obvious monoton boolean conjunct disjunct convers let satisfi assign let extens theorem 2 everi leaf 1 2 0 everi leaf 1 2 0 2 proof similar exampl 5 follow formula exampl 2 formula b figur 2 c c therefor first subtre prune obtain tree fig 3 rs nil nil qst r figur 3 tree tc variabl r delet theorem 5 complet reduct rs c store inform abl gener model exist input formula addit p 1bound therefor theorem 8 mix collaps 1 3 substitut inform p store result formula q finaliz 1 q specif satisfi model deduc input formula exampl 2 nonvalid negat collect store inform get follow countermodel two possibl inform split formula finish section introduc satisfiabilitypreserv result prevent branch suitabl hypothes hold split call result consequ follow wellknown theorem theorem 9 quin satisfi ap ap satisfi model ap extens assign model similarli model ap extens assign model satisfiablepreserv reduct appli restrict conjunct nnf would branch follow definit state situat formula branch split restrict nnf said psplittabl j p j corollari 6 let restrict psplittabl nnf satisfi v ijp p v ij p p satisfi furthermor model p extens assign model similarli model extens assign model result seen generalis davisputnam rule follow advantag applic nnf cnf shift nonclass logic interact reduct strategi turn extrem ecient advantag use transform problem branch split two subproblem occurr p substitut logic constant describ algorithm prover follow step appli previou exampl 3 tasd algorithm section describ algorithm tasd sound complet prove flowchart algorithm appear figur 4 keep mind tasd determin unsatisfi input formula therefor view refut atp data flow algorithm pair b b nnf set express liter occur b element defin partial interpret input formula use collectinfo necessari interpret defin follow gener due second condit might defin one interpret depend choos oper involv algorithm describ sound one follow result previou section initialis stage nnf user input translat nnf oper nnf specif b nnf equival b reduc finaliz root parallel updat spreduc subreduc qbranch unsat model satisfi restrict restrict figur 4 flowchart tasd algorithm updat modul dierent stage algorithm transform subtre input tree tran format label ascend node transform node delet updat process tree recalcul miss label give output either restrict nnf finaliz formula anoth point view stage updat formula sens prune subtre directli deduc equival either liter restrict oper input restrict pair b b partial label formula possibl logic constant given nnf b restrictb c c restrict formula obtain b indic definit 4 restrict oper input restrict pair b b restrict formula c restrict formula obtain b indic definit 6 parallel input parallel pair b b restrict formula parallel sinc disjunct satisfi disjunct satisfi pair independ pass reduc follow modul algorithm reduc modul input reduc label syntact tree restrict nnf stage decreas possibl size b branch use inform provid label label specif label root node allow use spreduc oper substitut b equisatisfi formula proposit variabl elimin label proper subtre x allow use subreduc oper substitut subformula x equival formula symbol list occur exactli spreduc oper restrict nnf b said spreduc either complet reduc ie element c pure liter pair 01 bound liter liter bbound liter formula obtain appli follow item 1 c theorem 5 2 pure b c obtain formula appli b substitut theorem 6 3 01bound c obtain formula appli b substitut theorem 7 4 bbound c obtain formula appli b substitut theorem 8 subreduc oper input subreduc restrict spreduc nnf eect describ applic theorem 2 associ commut formal definit need extra terminolog includ definit 13 let spreduc consid w integ denot j defin associ denot cardin finit set said reduc 1 associ let reduc consid defin follow applic theorem 2 subreduc subformula b one follow condit hold b reduc liter theorem 2 subreduct preserv mean therefor c obtain travers tree depthfirst order find first subtre b indic 1 appli theorem 2 either 2 substitut b b otherwis interest use subreduct make possibl reduct use reduct branch one main novelti method respect other specif unit claus rule davisputnam procedur special case sp reduct also 9 use weak version subreduct domin lemma appli substitut first level depth subformula split oper input split pair b restrict psplittabl nnf neither spreduc subreduc two task treat independ updat process branch qbranch oper input qbranch pair b b restrict nnf neither sp reduc splittabl subreduc nnf two task treat independ updat process experiment test show best result obtain choos p proposit variabl occurr formula analys inform easili obtain set collect partial result collectinfo collectinfo oper collect output updat subproblem gener either parallel split qbranch finish execut algorithm output subproblem collectinfo end algorithm output unsatisfi subproblem output collectinfo end algorithm output satisfi model built subproblem output satisfi end algorithm output satisfi model built first element 1 31 sound complet tasd termin algorithm describ obviou appli process reduc size andor number proposit variabl formula specif worst case reduct appli applic process qbranch decreas one number proposit variabl formula prove sound complet tasd theorem 10 tasdasatisfi satisfi proof suce show process algorithm preserv satisfi process nnf clearli preserv mean translat nnf process modul updat reduc preserv either mean satisfi result section 2 finish proof one keep mind subproblem gener process parallel split qbranch base follow fact disjunct satisfi disjunct satisfi process collectinfo preserv satisfi well 32 complet exampl exampl consid formula result updatennfa b pr pq r 1 pq 2 c reduct appli wrt p consequ get updatespreduceb output unsatisfi therefor valid exampl 7 consid formula ps nil q nil rs r c c reduct modul appli tree b input qbranch appli qbranch wrt variabl p obtain subproblem c 1 studi restrict get follow tree nil rs r second subproblem c 2 qs nil rs r c c restrict output fed spreduc formula complet reduc qs c therefor appli substitut q simplifi logic constant get 0 conclus therefor updatec 2 subproblem gener qbranch output collectinfo produc output unsatisfi therefor valid exampl 8 let us studi satisfi formula exampl 4 nil rs r nil ps q ps nil c set previou formula follow c c applic restrict substitut 211 22121 result equival formula b nil rs r r q nil qr ps nil c c c allow substitut 232 obtain equival formula c nil rs r c c therefor updatea spreduc appli liter p q 01bound substitut occurr p ie restrictspreducec nil rs r nil rs r c c substitut 311 get rs 1 qr 2 qs 3 nil rs r nil qr formula q 1bound spreduc substitut branch address 2 3 r finaliz 1 nil stage collectinfo end algorithm output satisfi model determin interpret model note defin also model 4 compar exampl put method connect exist approach literatur studi collect n clausal form taken 3 also use notat proposit variabl consid instanc 3 claus contain atom form p string superscript claus alway form sequenc 12 n subscript liter exactli sequenc sign preced liter claus n built n1 ad posit neg easi see n 2 n proposit variabl 2 n claus contain n liter 3 cook reckhow describ famili n n 1 show studi satisfi intract analyt tableaux handl linear time resolut 7 murray rosenth show dissolut factor provid proof class linear number input claus n appli tasd test satisfi n get subreduc instanc formula reducet 3 express equival formula thu restrict reduc previou tree four 0 conclus subtre name conjunct p 3 simplifi four leav get therefor use tasd detect unsatisfi formula n branch conclus present nonclaus satisfi tester name tasd classic proposit logic main novelti method dierenc approach reduct appli formula dynam select appli subformula like rewrit system follow syntaxdirect criteria specif introduc extens pure liter rule collaps theorem fact increas ecienc decreas branch exampl power tasd studi class formula linear proof number branch either resolut dissolut factor appli hand appli method formula get proof without branch acknowledg author would like thank jose mesegu daniel mundici valuabl comment earlier draft work r reductionbas theorem prover 3valu logic reduc sign proposit logic rel e reduct techniqu translat claus form use prime implic implic reduct techniqu tempor logic dissolut make path vanish rel meri path dissolut method analyt tableaux method logic satisfi tester nonclaus proposit calculu tr satisfi tester nonclaus proposit calculu dissolut rel merit path dissolut method analyt tableaux implic reduct techniqu tempor logic ctr jun wenjiang li da ruan yang xu filterbas resolut principl latticevalu proposit logic lpx inform scienc intern journal v177 n4 p10461062 februari 2007 p cordero g gutirrez j martnez p de guzmn new algebra tool automat theorem prover annal mathemat artifici intellig v42 n4 p369398 decemb 2004 p cordero g gutirrez j martnez p de guzmn new algebra tool automat theorem prover annal mathemat artifici intellig v42 n4 p369398 decemb 2004