perform evalu conserv algorithm parallel simul languag abstractparallel discret event simul conserv synchron algorithm use high perform altern sequenti simul paper examin perform set parallel conserv algorithm implement maisi parallel simul languag algorithm includ asynchron null messag algorithm synchron condit event algorithm new hybrid algorithm call acceler null messag combin featur preced algorithm perform algorithm compar use ideal simul protocol protocol provid tight lower bound execut time simul model given architectur serv use base compar synchron overhead differ algorithm perform algorithm compar function variou model characterist includ model connect comput granular load balanc lookahead b introduct parallel discret event simul pde refer execut discret event simul program parallel distribut comput sever algorithm develop synchron execut pde model number studi attempt evalu perform algorithm varieti benchmark survey mani exist simul protocol perform studi variou benchmark appear 9 11 number parallel simul environ also develop provid model set construct facilit design pde models4 one maisie3 parallel simul languag implement share distribut memori parallel comput maisi design separ model underli synchron protocol sequenti parallel use execut effici sequenti parallel optimist execut maisi model describ previously2 paper evalu perform set conserv algorithm implement maisi set algorithm includ null messag algorithm6 condit event7 algorithm new conserv algorithm call acceler null messag anm algorithm combin preced two approach unlik previou perform studi use speedup throughput metric comparison use effici primari metric defin effici protocol use notion ideal simul protocol isp introduc paper perform parallel simul model depend varieti factor includ partit model among processor commun overhead parallel platform includ hardwar softwar overhead overhead parallel synchron algorithm parallel model fail yield expect perform benefit analyst tool ascertain underli caus instanc difficult determin whether problem due inher lack parallel model due larg overhead implement synchron protocol ideal simul protocol offer partial solut problem isp allow analyst experiment identifi maximum parallel exist parallel implement simul model assum synchron overhead zero word specif decomposit model given parallel ar chitectur possibl comput percentag degrad perform due simul algorithm directli translat measur rel effici synchron scheme thu isp may use comput effici given synchron algorithm provid suitabl refer point compar perform differ algorithm includ conserv optimist adapt techniqu previou work reli theoret critic path analys comput lower bound model execut time bound approxim ignor overhead includ architectur system overhead parallel simul algorithm control remaind paper organ follow next section describ conserv algorithm use perform studi report paper section 3 describ ideal simul protocol use separ protocoldepend independ head section 4 describ implement issu synchron algorithm includ languag level construct support conserv algorithm section 5 present perform comparison three conserv algorithm lower bound predict isp relat work area describ section 6 section 7 conclus conserv algorithm parallel discret event simul physic system typic view collect physic process pp simul model consist collect logic process lp simul one pp lp share state variabl state lp chang via messag correspond event physic system section assum lp know ident lp commun lp p use term destset p sourceset p respect refer set lp lp p send messag receiv messag causal constraint simul model normal enforc teh simul algorithm ensur messag logic process lp process increas timestamp order distribut simul algorithm broadli classifi conserv optimist base enforc conserv algorithm achiev allow lp process messag timestamp ensur lp receiv messag timestamp lower optimist algorithm hand allow event potenti process timestamp order causal error correct rollback recomput paper focu conserv algorithm order simplifi descript algorithm defin follow term term defin lp p physic time r assum commun channel fifo earliest input time eit p r lower bound logic timestamp messag lp p may receiv interv r 1 earliest output time eot p r lower bound timestamp messag lp p may send interv r 1 earliest condit output time ecot p r lower bound timestamp messag lp p may send interv r 1 assum lp p receiv messag interv ffl lookahead la p r lower bound durat lp send messag anoth lp valu eot ecot given lp depend eit unprocess messag input queue lookahead figur 1 illustr comput eot ecot lp model fifo server server assum minimum servic time one time unit also lookahead three scenario figur respect repres content input messag queue lp three differ point execut messag simul time simul time b simul time c figur 1 comput eot ecot lp model server minimum servic time one time unit shade messag process lp alreadi process lp shown shade box let next refer earliest timestamp messag input queue sinc next eit ecot equal next plu minimum servic time b eot equal plu minimum servic time lp may still receiv messag timestamp less next 40 smaller eit howev ecot equal next plu minimum servic time lp receiv messag earliest next output respons process messag timestamp next c next 1 unprocess messag therefor ecot equal 1 variou conserv algorithm differ comput valu eit lp system definit conserv algorithm physic time r lp p process messag timestamp eit p r therefor perform conserv algorithm depend effici accur lp comput valu eit follow section discuss three differ algorithm comput eit 21 null messag algorithm common method use advanc eit via use null messag suffici condit lp send null messag everi lp dest set whenev chang eot lp comput eit minimum recent eot receiv everi lp sourceset note chang eit lp typic impli eot also advanc number techniqu propos reduc frequenc null messag transmit instanc null messag may piggyback regular messag may sent lp block rather whenev chang eot null messag algorithm requir simul model contain zerodelay cycl model contain cycl cycl must includ least one lp posit lookahead ie lp accept messag timestamp messag gener lp must timestamp strictli greater t13 22 condit event algorithm condit event algorithm 7 lp altern eit comput phase event process phase sake simplic first consid synchron version ensur messag transit lp reach eit comput phase state valu eit lp p equal minimum ecot lp transit closur 1 sourceset p algorithm made asynchron defin eit minimum ecot valu lp transit closur sourceset timestamp messag transit lp note definit eit definit global virtual time gvt optimist algorithm henc gvt comput algorithm 5 use detail one algorithm describ section 44 23 acceler null messag algorithm superimpos null messag protocol asynchron condit event protocol allow null messag protocol perform unhind eit lp comput maximum valu comput two algorithm method potenti combin effici null messag algorithm presenc good lookahead abil condit event algorithm execut even without lookahead scenario null messag algorithm alon deadlock model poor lookahead may take mani transit closur sourceset mani applic almost set lp system round null messag suffici advanc eit lp anm could directli comput earliest global event consider faster messag piggyback use extens reduc number synchron messag global ecot comput node initi node otherwis block experiment perform studi parallel simul use speedup throughput ie number event execut per unit time perform metric metric appropri evalu benefit parallel simul shed light effici simul protocol number factor affect execut time parallel simul model classifi factor two categori protocolindepend factor protocolspecif factor former refer hardwar softwar characterist simul engin like comput speed processor commun latenc cost context switch togeth model characterist like partit lp processor map determin inher parallel model specif simul protocol use execut model rel littl control teh overhead contribut factor contrast overhead due protocolspecif factor depend specif simul protocol use execut model conserv protocol may includ overhead process propag null messages6 condit event messages7 idl time lp block eit yet advanc suffici allow process messag avail input queue case optimist protocol protocolspecif overhead may includ state save rollback global virtual time gvt comput cost separ cost protocolspecif factor total execut time parallel simul model lend consider insight perform instanc allow analyst isol model perform may poor due lack inher parallel model someth control protocol one perform may poor due plethora null messag may address use appropri optim reduc count past critic path analys use prove theoret lower bound relat properties12 1 parallel simul model howev analys includ cost mani protocolindepend factor comput critic path time exclud overhead contribut simul protocol mean comput bound typic loos lower bound execut time model rel littl practic util simulationist either improv perform given model measuringth effici given protocol introduc notion ideal simul protocol isp use experiment comput tight lower bound execut time simul model given architectur although isp base notion critic path comput parallel execut time actual execut model parallel architectur result lower bound predict isp realist includ overhead due protocolindepend factor must incur simul protocol use execut assum synchron overhead zero primari idea behind isp simpl model execut trace messag accept lp collect local lp subsequ execut lp may simpli use trace local deduc safe process incom messag synchron protocol necessari synchron protocol use execut model use isp measur execut time includ protocolspecif overhead howev unlik critic path analys isppredict bound includ cost protocolindepend factor requir parallel execut model given lower bound easi measur effici protocol describ next section besid serv refer point comput effici given protocol repres presimul isp yield realist predict avail parallel simul model speedup potenti found low user modifi model may includ chang partit system chang assign lp processor even move differ parallel platform order improv parallel model implement issu perform experi execut use maisi simul languag algorithm includ isp implement maisi runtim system programm develop maisi model select among avail simul algorithm command line option separ algorithm simul model permit consist comparison protocol one algorithm implement directli applictaion section briefli describ maisi languag specif construct provid support design parallel conserv simul section also describ primari implement issu algorithm 41 maisi simul environ maisi 3 cbase parallel simul languag program collect entiti definit c function entiti definit entiti type describ class object instanc henceforth refer simpli entiti repres specif lp model entiti may creat dynam recurs event physic system model messag commun among correspond entiti entiti commun use buffer messag pass everi entiti uniqu messag buffer asynchron send receiv primit provid deposit remov messag buffer respect messag carri timestamp correspond simul time correspond event specif simul construct provid maisi similar provid processori simul languag addit maisi provid construct specifi dynam commun topolog model lookahead properti entiti construct use investig impact differ communictaion topolog lookahead pattern perform conserv algorithm describ earlier figur 2 maisi model fcf server piec code construct tandem queue system describ section 5 use minor chang experi describ entiti server defin messag type job use simul request servic server bodi entiti consist unbound number execut wait statement line 12 execut statement caus entiti block receiv messag specifi type case job receiv messag type entiti suspend jobservicetim simul time unit simul servic job execut hold statement line 13 subsequ forward job adjac server identifi variabl nextserv use invok statement line 14 perform mani conserv algorithm depend connect model absenc inform algorithm must assum everi entiti belong sourc set destset everi entiti howev maisi provid set construct may use entiti dynam add remov element set add sourc del sourc add dest del dest figur 2 server entiti specifi connect entiti use add sourc add dest function line 89 lookahead anoth import determin perform conserv algorithm maisi provid predefin function setlookahead allow user specifi current lookahead runtim system runtim system use inform comput better estim eot ecot may feasibl otherwis instanc server idl possibl clocktyp meantim 4 enam nextserv 6 messag jobfg 8 add sourceprevserv 9 add destnextserv 14 invok nextserv jobfg figur 2 maisi entiti code first come first serv fcf server user defin lookahead server precomput servic time next job line 15 becom lookahead transmit runtim system use function setlookahead line 11 suspend 42 entiti schedul multipl entiti map singl processor schedul strategi must implement choos one among number entiti may elig execut given time entiti elig execut input queue contain messag timestamp lower current eit entiti maisi runtim entiti schedul allow execut long remain elig help reduc overal context switch overhead sinc messag execut time entiti schedul may result starvat entiti map processor turn may caus block processor might wait messag entiti result suboptim perform note howev without prior knowledg exact event depend schedul scheme optim altern schedul strategi use global event list algorithm schedul event across entiti map processor order timestamp examin discuss overhead caus two schedul strategi section 5 43 null messag algorithm one tunabl paramet null messag scheme frequenc null messag transmit differ altern includ eager null messag lp send null messag successor soon eot chang lazi null messag lp send null messag successor idl demand driven lp send null messag destin destin demand know valu eot perform differ null messag transmiss scheme includ eager lazi demand driven scheme discuss 17 experi found demand driven scheme perform poorli wherea lazi null messag scheme combin eager event send ing ie regular messag sent soon gener case runtim found margin outperform scheme use lazi null messag scheme experi ment advantag reduc overal number null messag sever null messag may replac latest messag howev delay send null messag may delay process real messag receiv 44 condit event comput condit event anm protocol necessari period comput earliest condit event model discuss section 23 asynchron algorithm allow earliest event time comput without need freez comput node runtim system comput take place phase start new phase jth processor comput ecot valu phase ij smallest timestamp sent processor phase account messag transit worst case none messag sent processor phase may receiv account e processor thu global ecot phase calcul follow min n number processor messag sent phase need consid new phase start messag previou phase receiv along fifo commun assumpt impli e ij take account messag sent processor processor phase 2 phase everi processor send ecot messag contain minimum comput global ecot minimum ecot messag processor note ecot messag need carri phase identifi sinc new phase start previou one finish boolean flag suffici store phase identifi 45 isp ideal simul protocol isp implement one avail simul protocol maisi environ implement use data structur entiti schedul strategi messag send receiv scheme conserv algorithm discuss earlier primari overhead execut model isp time read match event trace implement minim overhead follow entir trace read array begin simul order exclud time read trace file execut reduc match time trace store simpli sequenc uniqu numer identifi assign messag runtim system ensur fifo oper input queue thu synchron overhead execut simul model isp time requir execut bound number numer comparison oper incom messag cost clearli neglig compar overhead parallel simul result time excel lower bound exect time parallel simul 5 experi result program use experi written maisi contain addit direct parallel simul ie explicit assign maisi entiti processor b code creat sourc destin set entiti c specif lookahead experiment measur taken sparcserv 1000 8 supersparc processor 512m share main memori select close queu network cqn wide use benchmark evalu parallel simul algorithm benchmark use easili reproduc allow commun topolog lookahead two primari determin perform conserv protocol modifi control manner cqn model character follow paramet ffl type server class job two separ version model use cqnf server fifo cqnp server result cqnp experi switch server queue figur 3 close queu networkn ffl number switch tandem queue n number server tandem queue q ffl number job initi assign switch jn ffl servic time servic time job sampl shiftedexponenti distribut mean valu unit time indic mean valu ffl topolog job arriv switch switch rout job one n tandem queue equal probabl 1 time unit servic job server forward job next server queue last server queue must send job back uniqu associ switch ffl total simul time h switch server program separ entiti thu cqn model total entiti entiti correspond switch associ tandem queue server alway map processor shiftedexponenti distribut chosen servic time experi minimum lookahead everi entiti nonzero thu prevent potenti deadlock situat null messag algorithm topolog network 4 shown figur 3 perform parallel algorithm typic present comput speedup parallel execut time pprocessor howev describ next section sequenti execut time model use standard global event list gel algorithm13 provid lower bound singl processor execut fact slower parallel conserv algorithm reason speedup metric defin might show superlinear behavior model becom satur model enough parallel paper suggest comput effici use isp provid tight lower bound compar conserv protocol respect effici rel execut time isp effici protocol architectur defin follow use isp execut time use protocol effici protocol identifi fraction execut time devot synchronizationrel factor protocolspecif oper execut model begin experi section 51 compar execut time five protocol gelglob event list nullnul messag condcondit event anm isp singl processor configur instruct identifi uniqu set sequen tial overhead incur protocol one processor subsequ section investig impact modif variou model characterist like model connect section 52 lookahead properti section 53 comput granular section 54 51 simul cqnf model one processor figur 4 show execut time cqnf model 100 000 one processor sparcserv 1000 seen figur execut time protocol differ significantli even one processor comput granular associ event model small make protocolspecif overhead associ event rel larg allow us clearli compar overhead variou protocol primari purpos studi figur 4 isp best execut time regard close approxim pure comput cost model first compar isp gel protocol major differ two protocol entiti schedul strategi describ section 45 isp employ entiti schedul scheme conserv protocol entiti remov process mani safe messag input queue possibl swap isp mean entiti schedul execut swap next messag local trace avail input queue entiti contrast gel algorithm schedul entiti strict order messag timestamp caus numer context switch tabl 1 show total number context switch protocol configur number context switch isp approxim 15 time isp gel null cond anm execut time protocol figur 4 execut time cqnf model one processor tabl 1 number context switch null messag global ecot comput one processor execut theta1 000 isp gel null cond anm context switch 85 1257 393 1149 914 global comput number regular messag process simul 1193 theta1 000 less requir gel algorithm consid total messag process execut 1200000 messag gel protocol almost one context switch per messag 2 isp conserv protocol also use effici data structur order entiti gel algorithm wherea gel must use order data structur like splay tree sort entiti order earliest timestamp messag input queue protocol use simpl unord list entiti schedul basi safe messag thu perform differ isp gel protocol primarili due differ cost context switch entiti queue manag next compar perform isp three conserv protocol first isp fewer context switch protocol number messag process entiti use conserv protocol bound eit wherea isp upper bound differ number context switch among three conserv protocol due differ comput eit well due addit context switch may requir process synchron messag instanc cond protocol 2 sinc maisi runtim system main thread correspond entiti number context switch larger number messag three time number context switch null protocol cond protocol switch entiti everi global ecot comput global updat eit valu entiti null protocol requir context switch process everi null messag cqnf model use experi consist 128 entiti switch entiti lookahead 1 time unit thu window size two global ecot comput small shown tabl 1 cond protocol approxim 49000 global comput averag one global comput everi advanc 2 unit simul time even though null protocol use context switch execut time significantli larger isp larg number null messag 1732000 tabl 1 must process result updat eit although anm protocol incur overhead due null messag global ecot comput number null messag global ecot comput significantli less null cond protocol result perform lie somewher null cond protocol 52 commun topolog section 41 introduc maisi construct alter default connect entiti next experi examin impact commun topolog perform parallel conserv simul protocol cqnf model execut differ valu total number serevr kept constant among three configur keep n q 128 paramet model set 000 total number entiti n q 1 kept constant among differ configur also keep size model constant n increas connect model increas dramat n switch entiti n outgo channel q server entiti tandem queue one outgo channel instanc total number link 368 1120 4160 respect first measur speedup isp protocol speedup calcul respect one processor isp execut seen figur 5 speedup isp rel independ n impli inher parallel avail three configur affect significantli number link 3 figur 6 8 show effici three conserv protocol 64g 3 small reduct speedup n64 due dramat increas number context switch configur seen tabl 2 number processor figur 5 cqnf speedup achiev isp02061 effici number processor null cond figur cqnf effici protocol effici number processor null cond figur 7 cqnf effici protocol effici number processor null cond figur 8 cqnf effici protocol null messag number processor figur 9 cqnf nmr null protocol135 window size number processor figur 10 cqnf window size cond protocol seen three graph null anm protocol similar effici except sequenti case cond protocol perform quit differ examin perform protocol follow subsect 521 null messag protocol null protocol eit valu entiti calcul use eot valu incom channel ie entiti sourceset number incom channel entiti small eit valu advanc null messag thu effici null protocol rel high case low connect shown figur 6 howev high connect protocol requir larg number null messag perform degrad significantli null messag ratio nmr commonlyus perform metric protocol defin ratio number null messag number regular messag process model seen figur 9 nmr low increas substanti connect model becom dens entiti must send null messag even entiti processor nmr configur chang number processor howev effici decreas number processor increas null messag remot processor expens processorloc null messag 522 condit event protocol unlik consrv protocol perform cond protocol affect communictaion topolog model cost global ecot comput independ topolog thu figur 6 8 effici cond protocol degrad rather improv n goe 32 64 reason rel cond protocol perform isp degrad caus rel effici cond protocol improv effect explain look tabl 2 present number context switch incur one processor execut three model configur protocol seen tabl measur increas dramat isp n increas 32 64 cond protocol alreadi one context switch per messag chang significantli n increas averag window size anoth commonli use metric protocol defin number synchron figur show averag window size three experi cond protocol tabl 2 number context switch one processor execut theta1 000 regular messag isp gel null cond anm seen figur averag window size parallel implement close 1 impli protocol requir one global comput everi simul clock tick one processor execut window size 2 smaller window size parallel implement caus need flush messag may transit comput global ecot describ section 44 howev valu window size w appear strong correl perform cond protocol first although w drop 50 go 1 2 processor effici drop dramat second although effici protocol continu decreas number processor p increas figur 6 figur show w chang dramat p 2 perform degrad protocol number processor may explain follow first processor broadcast ecot messag global ecot comput requir messag p processor execut p 1 second idl time spent lp wait complet global ecot comput also grow significantli increas 523 anm protocol effici anm protocol shown figur 6 8 close null protocol except one processor execut figur 11 12 show nmr averag window size respect anm protocol almost nmr valu null protocol averag window size vari wide model although window size becom narrow n increas occur follow reason ffl ecot comput initi entiti processor messag process n increas sinc everi processor must send one ecot messag one global ecot comput eit updat ecot messag easili defer unless everi processor entiti schedul ffl even global ecot calcul unhind may effect null messag alreadi advanc eit valu case number null messag decreas global ecot comput anm protocol higher overhead null protocol therefor effici anm protocol figur 6 8 close one null protocol except one processor execut model rare sent sinc null messag effici advanc eit valu entiti situat processor entiti schedul unlik howev 64 perform anm protocol expect closer cond protocol sinc eit updat ecot messag effici updat null messag seen figur 12 ecot messag fact sent frequent averag window size approxim 7 64 ineffici case aris larg number null messag sent entiti henc durat processor would idl cond protocol fill process time null messag seen compar figur 9 11 protocol almost nmr consid anm protocol overhead caus ecot comput reason effici null protocol ecot messag actual improv advanc eit littl improv make overhead ecot comput experi section global ecot comput anm protocol suffici impact improv perform howev model experi good lookahead valu thu null messag effici updat eit valu entiti next section examin case simul model poor lookahead compar perform anm null protocol case 53 lookahead 531 precomput servic time well known perform conserv protocol depend larg lookahead valu model lookahead stochast server improv precomput servic times14 section examin effect lookahead cqnf model precomput servic time instead lookahead set one time unit lower bound servic time gener shift exponenti distribut chang entiti lookahead valu one time unit worst lookahead valu experi figur 13 15 show effect chang plot p perform degrad result chang function number processor note perform isp affect lookahead valu use lookahead simul run thu isp perform ident result shown figur 5 fraction perform degrad calcul follow precomput servic time execut time precomput servic time gamma 1 interestingli figur show perform degrad neg case indic execut actual becom faster lookahead reduc null anm protocol attribut choic schedul strategi discuss section 42 although strategi reduc context switch overhead may also caus starvat entiti entiti schedul long period block progress entiti processor may also block entiti remot processor thu increas overal idl time note perform improv poorer lookahead occur primarili configur commun topolog dens number job avail server typic greater 1 may lead long schedul cycl cond protocol durat window size determin long entiti schedul context switch longer window impli fewer ecot comput may also lead increas block entiti thu case poorer lookahead may forc frequent ecot messag thu improv perform effect relat commun topolog rel perform cond protocol without lookahead almost three valu n figur 13 15 perform null anm protocol degrad connect model becom dens perform cond protocol chang significantli discuss particular perform cond protocol degrad although alreadi outperform two protocol experi better lookahead figur 8 indic cond protocol signific advantag null messag base protocol case simul model high connect poor lookahead anoth interest observ perform anm protocol degrad much null protocol figur 15 behavior may understood figur 16 show rel increas number null messag global ecot comput poor lookahead experi consid section good lookahead scenario section 52 seen figur 16 model poor lookahead anm protocol suppress increas null messag increas number global ecot comput result show capabl anm protocol implicitli switch eit comput base ecot messag eit valu calcul effici null messag null messag number processor figur 11 cqnf nmr anm protocol501502503504501 2 3 4 5 6 7 8 window size number processor figur 12 cqnf window size anm protocol02061 perform degrad number processor null cond figur 13 cqnf perform low lookahead perform degrad number processor null cond figur 14 cqnf perform low lookahead perform degrad number processor null cond figur 15 cqnf perform low lookahead cqnf good lookahead number processor number global comput cond number global comput anm number null messag null number null messag anm figur increas null messag global comput low lookahead 532 cqn prioriti server cqnp section 531 examin impact lookahead explicitli reduc lookahead valu server entiti section vari lookahead use prioriti server rather fifo server tandem queue assum job one two prioriti class low high low prioriti job preempt high prioriti job case precomput servic time alway imrov lookahead low prioriti job servic may interrupt time lookahead remain servic time low prioriti job precomput servic time use server idl experi describ section investig impact variabl lookahead prioriti server perform three protocol figur 17 show speedup achiev isp cqn model prioriti server cqnp 25 job 256 assum high prioriti comparison figur 5 isp achiev slightli better perform event prioriti server slightli higher comput granular fcf server impact comput granular protocol perform explor next section sinc isp perform depend lookahead model perform degrad expect observ protocol figur 20 show effici protocol 64g perform cond protocol prioriti server similar fcf server figur 6 8 perform two protocol consider wors prioriti server even though connect cond protocol outperform two protocol show cond protocol connect insensit also less lookahead depend null messag base protocol 54 comput granular one good characterist cqn model evalu parallel simul protocol fine comput granular comput granular protocolindepend factor chang breakdown cost requir differ oper model high comput granular percentag contribut protocoldepend factor execut time suffici small produc rel high effici simul protocol examin insert synthet comput fragment contain 1000000 oper execut everi incom messag server figur 21 show impact comput granular speedup use isp cqnf model 32 number processor figur 17 cqnp speedup achiev isp02061 effici number processor null cond figur cqnp effici protocol effici number processor null cond figur 19 cqnp effici protocol effici number processor null cond figur 20 cqnp effici protocol number processor origin comput fragment figur 21 cqnf speedup synthet comput fragment effici number processor null cond figur 22 cqnf effici protocol synthet comput fragment simul horizon h reduc 1000 sequenti execut time model dummi comput fragment 1200 time longer origin model figur perform improv isp close linear perform degrad littl number processor 5 6 7 decomposit model among processor lead unbalanc workload one protocolindepend factor parallel simul improv speedup larger comput granular attribut improv ratio event process time protocolindepend factor commun latenc context switch time figur 22 show impact increas comput granular effici three conserv protocol clearli addit comput diminish protocoldepend overhead null anm protocol perform two protocol close isp perform cond protocol howev get wors number processor increas effici 54 8 processor describ 522 degrad due idl time spent processor wait complet global comput impli even cond protocol employ effici method global ecot comput overhead becom close zero protocol achiev half speedup isp execut 8 processor idl time must spent wait global ecot comput complet result show inher synchron cond protocol although implement algorithm asynchron 6 relat work prior work evalu perform discreteev model conserv protocol use analyt simul model well experiment studi perform null messag deadlock avoid algorithm 6 use queu network synthet benchmark studi fujimoto 10 reed et al 16 studi perform deadlock avoid algorithm deadlock detect recoveri algorithm share memori architectur chandi sherman 7 describ condit event algorithm studi perform use queu network implement condit event algorithm synchron ie lp carri local comput follow global comput perform studi carri paper assum network high number job paper compar perform condit event protocol other nicol15 describ overhead synchron algorithm similar condit event algorithm studi paper mathemat model construct qualifi overhead due variou protocolspecif factor howev analyt tractabl paper ignor cost protocolindepend oper simplif commun topolog physic system thu result use qualit comparison provid tight upper bound potenti perform deriv use isp effect lookahead perform conserv protocol studi fujimoto 10 nicol 14 introduc idea precomput servic time improv lookahead cota sargent 8 describ use graphic represent process automat comput lookahead perform studi carri simul model specif experi perform studi present paper differ two import respect first develop use new metric effici respect ideal simul protocol allow protocolspecif overhead separ cleanli overhead directli contribut simul protocol second implement algorithm separ model allow perform comparison consist algorithm implement directli simul model conclus import goal parallel simul research facilit use discreteev simul commun maisi simul languag separ simul model specif algorithm sequenti parallel use execut model transpar sequenti optimist implement maisi develop describ previous 2 paper studi perform varieti conserv algorithm implement maisi three algorithm studi includ null messag algorithm condit event algorithm new algorithm call acceler null messag algorithm combin preced approach maisi model develop standard queu network benchmark variou configur model execut use three differ algorithm result perform studi may summar follow ffl ideal simul protocol isp provid suitabl basi compar perform conserv protocol clearli separ protocol depend independ factor affect perform given synchron protocol give realist lower bound execut time simul model given partit architectur exist metric like speedup throughput indic perform provid addit insight could improv metric like nmr null messag ratio window size use character protocol depend overhead null messag condit event protocol respect use among divers set simul protocol isp hand use analyst compar protocoldepend overhead even conserv optimist protocol ffl null messag algorithm exploit good parallel model dens connect howev perform algorithm sensit commun topolog lookahead characterist model thu appropri model high connect low lookahead valu ffl insensit commun topolog model condit event protocol outperform null messag base protocol lp highli coupl also perform well model poor lookahead although algorithm syn chronous degrad perform parallel execut high number processor perform protocol stabl throughout experi faster global ecot comput may achiev better perform sinc condit event algorithm also good characterist requir posit lookahead valu algorithm may also use simul model zero lookahead cycl ffl perform anm protocol null messag condit event protocol one processor execut expect perform parallel execut howev close null messag protocol sinc small eit advanc null messag defer global ecot comput thu perform wors condit event protocol simul model high connect poor lookahead howev compar null messag protocol case anm protocol prevent explos number null messag frequent global ecot computa tion perform better null messag protocol show protocol capabl adapt implicitli switch execut mode null messag base synchron condit event base one better perform sinc algorithm also inherit characterist condit event algorithm simul model zero lookahead cycl best suit model whose properti unknown futur work includ use isp perform evalu variou algorithm optimist algorithm synchron algorithm togeth algorithm examin paper use addit applic differ disciplin acknowledg author wish thank professor iyer three review valuabl comment suggest result significnat improv present also acknowledg assist past present team member parallel comput laboratori role develop maisi softwar maisi may obtain annonym ftp httpmaycsuclaeduprojectsmaisi r stabil event synchronis distribut discret event sim ulat unifi framework distribut simul maisi languag design effici discreteev simul languag support parallel discreteev simul global virtual time algorithm asynchron distribut simul via sequenc parallel comput condit event approach distribut simul framework automat lookahead comput conserv distribut simul parallel discret event simul perform measur distribut simul strategi state art parallel simul understand limit optimist conserv parallel simul distribut discreteev simul parallel discret event simul fcf stochast queue network cost conserv synchron parallel discret event simul parallel discret event simul share memori approach variant chandymisrabry distribut simul al gorithm tr ctr alfr park richard fujimoto kalyan perumalla conserv synchron largescal network simul proceed eighteenth workshop parallel distribut simul may 1619 2004 kufstein austria jinsheng xu moon jung chung predict perform synchron discret event simul ieee transact parallel distribut system v15 n12 p11301137 decemb 2004 mookyoung chung chongmin kyung improv lookahead parallel multiprocessor simul use dynam execut path predict proceed 20th workshop principl advanc distribut simul p1118 may 2426 2006