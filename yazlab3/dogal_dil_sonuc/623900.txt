lowlat commun atm network use activ messag recent develop commun architectur parallel machin reduc commun overhead latenc order magnitud paper examin whether techniqu carri cluster workstat connect atm network even though cluster use standard oper system softwar equip network interfac optim stream commun allow direct protect userlevel access network use network without reliabl transmiss flow control first part paper describ differ commun characterist cluster workstat built standard hardwar softwar compon stateoftheart multiprocessor second part evalu prototyp implement lowlat activ messag commun model sun workstat cluster interconnect atm network measur show applicationlevel roundtrip latenc 50 microsecond small messag roughli compar activ messag implement think machin cm5 multiprocessor b introduct shift slow broadcastbas local area network high bandwidth switch network architectur make use cluster workstat 1 platform parallel process attract number softwar packag 56 alreadi support 1 term cluster use refer collect workstationclass machin interconnect lowlat highbandwidth network parallel process today workstat net work commun perform two order magnitud inferior stateofth art multiprocessor result embarassingli parallel applic ie parallel applic essenti never commun make use environ network technolog atm1 offer opportun close gap exampl atm cell roughli size messag multiprocessor take microsecond send receiv cell atm switch configur provid bisect bandwidth compar parallel machin network rout latenc order microsecond 3 howev date commun potenti avail applic level pure technic point view gap cluster workstat multiprocessor certainli close distinct two type system becom blur differ remain partic ular design construct multiprocessor allow better integr compon 2 paper focus exclus scalabl multiprocessor architectur specif exclud busbas sharedmemori multiprocessor 3 current atm switch latenc order magnitud higher compar multiprocessor net work howev differ seem inher atm network least local area switch document creat framemak 402 design fit togeth addit share physic compon power suppli cool cabinet potenti reduc cost allow denser packag debat signific technolog differ still open becom clear two approach yield qualit similar hardwar system inde possibl take cluster workstat load system softwar make look almost ident multi processor mean continu spectrum platform span entir rang workstat ethernet stateoftheart multiprocessor becom avail distinct multiprocessor cluster arbitrari technic point view pragmat point view howev signific differ like remain import attract use cluster workstat instead multiprocessor lie offtheshelf avail major hardwar softwar compon mean compon readili avail familiar cost lower economi scale leverag across entir workstat user commun thu even technic point view continu spectrum cluster multiprocessor use offtheshelf compon cluster maintain differ fact use standard compon cluster rais question whether reason use parallel process recent advanc multiprocessor commun perform princip due tighter integr program model compil oper system function hardwar primit clear whether advanc carri cluster whether use standard compon squar odd achiev level integr requir enabl modern parallel program mod el specif new commun architectur distribut share memori explicit remot memori access activ messag reduc cost hundr thousand microsecond dozen precis integr system compon new commun architectur design network interfac implement common primit directli hardwar allow oper system move critic commun path without compromis protec tion well suit highlevel languag implement paper examin whether techniqu develop improv commun perform multiproc sor particular activ messag carri cluster workstat standard network mostli standard system softwar paper assum current state art technolog cluster use atm network differ multiprocessor three major aspect cluster use standard oper system softwar impli less coordin among individu node particular respect process schedul address translat atm network provid reliabl deliveri flow control taken grant multiprocessor network network interfac workstat optim stream commun eg tcpip less well integr overal architectur eg connect io bu instead memori bu compar commun cluster multiprocessor paper make two major contribut first analyz section 2 implic differ cluster multiprocessor design commun layer similar use multiprocessor second describ section 3 design activ messag prototyp implement collect sun workstat interconnect atm network yield applicationtoapplica tion latenc order 20 use activ messag workstat cluster briefli contrast approach section 4 section 5 conclud paper technic issu collect workstat use mani differ form run larg applic order establish basi comparison multiprocessor paper limit consid collect workstat call cluster consist homogen set machin dedic run parallel applic locat close proxim machin room interconnect atm network cluster employ larg varieti set cluster could simpli provid highperform comput servic user commun run larg parallel applic typic set would comput resourc distribut applic one exampl stormcast weather monitor system norway run larg collect machin spread across larg portion countri use cluster dozen workstat machin room without high speed network case run computeintens weather predict model emit storm warn 1 discuss differ fault isol characterist beyond scope paper ing avail lowlat commun among workstat would enabl use parallel program languag power parallel algorithm requir closer coupl among processor possibl today concentr comput cluster offer largest potenti improv latenc longhaul link domin speedoflight network congest issu wide area commun compar better serv today distribut comput softwar note paper argu run concurr applic heterogen environ across larg distanc workstat happen sit idl interest design point fact use success fulli set commun issu occur context compar multiprocessor given applic cluster consid exhibit characterist similar multiproc sor program model use would compara ble ident popular parallel comput includ variou form messag pass eg sendrec pvm share memori eg cach coher share memori remot read write explicit global memori parallel object orient languag eg numer c extens parallel machin sever propos commun architectur achiev low overhead low latenc high bandwidth requir high perform implement program model particular cach coher share mem remot read write activ messag offer roundtrip commun within hundr instruct time frequent commun fine granular object object cach line basi remain compat high perform set overhead commun time spent processor initi communica tion essenti cost push messag data network interfac send end pull receiv end virtual cycl spent protocol handl reliabl flow control handl hardwar oper system need involv everi commun oper network interfac hardwar enforc protect boundari across network commun architectur move straightforward manner multiprocessor cluster workstat atm network three major differ two atm network offer neither reliabl deliveri flow control atm network interfac provid support protect userlevel access network workstat oper system coordin process schedul address translat global cope differ pose major technic challeng may eventu requir integr mul tiprocessorspecif featur cluster follow three subsect present natur differ detail discuss result issu 21 reliabl flow control network multiprocessor network flow control implement hardwar linkbylink basi whenev input buffer router fill output upstream router disabl prevent buffer overflow flow control thu effect block messag network eventu backpressur propa gate send node prevent inject messag mechan guarante messag never drop due buffer space limit within network receiv end addit electr characterist network design ensur low error rate use simpl error detect correct mechan impl ment hardwar offer reliabl within network typic process node contrast atm network provid form flow control offer reliabl deliveri instead higher protocol layer must detect cell loss corrupt caus retransmiss partit respons may accept case streambas commun eg tcpip video audio question parallel comput set flow control error detect correct multiprocessor network serv cover four caus messag loss buffer overflow receiv softwar buffer overflow receiv network interfac buffer overflow within network messag corrupt due hardwar error atm network simpl window base endtoend flow control scheme permessag crc use aal5 cover first last case 1 cell loss addit prevent buffer overflow receiv network interfac achiev ensur rate cell move interfac main memori least larg maxim cell arriv rate prevent buffer overflow within network howev realist possibl use endtoend flow control particularli problem parallel comput set node tend commun node highli regular irregular pattern 1 although transmiss media may caus burst error correct crc code unpredict interv degre content within network therefor measur predict accuraci either sender receiv commun pattern result high content result high cell loss rate caus extens retransmiss tradit flow control scheme use streambas commun avoid fruitless retransmiss storm dynam reduc transmiss rate connect experi high cell loss rate work set follow law larg number content wide area network tend vari instantan therefor degre content observ recent past good predictor content near futur illustr difficulti parallel comput set consid implement parallel sort effici parallel sort algorithm 3 base altern local sort node permut phase node exchang data node permut phase serv move element sort toward correct posit commun pattern observ highli dynam characterist depend larg degre input data point attempt data rate given node exce link rate output buffer upstream switch start fill commun pattern chang rapidli essenti everi cell futil attempt predict content given toall commun pattern probabl intern content among seemingli unrel connect high beyond problem caus content result retransmiss lack reliabl deliveri guarante atm network impos certain overhead commun primit specif sender must keep copi cell sent correspond acknowledg receiv case cell must retransmit mean messag transfer directli processor regist network interfac possibl cm5 12 rather memori copi must made well 22 userlevel access network interfac recent multiprocessor commun architectur achiev signific reduct commun overhead elimin oper system critic path order compromis secur network interfac must offer form protect mechan share memori model memori manag unit extend map remot memori local virtual user address space oper system enforc secur manag address translat tabl messagebas network interfac contain node address translat tabl map user virtual node number onto physic node address space oper system enforc secur control address translat therebi prevent process send messag arbitrari node current gener messag base network interfac control destin node address therefor requir process parallel program run time next gener add send process id messag allow receiv network interfac discrimin messag destin current run process retriev messag directli messag dormant process must queu typic oper system later retriev contrast network interfac avail workstat yet incorpor form protect mechan instead oper system must involv send recept everi messag connect base natur atm network would princip allow design protect mechan limit virtual circuit user process access oper system would still control virtual circuit setup architectur network layer current oper system seem setup allow userlevel network interfac access appear unlik network interfac featur becom commonplac soon challeng highperform commun layer cluster thu minim path kernel judici coordin userkernel interact 23 coordin system softwar across commun node almost commun architectur messag recept logic critic perform bottleneck order abl handl incom messag full network bandwidth process requir arriv messag must minim care trick use multiprocessor system ensur rapid messag handl constrain sender send messag easi handl share memori system done coordin address translat tabl among process node origin node translat virtual memori address remot access directli place correspond physic memori address messag set commun primit small fix eg read write forc sender perform complic part remot memori access name protect check address translat handl request rel simpl implement 1 virtual address sent receiv node could discov request virtual memori locat page disk result handl messag would becom rather involv activ messag multiprocessor schedul process assum coordin among node commun process execut simultan respect node guarante messag handl immedi arriv destin process order accomplish sender activ messag specifi userlevel handler destin whose role extract messag network integr ongo comput handler also implement simpl remot servic send repli activ messag back howev order prevent deadlock commun pattern limit request repli eg handler repli messag allow send messag implement activ messag typic reserv first word messag handler address handler receiv end dispatch immedi messag arriv dispos messag fact messag layer call upon handler deal messag fifo order simplifi buffer consider requir tradit messag pass model pvm mpi nx model allow process consum messag arbitrari order arbitrari time forc commun architectur implement gener buffer messag match mechan high cost cluster fact oper system individu node nearli coordin contradict assumpt messag alway consum quickli upon arriv case activ messag destin process might suspend run handler share memori model memori locat request might map although exact coordin possibl without major chang oper system core implement either commun model like abl perform coordin among node influenc local oper system accord ingli may allow commun layer assum common case everyth work fine must abl handl difficult case well 24 summari even though superfici cluster workstat appear technic compar multiproc 1 cach coher share memori stretch character given cach receiv node essenti perform anoth address translat may miss requir addit commun node complet request sor realiti key characterist differ caus signific implement difficulti compar raw hardwar link bandwidth bisect bandwidth rout latenc conceal lack cluster flow control reliabl userlevel network access oper system coordin shortcom inevit result lower commun perform quantit effect perform evalu next section present prototyp implement activ messag cluster sun workstat howev lack flowcontrol atm network pose fundament problem catastroph perform degrad occur due signific cell loss particular commun pattern 3 ssam sparcstat activ messag prototyp ssam prototyp implement critic part activ messag commun architectur cluster sparcstat connect atm network primari goal evalu whether possibl provid parallel program environ cluster compar found multipro cessor prototyp primarili concern provid perform par parallel machin address handicap atm network identifi previou section particular prototyp provid reliabl commun evalu cost perform necessari flowcontrol error check softwar minim kernel intervent determin cost provid protect softwar buffer design toler arbitrari context switch node time limit experiment setup describ avail prototyp provid inform neither cell loss due content within network affect perfor manc schedul process coordin improv overal perform parallel applic 31 activ messag commun architectur activ messag commun architectur 4 offer simpl gener purpos commun primit thin veneer raw hardwar intend serv substrat build librari provid higherlevel commun abstract gener commun code directli par allellanguag compil unlik commun layer intend direct use applic programm realli provid lowerlevel servic commun librari runtim system built basic commun primit messag associ small amount comput form handler receiv end typic first word activ messag point handler messag messag arriv comput node interrupt handler execut role handler get messag network integr ongo comput andor send repli messag back buffer schedul provid activ messag extrem primit therebi fast buffer involv actual transport schedul requir activ handler suffici support mani higherlevel abstract gener buffer schedul easili construct layer activ messag need minimalist approach avoid pay perform penalti unneed function order prevent deadlock livelock activ messag restrict commun pattern request repli ie handler request messag allow send repli messag repli handler allow send repli 311 ssam function current implement gear toward send small messag fit payload singl atm cell eight 48 avail byte payload atm cell use ssam hold flowcontrol inform 16 bit handler address 32 bit aal34 compat checksum 16 bit remain 40 byte hold activ messag data c header file interfac ssam shown figur 1 send request activ messag user place messag data perconnect buffer provid ssam call ssam10 connect identifi remot handler address ssam10 add flowcontrol inform trap kernel messag inject net work also poll receiv process incom messag receiv end network poll ssam10 ssampol latter poll net work messag accumul receiv fifo move buffer ssam call appropri handler messag pass argument origin connect identifi address buffer hold messag address buffer repli messag handler process messag may send repli messag back place data buffer provid return address repli handler null repli sent current prototyp use interrupt instead network poll everi time messag sent mean long process send messag also handl incom one explicit poll function provid program part commun use interrupt plan implement yet 312 exampl implement remot read ssam sampl implement splitphas remot doubleword read shown figur 2 readdoubl function increment counter outstand read format request activ messag address read well inform repli send messag readdoubleh handler fetch remot locat send repli back read doublerh repli handler store data memori decrement counter origin processor wait complet read busywait counter end readdoubl splitphas read could construct easili expos counter caller could proceed comput initi read wait counter data requir 32 experiment setup experiment setup use evalu perform prototyp ssam implement consist 60mhz sparcstation20 25mhz sparcsta run suno 41 two machin connect via fore system sba100 atm interfac use 140mb taxi fiber interfac locat sbu 32bit io bu run 20 25mhz pro figur 1 c interfac sparcstat activ messag sparcstat atm activ messag initi activ messag extern int ssaminitvoid activ messag handler int connect void inbuf ssamreqhandlerint connect void inbuf void replybuf buffer send messag defin ssammaxconn 32 extern void ssamreqbufssammaxconn extern void ssam10int connect ssamreqhandl handler poll network explicitli extern void ssampollvoid vide 36cell deep output fifo well 292cell input fifo send cell processor store 56 byte memorymap output fifo receiv cell read 56 byte input fifo regist interfac indic number cell avail input fifo figur 2 sampl remot read implement use ssam remot read static volatil int readcnt 0 struct doubl src dest doubl data4 read 32 byte remot node void read32int conn doubl src doubl dest read32msg readcnt ssam10conn read32h read request handler static ssamreplyhandl read32hint conn read32msg read32msg doubl outdest els non doubleword align code omit return read32rh read repli handler static void read32rhint conn read32msg doubl dest indest els non doubleword align code omit readcnt note network interfac use much simpler closer multiprocessor ni secondgener atm interfac avail today function perform hardwar beyond simpli move cell ontooff fiber checksum gener check atm header aal34 compat payload particular dma segment reassembl multicel packet provid 33 ssam implement implement sparcstat atm activ messag layer consist two part devic driver dynam load kernel userlevel librari link applic use ssam driver implement standard function open close atm devic provid two path send receiv cell fast path describ consist three trap instruct lead directli code send receiv individu atm cell trap rel gener function specif activ messag userlevel librari also perform flowcontrol buffer man agement convent readwrit system call interfac provid comparison purpos allow send receiv cell use pure devic driver approach trap send receiv cell consist care craft assembl languag routin routin small 28 43 instruct send receiv trap respect use avail regist care fulli regist usag simplifi sparc archi tectur use circular regist file provid clean 8regist window trap interfac program trap via function call argument pass anoth 8 regist becom avail trap follow paragraph describ critic part ssam implement detail 331 flowcontrol simpl slide window flow control scheme use prevent overrun receiv buffer detect cell loss window size dimens allow close full bandwidth commun among pair processor order implement flow control window size w process prealloc memori hold 4w cell per everi process communi cate algorithm send request messag poll receiv free window slot avail inject cell network save one buffer well case retransmit upon receipt request messag messag layer move cell buffer soon correspond process run call activ messag handler handler issu repli sent copi held buffer handler gener repli explicit acknowledg sent upon receipt repli acknowledg buffer hold origin request messag reus note distinct request repli made activ messag allow acknowledg piggyback onto repli recoveri scheme use case lost duplic cell standard except recept duplic request messag may indic lost repli retransmit import realiz flow control mechan realli attempt minim messag loss due congest within net work lack flowcontrol atm network effect preclud simpl congest avoid scheme larger testb becom avail atm commun agre router handl buffer overflow seem futil invest sophist flowcontrol mechan nevertheless bursti natur parallel comput commun pattern like requir solut perform characterist atm network becom robust multiprocessor network 332 userkernel interfac buffer manag streamlin userkernel interfac import factor contribut perform ssam prototyp kernel prealloc buffer process devic open page pin prevent pageout map use mmap process address space everi messag send userlevel librari choos buffer next messag place pointer export variabl applic program move messag data buffer pass connect id handler address ssam finish format cell ad flow control handler trap kernel trap pass messag offset within buffer area connect id regist kernel protect ensur simpl mask limit connect id offset rang lookup map current process connect id virtual circuit kernel final move cell output fifo receiv end readatm kernel trap deliv batch incom cell predetermin share memori buffer number cell receiv return regist cell kernel perform four task load first half cell regist use vci index tabl obtain address appropri process input buffer move full cell buffer check integr cell use three flag bit set ni last byte upon return trap ssam librari loop receiv cell check flowcontrol inform call appropri handler request repli messag send explicit acknowledg need 34 ssam perform follow paragraph describ perform measur ssam made number synthet benchmark follow terminolog use overhead consist processor cycl spent prepar send receiv messag latenc time messag send routin call time messag handl remot end bandwidth rate user data transfer perform goal ssam fiber rate 140mbit transmit cell everi 314 532 byte atm payload bandwidth 152mb 1 341 atm trap detail cost breakdown oper occur trap send receiv cell shown tabl 1 two time column refer measur taken sparcstat 1 sparcstat 20 respect time obtain measur repeat execut trap gettimeofday use microsecondaccu rate clock take 95 ss20 time breakdown trap measur comment appropri instruct somewhat approxim due pipelin overlap occur success instruct write trap cost broken 5 part cost trap return protect check overhead fetch address load cell regist push cell network interfac ss show clearli fiber satur send cell time user level also indic major cost 75 lie access network interfac across sbu cost trap surprisingli low even though second largest item fact could reduc slightli current implement add level indirect trap dispatch simplifi dynam load devic driver 2 read trap item similarli cost trap return fetch devic regist count avail cell addit overhead settingup address load cell network interfac 1 bandwidth measur megabyt per second 2 kernel writeprotect trap vector bootup ssam prototyp use perman load trap perform indirect jump via kernel variabl allow simpl dynam driver load demultiplex among process store cell away total cost show trap receiv singl cell well percel cost trap receiv cell access devic domin due fact doubleword load incur full latenc sbu access total time 461 ss20 fall short fiber cell time limit achiev bandwidth 68 fiber writeread trap first send cell receiv chunk cell amort cost trap across function overlap check cell count slightli send last item tabl show cost null system call comparison purpos write file descriptor 1 use clear system call approach would yield perform far inferior trap would achiev fraction fiber bandwidth 342 atm readwrit system call addit direct trap devic driver allow cell sent receiv use tradit read system call devic file descriptor time convent path provid comparison purpos read write entri point devic driver limit send receiv singl cell multicel read write could support easili read write entri point perform follow oper check appropri file descriptor transfer data user space intern buffer use uiomov transfer data intern buffer fifo network interfac intern buffer use data transfer directli user space devic use uiomov due fact devic fifo word address use intern buffer also allow doubleword access devic fifo improv access time consider tabl 2 show cost variou part read write system call syscal overhead entri reflect time taken read respect write system call empti read write devic driver rou tine measur kernel overhead associ system call check fd uiomov entri reflect time spent check valid file descriptor perform uiomov case read also includ time check devic regist hold number cell avail input fifo pushpul cell entri reflect time spent transfer content one cell intern buffer devic fifo write read 1 cell total reflect cost full system call read 0 cell entri time taken unsuccess poll includ system call tabl 2 cost send receiv cell use read system call oper ss20 ss1 write system call syscal overhead 226 100 check fd uiomov 34 16 push cell ni 22 8s write total 282 124 read system call syscal overhead 221 99 pull cell ni 50 13 check fd recv readi uiomov 70 25 read total 1 cell 341 137 read total 0 cell 288 113 tabl 1 cost breakdown trap send receiv cell oper ss20 ss1 traprett 044 203 check pid connect id addtl kernel ovhd 005 050 load cell push 013 387 push cell ni 205 317 total 272 1011 read trap traprett 044 203 check cell count 081 108 addtl kernel ovhd 018 080 per cell pull ni 427 368 per cell demux 009 023 per cell store away 017 350 total 1 cell 587 1132 per cell total total 0 cell read 37 112 total 1 cell read 82 214 null system call 69 40 head file descriptor check read receivereadi regist time show clearli overhead read write system call interfac prohibit small me sage larger messag howev may well viabl choic portabl trap 343 ssam measur activ messag layer built cell send receiv trap shown tabl 3 case one word activ messag payload carri data handler simpli return send request use writereadtrap add littl 1s overhead ss20 cell format flowcontrol handl time roughli cost read trap read 16 cell per trap plu littl 1s flow control handler dispatch repli sent add time writetrap measur show support singlecel activ messag optim longer messag requir achiev peak bulk transfer rate one cellatatim prototyp yield 56mb simpler interfac shorter messag eg byte payload might well use well acceler small request acknowledg often found higherlevel protocol unfortun given trap cost domin network interfac access time sba100 requir 56 byte cell transfer processor unlik signific benefit realiz 344 splitc full implement splitc 2 still progress time remot memori access primit show roundtrip time remot read align byte take 32 ss 20 oneway remot store take 22 payload 1 remot access smaller payload notic cheaper bulk write implement current ssam layer transfer 55mbytess 1 note realist set fore asx100 switch add roughli 10 latenc write time 20 roundtrip read time 7 tabl 3 cost breakdown sparcstat activ messag oper ss20 ss1 send request 50 15 handl request repli sent 56 15 handl request send repli 77 25 handl ack 50 11 handl repli 52 12 experi show use long messag could improv 9mbytess use full atm payload simplifi handl slightli unresolv issu current ssam prototyp influenc process schedul given current buffer scheme ssam layer oper influenc process run perform applica tion howev like highli influenc schedul best influenc schedul semiport fashion requir investig promis approach appear use realtim thread schedul prioriti avail solari 2 amount memori alloc ssam prototyp somewhat excess fact simplic current prototyp use twice mani buffer strictli necessari exampl assum flowcontrol window 32 cell use kernel alloc pin 8kbyte memori per process per connec tion 64node cluster 10 parallel applic run repres 5mb memori per processor number prealloc buffer could reduc without affect peak bulk transfer rate adjust flow control window size dynam idea first cell long messag contain flag request larger window size receiv extra buffer would alloc purpos receiv grant larger window one sender time use first acknowledg cell bulk transfer larger window size remain effect end long messag scheme two benefit request larger window overlap first cell long messag receiv prevent mani sender transfer larg data block simultan would suboptim cach howev fundament appear memori altern low perform price pay neither flowcontrol network coordin process schedul subtl problem atm payload align use sba100 interfac surfac futur 53 byte atm cell pad sba100 56 byte 48byte payload start 6th byte ie halfword align effect bulk transfer payload format design sba100 mind support doubleword move data memori clash network interfac doubleword align atm payload 36 summari prototyp activ messag implement sparcstat atm cluster provid preliminari demonstr commun architectur develop multiprocessor adapt peculiar workstat cluster perform achiev roughli compar multiprocessor cm5 oneway latenc roughli 6s clear without network interfac closer processor perform gap close time taken flowcontrol protect softwar surprisingli low least comparison network interfac access time cost effect shift larg prealloc pin buff er prototyp memori usag somewhat excess scheme compar perform also requir larg buffer speed come care integr layer languag level kernel trap key issu avoid copi applic place data directli kernel pick move devic pass easi check inform kernel particular pass arbitrari virtual address 4 comparison approach atm network commun layer directli compar ssam remot memori access model propos thekkath et al 1011 implement similar ssam use trap reserv opcod mip instruct set implement remot read write instruct 1 major differ two model remot memori oper separ data control transfer activ messag unifi remot memori access data transfer user memori kernel without correspond process run model use allow remot read write full address space process rather commun process must alloc special commun memori segment pin oper system buffer use ssam commun segment flexibl ssam buffer directli hold data structur limit fact segment pin advantag ssam remot memori access coupl data control messag caus small amount user code execut 1 one could easili describ trap employ ssam addit emul commun instruct allow data scatter complex data structur schedul comput directli influenc arriv data remot memori access model limit control transfer offer perseg notif flag order caus file descriptor becom readi final ssam provid reliabl transport mechan remot memori access primit unreli provid flowcontrol tabl 4 compar perform two approach thekkath implement use two decstat 5000 interconnect turbochannel version fore100 atm interfac use ssam perform littl wors ssam data transfer significantli wors control transfer remot read write directli compar transfer payload per cell perform tradit commun layer atm network evalu lin et al 7 show two order magnitud higher commun latenc ssam offer tabl 5 summar best roundtrip latenc oneway bandwidth attain sun 4690 sparcstat 2s connect fore sba100 interfac without switch millisecond scale reflect cost tradit network architectur use layer although clear fore aal5 api slower readwrit system call interfac describ 342 note tcpip implement welloptim fastpath yield submillisecond latenc tabl 4 comparison ssam remot memori access 2 decstat 5000 atm 11 oper ssam remot mem access read latenc 32 45 latenc 22 30 addtl control transfer ovhd none 260 block write 55mb 44mb tabl 5 perform tradit commun layer sun4690 sparcstat 2s atm 7 commun layer roundtrip latenc peak bandwidth fore aal5 api 17m 4mb bsd tcpip socket 39m 2mb pvm tcpip 54m 15mb sun rpc 39m 16mb conclus emerg highbandwidth lowlat network make use cluster workstat attract parallel comput style applic technic point view continu spectrum system conceiv rang collect ethernetbas workstat tightli integr custom multiprocessor howev paper argu cluster character use offtheshelf compon handicap respect multiprocessor hardwar softwar custom allow tighter integr network overal architectur use standard compon particular atm network technolog result three major disadvantag cluster respect multiprocessor atm network offer reliabl deliveri flow control ii current network interfac well integr workstat architectur iii oper system node cluster coordin process schedul address translat prototyp implement activ messag commun model describ paper achiev two order magnitud better perform tradit network layer tabl 6 show result commun latenc bandwidth ballpark stateoftheart multiprocessor key success use larg memori buffer care design lean userkernel interfac major obstacl toward close remain perform gap slow access network interfac across io bu reduc buffer memori usag requir coordin process schedul across node take care flow control softwar domin perform studi behavior atm network parallel comput commun load remain open question tabl comparison ssam perform recent parallel machin machin peak bandwidth roundtrip latenc paragon activ mesg 4 10mb 12 cluster 6 r fast parallel sort logp splitc activ messag mechan integr commun comput pvm 30 user guid refer manual memori coher share virtual memori system distribut network comput local atm network paragon implement nx messag pass interfac sp1 highperform switch effici support multicomput atm network separ data control transfer distribut oper system tr ctr jarek nieplocha robert harrison share memori program metacomput environ global array approach journal supercomput v11 n2 p119136 oct 1997 david e culler lok tin liu richard p martin chad yoshikawa assess fast network interfac ieee micro v16 n1 p3543 februari 1996 thoma e anderson david e culler david patterson team case network workstat ieee micro v15 n1 p5464 februari 1995 bori roussev jie wu distribut comput use java comparison two server design journal system architectur euromicro journal v52 n7 p432440 juli 2006 takashi matsumoto kei hiraki mbcf protect virtual highspe userlevel memorybas commun facil proceed 12th intern confer supercomput p259266 juli 1998 melbourn australia huang c c huang p k mckinley multicast virtual topolog collect commun mpc atm cluster proceed 1995 acmiee confer supercomput cdrom p9e decemb 0408 1995 san diego california unit state dawson r engler fran kaashoek dpf fast flexibl messag demultiplex use dynam code gener acm sigcomm comput commun review v26 n4 p5359 oct 1996 von eicken basu v buch w vogel unet userlevel network interfac parallel distribut comput includ url acm sigop oper system review v29 n5 p4053 dec 3 1995 scott pakin mario lauria andrew chien high perform messag workstat illinoi fast messag fm myrinet proceed 1995 acmiee confer supercomput cdrom p55e decemb 0408 1995 san diego california unit state thoma sterl daniel savaress peter macneic kevin olson clark mobarri bruce fryxel phillip merkey perform evalu convex spp1000 scalabl share memori parallel comput proceed 1995 acmiee confer supercomput cdrom p55 decemb 0408 1995 san diego california unit state wooyoung kim gul agha effici support locat transpar concurr objectori program languag proceed 1995 acmiee confer supercomput cdrom p39e decemb 0408 1995 san diego california unit state k l johnson f kaashoek wallach crl highperform allsoftwar distribut share memori acm sigop oper system review v29 n5 p213226 dec 3 1995