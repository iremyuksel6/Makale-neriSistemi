complex decis versu search basic question np whether search reduc polynomi time decis paper indic answer neg complex assumpt determinist nondeterminist doubleexponenti time unequ languag np search reduc decis construct idea extend natur way interact proof program check similar assumpt author present languag np harder prove membership interact decid membership languag np checkabl b summari summar relationship amongst variou complex class wehav discuss first notat de ne tripl exponenti time class similarlyw let bpeee denot class languag recogn bound error probabilist ntm run time 222 constant c 0 follow inclus known easili deriv known techniqu 3 compip check frip mip coh assumpt nee bpee establish following4 np contain follow compnp compip check frip 5 np coh contain follow compnp compip check frip result line 4 see theorem 29 44 53 36 line 5 see theorem discuss end section 5 final assumpt neee bpeee bfestablish follow 6 np coh2 decis versu searchinnp section present simpl construct languag np searchdoesnot reduc decis assum ee nee later section extend argumenttointeract proof program check let us begin de nition 21 de nition goal section make precis mean search reduc decis np languag l sinc issu discuss length section 11we brief state formal de nition limit discuss essenti conveni proceed step begin de ning nprelat say mean search reduc decis use say mean search reduc decis np languag de nition 21 let beapolynomi time comput binari relat let x 2f0 1g let x f w call member set wit xwe say nprelat exist constant c 2 n x 2f0 1g case x f0 1gjxjc languag de ned f x 2f0 1g x gand denotedl note nprelat l 2 np notat w oracl machin wl x denot output w oracl l f0 1g input x 2f0 1g wenowsay mean search reduc decis nprelat equival formul de nition follow appear bd de nition 22 suppos nprelat w isapolynomi time oracl machin let l l say w wit nder x 2 l case wl x 2 x say search reduc decis exist wit nder note wit nder restrict particular method exampl requir length queri decreas time rather polynomi time comput allow strengthen neg result wenow wish say mean search reduc decis np languag oppos nprelat begin follow terminolog de nition 23 suppos nprelat l f0 1g languag say de ne clearli exist nprelat de ne l howev particular languag l 2 np may mani di erent nprelat de ne lifl npcomplet search reduc decis nprelat howev l npcomplet search might reduc decis other de ning mean search reduc decis l wehavechosen liber ask nprelat de ning l search reduc decis de nition 24 suppos l f0 1g say search reduc decis l exist nprelat de ne l search reduc decis wehav indic section 1 de nition motiv byinteract proof question whether prove membership harder decid prove membership l easi sens l competit npproof system long search reduc decis nprelat de ning lsow led de nition 24 note context languag suchasf0 1g easi associ search problem hard certainli dont wish think search harder decis languag appropri search reduc decis languag accord de nition finallyw note exist languag search reduc decis cours impli exist nprelat search reduc decis neg result de nition stronger simpli conclud exist nprelat search harder decis whenev understood say wit wit nder rather wit wit nder 22 uniformli logspars languag proof use languag combin logarithm spars properti possibl e cientli identifi logarithm size superset string belowani given length let us proceed formal de nition de nition 25 censu function l n n l f0 1g languag l de nedbi say l logspars l n logn l n number string l whichhav length n languag logspars contain log n string length n logspars languag use hsi call next de nition formal idea abl e cientli identifi superset languag speci es notion uniform logspars whichw interest de nition 26 say c f0 1g candid selector l c polynomi time decid l c say languag l uniformli logspars logspars candid selector see section 23 interest uniformli logspars languag form class problem reduc search decis particularli hard let us end section state lemma whichw use later lemma gener work hartmani sewelson immerman hsi show logspars languag np pife nee ylogspars weaker uniform logspars candid selector requir easi see uniformli logspars languag np p nonetheless exist assumpt complet provid sketch entir standard proof lemma 27 ee nee uniformli logspars languag np pproof use standard downward separ argument assum ee nee suppos ne l uniformli logspars l 2 np p hsi claim convers well allend al point proof awe theorem prove use techniqu relativ de ne algorithm input x 2f0 1gn behav follow n rang g output 0 els comput k g1 n output 1 last n k bit x zero c f x x 1g candid selector l c n 21g1 n logn l uniformli logspars fact l 2 np p follow directli fact l0 2 nee ee 23 languag search reduc decis follow main lemma section show reduct searchto decis uniformli logspars languag possibl trivial case languag alreadi p lemma 28 suppos l uniformli logspars languag search reduc decis proof assumpt exist nprelat polynomi time oracl machin w de ne l w wit nder construct polynomi time machin decid lwe begin describ idea inform idea use w subroutin nd wit di culti cours w make oracl queri l access oracl l machin certainli correctli answer queri see nonetheless exploit w suppos moment w guarante make one oracl queri entir comput input x tri possibl answer branch pair parallel comput rst answer queri 0 second answer 1 case run w w halt clearli x 2 l least one run output wit strategi polynomi time idea extend w make log n queri realityhowev w could make polynomi mani queri strategi e cient point weinvok uniform logspars l whichwehav use far impli realli log n e ectiv queri w make sinc w write queri polynomi length use logspars candid selector l identifi set log n string includ string l w could possibl queri need branch overal strategi mind let us specifi oper precis sinc nprelat exist constant c 2 n x 2f0 1g case x f0 1gjxjcwe assum constant 0 input x 2f0 1g machin w halt djxjd step output string length jxjc regardless oracl queri w answer also assum wlog queri made w distinct let c logspars candid selector lnow input x 2f0 1gn machin behav follow run w input x time w make oracl queri q machin provid respons follow 11 q 2 c respond 012 els continu tri parallel possibl answer 0 1 branch two parallel comput rst let respons q 0 second let respons q 1 continu run w comput manner gener number parallel comput dnd step comput halt yield nc bit output output w examin set output previou step accept least one output w sati es x w 1 reject otherwis complet descript machin fact work clear complet let us spell first see accept x x 2 l su ce check least one parallel comput oracl queri correctli accord l answer step 11 obvious correct de nition candid selector step 12 everyth tri one run certainli end right queri answer next thing check run polynomi time su ce show total number parallel comput 1 su ce show number branch path log n wenow argu latter first note queri q length dnd run time w branch occur q 2 c wehav assum ws queri distinct number time branch occur size dnd g c dnd logn complet proof put piec togeth obtain result theorem 29 ee nee exist languag np search reduceto decis proof lemma 27 exist uniformli logspars languag l 2 np p lemma 28 search reduc decis l note fact search reduc decis l impli l npcomplet exist non npcomplet languag npp howev establish assum 3 decid properti extend idea previou section interact proof check paus develop technic materiel materiel use prove result later section particular weintroduc notion decid enabl us give uni ed concis treatment rest result paper begin de nition de nition 31 let beaprobabilist polynomi time oracl machin say decid languag l x 2f0 1g follow true accept probabl 2 3 probabl da x accept 1 3 oracl awe note l decid functionrestrict ip cf bk decid wayofcharacter languag frip also view checker ye instanc weaker multiprov interact proof result fr impli l decid multiprov interact proof us motiv de nition 31 gener notion wit nder light proof lemma 28 properti wit nder import proof correct x 2 l long oracl queri answer correctli ie accord l correct x 2 l nomatt oracl queri answer like wit nder correct decid input guarante except high probabl long oracl queri correctli answer hand x 2 l correct guarante high probabilityno matter oracl queri answeredasw see properti su ce us appropri extend lemma 28 lemma 43 error probabilityof13 de nition alway su cient convenientto also de ne follow de nition 32 let beaprobabilist polynomi time oracl machin say strong decid l x 2f0 1g follow true accept probabl 1 2jxj probabl da x accept 2jxj oracl astandard errorreduct cours say strong decid exist whenev decid exist complet let us state proposit provid sketch proof proposit 33 l decid strong decid proof let decid lwe de ne machin d0 follow input x machin d0 run input x total n time time independ coin toss oracl queri made d0 answer d0 byway oracl make oracl queri q d0 make oracl queri q provid answer receiv d0 output majorityvot output trial see d0 strong decid l let x1axma denot sequenc random variabl repres outcom oracl success trial independ 1msatisfi pr xl 1 2 3 case oracl case x 2 l applic standard cherno bound yield desir conclus wesaw section 2 reduc search decis uniformli logspars languag hard show languag also decid unless bpp lemma 34 suppos l uniformli logspars decid l 2 bpp proof proposit 33 l strong decid dwe showhowt construct bpp machin decid l idea much proof lemma 28 decid play role wit nder play proof input x machin run input x answer oracl queri accord rule use proof lemma 28 accept decid accept least one parallel comput main di erenc respect lemma 28 lie fact way tell whether particular output decid correct lemma 28 one alway check whether output wit nder realli wit instead correct procedur follow fact error probabilityofd small 2n detail follow let constant alway halt dnd step input length n let c logspars candid selector lwe assum wlog oracl queri made distinct input x 2f0 1gn machin behav follow run input x time make oracl queri q machin provid respons follow 11 q 2 c respond 012 els continu tri parallel possibl answer 0 1 branch two parallel comput rst let respons q 0 second let respons q 1 continu run w comput manner gener number parallel comput dnd step comput halt yield output 1 0 output examin set output previou step accept least one output 1 sinc answer one parallel comput correspond l machin accept dnd g let adenot set subset q parallel comput correspond run oracl 2a follow probabl accept a2a pr da accept assumpt strong decid lsow bound jaj 2n claim probabl accept complet proof justifi claim note jaj 2jqj jqj c dnd log n recal bpee denot class languag accept time 2c2n constant c 0bi probabilist machin bound error argument analog use proof lemma 27 show follow lemma 35 nee bpee exist uniformli logspars languag np bppcombin lemma 34 obtain follow theorem whichw use next two section theorem 36 nee bpee exist languag np deciderw remark earlier l decid l 2 frip lemma 36 say nee bpee impliesnp frip later section use theorem 36 show nee bpee impli np checkbi show languag compip checkhav decid cf lemma 43 52 competitiveinteract proof begin recal notion interact proof de ne competitiveinteract proof present result 41 interact proof interact proof extens np one let us begin recal latter np proof system languag l 2 np de ned polynomi time veri er v imagin veri er talk prover parti receiv common input x prover goal convinc veri er accept end allow send veri er singl messag length veri er decis whether accept made function common input messag sinc veri er determinist decis polynomi time binari predic evalu common input prover messag case exist determinist prover p convinc veri er accept complet condit case x 2 l prover abl toconvinc veri er accept sound condit usual specifi np proof system pair pv p prover satisfi complet condit clearli l 2 np possess np proof system interact proof whichwer introduc goldwass micali racko gmr natur extens np proof system parti allow probabilist moreov allow interact exchang messag polynomi number round end exchang v decid whether accept say pv isaninteract proof languag l 1 common input string liti possibl p induc v accept high probabl 2 common input string l prover prevent v reject high probabl let us proceed formal parti interact proof may view probabilist function common input convers far outcom function input x common input c transcript convers far whichw denot x c next messag comput sent parti assum transcript convers pointmay uniqu pars constitu messag wemay discuss complex parti usual way view comput probabilist ture machin exampl veri er parti comput probabilist polynomi time tm complex measur function length common input whichw usual denot n total numberofmov move consist parti comput send messag well length messag assum bound polynomi n end interact veri er accept reject appli determinist binari predic common input transcript convers suppos prover interact veri er b common input x probabl b accept interact common input x probabl b accept given common input x transcript 1 1 g1 g1 g chosen accord follow experi 1 g g n total number move empti string assum simplic speak rst last probabl random choic parti convers de nition 41 interact proof gmr let pv beapair probabilist function say pv interact proof system languag l v probabilist polynomi time 1 everi x 2 l probabl v accept interact p common input x 2 everi x 2 l everi function pb probabl v accept interact pbon common input x 1 3 rst condit complet condit second sound condit note strength sound condit quanti cation function pb call cheat dishonest prover even noncomput one note np proof system special kind interact proof system speci callyan np proof system interact proof system pv p v determinist interact restrict singl messag prover veri er probabl complet sound condit 1 0 rather 2 3 1 3 respect addit interact random howev seem add signi cantli languag recognit power system establish lund fortnow karlo nisan lfkn ip class languag possess interact proof membership contain polynomi time hierarchi shamir sh extend show ip equal pspace wesay function probabilist mean x c parti actual associ distribut string xc random element distribut 42 competitiveinteract proof basic complex theoret question determin e cient prover p interact proof pv languag l certainli would need least abil decid languag de ne competitiveinteract proof system one prover allow speci callyhemust run probabilist polynomi time given access l oracl see competitiveinteract proof repres natur gener problem decis vs search de nition 42 let p beaprobabilist polynomi time oracl machin v aprobabilist polynomi time machin say pv competit interact proof system languag 1 everi x 2 l probabl v accept interact pl common input x 2 everi x 2 l everi interact tm pb probabl v accept interact 6 pbon common input x 1 3 rst condit complet condit second sound condit call p competit prover note sound condit remain de nition interact proof particular restrict comput power cheat prover pbin case x 2 lour goal understand di culti provid correct proof unrestrict sound would appear inher properti proof competit np proof system de ned natur way competit np proof system competitiveinteract proof system parti determinist interact restrict singl messag prover veri er probabl complet sound condit 1 0 rather 2 3 1 3 respect equival np proof system prover restrict polynomi time plu oracl lwenow note search reduc decis l l competit np proof system prover competit np proof system correspond wit nder sens competitiveinteract proof natur extens problem decis versu search 43 np languag possess competitiveinteract proof section 2 present languag l 2 np search unlik reduc decis word l unlik competit np proof system truth howev prove membership np languag remain hard even interact random allow show probabl np languag even havea competitiveinteract proof system given result section 3 need follow lemma show languag possess competitiveinteract proof also decid equival compip frip lemma 43 suppos l competit interact proof system decid proof let pv competitiveinteract proof lwe note probabilist polynomi time run p v given oracl machin input x sampl space convers pa v input x accept convers obtain accept detail follow let r n denot polynomi bound number coin toss use p v input length n pick uniformli random r n bit string rp r n bit string rv run p v common input x use rp coin p rv coin v assum exampl p send rst messag would run p coin rp get ps rst messag would run v coin rv get respons oracl queri made p process answer byway oracl make oracl queri q make oracl queri q provid answer receiv p eventu obtain output v 1 v accept 0 otherwis output valu given particular oracl case da x isa01 random variabl clearli probabl 1 equal probabl v accept interact pa common input x assumpt pv competitiveinteract proof l follow case x 2 l pr da x 1 1 3 oracl case x 2 lcombin lemma 43 theorem 36 yield theorem theorem 44 nee bpee exist languag np competitiveinteract proof note wehav done simpli show interact proof may power competit one languag l theorem 44 np subclass ip possess particularli simpl interact proof show interact proof power competit one would su ce present languag ip necessarili np competitiveinteract proof done weaker assumpt extens argumentw use exampl let show eespac bpee exist languag ip whichdoesnotpossess competitiveinteract proof gener construct languag l lie particular complex class c possess competitiveinteract proof su ce assum doubleexponenti counterpart c contain bpee put phrase doubleexponenti counterpart quot cours alway make sens mani class counterpart mani natur class use paradigm make sens 44 zeroknowledg aspect competit aspect zeroknowledg proof may also worth investig initi suchaninvestig let us tri discuss brie one easili infer known work open question np languag competit zeroknowledg interact proof gener cours probabl sinc theorem 44 probabl even competitiveinteract proof let alon zk one appropri question whether np languag possess competitiveinteract proof also possess competit zeroknowledg interact proof answer depend kind zeroknowledg one consid kind cryptograph assumpt one will make let us rst consid comput zk result goldreich micali wigderson gmw impli npcomplet languag competitivezkinteract proof given exist oneway function gener impli search reduc decis l l competitivezkinteract proof given exist oneway function know whether assumpt exist oneway function su ce show languag possess competitiveinteract proof also possess competitivezkinteract proof wedoknow latter conclus may establish stronger assumpt suchasth exist ideal secur circuit evalu exist oblivi transfer follow result kilian ki refer reader paper detail exactli assumpt statist zk languag known possess competitiveinteract proof also known possess statist zk competitiveinteract proof languag graph isomorph gmw graph nonisomorph gmw quadrat nonresiduos gmr cours know whether quadraticresiduos competit statist zk interact proof given know whether competitiveinteract proof 5 program check blum kannan bk introduc notion program checker informallyacheck function f probabilist polynomi time oracl machin receiv oracl program purport comput f checker also receiv input x program entir correct p f checker suppos accept high probabl howev program disagre f particular input x provid checker checker reject high probabl de nition follow note program mean determinist machin halt input also recal characterist function languag l function l f0 1g f0 1g de ned l x 1ifx 2 l 0 otherwis de nition 51 bk let c beaprobabilist polynomi time oracl tm c checker f f0 1g f0 1g program p x 2f0 1g case accept probabl 2 3 probabl cp x accept 1 3we say c checker languag l checker characterist function l l checkabl checker de nition close spirit competit interact proof two import di erenc first unlikeinteract proof check symmetr notion checker languag l must abl determin p correct x x 2 l also x 2 l second program histori independ object cheat prover arenot thu l l competitiveinteract proof l checker wedo know whether everi checkabl languag competitiveinteract proof checker also relat multiprov interact proof bgkw particular result fr impli class languag possess checker contain mip comip mip class languag possess multiprov interact proof membership note mip nexp result bfl blum kannan bk show check frip cofrip follow checkabl languag decid complet howev let us see directli lemma 52 suppos l checker decid proof let c beacheck l let probabilist polynomi time oracl machin input xwork follow begin queri oracl string x oracl return 0 reject els run c input x use oracl denot answer cs oracl queri accept c accept claim decid lto see need check x 2f0 1g two condit de nition 31 hold rst condit clear see second true suppos x 2 l suppos rst x 0 case reject probability1now suppos x 1 probabl accept 1 3 c isacheck combin lemma 52 theorem 36 yield theorem theorem 53 nee bpee exist languag np checkablesimilarli eespac bpee exist languag pspace checkablew recal languag l coher membership x l decid probabilist polynomi time bound error machin call examin access l oracl allow queri oracl point di erent xifl coher wesay incoher previou neg result check establish rst exhibit incoher set exploit yao observ incoher set uncheck cf ya bf note stronger result obtain directli moreov techniqu indic even within np class coher set could much larger class checkabl one let us sketchwhi disjoint union languag b denot bisf0x construct wide use complex theori eg bd hh easi see cf bf l l coher languag l also easi see transform l l l preserv manycomplexitycharacterist l exampl membership np compnp compip check frip particular combin observ theorem 53 yield claim separ theorem 54 nee bpee exist languag np coher checkabl 6 toward competit proof quadrat residuos section return unresolv question whether languag quadrat residuos competitiveinteract proof system present special case problem competit proof possibl 61 de nition look promis problem rather problem languag membership di erenc former begin promis input alreadi belong set wehav decid whether fall given subset set problem consid manywork eg esi formal use di erent equival one use work follow problem speci ed pair disjoint set b intuit input promis b wehav decid whether b correspond promis problem promis oracl guarante correct promis true de nition 61 promis problem isapair disjoint set b apromis oracl promis problem given queri q return 1 q 2 0 q 2 b note promis problem intuit easier languag recognit problem promis oracl correspondingli weaker normal oracl particular promis oracl oracl b respons queri outsid b indetermin competitiveinteract proof promis problem b interact proof given x 2 b properti competit prover get promis oracl b formal de nition follow de nition 62 let p beaprobabilist polynomi time oracl machin v aprobabilist polynomi time machin say pv competit interact proof promis problem 1 everi x 2 everi promis oracl b probabl v accept interact po common input x 2 3 2 everi x 2 b everi interact tm pb probabl v accept interact pbon common input x 1 3 62 result recal x 2 z quadrat residu squar modn x y2 mod n quadrat nonresidu nonsquar modn otherwis also recal section 12 qr f x n x squar mod n g qnr f x n x nonsquar mod n special case interest n product constantnumb distinct odd prime precis rst de ne product distinct odd prime g product distinct odd prime present competitiveinteract proof x n 2 qr given alreadi qr qnr note qr qnr complement formallyw talk competitiveinteract proof promis problem qr qnr sens de nition 62 theorem 63 let integ 1 promis problem qr qnr possess competit interact proof relat work kompella adleman ka presentcheck special case quadrat residuos modulu product constantnumb prime ie present checker promis problem qr qnr construct howev extend competitiveinteract proof correct checker use fact program contrast cheat prover histori independ prove theorem 63we begin recal basic number theoret fact refer reader nz numbertheoret background justi cation fact x 2 zn let qn x 0ifx quadrat residu mod n 1 otherwis suppos ps p1p distinct odd prime de ne binari relat zn equival relat equival class x relat name f 2 call residu class product xy mod n two element squar mod n x residu class nonsquar mod n otherwis total number residu class 2s size denot r2 convent last r2 class quadrat residu mod n recal exist competitiveinteract proof quadrat nonresiduosityw exploit fact reduc proof x n 2 qr polynomi number proof nonresiduos suchaway prover need use probabilist polynomi time promis oracl qr qnr rst step follow de nition de nition 64 let n beaproduct distinct odd prime let 2s calavector repres zn follow condit hold 1 yi nonsquaremod n 1t 1 nonsquaremod n pair indic lead us way reduc residuos test collect nonresiduos test long possess representativevector proposit 65 let n beaproduct distinct odd prime let x 2 z suppos y1yt1 repres zn 2s x n 2 qr xyi mod n nonsquaremod n 1t 1 proof xyi mod n nonsquar mod n 1t 1 residu class di er residu class yi 1t 1 sinc repres happen x squar mod n use howev wehav abl get representativevector su ce showhow prover construct representativevector convinc veri er inde repres use probabilist polynomi time promis oracl qr qnr proposit 66 thereisaprobabilist polynomi time oracl machin r input x n 2 qr qnr access promis oracl qr qnr output either repres vector z special symbol probabl latter event 1 4 proof r pick random y1ym 2 zn t1 2s constant de ned later 1mthe machin r use promis oracl test whether condit de nition 64 hold yi vector yi pass test rst suchvector output vector fail test r output probabl particular vector pass test 1 tt1 posit constant su ce choos constant crude calcul show 2e su ce r run probabilist polynomi time clear proceed describ protocol begin recal follow gmr basic competit protocol prove nonresiduos protocol qnr input x n 1k pick random c1ck 2f0 1g r1rk 2 zn set zi xciri2 mod n send z1zk p p1 p set di 0 zi quadrat residu mod n 1 otherwis 1k send d1dk v accept ci di 1k proposit 67 protocol qnr follow properti probabl v accept interact p 1 2 x n 2 qnr pb probabl v accept interact pb 6 k 3 p competit run probabilist polynomi time given oracl qnr proof rst two item follow basic properti modular residu refer reader gmr proof last item clear wenow proceed competitiveinteract proof qrswe use protocol qnr subprotocol input notat let 2s run algorithm proposit 66 send output v receiv p reject instead receiv vector y1yt1 2 z t1 parti proceed next step subprotocol p use protocol qnr secur paramet k set 2 provetov 1 yi nonsquar mod n 1t 1 nonsquar mod n pair indic 3 xyi mod n nonsquar mod n 1t 1 total 1 2 2invoc qnr protocol accept subproof accept correct protocol follow result establish detail follow suppos qr proposit 66 impli parti get representativevector proceed subprotocol probabl 3 4 de nition 64 proposit 65 impli input nonresiduos subproof inde nonsquar mod n thu proposit 67 impli subproof succeed probability1 sov accept suppos qnrsifpbsend rst step v reject suppos send vector y1yt1 2 zn t1ifi repres de nition 64 either yi squar mod n pair jsuch yiyj mod n squar mod n either case correspond nonresiduos subproof fail probabl 3 4 v reject suppos repres proposit 65 impli xyi mod n squar mod n correspond nonresiduos subproof fail probabl 3 4 v reject competit p follow proposit 66 67 reason extend arbitrari n cours number residu class could gener exponenti length n polynomi time could even write repres list hand work proof show result extend case n n polynomi time comput function n whichi bound abovebylglglgn lglgjnjfor simplicitywehav stuck case constant clearli weak result promis n alreadi product exactli odd prime may hard prove competit one want competitiveinteract proof qr 7 open question quadraticresiduosityw think interest open question whether languag quadrat residuos competitiveinteract proof condit result subject would also interest exampl could one show quadrat residuos competitiveinteract proof factor reduc probabilist polynomi time decid quadrat residuos note rmativ answer last question would impli qr competitiveinteract proof npproof via simpl factor wit reduc assumpt anoth open question whether one reduc assumpt requir result particular one show languag search reduc decis given p np even e ne could cryptograph assumpt exist oneway function use establish exist languag ip dont competitiveinteract proof set relationship decis search context optim problem approxim algorithm search reduc decis set exampl consid travel salesman problem tsp let g denot weightof optim tour weight graph g suppos 1 constant suppos oracl satisfi g g g graph g polynomi time procedur oracl access input g output tour g ofweight g perfect completenessaninteract proof pv l said perfect complet probabl accept complet condit 1 know languag l possess interact proof also possess one perfect complet fgmsz languag possess competitiveinteract proof also possess competitiveinteract proof perfect complet one motiv question fact competit proof special case quadrat residuos section 6 possess perfect complet zeroknowledgew discuss open question section 44 acknowledg mani peopl point us error hsi thank eric allend juri hartmani jack lutz osamuwatanab regard thank muli safra lanc fortnow jack lutz help discuss silvio micali suggest term competitiveinteract proof thank ode goldreich mani help comment paper thank satish thate draw attent result la mention section 2 final thank pair anonym refere manyvalu comment paper r lectur note complex problem number theori limit upward separ techniqu languag easier proof improv bound coher checkabl complex decis versu search make zeroknowledg prover e cient theori averag case complex multiprov interact proof system removeintract assumpt design program check work comment function selfreduc np hierarchi complex promis problem applic publickey cryptographi power multiprov interact protocol complet sound interact proof system knowledg complexityofint activ proof complex class without machin spars set npp exptim versu nexptim privat commun decis versu search problem superpolynomi time complexityofparallel search achiev zeroknowledg robustli fast checker cryptographi person commun structur polynomi time reduc algebra method interact proof system anintroduct theori number natur selfreduc set ip pspace privat commun via beigel feigenbaum rel complex check evalu tr ctr salil vadhan transform interact proof preserv prover complex proceed thirtysecond annual acm symposium theori comput p200207 may 2123 2000 portland oregon unit state minhhuyen nguyen salil vadhan zero knowledg effici prover proceed thirtyeighth annual acm symposium theori comput may 2123 2006 seattl wa usa lime cai david jued exist subexponenti parameter algorithm journal comput system scienc v67 n4 p789807 decemb