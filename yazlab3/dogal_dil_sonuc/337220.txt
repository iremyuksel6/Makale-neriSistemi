three approxim techniqu astral symbol model check infinit state realtim system astral highlevel formal specif languag realtim system structur mechan allow one build modular specif complex realtim system layer base upon astral symbol model checler report 13 three approxim techniqu speedup model check process use debug specif present techniqu random walk partial imag dynam environ gener ten mutat test railroad cross benchmark use compar perform techniqu appli separ combin test result present analyz b introduct astral highlevel formal specif languag realtim system includ structur mechan allow one build modular specif complex system layer 9 success use specifi number interest realtim system 1 2 9 10 11 12 astral softwar develop environ sde 20 22 integr set design analysi tool includ among other explicitst model checker symbol model checker mechan theorem prover explicitst model checker 12 22 gener custom c code specif enumer branch execut implement system time bound set user symbol model checker 13 test specif process level requir limit input set constant valu model check procedur use omega librari 23 perform imag comput execut tree astral process trim execut graph process 13 symbol model checker use test railroad cross benchmark experi model checker abort complet two test case due extrem larg size specif instanc model checker astral sde intend use debug purpos reason use lower approxim techniqu allow search procedur complet still remain effect find violat although lower approxim techniqu calcul subset reachabl state techniqu caus fals neg properti specifi use astral essenti safeti properti paper three techniqu meet need introduc random walk partial imag dynam environ gener idea random walk techniqu partial imag techniqu new although awar use symbol model check name random walk borrow theori stochast process techniqu use allow model checker randomli skip number branch travers execut tree partial imag techniqu inspir sampl random test method 16 15 softwar test ever instead pick singl sampl domain partial imag techniqu select subset imag use subset calcul postimag node dynam environ gener techniqu 14 gener differ sequenc import variabl valu differ execut path similar idea colbi godefroid jagadeesan 8 address problem automat close open system compon present approach target concurr program written c base upon static analysi program translat selfexecut close form consid realtim specif approach present paper dynam select reason environ accord import variabl claus previou environ reason consid previou environ state later astral historydepend specif lan guag case studi ten mutat test 21 railroad cross benchmark use show effect find bug perform model checker compar three approxim techniqu use separ combin 4 5 bultan use omega librari tool symbol repres set state character presburg formula also investig partit approxim order calcul fix point work report paper bultan work infinit state system howev system bultan consid simpl follow sens 1 quantif limit small number 2 transit system straightforward histori independ transit system ie current state depend upon last state histori refer allow 3 transit system realtim system sens durat attach transit start end time allow referenc unfortun typic astral specif benchmark consid paper simpl complex system fix point may even exist howev astral symbol model checker primarili intend use debugg instead verifi calcul fix point transit system import issu therefor bultan approach consid orthogon approach present paper model checker consid paper modular ize one need check one process instanc process type declar without look transit behavior process instanc step system also use modular approach 7 6 howev step primarili use theorem prover valid properti approach present use fulli automat model checker remaind paper organ follow section 2 brief overview astral specif languag present along introduct astral modular proof theori section 3 astral symbol model checker three approxim techniqu present section 4 give result use techniqu separ combin ten mutat test analyz result final section 5 conclus drawn work futur area research propos 2 overview astral railroad cross specif use benchmark exampl throughout remaind paper system descript taken 19 consist set railroad track intersect street car may cross track gate locat cross prevent car cross track train near sensor track detect arriv train track critic requir system whenev train cross gate must train sensor cross reason amount time gate must complet astral specif railroad cross system found httpwwwcsucsbedudang astral system specif includ global specif process specif global specif contain declar process instanc global constant nonprimit type may share process type system level critic requir process specif process type declar global specif process specif consist sequenc level highest level abstract view process specifi process constant variabl type global specif begin process type declar process gate gate sensor array 1n track sensor declar indic one process instanc type gate n track process instanc type sensor system n track global constant type po integ astral primit type includ integ real boolean id time addit type declar use typedef construct instanc po integ defin follow po integ typedef integ 0 process instanc uniqu identifi type id astral specif function idtypei repres type process identifi instanc global declar sensor id typedef id idtypeisensor repres identifi process instanc type nsor railroad cross specif two process specif gate sensor correspond two process type declar global specif process specif includ interfac section specifi import variabl type transit constant either global specif export process use process variabl transit export process astral global variabl therefor variabl well local constant must declar process specif astral support modular design principl everi variabl associ uniqu process instanc chang variabl caus transit specifi process instanc discuss next subsect transit astral comput model defin execut state transit specifi insid process specif transit process instanc chang variabl specifi instanc bodi astral transit includ pair entri exit assert nonzero durat associ pair entri assert must satisfi time transit start wherea exit assert hold time indic durat transit fire exampl process gate transit transit rais end rais rais time specifi gate fulli rais rise reason amount time rais time startt endt specifi last start end time transit starttt endtt predic use indic last start end transit occur time transit instanc fire entri assert satisfi transit process instanc execut execut transit instanc complet durat indic transit specif instanc dur export transit must call extern environ order fire callt use indic time call export transit made astral broadcast variabl valu instantan time execut finish process instanc may refer variabl well start end time transit assumpt variabl transit explicitli export process instanc properli import case one transit instanc enabl insid process instanc transit execut one enabl transit nondeterminist chosen fire insid process instanc execut transit nonoverlap interleav process stanc maxim parallel support thu execut transit instanc differ process instanc truli concurr assumpt critic requir besid transit requir descript also includ part astral specif compris axiom initi claus import variabl claus environment assumpt critic requir ment axiom use specifi properti constant initi claus defin system state startup time import variabl claus defin properti import variabl satisfi stanc pattern chang valu import variabl time inform transit export process environ claus formal assumpt must hold behavior environ guarante desir system properti typic describ pattern invoc export transit critic requir includ invari claus schedul claus invari express properti must hold everi state system reachabl initi state matter behavior extern environ schedul express addit properti must hold provid extern environ process system behav assum ie specifi environment assumpt import variabl claus invari schedul safeti properti astral rich languag strong express power detail introduct astral formal semant reader refer 9 10 22 modular proof theori paper modular mean principl system specif broken sever loos independ function modul although high level specif languag support modular modul specif syntact modul languag provid way write specif sever modul howev often way verifi correct process without look behavior process ultim goal modular partit larg system conceptu func tional sever small modul verifi small modul instead verifi larg system whole greatli eas verif design work astral process instanc consid modul provid interfac section includ import variabl claus astral wellform formula regard abstract behavior process uniqu featur astral help develop modular verif theori realtim system exampl verifi schedul invari process instanc use processs local assumpt behavior thu verifi local invari use behavior transit process instanc verifi local schedul use processs local environ import variabl claus plu behavior processs transit final import variabl claus must correct assumpt need verifi combin invari process instanc global level global invari astral specif verifi use invari process stanc without look detail process instanc behavior similarli global schedul verifi use global environ schedul process instanc due page limita tion astral proof theori present detail paper interest reader see 10 3 approxim techniqu astral symbol model checker section overview astral symbol model checker given along motiv introduc approxim techniqu next techniqu formul detail overview astral symbol model checker prototyp implement astral symbol model checker nontrivi subset astral given 13 prototyp use omega librari 23 tool symbol repres set state character presburg formula arithmet formula integ variabl built logic connect quantifi omega librari provid rich oper omega set lation join intersect project oper use imag comput symbol model checker symbol model checker present paper implement process level model checker base upon modular astral proof theori process type global declar one need check one process instanc critic requir astral process declar p translat label transit system consist set q infinit mani state finit set transit name sigma sigma consist transit name declar p well two special transit idl initi relat q ie q theta q init q denot initi state assumpt assump properti prop also subset state q restrict form compon q presburg formu la usual set state r q one denot preimag p r transit set state state r reach transit p postimag p ost r transit set state reachabl state r transit p ost semant character run q 0 correct respect specif run follow condit satisfi k fq initi lower rais figur 1 execut graph gate initi lower rais idl lower idl idl figur 2 execut tree gate model check procedur start construct execut graph g p graph g repres transit declar p initi indic initi transit defin ident transit initi state zero dura tion idl newli introduc transit durat one idl fire everi firabl transit current execut idl chang valu local variabl rg vg thetav g exclud pair transit second transit immedi firabl first one finish g automat construct use omega librari analyz initi condit entri exit assert astral transit process figur 1 exampl execut graph gate process railroad cross specif dash arrow figur 1 mean zero idl transit execut reach next node model check procedur carri tree possibl execut path trim execut graph g figur 2 part execut tree gate process start initi node initi execut tree p model checker calcul imag reachabl state everi node along path userassign search depth imag check assumpt assump properti prop order detect potenti error number techniqu also use dynam resolv valu variabl accord path search techniqu reduc number variabl use actual imag calcul whenev error found model checker gener concret specif level trace lead error three approxim techniqu subsect three approxim techniqu present speed astral symbol model checker techniqu random walk partial imag dynam environ gener motiv introduc approxim techniqu mention earlier astral symbol model checker perform process level model check check one process instanc process type declar global system correct ensur modular proof theori tral without look global behavior entir system perform model checker greatli increas sinc deal singl process instanc much easier howev mean singl process instanc necessarili simpl 13 model checker use test railroad cross benchmark experi model checker fail complet two test case due extrem larg size instanc high complex singl process instanc come two sourc local global constant use instanc local import variabl constitut variabl portion process instanc exampl gate process 10 global constant 6 local constant constant use parameter specifi system eg specifi system contain parameter number process instanc well system contain parameter time requir local variabl contribut local state chang execut transit though process astral modular process instanc stand alon environ assumpt typic use character pattern invoc call export transit outsid environ process instanc may also interact process instanc import variabl export process instanc sinc processs local properti prove use local assumpt process instanc must specifi strong enough assumpt environ claus import variabl claus correctli character environ behavior import variabl order guarante local properti unusu assumpt includ complex time requir call pattern import vari abl chang pattern thu second sourc complex primarili come historydepend astral express system current state depend upon past state practic symbol model checker complet search procedur complex process instanc desir defin approxim approach speed procedur sacrif cov erag base upon analysi two kind approach use first assign concret valu constant use model checker 13 shown speed model checker still effect find bug case howev reason use approach first pick right set constant valu caus interest thing especi potenti error happen trivial constant valu choic miss scenario specif would fail second even number constant valu fix model checker still expens case due complex behavior local import variabl experi show approach well use explicit state model checker 12 use earlier stage debug specif error rel easier catch second approach speed model checker enforc check either less node small node approach free user set constant valu random walk techniqu use allow model checker randomli skip number branch travers execut tree approxim also appli limit imag size reachabl state node execut tree current two techniqu provid imag size reduct one partial imag consid subset imag use subset calcul postimag node dynam environ gener 14 gener differ sequenc import variabl valu differ execut path reduc imag size node restrict environ primar ili import variabl part process instanc three techniqu discuss detail follow subsect random walk path execut tree astral process sequenc transit node tree contain imag reachabl state initi node along path theoret number path exponenti userassign search depth even though symbol model checker adopt number trim techniqu 13 time complet search larg specif unafford experi specif bug bug usual demonstr mani differ path reason 1 order transit switch without affect result though practic hard detect sinc astral histori depend 1 2 specif contain number parameter constant specif bug usual numer scenario choic parameter constant valu demonstr scenario shown mani differ path random walk approxim techniqu search portion reachabl node execut tree figur 3 show recurs procedur base upon depthfirst search algorithm similar procedur propos 13 except algorithm includ random choic model checker move one node children al gorithm depth indic maxim number iter transit check p ost defin earlier postimag oper transit indic node model check node start calcul preimag postimag postimag empti mean transit firabl preimag check respect properti follow check everi child node accord execut graph 2 result random boolean function tossa b function toss symmetr probabl result tail chosen depth depth numchildrena indic number successor node execut graph g ie indic layer node locat execut tree reason choic ensur 1 significantli differ standard techniqu use finit state model check partial order method 18 2 actual implement idl nearest nonidl ancestor node 0 nonidl child node b ha 0 bi 62 rg check nonidl child reachabl closest nonidl ancestor execut graph check ffl short violat less chanc miss alay small probabl result tail larg alay larg numchildrena greater 1 probabl small henc longer path higher probabl skip ffl numchildrena 1 3 probabl result tail 1 node one successor skip model check procedur start initi node initi checkiniti depth boolean checknod int depth f depth return true els apostimag ifapreimag 6 prop return fals els foreach b ha bi 2 rg tossa return true figur 3 model check algorithm random walk partial imag omega librari imag repres union convex linear constraint effici imag calcul depend upon number variabl number constraint experi show specif bug usual numer set parameter constant variabl valu lead bug valu usual satisfi mani constraint imag thu consid part imag usual still let model checker find bug report 13 fix number parameter constant valu increas speed model checker sinc number variabl imag decreas special case partial imag techniqu howev find right set constant valu lead potenti bug easi complex specif usual requir user thoroughli understand specif partial imag techniqu present paper use without fix constant valu appli partialimag opera tor return half union imag algorithm present figur 4 essenti one 13 except depth first search partialimag oper appli preimag node reduc preimag repres 3 numchildrena alway least one sinc node successor idl transit set reachabl state node approxim imag use calcul postimag node state algorithm previou experi 13 two test case symbol model checker fail complet search procedur due extrem larg size instanc larg number constant variabl use test case result extrem long time hour observ 13 singl imag comput repres omega librari comput usual involv imag contain hundr even thousand union convex region thu natur cut imag size reachabl state node alway sound astral symbol model checker astral safeti bound live properti specifi boolean checknod int depth f depth return true els apostimag ifapreimag 6 prop return fals els foreach b ha bi 2 rg return true figur 4 model check algorithm partial imag dynam environ gener dynam environ gener techniqu use paper propos detail 14 astral histori depend specif languag techniqu need encod histori import variabl past valu referenc sinc point 13 costli encod entir histori therefor limit window size techniqu propos paper approxim entir histori part exampl window size two mean process instanc rememb import variabl last two chang time valu chang observ 14 import variabl histori encod main bottleneck symbol model checker due extra variabl introduc import vari abl thu environ character import variabl histori insid given win dow everi variabl environ concret valu environ call concret dynam environ gener techniqu effect gener reason sequenc concret environ execut path sequenc select accord import variabl claus previou environ reader refer 14 detail algorithm techniqu use combin three techniqu mention also use combin straightforward manner exam ple random walk partial imag combin way model checker propag part reachabl state children node randomli skip number branch random walk dynam environ gener also work togeth along randomli chosen execut path sequenc concret environ gener similarli partial imag dynam environ gener appli part imag reachabl state use calcul postimag also use gener concret environ follow section result run ten mutat test gate process use model checker techniqu combin present perform comparison case studi three approxim techniqu integr astral symbol model checker sinc use symbol model checker astral sde debug purpos effect detect potenti error specif major concern demonstr effect approxim techniqu propos last section model checker run ten mutat 21 gate process railroad cross specif reason gate process specif use contain import variabl well histori import variabl result larg instanc gate process symbol model checker previous fail complet 13 use approxim techniqu mutat contain minor chang origin specif 4 detail list mutat found tabl 1 point 21 mutat techniqu use two way formal specif help user understand specif test strength specif experi show realtim specif hard write read especi involv complex time con straint user mutat part specif believ chang affect behavior system mutant kill ie violat found specif level violat trace demonstr read trace 4 unmut railroad cross specif prove correct use astral theorem prover also part astral sde 22 help user quickli figur syntax chang affect specif mutat creat weaken assumpt specif model checker fail find violat potenti weak demonstr origin spec ific two possibl case one model checker abl find bug specif run specif setup mutat equival origin correct specif m1 delet 1st conjunct axiom gate m2 delet 2nd conjunct axiom gate m3 delet 3rd conjunct axiom gate m4 delet term rais dur 2nd conjunct axiom gate m5 delet term dur 3rd conjunct axiom gate m6 delet nowchangestrain rrimaxrespons time 1st conjunct schedul gate m7 delet import variabl claus gate m8 delet nowendlowerlow time entri assert transit m9 delet nowendraiserais time entri assert transit delet positionrais positionrais entri assert transit rais tabl 1 ten mutat railroad cross specif test constant min speed speed set 15 20 respect constant track set 2 histori window size chosen 2 userassign con stant maxim search depth 10 reason n track window size chosen 2 set demonstr effect model checker extrem larg instanc specif tabl 2 tabl 3 show result three approxim techniqu use separ use combin respect tabl result contain number node visit execut tree time taken measur second result statu statu valu theta ie model checker abl detect violat ie model checker finish report error ie model checker fail finish reason amount time number also attach statu valu indic actual number run specif test perform exampl theta2 mean violat found second run within first run error detect case number node time taken sum two run case two trial made m3 m5 m8 m9 model checker ran reason model checker report error case discuss comparison mutat also run use earlier symbol model checker use approxim techniqu result run shown column plain tabl 2 test perform sun ultra 1 64m main memori 124m swap memori note experi independ run model checker cach clean 5 therefor perform differ run compar observ 14 among ten mutat m8 m9 correct henc model checker report error case m3 m5 two case demonstr limit symbol model checker fail detect error although mutat kill 14 explicit state model checker 12 use success find violat set constant valu provid specifi test result live mutant still meaning use show node coverag approxim techniqu model checker complet search procedur remain six mutat one model checker abl kill use demonstr effect use model checker debug specif number observ made result shown tabl 2 tabl 3 first run six mutat kill use partial imag dynam environ gener separ second run partial imag combin dynam environ gener also abl kill six muta tion random walk either appli separ combin two techniqu abl kill six mutat m6 m7 m10 show rel short violat trace m1 m2 m4 show long violat trace therefor interest latter three case first run random walk abl kill three mutat averag second run howev could kill m1 three use time use find error 2 4 time faster averag time without use approxim techniqu even error detect second run total time use two run still 2 time faster averag one also notic use techniqu combin could speed procedur though ratio especi high occas wors reason use techniqu combin sacrific coverag therefor less chanc detect error first run consid result live mutant m3 m5 m8 m9 mention mutat random walk least node coverag especi appli combin two techniqu contrast partial imag dynam environ gener much clean cach 4 10 time speed usual observ howev notic approxim techniqu use paper also degrad cach perform partial imag dynam env random walk plain case node time result node time result node time result node time result m4 28 1694 theta1 23 1726 theta1 104 5069 p 2 23 10168 theta1 1 91 3173 p tabl 2 experi approxim techniqu use separ case node time result node time result node time result tabl 3 experi approxim techniqu use combin higher node coverag even appli combina tion howev unknown total number reachabl node sinc symbol model checker fail complet search procedur four mutat analysi one conclud approxim approach effect abl kill least half mutat much shorter time first run finish procedur reason amount time live mutant specif set test partial imag dynam environ gener effect fast detect error error report attain high node coverag random walk perform slightli wors two tech niqu reason random walk didnt reach high node coverag shown result live mutat along execut path imag calcul still expens sinc node must propag full reachabl imag howev compar model checker without approxim techniqu perform detect violat still much faster 5 conclus futur work paper three approxim techniqu use astral symbol model checker specif debugg introduc techniqu random walk partial imag dynam environ genera tion random walk techniqu use allow model checker randomli skip number branch travers execut tree partial imag techniqu consid subset imag use subset calcul postimag node dynam environ gener techniqu 14 gener differ sequenc import variabl valu differ execut path three techniqu appli separ combin ten mutat test gate process railroad cross benchmark specif techniqu effect find bug besid techniqu discuss paper believ mani applic approxim approach unlik model checker astral model checker primarili intend use specif debugg fix point comput question numer approxim techniqu alreadi exist test area also investig believ techniqu propos paper also use model checker use differ specif languag long safeti properti consid debug gener tempor properti formul tempor logic still unknown well approxim approach work area research coverag analysi paper empir factor consid time number node anoth issu investig metric use systemat measur path andor node coverag specif approxim techniqu appli execut tree challeng topic sinc sometim symbol model checker without use approxim techniqu fail complet entir search therefor theoret estim urgent need author would like thank bultan p kolano mani insight discuss ten mutat test paper creat result discuss among bultan p kolano author well paper written specif written p kolano r hybrid specif control system hardwar specif use assert languag astral verifi system integ constraint boolean pred icat composit approach symbol model check infinit state system use presburg arithmet model check concurr system unbound integ variabl symbol represent approxim experiment result deduct verif realtim system use step step deductivealgorithm verif reactiv realtim system auto matic close open reactiv program specif realtim system use astral formal framework astral intralevel proof oblig use astral model checker cryptograph protocol analysi use astral model checker analyz mobil ip symbol model checker test astral realtim specifica tion dynam environ gener astral process report random test quantifi softwar valid sampl model check program languag use verisoft partial approach model check gener railroad cross case studi formal verif realtim system proof assist realtim system use interact theorem prover mutat test astral realtim spec ific design analysi realtim system use astral softwar develop environ omega test fast practic integ program algorithm depend anali si tr partial approach model check model check program languag use verisoft specif realtim system use astral verifi system integ constraint boolean predic automat close open reactiv program use astral model checker analyz mobil ip modelcheck concurr system unbound integ variabl design analysi realtim system use astral softwar develop environ formal framework astral intralevel proof oblig symbol model check infinit state system use presburg arithmet deduct verif realtim system use step proof assist realtim system use interact theorem prover report random test symbol model checker test astral realtim specif dynam environ gener astral process ctr bernard boigelot loui latour count solut presburg equat without enumer theoret comput scienc v313 n1 p1729 16 februari 2004 zhe dang tevfik bultan oscar h ibarra richard kemmer past pushdown time automata safeti verif theoret comput scienc v313 n1 p5771 16 februari 2004 zhe dang oscar h ibarra richard kemmer gener discret time automata decid approxim safeti verif theoret comput scienc v296 n1 p5974 4 march