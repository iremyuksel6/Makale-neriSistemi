power optim use divideandconqu techniqu minim number oper develop approach minim power consumpt portabl wireless dsp applic use set compil architectur techniqu key technic innov novel divideandconqu compil techniqu minim number oper gener dsp comput techniqu optim significantli wider set comput previous publish techniqu also outperform perform least well techniqu exampl along architectur dimens investig coordin impact compil techniqu number processor provid optim tradeoff cost power demonstr proper compil techniqu significantli reduc power bound hardwar cost effect techniqu algorithm document numer reallif design b introduct 11 motiv pace progress integr circuit system design dictat push applic trend pull technolog improv goal role design design tool develop develop design methodolog architectur synthesi tool connect chang world applic technolog preliminari version paper present 1997 acmiee intern confer computeraid design san jose california novemb 1013 1997 author address hong potkonjak comput scienc depart univers cali fornia lo angel ca 900951596 r karri depart electr comput engin univers massachusett amherst 01003 permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit direct commerci advantag copi show notic first page initi screen display along full citat copyright compon work own other acm must honor abstract credit permit copi otherwis republish post server redistribut list use compon work work requir prior specif permiss andor fee recent new class portabl applic form new market except high rate applic product portabl wireless market defin intrins demand portabl flexibl cost sensit high digit signal process dsp content schneiderman 1994 portabl translat crucial import low power design flexibl result need programm platform implement cost sensit narrow architectur altern uniprocessor architectur limit number offtheshelf standard processor key optim degre freedom relax satisfi set requir come properti typic portabl comput comput mainli linear rare 100 linear due either need adapt algorithm nonlinear quantiz element comput well suit static compil intens quantit optim two main recent relev technolog trend reduc minim featur size therefor reduc voltag deep submicron technolog introduct ultra low power technolog wide domin digit cmo technolog power consumpt proport squar suppli voltag v dd effect techniqu tri reduc v dd compens speed reduct use varieti architectur compil techniqu singh et al 1995 main limit convent technolog respect power minim also relat v dd threshold voltag v tradit bulk silicon technolog voltag commonli limit rang 07v howev last year ultra low power silicon insul soi technolog simox soi use separ oxygen bond etchback soi besoi silicononinsulatorwithactivesubstr soia reduc v dd v well 1v elkareh et al 1995 ipposhi et al 1995 number report ic valu v dd v rang low 005v 01v chandrakasan et al 1996 goal paper develop system synthesi compil method tool realiz portabl applic technic restat primari goal develop techniqu effici effect compil typic dsp wireless applic singl multipl programm processor assum tradit bulk silicon newer soi technolog furthermor studi achiev powercost tradeoff parallel trade power reduct programm platform 12 design methodolog new design methodolog briefli describ follow given throughput power consumpt cost requir comput goal find costeffect powereffici solut singl multipl programm processor platform first step find powereffici solut singl processor implement appli new techniqu describ section 4 second step continu add processor reduct averag power consumpt enough justifi cost addit processor step gener costeffect power effici solut straightforward design methodolog produc implement low cost low power consumpt given design requir main technic innov research present paper first approach minim number oper arbitrari computa tion approach optim significantli wider set comput previous publish techniqu parhi messerschmitt 1991 srivastava potkonjak 1996 also outperform perform least well techniqu exampl novel divideandconqu compil procedur combin coordin power enabl effect sever transform use well organ order transform minim number oper logic partit best knowledg first approach minim number oper optim intens way treat gener comput second technic highlight quantit analysi cost vs power tradeoff multipl programm processor implement platform deriv condit optim costpow product use parallel benefici 13 paper organ rest paper organ follow way first next sec tion summar relev background materi section 3 review relat work power estim optim well program optim use transform particular minim number oper section 4 5 technic core paper present novel approach minim number oper gener dsp comput explor compil technolog impact powercost tradeoff multipl processorsbas low power applic specif system present comprehens experiment result analysi section 6 follow conclus section 7 2 preliminari delv technic detail new approach outlin relev preliminari section particular describ applic comput abstract select implement platform technolog architectur level power estim relat background materi 21 comput model select comput model synchron data flow sdf lee messerschmitt 1987 lee park 1995 synchron data flow sdf special case data flow number data sampl produc consum node invoc specifi priori node schedul static compil time onto programm processor restrict attent homogen sdf hsdf node consum produc exactli one sampl everi execut hsdf model well suit specif singl task comput numer applic domain digit signal process video imag process broadband wireless commun control inform code theori multimedia syntax target comput defin hierarch controldata flow graph cdfg rabaey et al 1991 cdfg repres comput flow graph node data edg control edg semant underli syntax cdfg format alreadi state synchron data flow comput model relev speed metric throughput rate implement capabl accept process input sampl two consecut iter opt throughput select speed metric sinc essenti dsp commun wireless comput latenc limit factor latenc defin delay arriv set input sampl product correspond output defin specif 22 hardwar model basic build block target hardwar platform singl programm processor assum type oper take one clock cycl execut case mani modern dsp processor adapt softwar algorithm hardwar time model straightforward case multiprocessor make follow addit simplifi assumpt processor homogen ii interprocessor commun cost time hardwar assumpt reason multipl processor place singl integr circuit due increas integr although would realist assum addit hardwar delay penalti use multipl processor 23 power time model convent ultra low power technolog well known three princip compon power consumpt cmo integr circuit switch power shortcircuit power leakag power switch power given p switch dd f clock ff probabl power consum switch activ ie transit 0 1 occur cl load capacit v dd suppli voltag f clock system clock frequenc ffc l defin effect switch capacit cmo technolog switch power domin power consumpt shortcircuit power consumpt occur nmo cmo transistor time leakag power consumpt result revers bias diod conduct subthreshold oper assum effect switch capacit increas linearli number processor suppli voltag lower threshold voltag v use sever differ valu 006v 11v convent ultra low power technolog also known reduc voltag oper come cost reduc throughput chandrakasan et al 1992 clock speed follow follow constant chandrakasan et al 1992 maximum rate circuit clock monoton decreas voltag reduc suppli voltag reduc close v rate clock speed reduct becom higher 24 architecturelevel power model singl multipl programm processor power model use research built three statist valid experiment establish fact first fact number oper machin codelevel proport number oper highlevel languag hoang rabaey 1993 second fact power consumpt modern programm processor fujitsu sparclit mb86934 32bit risc microcontrol directli proport number oper regardless mix oper execut tiwari lee 1995 tiwari lee 1995 report oper includ integ alu instruct float point instruct loadstor instruct lock cach incur similar power consumpt sinc use memori operand result addit power overhead due possibl cach miss assum cach lock featur exploit far possibl cach lock featur use target applic power consumpt memori traffic like reduc minim number oper sinc less oper usual impli less memori traffic power consumpt depend mix oper execut case intel 486dx2 tiwari et al 1994 detail hardwar power model may need howev obviou propos power model programm processor signific reduct number oper inevit result lower power final empir observ relat power consumpt time model digit cmo circuit present previou subsect base three observ conclud target implement platform singl programm cmo processor reduct number oper key power minim initi number oper n init optim number oper n opt initi voltag v init scale voltag v opt optim power consumpt rel initi power consumpt vopt multiprocessor assum commun overhead optim power consumpt n processor rel singl processor vn vn scale voltag singl n processor respect 3 relat work relat work classifi along two line low power implement optim particular minim number oper use transform relev low power topic divid three direct power minim techniqu power estim techniqu technolog ultra low power design relev compil techniqu also group three direct transform order transform minim number oper last five year power minim arguabl popular optim goal mainli due impact rapidli grow market portabl comput commun product power minim effort across level design abstract process survey singh et al 1995 appar greatest potenti power reduct highest level behavior algorithm chandrakasan et al 1992 demonstr effect transform show order magnitud reduct sever dsp comput intens exampl use simul annealingbas transform script raghunathan jha 1994 goodbi et al 1994 also propos method power minim explor tradeoff voltag scale throughput power chatterje roy 1994 target power reduct fulli hardwir design minim switch activ chandrakasan et al 1994 tiwari et al 1994 work power minim programm platform target numer power model techniqu propos level abstract synthesi process document singh et al 1995 numer effort gate level higher level abstract rel effort report chandrakasan et al 1995 develop statist techniqu power estim behavior level take account compon layout level includ interconnect landman rabaey 1996 develop activitysensit architectur power analysi approach execut unit asic design final seri paper establish power consumpt modern programm processor directli proport number oper regardless mix oper execut lee et al 1996 tiwari et al 1994 transform wide use level abstract synthesi process eg dey et al 1992 howev strong experiment evid effect highest level abstract system particular behavior synthesi transform receiv widespread attent high level synthesi ku mich 1992 potkonjak rabaey 1992 walker camposano 1991 comprehens review use transform parallel compil state oftheart gener purpos comput environ vlsi dsp design given banerje et al 1993 bacon et al 1994 parhi 1995 respect approach transform order classifi seven group local peephol optim static script exhaust searchbas gener test method algebra approach probabilist search techniqu bottleneck remov method enablingeffect base techniqu probabl wide use techniqu order transform local peephol optim tanenbaum et al 1982 compil consid small section code time order appli one one iter local avail transform advantag approach fast simpl implement howev perform rare high usual inferior approach anoth popular techniqu static approach transform order order given priori often form script ullman 1989 script develop base experi compilersynthesi softwar develop method least three drawback time consum process involv lot experiment random exampl adhoc manner knowledg relationship among transform implicitli use qualiti solut often rel low programsdesign differ characterist one use develop script power approach transform order enumerationbas gener test massalin 1987 possibl combin transform consid particular compil best one select use branch 7andbound dynam program algorithm drawback larg run time often exponenti number transform anoth interest approach use mathemat theori behind order transform howev method limit sever linear loop transform wolf lam 1991 simul anneal genet program probabilist techniqu mani situat provid good tradeoff run time qualiti solut littl inform topolog solut space avail recent sever probabilist search techniqu propos order transform compil behavior synthesi literatur exampl backwardpropagationbas neural network techniqu use develop probabilist approach applic transform compil parallel comput fox koller 1989 approach combin simul annealingbas probabilist local heurist optim mechan use demonstr signific reduct area power chandrakasan et al 1995 behavior logic synthesi sever bottleneck identif elimin approach order transform propos dey et al 1992 iqbal et al 1993 line work mainli address throughput latenc optim problem bottleneck easili identifi well quantifi final idea enabl disabl transform recent explor number compil whitfield soffa 1990 high level synthesi paper potkonjak rabaey 1992 srivastava potkonjak 1996 use idea sever power transform script develop one maxim arbitrarili fast implement linear comput potkonjak rabaey 1992 joint optim latenc throughput linear comput srivastava potkonjak 1994 also enabl mechan use basi sever approach order transform optim gener comput huang rabaey 1994 key advantag class approach relat intrins import power enablingdis relationship pair transform transform use optim varieti design program metric throughput latenc area power perman tempor faulttoler testabl interestingli power transform often focus secondari metric parallel instead primari metric number oper compil domain constant copi propag common subexpress techniqu often use easili shown constant propag problem undecid comput condit kam ullman 1977 standard procedur address problem use call conserv algorithm algorithm guarante constant detect data declar constant inde constant possibl execut program comprehens survey popular constant propag algorithm found wegman zadeck 1991 parhi messerschmitt 1991 present optim unfold linear comput dsp system unfold result simultan process consecut iter comput potkonjak rabaey 1992 address minim number multipl addit linear comput maxim fast form throughput preserv potkonjak et al 1996 present set techniqu minim number shift addit linear comput sheliga sha 1994 present approach minim number multipl addit linear comput srivastava potkonjak 1996 develop approach minim number oper linear comput use unfold applic maxim fast procedur variant techniqu use conquer phase approach approach differ two respect first techniqu handl restrict comput linear approach optim arbitrari comput second approach outperform perform least well techniqu linear comput 4 singl programm processor implement minim number oper global flow approach present subsect 41 strategi base divideandconqu optim follow post optim step merg divid sub part explain subsect 42 final subsect 43 provid comprehens exampl illustr strategi 41 global flow approach core approach present pseudocod figur 1 rest subsect explain global flow approach detail decompos comput strongli connect componentsscc adjac trivial scc merg sub part use pipelin isol sub part sub part minim number delay use retim sub part linear appli optim unfold els appli unfold isol nonlinear oper merg linear sub part optim schedul merg sub part minim memori usag fig 1 core approach minim number oper gener dsp comput first step approach identifi comput strongli connect componentsscc use standard depthfirst searchbas algorithm tarjan 1972 low order polynomialtim complex pair oper b within scc exist path b path b illustr exampl step shown figur 2 graph form scc acycl thu scc isol use pipelin delay enabl us optim scc separ insert pipelin delay treat input output scc result everi output state scc depend input state scc addit constant multipl function delay state variabl multipl strongli connect compon fig 2 illustr exampl scc decomposit step thu sens scc isol rest comput optim separ number situat techniqu capabl partit nonlinear comput partit consist linear comput consid exampl comput consist two strongli connect compon scc 1 scc 2 scc 1 oper addit multipl constant scc 2 oper max oper addit obvious sinc comput addit multipl constant max oper nonlinear howev appli techniqu logic separ use pipelin state two part linear note isol affect unfold defin scc one node trivial scc trivial scc unfold fail reduc number oper thu adjac trivial scc merg togeth isol step reduc number pipelin delay use x input output state vector respect b c constant coeffici matric fig 3 statespac equat linear comput number delay sub part minim use retim polynomi time leisersonsax algorithm leiserson sax 1991 note smaller number delay requir smaller number oper sinc next state output depend previou state scc classifi either linear nonlinear linear comput repres use 2rgamma1r 2rgamma1r give smaller valu multipl time unfold system addit time unfold system fig 4 closedform formula unfold dens linear comput p input q output r state statespac equat figur 3 minim number oper linear comput npcomplet sheliga sha 1994 adopt approach srivastava potkonjak 1996 optim linear sub part use unfold maxim fast procedur potkonjak rabaey 1992 note instead maxim fast procedur ratio analysi sheliga sha 1994 use srivastava potkonjak 1996 provid closedform formula optim unfold factor assumpt dens linear comput provid formula figur 4 spars linear comput propos heurist continu unfold improv made simpl heurist effici binari search base unimod properti number oper unfold factor srivastava potkonjak 1996 iter iter i1 iter i2 fig 5 exampl isol nonlinear oper 2 time unfold nonlinear sub part sub part classifi nonlinear appli unfold isol nonlinear oper nonlinear oper isol sub part remain linear sub part optim maxim fast procedur arc nonlinear oper linear sub part consid input linear sub part arc linear sub part nonlinear oper consid output linear sub part process illustr figur 5 arc denot consid input arc denot consid output unfold linear sub part observ everi output state nonlinear sub part depend nonlinear oper unfold separ nonlinear oper ineffect reduc number oper fig 6 motiv exampl sub part merg sometim benefici decompos comput larger sub part scc consid exampl given figur 6 node repres sub part comput make follow assumpt specif clarifi present exampl simplifi exampl stress assumpt necessari approach assum sub part linear repres statespac equat figur 3 also assum everi sub part dens mean everi output state sub part linear combin input state sub part 0 1 1 coeffici number insid node number delay state sub part assum arc sub part x sub part everi output state depend input state x separ optim scc p 1 p 2 figur 6 cost 211 oper formula figur 4 otherhand optim entir comput entail 6367 oper reason separ optim perform well exampl mani intermedi output scc p 1 observ lead us approach merg sub part reduc number oper sinc worthwhil explain sub part merg problem detail next subsect devot explan problem heurist approach sinc sub part comput unfold separ differ unfold factor need address problem schedul sub part schedul memori requir code data minim observ unfold sub part repres multir synchron dataflow graph lee messerschmitt 1987 work bhattacharyya et al 1993 directli use note approach particular use architectur requir high local regular comput improv local regular comput decompos sub part use maxim fast procedur local comput relat degre comput natur cluster oper regular comput refer repeat occurr comput pattern multipl follow addit guerra et al 1994 mehra rabaey 1996 42 subpart merg initi consid merg linear scc two scc merg result sub part form scc thu gener must consid merg adjac arbitrari sub part suppos consid merg sub part j gain gaini j merg sub part j comput follow number oper sub part cost j number oper merg sub part j comput gain cost j must comput requir constant coeffici matric b c merg sub part j easi construct matric use depthfirst search tarjan 1972 fig 7 time unfold statespac equat gamma 1c give smaller valu opt state state group j output output group j input output group j depend input state group j depend state output group j depend state state group j depend fig 8 closedform formula unfold two output depend set input state group true state time unfold system repres statespac equat figur 7 equat total number oper comput time unfold sub part follow let denot number multipl number addit time unfold system respect result number oper n ini time unfold system use batch sampl gener batch output sampl continu unfold improv achiev coeffici 1 gamma1 matric b c closedform formula optim unfold factor opt number oper time unfold system provid figur 8 improv possibl merg candid comput gain merg pair highest gain fig 9 pseudocod greedi heurist sub part merg gener start solut set best solut determin start temperatur yet frozen yet equilibrium current temperatur choos random neighbor 0 current solut els gener random number r uniformli 0 1 updat temperatur return best solut fig 10 pseudocod simul anneal algorithm sub part merg evalu possibl merg candid propos two heurist algorithm sub part merg first heurist base greedi optim approach pseudocod provid figur 9 algorithm simpl improv merg pair sub part produc highest gain heurist algorithm base gener combinatori optim techniqu known simul anneal kirkpatrick et al 1983 pseudocod provid figur 10 actual implement detail present follow area cost function neighbor solut gener temperatur updat function equilibrium criterion frozen criterion firstli number oper entir given comput use cost function secondli neighbor solut gener merg two adjac sub part thirdli temperatur updat function old temperatur 2000 ff chosen 01 high temperatur regim everi new state high chanc accept temperatur reduct occur rapidli set 095 optim process explor promis region slowli 10 ff set 08 quickli reduc converg local minimum initi temperatur set 4000000 fourthli equilibrium criterion specifi number iter inner loop number fig 11 explanatori exampl iter inner loop set 20 time number sub part lastli frozen criterion given temperatur temperatur fall 01 simul anneal algorithm stop heurist perform equal well exampl run time small exampl sub part use greedi simul anneal base heurist gener experiment result produc exactli result fig 12 simpl exampl oper calcul 43 explanatori exampl put togeth illustr key idea approach minim number oper consid comput figur 11 use assumpt made exampl figur 6 number oper per input sampl initi 2081 illustr number oper calcul maxim fast way potkonjak rabaey 1992 use simpl linear comput 1 input x 1 output describ figur 12 use techniqu srivastava potkonjak 1996 unfold entir comput number reduc 725 unfold factor 12 approach optim sub part separ separ optim enabl isol sub part use pipelin delay figur 13 show comput isol step sinc everi sub part linear unfold perform optim number oper sub part sub part cost 12075 5391 11486 12975 1030 oper per input sampl unfold factor 3 10 6 7 2 respect total number oper per input sampl entir comput 52227 appli scc merg reduc number oper first consid greedi heurist heurist fig 13 motiv exampl isol step consid merg adjac sub part initi possibl merg candid produc gain 5148 11206 5238 12287 11492 respect scc p 3 scc p 4 merg unfold factor 22 next iter 4 sub part 4 candid pair merg yield neg gain heurist stop point total number oper per input sampl decreas 3994 simul anneal heurist produc solut exampl approach reduc number oper factor 182 previou techniqu srivastava potkonjak 1996 achiev reduct factor 52 initi number oper singl processor implement sinc techniqu srivastava potkonjak 1996 new method yield higher throughput origin suppli voltag lower extent extra throughput compens loss circuit speed due reduc voltag initi voltag 33v techniqu reduc power consumpt factor 260 suppli voltag 148v techniqu srivastava potkonjak 1996 reduc factor 100 suppli voltag 177v schedul unfold sub part perform gener minimum code data memori schedul schedul period least common multipl unfold factor1 3036 let p 34 denot merg sub part simpl mind schedul 759p 1 276p 2 132p 34 1012p 5 minim code size ignor loop overhead gener 9108 unit data memori requir schedul 759p 1 469p 2 33p 34 253p 5 minim data memori requir among schedul minim code size gener 4554 unit data memori requir 5 multipl programm processor implement multipl programm processor use potenti save power consumpt obtain summar assumpt made section 2 processor homogen ii interprocessor commun cost time hardwar iii effect switch capacit increas linearli number processor iv addit multipl take one clock cycl v suppli voltag lower threshold voltag v use sever differ valu 006v 11v base assumpt use k processor increas throughput k time enough parallel comput effect switch capacit increas k time well reallif exampl consid suffici parallel actual exist number processor use r e k r 2 fig 14 closedform condit suffici parallel use k processor dens linear comput r state observ next state ie feedback loop comput parallel note maxim fast procedur potkonjak rabaey 1992 evalu linear comput first constantvari multipl parallel organ addit maxim balanc binari tree sinc next state comput maxim fast procedur bottom binari comput tree exist paral lelism oper feedback loop comput parallel separ pipelin delay number processor becom larger number oper outsid feedback loop get larger result parallel dens linear comput provid closedform condit suffici parallel use k processor figur 14 note although formula deriv worst case scenario requir number oper outsid feedback loop small rang number processor tri experi exist oper outsid feedback loop requir full parallel reallif exampl consid one reduc voltag clock frequenc k processor reduc factor k averag power consumpt k processor reduc singl processor factor v1 scale suppli voltag k processor implement v k satisfi equat et al 1992 observ alway benefici use processor term power consumpt follow two limit amount parallel avail limit improv throughput critic path comput maximum achiev throughput ii suppli voltag approach close threshold voltag improv power consumpt becom small cost ad processor justifi mind want find number processor minim power consumpt costeffect standard cmo technolog ultra low power technolog sinc cost programm processor high especi cost processor ultra low power platform soi high elkareh et al 1995 ipposhi et al 1995 guidanc costeffect design import need measur differenti costeffect costineffect solut propos pn product p power consumpt normal optim singl processor implement n number processor number processor 11 50 50 090 093 098 104 110 117 124 130 137 40 100 108 117 128 138 149 159 170 180 30 114 133 151 170 188 206 224 242 260 20 142 182 222 260 298 335 371 408 444 07 33 33 089 091 095 100 106 112 119 125 131 20 112 128 145 162 179 196 212 228 245 10 163 222 280 338 394 450 505 560 615 03 13 13 092 096 102 108 116 123 130 138 145 07 124 149 175 200 224 248 272 295 319 tabl valu pn product respect number processor variou combin initi voltag v init scale voltag singl processor v 1 threshold use smaller pn product costeffect solut pn smaller 10 use n processor decreas power consumpt factor n depend power consumpt requir cost budget implement mani processor implement use tabl provid valu pn product respect number processor use variou combin initi voltag v init scale voltag singl processor v 1 threshold voltag v v init initi voltag implement optim note pn product monoton increas respect number processor init new rp rp design op sri96 method sri96 sri96 init op init op dist 48 473 364 130 230 132 242 chemic modem 213 213 14883 143 301 143 301 ge control 180 180 10526 171 415 171 415 apcm receiv 2238 na 144419 na na 155 354 audio filter 1 154 na 760 na na 203 507 audio filter 2 228 na 920 na na 248 597 filter 1 296 na 15714 na na 188 468 filter 2 398 na 1845 na na 216 537 tabl ii minim number oper reallif exampl improv factor reduct percentag na applic sri96 srivastava potkonjak 1996 tabl observ cost effect solut usual use processor case consid standard cmo ultra low power platform also observ voltag reduct high singl vnew prf dist 50 11 376 233 33 07 270 196 13 03 110 184 chemic 50 11 361 265 33 07 261 221 13 03 107 204 dac 50 11 381 272 33 07 250 275 13 03 100 269 modem 50 11 402 221 33 07 265 223 13 03 105 219 ge control 50 11 365 321 33 07 239 325 13 03 096 316 tabl iii minim power consumpt singl programm processor linear exampl reduct factor processor case much room reduc power consumpt use processor base observ develop strategi multipl processor implement first step minim power consumpt singl processor implement use propos techniqu section 4 second step increas number processor pn product given maximum valu maximum valu determin base power consumpt requir cost budget implement strategi produc solut processor mani case singl processor reallif exampl method minim number oper significantli reduc number oper turn suppli voltag singl processor implement ad processor usual reduc power consumpt costeffect method achiev costeffect solut low power penalti compar solut optim power consumpt without consid hardwar cost 6 experiment result set benchmark design includ benchmark exampl use sri vastava potkonjak 1996 well follow typic portabl dsp video commun control applic dac 4 stage nec digit analog convert dac audio signal modem 2 stage nec modem ge control 5state ge linear control apcm receiv motorola adapt puls code vnew prf apcm receiv 50 11 385 262 33 07 253 264 13 03 101 258 audio filter 1 50 11 334 454 33 07 203 443 13 03 088 445 audio filter 2 50 11 303 676 33 07 185 654 13 03 08 658 filter 1 50 11 345 397 33 07 226 403 13 03 091 390 filter 2 50 11 324 515 33 07 212 524 13 03 085 504 vstol 50 11 343 410 33 07 225 415 13 03 090 402 tabl iv minim power consumpt singl programm processor nonlinear ex ampl prf power reduct factor modul receiv audio filter 1 analog digit convert adc follow 14 order cascad iir filter audio filter 2 adc follow two adc follow 10order two dimension 2d iir two adc follow 12order 2d iir filter vstol vstol robust observ structur aircraft speed control dac modem ge control linear comput rest nonlinear comput benchmark exampl srivastava potkonjak 1996 linear includ ellip iir5 wdf5 iir6 iir10 iir12 steam dist chemic tabl ii present experiment result techniqu minim number oper reallif exampl fifth seventh column tabl ii provid improv factor method srivastava potkonjak 1996 initi number oper respect method achiev number oper srivastava potkonjak 1996 ellip iir5 wdf5 iir6 iir10 iir12 steam reduc number oper 23 103 dist chemic respect exampl srivastava potkonjak 1996 singleinput singleoutput linear comput except dist chemic twoinput singleoutput linear comput sinc siso linear comput small vnew prf n prf n prf n prf dist 50 11 376 233 1 233 4 753 6 947 33 07 270 196 2 404 5 811 8 1054 13 03 110 184 2 371 4 631 7 874 chemic 50 11 361 265 1 265 3 687 5 939 33 07 261 221 2 449 5 886 7 1069 13 03 107 204 1 204 4 683 6 867 33 07 250 275 1 275 4 922 6 1171 13 03 100 269 1 269 3 705 5 967 modem 50 11 402 221 2 445 4 756 7 1045 33 07 265 223 2 456 5 907 7 1097 13 03 105 219 1 219 4 722 6 913 ge 50 11 365 321 1 321 3 839 5 1149 control 33 07 239 325 1 325 4 1049 6 1320 13 03 096 316 1 316 3 805 5 1092 tabl v minim power consumpt multipl processor linear exampl pn threshold pn product n processor prf power reduct factor room improv srivastava potkonjak 1996 method reduc number oper averag factor 177 averag 435 exampl previou techniqu either ineffect inap plicabl tabl iii iv present experiment result techniqu minim power consumpt singl programm processor reallif exampl variou technolog method result power consumpt reduct averag factor 358 multipl processor implement tabl v vi summar experiment result techniqu minim power consumpt defin threshold pn product pn valu pn product stop increas number processor pn ie power reduct addit processor must greater 2 cost effect almost case singl processor solut optimum pn get larger number processor use increas solut still use processor result order magnitud reduct power consumpt result clearli indic effect new method 7 conclus introduc approach power minim use set compil architectur techniqu key technic innov compil techniqu minim number oper synergist use sever vnew prf n prf n prf n prf apcm 50 11 385 262 1 262 4 864 6 1092 receiv 33 07 253 264 2 529 4 895 7 1233 13 03 101 258 1 258 3 681 6 1032 audio 50 11 334 454 1 454 3 1112 4 1322 filter 1 33 07 203 443 1 443 2 799 4 1238 13 03 088 445 1 445 2 807 4 1256 audio 50 11 303 676 1 676 2 1188 4 1804 filter 2 33 07 185 654 1 654 2 1126 3 1445 13 03 08 658 1 658 2 1138 3 1464 filter 1 33 07 226 403 1 403 3 1032 5 1404 13 03 091 390 1 390 3 955 4 1134 filter 2 33 07 212 524 1 524 3 1282 4 1522 13 03 085 504 1 504 2 899 4 1379 33 07 225 415 1 415 3 1060 5 1440 13 03 090 402 1 402 3 976 4 1158 tabl vi minim power consumpt multipl processor nonlinear exampl pn threshold pn product n processor prf power reduct factor transform within divid conquer optim framework new approach deal arbitrari comput also outperform previou techniqu limit comput type furthermor investig coordin impact compil techniqu new ultra low power technolog number processor provid optim tradeoff cost power experiment result number reallif design clearli indic effect propos techniqu algorithm r compil transform high perform comput automat program parallel schedul framework minim memori requir multir signal process algorithm express dataflow graph optim power use transform energi effici programm comput design consider tool lowvoltag digit system design synthesi low power dsp circuit use activ metric perform optim sequenti circuit elimin retim bottleneck silicon insul emerg highleverag technolog code gener gener neural network microarchitectur synthesi performanceconstrain schedul dsp program onto multiprocessor maximum throughput maxim throughput high perform dsp applic use behavior transform advanc 05 mu cmossoi technolog practic ultrahighspe lowpow circuit critic path minim use retim algebra speedup monoton data flow analysi framework optim simul anneal synchron dataflow dataflow process network power analysi minim techniqu embed dsp softwar retim synchron circuitri look smallest program exploit regular lowpow design journal vlsi signal process static rateoptim schedul iter dataflow program via optimum unfold maxim fast arbitrarili fast implement linear comput multipl constant multi plicat effici versatil framework algorithm explor common subexpress elimin fast prototyp data path intens architectur behavior synthesi low power person commun global node reduct linear system use ratio analysi power consciou cad tool methodolog perspect transform linear system joint latenc throughput optim power optim programm processor asic implement linear system transformationbas approach use peephol optim intermedi code depth first search linear graph algorithm power analysi 32bit embed microcontrol asia south pacif design autom confer power analysi embed softwar first step toward softwar power minim databas knowledgebas system survey highlevel synthesi system acm transact program languag approach order optim transform acm symposium principl practic parallel program loop transform theori algorithm maxim parallel tr static rateoptim schedul iter dataflow program via optimum unfold power analysi embed softwar power optim programm processor asic implement linear system global node reduct linear system use ratio analysi maxim fast arbitrarili fast implement linear comput fast prototyp datapathintens architectur ctr johnson kin chunho lee william h mangionesmith miodrag potkonjak power effici mediaprocessor design space explor proceed 36th acmiee confer design autom p321326 june 2125 1999 new orlean louisiana unit state luca benini giovanni de mich systemlevel power optim techniqu tool proceed 1999 intern symposium low power electron design p288293 august 1617 1999 san diego california unit state luca benini giovanni de mich systemlevel power optim techniqu tool acm transact design autom electron system toda v5 n2 p115192 april 2000