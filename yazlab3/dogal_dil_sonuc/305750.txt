competit onlin algorithm distribut data manag competit onlin algorithm data manag network processor studi paper data object file page virtual memori read updat variou processor network goal minim commun cost incur serv sequenc request distribut data manag import class networkstre busbas networksar studi optim algorithm constant competit ratio match lower bound obtain algorithm use differ interest techniqu work function chrobak larmor proc dimac workshop onlin algorithm am 1991 pp 1164 factor b introduct manag data distribut network import much studi problem manag scienc engin comput system theori 3 11 dowdi foster 11 give comprehens survey research area list eighteen differ model mani paper data ob ject f file page virtual memori read updat network processor processor may store copi f local memori reduc time requir read data object copi must kept consist howev multipl copi increas time requir write object read write request occur processor onlin algorithm decid whether replic move discard copi f serv request tri minim total cost incur process request onlin algorithm knowledg futur request assumpt made pattern request appli competit analysi 6 algorithm let oe denot sequenc read write request determinist onlin algorithm said ccompetit oe ca oe c delta opt ca oe opt oe cost incur optim offlin solut respect c b function independ oe may depend upon input network file size random algorithm replac ca oe expect cost consid two type adversari oblivi adversari choos oe advanc power adapt onlin adversari build oe onlin choos request knowledg random move made previou request oblivi adversari charg optim offlin cost adapt onlin adversari serv oe charg onlin see bendavid et al 6 full discuss differ type adversari algorithm strongli competit achiev best possibl competit ratio paper focu two import class network tree uniform network tree connect acycl graph n node n gamma 1 edg preliminari version paper appear 19 research att lab 600700 mountain avenu murray hill nj 079740636 usa email lundresearchattcom reingoldresearchattedu westbrookresearchattcom z work perform author yale univers research partial support nsf grant ccr9009753 x depart oper research att lab room 3j314 101 crawford corner road holmdel nj 077333030 usa work perform author yale univers research partial support fellowship yale univers emailyanattcom j westbrook yan uniform network complet graph n node unit edg weight obtain strongli competit determinist random onlin algorithm class algorithm use differ interest techniqu offset function factor competit onlin algorithm base offset function found 3server 9 migrat problem 10 advantag algorithm need record entir histori request onlin algorithm sinc decis base current offset valu updat easili factor first observ 7 use 10 17 idea break onlin problem tree singl edg problem thu strongli competit strategi singl edg gener tree algorithm strongli competit specif applic network also illustr two use techniqu random algorithm file alloc bare random 20 ie use bound number random bit independ number request random choic made initi algorithm run determinist 11 problem descript studi three variant distribut data man agement replic 1 7 17 migrat 7 10 22 file alloc describ framework given undirect graph e nonneg edg weight jv repres processor let f repres data file page memori store processor time let r v resid set repres set node contain copi f alway requir r 6 initi singl node v contain copi f sequenc read write request occur processor read processor request examin content data locat f write processor p request chang content locat f locat identifi singl word record f read satisfi send messag processor hold copi f processor return inform store request locat write satisfi send updat messag processor hold copi f tell modifi desir locat request serv onlin server decid realloc multipl copi f integ constant 1 repres number record f 1 cost serv request redistribut file follow servic cost suppos request occur node v read request serv cost equal shortest path distanc v nearest node r write request serv cost equal size minimum steiner tree 2 contain node r fvg movement cost algorithm replic copi f node v cost time shortest path distanc v nearest node copi f discard copi f cost file realloc consist sequenc zero replic discard repres set real posit integ nonneg integ respect section 2 definit onlin distribut copi f replic alloc done order long resid set size least 1 movement cost incur realloc equal total sum replic cost replic migrat problem special case file alloc migrat requir 1 replic request read assum replic copi f discard offlin optim problem specifi r new request serv total cost incur minim onlin replic consid competit algorithm inequ otherwis trivial 0competit algorithm exist follow previou paper alloc relat problem adopt lookahead0 model model request reveal onlin algorithm must immedi pay servic cost make chang resid set one may contrast lookahead0 lookahead1 model algorithm may chang resid set pay servic cost discuss lookahead issu togeth implement issu 12 previou relat result black sleator 7 first use competit analysi studi problem give strongli 3competit determinist algorithm file migrat tree uniform network strongli 2competit determinist algorithm replic tree uniform network replic imas waxman 14 show greedi algorithm build steiner tree onlin thetalog ncompetit n number node ratio optim within constant factor gener network algorithm basi solut onlin replic gener network koga 17 gave random algorithm 2competit 4competit adapt onlin adversari tree circl respect also obtain random algorithm competit ratio depend approach 11 grow larg oblivi adversari tree migrat westbrook 22 obtain random algorithm uniform network competit ratio depend approach 5 grow larg oblivi adversari gener network westbrook 22 obtain strongli 3competit random algorithm adapt onlin adversari also obtain algorithm oblivi adversari competit ratio depend approach 1 oecompetit grow larg oe 162 golden ratio chrobak et al 10 studi migrat variou class metric space includ tree hypercub mesh real vector space gener product tree gave strongli 212dcompetit random algorithm space 212dcompetit determinist algorithm space gener lower bound determinist algorithm 8527 recent bartal et al 4 obtain 4086competit determinist algorithm file alloc gener network awerbuch et al 2 bartal et al 5 give ologncompetit determinist random algorithm adapt onlin adversari respect westbrook yan 23 show bartal et al algorithm ologdgcompetit unweight graph diamet dg exist olog 2 dgcompetit determinist algorithm bartal et al also find 3 o1dcompetit determinist algorithm tree strongli 3competit random algorithm adapt onlin adversari tree uniform network sinc replic special case file alloc upper bound also valid replic addit constant b zero 4 c lund n reingold j westbrook yan replic migrat file alloc random uniform e e tree e e paper tabl state art tree uniform network note e 13 new result paper contribut follow result ffl onlin file alloc tree give strongli 3competit determinist algorithm 21dcompetit random algorithm oblivi adversari show optim even g edg ffl uniform network show offlin file alloc problem solv polynomi time give strongli 12dcompetit random onlin algorithm migrat oblivi adversari uniform network ffl replic problem show offlin problem nphard impli file alloc problem also nphard obtain random algorithm e e gamma 1competit oblivi adversari tree uniform network optim even g edg alber koga 1 independ obtain result onlin replic use differ method ffl show random algorithm replic singl edg better 2competit adapt onlin adversari thu koga 17 algorithm replic tree strongli competit tabl 1 summar competit ratio best known determinist random algorithm oblivi adversari replic migrat file alloc tree uniform network optim 14 lookahead implement issu state adopt lookahead0 model use previou work alloc variant studi onlin problem howev use lookahead1 model subsect comment briefli distinct lookahead1 model alloc request sequenc could serv onlin algorithm lower cost would possibl lookahead0 model exampl write request occur lookahead1 algorithm drop one copi f servic request therebi reduc servic cost lookahead0 model appropri file alloc howev servic cost model messag cost satisfi request includ cost transmit answer back read request pass updat copi messag cost control messag must transmit order algorithm learn new request implement replic drop decis specif assum new replic occur unless least one member replic set told new request processor discard copi unless told new write request claim larg valu optim competit ratio lookahead1 model materi differ optim competit ratio lookahead0 model particular ccompetit algorithm use lookahead1 2dcompetit algorithm use lookahead0 lookahead0 algorithm onlin distribut simul lookahead1 algorithm keep resid set lookahead1 algorithm save servic cost read amount save distanc replic file prior satisfi request similarli lookahead1 algorithm save servic cost write amount save weight minimum steiner tree connect drop copi undrop copi point past least one drop copi must replic edg steiner tree henc unit distanc save read lookahead1 algorithm one file move one unit distanc hold write total cost save lookahead1 algorithm 2 time total movement cost algorithm incur movement cost howev one may ask whether servic cost optimist could algorithm actual implement use control messag account servic cost although directli address issu algorithm essenti distribut natur implement constant messag overhead special case uniform tree network 2 preliminari use techniqu work function offset function introduc chrobak larmor 9 let set state one legal resid set thu isomorph 2 v n fg let rs denot resid set correspond state 2 say file system state current resid set rs 2 let set possibl request request node v respect request sequenc reveal onlin algorithm oe 2 suppos network state oe arriv algorithm charg servic cost ser oe ser oe gammar describ section 11 serv oe algorithm move differ state cost tran gammar minimum cost move two resid set work function w minimum cost serv request 1 termin state given oe minimum cost solut found dynam program algorithm follow function equat suitabl initi let opt optim cost serv first request call offset function valu state request reveal defin deltaopt increas optim offlin cost due oe onlin algorithm make decis base current offset valu note comput ss deltaopt suffic know igamma1 ss show algorithm ccompetit need show reachabl combin offset function request file system state inequ deltac deltaphi c delta deltaopt hold deltac cost incur deltaphi chang defin potenti function total chang phi alway bound nonneg sum inequ oe ca oe c delta opt oe b b bound valu steiner tree problem shall refer network design problem call steiner tree problem stp 24 state follow instanc stp given weight undirect 6 c lund n reingold j westbrook yan graph e weight function edg 0 subset z v regular node termin constant b decis problem ask exist steiner tree g includ node z total edg weight b 0 stp npcomplet even g restrict bipartit graph unit edg weight planar graph 12 16 survey stp found 13 24 tree network union path pair termin give optim steiner tree 3 determinist algorithm fap tree begin introduc concept use build determinist random algorithm file alloc tree say resid set connect induc connect subgraph g tree resid set alway connect node without copi f easili keep track r henc nearest copi f use pointer fact g tree limit attent algorithm maintain connect r time theorem 31 tree exist optim algorithm alway maintain connect resid set ie given onlin offlin algorithm exist algorithm 0 maintain connect r ca 0 oe ca oe oe onlin 0 proof let ra resid set maintain 0 spectiv simul oe let 0 time ra 0 minimum connect set satisfi ra given ra tree defin uniqu read cost incur 0 greater hold true write cost issu node v sinc span uniqu minimum length steiner tree ra fvg 0 incur greater read write cost algorithm 0 need carri replic unless node alreadi leav copi f along replic path done without incur extra cost ra never need travers replic path longer replic henc 0 incur greater replic cost sinc realloc sequenc replic discard f 0 maintain connect set time incur great cost realloc henceforth shall consid algorithm maintain connect resid set r time say algorithm replic node v shall mean leav copi f node along shortest path resid set v tree network make addit simplifi assumpt suppos algorithm decid move resid set r 0 set r realloc involv sequenc replic drop lemma 32 replic perform drop without increas total cost realloc proof drop copi increas cost subsequ replic henceforth assum algorithm compli lemma 32 lemma 33 let r node gain copi f f replic node order total cost delta jt r 0 subtre induc node set r proof copi f must sent across edg r 0 r least onlin distribut order replic copi sent across edg endpoint contain copi f henceforth assum algorithm compli lemma 33 use tool handl onlin optim tree factor 7 10 make use fact sequenc request oe tree algorithm factor n gamma 1 individu algorithm one edg total cost tree algorithm equal sum cost individu edg game edg b construct instanc twoprocessor file alloc follow remov edg b divid two subtre b contain b respect read write request node replac kind request request node b replac request b let algorithm resid set ra algorithm induc algorithm edg b follow ra fall entir b edg algorithm state b respect otherwis edg algorithm state ab edg algorithm chang state minimum cost way ie one replic factor approach use algorithm file alloc tree rest paper given edg b use b repres subtre describ denot state edg let offset function triplet offset function valu state oe arriv lemma 34 algorithm request sequenc oe let ab algorithm induc edg b oe ab request sequenc induc edg b ab2 oe ab proof show cost incur event contribut amount side equat write request node v ca oe increas weight uniqu steiner tree 0 contain node ra fvg induc problem edg e 0 resid set request node opposit side e write cost equal es weight incur edg v resid set lie side e cost incur induc problem side equat increas amount read request node v argument write case use replac 0 uniqu path v nearest node copi f side equat increas amount suppos move resid set r r 0 consid sequenc replic discard make realloc process show induct length sequenc movement cost exactli equal sum movement cost induc edg problem suppos first action sequenc replic f node v cost time sum length edg shortest path r v sinc r connect edg path exactli edg must replic induc problem thu side equat increas amount first action discard cost incur induc edg algorithm lemma 35 let opt oe ab cost incur optim edg algorithm b sequenc oe ab ab2 opt oe ab opt oe proof lemma follow let lemma 34 optim offlin algorithm fap tree note ca ab oe ab opt oe ab edg 8 c lund n reingold j westbrook yan b follow lemma 34 35 onlin algorithm oe edg b ca ab oe ab c delta opt oe ab hold ccompetit construct determinist algorithm tree first construct suitabl optim algorithm singl edg design tree algorithm induc optim edg algorithm edg therebi guarante competit 31 optim determinist edg algorithm let edg abg set state file system inonli node copi node b copi b copi respect assum g unit length otherwis offset cost function scale obtain result write offset function triplet similarli work function suppos start state w dd ser tran function given tabl 2 definit offset function sinc free discard copi f alway b least one b zero without loss gener assum start offset function vector oe arriv tabl 3 give chang offset differ combin request offset respons new request oe i1 b ab 0 ab r w b r b w ab tabl transit servic cost case 1 r 0 mink w case 2 r 0 min1 l l 0 tabl chang offset let current state r algorithm specifi new requir resid set r oe i1 arriv offset updat assum state zerooffset state algorithm edg drop b ie set theorem 36 algorithm detedg strongli 3competit onlin distribut proof first show request oe j deltac edg hold function phidelta defin let zerooffset state time defin potenti function initi alway phi 0 consid state b phia hold follow case r w r b r algorithm ensur deltac edg 0 case let use show hold possibl combin state request offset offset state variabl one new request oe i1 arriv consid k 1 case similar k 1 oe r w case 1 oe deltaopt last execut algorithm must case 2 oe deltaopt ab must case 3 oe deltaopt 1 case deltac edg 1 deltaphi 2 lh 3 hold inequ also hold detedg chang state detedg move state ab state state ab deltaphi gammadeltac edg gammad henc hold possibl combin offset request resid set claim determinist algorithm better 3competit fap edg migrat known determinist algorithm better 3competit singl edg 7 show given onlin algorithm fap exist anoth onlin algorithm 0 ca 0 oe ca oe oe write request ii 0 alway keep one copi f node resid set iii whenev one copi f 0 copi node sinc 0 legal algorithm instanc migrat problem optim cost process oe without use replic less optim cost replic ccompetit writeonli sequenc 0 ccompetit migrat algorithm impli claim algorithm 0 obtain follow initi 0 copi f node follow rule appli whenev chang state 1 replic 0 chang state 2 migrat 0 follow 3 drop page 0 follow node follow rule ii iii hold 0 incur write cost higher movement 0 1 2 correspond distinct migrat earlier replic respect 0 incur higher movement cost claim follow j westbrook yan 32 optim determinist tree algorithm recal edg tree request sequenc oe induc sequenc oe ab b tree algorithm base factor individu edg subproblem simul detedg subproblem r 2 oe serv edg induc request r ab comput offset vector induc subproblem updat follow algorithm execut updat resid set rt ree initi rt ree consist singl node contain f algorithm tree 1 examin edg u v order simul first step algorithm detedg induc subproblem detedg replic one node say v induc subproblem add v rt ree replic v 2 simul step 2 detedg edg node v edg algorithm incid edg delet node v es resid set es induc problem mark v 3 drop mark node show dettre 3competit show choos connect resid set edg induc state requir detedg immedi obviou requir detedg one edg might conflict anoth edg exampl one edg might want drop copi anoth edg replic begin analyz structur offset function induc edg problem rest subsect offset valu function refer result induc sequenc oe ab next lemma character offset distribut two adjac edg lemma 37 follow properti hold time exist root node r correspond zero offset state induc problem edg b edg x tree defin x adjac edg x z inequ x z hold 8 follow earlier definit see begin section 32 claim state node r edg b nearer r b state zero offset state edg note locat root node r may uniqu locat chang request lemma impli follow condit corollari 38 edg root r x let z 6 x neighbor edg x z offset 0 k xy l xy 0 k yz l yz respect let x z adjac edg root r subtre root form remov two edg let offset edg k xy 0 l xy 0 k yz l yz respect l xy l proof lemma 37 use induct number request initi let r node hold singl copi f edg offset vector 0 dd lemma hold trivial assum lemma hold reveal request show remain valid oe t1 arriv node w first show locat new root let p repres path r w unless specifi otherwis offset refer one oe t1 arriv choos new root r 0 use follow procedur procedur findroot 1 r edg along p offset 2 otherwis move along p r toward w cross edg offset vector form 0 0 l go w reach pick node stop r 0 let us show r 0 valid root new offset pictur p chain edg start r go left right end w condit step 1 algorithm satisfi oe t1 correspond request zero offset state edg tabl 3 r remain valid root node suppos 2 execut edg p p right r 0 zerooffset state remain node r 0 valid root node edg c4 edg along p offset form 0 0 l must form connect subpath p start r end r 0 valu paramet l tabl 3 offset chang 0 0 l 1 0 minfl min1 l 0 l r 0 valid root node henc hold choic r 0 show b hold consid two adjac edg x z whose remov divid three disjoint subtre x z root z respect show differ possibl posit r w b remain valid oe t1 arriv ie t1 x t1 z hold oe t1 write read r z assum hold oe t1 arriv suppos oe t1 read request r 2 x w 2 x edg condit b shown hold situat similar case analysi pleas refer appendix complet case analysi thu b hold request lemma follow theorem 39 algorithm dettre strongli 3competit proof show dettre induc detedg tree edg theorem follow lemma 34 35 theorem 36 proceed induct number request initi rt ree consist singl node suppos rt ree connect first 2 z edg b state induc rt ree equal state desir detedg run oe ab consid process request 1 step 1 replic subinduct number replic done step 1 show replic conflict state desir edg suppos process edg b step 1 caus f replic lie b induc state definit detedg definit induc subproblem induct hypothesi let q path b nearest node rt ree q 6 fbg avoid conflict edg along q must also requir replic across c2 theorem 37 see edg x q 12 c lund n reingold j westbrook yan offset form nearer b requir replic similar argument hold case step 2 mark node drop perform subinduct number mark done step 2 show mark conflict state desir edg connect resid set result suppos process edg b step 2 caus b mark occur b sinc rt ree connect hypothesi b rt ree node b copi f span connect subtre b b root let us call 0 b 0 b 6 fbg edg x 0 b state xy c3 theorem 37 x must offset nearer b detedg x need drop copi f node henc node 0 b requir remov rt ree new rt ree remain connect edg conflict thu rt ree connect induc edg algorithm match detedg dettre 3competit 4 random algorithm fap tree approach build random tree algorithm approach determinist case give random algorithm twopoint space randedg base counter valu assign node factor obtain randedg 21dcompetit algorithm randtre file alloc tree randtre requir gener ologd random bit begin algorithm run complet determinist simpler tree algorithm 19 requir gener ofomegagamma29 random bit request serv 41 optim random edg algorithm randedg let edg b maintain counter c c b node b respect satisfi algorithm maintain distribut r depend counter valu initi node copi f counter valu node counter valu 0 counter valu chang accord follow rule read request increment c c write request c increment c counter chang similarli request b chang counter valu case algorithm randedg alway maintain distribut r 1a 1c observ probabl copi f node v 2 fa bg c v order maintain distribut randedg simul determinist algorithm number 1 move determinist algorithm construct determinist onlin accord rule given first request one algorithm pick random randedg make onlin distribut move chosen determinist algorithm thu p e 2 fa b abg proport algorithm state expect cost incur randedg averag cost incur algorithm defin algorithm achiev probabl distribut 1 suppos initi node copi f initi algorithm place state follow chang made new request oe arriv without loss gener assum request aris node c c b valu refer counter valu oe arriv ffl chang algorithm chang counter valu lowestnumb algorithm state b move state ab ffl case 2 oe lowestnumb algorithm state ab move state ffl case 3 oe lowestnumb algorithm state b move state ab lemma 41 randedg feasibl maintain probabl distribut 1 proof feasibl mean whenev move must made case 1 2 3 algorithm avail make move choic lowestnumb algorithm emphas choic must independ algorithm randedg actual emul lemma hold initi c c prove lemma induct request assum hold oe arriv chang counter valu oe arriv lemma hold trivial induct hypothesi case 1 sinc c p e b 0 least one algorithm state b case 2 sinc c algorithm state ab case 3 sinc c algorithm state b henc randedg feasibl verifi chang algorithm implement probabl distribut 1 new counter valu theorem 42 randedg strongli proof node v 2 fa bg maintain potenti function opt copi f v otherwis opt repres adversari let overal potenti function time phi 0 show respons request chang state edeltac randedg 2 hold deltaop edeltac randedg edeltam cost incur event opt servic movement cost incur randedg respect c c b valu counter valu new request oe arriv case 1 request oe c inequ 2 hold trivial suppos c edeltac randedg 14 c lund n reingold j westbrook yan opt copi f otherwis follow opt copi f oe arriv otherwis inequ 2 hold case 2 request oe edeltac randedg opt copi f b gammac b opt copi f b inequ 2 hold case 3 request oe c lhs20 2 hold trivial suppos c edeltac randedg c opt copi f ae 0 opt copi f otherwis henc 2 hold case 4 opt chang state opt chang state edeltac randedg check definit phi opt replic deltaop opt discard copi f deltaphi 0 sinc 2 hold possibl event theorem 46 randedg strongli 42 optim random tree algorithmrandtre extend randedg random algorithm fap tree mean factor algorithm randtre induc randedg edg induc request sequenc edg descript algorithm randtre randtre intern simul determinist algorithm maintain resid set span subtre initi resid set singl node contain f one simul algorithm pick uniformli random begin randtre behav exactli particular algorithm chosen maintain counter c c b edg b tree use factor approach see section 32 obtain induc request sequenc oe ab b counter valu chang accord rule describ singl edg case section 41 use oe ab randtre respond request maintain induc distribut requir randedg 1 edg read request suppos new request oe read request node g let root g edg nearer g b c c b valu describ counter valu oe arriv edg classifi three type 2 edg c c b 0 3 edg c randedg requir chang probabl valu first two type edg type 3 edg requir p e b decreas 1d p e ab goe 1d node v use v denot subtre root v randtre chang subtre configur maintain algorithm use follow procedur fig 1 1 let f forest tree form type 3 edg 2 exist tree 0 2 f least one edg let x leaf node 0 p path x root node 0 root node 0 node 0 nearest g 22 pick one algorithm maintain subtre z includ node x lie entir x make algorithm replic along p ie replac z z p remov edg p 0 updat forest f fig 1 algorithm randedg read request lemma 43 randtre implement requir chang edg read request proof prove lemmabi induct request suppos randtre induc randedg edg oe arriv let parent node x randtre feasibl ie execut implement chang requir randedg describ edg show case x leaf node sinc x type 3 edg p xy x 0 one algorithm must singl node fxg tree configur otherwis suppos descend edg x type 1 let x w one p xw none algorithm maintain subtre edg x sinc p xy x 0 one algorithm must fxg subtre otherwis suppos x descend type 2 edg let x w one thu edg contain subtre least one algorithm none algorithm subtre w sinc p xy x 0 least one subtre must lie x contain node x henc algorithm feasibl lemma hold write request suppos oe use notat read request case edg classifi three type 2 edg c 3 edg c j westbrook yan randedg requir chang probabl valu type 3 edg type 1 edg requir p e ab decreas 1d p e increas amount decreas 1d p e ab increas amount randtre perform follow fig 2 1 let f forest tree form type 1 edg 2 exist tree 0 2 f least one edg 0 root node 0 x one children node 22 pick algorithm subtre z includ edg g z contain 0 make algorithm replac z singlenod replac z tree form edg z gamma 0 replac 0 f subtre form 3 let f forest tree form type 2 edg 4 exist tree 0 2 f least one edg 41 let x leaf node 0 p path x root node 0 42 pick one algorithm maintain subtre z includ node x lie entir x make algorithm replic along p ie extend z z p 43 remov edg p 0 updat forest f fig 2 algorithm randedg write request lemma 44 randtre implement requir chang edg request proof prove induct assum randedg induc edg oe arriv randtre feasibl implement requir chang edg show case consid first loop algorithm step 2 sinc p g 0 x g 0 x 0 subtre z must exist randtre remov edg z contain 0 note p e ab valu type 2 3 edg zero randtre process edg 0 topdown fashion configur connect subtre thu first loop execut consid second loop algorithm step 4 let parent node x p xy x leaf node one algorithm must fxg subtre x descend type 1 edg first part algorithm one algorithm must fxg subtre run first loop algorithm suppos descend edg x type 3 edg let x w type 3 edg p xw one algorithm must fxg subtre henc algorithm feasibl lemma follow lemma 43 44 impli randtre induc randedg edg theorem 45 follow lemma theorem 42 theorem 45 algorithm randtre strongli 1dcompetit fap tree oblivi adversari 43 lower bound show competit ratio best possibl file alloc oblivi adversari even g singl edg theorem 46 onlin algorithm file alloc problem two point b ccompetit c 2 proof let random algorithm file alloc problem two point defin potenti function psi give strategi gener adversari request sequenc c request sequenc oe optimum cost c ii cost randedg oe least 2 independ oe iii psi bound iv request gener adversari condit ii iii iv hold adversari sequenc oe sum 3 sequenc give b bound condit adversari make opt oe arbitrarili larg constant b 0 independ oe ca opt oe b 0 henc ccompetit c defin adversari strategi assum onlin offlin algorithm start singl copi f adversari gener request result offset function form 0 zerocost selfloop request offset function unchang deltaopt 0 theorem 18 alway optim onlin algorithm incur 0 expect cost zerocost self loop assum properti simplifi adversari strategi although result still prove without assumpt suppos current offset function 0 let p probabl randedg state suppos state probabl q q p adversari request w otherwis adversari request b r zerocost selfloop adversari request b r similarli r zerocost selfloop adversari request w therefor adversari alway gener next request use rule request sequenc made arbitrarili long sinc offset function gener strategi arbitrarili long sequenc request must cycl offset function arbitrarili often notic howev cycl cost opt noth zerocost selfloop sinc adversari never use request cycl nonzero cost continu long enough adversari gener request sequenc arbitrarili larg optimum cost henc condit hold next consid condit ii recal c c b counter valu maintain randedg claim offset function 0 true initi f locat inspect randedg one verifi whenev adversari gener request b r c b increas 1 whenev adversari gener w c b decreas 1 henc expect movement cost incur randedg 1 b r 0 w refer proof theorem 42 note amort cost randedg exactli 21d time cost opt request adversari might gener assum opt move follow request adversari never gener b r c w c 0 amort cost incur j westbrook yan randedg therefor exactli 21d time cost incur optimum algorithm ever copi f possibl show cost realli optimum sequenc case certainli lowerbound true optimum cost ii hold defin psi delta maxf0 g trivial bound 1 iii hold final must verifi 3 case 1 adversari request w case new offset function must 1 suppos request mass q 0 deltac case 2 adversari request b r case new offset function must 0 1 suppos request mass q 0 deltac 5 migrat uniform network give 12dcompetit random algorithm oblivi adversari migrat uniform net work competit ratio optim even singl edg 10 let g complet graph n node label 1 n initi node 1 copi f algorithm base offset calcul onlin let ng algorithm state singl copi f node cost function ae ae otherwis initi w suppos ith request serv new offset node calcul algorithm migrat algorithm maintain probabl distribut probabl ps node contain f follow new request arriv algorithm move differ state transit probabl minim total expect movement cost maintain new requir distribut theorem 51 given oe expect cost incur migrat ec mig oe satisfi proof show request arriv hold edeltac mig expect cost incur migrat edeltam expect movement cost deltaphi chang potenti function vs initi time sinc least one v offset tabl similar tabl 3 file alloc construct sinc migrat equival fap write request seen request oe i1 node offset state increas one subject maximum deltaopt node offset state decreas one offset remain deltaopt case 1 request v case deltaopt increas one k edeltac mig verifi edeltam 12 deltaphi movement cost zero also edeltac mig case 2 request v deltaopt decreas 1 deltaphi 12 edeltam probabl mass henc 6 replic give upper lower bound perform random onlin algorithm replic problem 20 c lund n reingold j westbrook yan 61 random onlin algorithm let e e e gamma 1 fi gammae gamma 1 158 dgamma1 describ random algorithm fi dcompetit oblivi adversari uniform network tree first consid singl edg r b unit length initi r contain copi f suppos algorithm ffcompetit replic f node b probabl ith request b 1 p ff must satisfi k 2 z expect cost incur oe contain k request b optim offlin strategi replic copi f b first request arriv k replic otherwis algorithm incur cost replic right serv ith request k otherwis incur cost k optim random algorithm given set p valu satisfi inequ k ff minim note condit ident onlin block snoopi cach problem two cach 15 karlin et al 15 show optim ff valu fi achiev zero singl edg algorithm appli uniform network replic f node v ith request v probabl p anoth exampl factor theorem 61 exist random algorithm strongli fi competit oblivi adversari replic uniform network extend singl edg algorithm tree root r node contain f initi algorithm respond request node current resid set algorithm tree keep counter c node 6 r initi request arriv node x w node nearest x contain copi f serv request counter node along path w x increas one let node along path perform follow procedur time request serv 1 2 replic node j node j gamma1 22 f replic j stop theorem 62 algorithm tree strongli fi competit oblivi adversari replic tree network proof without loss gener assum connect r alway maintain solut let x 6 r node parent x obtain copi f cost equal weight x incur edg request node subtre root x follow r connect uniqu path x r pass x singl edg algorithm algorithm tree fi competit node x 6 r copi f replic x ith request subtre root x probabl p shown induct request x acquir copi f counter x record number request arriv subtre root x counter form nonincreas sequenc path move away r henc valu p c j defin probabl valu simpl verifi time node subtre root x receiv request copi f replic x probabl p cx c x xs new counter valu theorem follow 62 lower bound show random algorithm better 2competit adapt onlin adversari use n denot number node g theorem 63 let ffl posit function n take valu 0 1 onlin algorithm better ncompetit replic adapt onlin adversari proof let node initi copi f let b edg g let onlin algorithm replic b jth request b probabl adversari issu request b replic issu whichev first happen algorithm incur expect cost choos differ n two differ case suppos minimum posit integ greater given paramet n finit uniqu constant adversari replic b first request arriv incur cost equat 5 eca oe give ratio least 2 suppos adversari replic incur expect cost 5 7a given p j one choos n arbitrarili close 1 sinc seri one also choos n arbitrarili close zero thu compar 6 7b see given one choos finit n ratio close 22 c lund n reingold j westbrook yan 7 offlin replic file alloc show offlin replic problem nphard offlin file alloc problem uniform network solv polynomi time 71 offlin replic problem awerbuch et al find interest relationship onlin steiner tree problem 14 23 onlin fap show offlin replic problem nphard use straightforward reduct steiner tree problem 12 16 see section 2 definit proof involv creat instanc replic problem request issu termin node steiner tree problem instanc forc optim algorithm replic node theorem 71 replic problem nphard even g bipartit unweight g planar 72 offlin solut file alloc uniform network show offlin file alloc problem uniform network solv polynomi time reduc mincost maxflow problem similar reduct obtain chrobak et al 8 kserver problem convert instanc fap uniform network node mincost maxflow problem acycl layer network n delta joej node 2 joej arc initi node 1 copi f integr maximum flow n defin dynam alloc f uniform network arc cost n chosen mincost maxflow n incur cost differ minimum cost fap uniform network constant network n construct follow node network n joej layer node node layer sourc node sink node layer k 0 k joej node fv k n g ngamma1 g node allow maximum flow one unit node correspond node uniform network layer k n correspond state uniform network oe k serv arc arc go layer k node layer arc layer joej node arc v 0 1 arc unit capac flow maximum flow n valu n given integ arc cost mincost maxflow solut integr flow either 0 1 arc flow 1 v k j repres presenc copi f node j request arriv flow come v kgamma1 repres copi f move node node j serv 1st request flow come u kgamma1 repres replic node j flow v kgamma1 j u k w repres copi f j drop oe kgamma1 serv thu integr flow n defin strategi reloc copi f sinc n gamma 1 u node layer integr maxflow must includ flow 1 unit least one v node layer correspond requir alway least copi f uniform network edg cost edg cost chosen optim flow cost equal optim offlin cost fap minu number read request j oe arc one end point zero cost let b arc go layer k k1 cost equal sum associ movement servic cost suppos b v k1 bs associ movement cost unless oe k1 write node node servic cost read node servic cost gamma1 cost case zero movement servic cost account cost replic serv request except node charg gamma1 read request arriv copi f add j cost optim flow thu charg read request 1 advanc sum equal cost optim dynam alloc f use algorithm 21 solv mincost maxflow problem acycl network fap uniform network solv polynomi time theorem 72 optim offlin file alloc uniform network found 3 8 open problem interest open problem includ find strongli competit random algorithm fap uniform network awerbuch et al 2 conjectur exist c n competit algorithm onlin steiner tree problem 14 23 exist ocncompetit determinist algorithm fap conjectur still open migrat problem gap best known bound 4 10 r competit distribut file alloc dynam file migrat distribut comput system page migrat relax task system competit algorithm distribut data manag ment power random onlin algorithm competit algorithm replic migrat prob lem new result server prob lem server problem onlin game page migrat algorithm use work function compar model file assign problem rectilinear steiner tree problem npcomplet dynam steiner tree problem competit random algorithm nonuniform problem reduc among combinatori problem random onlin algorithm page replic problem linear program random onlin algorithm random competit algorithm data structur network algorithm random algorithm multiprocessor page migrat perform greedi algorithm onlin steiner tree relat problem steiner problem network survey tr ctr baruch awerbuch yossi azar yair bartal onlin gener steiner problem theoret comput scienc v324 n23 p313324 20 septemb 2004