pointer analysi use past two decad mani differ pointer analysi algorithm publish although descript includ measur effect algorithm qualit comparison among algorithm difficult vari infrastructur benchmark perform metric without comparison difficult implementor determin pointer analysi appropri applic also research know algorithm use basi futur advancesthi paper describ empir comparison effect five pointer analysi algorithm c program algorithm vari use control flow inform flowsensit alia data structur result worstcas complex linear polynomi effect analys quantifi term compiletim precis effici addit measur direct effect pointer analysi precis also report determin inform comput five pointer analys affect typic client analys pointer inform modref analysi live variabl analysi dead assign identif reach definit analysi depend analysi condit constant propag unreach code identif effici report measur analysi time memori consumpt pointer analys client b introduct program written languag pointer troublesom analyz memori locat access pointer known inspect statement effect analyz languag knowledg pointer behavior requir without knowledg conserva copi post permiss acm may redi tribut offici citat work hind pioli 2000 pointer analysi use acm sigsoft intern symposium softwar test analysi august 2225 2000 copyright 2000 acm 158113266200008500 tive assumpt memori locat access pointer must made assumpt advers affect precis effici analysi requir inform program understand system optim compil test tool pointer analysi compiletim analysi attempt determin possibl valu pointer analysi gener undecid 16 28 mani approxim algorithm develop provid tradeoff effici analysi precis comput solut worstcas time complex analys rang linear exponenti worstcas complex often true indic analysi time mani research provid empir result algorithm howev comparison among result differ research difficult differ program represent benchmark suit preci sioneffici metric work describ comprehens studi five wide use pointer analysi algorithm hold factor constant therebi focus efficaci algorithm less manner result obtain main contribut paper follow ffl empir result measur precis effici five pointer alia analysi algorithm vari degre flowsensit alia data struc ture addresstaken steensgaard 34 andersen 1 burk et al 4 12 choi et al 5 12 ffl empir data pointer analys solut affect precis effici follow client analys modref live variabl analysi dead assign identif reach definit analysi depend analysi interprocedur condit constant propag unreach code identif result show 1 steensgaard analysi significantli precis addresstaken analysi term direct precis client precis 2 andersen burk et al analys provid level precis modest increas precis steensgaard analysi 3 flowsensit analysi choi et al offer minim increas precis analys andersen burk et al use direct metric littl precis improv client analys 4 increas precis pointer inform reduc client analys put result signific improv effici remaind paper organ follow section describ background work describ differ similar studi section 3 provid overview five pointer algorithm section 4 summar client analys section 5 describ empir studi discuss result section 6 describ relat work section 7 summar conclus 2 background pointer alia analysi attempt determin two pointer express refer storag locat exampl p q point storag locat say lambdap lambdaq alias written hlambdap lambdaq pointsto analysi attempt determin storag locat pointer point inform use determin alias program work use compact represent 5 12 alia inform share properti pointsto represent 8 captur edg characterist alia relat 1 exampl variabl point b b point c compact represent record follow alia set cig infer h ci h lambdabi also alias cost time inform infer affect precis effici analysi 22 12 20 interprocedur dataflow analysi classifi flowsensit flowinsensit depend whether controlflow inform procedur use analysi 23 consid control flow inform therefor comput conserv summari flowinsensit analysi effici less precis flowsensit analysi addit flowsensit sever factor affect costprecis tradeoff includ contextsensit call context consid analyz function heap model object name alloc site sophist shape analysi perform struct model compon distinguish collaps one object alia represent explicit alia represent pointstocompact represent use work hold factor constant choos popular effici altern case result vari usag flowsensit particular analys contextinsensit name heap object base alloc site collaps aggreg compon use compactpointsto represent work differ previou studi 33 35 7 21 follow way 1 minor differ compact pointsto represent 12 relev work ffl breadth pointer algorithm studi two studi 35 21 also includ flowsensit analysi analysi studi 18 also benefit context sensit use differ alia represent explicit one pointsto flowinsensit analys compar ffl number client analys report work first report reach definit flow de pendenc interprocedur constant propag affect qualiti pointer analysi ffl report memori usag import aspect evalu scalabl interprocedur dataflow analys 3 pointer analys algorithm consid list order increas precis addresstaken flowinsensit algorithm often use product compil record variabl whose address assign anoth variabl set includ heap object actual paramet whose address store correspond mal analysi effici linear size program use singl solut set imprecis steensgaard 34 flowinsensit algorithm comput one solut set entir program employ fast unionfind 36 data structur repres alia relat result almost linear time algorithm make one pass program similar algorithm discuss 42 24 2 andersen 1 iter implement andersen contextinsensit flowinsensit algorithm origin describ use constraintsolv 1 although also use one solut set entir pro gram precis steensgaard algorithm perform merg requir unionfind data structur howev requir fixedpoint comput pointer relat statement produc constant alia relat burk et al 4 12 flowinsensit algorithm also iter pointerrel statement pro gram differ andersen analysi comput alia solut procedur requir iter within function addit iter function worklist use latter case improv effici distinguish alia set function allow precisionimprov enhanc use precomput kill inform 4 et al analysi precis andersen analysi filter alia inform base scope ie formal local provabl nonact function consid particular enhanc never improv precis burk et al analysi studi paper 13 thu enhanc version burk et al analysi use precomput kill inform includ studi void main f s5 void f f void gt fp f s9 figur 1 exampl program may less effici comput solut set function rather one whole program choi et al 5 12 flowsensit algorithm comput solut set everi program point associ alia set cfg node program use worklist effici 13 analys incorpor optimist function pointer analysi alia analysi resolv indirect call site analysi proce 8 4 theori subsequ analysi precis costli predecessor paper help quantifi characterist also client analys affect precis pointer analys consid program figur 1 main call f g f also call g addresstaken analysi comput one set object assum pointer may point fheaps1 heaps4 heaps6 heaps8 local p qg appear referenc s5 steensgaard analysi union two object pointedto pointer one object lead union pointsto set formerli distinct ob ject union remov necess iter algorithm exampl formal paramet g may point either p q result p q union one object thu appear point heap object either point heaps1 local derefer s5 four object report alias lambdap andersen analysi also keep one set alias hold anywher program merg object common pointer point lead local report alias lambdap burk et al analysi associ one set everi function conserv repres may hold cfg node function without consid control flow within function distinct allow remov object longer activ local function main f lead heaps1 heaps4 alias lambdap s5 choi et al analysi associ alia set inn outn everi cfg node n exampl outs1 lambdap heaps1 refer storag s1 choi et al analysi comput fhlambdap heaps4ig precis solut simpl exampl exampl illustr theoret precisioneffici level five analys studi addresstaken least precis choi et al precis address taken analysi effici analysi linear use one set steensgaard analysi also use one set almost linear three analys requir iter differ amount inform store one alia set per program andersen one set per function burk et al two per cfg node choi et al 3 analys implement npic system experiment program analysi system written c system use multipl virtual inherit provid extens framework dataflow analys 14 26 prototyp version ibm visualag c compil 15 use front end analyz program repres program call multi graph pcg node correspond function direct edg repres call target function 4 function bodi repres control flow graph cfg node roughli correspond statement graph use build simplifi spars evalu graph seg 6 use choi et al analysi manner similar wilson 39 cfg avail librari function call librari function model base function semant respect pointer analysi handcod model provid benefit contextsensit analysi call librari call affect valu pointer treat ident transfer function pointer analysi implement also assum pointer valu exist pointer variabl pointer arithmet result pointer outsid array string liter model one object implement handl setjmplongjmp manner similar wilson 39 call setjmp record use determin possibl effect call longjmp model valu pass argc argv main function dummi main function ad call benchmark main function simul effect 3 found perform choi et al analysi use seg spars evalu graph 6 instead cfg reduc number alia set averag 73 reduc analysi time averag 280 13 indirect call result sever potenti target function argc argv function also initi iob array use standard io ad function similar one ad ruf 29 30 landi et al 19 17 explicit implicit initi global variabl automat model assign statement dummi main function array initi expand assign array compon 4 client analys section summar client analys use studi 41 modref analysi modref analysi 20 determin object may mod ifiedreferenc cfg node inform subsequ use analys reach definit live variabl analysi inform comput first visit cfg node comput object modifi referenc node pointer derefer gener queri alia inform determin object modifi result mod ref set summar function use call site function call site modref set includ local function activ stack lifetim activ actual paramet call site assum referenc valu assign correspond formal paramet passbyvalu semant modref analysi make simplifi assumpt librari modifi refer locat indirectli pointer paramet fixedpoint iter employ program pcg cycl 42 live variabl analysi live variabl analysi 25 determin object may referenc program point without interven kill definit inform use regist allo cation detect uniniti variabl find dead assign implement backward analysi directli use modref inform associ two set live variabl cfg node repres live execut node share set perform cfg node one successor node act identifi function ie empti mod ref set name object ref set cfg node becom live node name object kill cfg node definit assign ie element mod set noncal node repres one runtim object ie aggreg heap object localform recurs function implement process function employ prioritybas worklist cfg node function optimist name object consid live initi except exit node nonloc modifi function consid live 43 reach definit analysi reach definit analysi 25 determin definit name object may reach execut sens program point inform use comput data depend among statement import step program slice 37 code motion implement forward analysi use modref inform associ two set reach definit cfg node set share perform live variabl analysi name object mod set cfg node result new definit gener node definit kill live variabl analysi function process use prioritybas worklist cfg node function analysi optimist definit initi consid reach point except dummi definit creat entri node function paramet nonloc referenc function 44 interprocedur constant propag constant propag client 26 optimist interprocedur algorithm inspir wegman zadeck condit constant algorithm 38 algorithm track valu variabl interprocedur throughout program use inform simultan evalu condit branch possibl therebi determin condit branch alway evalu one valu addit potenti remov unexecut code analysi simplifi comput provid use inform clone algorithm analysi design combin choi et al pointer analysi 26 27 use pointer inform directli rather use modref set done reach definit live variabl analysi work constant propag analysi simpli run pointer analysi complet like choi et al analysi constant propag algorithm use nest iter seg 5 algorithm extend tradit lattic constant includ posit neg nonzero help analyz c program treat nonzero valu true 5 result studi perform 333mhz ibm rs6000 powerpc 604e 512mb ram 817mb page space run aix 43 analys compil ibm xlc compil use o3 option benchmark follow report pointer analys client precis analysi time maximum memori usag tabl describ characterist benchmark suit contain 23 c program provid research 19 8 29 31 spec benchmark suit 6 loc comput use wc sourc header file column mark fct number userdefin func tion includ dummi main function creat simu 5 howev seg benefit dramat cfg node interest constant propag thu effici typic wors choi et al analysi 6 larg number cfg node 129compress result explicit creation assign statement implicit array initi program syntact modifi satisfi cs stricter typecheck semant program name differ report 29 name ks refer part ft span 30 also spec cint92 program 052alvinn name backprop todd austin benchmark suit 3 tabl 1 static characterist benchmark suit ptrasg cfg node name sourc loc node fct pct allroot landi 227 159 7 13 01qbsort mccat 325 170 8 241 06matx mccat 350 245 7 135 15trie mccat 358 167 13 234 04bisect mccat 463 175 9 97 fixoutput prolang 477 299 6 44 17bintr mccat 496 193 17 88 anagram austin 650 346 ks austin 782 526 14 274 05ek mccat 1202 677 08main mccat 1206 793 41 209 09vor mccat 1406 857 52 286 loader landi 1539 691 129compress spec95 1934 17012 25 02 footbal landi 2354 2854 58 18 compil landi 2360 1767 40 51 assembl landi 3446 1845 52 166 simul landi 4639 2929 111 63 flex prolang 7659 7107 88 52 late commandlin argument pass column mark ptrasg node pct report percentag cfg node consid pointerassign node ie number assign node left side variabl involv pointer express declar pointer 51 pointer analysi precis direct way measur precis pointer analysi record number object alias pointer express appear program use metric andersen burk et al analys provid level precis benchmark suggest alia relat involv formal local provabl nonact function occur benchmark suit client analys use alia solut comput analysi input likewis precis differ client reason group two analysi togeth precis data effici result section 56 distinguish analys pointer express multipl derefer lambdap count multipl derefer express one derefer intermedi derefer lambdap count read last derefer lambdap count read write depend context express statement lambdap lambdap increment treat read write lambdap pointer consid dereferenc variabl declar pointer array formal paramet one oper use variabl formal paramet array includ correspond actual paramet could pointer count use oper array formal paramet result pointer array name constant therefor count may skew result left half tabl 2 report averag size mod ref set express contain pointer derefer benchmark averag benchmark 7 tabl rest paper use signifi valu previou column exampl ptrmod allroot choi et al analysi andersenburk et al analys result show 1 substanti differ addresstaken analysi steensgaard analysi averag 3026 vs 403 improv benchmark assign pointer ptrmod ii averag 3070 vs 487 improv benchmark ptrref 2 measur differ steensgaard analysi andersenburk et al analys averag 403 vs 206 improv 15 22 benchmark assign pointer ptrmod ii averag 487 vs 235 improv 13 23 benchmark ptrref 3 littl differ andersenburk et al analys choi et al analysi averag 206 vs 202 improv 5 22 benchmark assign pointer ptrmod ii 235 vs 229 improv 5 23 benchmark ptrref summari vari degre increas precis gain use precis analysi howev precis algorithm use improv diminish 52 modref precis right half tabl 2 report averag modref set size cfg node captur pointer analysi affect modref analysi serv input mani analys result show 1 substanti differ addresstaken analysi steensgaard analysi averag 250 vs 104 improv 22 23 benchmark mod ii 448 vs 175 improv 23 benchmark ref 2 measur differ steensgaard analysi andersenburk et al analys averag 104 vs87 improv 13 23 benchmark mod ii 175 vs 154 improv 11 23 benchmark ref 3 littl differ andersenburk et al analys choi et al analysi averag 871 vs867 improv 3 23 benchmark mod ii averag 1540 vs 1536 improv 4 23 benchmark ref 7 model potenti mani runtim object one repres object may seem precis compar model use name 29 20 exampl heap model one object heapdirect pointer would resolv one object tabl 2 tabl 2 mod ref pointer derefer cfg node assign pointer occur compil et al ptr mod ptr ref mod ref name st ab ch st ab ch st ab ch st ab ch allroot 3 200 100 3 200 138 88 85 83 177 158 152 04bisect 14 115 14 100 257 58 392 157 anagram ks 17 190 186 162 17 179 174 170 56 55 53 376 135 134 05ek 09vor 19 185 135 132 19 192 168 160 204 63 62 791 140 134 loader 129compress 13 140 107 13 226 111 168 80 78 166 129 128 footbal compil assembl 87 124 221 87 1514 211 121 188 87 1507 409 147 simul 87 316 205 87 395 186 682 62 57 821 121 106 flex 56 537 178 56 509 203 201 597 160 118 155 389 344 343 averag 3026 403 206 202 3070 487 235 229 250 104 0871 0867 448 175 1540 1536 vari degre increas precis gain use precis analysi howev improv dramat previou metric result minim precis gain flowsensit analysi 53 live variabl analysi dead assign first set four column tabl 3 report precis result live variabl analysi benchmark list averag number live variabl cfg node averag averag live variabl inform use find assign variabl never use ie dead assign second set four column give number cfg node dead assign result show 1 substanti differ addresstaken analysi steensgaard analysi live variabl averag 3424 vs 2013 improv benchmark differ find dead assign 2 signific differ steensgaard analysi andersenburk et al analys live variabl averag 2013 vs 1836 improv 13 23 benchmark less differ find dead assign averag 191 vs 196 improv 1 23 benchmark 3 small differ andersenburk et al analys choi et al analysi live variabl averag 1836 vs 1830 improv 3 benchmark differ find dead assign summari precis pointer analys improv precis live variabl analysi choi et al analysi provid minim improv contrast dead assign identif hardli affect use differ pointer analys 54 reach definit andflowdepend third set four column tabl 3 report precis result reach definit analysi benchmark list averag number definit reach cfg node last set four column report averag number uniqu flow depend two cfg node per function metric captur reach definit use cfg node count depend two node thu set variabl potenti defin one node potenti use anoth node one depend count one depend need prohibit code motion two node part slice result show 1 signific differ addresstaken analysi steensgaard analysi averag 3639 vs 2204 improv 23 benchmark reach definit ii averag 5251 vs 4424 improv 21 23 benchmark flow depend 2 measur differ steensgaard analysi andersenburk et al analys aver tabl 3 live variabl dead assign reach definit flow depend avg live variabl node total dead assign avg reach def node avg flow dep per function name st ab ch st ab ch st ab ch st ab ch allroot 04bisect fixoutput anagram ks 05ek 08main 09vor 2033 696 685 2 2368 735 726 3492 2652 2620 loader 5016 2176 129compress compil 4373 4370 assembl 8224 3736 2075 simul averag 3424 2013 1836 age 2204 vs 2021 improv 12 23 benchmark reach definit ii averag 4424 vs 4384 improv 9 23 benchmark flow depend 3 neglig differ andersenburk et al analys choi et al analysi reach definit averag 2021 vs 2016 improv 5 23 benchmark differ flow depend benchmark summari success precis analysi result improv precis reach definit improv diminish flow depend comput particular gain flow depend precis use choi et al analysi ander senburk et al analys minor improv use andersenburk et al analys steensgaard analysi constant propag unexecut code detect constant propag precis result shown tabl 4 benchmark name first four column give number complet express found constant metric count subexpress b bc next four column report number unexecut node found analysi result show 1 signific differ addresstaken analysi steensgaard analysi averag 78 vs 106 constant found improv 3 22 benchmark ii averag 32 vs 253 unexecut node detect improv 2 22 benchmark tabl 4 constant unexecut cfg node found gaard ab andersenburk et al choi et al 099go includ exhaust 200mb heap size constant unexecut node name st ab ch st ab ch allroot 04bisect ks 05ek 08main 36 loader 129compress 34 5 compil assembl simul flex averag 78 106 107 32 253 254 2 neglig differ steensgaard analysi andersenburk et al analys averag 106 vs 107 constant found improv 1 22 benchmark ii averag 253 vs 254 unexecut node detect improv 1 22 benchmark 3 differ andersenburk et al analys choi et al analysi term constant found unexecut node detect summari constant propag unexecut code detect seem benefit much increas precis beyond steensgaard analysi 56 effici effici algorithm vari greatli depend implement 13 therefor care must taken draw conclus regard effici exampl fahndrich et al 9 demonstr effici constraint solv implement andersen algorithm improv order magnitud without loss precis use partial onlin cycl detect induct form tabl 5 present analysi time second five individu run benchmark run differ pointer analysi use time given pointer analysi total time client analys sum two valu time report includ time build pcg cfg includ analysisspecif preprocess build seg cfg choi et al analysi last line give averag column express ratio addresstaken analysi categori pointer analysi client total exampl averag pointer analysi time andersen analysi 2960 time averag pointer analysi time addresstaken analysi averag client analys use inform 84 time averag client analys use alia inform addresstaken analysi result show 1 addresstaken steensgaard analys fast benchmark analys complet less second 2 flowinsensit analys andersen burk et al significantli slower approxim addresstaken steensgaard analys 3 flowsensit analysi choi et al averag time slower addresstaken analysi 25 time slower andersenburk et al analys 4 client analys improv effici pointer inform made precis input size client analysi smaller averag reduct outweigh initi cost pointer analysi steensgaard andersen burk et al analys compar addresstaken analysi brought total time flowsensit analysi choi et al within 9 total time addresstaken analysi tabl 6 report highwat mark memori usag variou analys report ps v command aix 43 amount given pointer analysi total memori client analys sum two valu last line give averag column express ratio address taken analysi categori pointer analysi client total result show 1 memori consumpt addresstaken steensgaard analys similar 2 memori consumpt flowsensit analysi choi et al 6 time larger pointer analysi flex averag use 12 time memori addresstaken analysi 3 memori usag client analys improv precis pointer inform increas averag client use inform produc choi et al analysi use least amount memori enough overcom twelvefold increas pointer analysi memori consumpt addresstaken analysi 6 relat work space constraint limit section compar studi pointer analys thorough treatment relat work found 12 20 39 ruf 29 present empir studi two algorithm flowsensit algorithm similar choi et al contextsensit version algorithm contextsensit algorithm improv precis pointer derefer ruf caution may characterist benchmark suit shapiro horwitz 32 present empir comparison four flowinsensit algorithm addresstaken steen gaard andersen fourth algorithm 33 parameter steensgaard andersen analysi author measur precis analys use procedurelevel mod live truli live variabl analys interprocedur slice algorithm result suggest precis analysi improv precis effici client leav open question whether flowsensit analysi follow pattern landi et al 20 35 report precis result comput interprocedur mod problem use flowsensit contextsensit analysi landi ryder 18 compar analysi analysi 42 similar steensgaard analysi found precis analysi provid improv precis exhaust memori program less precis analysi abl process emami et al 8 report precis result flowsensit contextsensit algorithm ghiya hendren 11 empir tabl 5 analysi time second pointer analysi client total name st bu ch st bu ch st bu ch allroot 04bisect ks 05ek loader 129compress compil assembl simul flex ratio 100 090 2960 3292 7949 100 081 084 071 069 100 082 098 087 109 tabl memori usag mb pointer analysi client total name st bu ch st bu ch st bu ch allroot 04bisect 101 061 225 000 050 089 091 055 066 060 190 152 280 066 110 fixoutput anagram 050 028 162 004 025 115 110 091 096 137 165 138 253 100 162 ks 026 031 239 042 163 279 238 236 231 286 305 269 475 273 449 05ek 000 010 204 018 075 213 186 169 172 166 213 196 373 190 241 08main 019 000 339 076 272 266 189 147 143 142 285 189 486 219 414 loader 129compress compil 061 122 420 105 219 1460 1503 1411 1380 1372 1521 1625 1831 1485 1591 assembl simul ratio 100 115 852 315 1219 100 081 077 071 070 100 082 089 074 087 ical demonstr version pointsto 8 connect analys 10 improv tradit transform array depend test program understand wilson lam 40 39 present contextsensit algorithm avoid redund analys function similar call context algorithm distinguish structur compon handl pointer arithmet wilson 39 compar variou level contextsensit describ depend analysi use comput inform parallel loop two spec benchmark diwan et al 7 examin effect three typebas flowinsensit analys typesaf languag modula 3 first two algorithm reli type declar third consid assign manner similar steen gaard analysi retain declar type inform evalu effect algorithm redund load elimin use static dynam upper bound met ric conclud typesaf languag modula3 java fast simpl typebas analysi may suffici earlier paper 13 describ empir comparison four contextinsensit pointer algorithm three describ paper choi et al burk et al address taken flowinsensit algorithm use precomput kill inform 4 12 alia analysi client studi paper also quantifi analysistim speedup variou implement techniqu choi et al analysi yong et al 41 present tunabl pointeranalysi framework handl structur presenc cast provid experiment result four instanc framework use flow contextinsensit algorithm appear similar andersen algorithm result show pointer algorithm distinguish struct compon improv precis pointer dereferenc metric use section 51 address affect precis client analys similar result hold pointer analys liang harrold 21 describ contextsensit flowinsensit algorithm empir compar three algorithm steensgaard andersen landi ryder 18 use ptrmod section 51 summari edg system depend graph averag slice size precis metric demonstr perform precis mostli andersen steensgaard algorithm none implement handl function pointer setjmplongjmp 7 conclus paper describ empir studi precis effici five pointer analys typic client alia inform comput major conclus ffl steensgaard analysi significantli precis addresstaken analysi without appreci increas compil time memori usag therefor alway prefer addresstaken analysi ffl flowinsensit analysi andersen burk et al provid level precis analys offer modest increas precis steensgaard analysi although improv requir addit pointer analysi time typic offset decreas input size alia inform analysi time subsequ analys clear distinct analysi time memori usag implement analys ffl use flowsensit pointer analysi describ paper seem justifi offer minimum increas precis analys andersen burk et al use direct metric ptrmodref littl precis improv client analys ffl time space effici client analys improv pointer analysi precis increas increas precis reduc input client analysi 8 acknowledg thank vivek sarkar support work npic group member assist implemen tation also thank todd austin bill landi lauri hendren make benchmark avail thank frank tip laureen treaci anonym refere comment earlier draft work work support part nation scienc foundat grant ccr9633010 ibm research suni new paltz research creativ project award 9 r program analysi special c program languag effect wholeprogram analysi pressenc pointer effici flowsensit interprocedur comput pointerinduc alias side effect automat construct spars data flow evalu graph partial onlin cycl elimin inclus constraint graph connect analysi practic interprocedur heap analysi c put pointer analysi work interprocedur pointer alia analysi assess effect flowsensit pointer alia analys travel dakota experi objectori program analysi system architectur montana open extens program environ increment c undecid static analysi person commun safe approxim algorithm interprocedur pointer alias interprocedur modif side effect analysi pointer alias schema interprocedur modif sideeffect analysi pointer alias effici pointsto analysi wholeprogram analysi defin flow sensit data flow problem static analysi softwar transform tool advanc compil design imlement condit pointer alias constant propag combin interprocedur pointer analysi condit constant propag undecid alias person commun effect precis pointer analysi fast accur flowinsensit pointto analysi compar flow context sensit modificationssideeffect problem data structur network flow algorithm survey program slice techniqu constant propag condit branch effici contextsensit pointer analysi c program effici contextsensit pointer analysi c program pointer analysi program structur cast program decomposit pointer alias step toward practic analys tr data structur network algorithm automat construct spars data flow evalu graph constant propag condit branch safe approxim algorithm interprocedur alias interprocedur modif side effect analysi pointer alias effici flowsensit interprocedur comput pointerinduc alias side effect undecid static analysi pointerinduc alias contextsensit interprocedur pointsto analysi presenc function pointer undecid alias effici contextsensit pointer analysi c program contextinsensit alia analysi reconsid pointsto analysi almost linear time program decomposit pointer alias connect analysi fast accur flowinsensit pointsto analysi put pointer analysi work compar flow context sensit modificationsideeffect problem partial onlin cycl elimin inclus constraint graph typebas alia analysi advanc compil design implement static analysi softwar transform tool effect wholeprogram analysi presenc pointer architectur montana pointer analysi program structur cast effici pointsto analysi wholeprogram analysi interprocedur pointer alia analysi flowinsensit interprocedur alia analysi presenc pointer effect presis pointer analysi assess effect flowsensit pointer alia analys travel dakota effici contextsensit pointer analysi c program ctr mana taghdiri robert seater daniel jackson lightweight extract syntact specif proceed 14th acm sigsoft intern symposium foundat softwar engin novemb 0511 2006 portland oregon usa andrea zeller isol causeeffect chain comput program acm sigsoft softwar engin note v27 n6 novemb 2002 ran shaham elliot k kolodn mooli sagiv heap profil spaceeffici java acm sigplan notic v36 n5 p104113 may 2001 andrea zeller isol causeeffect chain comput program proceed 10th acm sigsoft symposium foundat softwar engin novemb 1822 2002 charleston south carolina usa jen krink effect context program slice journal system softwar v79 n9 p12491260 septemb 2006 ondrej lhotk compar call graph proceed 7th acm sigplansigsoft workshop program analysi softwar tool engin p3742 june 1314 2007 san diego california usa marku mock manuvir da craig chamber susan j egger dynam pointsto set comparison static analys potenti applic program understand optim proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p6672 june 2001 snowbird utah unit state jamieson cobleigh lori clark leon j osterweil right algorithm right time compar data flow analysi algorithm finit state verif proceed 23rd intern confer softwar engin p3746 may 1219 2001 toronto ontario canada haifeng john trimbl somu perianayagam saumya debray gregori andrew code compact oper system kernel proceed intern symposium code gener optim p283298 march 1114 2007 esther salam mateo valero dynam memori interv test vs interprocedur pointer analysi multimedia applic acm transact architectur code optim taco v2 n2 p199219 june 2005 donglin liang maikel pen mari jean harrold extend evalu flowinsenstit contextinsensit pointsto analys java proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p7379 june 2001 snowbird utah unit state david j pearc paul h j kelli chri hankin effici fieldsensit pointer analysi c proceed acmsigplansigsoft workshop program analysi softwar tool engin june 0708 2004 washington dc usa donglin liang mari jean harrold equival analysi applic improv effici program slice acm transact softwar engin methodolog tosem v11 n3 p347383 juli 2002 thoma eisenbarth rainer koschk gunther vogel static object trace extract program pointer journal system softwar v77 n3 p263284 septemb 2005 ana milanova atana rountev barbara g ryder parameter object sensit pointsto sideeffect analys java acm sigsoft softwar engin note v27 n4 juli 2002 brian hackett alex aiken alias use system softwar proceed 14th acm sigsoft intern symposium foundat softwar engin novemb 0511 2006 portland oregon usa bolei guo matthew j bridg spyridon triantafylli guilherm ottoni easwaran raman david august practic accur lowlevel pointer analysi proceed intern symposium code gener optim p291302 march 2023 2005 jeff da silva j gregori steffan probabilist pointer analysi specul optim acm sigplan notic v41 n11 novemb 2006 gregor snelt frank tip understand class hierarchi use concept analysi acm transact program languag system topla v22 n3 p540582 may 2000 charl n fischer interact scalabl declar program analysi prototyp implement proceed 9th acm sigplan intern symposium principl practic declar program juli 1416 2007 wroclaw poland ana milanova atana rountev barbara g ryder parameter object sensit pointsto analysi java acm transact softwar engin methodolog tosem v14 n1 p141 januari 2005 jianwen zhu silvian calman symbol pointer analysi revisit acm sigplan notic v39 n6 may 2004 marku mock darren c atkinson craig chamber susan j egger program slice dynam pointsto set ieee transact softwar engin v31 n8 p657678 august 2005 chri lattner vikram adv llvm compil framework lifelong program analysi transform proceed intern symposium code gener optim feedbackdirect runtim optim p75 march 2024 2004 palo alto california martin hirzel daniel von dincklag amer diwan michael hind fast onlin pointer analysi acm transact program languag system topla v29 n2 p11e april 2007 michael hind pointer analysi havent solv problem yet proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p5461 june 2001 snowbird utah unit state david j pearc paul h j kelli chri hankin onlin cycl detect differ propag applic pointer analysi softwar qualiti control v12 n4 p311337 decemb 2004 baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v30 n2 march 2005