edgeconnect augment preserv simplic given simpl graph gve goal find smallest set f new edg gvecup f kedgeconnect simpl recent problem shown npcomplet paper prove optpk high enoughdepend k onlythen opt sk optpk hold optsk optpk size optim solut augment problem without simplicitypreserv requir respect furthermor optsk opt pkleq gk hold certain quadrat function k base fact algorithm given comput optim solut time on4 fix k result extend case nonuniform demand well b introduct last decad sever graph augment problem investig especi connect augment problem attract consider attent due variou connect socal network design problem model surviv problem telephon comput etc network problem graph digraph g target connect number k given goal find smallest set f new edg make g kedgeconnect augment graph kedgeconnect jf j small possibl sometim goal increas vertexconnec g paper consid edgeconnect problem unless state otherwis note set f new edg may contain parallel edg edg parallel edg g well edgeconnect augment problem number extens solv effici sever polynomi algorithm develop see 6 17 20 depart mathemat comput scienc odens univers campusvej 55 dk5230 odens denmark second author support danish natur scienc research council grant 28808 also 2 9 16 mention import result survey area see 7 howev sever version connect augment problem remain open sometim goal increas connect mainta certain properti start graph g depend properti one obtain problem differ natur exampl kant bodlaend 13 consid problem goal increas vertexconnect planar g preserv prove version npcomplet hsu kao 10 want maintain bipartit increas variant vertexconnect graph show done polynomi time recent gabow szigeti author prove 1 edgeconnect optim increas polynomi time preserv bipartit gener lpartit paper deal anoth properti preserv simplic g mention 7 import open problem find algorithm add parallel edg partial result direct obtain frank chou 8 naor et al 17 taoka et al 18 watanab yamakado 19 detail given complex gener problem still open recent second author prove simplic preserv kedgeconnect augment problem np complet even start graph alreadi 1edgeconnect howev shall prove problem becom polynomi solvabl target connect k fix shall give 4 algorithm variant e ledgeconnect simpl graph jv j 1 simplic preserv kedgeconnect augment problem find smallest set f new edg make g kedgeconnect without creat parallel edg must kedgeconnect simpl graph subject jf j must minim f call optim simpl augment g respect k first paper deal similar problem due frank chou 1970 8 solv simplic preserv edgeconnect augment problem special case start graph g edg target connect may nonuniform edgeconnect requir may differ differ pair vertic besid solut version fact construct problem rather augment problem recent result deal small target connect valu k solv special case gener k let us denot size smallest kedgeconnect kedgeconnect simpl augment graph g opt k g respect obvious opt k k graph g check easili lineartim 2edgeconnect augment algorithm eswaran tarjan 4 creat parallel edg thu solv simplic preserv version 2 prove 19 opt k p hold well show polynomi algorithm solv 3edgeconnect augment problem optim without creat parallel edg figur 1 opt 4 2 case gener observ alreadi 18 opt k may hold k 4 see figur 1 hand also shown 18 moreov special case 17 observ opt k minimum degre g least k besid construct polynomi algorithm fix k goal paper show exist function f n opt k opt k p g opt k graph g result present section 3 special proof case l give simpler proof extens result 18 section 4 section 5 indic main result extend case local edgeconnect demand must satisfi 2 terminolog basic result section first introduc basic notat definit list theorem algorithm mostli frank paper 6 shall use proof shall assum reader familiar result 6 e undirect graph two disjoint subset x v number denot number edg x defin degre subset x dx set consist singl vertex v simpli denot v thu dv stand degre v degreefunct graph g 0 denot 0 edg connect vertic x denot xy sometim xy refer arbitrari copi parallel edg x caus confus ad delet edg e graph g often denot g e respect ad delet set vertic set x vertic denot x respect set f edg denot set endvertic edg f subgraph g induc subset x vertic denot gx let deltag denot maximum degre graph g vertex v use nv denot set vertic adjac v subpartit v collect pairwis disjoint subset v oper split pair vs st edg v 6 vertex mean replac edg vs st new edg vt complet split vertex even degre sequenc ds2 split pair edg incid graph e kedgeconnect edgeconnect g largest integ k g kedgeconnect local edgeconnect u v two vertic u v maximum number pairwis edgedisjoint path recal follow wellknown equal proposit 21 let e graph xy v e graph special vertex 11 hold edgeconnect g within v least k say pair edg vs st admiss pair split vs st condit 11 still hold otherwis vs st form nonadmiss pair easi see vs st nonadmiss exist set v 2 x ae v dx k 1 set call danger follow result lovasz 14 problem 653 theorem 22a import tool 6 formul kind extens well part b theorem 22 use argument proof follow easili proof part given 6 pp3536 theorem 22 suppos 11 hold e ds 0 even 14 everi edg st exist edg su pair st su admiss b everi edg st number edg nonadmiss st k 1 proof prove part b follow frank proof part observ everi edg sv st sv nonadmiss pair vertex v either contain uniqu maxim danger set contain contain one two maxim danger set xy whose intersect contain sinc edg sv contribut figur 2 graph g show success augment properti hold g edg uniqu optim augment respect degre degre x obtain former case k edg nonadmiss respect st latter case use 12a get impli dx 2 ds x result paper base frank algorithm 6 solv augment problem without simplic requir use split oper main tool note algorithm find intermedi optim augment optim kedgeconnect augment previous mention algorithm either use onebyon augment approach like 2 17 20 base frank algorithm 9 16 say success augment properti hold certain augment problem increas sequenc targetconnect exist increas sequenc f 1 ae ae f k solut f optim respect k exampl properti hold edgeconnect augment problem graph digraph uniform demand see 3 20 sinc success augment properti hold simpl augment see figur 2 use frank algorithm seem promis attack gener case describ frank algorithm 6 give optim solut given necessarili simpl graph e target connect k provid simplicitypreserv requir frank algorithm phase 1 add new vertex v set f new edg vertic v 11 hold g f minim wrt inclus subject 21 22 23 remark easi see f exist shown 6 exist subpartit v jf odd g 0 add new parallel edg v 0 v 1 remark frank origin algorithm extra edg make 0 v even ad v 2 v howev small modif phase 2 essenti algorithm admiss pair edg incid arbitrari order maintain 11 becom isol delet remark third phase everi edg split theorem 12a result graph optim kedgeconnect augment g sinc second phase 3 simplic preserv augment uniform demand idea modifi third phase frank algorithm introduc addit rule determin order split certain case everi admiss pair allow chosen shall see make possibl avoid creation parallel edg henc maintain simplic provid 0 high enough begin third phase clearli preserv simplic phase 3 result augment set optim simplicitypreserv version one want maintain simplic use frank algorithm admiss pair st su may split u adjac origin graph new edg u pair st su chosen yet anoth edg st anoth su call admiss pair legal say complet split feasibl result graph simpl kedgeconnect e start graph let k 2 targetconnect theorem 31 let g graph end second phase frank algorithm suppos hold exist feasibl complet split proof let denot set neighbour claim subgraph induc vertex k neighbour see let us consid edg st 2 f sinc f obtain minim set f satisfi 21 gamma 23 ad one edg e parallel edg f exist set x ae v 2 x edg vertex gamma x contribut degre x neighbour x contribut degre x least one exist edg sy thu condit 22 impli jsj 3k 3 sinc deltah k exist see easi exercis 14 problem 81 subset ae jt independ h proof exist feasibl complet split follow analysi follow algorithm modifi version third phase frank algorithm goal split legal pair becom isol split step updat h follow split pair st su first edg tu ad h edg st su last copi edg u respect delet u h well thu current graph h next split mean graph forbidden edg updat way clearli alway find pair legal current h obtain feasibl complet split algorithm four part execut follow order 1 split legal pair edg st su form 2 u parallel edg vertex keep one copi edg st 2 2 split legal pair edg sv su form v u long possibl 3 split edg su u edg st 2 st su legal pair remain edg st su form let us prove algorithm termin complet feasibl split first observ proof theorem 22 b combin proof 25 impli follow statement 32 let st edg let 2 w subset vertic current h st su legal pair 32 inequ impli alway find legal pair split follow rule part 1 show part 1 execut claim 32 obtain end phase 2 size current k 1 thu phase 3 kk must split suffici maintain feasibl claim 32 sinc phase 3 also execut current h induc independ set arbitrari split h alway remain independ sinc phase 1 delet parallel edg vertic thu phase 4 allow split admiss pair arbitrari order yield feasibl complet split theorem 22 pi thu obtain follow corollari show exist function fk exist optim solut kedgeconnect augment problem without simplicityrequir preserv simplic provid optimum valu least fk theorem 33 opt k k small possibl sharpen previou rough bound fk use precis analysi even obtain sharp valu special case found alreadi 18 use differ approach detail given section 3 theorem 34 opt k start graph g target connect k sinc jv j exist kedgeconnect simpl graph almost kregular obvious eh contain set edg make g kedgeconnect preserv simplic thu may assum jv gj 4k gamma 3 proof base version frank algorithm last phase certain edg split pair replac one two new edg use oper first two phase begin phase 3 set f new edg incid opt k hold phase 3 first let us split legal pair long possibl claim 32 number neighbour legal pair found point one edg f delet without violat 11 edg let us delet rest procedur instead split pair edg tri replac everi edg incid one two edg v maintain 11 preserv simplic edg current g 0 critic e respect 11 impli exist set x us call set xtight former case stight latter case g 0 uniqu minim xtight set x uniqu minim set respect fix edg st furthermor 11 hold g edg e proof let x minim xtight set x 0 xtight set contain x case 11 12b obtain contradict prove x uniqu uniqu prove similarli two vertic e edg suppos 11 hold g violat 11 w xtight g 0 0 2 w must also hold follow stight set g 0 contain contradict prove claim pi clearli x gamma size least k exist two vertic x 0 0 nonadjac g 0 replac sx e maintain 11 preserv simplic suppos x gamma size k gamma 1 adjac x vertex gamma sinc vertex contribut degre x gamma sinc assum jv exist vertex w adjac x vertex replac e xw wy preserv simplic easi see maintain 11 well thu substitut remain kk incid g 0 edg obtain solut size jf graph k defin disjoint union two complet graph k k1 k k2 connect k2 independ edg show biggest possibl gap opt k opt k p inde quadrat function k easi check opt k henc differ question k 2 also note follow algorithm part proof previou theorem one obtain 4approxim algorithm algorithm give solut size 4opt k g simplicitypreserv kedgeconnect augment problem provid k n4 run time polynomi even k fix idea algorithm augment problem simplic requir follow opt k p larg enough simpli follow algorithm proof theorem 31 give solut size opt k creat parallel edg thu obvious optim simpl augment opt k p small trivial way find optim solut check everi possibl augment set size less opt k howev although number set polynomi function n fix k expon still depend k avoid prove check possibl augment set may restrict set possibl endvertic augment edg set size hk appropri function h k fix advanc constant time fix k set x ae v defici e respect targetconnect k set v cover defici set everi defici set x follow correct frank algorithm also claim 35 everi cover v exist optim solut f v problem without simplic requir impli optimum valu easili find set vertic g cover form endvertic new edg end phase 1 frank algorithm size 2m exist optim solut f v although simplicitypreserv version cover properti gener consid graph figur 1 find rel small subset case exist optim solut f v see let g start graph let cover defici set g vertex g let us fix set ly ny vertic minfjnyj 2kg vertex 2 defin subset vertic v follow vertex belong dt 2k gamma 1 vertex x exist xtpath p length k dv everi v lv hard see claim set requir properti note hold jt j jsjhk exist set size jsjh 0 k follow immedi previou result howev construct effici algorithm need find set advanc without know optim solut theorem 36 exist optim simplicitypreserv solut f v proof let us choos optim simplicitypreserv solut f jv small possibl number zero done exist edg least one endvertic without loss gener assum subdivid e new vertex appli claim 35 observ g f gamma e precis two disjoint minim defici set b 2 b 2 b edg e kedgeconnect thu enough prove exist vertex adjac gf prove vertex exist suffici see sinc dgf replac e e 0 would yield optim simpl augment set f 0 jv contradict choic f first let us prove c 6 everi compon c subgraph gb sinc b defici g e defici g well thu sinc cover defici set compon c gb set c defici g thu sinc edg c contribut db obtain let 2 vertex compon gb contain b let p set vertic tbpath gb let b 0 vertex p closest p includ let p 0 denot subpath p endvertic b 0 k done sinc jt bj k follow assum jp definit b 0 exist z 2 dz 2k former case let z obtain least k vertic lz belong b otherwis dg contradict henc proof previou three theorem lead algorithm whose run time 4 provid targetconnect k fix let us scetch algorithm estim run time input graph e first add new vertex construct set f new edg comput opt k frank algorithm done time 2 appli method nagamochi ibaraki see 16 proceed describ case ii otherwis case opt g theorem 34 case identifi set vertic theorem 36 algorithm point view done comput restrict bfstree vertex set consist neighbour size 3k 4 case thu number step need find depend k last phase case seri kedgeconnect test check possibl set new edg f 0 size v simpl kedgeconnect choos smallest good augment clearli number possibl function k theorem 36 find least one good augment set number step one test 2 16 let us analyz case ii theorem 33 opt k hold first identifi set vertic independ gs size k 2 1 done greedi search linear time follow four part algorithm proof theorem 31 first split pair edg incid use socal sbase connect algorithm 16 subroutin test whether pair legal one test requir time onm log n total number test first part depend k second part split pair whose endvertic gamma long possibl requir kk sbase connect test k edg vertex v 2 32 k 2 test find legal pair sv remain two part consist sbase conect test split pair within calcul impli follow theorem theorem 37 simplicitypreserv kedgeconnect augment problem solv 4 fix k pi 4 augment 3 4 section give full solut special case g 3edgeconnect want make 4edgeconnect remark smallest target valu opt p opt may differ goal find exact valu function f g case proof impli algorithm use seri 4edgeconnect test like case algorithm gener case main result section theorem 47 alreadi obtain taoka et al 18 proof omit use differ approach seem work arbitrari valu target connect includ section show method provid fairli easi complet proof result set x vertic graph g edgeconnect k call critic hold follow easi lemma left reader lemma 41 let g simpl 1edgeconnect kedgeconnect everi minim critic set size one least k pi lemma 41 show x two disjoint critic set exist two vertic nonadjac unless x singleton suggest goal increas connect one without creat new parallel edg minim critic set import role singleton follow lemma make possibl assum everi minim critic singleton lemma 42 let e simpl graph 1edgeconnect kedgeconnect exist 1edgeconnect simpl graph g 1 everi minim critic set g singleton ie size one proof first note minim critic set x critic set either hold proposit 21 impli minim critic set g pairwis disjoint suppos g contain minim critic set singleton let x minim critic set g singleton lemma 41 x size least k form new graph g g ad new vertex x join edg differ vertic x claim g easili seen 1connect properti 13 everi critic set g contain minim critic set ad new vertex x origin nonsingleton minim critic set new x critic g henc follow minim critic set g precis origin singleton critic set plu vertic x prove 1 impli first two phase frank algorithm number new edg ad g g give 2 let us consid optim simpl kedgeconnect augment f g let us form set f new edg f replac everi edg connect two set x x j x x j everi edg e enter easi see graph g simpl kedgeconnect give opt k g prove inequ first observ follow fact x size least k u edg optim simpl augment f g g least one vertex x nonadjac u similarli edg f find vertic uv edg g defin follow set new edg f ad g let f contain edg f connect vertic v furthermor edg contain edg u nonneighbour u edg type x contain edg uv uv 62 e claim g kedgeconnect impli opt k construct f contain edg parallel edg e easi see f contain parallel edg prove inequ enough observ delet one copi two parallel edg f destroy kedgeconnect suppos let w set whose degre g 00 1 w critic g well w u 6 minim critic set u none edg f leav w obtain g set obtain ad w vertic x x w degre contradict prove 3 pi next four lemma consid graph g obtain appli first second phase frank algorithm start simpl graph e least five vertic g 3edgeconnect 4edgeconnect goal find opt 4 g optim augment set lemma 42 assum neighbour g 0 degre 3 g ie form singleton critic set set 6 x ae v critic 4 set x call danger hold note sinc g alreadi 3edgeconnect everi danger set x 0 x 2 fact use sever time sequel lemma 43 follow hold everi x 2 1 dh x 2 everi nonneighbour u x h pair sx su legal split 2 one maxim danger set among contain x least one neighbour particular one nonneighbour x h pair sx sy legal split 3 either dh sx two pair sx su sx sv legal split type type ii type iii figur 3 except case 3 three type everi nonempti subset l degre least 4 proof suppos dh x 2 x danger set contain x eh g set x gamma x degre 2 contradict fact g 3edgeconnect prove 1 prove 2 suppos x contain two maxim danger set b follow proposit 21 g 5 difficult check pariti argument equal hold time contradict show x contain one maxim danger set final observ 3 follow easili 1 2 pi lemma 44 0 2 exist feasibl complet split unless g 0 type iii iii figur 3 proof everi admiss complet split involv ad edg uv uw u vertex two edg henc theorem 22 feasibl complet split exist dh easili seen case g 0 type iii iii figur 3 thu assum 4 theorem 22 may assum jehj 1 suppos first dh v 1 v 2 h let uv 2 eh let w z remain vertic follow lemma 43 2 least one pair su sw su sz legal split sinc remain pair vertic h adjac lead feasibl complet split may assum h contain edg uv uw let z fourth vertex follow lemma 43 pair su sz legal split henc sinc v w adjac feasibl complet split pi lemma 45 0 4 exist legal split unless 0 g 0 type ii figur 3 proof 0 easili lemma 43 exist legal split henc may assum 0 suppos first follow lemma 43 legal split x 2 degre 3 h let u v w remain vertic sinc g 3edgeconnect least five vertic may assum wlog u v adjac either u v adjac w su sv legal lemma 43 1 henc assum h star center x lemma 43 2 least one pair su sv su sw legal split first note x vertex two edg danger set contain x neighbour henc follow legal split involv x xy xz 2 eh case g type ii figur 3 pi lemma 46 0 made 4edgeconnect preserv simplic ad two edg proof two remain neighbour u v nonadjac uv make g 4edgeconnect thu assum uv 2 e assumpt 0 hold g contain vertex adjac u v ad edg ua av get new graph simpl 4edgeconnect vertex exist jv must hold easi see ad pair edg join u nonneighbour u v nonneighbour v make graph 4edgeconnect pi theorem 47 18 everi 3edgeconnect graph g least five vertic follow hold ii opt 4 proof let g graph return phase 2 frank algorithm note abl perform sequenc legal split effect ad set edg f 0 g preserv simplic follow theorem 22 fact end phase 2 frank algorithm opt 4 follow hold henc show opt 4 follow opt 4 g use observ sever time first prove lemma 42 may assum minim critic set g singleton lemma 46 may also assum 0 4 use lemma 45 perform legal split 0 current g 0 point must hold lemma 44 either exist feasibl complet split g 0 type iii iii figur 3 difficult see latter case opt 4 observ get g henc may assum follow lemma 45 still find one legal split point appli lemma 46 obtain opt 4 suffici thu case get opt 4 prove prove ii suppos opt 4 g 6 k 33 clearli 1 lemma 45 remark begin proof follow suffici prove opt 4 let g graph return phase two frank algorithm lemma 42 may assum minim critic set g singleton remark assum 0 6 graph g 3regular 3connect thu sinc exclud k 33 prism complement cycl length six desir equal trivial hold suppos least 7 vertic v sinc g 3edgeconnect neighbour degre 3 g follow jehj 7 must least 4 edg case 1 shall argu alway find legal split properti make split two edg remain new graph h lemma 44 impli exist feasibl complet split henc g two vertic u v degre 3 lemma 43 legal split edg su recpect sv everi edg sw w non neighbour u respect v henc may assum u v adjac otherwis elimin six edg perform one legal split sinc g 3edg connect u v two common neighbour x sinc degre set would two g u v common neighbour easi check legal split involv one edg su sv two edg remain h afterward su sv split edg two neighbour v u assum u v precis one neighbour x common easi check use lemma 43 alway find legal split elimin least five edg h either vertic h degre 2 follow lemma 43 1 desir legal split exist vertex u degre 3 h sinc g 3edgeconnect 6 edg h insid graph induc u neighbour henc lemma 43 desir legal split exist vertex degre 2 easi see find legal split elimin two edg h final vertex degre 1 h everi legal split desir properti case 2 follow end phase 2 frank algorithm two parallel edg vertex v 2 let wg sinc start 3edgeconnect graph g vertic fx assumpt degre 3 g induc k 4 henc follow lemma 43 legal split involv two vertic set fx say wlog z w remain neighbour fv x yg induc graph 2 edg sinc g 0 4edgeconnect vertic degre 3 g lemma 44 either feasibl complet split actual g 0 g 0 type ii iii figur 3 case argu proof henc remark begin proof shown opt 4 g pi verifi analyz algorithm 17 say simpl graph g optim simpl 3edgeconnect augment g 0 opt 4 result section show conjectur start graph alreadi 1edgeconnect function theorem 33 replac linear function k perhap would 5 nonuniform demand augment problem without simplicitypreserv requir solvabl polynomi time even target connect uniform given symmetr pair vertic start graph e goal find smallest set f new edg g local edgeconnect u v least ru v pair u v vertic gener version also solv frank 6 everi subset x v let us defin g simplic avoid socal margin compon 6 assum ru v 2 pair u v 2 v menger theorem extend graph augment graph satisfi requir hold like uniformdemand case frank use splittingoff idea proof fact algorithm gave ident algorithm uniform case except ad k parallel edg new vertex vetex v delet part phase 1 one must maintain 51 instead 11 split phase 3 local edgeconnect must preserv everywher pair vertic v detail refer 6 correspond phase 3 done follow theorem due mader say two edg st su form admiss pair e split st su local edgeconnect remain vertic v note split never increas local edgeconnect theorem 51 15 let e connect undirect graph ds 6 3 cutedg incid admiss pair st su edg section goal prove counterpart theorem 31 33 34 show case simplicitypreserv version nonuniform augment problem exist similar function f 0 k g 0 k like fk gk uniform case problem solvabl polynomi time k fix shall use similar approach use uniform case fact crucial part gener prove similar statement lemma 54 correspond theorem 22b hold case ensur number edg nonadmiss respect fix edg st bound function k howev prove must modifi concept admiss also phase 3 frank algorithm nonuniform case reason although goal satisfi 51 solut given frank algorithm guarante maintain local edgeconnect extend graph construct phase 2 hand extra properti solut easi see certain optim augment obtain frank algorithm exampl let g disjoint union two star k 1m let ru pair u v vertic optim solut must set independ edg two star although set independ edg leav would good augment set provid least two edg connect two star moreov simplicitypreserv version sometim minimum number new edg ad satisfi requir first two phase frank algorithm given local edgeconnect g optimum valu respect origin demand given function r exampl first two phase frank algorithm appli graph figur 4 add edg sx sy sv sz although exist proper augment set size two xy vz legal split phase 3 sinc 0 must also maintain z figur 4 rx one want preserv simplic well phase 3 better work follow less restrict definit admiss e graph 51 hold function r defin nonuniform requir say two edg st su form radmiss pair admiss pair r clear context split st su violat 51 set 6 x ae v tight hold say x danger let sx rx easi see st su admiss pair danger set x u 2 x list result shall use 5 6 proposit 52 6 everi pair xy v least one follow inequ hold easi check proof 5 claim 42 32 43 work way use definit admiss thu obtain three similar statement first one give x danger set respect edg st ds x state lemma correspond 5 claim 32 need one definit third claim get mention proof contract subset x vertic graph e mean delet x replac new vertex vx add dg v x new parallel edg result graph denot gx contract subset x defin new requir function r 0 gx expect r 0 v x correspond function r 0 subset defin r 0 lemma 53 let tight set pair st su edg radmiss g correspond pair edg r 0 admiss gt pi readi prove lemma need lemma 54 suppos e 2edgeconnect everi edg st number edg su pair st su nonadmiss 2k proof let denot set neighbour let w ae denot neighbour u st su form nonadmiss pair one previou remark mean exist famili f danger set contain cover everi vertex w let us fix famili jf j minim subject maxim shall prove jf j hold note 5 claim 43 two danger set cover whole first claim everi danger set induc connect subgraph see assum x danger two compon x 1 x 2 without loss gener rx attain pair u 2edgeconnect contradict let us consid tigh set 1 danger set 2 contain two set 52b hold sinc otherwis proposit 21 contradict use exist edg st thu 52a must hold proposit 52 impli sm follow 2 also tight tight note 1 2 6 v anoth consequ 2 2 f must hold otherwis 2 would follow choic f observ impli exist tight set contain exist uniqu maxim tight set contain moreov tight set exist subset everi member f ds hold lemma 53 contract tight set decreas number edg nonadmiss respect st thu rest proof shall assum everi tight set singleton say pair xy member f apair 52a hold x otherwis pair bpair xy 2 f apair get sinc choic f show intersect must tight therefor must hold apair xy suppos xy bpair z apair claim xz must bpair suppos xz apair disjoint x furthermor precis one edg edg st x inequ follow edg z gamma henc z connect contradict fact everi danger set induc connect graph henc f partit subfamili f 1 f r xy bpair x differ subfamili suppos one subfamili f size least k sinc member subfamili connect x gammam gammam differ member xy 2 f least k differ neighbour v sinc connect well k contradict thu subfamili partit size k gamma 1 impli jf must three set xyz 2 f pairwis bpair sinc bpair xy set tight henc singleton minim f impli exist set n hold use 52b give edg leav n g st contradict henc obtain jf 2 sinc ds x 2 f ds k number edg nonadmiss respect st k2k gamma lemma 54 follow proof idea theorem 31 33 34 one obtain correspond result nonuniform version exist function detail similar omit remark must ad first modifi frank nonuniform algorithm way except last part small number edg present phase 3 split edg form admiss pair sens defin necessari sinc otherwis lemma 54 valid see exampl two star begin section furthermor point need involv argument extens claim 35 exist simpl graph maximum degre satisfi nonuniform demand latter case result 8 refer also note assumpt r 2 impli 2edgeconnect condit lemma 54 fulfil theorem 55 let graph end second phase frank nonuniform algorithm hold exist feasibl complet split feasibl meant respect 51 pi theorem 56 opt k hold pi theorem 57 opt k start graph g nonuniform demand vg pi far proof counterpart theorem 36 would improv effici algorithm like theorem 36 uniform case 6 remark last section remark made relat possibl extens simplic preserv edgeconnect augment problem subsetproblem goal find simplicitypreserv augment make subset x ae v kedgeconnect mention next open problem studi least 18 observ special case nonuniform demand version hand subsetproblem solv slightli modifi proof uniform case well direct version problem similar function fk like theorem 31 exist 12 famili g k digraph shown k opt k argument appli vertexcost version simplicitypreserv augment problem without simplic requir solv frank algorithm see 6 consequ small modif made phase 2 algorithm consid star k 1m odd 2 weight uniformli 2 except center v star whose weight 1 result valid gener case start graph g simpl augment set f must contain parallel edg edg parallel edg g detail omit final remark version augment set f must contain parallel edg new edg may parallel edg start graph remain open r parallel fast sequenti algorithm undirect edg augment success edgeconnect augment problem comput 5 theorem mader augment graph meet edgeconnect requir connect augment problem network design connect consider design surviv net work applic poset represent edgeconnect graph rigid optim augment bipartit componentwis biconnect linear time augment direct graph preserv simplic planar graph augment problem reduct method edgeconnect graph fast algorithm optim increas edgeconnect simplic preserv augment edgeconnect graph linear time algorithm smallest augment 3edgeconnect graph journal comput system scienc 35 tr ctr hiroshi nagamochi toshihid ibaraki graph connect augment applic order discret appli mathemat v123 n13 p447472 15 novemb 2002