static parallel loop recurs demonstr approach static parallel loop recurs exampl polynomi product phrase loop nest polynomi product parallel automat appli spacetim map techniqu base linear algebra linear program one choos parallel program optim respect object function like number execut step processor channel etc howeverat bestlinear execut time complex atain phrase polynomi product divideandconqu recurs one obtain parallel program sublinear execut time case target program deriv automat search given program skeleton deduc sequenc equat program transform discuss use skeleton compar assess model loop divideandconqu resurs parallel comment perform properti result parallel implement b introduct give overview sever approach static parallel loop recurs 1 pursu univers passau emphasi paper divideand conquer recurs static parallel follow benefit 1 effici target code one avoid overhead caus discov parallel run time minim overhead caus administ parallel run time 2 precis perform analysi question parallel settl compil time one predict perform program accur 3 optim compil one compil specif parallel architectur one limit static parallel method identifi larg amount parallel usual must exploit regular structur sourc program mainli 1 equat loop tail recurs done systol design 28 36 structur concern depend program step depend impos execut order still sourc program adapt satisfi requir parallel method programm need think parallel may simpli state hisher prioriti resourc consumpt let method make choic illustr static parallel method recurs program exampl polynomi product proceed four step sect 2 provid specif polynomi product specif execut dynam parallel drawback explicit control use resourc sect 3 refin specif doubl loop nest addit depend parallel loop nest spacetim map method base polytop model 29 method search automat larg number possibl parallel implement optim respect object function like number execut step processor commun channel etc sect 4 refin specif divideandconqu dc algorithm fewer depend loop nest central section paper dc parallel method well understood nest loop thu one deriv parallel implement hand albeit formal equat reason howev parallel process problemindepend start point program schema call skeleton 9 discuss two dc skeleton instanti polynomi product parallel subsect 41 first skeleton callbalanc fixeddegre dc parallel adapt spacetim map method base method nest loop 25 target parallel loop nest also repres spmd program subsect 42 second skeleton bit less gener parallel base algebra properti constitu 20 use gener coarsergrain parallel form spmd program paper mainli compar evalu refer cite individu section contain full detail respect technic develop comparison concern model method use parallel asymptot perform respect parallel implement 2 polynomi product illustr exampl product two polynomi b degre n specifi quantifi notat dijkstra 14 let us name product polynomi c note specif prescrib particular order comput cumul sum defin coeffici product polynomi make specif execut without think simpl switch syntax program languag haskel 40 yield c b haskel reduc sum total order given sequenti semant partial order given parallel semant programm pay benefit choos order lack control use resourc comput main resourc time length execut space number processor other number commun channel memori requir etc 3 nest loop program 31 sourc program target program appli loop parallel one must first impos total order reduct specif mean ad depend depend graph specif choic order may influenc potenti parallel one care choos count subscript b automat method help explor search space choic 3 anoth chang make convert updat c singleassign form give rise doubli index variabl c also automat techniqu kind convers 15 lead follow program element contain final valu coeffici product polynomi n depend graph loop nest affin bound index express form polytop loop repres one dimens vertic graph form partit tempor spatial compon done linear algebra integ linear program exampl choic fairli obviou consid fig 1 polynomi product upper left show polytop integ lattic dot repres one loop step upper right depend graph depend c shown sinc c updat line lower left repres time slice point line execut parallel choic minim respect execut time note depend arrow must cover line line lower right repres processor line contain sequenc loop step execut fix processor line may parallel tempor r r r r r r r r r r r r r r r r r r r r r r r r r sourc polytop data depend tempor partit spatial partit figur 1 polytop partit 2deltan synchron program seqfor 0 n parfor p n asynchron program parfor p 0 2 n seqfor max0 minn p figur 2 target polytop target program line chosen cover depend ie minim number commun channel processor zero partit time space combin spacetim map affin transform coordin system axi exclus devot time ie repres sequenti loop space ie repres parallel loop like adjust polar filter sourc polytop make time space explicit fig 2 depict target polytop two target program deriv choic order name order loop nest outer loop time inner loop space synchron program global clock typic simd style enforc clock tick need global synchron step time loop order loop vice versa asynchron program privat clock processor typic spmd style need commun statement enforc data depend chosen spatial partit commun requiredat expens twice number processor necessari program code loop bodi sourc program indic chang invers spacetim map must appli 32 complex consider interest perform criteriaat least one want consid herear execut time number processor overal cost cost defin product execut time number processor one interest cost mainten ie properti parallel increas cost complex program polytop model best time complex one achiev linear problem size 2 least one loop must enumer time ie sequenti pure version model one usual get away one sequenti loop 5 remain loop enumer space ie parallel requir polynomi amount processor sinc loop bound affin express cost affect parallel one simpli trade time space product time space stay 33 evalu let us sum essenti properti polytop model purpos comparison 1 depend graph embed higherdimension space dimension fix equal number loop loop nest 2 extent depend graph dimens usual variabl depend problem size howev import properti polytop model complex optim search independ problem size 3 vertex depend graph repres roughli amount work precis put constant bound amount work perform one vertex 2 except trivial case depend iter execut one common step 4 larg choic problemdepend affin depend thu given loop nest individu depend automat optim search perform maxim parallel 5 one save processor trade one spatial dimens time ie emul set processor singl processor 6 end result nest sequenti parallel loop affin bound depend 7 one loop sequenti rest parallel alway achiev 5 one obtain execut time linear problem size save processor one trade space time price increas execut time complex particular one make number processor independ problem size partit result processor array fixeds tile 13 39 4 divideandconqu algorithm rather enforc total order cumul summat specif 2 coeffici product polynomi accumul summand dc algorithm exploit associ polynomi addit phi left side follow write explicitli show degre variabl polynomi let mn div 2 assum rest paper simplic n power 2 suffix l stand lower part h higher part polynomi b input polynomi depend graph algorithm depict fig 3 c e f result polynomi four subproblem start point parallel give us sublinear execut time fundament differ parallel dc oppos nest loop choic depend depend graph alway call graph sinc problemdepend depend need automat parallel base instead take skeleton approach 9 provid program schema socal algorithm skeleton dc fill program piecesw call custom functionsin order obtain dc ap plicat task offer dc skeleton one sever highqual parallel implement call architectur skeleton may involv search search space problemindepend thu need redon everi applic user applic end challeng remain cast problem form algorithm skeleton altern user might develop architectur skeleton even better perform exploit problemspecif properti hisher applic combin divid recurs ah bh ah bl al bh al ch cl dh dl eh el fh fl ch cl fh fl bl dh dl el eh al bh bl figur 3 call graph dc polynomi product research parallel dc earlier stage nest loop mani differ algorithm skeletonsand even architectur skeletonscan envi sion common yardstick evalu found yet discuss two algorithm skeleton respect approach parallel 41 spacetim map dc 411 sourc program target program call graph fig 3 match algorithm skeleton callbalanc fixeddegre dc develop skeleton phrase higherord function haskel 25 divcon divcon k basic divid solv indata length indata j 1 map basic indata els let solv transpos x l map fst l map snd l map combin els error list length right let us comment function see paper map op xs appli unari oper op list xs valu return list result map one main sourc parallel higherord program xsi return concaten list xs list ys zip xs ys zip list xs ys list correspond pair element detail bodi divcon irrelev point want make paperand inde irrelev user skeleton matter higherord specif specifi gener version schema depict fig 3 whose paramet k basic divid combin caller fill divis degre appropri function comput basic case divid combin recurs case exampl show use name fig 3 express polynomi product term divcon skeleton polynomi multipli repres list coeffici order x preadapt x postadapt fst z map snd z divid ah bh al combin ch cl dh dl eh el fh fl skeleton take input deliv output list size n operand result polynomi product format accordingli function preadapt zip input polynomi singl list function postadapt unpack zip higher lower part result given unlimit resourc clear without search tempor spatial partit horizont layer call graph one time slice seem suggest twodimension geometr model one tempor axi point one spatial axi point sideway howev pay convert call graph higherdimension structur reason vertic graph repres grossli unequ amount work word amount work one vertex cap constant binari divis data node fix layer divid phase repres doubl amount work node layer revers appli combin phase behaviour hold algorithm fit skeleton obtain graph work node repres bound constant split node work aggreg data set node work atom data fragment node spread across addit dimens yield higherdimension graph fig 4 time point depth given size call graph time slice twodimension onedimension increas problem size spatial dimens ad parallel loop program scan graph similar manner would scan polytop deriv 25 r number recurs call log n element read input data divid dim 0 solv basic case divid dim 1 combin dim 0 result depth dimens combin dim 1 figur 4 higherdimension call graph dc polynomi product ab pair input coeffici element c pair output coeffici higher lower result polynomi seqfor r parfor parfor seqfor parfor program consist sequenc three loop nest divid sequenti combin phase loop enumer level graph therefor sequenti wherea loop q parallel enumer spatial dimens spatial dimens index digit q radix k represent allow us describ iter across arbitrari number dimens singl loop make text program independ problem size q k denot vector digit q radix k q k select dth digit access valu point whose index differ dimens use notat q k number one obtain q replac dth digit represent differ target program polytop model dimens correspond separ loop data index time compon space compon q divid combin function given actual coordin paramet order select appropri function particular subproblem divid resp data partit combin loop program also deriv formal equat reason 26 program dataparallel therefor implement directli simd chine addit program transform easili spmd program parallel machin distribut memori use messag pass twodimension array becom onedimension spacecompon project select particular processor alltoal commun restrict group k processor processor q execut follow seqfor r alltoal list valu receiv alltoal seqfor alltoal list valu receiv alltoal one interest transform comput domain fig 4 two way 1 loop parallel approach potenti finegrain paral lelism loop parallel spatial dimens move time save processor urgent sinc demand processor grow faster increas problem size 2 spatial part comput domain remain higher dimension dimension reduc depict fig 5 done eg target processor topolog mesh work extent dimens fix x x z figur 5 dimension reduct comput domain 412 complex consider implement effici assign basic problem separ physic processor instead spatial dimens map time result slightli modifi spmd program brief oper singl element replac oper segment data let n size polynomi p number processor basic phase segment work equal distribut among processor ie processor respons n2 log p log element time comput basic phase segment therefor 2 p comput divid combin phase take olog n step step segment size n p divid combin parallel entir comput time phase therefor olog n deltan dimension target mesh equal number dimens map space total time execut time sublinear number processor asymptot greater problem size maintain cost 2 number processor asymptot greater n best execut time achiev cost mainten olog 2 n dimension target topolog taken account calcul reveal follow 1 sublinear execut time achiev dimension least 3 2 comput sublinear costmaintain cubic threedimension mesh number processor asymptot n n 12 algorithm polynomi product sequenti time complex log 3 socal karatsuba algorithm 1 sect 26 divis degre 3 express skeleton whose parallel implement 25 algorithm cost maintain reason problem size experi shown sequenti version karatsuba algorithm beat sequenti version convent algorithm polynomi size least 16 sinc subproblem slightli computationintens parallel version karatsuba algorithm skeleton bit slower parallel version convent algorithm one save processor precis 413 evalu properti spacetim map model compar polytop model previou section 1 dimension call graph variabl equal number layer divid phase depend problem size 2 extent depend graph spatial dimens fix degre problem divis 3 vertex call graph repres amount work 4 choic depend search parallel necessari 5 varieti parallel given option trade spatial dimens time 6 end result nest sequenti parallel loop 7 upper bound tempor loop logarithm problem size upper bound spatial loop exponenti upper bound tempor loop ie polynomi problem size look comput domain fig 4 extent spatial dimens constant number spatial dimens grow problem size sublinear execut time root problem size possibl mesh topolog condit maintain costoptim case restrict 42 homomorph simpl dc skeleton homomorph captur dc situat defin often list 7 37 although also defin data structur eg tree 17 array 33 421 sourc program target program unari function h list homomorph 7 iff valu concaten two list comput combin valu h two part oper fi signific homomorph parallel given promot properti version follow red dist 6 equal also prove equat reason literatur one use bird meerten formal bmf 7 equat theori function program red map basic function list red reduc list valu binari oper case inherit associ list concaten return result valu map seen previou subsect red map high potenti parallel red perform time logarithm length list map perform constant time given mani processor list element third function appear promot properti dist distribut partit argument list list sublist right invers reduct concaten red equal 6 reveal everi homomorph h comput three stage 1 input list distribut 2 function h comput sublist independ 3 result combin oper fi effici parallel implement depend larg form oper fi eg special homomorph skeleton call dh distribut homomorph famili practic effici implement exist 19 21 similar 3 5 obviou h polynomi product fi oper fi polynomi addit phi howev two mismatch 1 oper fi phi defin polynomi possibl differ degre thu list represent polynomi need refin pair int list int power polynomi list list coeffici simplic ignor subtleti remaind paper 2 seriou departur given homomorph skeleton polynomi product fi equival h requir two argument one match skeleton might give h list coeffici pair destroy homomorph properti format provid h product two polynomi construct product polynomi halv well fit binari polynomi product unari homomorph skeleton second argument give us addit dimens parallel unari homomorph offer two argument divid obtain four partial result combin rather two prescrib skeleton exploit quadrat parallel use differ binari homomorph skeleton polynomi product fit perfectli result promot twodimension skeleton everyth twiceonc dimens divid dist comput parallel map combin red write map 2 f map map f zip 2 dist theta map copi ffi dist 8 complic distribut due fact list portion must spread across two dimens note also provid definit twodimension reduct red 2 fi comput two order rowmajor columnmajor actual two choic lead equal amount parallel howev problemspecif optim combin stage even bet ter fig 6 depict optim solut virtual squar processor make assumpt physic topolog exploit commut custom oper phi reduc first along diagonalsth correspond polynomi equal powerand reduc partial result locat northern eastern bor der latter step improv pairwis exchang neighbour processor allow result polynomi product distribut blockwis along border processor threestag format promot homomorph skeleton suggest spmd program also three stage binari homomorph optim polynomi product everi processor q execut follow mpilik program distribut comput combin figur three stage twodimension promot homomorph skeleton broadcast row broadcast b column reduc phi diagonalq exchangeneighbour program show loop explicitlybut cours outer spatial loop implicit spmd model inner sequenti loop hidden call function polyprod sequenti implement fi mpilik commun spmd program could point programm stop refin machin vendor take altern user himherself program broadcast reduct exchang neighbour defin suitabl physic processor topolog eg mesh tree 18 422 complex consider consid multipli two polynomi degre n virtual squar p 2 processor time complex pipelin broadcast reduct 18 deltam n p mn p1 valu p chosen 1 n p n log n ologn yield optim logarithm time complex processor cost 2 thu maintain interest case parallel worsen sequenti cost olog n n 2 processor solut yield optim time clearli costmaintain log n costmaintain solut olog 2 n n log n 2 processor n n processor equal systol solut sect 3 cost maintain practic processor number arbitrari fix valu problem size n rel larg term np 2 domin express time complex guarante socal scale linear speedup 35 term improv onp log 3 onpdelta lognp appli karatsuba fftbase algorithm respect processor comput stage whether karatsuba algorithm phrase homomorph open question 423 evalu let us review parallel process homomorph approach actual differ skeleton approach previou section one use differ skeleton led parallel algebra rather geometri 1 homomorph skeleton restrict haskel skeleton previou section also restrict earliest dc skeleton 34 correspond postmorph see 21 classif dc skeleton strength homomorph direct correspond straightforward threestag spmd program polynomi product yield parallel implement timeoptim costmaintain time optim achiev mesh topolog constant dimension iti homomorph approach obtain topologyindepend program mpilik commun primit best implement primit topolog hypercub mesh tree timeoptim 27 2 mani skeleton homomorph skeleton come mani differ varieti unari binari ternari oper list data structur present state understand version develop separ 3 even skeleton avail user adapt problem remain true previou approach well eg loop parallel depend satisfi restrict model replac set depend 29 previou subsect format input output polynomi product adapt function make match haskel skeleton homomorph form problem may exist immedi clear exampl scan 20 algorithm turn dc homomorph form aid auxiliari function 10 38 4 applic promot properti give us parametr granular parallel control size chunk distribut function dist split list depend avail number processor input data distribut coars fine singl list element per processor requir number processor case twodimension homomorph squar restrict skeleton previou subsect power divis degre k requir moreov homomorph solut restrict polynomi whose length power 2 5 note promot properti appli oncea oppos previou subsect parallel level call graph decreas amount necessari commun number parallel level depend choic granular remain level captur call sequenti implement polyprod h2 enabl addit optim processor call optim sequenti algorithm given problem rather algorithm chosen parallel case polyprod effici karatsuba fftbase algorithm polynomi product summari let us summar present state art static parallel loop recur sion illustr polynomi product static parallel work best program exhibit regular structur structur requir captur restrict form program mani applic satisfi restrict immedi thu static parallel definit dusti deck howev mani algorithm put requir form parallel partic ular certain computationintens applic domain like imag signal text speech process numer graph algorithm candid static parallel dens data structur hold promis regular depend spars data structur might also amen process loop nest less regular form parallel dc 51 loop parallel loop parallel much better understood parallel divideandconqu polytop model extend significantli recent 1 depend spacetim map may piecewis affin number affin piec must constant ie independ problem size 16 2 loop nest may imperfect ie comput must innermost loop 16 3 upper loop bound may arbitari inde unknown compil time 23 consequ 3 loop handl 12 22 30 entail seriou departur polytop model spacetim map loop becom viabl compon parallel compil 31 loop parallel base polytop model includ bouclett 8 loopo 24 opera 32 feautrier paf pip 2 howev recent sophist techniqu spacetim map yet filter commerci compil particular automat method partit project ie trade space time need carri code gener stage larg academ parallel compil project involv also loop parallel techniqu phrase even base polytop model link provid web page cite good unhurri introduct loop parallel emphasi polytop model book seri banerje 4 5 6 52 divideandconqu parallel parallel dc yet unifi model differ choic parallel evalu common yardstick compar empir approach taken present use skeleton algorithm pattern high potenti parallel link semant equival architectur pattern provid effici implement algorithm avail parallel machin approach make fewer demand compil technolog howev expect support system program commun provid architectur skeleton exist parallel machin applic programm simpli look schema given skeleton librari adapt hisher applic schema last coupl year develop studi skeleton receiv increas amount attent research commun form 11 skeleton approach becom viabl paradigm parallel program 1 parallel program commun manag agre set algorithm skeleton captur larg number applic rel easi fill 2 parallel machin vendor commun applic sector support succe provid effici implement skeleton product one attempt classifi best parallel implement skeleton repres popular program paradigm tabul special case done paradigm linear recurs 41 interest special case copi red scan composit case optim 53 conclus ultim one wait see whether static dynam approach parallel win upper hand sinc parallel stand perform lack overhead precis perform analysi two thing favor static oppos dynam parallelismfor problem lend static parallel acknowledg work receiv financi support dfg project recur recur2 daad arc procop exchang program thank jf collard read comment parsytec gcel 1024 paderborn center parallel comput use perform measur r design analysi comput algorithm pip framework build interprocedur compil effici explor nonuniform spacetim transform optim systol array synthesi loop transform restructur compil foundat loop parallel depend analysi lectur construct function program refer manual bouclett parallel algorithm skeleton structur manag parallel comput parallel program list homomorph theori practic higherord parallel program automat parallel whileloop use specul execut regular partit synthes fixeds systol array predic calculu program semant array expans automat parallel polytop model upward downward accumul tree transform methodolog parallel program develop case studi systemat effici parallel scan list homomorph systemat extract implement divideandconqu paral lelism formal deriv divideandconqu program case studi multidimension fft mechan parallel loop nest contain loop classifi loop spacetim map loop parallel loopo spacetim map class divideand conquer recurs parallel divideandconqu translat nest loop introduct parallel comput design analysi algorithm view systol design loop parallel polytop model parallel loop nest contain loop loop parallel opera toolbox loop parallel construct theori multidimension array algebra model divideandconqu algorithm parallel parallel comput systol algorithm architectur foundat parallel program applic strategi design divideandconqu algorithm control gener design processor array parallel implement combin broadcast tr applic strategi design divideandconqu algorithm algorithm array expans scan primit parallel oper predic calculu program semant control gener design processor array regular partit synthes fixeds systol array algorithm skeleton introduct parallel comput automat parallel italicwhileitalicloop use specul execut foundat parallel program transform methodolog parallel program develop haskel depend analysi loop parallel loop transform restructur compil design analysi comput algorithm systemat extract implement divideandconqu parallel transform divid myampersandamp conquer nest parallel loop classifi loop spacetim map systemat effici parallel scan list homomorph loop parallel polytop model automat parallel polytop model upward downward accumul tree opera parallel loop nest contain loop parallel implement combin broadcast reduct scan