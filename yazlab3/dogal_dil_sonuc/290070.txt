synchron approach design reactiv system synchron program avail sever formal defin languag differ characterist esterel imper lustr signal declar style statechart argo graphic languag allow one program construct hierarch automata motiv take synchron design paradigm integr imper declar dataflow graphic program style real system typic compon match profil paper motiv interest mix languag program embed softwar around number exampl sketch semant foundat synchroni toolset ensur coher comput model toolset support design trajectori incorpor rapid prototyp systemat test earli design valid object orient develop methodolog long term softwar manag formal verif level automat gener object code b introduct reactiv comput system continu respond extern stimuli gener en viron critic compon technolog domin live control system ab car flybywir aircraft railway signal power gen erat shopfloor autom mundan thing wash machin video record master design system reduc time need bring market becom utmost econom import time increas market dynam paper advanc paradigm synchron program mean match goal sever program languag origin emerg engin notat defin iec standard 11313 18 languag design specif embed softwar applic mainli process control industri increas influenc sector unfortun iec 1131 languag design benefit formal semant yet advanc state practic embed softwar design import provid tool support highlevel specif rapid prototyp integr test formal verif achiev earli design valid encourag modular softwar developmentto eas review mainten certif languag precis mathemat semant requir synchron program languag like discuss paper potenti introduc rigour embed softwar design languag distinct characterist esterel 4 imper style lustr 13 signal declar statechart 15 argo 26 graphic notat enabl one program directli construct hierarch automata languag share common commun metaphor synchron broadcast signal section 2 3 introduc key idea behind synchron approach embed soft ware outlin program construct avail lustr esterel argo simpl exampl longer introduct languag found 12 specif profil languag reflect fact develop respons problem emerg differ applic area lustr signal deriv requir industri mainli awar electr electron engin method want manag increas complex applic gain greater flexibl design introduc softwar languag therefor design discret handl continu phenomena invok metaphor commonli use electr engin control theori thu suit signalbas applic navig digit signal process often sampl differ relat frequenc found contrast esterel graphic languag like argo better suit schedul complex oper mode handl intric pattern event describ interruptdriven behaviour howev differ bestsuit applic profil qualit assess sinc languag broadli similar express power motiv take synchron design paradigm wholesal integr imper declar dataflow graphic program style real system typic compon match profil argu gajski 11 construct embed system requir combin state base dataflow model support hierarch structur behaviour concurr except handl believ semant combin languag describ definit satisfi requir uniqu featur synchroni workbench activ develop embed softwar design group gmd success ventur rest underli comput model sketch section 4 greater rigour section 5 provid coher mathemat framework yield compact verifi code main function synchroni workbench describ section 6 synchron program languag alreadi evalu industri particularli aviat power gener problem realtim constrain safeti critic commerci interest synchron languag lie style seamless integr exist softwar develop practic program environ provid short overview market environ support languag industri applic found 2 19 addit project manag facil edit facil mix text graphic commerci environ provid advanc featur design vali dation backend compil variou languag like c vhdl synchroni workbench also provid featur offer system design addit much greater freedom choic program languag uniqu option freeli mix variou synchron program mode part synchron languag provid primit datatyp oper emphasi gain intellectu control program often intric control logic rather data process issu compound datatyp need use synchron languag host common languag c fortran ada synchron languag achiev good separ concern data control logic novel fusion synchroni object orient construct techniqu 7 8 offer right kind design encapsul abstract mechan achiev much need transpar softwar develop lifecycl 2 reactiv synchroni contrast interact system say text edit program reactiv system fulli respons synchronis environ system reactiv fast enough respond everi input event reaction latenc short enough environ still recept respons control system system digit signal process use industri telecommun reactiv accord characteris common featur reactiv system concurr typic consist sever concurr compon cooper realiz intend overal behaviour realtim suppos meet strict constraint regard time respons time avail determin system reaction uniqu determin kind time extern stimuli heterogen often consist compon implement quit differ technolog like softwar hardwar distribut architectur reliabl requir includ function correct well tempor correct behaviour also robust fault toler fundament idea synchron approach simpl reactiv system idealis assum stimul reaction simultan reaction take zero timemean observ amount time system stimul event environ respond instantan physic time play special role time consid sequenc particular kind extern event point view statement train must stop within 10 second essenti differ statement train must stop within 100 metr case someth said occurr event 12 event stop must preced 10th 100th next occurr event second metr event manifest signal broadcast throughout system instantan system react emit broadcast signal well statement could modifi signal train stop must emit signal second emit abstract physic time offer number advantag granular time may chang without affect sequenc event system compon compos decompos subcompon without chang observ behaviour particularli benefici prove system properti practic term synchroni hypothesi state system react fast enough record extern event proper order properti realist insofar check correspond hardwar point view time need oper import long exceed durat clock cycl vice versa clock cycl determin oper consum time synchron approach therefor advanc twostag design reactiv system physic time first abstract focu function maintain valid abstract actual verifi system implement 3 synchron languag section sketch typic synchron program style focus subsect follow esterel argo lustr larger exampl describ section 41 use languag togeth solv program problem natur way wish give reader feel synchron program gener exampl necessarili rather simpl 31 imper program esterel suppos follow inform specif given second mous click succe first one within 5 millisecond doubl click otherwis singl click assum time unit specifi signal tick requir behaviour captur esterel program shortest figur 1 first program wait click signal produc environ two program execut parallel upper subprogram broadcast singl signal five tick provid loop trap done await click await 5 tick present doubl els emit singl exit done await click emit doubl exit done loop figur 1 esterel mous control doubl emit simultan rais except trap signal done termin condit program construct present end interpret doubl signal present noth otherwis emit singl exit subprogram emit doubl signal click occur second time exit trap signal except rais abort program within scope declar net effect rais done either parallel branch mous program bodi loop termin esterel semant caus loop restart immedi program return await click top loop note prioriti given doubl singl second click happen fifth tick clock contrast trap statement construct halt watch click await click actual abbrevi involv second stronger kind preemption mechan halt statement one esterel consum time fact halt start never termin howev bodi watch construct preempt whenev watchdog condit becom true whenev signal click present exampl languag construct esterel instantan apart halt statement deriv construct like await saw loop restart immedi termin sequenti composit likewis reckon take zero time test condit statement thu second click coincid fifth tick present test first subprogram exampl execut logic instant click abort await second subprogram cours assumpt made behaviour respect physic time repres explicitli tick signal suppli environ 32 graphic program argo illustr graphic notat program previou section code argo see figur 2 state repres round box automata hierarch state contain subautomata exampl state two two subautomata automata run parallel indic dash line final scope signal restrictedthi indic squar corner box instead round one mous done two four three one click doubledon click timeout five timeoutdoubl singledon done figur 2 argo program mous control list signal glu default arrow indic initi state subau tomaton eg label one three count5 start mous automaton enter initi state label one occurr click signal caus jump state two initialis parallel subautomata label arrow form indic transit take place signal arriv caus signal emit simul taneous gener guard transit list specifi presenc absenc number signal output action list signal name omit ted list empti subsequ transit state count5 state five fire timeout signal present doubl signal present caus singl done emit add refin state count5 contain subautomaton display figur 3 fifth tick timeout signal emit subautomaton come tick tick tick tick timeout tick figur 3 argo 5 tick counter ie await 5 tick emit timeout halt tick implicit guard everi transit argo mention explicitli guard would otherwis empti meanwhil second click occur transit state three state four take place caus simultan emiss doubl done howev second click occur fifth tick transit state five possibl doubl occur neg guard transit henc exactli one singl doubl emit state two either case accompani local signal done signal caus state two abandon emit appear guard transit ei0bkjml n i0o 90 9p jqf 88 statewhatev individu state subautomata signal occur abandon control flow similar preemption mechan esterel program therefor return state one wait next click 33 declar program lustr l mn l l l prq ev e prq figur 4 first order digit filter illustr declar synchron program style shall implement recurs digit filter lustr first order digit filter may specifi signal flow graph 32 figur 4 quantiti incom edg node graph sum result broadcast along outgo edg label pq ev e arc denot delay shift regist multipl respect constant linear form would equat uyxz ev wx e wx qs uyx qs denot time index boundari condit z ev v equat boundari condit translat lustr node node filter let one instanti constant specif real valu cours equat evalu everi program cycl mark lustr implicit clock tick rather explicit tick seen earlier lustr program start run forev without termin execut everi equat cycl case first tick term a0 x evalu later time term a0 x b1 prey evalu give semant followedbi oper pre oper allow access previou valu express oper lustr oper upsampl downsampl oper illustr time diagram downsampl mean oper upsampl mean current take valu x clock signal b true undefin otherwis currentz latch valu z next sampl signal ie next instant b becom true explain section 5 mechan allow one easili defin digit filter regard differ base frequenc node bfilter b let declar synchron languag includ signal silag 22 16 latter mainli use specif languag cathedr 21 toolset synthesi dsp chip languag quit similar lustr style use slightli differ mechan upsampl downsampl conclud survey synchron program style featur argo lustr mention esterel slightli richer languag mous control exampl illustr sinc particular signal carri data may test modifi control flow languag share commun principl synchron broadcast signal scope mechan shown ever fact signal test emit simultan parallel branch synchron program sometim give rise confus caus effect signal activ causal cycl correspond short circuit sequenti program error detect static compil affect semant individu languag class accept program detect causal cycl intric howev fall outwith scope present paper see 25 35 exampl 4 integr synchron languag sinc complex system often compon match differ profil sketch natur wish express appropri languag rather shoehorn solut singl languag illustr use interact synchron languag reprogram product cell case studi 23 use evalu compar softwar develop methodolog tool success design verif control discuss independ context esterel signal lustr 23 dwell detail specif section 41 rather overal organis section 42 outlin aspect underli comput model make possibl idea integr languag singl coher mathemat framework formal drawn section 5 41 multimod program product cell input arriv via feed belt convey metal plate elev rotari tabl tabl lift plate posit robot pick first arm transfer press plate forg press remov deposit belt second arm robot circuit complet crane unload forg plate end deposit belt although circuit one item quit simpl design cell control softwar maximis throughput meet variou constraint devic cell control short initialis phase variou devic set specif safe state follow endlessli loop process control actual product cycl product phase divid natur six compon run parallel one physic devic repres design highest level organis use argo illustr figur 5 graphic natur lan product cell done product deposit belt crane feed belt tabl robot press initialis ictrl idata done figur 5 product cell argo guag make suitabl present highlevel design choic reader appreci glanc overal structur control program graphic style eas commun partner develop softwar other involv construct product cell includ manag mechan electr engin design physic compon system safeti analyst initialis phase set arm robot retract state readi handl first plate arriv safeti sinc might otherwis damag press switch behaviour implement first emit signal rretract1 rretract2 actuat robot wait arm reach desir posit reach posit signal outpress1 outpress2 occur stop command emit respect arm mean signal rstop1 rstop2 arm reach desir posit signal done emit transfer control unend product phase program argo statechart matter would littl choic implement initialis logic program similar figur 6a drawback graphic formal becom appar control flow ictrl outpress1 tick outpress2 tick rstop2 done rstop1 done rstop1 rstop2 done rstop1 argo initialis modul ictrl input outpress1outpress2 output rretract1rstop1 rretract2 rstop2 done emit rretract1 await outpress1 emit rstop1 emit rretract2 await outpress2 emit rstop2 emit done modul b esterel initialis figur 6 initialis phase product cell confus fact one explicitli manag synchronis emit done arm retract via process lower part figur also reader may forgiven wonder whether extern process run parallel initialis interfer emit rstop1 signal say process infer simpli look figur 5 6 level detail graphic program becom cumbersom therefor error prone one quickli lose sight flow inform instead refin state ictrl figur 5 esterel program shown figur 6b make natur control flow explicit semicolon concurr initialis two arm esterel power parallel oper handl synchronis behalf ensur done emit branch termin program handl pure signal say signifi event dataeven though posit arm realiti provid potentiomet deliv real valu next section shall describ one method handl data refin state idata complet initialis program rest program implement lustr describ holenderski 17 discuss steadi state behaviour press robot physic compon adequ express lustr sinc interlock nontermin parallel process howev specifi sequenti composit initialis product phase lustr lead obscur program sinc sequenti composit oper simpli avail avoid implement holenderski program sequenc level c interfac simul provid case studi ad hoc approach highli error prone gener undermin formal definit synchron languag lustr case preempt perform formal verif full program 42 synchron automata perform sequenti composit argo contrast fulli formal long mean combin synchron languag clear aid rel simplic eg compar ada c though differ look feel esterel lustr argo interpret comput model section introduc main notion behind synchron automata formal present defer section 5 421 boolean automata boolean automata easier understand fact particular instanc synchron automata captur essenc synchron languag boolean automata two kind statement signal emit condit satisfi control regist h true set next instant satisfi synchron program repres collect statement defin signal repres transient inform regist repres persist inform oper semant boolean automata defin two success phase given val uation assign truth valu tt ff regist input input repres free variabl reaction solut system equat solut extend cover signal use comput assign yield next state machin solut signal equat input pattern reachabl state must prove exist compil time guarante program reactiv may respond everi input stimulu addit solut must uniqu guarante program determinist issu common synchron program languag exampl behaviour esterel statement await outpress1 defin boolean automaton regist h captur paus await construct regist initi fals set boolean automaton initialisedthat special start signal present present true first clock cycl thereaft h set everi program cycl signal outpress1 occur point automaton termin h becom stay fals termin signifi special signal note outpress1 ignor first clock cycleread familiar esterel realis immedi need handl event boolean automaton captur behaviour statement emit rstop1 automaton emit signal termin immedi sequenc await outpress1emit rstop1 specifi former statement termin control pass instantan latter control flow track compil substitut start condit boolean automaton associ second command sequenc termin condit first henc upper parallel branch figur 6b obtain sketch translat languag construct hope provid feel translat proce argo boolean lustr also natur compact interpret boolean automata full translat pure esterel along proof correct respect publish semant given 34 422 synchron automata synchron automata repres enhanc model handl data boolean automata captur pure control synchron languag focus synchronis issu ignor data carri signal action upon intuit enhanc achiev coupl presenc signal uniqu datum earlier notion refin thu satisfi signal emit valu return function satisfi regist h set next instant result function framework boolean automata synchron automata domain valu restrict singlepoint set denot signal refer pure signal also pure control regist valu littl interest earlier boolean equat assign h given way condit equat guard command h automata thu pure synchron automata illustr idea let us specifi discretis posit arm robot product cell initialis phase thu node idata arm1 arm2 real return let lustr node emit outpress1 outpress2whenev sensor arm robot indic safe distanc press defin synchron automaton outpress1 outpress2 idata first two statement translat equat lustr node latter repres implicit control declar program regist h idata initi inact get set becom activ program start remain set thereaft persist indic h idata appear statement guard refer activ statu regist valu sinc never chang state h idata might thought redund nevertheless captur nontermin properti declar program declar program get start via retain control execut everi later instant time anticip may lose control well idea requir integr declar imper style formal captur synchron automata control axiom 423 control axiom control axiom state synchron automaton react control synchron automaton control either present regist process set way nonexampl follow statement alon defin synchron automaton sinc presenc outpress1 neither depend state latter depend exist implicitli lustr program main loop outpress1 control axiom appear contradict notion reactiv system must maintain ongo relationship environ thu must alway react even true complet reactiv system whole program subcompon may activ particular may preempt product cell esterel modul ictrl termin emit done lustr node idata never termin respect semant argo initialis state figur preempt done therefor abort lustr node perform compil redefin h idata thu idata done h idata guard regist statement translat weak preemption mechan 3 similar esterel trap construct preemption mechan argo strong preemption mechan captur guard kind statement longer present synchron automata algebra given 24 whenc summari formal semant next section drawn 5 semant nutshel evid synchron program paradigm dual natur one hand languag lustr descript constrain possibl behaviour one hand languag like esterel argo foster construct point view automaton specifi prescrib transform given state anoth argu inform synchron automata use intermedi represent structur reason unsophist mathemat ical match program style well enough serv kind synchron object code though cours origin tradit determinist automata wish lose light present style previou section burden reader undu formal shall tri shed light formal semant slightli rigor manner subsect follow first address descript prescript aspect synchron program merg dataflow controlflow synthesi end 51 declar aspect constrain dataflow behaviour manifest possibl observ classifi observ attribut name moment refer signal signal may present valu taken set may absent particular signal observ time flow valu miss signal absent obtain ei0bkjml n i0o 90 9p jqf 88 flow characteris subset natur number sampl rate valuat present instant take valu 0 exampl z dy0i refer set flow synchron process instant time requir least one signal synchron process present requir allow us identifi observ extern time natur number conceptu synchron dataflow program deal specif pro cess exampl lustr equat specifi constraint upon correspond flow u sampl rate instant p valu take second exampl memois oper pre prex introduc delay valu x observ one sampl point observ next prex first sampl point valu x observ beforehand insert nonvalu indic even present valu undefin cours compil must guarante program reaction ever depend nonvalu phenomenon similar program variabl languag use runtim initialis lustr followedbi oper discuss section 33 allow one initialis signal properli formal definit pre quit elabor sinc depend sampl point skip exact definit let us use notat w refer th sampl point sequenc count 0 sampl point w z synchron automata introduc elementari languag specifi constraint dataflow statement specifi whenev pure signal present signal must present valu must equal w formal term u notat somewhat overload precis subset onetoon correspond characterist function z tt iff henc boolean oper use control express guard 89a b0cdbef0gh well justifi unambigu interpret boolean oper oper subset point note although definit forc u valu instant may still valu instant furthermor requir signal w present instant otherwis constraint idea natur generalis complex statement data express control express close relat pre oper second type statement found synchron automata name delay observ w one instant upsampl time ever whatev observ instant observ u instant figur interpret formal definit u zw 0 z howev total trivial exercis prove provid attent restrict signal w u synchron automaton init z equival lustr statement prex introduc third final claus synchron automata viz init use initialis dataflow would otherwis take valu z proof automaton implement pre littl tricki reader easili verifi semant comput flow adjac diagram show last valu w store next sampl point note turn z diagram suppos ei0bkjml n i0o 90 9p jqf 88 52 imper aspect manag control imper synchron languag inher base idea distribut state esterel instanc halt statement use indic local sequenc control within parallel branch program halt behaviour defin ff abbrevi introduc specif control regist halt synchron automaton activ regist remain activ forev automaton never termin precis reflect formal semant yield z r mean z discuss revert boolean automata control specifi term pure signal apologis terminolog confus may troubl reader point state earlier flow repres observ made certain tribut name signal speak term regist reconcil nomenclatur shall also relat flow regist stipul regist unobserv one might expect regist may activ thu possess valu though may case control regist inact order model preemption synchron automata simpl idea guard reac tivat automaton modifi control regist activ remain activ instant signal present termin signal emit later instant note requir control ie activ claus captur precis semant esterel await statement cf section 31 await click defin halt watch click construct generalis p watch p arbitrari program state ment addit preemption halt esterel semant requir signal emit p watchdog signal present also ignor p instant commenc execut 4 preemption effect achiev guard emitt signal typic claus p depend regist may e v0rg mean emit e present first control regist activ g present emiss preempt watchdog action thu e v0rgv note still emit first instant e present contrast argo allow preemption regist regard figur 2 emmitt signal done preempt state insid state two includ state two reader note preemption signal must avoid otherwis signal done caus preemption case would emit preemption regist achiev guard mechan guard done work detail reader may quickli check h one done h two click h two click done h two relat transit state one state two convers build inform descript section 32 easi check behaviour subprocess state two captur synchron automaton doubl click singl timeout doubl done timeout doubl click h three click timeout doubl omit regist claus refin state count5 timeout signal defin h four h five sinc termin state respect argo subautomata never becom activ guard regist done therefor claus chang repeat obtain h one done h two click h two click done h two h three click click done click timeout doubl done h count5 fairli precis account wasdescrib inform section 32 cours structur composit treatment need argo compil synthesi gener thu exampl argo compil must bind h four h five sinc context surround subautomata known becom clear regist never becom activ composit semant argo term synchron automata allow us make optimis rather easi establish said composit semant esterel much complex lan guag howev give flavour approach let us return discuss sequenti composit begun section 42 assum p q translat synchron automata respect use common trick model pq within parallel calculu see eg 29 place parallel prevent start signifi termin start signal suspend control axiom activ emit notat mean given fresh name replac beauti synchron automata textual juxtaposit concaten sinc broadcast start instant termin formal termin requir control regist becom inact end instant emit defin properti synchron automata like control axiom discuss section 423 fortun turn invari composit semant esterel specif 34 prove given translat synchron automata esterel statement p 1 emit next instant control regist activ 2 control regist activ signal emit result support main theorem 34 state synchron automata semant coincid offici behaviour semant pure esterel 4 53 merg control dataflow basic question control dataflow seem call dataflow program magic transfer control program kill result endless process withdraw control get grasp issu recal system reactiv fast enough respond everi input event reaction latenc short enough environ still recept respons implicit point view notion without input event respons giventhat signal present input signal must present henc possibl control synchron process guard input let x input signal lustr program node consist singl equat behaviour lustr program equival level observ signal preemption may appli sinc cheer abus syntax watch simpl trick ad control reconcil declar imper program style least regard preemption dataflow anoth facet interact dataflow controlflow emerg exampl discuss section 42 recal lustr node idata place parallel esterel modul ictrl order realis initialis phase product cell alreadi seen termin lustr node done emit outpress1 signal say handl esterel control program point outpress1 section 422 boolean flow modulo preemption alway present boolean valu pure signal requir 7 89a b0cdbef0gh section 421 difficulti lustr distinguish clock boolean flow although signal esterel exampl strict formal therefor oblig sampl boolean flow true outpress1 true natur project true z dv z tt ultim cours control express implement boolean function target program ming languag synchron automaton compil true thu detail requir consist model rather implement detail close discuss mathemat underpin synchroni work bench cours mani technic detail formal translat omit semant nutshel hope reader grasp basic rather simpl idea howev one import issu synchron program languag dwelt upon deserv mention least guarante determin reactiv formal translat may well gener claus u inconsist allow nondeterminist behaviour compil report mishap indic went wrong synchron automaton free problem come name causal analysi clock calculu guarante specifi determinist meali machin may implement either hardwar boolean automata softwar 6 architectur synchroni synchroni project gmd 33 organis around construct workbench mix synchron languag program combin editor compil code gener tool simul well tool test verif anim integr languag base synchron automata sketch play pivot role system architectur synchroni see figur 7 page 21 sinc backend tool base common represent synchron program essenti tool intrins workbench linker merg synchron automata variou sourc approach guarante maximum independ regard specif languag construct improv modular translat program synchron automata kernel function causal analys implement sound heurist guarante reactiv determinismth algorithm implement similar shipl et al 35 editor lustr translat lustr editor translat esterel argo editor translat argo esterel embed eiffel embed eiffel synchroni kernel causal analys linker synchron automata valid test vi verifi time analysi netlist optimis code gener compil simul esterel argo lustr viewer simul anim project manag figur 7 synchroni workbench project manag increas trend electrotechn system hardwar compon replac softwar provid advantag devic easili adjust individu custom need enterpris synchron languag address delic part design problem manag often convolut control flow synchronis distribut element control input recognis part softwar problem overal appropri flexibl softwar design best achiev use object orient techniqu although space elabor import part synchroni toolset develop object orient design environ realtim applic base fusion argo esterel program control flow object orient languag eiffel arithmet data manipul call hybrid languag embed eiffel thu project may multipl compon written varieti synchron languag host c embed eiffel present visibl layer synchroni workbench provid programm edit brows project manag facil amongst compon written differ languag control frontend function synchroni compil compil function provid link toward execut synchron automata variou platform particular function produc code simul analysi tool rapid prototyp design valid encompass optimis may reorganis gener code various optimis perform depend ultim destin code instanc optimis elimin intern signal inhibit code simul symbol debugg requir howev experi indic optimis minimis number regist desir formal verif tool code gener exploit close relationship boolean automata sequenti circuit make straightforward gener netlist format export hardwar synthesi analysi tool si 5 gener portabl execut code like c exploit hierarch represent synchron automata runtim effici result code ultim aim produc code particular target architectur like pic processor microcontrol applic optimis appli care particularli safeti critic applic often requir readabl code mean requir trace execut code valid analysi function intend improv confid throughout step develop chain help design programm reduc cost error find earli possibl sever type analysi function identifi verifi support design valid formal proof logic specif quirement part provid link interfac third parti tool instanc boolean automata equat sequenti circuit use among mani adequ altern smv model checker nptool proposit logic verifi aspect design 28 36 test improv product confid simul test tool allow select sever criteria like path boundari valu test prototyp test specif environ support systemat test sens 30 design around workbench graphic argo editor second type verif tool complement formal verif tool focus behaviour specif 31 synchron automata particularli boolean automata simpl execut model support fine grain time analysi import verifi program meet strong time constraint ie satisfi synchroni hypothesi simul simul function provid stepwis interpret synchron au tomata mean effect rapid prototyp two simul tool distinguish simul illustr execut synchron program sourc level highlight syntact entiti program correspond activ signal regist sourc viewer like editor provid brows facil among differ compon program anim support rapid prototyp simpl environ execut program anim base toolbox basic compon gener input display output via waveform diagram etc product cell control program describ section 4 develop entir use prototyp tool synchroni toolset figur creat use argo editor program moder complex sever hundr signal 140 control regist easili handl vi ctl 9 model checker verilog simul hardwar synthesi environ 6 simpl backend code gener 7 conclus work embed eiffel alreadi use develop two smallscal industri product market germani first massflow meter sensit corioli devic measur fluid flow 8 second small electron lock system base radio frequenc technolog 7 develop use synchroni tool highlevel esterel specif hand translat assembl latter case sinc target technolog pic16c86 microcontrol meager 2k romwa access automat gener c code automat produc code limit hardwar highlevel specif formid challeng repres next design goal synchroni project synchroni project member european eureka project synchron bring synchron technolog realtim design 1 dedic promot synchron program languag industri synchroni workbench therefor develop isol current gener synchron program environ promot respect languag independ link export synchron automata exist tool model checker like lesar 14 industri strength verif tool like nptool 36 emerg due cours sinc plan fulli compat dc declar code format 10 princip deliver synchron project idea integr synchron program languag entir without preced therefor although effort date mainli focus provid common exchang format downstream analysi tool halbwach give good summari common format predat dc 12 jourdan other propos semant integr argo lustr base translat argo lustr 20 first attempt flaw causal correct argo program would produc causal incorrect lustr recent maraninchi halbwach shown encod argo dc 27 offer robust method merg two languag declar code name suggest larg influenc dataflow synchron program commun yet doubt suitabl full esterel synchron automata contrast suppli uniform mathemat framework abl freeli intermix declar imper textual graphic program style acknowledg work report paper name author like take opportun thank colleagu embed softwar design group gmd give credit effort guarante success synchroni group led throughout axel poign signific input reinhard budd leszek holenderski karlheinz sylla jointli budd design embed eiffel paradigmat exampl combin objectori design techniqu synchron program sever industri case studi design realtim system provid insight whole group profit maciej kubiczek work close leszek holenderski profession wrote compil argo lustr support softwar present version work bench agath merceron mani case studi verif use prototyp tool develop workbench monika mullerburg take respons activ relat test han nieter present first full version present layer includ argo editor spring 1996 put idea work r synchron project propos synchron languag provid safeti reactiv system design preemption concurr system esterel synchron program languag design vi system verif synthesi eingebettet echtzeitsystem design verif synchron skeleton use branch time tempor logic common format synchron languag declar code dc specif design embed system synchron program reactiv system synchron data flow program languag lustr program verifi realtim system mean synchron dataflow languag lustr visual formal complex system product cell lustr softwar comput applic industri safetyrel system formal approach reactiv system softwar telecommun applic esterel multiparadigm languag reactiv system architectur synthesi medium high throughput process new cathedr environ program realtim applic sig nal formal develop reactiv system synchron automata reactiv analysi cyclic combin circuit oper composit semant synchron automaton composit compil argo boolean equat symbol model check interpret one concurr calculu anoth systemat test mean valid reactiv system systemat test formal verif valid reactiv system specif complex system boolean automata implement esterel construct analysi cyclic circuit model verifi system softwar proposit logic tr ctr per bjuru axel jantsch model mix control dataflow system mascot ieee transact larg scale integr vlsi system v9 n5 p690703 octob 2001 axel jantsch per bjuru composit signal flow comput model combin event sampl stream vector proceed confer design autom test europ p154160 march 2730 2000 pari franc klau winkelmann formal method design embed systemsth sacr experi formal method system design v19 n1 p81110 juli 2001