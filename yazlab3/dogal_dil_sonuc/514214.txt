markov model predict io request scientif applic given increas perform dispar processor storag devic exploit knowledg spatial tempor io request critic achiev high perform particularli parallel system although perfect foreknowledg io request rare possibl even estim request pattern potenti yield larg perform gain paper evalu markov model repres spatial pattern io request scientif code paper also propos three algorithm io prefetch evalu use io trace scientif code show highli accur predict spatial access pattern result reduc execut time possibl b introduct dispar processor disk perform continu increas driven market econom reward highperform processor highcapac storag devic parallel system eg cluster increasingli construct use larg number commod compon work support part nation scienc foundat grant nsf asc 9720202 nsf asc 99 75248 nsf eia9972884 depart energi contract llnl b341494 llnl b505214 nsf allianc paci cooper agreement permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee ics02 june 2226 2002 new york new york usa io becom perform bottleneck mani scientic applic character applic io pattern shown mani applic complex irregular io pattern 4 18 mediat multilevel io librari illsuit le system polici optim simpl sequenti pattern ie sequenti read ahead write behind patterson et al 12 show larg io perform gain possibl use hint advis le system io librari anticip io access given foreknowledg tempor spatial io pattern one schedul prefetch write behind request amelior elimin io stall inde foreknowledg optim le cach replac decis possibl restrict condit 8 unfortun perfect foreknowledg rare possibl applic io access stream may data depend may chang due user interact moreov complex irregular pattern enumer complet request stream often requir multilevel instrument captur record io pattern reus guid futur execut instrument expens requir store access pattern rather specifi complex io pattern exactli probabilist model potenti captur salient featur compactli describ like request sequenc although statist character io pattern less accur enumer compact shall see use guid cach prefetch write behind decis henc paper explor techniqu construct compact markov model spatial access pat tern evalu ecaci predict use io trace drawn largescal scientic code remaind paper organ follow x2 outlin markov model construct techniqu follow x3x4 descript implement test suit x5 describ result tracedriven simul evalu perform sever predict algorithm well time experi use scientic code final x6x7 summar relat work result outlin plan futur work 2 markov model predict one lesson experiment analysi io pattern parallel code behavior far complex origin expect 4 16 14 18 13 unlik sequenti io pattern vector system parallel io 15e0625e0635e0645e060 2000 4000 6000 8000 10000 12000 14000 16000 initi offset byte request number figur 1 initi continuum io request oset pattern often stride irregular vari wide size 21 io pattern complex simpl approach le system tune nblock read ahead work well sequenti access pattern inappropri irregular pattern exampl figur 1 show initi le oset request execut continuum parallel unstructur mesh code whose io behavior captur use pablo io character toolkit 4 fewer half io request follow sequenti previou request complex pattern continuum reduc simpl rule ie sequenti stride captur power express meth od moreov complex pattern common applic io request mediat multilevel io librari 22 markov model captur nonsequenti io pattern chosen model applic io access stream markov model markov model n state fulli describ transit matrix p valu p ij n n matrix repres probabl transit state j current state transit probabl depend current state transit path current state aect futur state transit characterist known markov properti 7 given le system block size creat state everi block associ le applic io request normal express block oset rather byte oset convert request sequenc block must access satisfi applic quest henc multipl request block result block number repeat access stream transit occur whenev le block access model transit matrix creat set p ij fraction time state j access immedi state consid two illustr exampl first simpl sequenti access pattern repres cyclic matrix block access success second figur 2 illustr simpl stride pattern repeat multiple0 1 6 10135791111311from figur 2 stride io pattern transit time exampl highlight key aspect markov transit matric matric spars complex irregular pattern consequ one compactli repres access pattern even larg le howev markov properti allow compact represent also potenti error sourc block access depend sole immedi preced access histori access lost exampl consid follow pattern block access 0 1 0 2 0 3 0 4 markov model pattern four transit block zero probabl 025 therefor model impli access block one four equal like access block zero howev block three alreadi access next block follow block zero block four 23 predict strategi given io access pattern markov model use subsequ applic execut predict futur io access sever dierent predict strategi base markov model possibl rang complex simpli follow like sequenc singl step state transit greedi predict complex scheme predict like nstep path dier implement complex execut overhead associ predict power greedi predict simplest predict method choos sequenc le block repeatedli nding like transit current state approach build directli nstep transit model markov theori henc call algorithm greedyx sequenc predict block stop speci number block reach though termin condit possibl instanc sequenc might termin total likelihood sequenc drop given threshold result predict vari length either case greedyx predict strategi provid possibl variabl length le block sequenc use prefetch write behind path predict greater predict accuraci may possibl choos sequenc highest total like hood rather choos like sequenc singl step transit method treat markov model graph perform depthlimit search begin current state nd like path call pathx predict choos less like initi transit lead high probabl sequenc amort predict io access pattern revisit block mani time like predict path may visit block howev enough altern path may visit block caus access often applic execut explor eectiv approach propos method call amort predict name valu predict block sens amort entir execut rather next l block amort predict creat state occup probabl vector next l time step choos like state vector predict time step initi probabl vector 0 zero except element 0 set one vector 1 l gener repeat applic kolmogorov equat p model transit matrix block j predict sequenc chosen state greatest probabl j 3 assess infrastructur assess ecaci markov model predict io access pattern within scientic applic reli three approach tracedriven simul cach simula tion experiment measur within research le system 31 tracedriven assess construct markov model use spars matrix strategi repres markov model transit matrix reduc storag requir mani scientic applic typic regular though sequenti le access pattern regular transit occur state averag number transit sourc state bound small constant size matrix grow linearli rather quadrat ical size le tracedriven simul accept spars matrix markov model predict strategi applic io trace pablo selfden data format sddf 1 comput predict accuraci figur 3 detail simul oper 32 cach simul also develop simpl le cach simul lru replac xedsiz block request cach satis either cach hit load request block cach prefetch addit block speci predict algorithm applic trace file librari markov model builder markov model io request algorithm predict predict sequenc comparison predict accuraci result figur 3 tracedriven simul structure2e066e061e0714e07 initi offset byte request number figur 4 cactu io request pattern detail 33 file system measur explor thesi perform best maxim tune le system polici applic behavior also develop portabl parallel le system ppfs2 consist portabl userlevel inputoutput librari varieti le cach prefetch data polici ppfs2 execut atop linux cluster use underli le system io use ppfs2 studi tempor access pattern predict via time seri 19 20 conduct experi use cluster 32 dual processor 933 mhz intel pentium iii system link though gigabit ethernet machin contain 1 gb memori ran linux 22 kernel disk request servic machin 4 scientif applic suit assess accuraci compact markov model io predict util le block prefetch chose suit six scientic applic parallel applic subject extens analysi 4 16 14 chosen larg size varieti io request characterist io trace obtain use pablo io character toolkit 4 simplic use io trace data singl node parallel applic execut model applic request sin 0request size byte request number figur 5 continuum request size gle le applic code brie describ paragraph cactu cactu code 2 modular environ develop highperform multidimension simul particularli numer rel test problem use obtain io trace black hole simul read request test problem extrem small largest mere sixteen byte though le request oset span almost gigabyt percent request sequenti almost 98 percent within 50 byte previou request howev remain request region least 1 mb previou request often greater 10 mb away figur 4 show detail view rst six hundr request continuum continuum 1 unstructur mesh continuum mechan code continuum io request primarili restrict rst eighth le shown figur 1 howev end le access occur regular interv 57 percent access nonsequenti seek distanc within rst eighth le small interestingli figur 5 show request size vari wide rang less 10 byte 100000 byte dyna3d dyna3d explicit niteel code analyz transient dynam respons threedimension solid structur applic gener long sequenc sequenti request one processor sequenti read rst 2 mb larg input le singl byte time hartreefock hartreefock code 5 calcul interact among atom nuclei electron reaction path trace data continuum hydro code taken code use exist serial io librari develop analyz librari determin unsuit parallel environ develop replac io librari expect dierent pattern io new librari integr codes1e063e065e060 50 100 150 200 250 300 350 400 initi offset byte request number figur hartreefock io request pattern1e063e065e067e060 100 200 300 400 500 600 initi offset byte request number figur 7 hydro io request pattern store numer quadratur data subsequ reus io request retriev 80 kb data le access sequenti six time figur 6 show le oset data reus hydro hydro 1 blockstructur mesh hydrodynam code multigroup radiat diusion major io access three wide separ region le sixtyseven percent access follow sequenti previou access seek almost eight million byte also occur distribut request size rang one byte almost one million byte sar sar synthet apertur radar code produc surfac imag aircraft satellitemount radar data figur 8 show applic issu two sequenti quest follow seek next portion le request size rang 370 kb almost 2 mb 5 experiment assess given simul infrastructur x3 io trace applic suit x4 built markov model request posit extent byte request number figur 8 sar io request pattern associ io pattern analyz accuraci model compar model predict actual io request also investig eect le block size model size complex analyz predict accuraci singl multipl block predict 51 predict accuraci markov model lossi represent applic io pattern simplest metric predict accuraci dierenc model predict applic request stream approach allow one assess ecaci function spatial io pattern simul figur 3 gener predict sequenc length l applic block request pro cess accuraci predict sequenc fraction predict block exactli match block request next l timestep overal accuraci arithmet mean across predict request se quenc captur eect le block size predict length predict algorithm block size basic choic build markov model io activ choic block size match model block size le cach disk block size natur choic intuit larger block size reduc model storag requir provid weaker bound rang byte request larger block provid implicit prefetch interact access pattern sequenti request size figur 9 show singl step ie greedi singl block lookahead predict accuraci io trace function block size continuum hydro cactu dyna3d code show high accuraci block size accuraci near constant across block size contrast predict accuraci sar code declin sharpli block size increas due repeat le seek larg 80 kb request hartreefock code creat nonlinear behavior larg block prefetch data unus stride boundari figur 6 cross gener behavior consequ regular applic request pattern proxim of0550650750850954096 8192 16384 32768 65536 131072 262144 predict accuraci block size byte cactu continuum dyna3d hartreefock hydro figur 9 one step accuraci multipl block sizes02061 predict accuraci predict length cactu continuum dyna3d hartreefock hydro figur 10 greedi fix accuraci 64 kb block block size request size block size approach request size state associ markov model singl transit next state fewer transit back side selftransit interrupt process one state anoth frequent factor result model like state transit low probabl compar model suggest block size reason multipl applic request size amort disk io overhead unless applic request size larg predict length prefetch eectiv must accur predict access pattern request sequenc predict io system stage data request figur 10 show eect predict path length 64 kb block size greedyx predict strategi surprisingli predict accuraci gener decreas predict length increas promin except hartreefock code singl step predict accuraci 64 kb block low multipl eect predict sequenc also low even 4 kb block shown hartreefock singl step accuraci 90 percent predict accuraci percent predict 25 step ahead predict algorithm multistep predict error sar hartreefock code illustr inform loss compact markov model memoryless properti mean certain seek pattern trigger mispredict greedi lookahead strategi rational pathx amort strategi describ x23 test predict strategi multipl block size predict length 25 step case three algorithm result similar predict accuraci declin accuraci sequenc length increas howev figur 11 show wide gap perform amort greedi xed path xed strategi hartreefock code two larg block size reason strike dierenc step use amort predict enough probabl mass move succeed state caus predict state chang follow step greedi xed lesser degre path xed continu follow like transit account multipl path anoth state 52 cach behavior access predict accuraci one metric markov model util assess benet markov model predict io request also simul simpl client cach compar prefetch use markov model use baselin n block read ahead strategi simul cach request predict length n block request predict block load alreadi replac via standard lru polici predict block alreadi present cach place newli fetch block end lru list conduct experi use block size 1 kb 4 kb 16 kb 64 kb varieti le cach size predict horizon 1 10 block given rel strong sequenti applic io access pattern three predict strategi yield rel high cach hit ratio figur 1213 show cach hit ratio two typic case hydro cactu code greedi amort predict strategi alway perform better n block read ahead prefetch multipl block often perform better predict one two step ahead 53 file system measur true test io predict strategi perform part parallel le system test captur interplay applic system featur henc also conduct experi use cactu synthet applic similar hartreefock modi use ppfs2 userlevel parallel le system x3 ppfs2 extend support n block read ahead markov model predict method use polici block prefetch decis assess benet markov model predict standard prefetch polici ran experi use cactu code 50x50x50 grid 2000 iter result 2 million block read request distribut across 2 gb data le congur ppfs2 testb use le cach 4 kb 8 kb block lru cache0960981 hit rate prefetch depth nblock readahead greedyfix amort figur 12 hydro cach hit ratios0960981 hit rate prefetch depth nblock readahead greedyfix amort figur 13 cactu cach hit ratio replac strategi prefetch depth rang block read request cach write request sent directli underli le system purpos singl local disk markov model predict comput use greedyx simplest predict strategi figur 14 show result experi varieti prefetch distanc experi use markov model predict show perform improv test prefetch depth compar n block readahead prefetch total applic execut time decreas 10 prefetch case use 8 kb block 3 use 4 kb block n block readahead yield substanti poorer perform either two method conrm assert le system polici design sequenti access pattern inappropri scientic code data figur 14 also show overhead use markov model small overhead repaid improv prefetch predict figur 15 show cach hit rate record test block size markov model predict achiev predict accuraci predict sequenc length greedyfix pathfix predict accuraci predict sequenc length greedyfix pathfix amortizedfix 64 kb block size b 256 kb block size figur 11 hartreefock strategi comparison2006001000 time prefetch depth block nblock nblock 4kb prefetch 8kb prefetch 4kb markov markov 4kb figur 14 cactu execut time hit rate 9999 n block readahead achiev hit rate 98 larg perform dierenc two method indic n block readahead prefetch mani block go unus quantifi overhead markov model wrote synthet code issu request hartreefock pattern x4 synthet code read 264 mb input le sequenti six time via 396 request 80 kb request follow loop iter approxim one millisecond simul comput cycl pattern ideal suit n block readahead larg overhead markov model approach appar figur show result experi 1 mb cach 8 kb block markov model predict perform well n block readahead request pattern two algorithm also result decreas execut time compar prefetch case time save reach 13 prefetch 10 block time0975098509951 2 3 cach hit rate prefetch depth block markov 4kb markov nblock 4kb nblock figur 15 cactu cach hit rate 54 experi summari result shown high predict accuraci across larg rang block size look ahead length use sim ple greedi predict strategi applic io pattern howev amort strategi yield result equal greedi strategi case substanti better perform other believ addit complex nongreedi strategi justi ed addit time experi use userlevel le system modi markov model demonstr approach notic reduc execut time sampl scientic applic also demonstr overhead low 6 relat work mani group examin spatial tempor io pattern scientic applic smirni et al 17 16 15 character io access suit scientic ap08 time prefetch depth block prefetch nblock markov figur hartreefock execut time plicat drawn scalabl io initi 4 character show applic exhibit access pattern rang simpl sequenti access interleav pattern across processor although simpl descript sucient describ pattern introduct higherlevel io librari flexio 11 led even complic pattern patterson et al 12 use applicationprovid hint guid prefetch cach decis integr cach prefetch system use costbenet analysi decid prefetch block replac cach vellanki chervenak 21 use approach similar patterson replac applicationprovid hint automaticallygener probabilist model access stream built use prefetch tree use lempelziv scheme duke 22 6 addit reduc size access stream tree allow predict futur access base like path tree restrict width tree allow decreas storag requir cost addit inaccuraci predict access use markov model build mani idea emphas congur compat tempor predict scheme 19 artici neural network ann use previous io pattern character madhyastha reed 10 9 use ann hidden markov model assign request pattern simpl qualit classic sequenti variablystrid markov model also use cort labarta 3 identifi predict stride access pattern work dier provid explicit predict block expect next repres arbitrari access pattern 7 conclus futur outlin approach access pattern predict base markov model sever associ predict strategi use io trace larg scientic ap plicat experi explor eect vari block size use build model length predict io stream algorithm use gener predict experiment data suggest irregular io pattern found today scientic applic markov model strike eectiv balanc implement complex predict power reason block size perform larg independ block size allow le system design choos set default achiev high perform allow user model choos block size appropri task without affect predict accuraci larg degre final amort path scheme gener eectiv predict access pattern simpl greedi scheme sever opportun exist futur studi includ extens experi scientic applic also current techniqu assum one previou run avail gener markov model allow model creat use onlin may provid benet uninform prefetch cach even though larg part applic pattern yet integr model final case hint provid futur io access markov model use establish accuraci hint measur would allow adapt le system decid use hint sequenc prefetch cach like provid benet 8 r pablo selfd ning data format three dimension numer rel hyperbol formul linear aggress prefetch aay increas perform cooper cach character suit inputoutput intens applic inputoutput characterist scalabl parallel applic practic prefetch via data compress art comput system perform analysi tracedriven comparison algorithm parallel prefetch cach automat classi inputoutput access pattern classi dive deep datamanag visual strategi adapt mesh nement simul inform prefetch cach scalabl inputoutput achiev system balanc comparison logic physic parallel io pattern io requir scienti perform model parallel io system applic driven approach workload character inputoutput intens parallel applic lesson character inputoutput behavior parallel scienti arima time seri model forecast adapt io prefetch automat arima time seri model forecast adapt inputoutput prefetch prefetch without hint costben analysi predict access optim prefetch via data compress tr practic prefetch via data compress inform prefetch cach inputoutput characterist scalabl parallel applic optim prefetch via data compress tracedriven comparison algorithm parallel prefetch cach inputoutput access pattern classif use hidden markov model lesson characteriz inputoutput behavior parallel scientif applic seri model forecast adapt io prefetch dive deep linear aggress prefetch workload character inputoutput intens parallel applic io requir scientif applic automat classif inputoutput access pattern automat arima time seri model forecast adapt inputoutput prefetch ctr nanci tran daniel reed automat arima time seri model adapt io prefetch ieee transact parallel distribut system v15 n4 p362377 april 2004 yifeng zhu hong jiang ceft costeffect faulttoler parallel virtual file system journal parallel distribut comput v66 n2 p291306 februari 2006