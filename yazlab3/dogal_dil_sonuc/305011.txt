sort n item use sort network fix io size abstractsort network fix io size p use thu far sort set p element somewhat surprisingli import problem use sort network sort arbitrarili larg data set address literatur main contribut propos simpl sort architectur whose main featur pipelin use sort network fix io size p sort arbitrarili larg data set n element noteworthi featur design extra data memori space requir use store input turn architectur feasibl vlsi implement time perform virtual independ cost depth underli sort network specif show use design n element sort thetafrac np log frac np time without memori access conflict final weshow use at2optim sort network fix io size p construct similar architectur sort n element thetafrac np log frac nplog p time b introduct sort network well studi class parallel sort devic earli treatment subject see 4 12 recent survey refer reader 2 3 7 19 22 23 gener sort network suitabl vlsi realiz due part fact process element typic simpl compar structur network fairli regular sever paramet use character qualiti sort network cost denot ct number constant fanin process node network depth denot dt maximum number node path input output work support onr grant n000149710526 nsf grant ccr9522093 ecs9626215 louisiana grant leqsf199699rda16 depart comput scienc old dominion univers norfolk va 235290162 usa z istituto di elaborazion dellinformazion cnr pisa 56126 itali x depart comput scienc louisiana state univers baton roug la 70803 usa exampl batcher classic biton sort network oddeven merg sort network 4 5 cost op log 2 p depth olog 2 p p network io size time perform sort network number parallel step perform usual depth network ajtai komlo szemeredi 1 propos sort network commonli call ak sort network io size p depth olog p cost op log p later leighton 13 paterson 21 develop comparatorbas sort network io size p cost op depth olog p element olog p time ak network costoptim depthoptim ie timeoptim context sort p element compar use interest note spite fact sort network fix io size p extens investig context sort p element effici use sort larg number say n element receiv much attent literatur reallif applic number n input element sort much larger p situat sort network must use repeatedli pipelin fashion order sort input element effici assum input well partial result resid sever constant port memori modul schedul memori access io sort network becom key achiev best possibl sort perform clearli appropri answer problem found power sort network fulli util problem build sort network smaller compon psorter merger receiv attent literatur 7 8 15 20 bilardi preparata 8 use tree merger variou size sort use cubeconnect cycl nassimi sahni 15 construct sort network combin merger variou size tseng lee 25 construct sort network io size p 2 use op layer psorter recent parker parberri 20 show arbitrari n sort network io size n construct use psorter thu answer open question pose 12 relat problem name sort n element repeatedli use psorter receiv attent late 6 18 20 psorter sort devic capabl sort p element constant time comput model psorter exist exampl known p element sort o1 time reconfigur mesh size p theta p 11 14 16 17 reconfigur mesh multiprocessor system processor connect bu system whose configur dynam chang suit comput need beigel gill 6 show task sort n element n p n log n log p call psorter also present algorithm sort n element use theta n log n log p call psorter algorithm howev assum p element sort psorter fetch unit time regardless locat memori sinc gener address pattern operand psorter oper irregular appear algorithm 6 realist achiev time complex n log n log p unless one solv constant time address problem realist machin address problem olariu zheng 18 propos psorterbas architectur allow sort n element n log n stricli enforc conflictfre memori access conjunct result 6 result complet resolv time complex issu sort n element use psorter turn psorter much expens devic sort network use avoid whenev possibl besid clear whether possibl replac psorter pipelin sort network architectur 18 guarante perform main contribut work propos simpl sort architectur whose main featur pipelin use sort network fix io size sort arbitrarili larg number n element specif show use design n element sort log n design consist sort network fix io size p set prandom access memori modul control unit memori access pattern regular one step element two row memori modul suppli input sort network andor output sort network written back two memori row architectur feasibl vlsi implement show use 2 optim sort network fix io size p construct similar architectur sort arbitrari number n element theta n log n time import featur architectur extra data memori space requir need store input remaind paper organ follow section 2 discuss detail propos architectur section 3 show obtain rowmerg schedul critic ingredi effici design section 4 extend result section 2 3 show use 2 optim sort network fix io size p obtain architectur log n final section 5 offer conclud remark pose number open problem 2 architectur sort network model direct graph whose node repres process element whose edg repres link connect node illustr figur 1 process element simpl compar complex processor capabl perform arithmet oper compar two input two output use perform compar exchang oper comparatorbas sort network sort network whose process element compar remaind work use term sort network refer exclus comparatorbas sort network figur 1 figur 2 illustr batcher classic sort network io size 8 illustr figur 1 two type compar use type 0 compar smaller larger two input number emerg comparison top bottom output respect compar type 1 produc output revers order unless state otherwis assum sort network fix io size p use sort p element compar use exactli figur 1 biton sort network io size 8 figur 2 oddeven merg sort network io size 8 refer figur 1 2 say sort network layer compar assign one ds layer l k 1 k ds follow ffl assign layer l 1 compar whose input output compar network exclud consider ffl everi k 2 k ds assign layer l k compar whose input output compar layer l layer l j 1 exclud consider simpl induct argument show everi k 2 k ds everi compar layer k receiv least one input compar layer l kgamma1 therefor layer sort network longest path network input compar layer l k must length say sort network pipelin everi k 2 k ds path network input compar layer l k length 1 illustr biton sort network shown figur 1 pipelin network wherea oddeven merg sort network figur 2 intuit terminolog pipelin sort network io size p use sort set p element concurr pipelin fashion easi confirm pipelin network layer contain exactli pcompar context shall refer layer stage denot 1 given sort network one alway introduc addit buffer node latch nec essari way node result network compar latch partit stage 1 specif everi k 1 k ds place compar layer l k k one two input compar c layer l k output compar c 0 layer l sequenc latch node l 0 edg c 0 c l 0 j stage ij output compar c layer k k ds also output network add latch node output edg reader difficulti confirm result network path network input node layer length thu transform convert nonpipelin network pipelin one exampl ad latch oddeven merg sort network figur 2 obtain network shown figur 3 propos architectur call rowmerg architectur rma short illustr figur 4 8 rma involv follow compon pipelin sort network fix io size p input 1 output ii pconstantport memori modul pcollect refer data memori everi k 1 k p memori modul k connect input k p k output k p 2 k sort network 1 length path taken number edg path figur 3 oddeven merg sort network latch ad i12 3 control unit sort memori modul network figur 4 rowmerg architectur iii control unit cu consist control processor cp control memori word local address memori modul collect refer memori row n input element store evenli possibl 2n consecut memori row dummi element valu 1 ad necessari ensur memori modul contain number element dummi element remov sort readwrit oper carri singl instruct address stream multipl data stream fashion control cu specif cu respons gener memori access address everi step address broadcast memori modul use local address current read write oper assum address broadcast oper take constant time cu disabl memori readwrit oper necessari appropri use mask oper pipelin fashion gener step p element two memori row fed sort network end step sort sequenc p element two row emerg output port written back two memori row process continu input element sort simplifi analysi assum one memori cycl suffici read write compar oper assumpt reason memori modul say two port read two port write memori modul one port read write perform degrad small constant factor let b order pair memori row data memori process sort element memori row resp b read left resp right half network input correspond element sort nondecreas order final left resp right half result sort sequenc emerg network output written back data memori replac origin row resp b clear refer design rowmerg architectur order effici sort 2n memori row rma wish identifi finit sequenc ms pair memori row follow sequenc element sort rowmajor order call sequenc ms rowmerg schedul simpli merg schedul time reader may wonder power rma theorem 1 provid partial answer question establish lower bound time requir algorithm sort n element use rma theorem 1 algorithm correctli sort n element rma use sort network io size p must log n proof ignor time delay caus depth sort network consequ assum sort network take o1 time sort group p element assumpt reason sinc help algorithm show even favor assumpt sort algorithm must take omegagamma n log n purpos need exhibit particular sequenc n memori row algorithm oper rma log n consid arbitrari sequenc real number store array a1 2n everi 2n memori row assum everi p p word memori row equal consid arbitrari merg schedul ms correctli sort result 2n memori row ms construct algorithm b comparison tree model sort array idea algorithm b simul action ms set memori row precis ms sort memori row j algorithm b compar necessari interchang entri ai aj assum merg schedul ms sort 2n memori row n log n time simul describ impli algorithm b sort array n log n imposs lower bound sort 2n element comparison tree model log n complet proof theorem 2 gener rowmerg schedul order sort n input element correctli effici rma need find merg schedul ms guid comput ms specifi left right order pair memori row suppli input sort network pipelin fashion exampl order pair suppli first time unit follow order pair second time unit reason discuss later interest merg schedul satisfi follow three condit 1 rma must sort correctli psorter use instead sort network sort network depth one 2 row number appear subsequ ms 3 length ms close possibl omegagamma n log n p time lower bound sort rma psorter perceiv sort network io size p depth dt therefor condit 1 necessari condit correctli sort n element gener condit 2 violat ms may guid pipelin oper correctli sort n element possibl data depend see consid pair memori row updat possibl element origin row duplic row b row b ij element origin row b row b ij lost condit 3 impact time perform present gener framework gener rowmerg schedul central idea approach motiv follow wellknown fact mention 9 12 p 241 proposit 1 parallel algorithm use compareexchang oper sort element processor correspond algorithm sort rm element processor everi comparison first algorithm replac mergesort two list r element second later refer refer proposit 1 compareexchangemergesplit principl let sort network io size knuth 12 suggest repres way shown figur 5b specif horizont line label integ left right endpoint line label repres respect ith input ith output network compar repres direct vertic segment origin line end line j caus interchang input necessari smaller number appear line larger number appear line j call represent line represent memori row 1 memori row 2 memori row 4 memori row 3 memori row 5 memori row 6 memori row 7 memori row 8 b figur 5 illustr correspond memori address space b line represent network sort network shown figur 1 construct line represent sort network io size graph represent straightforward perceiv compar 2 theta 2 switch two state straight cross assign input valu network input 1 set switch compar straight state input valu propag switch valu j k receiv switch defin correspond vertic segment endpoint line j k line represent type correspond compar determin direct vertic segment figur 6 illustr propag process network figur 1 pair integ arrow input compar defin direct vertic line segment line represent shown figur 5b figur illustr method obtain line represent network figur 1 assum n element sort locat memori row 1 gener merg schedul ms line represent layer partit follow greedi algorithm initi input compar unmark let c 1 arbitrari fifo first firstout queue compar level l 1 obtain fifo queue c i1 compar level l i1 follow set c i1 empti scan compar queue c order compar c mark two output edg soon two input edg compar c mark includ c layer c i1 point reader fail note compar c must inde belong layer l i1 process continu describ c construct final concaten c j obtain sequenc c compar c preced c i1 ks cs sequenc compar obtain use greedi algorithm describ compar c k j whose correspond direct vertic segment origin line j end line b j line represent associ order pair ms result sequenc order pair correspond c consid correspond data memori line represent horizont line correspond memori row compareexchangemergesplit principl proposit 1 know element memori sort rowmajor order merg row sequenti follow merg schedul ms figur 5 illustr correspond data memori four modul eight word per modul ie line represent network figur 1 appli greedi algorithm shown figur 1 obtain follow merg schedul biton sort network io size assum even exactli mcompar per layer shown shortli n pdt ms gener greedi algorithm biton sort network io size satisfi condit 1 2 therefor use correctli sort n element rma howev exist sort network use gener merg schedul satisfi condit 2 fact restrict applic ms gener scheme exampl ms gener directli network featur figur 7 satisfi condit 2 remedi problem introduc concept augment sort networksl figur 7 line represent variant bubbl sort network given arbitrari sort network io size augment sort network 00 io size deriv obtain follow ffl transform pipelin network 0 ad latch describ section 2 ffl group latch layer 0 pair arbitrari way replac pair latch dummi compar odd delet remain latch stage network obtain end simpl algorithm desir augment sort network 00 clearli layer 00 exactli b compar distinguish real compar dummi compar repres node label vertic line segment without arrow graph line represent respect illustr augment network oddeven sort network shown figur 2 given figur 8 still use greedi algorithm gener ms augment network 00 compar select process exactli describ howev task translat compar sequenc correspond ms slightli modifi accommod dummi compar translat compar sequenc ks ms dummi compar order two row number involv arbitrari use ms gener augment network 00 write oper step dt disabl correspond dummi compar 00 note possibl sinc specifi section 2 architectur support mask write oper oper fashion ms gener augment network 00 clearli satisfi condit 1 compareexchangemergesplit principl proposit 1 shall prove theorem 2 ms also satisfi condit 2 length ms cost sort network use ms gener 00 depth 00 increas cost compar note first would seem though use 00 deriv ms condit 3 satisfi howev sort network io size known author includ network featur figur 7 omd cost therefor cost 00 within constant factor cost summar find state prove follow import result theorem 2 let sort network io size 2np let sort network io size p n pdt merg schedul obtain augment network greedi algorithm use correctli sort n element rowmerg architectur sort devic n dummi compar introduc conveni amount nooper figur 8 augment oddeven merg sort network proof need show n pdt ms gener augment network 00 satisfi condit 2 let ms arbitrari merg schedul correspond compar sequenc ks gener 00 greedi algorithm conceptu treat network 00 datadriven ie dataflow architectur process element precis compar whose activ driven data avail say compar c readi activ whenev two input avail yet use prove theorem need show j compar preced c k j use c k j yet use compar subsequ readi activ let jl j denot number compar layer l similarli let jc j stand length subsequ c construct compar l greedi algorithm clearli c initi exactli b n c compar c 1 readi activ consid arbitrari j 1 compar preced c k j use c k j readi activ suppos c k j rth compar c number compar c readi activ clearli jl 1 sinc first compar c provid two input compar layer l i1 sinc compar l i1 receiv least one input compar layer l follow least first r gamma 1 compar c i1 readi activ therefor total number consecut compar start c k j c least jl j least b n remain compar c start c k j readi activ b n b n c input compar c ks depend output compar c k tgammadt c prove ms use merg schedul network note also previou discuss time requir sort n element os cost 00 bound omd complet proof theorem 2 note theorem 2 follow import implic sort network whose depth dt satisfi n pdt use sort correctli n element pipelin fashion b n p 2 sort network depth larger p use sinc depth practic sort network io size p smaller p network use rma import note impli perform rma virtual independ sort network use sort devic c n p 2 rowmerg schedul gener augment network network greedi algorithm use sort n element correctli word correct merg schedul independ sort network use gener time requir sort n element proport ds depth select wide rang sort network depend vlsi feasibl also wide rang sort network choos deriv merg schedul know depth biton oddeven merg sort network io size olog 2 thu use either deriv merg schedul n element sort n log 2 n time well known depth ak sort network io size bound olog henc use ak network n element sort n log n therefor take note follow extens theorem 1 2 theorem 3 rowmerg architectur use sort network io size p depth p sort devic sort n element n p theta n log n best knowledg known sort network includ ak network defin recurs graph represent recurs defin sort network construct linear time given graph represent sort network io size 2n estim time take cu gener ms compar first layer easili identifi next node divid ds layer describ section 2 clearli process take oc time scan node layer layer latch ad convert pipelin network 0 n time employ layerbylay scan node 0 pair latch layer combin dummi compar obtain augment network 00 process take n time easi see task construct line represent 00 graph represent 00 also carri n time final greedi algorithm perform 00 algorithm essenti breathfirst search run n time henc total time gener ms network bound n interest note even ms schedul avail rma need n time complet task sort n element thu time take cu comput ms time need network perform sort perfectli balanc word time complex claim theorem 3 also hold comput requir gener ms taken account import note avail ms use sort mani problem instanc work space requir control memori proport md word olog n bit rather remark rma requir extra data memori space use store input 4 gener rowmerg architectur number context especi vlsi complex concern desir use 2 optim network parallel sort devic main goal section show possibl design sort architectur use 2 optim sort network parallel sort devic turn time perform new design call gener rowmerg architectur grma short slightli better rma discuss section 2 grma use sort network fix io size p input 1 output p constantport data memori modul collect refer data memori everi k 1 k p memori modul k connect input k output k one parallel read oper one memori row read suppli input one parallel write oper output written back one memori row like rma memori access oper sort network control control unit cu howev three major differ grma rma grma p memori modul rather pmemori modul b sort network sort odt memori row rowmajor order odt c simplic assum grma oper differ pipelin mode rma specif group r memori row fed network r consecut time step sort r row written back memori r consecut time step anoth group r memori row fed network process repeat element group r memori row sort valu r proport depth dt note chang control mechan grma also oper fulli pipelin mode ie network fed continu select leighton optim sort network 13 known 2 optim network hardwar implement well known columnsort algorithm io size q log q depth c log q c constant greater 1 two design propos 13 one valu c significantli smaller leighton sort network sort array size log q theta q log q rowmajor order pipelin fashion specif first log q step q log q element fed network c log q step element emerg sort output network log q consecut step let q log q partit n memori row log q superrow contain log qconsecut memori row ith superrow consist memori row log q 1 log q oper grma partit iter two superrow sort iter iter consist two phase ffl feed phase two superrow contain log q memori row fed continu sort network ffl clear phase element sort network drain let b order pair superrow number procedur merg two superrowsa b whose detail given figur 9 perform mergesplit oper superrow b use layer sort network size log q obtain merg schedul ms list compar layer l concaten list obtain sequenc c compar c preced c i1 let ks cs sequenc compar obtain base c line represent obtain merg schedul ms guid ms sort process proce nonoverlap iter consist call procedur merg two superrowsa b perform mergesplit oper two superrow specifi ms compareexchangemergesplit principl grma sort n element correctli sinc iter take olog q time task sort n element grma use ms procedur merg two superrowsa b begin feed phase log qdo read row agamma1 log q feed row input endfor log qdo read row bgamma1 log q feed row input endfor idl log q noop clear phase log q write output row agamma1 log q endfor log q write output row bgamma1 log q endfor figur 9 procedur merg two superrow take clog qs time use layer ak network obtain valid ms length n log q log n log q use sort n element grma take n log n log q n log n log p time argument similar use proof theorem 1 show everi algorithm sort n element grma requir log n summar find state follow result theorem 4 gener rowmerg architectur use 2 optim network io size p parallel sort devic sort n element n op log p theta n log n notic case grma comput merg schedul requir augment network length merg schedul somewhat shorter use network smaller io size depth without dummi compar extra data memori requir use store input 5 conclus open problem main motiv work provid observ sort network fix io size p use sort set p element reallif applic howev requir sort arbitrarili larg data set rather surprisingli import problem use fix io size sort network context address literatur main contribut propos simpl sort architectur whose main featur pipelin use sort network fix io size p sort arbitrarili larg data set n element noteworthi featur design requir extra data memori space use store input turn time perform design call rowmerg architectur rma virtual independ cost depth underli sort network specif show use rma n element sort theta n log n memori access conflict addit show use 2 optim sort network fix io size p construct similar architectur term gener rowmerg architectur grma sort n element theta n log n point know whether better perform achiev remov restrict rigid memori access scheme rma allow flexibl yet regular memori access pattern case time lower bound rma grma longer hold result 6 indic n element sort less n log n log p time use parallel sort devic io size p interest open question close gap lower bound time perform offer design best perform design propos paper proport depth ak network use construct merg schedul constant associ depth complex ak network larg consid practic howev result reveal potenti rowmerg base simpl sort architectur along line thought longstand open problem obtain realist sort network logarithm depth equal import discov network depth c log log log network io size c small constant network use deriv practic short merg schedul r sort c log n parallel step parallel sort algorithm parallel comput biton sort network sort p object ksorter taxonomi parallel sort minimum area vlsi network olog n time sort optim sort algorithm parallel comput optim vlsi circuit sort optim sort algorithm reconfigur mesh art comput program tight bound complex parallel sort sort o1 time reconfigur mesh size p parallel permut sort algorithm new gener sort network sort p number p new determinist sampl scheme applic broadcast effici sort reconfigur mesh sort n item use psorter optim time current progress effici sort network construct sort network ksorter improv sort network olog n depth parallel sort bibliographi acm sigact news bibliographi parallel sort vlsi complex sort parallel sort scheme whose basic oper sort n element tr ctr stephan olariu cristina pinotti si qing zheng optim hardwarealgorithm sort use fixeds parallel sort devic ieee transact comput v49 n12 p13101324 decemb 2000 giusepp campobello marco russo scalabl vlsi speedarea tunabl sort network journal system architectur euromicro journal v52 n10 p589602 octob 2006 classifi matric separ row column ieee transact parallel distribut system v15 n7 p654665 juli 2004 shunwen cheng arbitrari long digit integ sorter hwsw codesign proceed confer asia south pacif design autom januari 2124 2003 kitakyushu japan