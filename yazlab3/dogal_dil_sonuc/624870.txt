assur good style objectori program languageindepend law demet encod idea encapsul modular easytofollow form objectori programm present law develop design implement demet system provid highlevel interfac classbas objectori system two form law class object form describ motiv ensur softwar modular possibl principl cover law includ coupl control inform hide inform restrict inform local structur induct exampl given show law appli valid violat identifi shown transform method satisfi law one b introduct paper describ objectori program style rule call law demet along gotorul program style rule inherit procedur program paradigm mani still appli law part program knowledg consid implement objectori softwar partial respons question objectori program written good style formula rule one follow order write good objectori program metric appli objectori program determin good characterist good objectori program addit help formal exist idea issu found literatur kp86 sny87 two kind style rule objectori program rule constrain structur class rule constrain implement method style rule influenc structur class publish elsewher lie88 focu paper style rule restrict method written set class definit particular law restrict messagesend statement method implement inform law say object receiv messag given method must one restrict set object set prefer object includ method argument self pseudovari immedi subpart self self object smalltalk flavor call c current eiffel law demet name demet system tm provid highlevel interfac classbas objectori system demet research group northeastern univers develop system group appli law develop system formal fourteen thousand line lispflavor nineti thousand line c code implement numer applic develop system experi law promot maintain comprehens softwar result small method size predic messagepass pattern caus applic law word follow law concert rule minim code duplic minim number argument minim number method produc code characterist manag form also seen adher law prevent programm encod detail class hierarchi structur method critic goal make code robust respect chang hierarchi structur chang occur frequent earli stage develop goal law demet organ reduc behavior depend class inform one class behavior depend anoth class call method messag sent object defin class behavior depend encod method objectori program determin complex pro gram control flow level coupl class paper examin relationship illustr law impact exist work describ law includ lhr88 present proof state objectori program written bad style transform systemat program obey law demet implic proof law demet restrict programm solv restrict solv also formul interpret law multipl program languag lh89b third parti commentari law includ boo91 sak88 bud91 gra91 thesi casai cas90 examin law depth assess favor impact problem provid automat support rewrit code respons chang class hierarchi slight dissent voic rais wirfsbrock et al wbw89 prefer function center approach objectori design rather data center approach demet exampl paper written extend notat demet system describ demet notat section follow defin law demet formal exampl examin practic theoret issu demet key contribut demet system improv programm product sever factor achiev number way first demet provid comprehens standard librari util second signific amount code gener programm objectori design third demet includ number tool autom common program practic key idea behind demet system use express class notat exist objectori languag take advantag ad inform provid mani custommad util util provid specif objectori languag like c flavor greatli simplifi program task exampl util demet gener provid gener class definit program languag applic skeleton parser pretti printer type checker object edi tor recompil minim pattern matcher unifi demet system help programm defin class structur function sever support tool includ consist checker semant rule type check design level learn tool learn class definit exampl object descript ll1 corrector applicationdevelop plan gener lie88 lr88 explan exampl present paper written extend demet notat describ one primari goal demet system develop environ eas evolut class hierarchi environ must provid tool easi updat exist softwar method oper defin class hierarchi strive produc environ let softwar grown continu fashion believ continuousgrowth environ lead rapid prototypingsystemupd develop cycl primari input system collect class definit collect call class dictionari class describ demet use three kind class definit construct altern repetit class dictionari shown figur 1 partial defin structur lend librari 1 1 construct class definit use build class number class form class c part class c c defin made n part call instanc variabl valu part name call instanc variabl name follow type call instanc variabl type mean instanc member class c name refer member class sc exampl shown figur 1 describ librari class consist refer section loan section journal section use follow name convent instanc variabl name begin lower case letter class name begin upper case letter 2 altern class definit allow us express union type class definit use two notat demet system introductori paper use extend notat concis notat base ebnf use later paper thesi abstract syntax concis abstract syntax extend notat ident syntact sugar chang class librari part refer loan journal class librari class bookidentifi either isbn libraryofcongress class bookidentifi class referencesec part archiv archiv class referencesec class archiv part class archiv class bookssec part refbook class bookssec class listofbook list repeat fbookg listofbook class catalog list repeat fcatalogentryg class book part class book figur 1 librari class dictionari class c either b class c state member c member class class b exclus exampl definit bookidentifi figur 1 express notion somebodi refer identifi book actual refer isbn code librari congress code 3 repetit class definit simpli variat construct class definit instanc variabl type programm specifi number instanc variabl involv class definit class c list repeat fag defin member c list zero instanc 3 form law law demet two basic form object form class form object form primari form howev possibl static check code respect object form two version class form compiletim checkabl approxim two version class form call strict form minim form strict version rigor restrict depend class howev practic difficult complet adher strict version potenti lawbreak situat discuss minim version weakest express law phrase guidelin rather strict rule allow addit depend class ask objectori programm minim document declar special acquaint class 31 object form object version law base concept prefer supplier object defin follow supplier object method object messag sent prefer supplier object method ffl immedi part self ffl argument object ffl object either object creat directli object global variabl programm determin granular phrase immedi subpart self applic hand exampl immedi part list class element list immedi part regular class object object store instanc variabl theori everi object potenti supplier particular method supplier object sent messag method flow control pass method method implement messag receiv howev presenc dynam bind method overrid objectori program languag make difficult static determin control flow one method next restrict set supplier object contain level difficulti per method object version law demet everi supplier object method must prefer supplier object form express spirit basic law serv conceptu guidelin programm approxim object version law express realli want hard enforc compiletim lhr88 object version serv addit guid whenev strict class version law accept program appear bad style strict class version law reject program appear good style client method client method f attach class c insid messag f sent object class c c f special one subclass client f attach highest class hierarchi method client class c client method attach c supplier client class c c supplier inform supplier class method class whose method call method acquaint class class c1 acquaint class method attach class c2 c1 supplier c1 ffl c2 ffl class use declar argument ffl class use declar instanc variabl c2 preferredacquaint class preferredacquaint class method either class object creat directli class use declar global variabl use preferredsuppli class class b call prefer supplier method attach class c b supplier one follow condit hold ffl b use declar instanc variabl c ffl b use declar argument includ c super class ffl b prefer acquaint class tabl 1 32 class form class form version express term class support compiletim lawenforc tool parallel object form strict version base notion prefer supplier defin tabl 1 figur show five exampl massag sent object preferredsuppli class send messag f object use c notat f send messag f figur 2 class b prefer supplier method prefer client b comment charact start comment line class c part implement interfac class c case 1 instanc variabl class class c part none implement interfac class c case 2 argument class class b part none implement interfac c self call class b case 3 argument class self class c part none implement interfac newobject new b instanc fcall newobject fg class c case 4 newli creat object class class c part none implement interfac class c case 5 global class global type b case class b prefer supplier figur 2 exampl prefer supplier everi class objectori program potenti supplier method howev best limit supplier method small set prefer class defin prefer supplier introduc concept acquaint class method sak88 hb77 precis definit acquaint reli class version supplier concept inform method supplier class class whose method call method definit make distinct class associ declar method class use bodi method former includ class method attach superclass class use declar instanc variabl class use declar argument method sens automat consequ method declar easili deriv code shown browser supplier class method introduc bodi method determin care read implement second set class acquaint class show class within code browser would requir complet symbol tabl program set acquaint class partit prefer acquaint subset complement method prefer acquaint class either class object creat directli method call acquaint classs constructor class use declar global variabl use method given definit strict version law demet class form say law demet everi supplier class method must prefer supplier sever benefit result appli strict version law class form exampl interfac class chang preferredcli method class subclass requir modif provid chang requir prefer client method chang interfac class classs interfac chang mani way exampl programm might modifi interfac chang argument return type chang name method ad delet method classs preferredcli method usual small subset method program reduc set method need modifi benefit clearli show law demet limit repercuss chang use law also control complex program exampl programm read method need awar function method prefer supplier class prefer supplier usual small subset set class applic furthermor close relat class method attach relationship make easier rememb class function second class version lenient strict form allow nonpref supplier class practic make sens allow acquaint class howev suggest programm clearli document violat order recov law benefit acquaint class typic use three reason ffl stabil class stabl andor interfac kept upwardli compat make sens use acquaint class method programm specifi global acquaint class separ includ acquaint class method ffl effici programm might need directli access instanc variabl certain class increas runtim effici c terminolog class method friend function ffl object construct permiss minim version law demet state follow minim form law demet minim number acquaint class method count number acquaint class method assess level conform program law class appear acquaint class sever method count mani time appear static type languag like c eiffel extend facil declar acquaint class compil modifi straightforward way check adher minim version follow sens supplier acquaint class must explicitli declar list method acquaint class easili check law compil time even design time programm must provid follow document method 1 type argument result 2 acquaint class document give programm read method list type must know understand method compil check complet method document examin messag sent method class object creat directli method motiv behind law demet ensur softwar modular possibl law effect reduc occurr certain nest messag send function call simplifi method law demet mani implic wide known softwar engin principl contribut condens mani proven principl softwar design singl statement easili follow objectori programm easili check compiletim principl cover law includ coupl control wellknown principl softwar design minim coupl abstract like procedur modul method ew88 coupl along sever link import link method use link callreturn link establish one method call anoth method law demet effect reduc method programm call insid given method therefor limit coupl method respect use relat law therefor facilit reusabl method rais softwar level abstract inform hide law demet enforc one kind inform hide structur hide gener law prevent method directli retriev subpart object lie deep object partof hierarchi instead programm must use intermedi method travers partof hierarchi control small step lg86 objectori system programm protect instanc variabl method class outsid access make privat import featur complement law increas modular orthogon law promot idea instanc variabl method public use restrict way inform restrict work relat work parna et al pcw85 pcw86 modular structur complex system reduc cost softwar chang oper flight program a7e aircraft restrict use modul provid inform subject chang take point view serious objectori program assum class could chang therefor restrict use messag send function call law demet inform restrict complement inform hide instead hide certain method made public use restrict inform restrict offer level protect inform hide howev hide feasibl restrict offer level protect ffl local inform 2 mani softwar engin textbook stress import local inform law demet focus local class inform programm studi method awar type close relat class method attach effect ignor independ rest system say goe ignor bliss import aspect law help reduc program complex addit law also control visibl messag name programm use messag name interfac preferredsuppli class given method ffl structur induct law demet relat fundament thesi denot semant mean phrase function mean immedi constitu goe back frege work principl composition begriffsschrift hei67 main motiv behind composition principl facilit structur induct proof 5 exampl section show appli law demet program violat strict minim version law class form exampl use class defin class dictionari fragment librari shown figur 3 method exampl written c howev text comprehens user objectori program languag c terminolog method call function member instanc variabl call data member follow c code type data member function member argument pointer type class fragment c program figur 4 search refer section particular book keep exampl small use direct access instanc variabl instead use access method searchbadstyl function attach referencesec pass messag book bookssec microfich microfichefil document section document function break law demet first messag mark send messag archmicrofich archiv return object type microfichefil method next send peter wegner point aspect law class librari part refer loan journal class librari class bookidentifi either isbn libraryofcongress class bookidentifi class referencesec part archiv archiv class referencesec class archiv part class archiv class microfichefil part class microfichefil class document part class document class bookssec part class bookssec figur 3 librari revisit return object search messag howev microfichefil instanc variabl argument type class referencesec structur class clearli defin class dictionari programm might tempt accept method searchbadstyl figur 4 reason solut consid chang class dictionari assum librari instal new technolog replac microfich document section archiv cdrom videodisc class archiv part class archiv class cdromfil part class cdromfil programm search method includ searchbadstyl method refer archiv microfich file would easier limit modif method attach class archiv accomplish rewrit method good style result searchgoodstyl function attach referencesec archiv use good style also reduc coupl respect use relat origin class referencesec f public archiv archiv boolean searchbadstylebook book f return boolean searchgoodstylebook book f return archiv class archiv f public microfichefil archmicrofich document archdoc boolean searchgoodstylebook book f return class microfichefil f public boolean searchbook book fg class document f public boolean searchbook book fg class book fg figur 4 c fragment search refer section version referencesec coupl bookssec archiv microfichefil document coupl bookssec archiv anoth way examin effect use law translat program good bad style depend graph graph node graph class edg class class b integ label indic mani call written text function function b label omit edg mean valu 1 access instanc variabl interpret call read instanc variabl figur 5a show graph program violat law demet figur 5b show graph one follow law figur 5 depend graph represent 6 valid violat law demet intend act guidelin absolut restrict minim version law class form give programm choic strongli want follow law nonpref acquaint class use weaker adher strict version situat cost obey strict version law may greater benefit howev programm willingli violat law take respons declar requir acquaint class critic document futur mainten softwar exampl cost appli law higher benefit consid follow prototyp method bad style code flavor c flavor defmethod c p c void cmd p p instanc class f1 return subpart p immedi composit chang method may chang also f1 two situat reason leav ffl f1 intend serv black box programm know type argument return type case maintain f1 respons ensur updat f1 upwardli compat programm function penal use ffl runtim effici import applic use mechan c friend function featur may necessari friend function use care sinc whenev privat member class chang friend function class may also requir chang consid anoth exampl show cost use law might outweigh benefit applic solv differenti equat class dictionari may follow definit class complexnumb part class complexnumb flavor defmethod vector r c complexnumb send send c realpart project self c void vectorrcomplexnumb c method r form previou exampl bad style reason question whether import hide structur complex number rewrit method applic concept complex number well defin well understood unnecessari rewrit method law obey gener applic concept well defin class implement concept stabl sens unlik chang violat accept experi write program follow law demet decreas occurr nest messag send decreas complex method increas number method increas method relat problem outlin lg86 mani oper type case abstract may less comprehens implement mainten difficult might also increas number argument pass method one way correct problem organ method associ particular function algorithm task modula2 like modul structur outlin lr88 function abstract longer method modul hide lowerlevel method 7 conform law given method satisfi law programm transform conform law lhr88 describ algorithm transform objectori program equival program satisfi law word show translat objectori program normal form satisfi law strict version less automat way achiev goal may help deriv readabl intuit code also may help minim number argument pass method amount code duplic two techniqu call lift push explain techniqu need preliminari definit say class b part class class b class one instanc variabl b partclass class one instanc variabl consid method flavor defmethod c send send self m1 m2 c void cm class object return m1 prefer supplier class distinguish two case 1 partclass c 2 c partclass lift techniqu applic first case partclass c idea make m1 return object instanc variabl argument class c adjust m2 accordingli method m2 lift class hierarchi attach class attach instanc variabl class c exampl suppos program need pars input use grammar grammar made list rule product index rule name fragment pars applic shown figur 6 program fragment use one acquaint class class bodi method pars grammar problem fragment method lookup grammar return object class bodi instanc variabl class grammar transform first method good style must make lookup method return instanc rule adjust parsedetail figur 7 show modifi version improv program fragment use acquaint class lift approach alway work consid figur 8 program fragment use one acquaint class class rule method pars grammar transform first method good style lift return type lookup method push techniqu applic case 1 2 ie part class c c part class respect second case slightli complic involv class grammar list repeat fruleg class rule part class rule flavor defmethod grammar pars rulenam type symbol send send self lookup rulenam parsedetail defmethod grammar lookup rulenam type symbol send send rule lookup rulenam getbodi defmethod bodi parsedetail c void grammarparsesymbol rulenam f return rule void bodyparsedetail figur exampl code violat law demet flavor defmethod grammar pars rulenam type symbol send send self lookup rulenam parsedetail defmethod grammar lookup rulenam type symbol send rule lookup rulenam defmethod rule parsedetail send self getbodi c void grammarlookupsymbol rulenam rule grammarlookupsymbol rulenam f return rule lookuprulenameg void ruleparsedetail f getbodi g figur 7 new pars implement class grammar part class grammar class rulelist list repeat fruleg rulelist class rule part class rule flavor defmethod grammar pars rulenam type symbol send sendself lookup rulenam parsedetail defmethod grammar lookup rulenam type symbol return object type rule send rulelist lookup rulenam defmethod rulelist lookup rulenam type symbol defmethod rule parsedetail c void grammarparsesymbol rulenam rule grammarlookupsymbol rulenam f f g figur 8 law violat fix lift techniqu travel object hierarchi gener techniqu first case push techniqu variat topdown program techniqu push respons work lower level procedur lift exampl problem aros grammar class task send parsedetail messag task realli respons class rulelist know rule detail grammar figur 9 show improv design use acquaint class also techniqu use figur 4 write searchgoodstyl flavor defmethod grammar pars rulenam send self lookuppars rulenam defmethod grammar lookuppars rulenam send rulelist lookuppars rulenam defmethod rulelist lookuppars rulenam send sendself lookup rulenam parsedetail c void grammarparsesymbol rulenam void grammarlookupparsesymbol rulenam figur 9 exampl transform push techniqu redesign introduc addit method list class view stabl exampl case smalltalk need redesign justifi keep acquaint class 8 conclus paper introduc simpl rule follow result product structur maintain objectori softwar rule call law demet encod idea data hide encapsul easi follow form objectori programm result code robust allow individu class redesign leav remain softwar intact furthermor effect reduc effect local chang softwar system adher law reduc mani headach softwar mainten follow law exact price greater level interfac restrict refin hide greater penalti term number method execut speed number argument method sometim code readabl long term fatal penalti found packag relat method definit togeth help significantli organ increas number smaller method lie92 facil along support interact case environ eras penalti follow law demet system includ formal code gener mechan call propag pattern lxsl91 lhslx92 remov program burden follow law util gener major part requir code executionspe problem counter use preprocessor compil technolog like inlin code expans code optim similar way tail recurs optim done applic law throughout develop demet system law never prevent us achiev algorithm goal although method need rewritten task difficult result gener satisfi acknowledg would like thank garlin lee feedback contribut develop idea paper thank also jing na along garlin test practic use law product demet system softwar mitch wand instrument initi investig weak strong interpret carl wolf suggest object version law one follow conceptu special thank due arthur riel princip author earlier version paper member clo commun daniel bobrow richard gabriel jim kempf gregor kicza le alan snyder etc particip debat andor formul clo version law would like thank markku sakkinen interest paper sak88 help mail messag law demet cindi brown mitch wand convinc us use readabl notat ebnf help us design paul steckler ignacio silvalep made sever contribut extend demet notat sectionbibliograph note earlier report work describ paper appear lhr88 lh89b lh89a r introduct objectori program manag class evolut objectori system assess qualiti abstract data type written ada law commun parallel process frege godel tast smalltalk abstract specif program de velop assur good style objectori pro gram formul benefit law demet experi graphbas propag pattern program tool compon enhanc adapt reusabl mechan group collabor class demet case studi softwar growth parameter class propag pattern graphbas specif cooper behavior modular structur complex system enhanc reusabl inform hide law demet inherit develop encapsul softwar system tr abstract specif program develop inherit develop encapsul softwar system demet case studi softwar growth parameter class comment myampersandldquoth law demetermyampersandrdquo c objectori program object sens style ctr letha h etzkorn carl g davi automat identifi reusabl oo legaci code comput v30 n10 p6671 octob 1997 fernando berzal juancarlo cubero nicola marin mariaamparo vila lazi type autom dynam strategi select ieee softwar v22 n5 p98106 septemb 2005 edward b gambl jr reid simmon impact autonomi technolog spacecraft softwar architectur case studi ieee intellig system v13 n5 p6975 septemb 1998 k j lieberherr j riel contribut teach objectori design program acm sigplan notic v24 n10 p1122 oct 1989 chri houser manual compil ters modular languag dem acm sigplan notic v31 n12 p4151 dec 1996 yang liu salil pradhan demet method effici way build adapt softwar acm sigic bulletin v22 n1 p719 juli 1996 nadir yousfi measurementdriven restructur object orient applic acm sigplan oop messeng v4 n2 p175176 april 1993 norman wild paul matthew ross huitt maintain objectori softwar ieee softwar v10 n1 p7580 januari 1993 karl j lieberherr ignacio silvalep cun xiao adapt objectori program use graphbas custom commun acm v37 n5 p94101 may 1994 jonathan aldrich craig chamber david notkin archjava connect softwar architectur implement proceed 24th intern confer softwar engin may 1925 2002 orlando florida karl lieberherr david h lorenz pengcheng wu case static execut advic check law demet aspectj proceed 2nd intern confer aspectori softwar develop p4049 march 1721 2003 boston massachusett adapt program jasco proceed 4th intern confer aspectori softwar develop p7586 march 1418 2005 chicago illinoi clark b archer michael c stinson objectori softwar product metric tutori proceed 1998 acm sigcpr confer comput personnel research p305306 march 2628 1998 boston massachusett unit state korson john mcgregor understand objectori unifi paradigm commun acm v33 n9 p4060 sept 1990 jill van gurp jan bosch design eros problem caus journal system softwar v61 n2 p105119 march 2002 steve freeman tim mackinnon nat pryce joe waln mock role object companion 19th annual acm sigplan confer objectori program system languag applic octob 2428 2004 vancouv bc canada norman wild ross huitt mainten support objectori program ieee transact softwar engin v18 n12 p10381044 decemb 1992 mira mezini karl lieberherr adapt plugandplay compon evolutionari softwar develop acm sigplan notic v33 n10 p97116 oct 1998 richard helm ian holland dipayan gangopadhyay contract specifi behavior composit objectori system acm sigplan notic v25 n10 p169180 oct 1990 shahram javey kinichi mitsui hiroaki nakamura tsuyoshi ohira kazu yasuda kazushi kuse tsutomu kamimura richard helm architectur xl c browser proceed 1992 confer centr advanc studi collabor research novemb 0912 1992 toronto ontario canada martin hitz behzad montazeri chidamb kemer metric suit measur theori perspect ieee transact softwar engin v22 n4 p267271 april 1996 grel hedin attribut extens techniqu enforc program convent nordic journal comput v4 n1 p93122 spring 1997 robert v binder design testabl objectori system commun acm v37 n9 p87101 sept 1994 simon gibb eduardo casai oscar nierstrasz x pintado denni tsichritzi class manag softwar commun commun acm v33 n9 p90103 sept 1990 nevil churcher warwick irwin ron kriz visualis class cohes virtual world proceed asiapacif symposium inform visualis p8997 januari 01 2003 adelaid australia jen palsberg cun xiao karl lieberherr effici implement adapt softwar acm transact program languag system topla v17 n2 p264292 march 1995 tomoyuki aotani hidehiko masuhara scope aspectj compil support userdefin analysisbas pointcut proceed 6th intern confer aspectori softwar develop march 1216 2007 vancouv british columbia canada evalu effect deleg versu central control style maintain objectori softwar ieee transact softwar engin v30 n8 p521534 august 2004 k lieberherr c xiao formal foundat objectori data model ieee transact knowledg data engin v5 n3 p462478 june 1993 nevil churcher warwick irwin inform design pipelinebas softwar visualis proceed 2005 asiapacif symposium inform visualis p5968 januari 01 2005 sydney australia roger chin samuel chanson distribut objectbas program system acm comput survey csur v23 n1 p91124 march 1991 k j lieberherr c xiao objectori softwar evolut ieee transact softwar engin v19 n4 p313343 april 1993 rebecca j wirfsbrock ralph e johnson survey current research objectori design commun acm v33 n9 p104124 sept 1990 karl j lieberherr control complex softwar design proceed 26th intern confer softwar engin p211 may 2328 2004 karl lieberherr boaz pattshamir doug orlean travers object structur specif effici implement acm transact program languag system topla v26 n2 p370412 march 2004 doug lea christoph alexand introduct objectori design acm sigsoft softwar engin note v19 n1 p3946 jan 1994 marwan abiantoun jonathan aldrich wesley coelho case studi reengin enforc architectur control flow data share journal system softwar v80 n2 p240264 februari 2007 antero taivalsaari notion inherit acm comput survey csur v28 n3 p438479 sept 1996 gari leaven introduct literatur objectori design program languag acm sigplan oop messeng v2 n4 p4053 oct 1991