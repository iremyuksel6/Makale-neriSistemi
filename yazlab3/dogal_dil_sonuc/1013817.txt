spaceeffici planar convex hull algorithm spaceeffici algorithm one output given locat input small amount addit memori use algorithm describ four spaceeffici algorithm comput convex hull planar point set b introduct set n distinct point euclidean plane convex hull minim convex region contain everi point denit follow convex hull convex polygon whose vertic point conveni say point p convex hull p vertex convex hull earli 1972 graham 13 gave convex hull algorithm log n worstcas run time branch done base result comparison quadrat polynomi shamo 33 later show model comput sort n log n lower bound everi convex hull algorithm must requir n log n time input despit match upper lower bound probabl mani applic convex hull number planar convex hull algorithm publish sinc graham algorithm 1 2 4 6 11 17 21 28 particular note ultim algorithm kirkpatrick seidel 21 comput convex hull set n point plane log h time h number vertic convex hull later result obtain chan use much simpler algorithm 3 author show algebra decis tree xed order n log h lower bound comput convex hull set n point convex hull h vertic import planar convex hull natur tri improv run time storag requir planar convex hull algorithm paper focu reduc intermedi storag use comput planar convex hull particular describ inplac situ algorithm comput convex hull algorithm take input point array research partli fund nation scienc foundat natur scienc engin research council canada danish natur scienc research council contract 9801749 project perform engi neer ci polytechn univers six metrotech brooklyn new york 11201 fhbrjiaconogpolyedu z depart comput univers copenhagen jyrkidikudk x school comput scienc carleton univers 1125 colonel dr ottawa ontario canada k1 5b6 fmorinmorrisongcscarletonca school comput scienc mcgill univers godfriedcgmcsmcgillca output vertic convex hull clockwis order array execut algorithm addit work storag kept minimum case inplac algorithm extra storag kept o1 situ algorithm allow extra memori size olog n execut algorithm array contain exactli point dierent order conveni refer inplac situ algorithm spaceeci spaceeci algorithm sever practic advantag tradit algorithm pri marili spaceeci algorithm allow process larger data set algorithm use separ input output array necess requir enough memori store 2n point contrast spaceeci algorithm need enough memori store n point plu olog n o1 work space relat fact spaceeci algorithm usual exhibit greater local refer make practic implement modern comput architectur memori hierarchi nal advantag spaceeci algorithm especi mission critic applic less prone failur sinc requir alloc larg amount memori may avail run time describ four spaceeci planar convex hull algorithm rst inplac use gra ham scan combin inplac sort algorithm run log n time second third algorithm run log h time situ base algorithm chan et al 4 kirkpatrick seidel 21 respect fourth ultim algorithm base algorithm chan 3 run log h time inplac rst two algorithm simpl implement ecient practic justifi claim implement algorithm made sourc code freeli avail 25 best knowledg paper rst studi problem comput convex hull use spaceeci algorithm seem surpris given close relat planar convex hull sort larg bodi literatur spaceeci sort merg algorithm 37 main reason probabl scan portion graham origin algorithm 13 inher inplac inplac sort algorithm alreadi provid log n time inplac convex hull algorithm remaind paper organ follow section 2 3 4 four algorithm describ section 5 result summar open problem present log n time algorithm section present simpl inplac implement graham convex hull algorithm 13 precis andrew modic graham algorithm 1 algorithm requir use inplac sort algorithm ecient inplac sort algorithm see eg 19 37 refer algorithm simpli inplacesort probabl practic relev algorithm given paper begin describ conceptu simpl version algorithm describ slightli involv version improv constant run time 21 basic algorithm let set n 1 point let l line bottommostleftmost point topmostrightmost point upper convex hull convex hull point l lower convex hull convex hull point l wellknown convex hull point set union upper lower convex hull cf 30 graham scan comput upper lower hull xmonoton chain increment store partial comput hull stack addit new point involv remov zero point top stack push new point onto top stack follow pseudocod use inplacesort algorithm graham scan comput upper lower hull point set paramet use determin whether upper lower hull comput sort point increas order lexicograph x yvalu upper hull comput 1 inplacesort sort point decreas order lower hull comput valu h correspond number element stack follow remain pseudocod array contain input point 1 inplacesort n 2 h 1 3 4 h 2 right turnsh 2 sh 1 si 5 h h 1 f pop top element stack g 7 8 return h hard verifi algorithm return line 8 element appear upper lower convex hull store case upper hull comput 1 hull vertic sort lefttoright clockwis case lower hull comput 1 hull vertic sort righttoleft also clockwis comput convex hull point set proceed follow refer fig 1 first make call grahaminplacescan comput vertic upper hull store clockwis order posit follow s0 bottommostleftmost point sh 1 topmostrightmost point use h 1 swap bring s0 posit sh 1 keep rel order final make call grahaminplacescan comput lower convex hull also lower convex hull store vertic lower convex hull clockwis order end result convex hull store clockwis order follow pseudocod give precis descript algorithm use c comput upper hull z move b z comput lower hull z output hull figur 1 execut grahaminplacehul algorithm pointer denot start posit array 1 h grahaminplacescan n 1 2 3 swap si 5 return h call grahaminplacescan execut log n time loop line 23 take oh time therefor total run time algorithm log n amount extra storag use inplacesort o1 storag use procedur theorem 1 algorithm grahaminplacehul comput convex hull set n point log n time use o1 addit memori algorithm section 4 make use grahaminplacescan howev algorithm requir result convex hull store clockwis order begin leftmost vertex note output format easili achiev time postprocess step 22 optim algorithm constant run time grahaminplacehul improv rst nding extrem point b use point partit array two part one contain vertic appear upper hull one contain vertic appear lower hull fig 2 give graphic descript way point except b take part one call grahaminplacescan partit upper hull candid z lower hull candid comput upper hull upper hull b z lower hull candid z move shift upper hull b lower hull candid z comput lower hull convex hull z output hull figur 2 faster implement grahaminplacehul reduc constant algorithm one implement inplacesort inplac mergesort algorithm katajainen et al 19 algorithm requir n log comparison 3n log swap sort n element sinc graham scan perform 2n rightturn test comput upper hull n point h point upper hull result algorithm perform 3n h rightturn test extra n come initi partit step call algorithm optgrahaminplacehul theorem 2 optgrahaminplacehul comput convex hull n point log n time use 3n h right turn test 3n log comparison o1 addit memori h number vertic convex hull final note array alreadi sort lexicograph order lexicograph comparison necessari one use inplac stabl partit algorithm partit set upper hull candid set lower hull candid preserv sort order within set exist stabl partit algorithm run time perform comparison 18 context comparison actual right turn test sinc algorithm stabl origin sort order input preserv addit sort step necessari call result algorithm sortedgrahaminplacehul theorem 3 sortedgrahaminplacehul comput convex hull n point given lexicograph order time use right turn test swap lexicograph comparison o1 addit memori nal option inplac implement graham sort point radial point p interior convex hull done one call grahaminplac scan comput entir convex hull unfortun method requir log n right turn test like slower method use right turn test 3 two log h time insitu algorithm section show comput upper symmetr lower hull log h time situ h number point upper respect lower hull discuss two algorithm due kirkpatrick seidel 21 chan snoeyink yap 4 algorithm recurs partit problem two roughli equals subproblem use dierent strategi purpos howev 31 chan snoeyink yap algorithm rst show transform log h time algorithm chan et al situ algorithm algorithm begin arbitrarili group element bn2c pair pair pair median slope found use linear time mediannd algorithm 1 nd point line p slope point natur p vertex convex hull let qx denot x coordin point q let denot index element pair si use p group partit element three group 0 fig 3 p si p si denot line segment endpoint b algorithm recurs comput upper hull 0 fpg 1 fpg output concaten two discuss correct proof algorithm run log h time see origin paper 4 turn problem make situ algorithm choic median slope ensur 0 3n4 1 3n4 algorithm use olog n level recurs strategi implement level use o1 local variabl one call mediannd routin use olog n addit memori simplic assum n odd case n even easili handl process extra unpair element pair element process pair consecut element even linear time mediannd algorithm exist see eg horowitz et al 14 section 36 lai wood 22 use nd pair si si 1 median slope tricki part implement partit set 0 1 2 diculti lie fact element group pair two element pair 1 bhattacharya sen 2 wenger 36 note mediannd replac choos random pair element expect run time result algorithm log h figur 3 partit 0 1 2 unprocess pair figur 4 parit set 0 1 2 may belong dierent set j partit process pair lefttoright maintain set 0 1 2 leftmost part array see fig 4 precis maintain three indic index last element j way index rst element next unprocess pair step examin next unprocess pair classifi two point belong 0 1 2 add appropri set ad point set may shift two locat howev requir preserv order within set shift easili done o1 time move two leftmost element set fig 5 recap algorithm comput upper hull first algorithm partit set 0 1 2 recurs set 0 recurs call convex hull 0 store begin array last element hull point p use partit algorithm shift 1 leftward adjac p recurs 1 fpg end result upper hull store consecut clockwis order begin array use techniqu section 2 figur 1 2 upper hull algorithm made convex hull algorithm run time memori requir theorem 4 algorithm csyinsituhul comput convex hull n point log use olog n addit storag h number vertic convex hull z partit z recurs z compact z recurs z output hull figur 5 overview csyinsituhul algorithm 32 kirkpatrick seidel algorithm previou algorithm solv partit problem nding point p convex hull leav roughli number vertic side kirkpatrick seidel origin solut partit problem rst nd edg upper hull upper bridg leav approxim number point side suppos nd edg pq px qx 0 consist point left point right q 2 point pq furthermor js 3n4 algorithm recurs comput upper hull 0 fpg 1 fqg output concaten two log h total time clearli pq edg convex hull result upper hull proof run time see origin paper 21 unlik previou algorithm partit inplac 0 1 2 p q known trivial sinc necessari maintain pair edg sinc js olog n level recurs therefor nd upper bridg linear time inplac algorithm thu perform situ upper bridg problem ask given two set 0 1 point separ vertic line two endpoint p 2 0 q 2 1 edg pq upper hull problem dual separ 2d linear program problem phrase given two set l 0 l 1 line posit neg slope respect comput point smallest ycoordin line linear program alway feasibl solut alway intersect pair line opposit slope denot point coordin x x line equat axbi b c dualiti given x properti p l l p moreov p left resp right p posit resp neg slope turn impli solut separ 2d linear program problem given dual solut upper bridg problem intuit behind origin algorithm 21 note dualiti realli comput 2d linear program problem solv directli point geometr predic involv point transform predic line via transform thu answer 2d linear program inplac also answer upper bridg problem inplac origin algorithm rst comput median abscissa x 0 situ partit two roughli equals subset around x 0 enforc jsj 3n4 jsj 3n4 algorithm due seidel 32 solv 2d linear program problem expect linear time simpl assum order line random could alway enforc shu set randomli linear time prior linear program queri upon close examin algorithm need reorder input fact work inplac maintain two indic scan set line two indic rememb two line make current optim solut megiddo 24 gave worstcas lineartim algorithm adapt algorithm run inplac explain line dual set megiddo algorithm assum least 8 line otherwis brute forc method use line l pair order slope within pair inplac implement li pair li use situ mediannd pair whose point intersect median abscissa x 0 found linear time pair intersect left x 0 place rst half pair intersect right x 0 second half take care exchang two pair line rst pair exchang correspond line second pair next line l 2 l intersect vertic line highest ordin found recal solut linear program problem lowest point line therefor slope l neg solut linear program problem right x 0 otherwis solut left rst case scan pair rst half line smallest slope pair rst half discard sinc right x 0 alway pair line henc dene solut second case line largest slope pair second half discard discard line put end array swap last yet undiscard line work second case well pair second half examin revers order begin end move toward middl array sinc discard zone grow twice slowli line examin pair choic median ensur n4 line discard case end process left set l 0 d3n4e line solut origin problem dene two line care must taken includ last line 3n4 origin number line odd henc solut linear program problem l 0 l algorithm run l 0 instead l size l 0 fall 8 point bruteforc method use practic seidel algorithm use certain xed size determin netun z partit z recurs z compact z recurs z output hull figur overview ksinsituhul algorithm theorem 5 algorithm megiddoinplacelp2d solv separ 2d linear program problem inplac linear time figur 6 recap algorithm comput upper hull first algorithm comput median abscissa x 0 upper bridg pq use dual algorithm megiddo inplacelp2d bridg use partit set 0 1 2 algorithm recurs set 0 recurs call convex hull 0 store begin array last element hull rst endpoint p upper bridg algorithm shift 1 leftward adjac pq recurs 1 fqg end result upper hull store consecut clockwis order begin array theorem 6 algorithm ksinsituhul comput convex hull log h time use olog n addit storag h number vertic convex hull 4 log h time inplac algorithm next give log h time inplac planar convex hull algorithm algorithm modic chan log time algorithm essenti speedup jarvi march 17 begin review chan algorithm thereaft describ modic need make inplac chan algorithm run round th round algorithm nd rst point convex hull g h round end algorithm detect found point convex hull round algorithm partit input point ng group size comput convex hull group vertic convex hull output clockwis order begin leftmost vertex success vertex obtain nding tangent previou vertex ng convex hull next vertex determin jarvi march choos vertex largest polar angl respect previous found vertex origin case largest polar angl uniqu tie broken take farthest vertex previous found vertex find tangent individu convex hull done olog vertic convex hull store array clockwis order 5 27 30 ng tangent nding oper per iter g iter round therefor round take log dlog log round total cost chan algorithm next show implement round use o1 addit storag assum sake simplic n multipl g group step build ng group size g take group consecut element comput convex hull use grahaminplacehul two question aris 1 start tangentnd step put convex hull vertic nd 2 order nd tangent point group olog need know size convex hull group keep track size use o1 extra memori answer rst question store convex hull vertic begin array order nd nd k th vertex convex hull swap sk 1 point convex hull rst group group contain newli found convex hull vertex chang therefor recomput convex hull cost keep track size convex hull group without store size explic use reorder trick let denot element group g let denot lexicograph comparison x valu say sign gj convex hull g contain h vertic follow rst element sign form sequenc 1 follow 0 furthermor element reorder remaind sign form altern sequenc test point gi convex hull g simpli observ three vertic must convex hull g unless collinear case g0 g1 convex hull g test point gi 3 convex hull g examin sequenc sign form gi gi 1 gi 2 gi 3 sequenc contain two consecut two consecut simpl case analysi convinc reader gi convex hull g otherwis least one gi gi 1 gi 2 gi 3 convex hull g determin vertic last vertex perform test form right turngj gj1 g0 fig 7 rst valu test return fals index j nal element convex hull g test return fals convex hull g provid tool inplac implement chan algorithm except cost recomput convex hull group modifi run time implement asymptot origin algorithm therefor need figur 7 rst vertex fail right turn test last vertex convex hull g bound extra cost one step round nd one convex hull vertex recomput convex hull two group cost recomput convex hull og log g step round therefor total cost recomput convex hull vertic round og log log n 12 henc total cost round log log n 12 sinc abort algorithm log n 12 use grahaminplacehul overal run time algorithm log h theorem 7 algorithm chaninplacehul comput convex hull n point log use o1 addit storag h number vertic convex hull constant chaninplacehul improv use follow trick mention chan 3 round termin without nding entir convex hull g convex hull point comput discard instead group round done remain n g point thu elimin need recomput rst vertic optim work perfectli appli chaninplacehul sinc rst point alreadi store locat conclus given four spaceeci algorithm comput convex hull planar point set rst algorithm inplac run log n time second third algorithm situ run log h time fourth algorithm inplac run log h time rst two algorithm reason simpl implement run time compar favour convex hull algorithm use addit storag order facilit comparison convex hull implement sourc code avail download 25 although assum throughout paper input point distinct algorithm paper modi handl case input multiset modic technic rel straightforward particular care must taken respect side line test size encod scheme use section 4 need make use third symbol 0 use consecut ident element idea present paper also appli problem maxim element problem determin element si sjx six sji siy 0 j n algorithm almost ident graham scan use solv maxim element problem log n time easili implement inplac furthermor inplac algorithm almost ident section 4 use solv maxim element problem log h time h number maxim element question situ inplac algorithm maxim element convex hull dimens 3 still open order question make sens ask algorithm identifi input point maxim convex hull test whether given point maxim done odn time use denit maxim test whether singl point convex hull 1 dimension linear program problem solv inplac odn expect time use seidel algorithm 32 thu maxim element problem solv time convex hull problem solv odn 2 use inplac algorithm algorithm reduc depend n gener one might ask comput geometri problem admit space ecient algorithm problem immedi come mind comput kpierc set nding maximum cliqu intersect graph comput largest empti disk nding hamsandwich cut acknowledg author grate anonym refere make observ algorithm section 31 allow us greatli simplifi partit step algorithmx r anoth ecient algorithm convex hull two dimens simpl optim outputsensit convex hull algorithm two three dimens primal divid dual prune outputsensit construct fourdimension polytop threedimension voronoi diagram intersect convex object 2 3 dimens applic random sampl comput geometri smoothsort altern sort situ introduct three algorithm sort situ new convex hull algorithm planar set algorithm 245 comput algorithm practic inplac merg fast stabl merg sort constant extra space identi stabl minimum space partit linear time practic inplac mergesort ultim planar convex hull algorithm implicit select simpl lineartim algorithm situ merg linear program linear time dimens avail onlin httpwww stabl situ sort minimum data movement mainten con optim real time algorithm planar convex hull convex hull comput geometri comput geometri sort random access optim stabl merg random quick hull algorithm 232 tr simpl lineartim algorithm situ merg sort random access file situ comput geometri introduct ultim planar convex hull algorithm intersect convex object two three dimens stabl linear time sublinear space merg simplifi stabl merg task practic inplac merg unstabl linear time 1 space merg implicit select applic random sampl comput geometri ii stabl italicin situ sort minimum data movement smalldimension linear program convex hull made easi stabl minimum space partit linear time simpl practic optim outputsensit random planar convex hull algorithm linear program linear time dimens fix inplac sort fewer move new convex hull algorithm planar set optim realtim algorithm planar convex hull convex hull finit set point two three dimens algorithm 245 treesort comput algorithm disciplin program practic inplac mergesort comput geometri ctr herv brnnimann timothi chan spaceeffici algorithm comput convex hull simpl polygon line linear time comput geometri theori applic v34 n2 p7582 may 2006 jan vahrenhold inplac algorithm klee measur problem two dimens inform process letter v102 n4 p169174 may 2007 nikolay sirakov new activ convex hull model imag region journal mathemat imag vision v26 n3 p309325 decemb 2006