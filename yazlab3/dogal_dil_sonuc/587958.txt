task schedul network schedul set task set machin yield effici schedul basic problem comput scienc oper research research problem incorpor potenti unrealist assumpt commun differ machin instantan paper remov assumpt studi problem network schedul job origin node network order process anoth node must take time travel network nodeour main contribut give approxim algorithm hard proof fulli gener form fundament problem network schedul consid two basic schedul object minim makespan minim averag complet time makespan prove small constant factor hardnesstoapproxim approxim result averag complet time give logsquar approxim algorithm gener form problem techniqu use approxim fairli gener sever applic exampl give first nontrivi approxim algorithm minim averag weight complet time set job relat unrel machin without network b introduct schedul set task set machin yield effici schedul basic problem comput scienc oper research also difficult problem henc much research area incorpor number potenti unrealist assumpt one assumpt commun differ machin instantan mani applic domain howev network comput set geographicallyscatt repair shop decis move task critic part achiev effici resourc alloc paper remov assumpt instantan commun tradit parallel machin model studi problem network schedul job origin node network order process anoth node must take time travel network node work network schedul problem either loos 2 4 approxim algo rithm main contribut give approxim algorithm hard proof fulli gener form fundament problem network schedul upper bound robust depend gener characterist job underli network particular algorithm techniqu optim averag complet time yield result first nontrivi approxim algorithm combinatori schedul question minim averag weight complet time unrel machin first approxim algorithm problem motiv satellit commun system differenti network schedul model tradit parallel machin model refer latter combinatori schedul model result yield insight network schedul problem also demonstr contrast complex certain combinatori schedul problem network variant shed light rel difficulti instanc network schedul problem consist network nonneg edg length defin max maximum edg length vertex v network machin also given set n job j job j j origin time 0 particular origin machin process requir defin p max max 1jn p j job must process one machin without interrupt job j j avail process machin 0 time dm length shortest path g k assum either ident everi machin unrel j j take time p ij may differ unrel machin set defin p ident unrel machin model fundament tradit parallel machin schedul rel well understood 3 10 11 12 15 17 25 unless otherwis specifi paper machin network assum ident altern view network schedul model job j j releas date time unavail process previou work tradit schedul model job releas date defin machin network model character allow job j j releas date differ differ machin j j releas date k dm one gener consid problem job releas date chosen arbitrarili machin need reflect network structur almost upper bound appli gener set wherea lower bound appli releas date network structur studi algorithm minim two basic object function one makespan maximum complet time schedul would like job finish earliest time possibl second averag complet time defin ffapproxim algorithm polynomialtim algorithm give solut cost ff time optim 11 previou work problem network schedul receiv attent mostli distribut set deng et al 4 consid number variant problem special case edg network unit length job process time machin ident show offlin problem p hard see problem npcomplet job allow differ size give offlin ologm max approxim algorithm also give number result distribut version problem network topolog complet connect ring tree awerbuch kutten peleg 2 consid distribut version problem novel notion onlin perform subsum minim averag maximum complet time give distribut algorithm polylogarithm perform guarante gener network also character perform feedbackbas approach addit deriv offlin approxim result similar deng et al 2 20 alon et al 1 prove lower bound perform distribut schedul tri minim schedul length fizzano et al 5 give distribut 43approxim algorithm schedul length special case network ring work differ paper focus central offlin problem give approxim higher qualiti addit approxim algorithm work gener set unrel machin 12 summari result first focu object minim makespan give 2approxim algorithm schedul job network unrel machin algorithm give perform guarante ident machin special case 2approxim algorithm match best known approxim algorithm schedul unrel machin underli network 17 thu natur ask whether addit network combinatori schedul problem actual make problem harder resolv question prove introduct network problem schedul ident machin yield qualit harder problem show network schedul problem polynomialtim algorithm better factor 4 3 time optim unless even network edg length one compar polynomi approxim scheme hochbaum shmoy 10 parallel machin schedul see addit network inde make problem harder although 2approxim algorithm run polynomi time may rather slow 21 thu explor whether simpler strategi might also yield good approxim natur approach minim makespan construct schedul unforc idl time strategi provid schedul length small constant factor time optim minim comput cost varieti schedul problem 6 7 15 24 call schedul busi schedul show network schedul problem qualiti degrad significantli much anomega log log factor longer optim schedul strike contrast combinatori model graham show busi strategi yield 2approxim algorithm 6 fact even releas date introduc ident machin schedul problem job releas date machin busi strategi still give approxim guarante 8 9 result show combinatori network min makespan ident machin ff min makespan ident machin log log log log busi schedul min makespan unrel machin 32 min avg complet time unrel machin n min avg wtd complet time unrel machin releas date ff olog 2 n figur 1 summari main algorithm hard result notat x ff mean approxim problem within factor unless problem within factor x unreferenc result new result found paper releas date job allow differ differ machin busi schedul degrad significantli schedul strategi provid evid introduct network make schedul problem qualit harder howev busi schedul qualiti show length factor log log longer optim analysi give better bound olog max bound previous known approxim algorithm ident machin network 2 4 20 turn nphard problem minim averag complet time major result optim criterion olog 2 napproxim algorithm gener set unrel machin formul problem hypergraph match integ program approxim solv relax version integ program find integr solut relax employ subroutin techniqu plotkin shmoy tardo 21 combinatori schedul schedul minimum averag complet time found polynomi time even machin unrel techniqu averag complet time algorithm fairli gener yield olog 2 napproxim minim averag weight complet time special case result olog 2 napproxim algorithm nphard problem minim averag weight complet time unrel machin network previou approxim algorithm known even special case machin differ speed 3 15 anoth special case first olog 2 napproxim algorithm minim averag complet time job releas date unrel machin previou approxim algorithm known even special case one machin 15 techniqu also use give approxim algorithm problem motiv satellit commun system 18 26 also give number result includ polynomialtim algorithm sever special case abovement problem 5 approxim variant network schedul job origin also destin summari upper bound hard result appear figur 1 line research quit differ yet still similar spirit start papadimitri yannakaki 19 model commun issu parallel machin schedul abstract away particular network rather describ commun time two processor one networkdepend constant consid schedul precedenceconstrain job infinit number ident machin model issu involv sort theorem prove quit differ result although algorithm polynomialtim algorithm tend rather ineffici reli work 21 subroutin result discuss run time explicitli rest paper makespan section studi problem minim makespan network schedul problem first give algorithm come within factor 2 optim show nearli best hope nphard approxim minimum makespan within factor better 4 3 ident machin network hard result contrast sharpli combinatori scenario polynomi approxim scheme 10 2approxim algorithm comput intens consid simpl strategi typic work well parallel machin schedul anoth sharp contrast parallel machin schedul show perform strategi degrad significantli network set prove anomega log log lower bound perform algorithm also show greedi algorithm perform guarante name log log log final consid variant problem job origin also destin give 5 approxim algorithm 21 2approxim algorithm makespan section describ 2approxim algorithm minim makespan set job schedul network unrel machin bound ident machin follow special case let u instanc unrel network schedul problem optim schedul length assum know show construct schedul length 2d convert via binari search 2approxim algorithm problem given 10 optim schedul length know sum time job spend travel process bound thu job j j may run machin optim schedul word length optim schedul alter allow job j j run machin 1 satisfi formal given job j j denot qj j set machin satisfi 1 restrict j j run machin qj j length optim schedul remain unchang combinatori unrel machin schedul problem z follow optim schedul unrel network schedul problem length optim solut unrel parallel machin schedul problem 2 use 2approxim algorithm lenstra shmoy tardo 17 assign job machin follow theorem easili infer 17 theorem 21 lenstra shmoy tardo 17 let z unrel parallel machin schedul problem optim schedul length exist polynomialtim algorithm find schedul length 2d properti job start time theorem 22 exist polynomialtim 2approxim algorithm minim makespan unrel network schedul problem proof given instanc unrel network schedul problem shortest schedul length form unrel parallel machin schedul problem z defin 2 use algorithm 17 produc schedul length 2d schedul immedi correspond network schedul job may schedul run releas date howev alloc unit time send job machin run alloc 2d unit time run schedul immedi get schedul length 3d network problem care creat schedul length 2d network problem schedul machin assign set job let js j sum process time job let max job largest process time machin call process time p max theorem 21 fact last job run machin longer longest job run know js denot set job form schedul machin run job max time job 0 schedul job assign machin clearli finish time 2d remain shown job rout proper machin time need run job must start time condit 1 2 guarante arriv time remain job need arriv time condit 1 2 guarante well thu produc valid schedul length 2d observ approach fairli gener appli problem character condit 2 consid exampl follow gener problem call gener network schedul cost addit usual unrel network schedul problem time take job j j travel edg depend endpoint edg also job cost c ij associ process job j j machin given schedul job j j run machin j cost schedul given target cost c defin sc minimum length schedul cost c theorem 23 given target cost c polynomi time find schedul gener network schedul problem makespan 2sc cost c schedul cost c exist proof use similar techniqu use theorem 22 first modifi condit 1 ddelta delta depend job well use gener algorithm lenstra shmoy tardo unrel machin schedul due shmoy tardo 25 given target cost c find schedul cost c length twice shortest schedul cost c schedul return also properti job start time proof theorem 22 goe use algorithm place algorithm 17 22 nonapproxim theorem 24 npcomplet determin instanc ident network schedul problem schedul length 3 even network proof see appendix corollari 25 exist ffapproxim algorithm network schedul problem even network proof algorithm ff 43 would give exact answer problem schedul length 3 sinc approxim 4 would high rel error hard see via match techniqu polynomialtim decid whether schedul length 2 show case machin network unrel lenstra shmoy tardo prove npcomplet determin schedul length 2 tradit combinatori unrel machin model 17 allow multipl machin one node proof prove theorem 26 zero length edg allow ie machin forc differ network node proof work give differ proof hard includ paper theorem 26 exist ffapproxim algorithm unrel network schedul problem ff 32 unless even network 23 naiv strategi algorithm section 21 give reason tight bound approxim schedul length although algorithm run polynomi time may rather slow 21 thu explor whether simpler strategi might also yield good approxim natur candid busi strategi construct busi schedul time idl machin idl job j j job j j start time busi strategi variant analyz larg number schedul problem see 15 quit effect mani combinatori ident machin schedul graham show strategi yield section analyz effect busi schedul ident machin network schedul part interest analysi lie reveal rel hard schedul without underli network name introduct underli network make simpl strategi much less effect problem 231 lower bound construct famili instanc network schedul problem demonstr instanc busi schedul omegagamma log log longer shortest schedul instanc network e consist level node level node node level connect everi node level edg length 1 machin level ae job size 1 time 0 machin level initi receiv job optim schedul length instanc 2 achiev machin level take exactli one job level gamma 1 call instanc see figur 2 main idea lower bound construct busi schedul machin alway process job origin job avail greedi prevent schedul make much larger assign job machin time 2 job assign machin one level away construct busi schedul use algorithm b step construct subschedul time step phase 1 machin process one job origin job remain call job local machin r r r r r level 1 level 2 level l figur 2 lower bound instanc theorem 28 circl repres processor number insid circl number job origin processor time 0 level complet connect optim schedul length 2 achiev shift job uniqu processor one level right phase 2 consid bipartit graph g one vertex repres job unprocess phase 1 time contain one vertex repres machin job assign phase 1 step x 2 job x origin distanc gamma 1 machin complet construct time process job machin base maximum match g clear busi appli algorithm b instanc behavior follow welldefin pattern phase 2 step 2 unprocess job origin level process distinct processor level phase 2 step 3 unprocess job origin level process machin level continu step addit gamma 1 level pass job higher level job process continu either level 1 pass job process job character behavior algorithm formal follow lemma lemma 27 let ji number local job processor still unprocess phase 2 step let levi level number processor time 2 ae proof prove lemma induct phase 2 step 2 edg graph g connect level gamma 1 ae gamma1 node level ae gamma2 ae gamma 1 remain job local machin level gamma 1 match assign unprocess job level level machin level 1 process local job phase 1 result neighbor machin level 1 busi phase 1 process job local machin phase 2 number local job machin therefor decreas 1 thu base case hold assum lemma hold greater b well show ji 0 level bx ae bxgamma1 processor level ae delta ae bxgammat 0 local job remain 0 2 enough machin level b x process remain job local level b anoth highestnumb level local job complet time 0 thu time 0 sinc assum suffici larg initi workload processor level induct hypothesi machin level less distanc local job remain time assign local job phase 1 step 0 therefor machin levi job higher level ji 0 depend rel valu ae either machin level 1 process job origin job process machin highernumb level balanc two case get follow theorem theorem 28 famili instanc ident machin network schedul problem defin exist busi schedul length log log longer optim proof first case 3 appli level 1 1 inequ hold 2 hold 2 schedul length 2 ae 2 job level 1 total process level take ae time therefor makespan min ae given total number machin calcul reveal minc ae maxim log log thu busi schedul length log log longer optim note exampl show sever natur variant busi strategi schedul job machin finish first schedul job closest avail processor also perform poorli 232 upper bound contrast lower bound previou subsect prove busi schedul qualiti given instanc network schedul problem defin c length shortest schedul c length schedul produc algorithm caus confus drop use notat c definit 29 consid busi schedul instanc ident machin network schedul problem let p j number unit job j j remain process schedul time w total work remain process schedul time lemma 210 w ic proof partit schedul consecut block happen block schedul optim schedul length c instanc consid job j j start time c schedul let j machin job j j process schedul mean block b 1 machin j busi unit time job j j slot schedul period time job j j process machin j schedul henc everi job j j start block equal amount uniqu work identifi process block b 1 impli wc max success applic argument yield w ic prove lemma 2 obtain stronger bound w ic increas amount process work identifi unstart job choos 3 consid job j j unstart schedul start block b i1 name time ic assum sake simplic everi block b k schedul one job process job j j slot time job j j would process block b k schedul assum also job exactli size job j multipl job process argument essenti let j r job took job j j slot block b r r 2 show j j could process j r slot block b 2 figur 232 illustr network structur use argument assum job j j origin machin job j r origin machin job j j process machin j schedul dm sinc job j j process machin j schedul dm j rc sinc job j r process job j j slot block b r thu dm consequ j j could run job j r slot block b focu block b sinc j j process schedul busi job must process job j r slot block identifi work job j note work ever identifi one job consid igamma2 differ job process j j slot block consid job process slot b see job j j unstart time ic uniqu identifi unit work process block r r figur 3 j r take j j slot b r machin j j origin distanc r r machin j r run thu j j could run j r slot block slot full block b job j j would start one includ work process job j j slot block b obtain corollari 211 time ic max m2i machin complet busi proof w 0 mc therefor lemma 210 w ic machin complet busi time ic c work time therefor m2i machin complet busi get stop point recurr requir follow lemma lemma 212 busi schedul time remain unprocess job origin machin schedul longer let one machin remain local job let w amount work machin done machin optim schedul clearli equal amount work origin machin work left origin machin machin process least w work machin next c step c step work origin machin done finish otherwis machin process less w work time mean work take therefor c step job origin machin start job longer c suffic finish job start readi prove upper bound theorem 213 let busi schedul algorithm instanc ident machin network schedul problem c log log c proof machin ever fall idl local work must start otherwis would process remain local work thu corollari 211 lg time number processor local work remain reduc 1 lemma 212 number processor remain local work one constant number extra block suffic finish 24 schedul origin destin subsect consid variant unrel machin network schedul problem job process destin machin must travel specif ical addit origin machin job j j also termin machin j begin machin travel distanc dm machin j machin get process proce travel dm j unit time machin j call problem pointtopoint schedul problem theorem 214 exist polynomialtim 5 approxim algorithm minim makespan pointtopoint schedul problem proof construct unrel machin schedul problem proof theorem 22 set condit job j j run machin depend time j j get time process time proceed destin machin thu character job j j abl run machin optim schedul given job j j defin qj j set machin satisfi 4 form combinatori unrel machin schedul problem follow approxim solv problem use 17 obtain assign job machin pick machin let j set job assign machin theorem 21 know sum process time job j except longest partit set job j three group place job lowest number group appropri 1 j 0 contain job j longest process time 2 j 1 contain job dm 3 j 2 contain job dm sum process time job group j k 2 note alway schedul j 1 block consecut time step call b first pj 1 step taken job j 1 last pj 2 step taken job j 2 note may idl time interior block consid two possibl schedul strategi base rel size pj 1 case 1pj 1 case first run long job j 0 condit 4 finish time run block b time 2d sinc pj 1 job j 1 finish time 3d2 condit 4 reach destin time 5d2 definit j 2 job j schedul complet process time 2d arriv destin time 5d2 case 2 pj 1 first run block b time d2 3d2 start long job j 0 time 3d2 condit 4 arriv destin time 5d2 sinc pj 2 machin need start process job j 2 henc guarante arriv machin time definit j 1 job avail time d2 straightforward condit 4 job arriv destin time 5d2 also show analysi algorithm tight algorithm assign job processor use linear program defin 17 use process time specifi equat 5 let length optim schedul construct instanc schedul length least 52d gamma 1 consid set k1 job particular machin specifi largest job size origin destin machin specifi k job size dk distanc origin destin machin combinatori unrel machin algorithm may certainli assign job clear schedul adopt machin compet time least 5 2k 3 averag complet time 31 background turn network schedul problem object minim averag complet time given schedul let c j time job j j finish run averag complet time 1 whose minim equival minim throughout section assum without loss gener n note section 1 network schedul model character set set releas date r ij j j avail time r ij note gener tradit notion releas date r refer latter tradit releas date unmodifi phrase releas date refer gener r ij minim averag complet time job releas date polynomialtim solvabl 3 12 even unrel machin solut base bipartit match formul one side bipartit job side machin posit pair match j j correspond schedul j j kthfromlast posit edg weight kp ij j j contribut averag complet time j j kth last releas date incorpor schedul model seem difficult gener formul clearli gener precis arbitrari releas date sinc even one machin version problem minim averag complet time job releas date strongli nphard 3 intuit even approxim gener formul seem difficult sinc job avail time 0 abil j j occupi posit depend job preced releas date associ network structur contain tradit releas date subclass even one machin npcomplet network schedul problem follow immedi combinatori hard result howev surprisingli minim averag complet time network schedul problem npcomplet theorem 31 network schedul problem object minimum averag complet time npcomplet even machin ident edg length 1 proof see appendix follow develop approxim algorithm gener form problem follow basic idea util bipartit match formul howev need explicitli incorpor time formul addit rest section consid gener optim criterion averag weight complet time j j associ weight w j goal minim algorithm handl gener case addit allow nm releas date r ij arbitrari necessarili deriv network structur 32 units job consid first special case units job theorem 32 exist polynomialtim algorithm schedul units job network ident machin object minim averag weight complet time proof reduc problem minimumweight bipartit match one side bipartit node job j j 1 j n side node describ edg includ j j avail time inclus edg match repres schedul j j time 1 releas date includ model exclud edg avail time determin necessari set observ advantag unforc idl time sinc job one unit long reason make wait job higher weight releas clear therefor set would suffic sinc job would need schedul n time later releas date reduc omit detail sake breviti exclud edg give job j j enough time travel machin run destin machin j prove similar theorem pointtopoint schedul problem defin section 24 theorem 33 exist polynomialtim algorithm solv pointtopoint schedul problem object minim averag weight complet time units job 33 polynomials job turn difficult set job differ size unrel machin minim averag weight complet time set strongli nphard mani special case exampl minim averag complet time job releas date one machin strongli nphard 16 approxim algorithm known special case say noth parallel ident unrel machin weight complet time releas date name job avail time 0 minim averag weight complet time nphard parallel ident machin small constant factor approxim algorithm known problem 14 approxim algorithm known gener case machin differ speed unrel machin introduc techniqu yield first approxim algorithm sever problem well discuss section 35 approxim algorithm minimum averag complet time begin formul schedul problem hypergraph match problem set vertic union two set j set hyperedg denot f j contain n vertic j j one job contain mt vertic upper bound number time unit need schedul instanc time unit rang g node machin time pair denot node correspond machin time hyperedg e 2 f repres schedul job j j machin time 1 2 includ node j cost edg e denot c e weight complet time job j j schedul manner repres e one edg hypergraph feasibl schedul job machin exclud edg would violat releas date constraint problem find minimum cost match hypergraph phrase follow integ program use decis variabl x e 2 f0 1g denot whether hyperedg e match minim e subject x it2 two consider suggest formul might use formul polynomi size input size addit follow theorem suggest calcul approxim solut integ program may difficult theorem 34 consid integ program form deriv instanc network schedul problem ident machin c e allow arbitrari exist polynomialtim algorithm approxim within factor unless proof arbitrari instanc network schedul problem construct hypergraph match problem edg weight w n correspond job complet later time 3 give edg weight 1 schedul length 3 minimum weight hypergraph match weight n otherwis weight least w therefor ffapproxim algorithm ff w would give polynomialtim algorithm decid schedul length 3 network schedul problem theorem 24 would impli order overcom obstacl need seek differ kind approxim hypergraph match problem typic approxim solut feasibl solut ie one satisfi constraint whose object valu best possibl look differ type solut one satisfi relax set constraint show turn solut satisfi relax set constraint schedul network schedul problem introduc bound amount error qualiti approxim assum p max n 3 impli size program polynomi input size later show dispens assumpt size p max via number round scale techniqu begin turn object function constraint use standard techniqu appli bisect search valu object function henc remaind section assum c optim valu integ program given construct approxim solut follow integ linear program j it2 e integ program pack integ program shown raghavan 22 raghavan thompson 23 plotkin shmoy tardo 21 possibl find provabl good approxim solut polynomi time briefli review approach 21 yield best run time plotkin shmoy tardo 21 consid follow gener problem pack problem 9x 2 p ax b theta n nonneg matrix b 0 p convex set posit orthant r n demonstr fast algorithm yield approxim optim integr solut linear program algorithm requir fast subroutin solv follow problem separ problem given mdimension vector 0 find x 2 p subroutin solv problem call separ subroutin approxim solut pack problem found consid relax problem approxim minimum true valu character slack inequ constraint goal minim slack integ program easili put form pack problem equal constraint 7 defin polytop p inequ constraint 89 make ax b qualiti integr solut obtain depend width p rel ax b defin also depend smallest integ solut return separ routin guarante integr multipl 1 appli equat 10 comput ae polytop p defin 7 yield valu least n creat match feasibl schedul whose cost averag complet time much greater c optim averag complet time fact mani pack integ program consid 21 also first formul larg width order overcom obstacl 21 gave sever techniqu reduc width integ linear program discuss use one techniqu name decompos polytop n lowerdimension polytop smaller width intuit nonzero variabl equat form 7 associ one particular job thu abl decompos polytop n polytop one job abl optim individu polytop use inequ constraint 8 9 describ relationship differ job proced detail say polytop p decompos product n polytop coordin vector x partit polytop decompos way solv separ problem polytop p l appli theorem 21 give approxim optim solut polynomi time particular let optimum valu j follow theorem special theorem 211 21 problem describ qualiti integr solut obtain integ program theorem 35 21 let ae l width p l let fl number constraint ax b let log fl given polynomialtim separ subroutin p l exist polynomialtim algorithm j give integr solut show reformul j abl appli theorem polytop inde decompos n differ polytop equal constraint includ j j order keep width p j small also includ definit p j constraint x edg e includ j j c e c increas optim valu integ program integr new constraint appropri polytop p j decompos consist compon x repres edg includ j j word p l defin j l 2e e yield follow relax l subject it2 e appli theorem 35 must 1 demonstr polynomialtim separ subroutin ae fl decomposit p n separ polytop make task much easier separ subroutin must find x l 2 p l minim cx l howev sinc vector 1 eth compon 0 compon p l e j l 2 e c e c separ routin reduc mere find minimum compon c e 0 c return vector 1 posit e 0 0 everywher els immedi consequ 1 recal well assumpt p max n 3 impli fl upper bound polynomi n hard see ae 1 therefor a log fla logflnd employ binari search c knowledg optim solut obtain invalid schedul mani job schedul one time p max polynomi n polynomialtim algorithm therefor proven follow lemma lemma 36 let c solut integ program assum jm j bound mn 4 exist polynomialtim algorithm produc solut x j2e x it2 x e x x relax solut valid schedul sinc olog n job schedul one time howev convert valid schedul use follow lemma lemma 37 consid invalid schedul set job releas date unrel parallel machin job assign machin time w averag weight complet time exist schedul averag weight complet time w one job assign machin time proof consid job j j schedul let complet time c schedul job machin order complet time never start one releas date result schedul 1 j j start earlier releas date 2 j j finish time c statement 1 true design algorithm statement 2 true sinc c work job complet later c schedul job run simultan schedul run backtoback intermedi idl time expand schedul therefor job j j start time c complet time c combin last two lemma observ p max n 3 impli jm j mn 4 yield follow theorem theorem 38 polynomialtim olog 2 napproxim algorithm minim averag weight complet time set job machinevari releas date unrel machin assumpt maximum job size bound p 34 larg job sinc p ij input binari gener need polynomi n techniqu last section appli directli instanc sinc would yield superpolynomi size formul therefor must find way handl larg job without impact significantli qualiti solut standard techniqu combinatori schedul partit job set larg job set small job schedul larg job scale polynomi bound rang schedul small job arbitrarili show net contribut signific see eg 24 minim averag weight complet time howev must care sinc small job may larg weight schedul arbitrarili employ sever step increas averag weight complet time small constant factor care could reduc constant introduc step howev sinc overal bound olog 2 n dispens precis sake clariti exposit basic idea character job minimum valu taken machin releas date process time machin group job togeth base size minimum job group scale polynomi size thu construct schedul scale version group scale schedul back correct round error show affect qualiti approxim constant factor appli lemma 39 see show makespan kept short simultan result schedul schedul consecut howev sinc kept makespan grow much upper bound start time subsequ schedul thu show net disturb initi schedul latter schedul minim proceed greater detail let mj g note n nonempti j one n job employ follow lemma order keep makespan grow larg lemma 39 schedul j k convert polynomi time schedul makespan 2n k1 c proof remov job complet later time n k1 start time n k1 schedul arbitrarili machin run quickli take n k1 time therefor reschedul job j j satisfi c turn problem schedul j l bound guarante averag complet time lemma 310 exist olog 2 napproxim algorithm schedul j l addit schedul j l makespan 2n l1 proof let algorithm refer theorem 38 use find approxim optim solut l j l appli directli j l sinc size job involv may exceed n 3 appli scale version j l j j j 2 j l set p 0 c r 0 c note least one machin job j j p 0 use obtain approxim solut scale version j l averag weight complet time w although p 0 may still larg lemma 39 indic restrict hypergraph formul construct allow complet time later time affect qualiti approxim factor 2 therefor jm j number machin time pair omn 3 note p 0 ij may 0 still import includ edg hypergraph formul job size 0 argu interpret solut scale instanc solut origin instanc j l degrad qualiti approxim constant factor convers scale instanc origin instanc carri multipli p ij impact qualiti approxim ad r ij p ij residu amount lost due floor oper addit residu amount releas date contribut total n lgamma1 time makespan schedul sinc jr therefor entir contribut makespan bound n theta n similar argument entir contribut residu amount process time makespan bound n lgamma1 convers p ij add 2n lgamma1 makespan schedul j l howev n lgamma1 lower bound complet time job j l therefor even addit time ad complet time everi job restor residu amount r ij p ij degrad qualiti approxim averag complet time constant factor final satisfi makespan constraint appli lemma 39 construct two schedul e consecut schedul e consecut schedul sake clariti schedul time length 2n i1 dedic even job lemma 311 let j set job schedul j e set job schedul e averag weight complet time within factor olog 2 n best possibl similarli e j e proof subschedul set j schedul e begin time sinc j schedul j igamma2 j makespan j l 2n l1 sinc n igamma1 lower bound complet time job j combin schedul e job complet within small constant factor complet time combin e superimpos time slot creat infeas schedul sum complet time sum complet time may two job schedul simultan use lemma 37 combin e obtain schedul ff job whose averag weight complet time within factor olog 2 n optim theorem 312 polynomialtim olog 2 napproxim algorithm minim averag weight complet time set job machinevari releas date unrel machin 35 schedul period connect hypergraph formul schedul problem model timevari connect job machin eg job process certain time machin section show appli techniqu schedul problem period connect modest assumpt length period job size definit 313 period schedul problem defin n job unrel machin period p time unit p specif job allow run machin time theorem 314 let instanc period schedul problem p max polynomi n let optimum makespan l exist polynomialtim algorithm deliv schedul makespan olog nl proof assum l known advanc use binari search complet algorithm construct integ program it2 lg includ edg formul valid respect connect condit use theorem 38 produc relax solut satisfi j2e x it2 x x let length relax schedul l l l construct valid schedul length concaten olog n block length l end block wait start next period begin next block henc obtain overal bound olog nl note assum entir connect pattern p input explicitli input compress form must assum p polynomi n one motiv problem domain satellit commun system 18 26 one given set site earth set satellitesin earth orbit site gener sequenc commun request request potenti differ durat may requir commun one satellit site transmit certain satellit certain time base satellit orbit connect pattern commun opportun period due orbit natur satellit goal satisfi commun request quickli possibl use hypergraph formul techniqu give olog napproxim algorithm problem assumpt p j bound polynomi sinc round techniqu gener set acknowledg grate phil klein sever help discuss earli research david shmoy sever help discuss especi upper bound averag complet time david peleg baruch awerbuch explain offlin approxim algorithm us perri fizzano read earlier draft paper r lower bound competit ratio mobil user track distribut job schedul competit distribut job schedul determinist load balanc comput network job schedul ring bound certain multiprocessor anomali bound multiprocess anomali bound naiv multipl machin schedul releas time deadlin approxim scheme constrain schedul problem use dual approxim algorithm schedul problem theoret practic result polynomi approxim scheme machin schedul uniform processor use dual approxim approach minim averag flow time parallel machin reduc among combinatori problem worst case bound lrf schedul mean weight flowtim problem rinnooy kan rinnooy kan mobil satellit commun system toward global person commun toward architectureindepend analysi parallel algo rithm privat commun fast approxim algorithm fraction pack cover problem probabilist construct determinist algorithm approxim pack integ program random round techniqu provabl good algorithm algorithm proof improv approxim algorithm shop schedul problem schedul parallel machin cost mobil satellit servic travel tr ctr dekel tsur improv schedul ring journal parallel distribut comput v67 n5 p531535 may 2007 cynthia phillip r n uma joel wein offlin admiss control gener schedul problem proceed eleventh annual acmsiam symposium discret algorithm p879888 januari 0911 2000 san francisco california unit state muthukrishnan rajmohan rajaraman adversari model distribut dynam load balanc proceed tenth annual acm symposium parallel algorithm architectur p4754 june 28juli 02 1998 puerto vallarta mexico martin skutella convex quadrat semidefinit program relax schedul journal acm jacm v48 n2 p206242 march 2001