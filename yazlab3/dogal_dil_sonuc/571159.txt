toward primit higher order calculu broadcast system ethernetstyl broadcast pervas style comput communicationin styleth medium singl nameless channelprevi work model system propos rst order process calculu call cbsin paper propos fundament differ calculu call hobscompar cb hob 1 higher order rather first order 2 support dynam subsystem encapsul rather staticand requir underli languag turingcomplet move higher order calculu key increas express primit calculu allevi need underli languag move howev rais need significantli machineri establish basic properti new calculusthi paper develop basic theori hob present two exampl program illustr program languag key technic underpin adapt how method hob prove bisimul congruenc result hob shown emb lazi calculu b introduct ethernetstyl broadcast pervas style comput commun bare medium provid ethernet singl nameless channel typic sophist program idiom pointtopoint commun name channel built top ethernet use ethernet allow programm make better use bandwidth exploit broadcast power natur program primit paper propos primit higher order calculu broadcast system hob model mani import featur bare ethernet develop basic oper properti 11 basic characterist ethernet basic abstract hob inspir ethernet protocol medium singl nameless channel node broadcast messag instantan deliv node messag need specifi either transmitt receiv transmitt messag decid transmit receiv consum whatev net time one messag transmit time collis detect resolut provid protocol hob oper semant abstract view two node tri transmit simultan one chosen arbitrarili node treat equal posit net matter hob rene extend previous propos system call calculu broadcast system cb 16 although hob cb model ethernet two system take fundament dierent approach subsystem encapsul illustr dierenc take closer look ethernet address issu 12 model ethernetstyl encapsul whenev basic mode commun broadcast encapsul subsystem absolut necess ethernet bridg use regul commun ethernet subsystem bridg stop translat messag cross local transmiss either side unaect bridg either side bridg seen subsystem cb model bridg pair function lter translat messag go direct across bridg intuit appeal model suitabl mani applic limit 1 cb reli complet separ underli lan guag particular cb rst order process cal culu mean messag distinct pro cess separ comput rich languag need express function pair 2 cb provid static model ethernet architec ture exampl real bridg chang rout behaviour cb provid neither chang mobil system might cross bridg 3 broadcast cross bridg cb instantli unrealist real bridg usual buer messag hob address limit support rstclass transmitt process provid novel encapsul primit combin featur hob yield turingcomplet languag sucient express translat limit 1 allow us model dynam architectur lim itat 2 new encapsul primit allow us model buer messag consum immedi limit 3 13 problem work higher order calculu come cost develop theori hob particular wherea denit behaviour equival rst order languag requir exact match transmit me sage denit discrimin messag involv process nonrst order valu thu behaviour equival must requir transmiss equival messag unfortun syntact small chang notion equival introduc signic complex proof basic properti calculu particu lar standard techniqu prove bisimul congruenc 11 go key diculti seem standard techniqu use directli show substitut equival process variabl preserv equival problem detail section 41 14 contribut organis main contribut paper design hob formal veric properti present syntax semant hob sec tion 2 give formal denit applic equival hob section 3 key step technic develop use how method 10 establish applic equival hob congruenc section 4 typic treatment concurr calculi also introduc notion weak equival essenti develop use develop notion equival section 5 applic result section 6 use show hob emb lazi calculu 1 turn allow us dene variou basic datatyp encod reli fact hob higher order possibl encod cb calculu 12 discuss brie detail found extend version paper 14 two exampl one deal associ broadcast 2 deal databas consist 2 present section 7 result lay groundwork appli theoret investig hob futur work includ develop implement compil ethernet internet protocol compar express power differ primit calculi concurr conclud paper discuss relat calculi futur work sec tion 8 remark knowledg assum cb process calculu formal develop paper selfcontain reader familiar cc 11 choc 18 cb roughli hob cb choc cc extend version paper avail onlin 14 give detail denit proof addit result 2 syntax semant hob eleven process construct formal dene next subsect inform mean follow 0 process say noth ignor everyth hear x variabl name scope variabl substitut essenti calculu receiv messag q becom p1 qx p1 p2 say p1 becom p2 ignor everyth hear becom p3 except hear someth say q whereupon becom p1 qx p1 jp2 parallel composit p1 p2 interact environ p1 jp2 interact one process countabl set name groundterm guard choic composit buer f 2 f p p feed buer messag action 2 context syntax index set freevari l figur 1 syntax inlter construct behav p1 except incom messag ltere p2 inlter asymmetr p2 hear environ p1 speak nameless privat channel connect p2 p1 construct repres lter wait incom messag process p1 progress independ repres inlter busi state process p1 suspend p2 process input messag later p2 send process messag p1 p1 resum outlter construct behav p2 except outgo messag p2 ltere p1 outlter also asymmetr p2 hear environ p1 speak nameless privat channel connect p2 p1 ltere construct repres outlter passiv state wait p2 produc output messag process p2 progress independ repres outlter busi state process p3 suspend p1 process output messag process p1 send messag envi ronment p3 resum case process p1 fail process messag environ send messag outlter rollback previou state repres process p2 feed construct consist p1 fed p2 later consumpt incom me sage speak environ p1 consum p2 thu hob built around syntax semant cb 16 without need underli languag instead requir express achiev ad abil commun process higherord well feed ltere construct 21 formal syntax semant hob syntax hob present figur 1 term treat equival class convert term set pl set process term free variabl set l exampl p set close term remark 1 notat name rang syntact categori given figur 1 thu process term alway p q r natur number subscript indic subterm p1 subterm p prime mark result transit transit p q figur 2 dene semant term transit relat p p freevari substitut context lling dene usual see 14 detail semant given label transit label form p p p process former broadcast speech transmiss latter hear recept transmiss consist interpret autonom action recept control environ process alway readi hear anyth transmiss absorb recept parallel composit encapsul ltere receiv transmit silenc nil input xp1 q output p1 p2 q choic compos outfilt intern figur 2 semant stop recept hide transmiss discuss see 16 lter construct requir care design one diculti lter abl hide messag tech nical mean lter abl produc silent messag result silenc messag process construct therefor lter produc me senger process result messeng process send actual result ltration discard way messeng process produc messag process silent transit relat fail function rst two argument composit rule allow arbitrari exchang messag subprocess choic construct introduc nondetermin sinc broadcast collis resolv allow left subprocess parallel composit broadcast howev calculu determinist input input enabl easili shown induct deriv p discuss design decis refer reader extend version paper 14 3 applic bisimul surpris notion simul bisimul hob develop use techniqu channelbas calculi 11 transit relat carri process label notion higher order simul bisimul account structur process use follow notion messag extens conveni relat process term messag extens r dene follow rule tauext msgext thomsen notion applic higher order simul 18 suitabl strong simul hob take nonground higher order natur messag account applic simul relat r p p close process term strong higher applic simul written sr 1 2 use standard notion bisimul definit 3 applic bisimul relat r p p close process term applic bisimul written br sr sr 1 hold use standard techniqu show ident relat close process simul bisimula tion properti simul bisimul spectiv preserv relat composit union also bisimul properti preserv convers two close process p q equival written p q exist bisimul relat r p q 2 r word applic equival union bisimul relat definit 4 applic equival applic equival relat p p dene union bisimul relat rpp proposit 1 1 b bisimul 2 equival exiv symmetr transit calculu enjoy follow basic properti proposit 2 let input 1 x0 0 parallel composit 1 pj0 p 2 p1 jp2 p2 jp1 3 p1 jp2 jp3 p1 jp2jp3 filter 1 2 p1 p2 3 xp 0 0 4 hxp1 choic 1 2 hxp1p2 p3 ijxp4 hxp1 jp4 p2 p3 jp4 p2 xi 4 equival congruenc section use how method 10 show applic equival relat congruenc motiv need how proof method start show diculti standard proof techniqu 11 present adapt how basic develop hob conclud section appli adapt applic equival equival congruenc two equival term distinguish context equival relat process term r congruenc comp nil p1 r q1 p2 r q2 r q1 q2 comp p1 r q1 p2 r q2 comp infilt rx comp var p1 r q1 p2 r q2 r q1 jq2 comp comp p1 r q1 p2 r q2 r q1 q2 comp infilterb comp p1 r q1 p2 r q2 r q1 q2 comp feed p1 r q1 p2 r q2 comp outfilt comp choic p1 r q1 p2 r q2 p3 r q3 comp outfilteri figur 3 compat renement 41 difficulti standard proof method notion compat renement b r allow us concis express case analysi outermost syntact constructor definit 6 compat refin let r p p relat process term compat rene ment b r dene rule figur 3 standard congruenc proof method show induct syntax equival contain compat renement b standard method prove congruenc center around prove follow lemma lemma 1 let r p p equival relat process term r congruenc b r r standard proof show b proce case analysi sever case simpl nil 0 variabl output x case feed slightli complic case problemat especi composit j sinc requir substitut equival substitut dene usual way definit 7 substitut let r p p relat process term r call substitut follow rule hold p1 p2x r q1 q2 x rel subst hob standard induct proof substitut equival requir equival congruenc stuck attempt prove substitut simultan work either sinc term size increas make use induct syntax imposs similar problem seem common higher order calculi see exampl 18 7 1 42 how basic develop howe 10 propos gener method prove certain equival base bisimul congruenc follow similar adapt how method 9 7 present adapt hob along necessari technic lemma use standard denit restrict r relat r close process cf 14 extens relat open term also standard one definit 8 open extens let r p p relat process term open extens dene follow rule 8 key part how method denit candid relat r definit 9 candid relat let r p p relat process term candid relat dene least relat satis rule cand denit candid relat r facilit simultan induct proof syntax reduct note denit compat renement b r involv case analysi syntax inlin compat renement b r denit candid relat would reveal induct use candid relat r relev properti candid relat r sum lemma 2 let r p p preorder exiv transit relat close process term follow rule valid cand ref p r q cand sim r q cand cong p r r r r q cand right p1 p2x r q1 q2 x cand subst corollari 1 r r immedi consequ rule cand subst rule cand ref eq c r c r l n figur 4 transmit lemma lemma 3 let r p p equival relat r symmetr next lemma say two candidaterel process close term deriv involv close term last deriv step lemma 4 close middl r r r q 43 congruenc equival relat goal twofold rst show candid relat coincid open extens second use fact complet congruenc proof first x underli relat r alreadi know lemma 2 rule cand sim show convers begin prove close restrict candid relat simul requir show two simul condit definit hold split proof two lemma lemma 5 receiv lemma 6 transmit prove respect condi tion similarli standard proof parallel composit case dicult actual requir stronger receiv condit hold rst lemma receiv prove restrict rst condit second lemma transmit prove second condit make use receiv lemma lemma 5 receiv let p q 2 p two close process p q 8m n proof rel straightforward proof induct height infer transit interest case case rule xp1 q p1 qx make use substitut candid relat lemma 6 transmit let p q 2 p two close process p q 8m n 3 proof first note lemma 4 close middl also denit equival fact r q close process know remain prove 8m join statement 5 4 use lemma 2 rule cand right infer p 0 q 0 n give us result figur 4 show idea pictori normal line respect dot line univers respect existenti quanti prove statement 5 proceed induct height infer transit describ interest case parallel composit compos two parallel composit rule sinc rule symmetr show proof one know p p1 jp2 four relat subprocess p1 r1 p2 r2 suppos process p made follow 0sinc candid relat contain compat renement enough show subprocess r mimic correspond subprocess p r1 use induct hypothesi get r1 l r 0and p 0 r 0 l r2 would use simul condit would get 0 would allow us show r correspond transit sinc infer transit requir label point use stronger receiv condit lemma 5 get precis need case similar simpler sinc requir use lemma 5 receiv two lemma establish restrict candid relat simul also use lemma 3 get symmetr mean bisimul conclud section readi state prove main proposit proposit 3 congruenc proof first show rule cand sim know two lemma lemma 3 know bisimul impli sinc open extens monoton corollari 1 get equival equal candid relat contain compat renement c lemma 2 rule cand cong lemma 1 impli congruenc 5 weak bisimul mani purpos strong applic equival ne sensit number silent transit perform process term silent transit repres local comput mani case desir analys commun behaviour process term ignor intermedi local comput exampl strong applic equival distinguish follow two term commun behaviour equip weak transit relat tion 10 dene weak simul weak bisimul standard way11 weak equival also dene standard way union weak bisimul relat strong equival prove weak bisimul equival proposit 4 moreov techniqu use prove strong equival congruenc work also equival proposit 5 exiv transit closur weak transit dene proposit 4 1 weak bisimul 2 equival proposit 5 congruenc proof proof follow proposit 3 interest dierenc induct hypothesi use exampl case parallel composit use induct hypothesi get appropri subterm perform weak transit interleav transit possibl perform action interleav possibl sinc everi process receiv without chang process see rule silenc figur 2 express embed figur 5 syntax semant embed lazi calculu 6 embed encod drive criterion design hob simplic resembl ethernet long term technic goal use simpl uniform calculu interpret sophist propos broadcast calculi bcalculu 5 hob interpret handshak calculi calculu calculu group 3 cc could also provid mean studi express power calculi section present embed lazi calculu consequ brie discuss possibl encod cb calculu 61 embed calculu syntax semant lazi calculu along direct translat hob present figur 5 function e e smallstep semant languag use weak equival prove analog equival hob hold simpl proof proposit use weak bisimul techniqu found extend version paper 14 proposit 6 proposit 7 sound let standard calculu notion observ equival abl emb calculu justi explicit construct hob either recurs datatyp calculu recurs combin hob express recurs deriv construct rec dene left recurs construct expect behaviour state right rec xp wxp wxp rec xp prec xpx point view calculu signic embed possibl particular broadcast view impur technic comput eect 13 yet presenc eect invalid rule view posit indic design hob 62 encod concurr calculi cb precursor develop hob natur ask whether hob interpret cb first cb assum underli languag data type hob provid form embed lazi calculu use standard church data encod second cb translat construct present hob interpret use special parametris queue con struct queue construct togeth paramet translat function use oneway translat link two process via lter construct give cbsstyle translat decoupl translat use church numer encod channel name easili interpret calculu without new oper devis sound encod full calculu challeng sinc sever technic diculti exampl explicit convers solv discuss propos solut see extend version paper 14 sound proof encod ongo work 7 exampl hob equip rel highlevel abstract broadcast commun hob includ lazi calculu extend full function languag give us tool experi broadcast algorithm theori develop hope hob also tool formal reason algorithm section present implement coordin formal call associ broadcast 2 togeth implement databas consist algorithm express formal compar previou implement algorithm see exampl 6 hob implement gener retain full express power associ broadcast allow straightforward represent associ broadcast algorithm hob interpret implement ocaml addi tion also use ocamllik syntax hob function term datatyp use juxtaposit instead feed construct symbol purpos paper reader treat type inform simpli comment 71 associ broadcast bayerdor 2 describ coordin formal call associ broadcast formal use broadcast commun primit formal object particip commun prole prole seen set attributevalu pair special subset pair contain valu function modifi prole subset divid function use broadcast use local sinc associ broadcast coordin formal object local connect extern system invok oper system convers extern system invok local function object commun object proce follow broadcast messag contain specic set cipient oper recipi execut specic rstorder formula examin prole oper call one function modifi prole messag broadcast object receiv object includ sender object evalu formula prole determin whether execut oper oper execut prole satis formula gener part associ broadcast repres call rt run time system take care commun protocol follow basic denit need implement rt hob type oper messag selector oper intern oper type tag let rec xmatch x outp p0p1 inp 0 0p1 xmatch x outp 0 0p3 inp p0p3 outp inpm inp let rec obj profil xmatch x messageselop sel profil op profil obj els obj profil internalop op profil obj recipi specic formula type selector oper type oper view function take prole type continu return prole messag object receiv type messag key compon rt represent object hob object implement process obj execut main object loop run protocol ltere process p1 p2 p3 p4 mirror process take care broadcast messag loopback rout messag object object loopback rout use simpl intuit tag messag implement associ broadcast rt implement associ broadcast algorithm creat prole requir algorithm run algorithm need creat parallel composit appropri number object prole 72 databas consist distribut databas may sever copi data entiti ensur consist variou copi becom concern inconsist aris transact occur connect two node broken know concurr modic rare downtim short employ follow optimist protocol 2 failur occur network node broken partit network node log transact discov network reconnect construct global preced graph log transact graph contain cycl databas consist transact t1 preced transact t1 t2 happen one partit t2 read data previous written t1 t1 t2 happen one partit t1 read data later written t2 t1 t2 happen dierent partit t1 read data written t2 algorithm repres item tabl row etc depend lock scheme rt coordin object object keep log local transac tion object hold part preced graph connect part full graph object broadcast token object along preced graph edg object receiv token propag token along preced edg object alreadi maintain token return origin object found inconsist parallel token propag object also send merg messag actual merg updat valu item dierent partit object modi item receiv merg messag also declar inconsist follow present key denit im plement code full implement found figur 6 last page prole use object dene follow oidint mutabl itemnam string mutabl itemvalu int mutabl read transact list mutabl written bool mutabl partit int mutabl merg bool mutabl mcount int mutabl tw transact propag int int profil oper merg int bool profil oper uponpartit unit profil oper uponcommitingtransact int profil oper upondetectingreconnect profil oper object keep uniqu identi oid name item monitor valu item set transact read ag signal item written partit number also keep set local attribut merg ag check whether item valu alreadi merg 1 item written also consid read partit number merg messag receiv mcount last log write transact tw object two broadcast oper propag propag token along preced edg contain merg possibl updat item new valu object three local oper upon partit record local partit number upon commit transact record commit transact upon detect reconnect start graph construct function extern system assum provid local partit id get partit iden log log transact modifi check whether transact modi item preced check use local log whether transact preced tran action declar inconsist declar databas incon delay transact paus run tran action count object get number object count local object get number object par tition write lock check whether item lock write 8 relat work section review work relat basic design choic central proof techniqu use paper 81 altern approach model dynam connect one approach model dynam broadcast architectur support special messag chang bridg behaviour correspond transmiss channel name calculu 12 anoth approach allow process transmit copi run elsewher system make calculu higher order like choc 18 approach taken paper preliminari variant hob sketch 15 retain underli languag messag function result calculu seem unnecessarili complex underli languag seem redund hob process entiti use characteris bridg sinc process broad cast interest see hob model featur calculu arriv bridg deliveri across happen sequenc hob avoid cbss insist action simultan come cost less power synchronis subsystem 82 relat calculi bcalculu 5 seen version calculu broadcast commun instead pointto point particular bcalculu borrow whole channel name machineri calculu includ oper creation new name thu bcalculu model ethernet directli obvious mobil version cb reus idea sketch calculu encod yield simpl bcalculu encod use l terss model scope new name seem promis encod might composit expect appropri type system achiev fulli abstract encod bcalculu type system would mixtur hindleymiln polymorph calculu system ambient calculu 4 calculu mobil process comput base notion movement equip intraambi asynchron commun similar asynchron calculu sinc choic commun mechan independ mobil primit may interest studi broadcast version ambient calculu also broadcast ambient calculu might simpl encod hob hob join calculu 8 view extens calculu hob add parallel composit broadcast commun top bare calculu join calculu add parallel composit parallel pattern top calculu explicit let relationship two calculi remain studi feed oper foreshadow implement cb see 16 achiev appar synchroni allow subsystem fall behind 83 congruenc proof ferreira hennessi jerey 7 use how proof show weak bisimul congruenc cml use late bisimul leav open question whether how method appli earli bisimul paper directli answer question sinc late earli semant bisimul coincid hob proof late semant hob eleg one found extend version paper 14 thomsen prove congruenc choc 18 adapt standard proof nonwel found induct proof eect similar proof how techniqu tailor specic choc abandon higher order bisimul reason specic pointtopoint commun privat channel use context bisimul adapt standard proof proof similar diculti proof present especi case process appli cation involv substitut dicult 9 acknowledg would like thank dave sand bring how method attent jorgen gustavsson martin wei chert gordon pace mani discuss anonym refere construct comment 10 r lazi lambda calculu bryan bayerdor secreci group creation mobil ambient expressiv pointtopoint versu broadcast commun broadcastbas calculu commun system alan je bisimilar theori function program minicours prove congruenc bisimul function program languag commun concurr commun mobil system notion comput monad karol ostrovsk statu report ongo work higher order broadcast system reason broadcast calculu broadcast system express mobil process algebra firstord higherord paradigm plain choc second gener calculu higher order process polymorph picalculu theori implement tr commun concurr notion comput monad lazi lambda calculu calculu broadcast system prove congruenc bisimul function program languag reflex cham joincalculu commun mobil system mobil ambient secreci group creation express pointtopoint versu broadcast commun ctr massimo merro observ theori mobil ad hoc network electron note theoret comput scienc entc 173 p275293 april 2007 patrick eugster typebas publishsubscrib concept experi acm transact program languag system topla v29 n1 p6e januari 2007