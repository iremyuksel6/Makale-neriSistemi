interpol automat frege system interpol method one main tool prove lower bound proposit proof system loos speak one prove particular proof system feasibl interpol properti gener reduct usual appli prove lower bound proof system sometim assum usual modest complexitytheoret assumpt paper show method use obtain lower bound frege system even tc0frege system specif show unless factor blum integ feasibl neither frege tc0frege feasibl interpol properti order carri argument show carri proof mani elementari axiomstheorem arithmet polynomials tc0fregea corollari obtain tc0frege well proof system polynomi simul automatiz assumpt factor blum integ hard also show hard assumpt kprovabl problem frege system hard b introduct one import question proposit proof complex show famili proposit tautolog requir superpolynomi size proof frege extend frege proof system problem still open thu import question understand techniqu appli prove lower bound system well weaker system recent year interpol method one promis approach prove lower bound proposit proof system bound arithmet show method like work frege system weaker system basic idea behind interpol method follow depart lsi universidad politecnica de cataluna barcelona spain bonetlsiupc research partli support eu hcm network consol esprit ltr project 20244 alcomit cicyt tic980410c0201 tic980410c0201 depart comput scienc univers arizona tonicsarizonaedu research support nsf grant ccr9457782 usisrael bsf grant 9500238 grant int9600919me103 nsf smt czech republ z depart appli math weizmann institut ranrazwisdomweizmannacil research support usisrael bsf grant 9500238 begin unsatisfi statement form f x z denot vector share variabl x vector privat variabl formula 0 1 respect sinc f unsatisfi follow truth assign ff z either 0 x ff unsatisfi 1 ff unsatisfi interpol function associ f boolean function take assign ff input output 0 unsatisfi 1 1 unsatisfi note 0 1 unsatisfi case either answer suffic hard comput interpol function given unsatisfi statement f shown among thing interpol function alway comput polynomi time unless nevertheless possibl procedur exist special case particular interest fruit question whether one find whether exist polynomi size circuit interpol function case f short refut proof system say proof system admit feasibl interpol whenev polynomi size refut formula f interpol function associ f polynomi size circuit krajicek k2 first make connect proof system feasibl interpol circuit complex also monoton version interpol idea name conjunct normal monoton variabl z occur posit 1 neg 0 case associ interpol function monoton thu interest find polynomi size monoton circuit interpol function say proof system admit monoton feasibl interpol whenev polynomi size refut monoton f monoton interpol function associ f monoton polynomi size circuit beauti connect exist circuit complex proof system feasibl interpol monoton nonmonoton case monoton case superpolynomi lower bound proven suffici strong proof system admit feasibl interpol present sequenc paper ipu bpr k1 first use bpr prove lower bound proposit proof system idea also implicit razb2 short statement f use cliqu interpol formula 0 g xa 1 g 0 state g graph contain cliqu size k cliqu describ x variabl 1 state g graph color color describ variabl pigeonhol principl formula unsatisfi howev associ monoton interpol function would take input graph g distinguish graph contain cliqu size k color circuit exponenti size thu exponenti lower bound follow proposit proof system admit feasibl monoton interpol similar idea also work case admit feasibl interpol necessarili monoton feasibl interpol first result razb2 give explicit superpolynomi lower bound suffici strong proof system admit feasibl interpol cryptograph assumpt particular shown nonmonoton interpol function associ certain statement express p 6 np comput polynomi size circuit exist pseudorandom number gener therefor lower bound follow suffici strong proposit proof system admit feasibl interpol condit cryptograph assumpt exist pseudorandom number gener also possibl prove nonexplicit superpolynomi lower bound suffici strong proof system assumpt np comput polynomi size circuit mani research use idea prove lower bound proposit proof system particular last five year lower bound shown follow system use interpol method resolut bpr cut plane ipu bpr pud ch gener cut plane bpr k1 k3 relativ bound arithmet razb2 hilbert nullstellensatz ps polynomi calculu ps lovasz schriver proof system pud3 11 automatiz kprovabl explain previou paragraph exist feasibl interpol particular proof system give rise lower bound feasibl interpol moreov import paradigm proof complex gener sever reason section wish explain lack feasibl interpol particular proof system impli automatiz say proof system automatiz exist determinist procedur take input formula f return refut f one exist time polynomi size shortest refut f automatiz crucial concept autom theorem prove proof complex mostli interest length shortest proof wherea theorem prove also essenti abl find proof seemingli power system proposit calculu extend resolut even zfc scarc theorem prove seem difficult search effici short proof system word seem tradeoff proof simplic automatiz simpler proof system easier find proof section formal tradeoff certain sens particular show feasibl interpol automatiz first observ russel impagliazzo idea show automatiz use determinist procedur feasibl interpol theorem 1 proof system feasibl interpol automatiz abl proof suppos automatiz suppos determinist procedur find proof moreov guarante run time n c n size shortest proof input formula let 0 x z 1 z interpol statement let ff assign z want output interpol function 0 x ff 1 ff first run 0 x z 1 z obtain refut size next simul 0 x ff step return 0 produc refut 0 x ff chosen maximum time produc refut formula refut size thu c case work case 1 ff satisfi satisfi assign fl plug fl refut 0 x ff 1 ff obtain refut 0 x ff size therefor feasibl interpol ut thu feasibl interpol simpl measur formal complexitysearch trade exist feasibl interpol impli superpolynomi lower bound sometim modulo complex assumpt wherea nonexist feasibl interpol impli proof system automat concept close relat automatiz kprovabl ksymbol provabl problem particular frege system follow problem determin given proposit formula f number k whether ksymbol proof f k line provabl problem determin whether k line proof f k line provabl undecid problem firstord logic b1 first complex result kprovabl problem proposit logic provid buss b2 prove rather surpris fact ksymbol proposit provabl problem np complet particular frege system recent abmp show ksymbol k line provabl problem approxim within linear factor varieti proposit proof system includ resolut frege system unless method paper show ksymbol k line provabl problem solv polynomi time tc 0 frege system frege system extend frege system assum hard factor blum integ precis use idea show polynomi time algorithm solv kprovabl problem feasibl interpol suppos unsatisfi statement first run first verifi size proof f fix valu c let ff assign z run determin ossymbol oslin refut 0 x ff return 0 accept fact proof extend easili show ksymbol k line provabl problem approxim within polynomi factor proof system tc 0 frege frege extend frege hard assumpt 12 interpol one way function one prove certain proposit proof system admit feasibl interpol one idea due krajicek pudlak kp use one way permut follow way let h one way permut let 0 x z 1 z follow formula formula th bit x 0 formula th bit 1 sinc h one one 0 x z 1 z unsatisfi assum 0 1 formul proof system exist polynomi size refut 0 x z 1 z admit feasibl interpol follow given assign ff z exist polynomi size circuit decid whether 0 x ff unsatisfi 1 ff unsatisfi obvious circuit break th bit input h sinc construct bit input h broken henc assum input h secur proof system exist polynomi size refut 0 1 follow admit feasibl interpol major step toward understand feasibl interpol made krajicek pudlak kp consid formula 0 1 base rsa cryptograph scheme show unless rsa secur extend frege system feasibl interpol open howev whether neg result hold frege system weaker system bound depth threshold logic bound depth frege 13 result paper prove frege system well constantdepth threshold logic refer admit feasibl interpol unless factor blum integ comput polynomi size circuit recal blum integ integ p prime p 1 mod result significantli extend kp weaker proof system addit cryptograph assumpt weaker prove result use variat idea kp convers moni naor observ cryptograph primit need one way permut kp gener structur bit commit formula 0 1 base diffiehellman secret key exchang scheme dh simplic state formula least signific bit argument work bit inform proposit statement dh common variabl two integ xy p g p repres number necessarili prime length n g element group z privat variabl 0 integ b privat variabl 1 integ c inform 0 say g mod ab mod p even similarli 1 say g cd mod p odd statement 0 1 unsatisfi sinc inform 0 1 true ab mod show inform proof made formal polynomi size proof hand interpol function comput one bit secret key exchang diffiehellman procedur thu tc 0 frege admit feasibl interpol bit secret key exchang diffiehellman procedur broken use polynomi size circuit henc diffiehellman cryptograph scheme secur note prove prime break diffiehellman cryptograph scheme harder factor p bbr see also sh mc requir quit bit work formal statement argument short proof notic want size proposit formula express diffi hellman statement polynomi bound number binari variabl addit want size proof statement also polynomi bound key idea order defin statement prove effici introduc addit common variabl proposit diffiehellman statement bulk argument involv show aid auxillari variabl one formal proof show basic arithmet fact includ chines remaind theorem state proven effici within 14 section descript paper organ follow section 2 defin system section 3 defin use proof section 4 defin precis interpol formula base diffiehellman cryptograph scheme section 5 show prove main theorem provid technic lemma prove fulli section 7 section 6 discuss open problem final section 7 prove technic lemma requir main theorem unusu organ paper due mani technic lemma requir show result essenti correct argument everi reader might want go section 16 give exposit result reli complet proof technic part system clariti work specif boundeddepth threshold logic system call reason definit system also suffic system sequentcalculu logic system formula built use connect number 1s x least k phi x true number 1s x mod 2 system essenti one introduc mp turn extens system ptk introduc buss clote bc section 10 intuit famili formula f formula proof size polynomi size formula everi line proof built use connect th k phi 1 phi 0 connect assum unbound fanin th k interpret true number true least k phi j interpret true number true equal j mod 2 formula denot logic multiset consist similarli phi j th k thu commut connect implicit proof system oper sequent set formula form intend mean conjunct impli disjunct b j proof sequent logic system sequenc sequent 1 q sequent either initi sequent follow previou sequent one rule infer final sequent q size proof depth initi sequent form 1 formula 2 rule infer follow note logic rule defin n 1 k 1 first simpl structur rule weaken formula alway ad left right contract two copi formula replac one permut formula sequent reorder remain rule cut rule logic rule allow us introduc connect left side right side cut rule allow deriv gamma logic rule follow 1 deriv 2 negationright 3 andleft 1 4 andright 5 orleft 6 7 modleft 1 phi 1gammai deriv 8 modright deriv 9 thresholdleft th k deriv deriv proof boundeddepth proof system polynomi size formal follow definit ng famili sequent fr famili tc 0 proof f exist constant c follow condit hold 1 r n valid proof gamma system 2 depth r n 3 n size r n note defin specif proof system clariti result still hold reason definit proof shown system polynomi simul fregestyl system differ polynomi size proof system polynomi size tc 0 proof similar differ nc 1 tc 0 3 section describ need formul refut diffiehellman formula simplic descript let us assum fix number n upper bound length number use refut diffiehellman formula number n use defin formula see statement refut diffiehellman formula clear enough take n small polynomi length number p use diffiehellman formula 31 addit subtract use usual carrysav ac 0 formula add two nbit number let two number x denot follow ac 0 formula bit z equal mod 2 sum c x c carri bit intuit c 1 bit posit less gener carri propag later bit posit bit formal c comput orr th bit posit gener carri p k 1 k th bit posit propag gener carri subtract let us show comput z think x n bit number complement modulo 2 n bit x complement n bit x denot note equal 2 n similarli equal 2 n know x gamma 0 thu know thu thu comput z n1 32 iter addit describ input number n bit long output sum x 1 assum n main idea reduc addit number addit two number let x x x i1 binari represent let l dlog 2 ne let 2l assum simplic r integ divid x r block block 2l bit let ik number k th block x 2l ik 2l bit let l ik loword half ik let h ik high order half denot r r r r r henc show comput number hl let us show comput l comput h similar denot r sinc l ik length l l k length l 2l henc bit l bit l k combin comput l k note sinc l k polys sum logarithm length number comput use polys threshold gate 33 modular arithmet next describ comput quotient remaind number z modulo p z length n remaind input remaind quotient formula follow 1 number z 2 number 3 number k r 1 n intend valu variabl k r 2 1 n intend valu variabl p delta p suppos z assum input variabl k r take right valu formula z p output r formula div p z output k formula comput follow suppos k r p variabl satisfi p l l delta therefor comput div p z comput sum n notic k r p 2 formula requir comput correct valu quotient remaind give junk 34 product iter product write x delta denot formula sum ij 2 ij gamma2 x comput product two nbit number x 2 ij gamma2 x j mean 2 ij gamma2 x j true 0 otherwis lastli describ comput iter product number formula basic origin formula bch articul tc 0 formula iter product prodz give product z 1 z z length n assum mn bound n basic idea comput product modulo small prime use iter addit use construct chines remaind theorem construct actual product product modulo small prime let q product first prime first integ give number q length larger n 2 sinc q 1 q larger 2 n 2 well known bound distribut prime number length q j olog n q j let g j fix gener z also q j let u j q fix number properti u j mod q number exist chines remaind theorem prodz comput follow 1 first comput r calcul use modular arithmet describ earlier 2 1 comput ij g ij done tabl lookup b calcul c c comput r j g c j anoth tabl lookup 3 final comput hardwir valu thu comput obtain tabl lookup comput follow iter sum follow mod q calcul 35 equal inequ often write vector variabl formula appli convent write 6 4 diffiehellman formula readi formal defin proposit statement dh dh conjunct 0 1 common variabl formula p g repres nbit integ everi 2n also add common variabl g 2 mod p b xy everi 2n also add common variabl x 2 mod p mod p c also add variabl p variabl need defin arithmet modulo p see section 33 follow common variabl mod mod conjunct follow 1 mean g mod 2 everi j n mod p mean g 2 j modp note easi prove 3 similar formula g b mod mod p 4 prod ij even mean g ab mod p even 5 everi n formula express formula ad guarante modulo p arithmet comput correctli similarli formula 1 conjunct formula replac c b replac fourth item state g cd mod p odd note definit iter product prod requir prime q 1 q well product q number u fix length n go hardwir number q well correct valu r k need modulo q j arithmet one number refut dh want describ refut dh mention proof proce follow 1 use 0 show g ab mod 2 use 1 show x b mod 3 show g cb mod 4 use 0 show g bc mod 5 use 1 show c mod 6 show g dc mod conclud step 0 1 impli g ab mod reach contradict sinc 0 state g ab mod p even 1 state g cd mod p odd formul g ab mod p prod ij x b mod p thu step 1 formul prod ij step 1245 virtual ident step 3 6 follow easili formula defin g ab make symmetri obviou thu key step show step 1 show prove g ab mod mention formul follow prod ij build proof g ab mod p equal x b mod p prove mani lemma concern basic formula final lemma need follow lemma 4 everi z 11 z mm 0 p tc 0 frege proof proof lemma given section 7 use lemma 4 first equal point 2 section 4 second equal obtain prod ij prove step 1 main goal section 7 henc show statement short proof trivial quit complic particular formula iter product modular arithmet order prove statement need carri lot basic arithmet go technic part tri give intuit proof main lemma built organ proof sequenc lemma show mani basic fact arithmet formul prove tc 0 frege use formula proof lemma requir care analysi exact formula use oper proof lemma straightforward use well known proof lemma requir new trick short main lemma use proof final statement lemma follow 1 lemma 38 everi x p tc 0 frege proof 2 lemma 41 everi z frege proof 3 lemma 47 everi z 1 z 2 tc 0 frege proof first prove basic lemma addit subtract multipl iter sum lessthan modular arithmet among lemma lemma 38 proof lemma 41 cumbersom basic straightforward given basic fact modular arithmet recal iter product first comput product modulo small prime combin product get right answer use iter sum therefor mani basic fact modulo arithmet need proven advanc well basic fact iter sum done need obtain fact modulo p lemma 48 point easier go regular product basic fact modular arithmet easier prove therefor import show tc 0 frege prove lemma 47 applic z 1 z 2 iter product show fact use chines remaind theorem first prove equal modulo small prime rel easi sinc size prime suffici small olog n basic check possibl combin done appli chines remaind theorem obtain equal modulo product prime sinc product big enough obtain desir result proof chines remaind theorem differ standard textbook one main fact need show everi j r q j tc 0 frege proof r usual proof use basic fact divis prime would hard implement instead prove induct method allow us work number smaller q sinc number suffici small verifi possibl 6 discuss open problem shown tc 0 frege feasibl interpol assum factor blum integ effici comput impli assumpt frege well system polynomiallysimul frege automatiz interest note proof even definit diffiehellman formula nonuniform essenti due nonuniform natur iter product formula use would interest know extent result hold uniform tc 0 proof set recent paper bdgmp extend result prove boundeddepth frege doesnt feasibl interpol assum factor blum integ suffici hard actual assumpt stronger consequ boundeddepth frege automatiz somewhat weaker hard assumpt import question still open whether resolut restrict form automatiz posit answer question would import appli consequ 7 formal proof main lemma goal section prove lemma 4 mention earlier build proof lemma show basic fact concern arithmet multipl iter multipl modulu comput effici carri proof system begin formal present would like note give precis descript sequenc lemma suffici order carri full formal proof lemma 4 howev sinc mani lemma mani obviou proof describ metalevel requir order formal argument tc 0 frege rather give excess formal frege proof lemma follow x z number one denot vector n variabl formula repres number n n x respect z denot th variabl x repres th bit number x need talk three number write z 1 z repres sequenc nbit mn n z ij j th variabl z repres j th bit th number recal whenev say tc 0 frege proof actual mean say polynomi size tc 0 frege proof trivial properti like state 71 basic properti addit subtract multipl lemma 5 everi x tc 0 frege proof x proof lemma 5 immedi fact addit formula defin symmetr way ut lemma 6 everi x z tc 0 frege proof x proof lemma 6 definit addit formula th bit x equal phi 1 phi 1 carri bit go th posit add x c similarli defin carri bit go th posit add use basic properti phi 1 definit simpl proof phi 1 c x thu left show show prove stronger equal verifi strongest equal possibl 4 quantiti 6 assign satisfi equal actual possibl prove induct carri bit go first posit zero ident hold trivial prove equal assum hold prove equal consid mani case particular case assum fix valu follow seven quantiti subject condit c easi check number case 48 sinc 2 choic x choic choic z 6 choic total c case proceed way first show comput use seven valu simpli verifi 48 case induct hypothesi hold equal true first show requir proof along follow line x lefthand side statement true sinc posit carri also righthand side statement also true similarli x side statement fals sinc posit carri last case x viceversa case posit propag carri th carri bit 1 exist j th posit gener carri posit carri exactli definit c thu last case side statement true c use fact also z argument show c also comput simpl formula seven piec inform ut lemma 7 everi x tc 0 frege proof proof lemma 7 comput take first n bit definit addit formula follow easili bit 1 henc henc first n bit number first n bit x ut lemma 8 everi x proof lemma 8 comput take first n bit x definit addit formula sinc x prove n th bit henc therefor lemma 7 particular first n bit x lemma 9 everi x z tc 0 frege proof x proof lemma 9 follow immedi lemma 7 lemma 6 follow everi z tc 0 frege proof proof lemma 10 need show everi j shown rather tediou straightforward proof follow definit formula sum iter addit name show first similarli secondli show h use definit second step difficult carri bit zero ut lemma 11 everi z 1 z everi fix permut ff tc 0 frege proof iter sum symmetr proof lemma 11 immedi fact formula sum defin symmetr way ut lemma 12 everi z tc 0 frege proof proof lemma 12 definit iter addit formula sum straightforward prove similarli also straightforward show use definit formula everi j carri bit zero ut lemma 13 everi z 1 z tc 0 frege proof proof lemma 13 recal sum z comput ad two number hl recal l comput first comput number l loword half k th block z first equal follow lemma 13 similarli comput h 0 l 0 l 0 comput first comput number l k l 0 k sum comput use polys threshold gate eg use unari represent l ik therefor straightforward prove k l eg tri possibl l 0 prove formula separ possibl consid formula sinc addit carri flow one block next one sinc bit l l block bit l k l 0 respect conclud similar way prove abl conclud ut lemma 14 everi z 1 z tc 0 frege proof proof lemma 14 prove easili lemma 13 lemma 6 follow lemma 15 everi z 1 z everi 1 k tc 0 frege proof proof lemma 15 lemma 13 lemma 14 lemma 11 proof follow repeat argument gamma k time lemma 12 use base case ut lemma 16 everi x tc 0 frege proof x proof lemma 16 immedi fact product formula defin symmetr way ut lemma 17 everi x x power 2 tc 0 frege proof x proof lemma 17 straightforward prove 2 delta sequenc bit consist ad end 0s lemma easili follow ut lemma everi z 1 z everi x x power 2 proof proof lemma proof lemma like proof lemma 21 use lemma 17 instead 20 ut lemma 19 everi x power 2 tc 0 frege proof x proof lemma 19 proof lemma 17 ut follow three lemma gener previou three lemma lemma 20 everi x z tc 0 frege proof x proof lemma 20 definit product formula x similarli x iter applic lemma 15 use also lemma 11 similarli use also lemma 13 lemma 14 way use lemma thu prove prove prove everi trivial otherwis x use lemma 19 lemma 18 lemma way use also lemma 17 ut lemma 21 everi z 1 z everi x tc 0 frege proof proof lemma 21 show everi lemma follow combin equal case proven follow first equal follow appli lemma 13 second equal lemma 12 gener step first equal follow lemma 13 second equal follow lemma 20 third equal follow lemma 13 ut lemma 22 everi x z tc 0 frege proof x proof lemma 22 show x delta delta z equal sum ijk 2 ijkgamma3 x true lemma follow definit product henc lemma 10 two applic lemma 21 use freeli lemma 16 x sinc easili verifi 2 equal iter applic lemma 15 use also lemma 11 equal 72 basic properti lessthan lemma 23 everi x also proof lemma 23 either bit signific bit x differ bit equal signific bit differ x lemma 24 everi x proof lemma 24 lemma 23 suppos contradict get x x easili prove fals lemma 25 everi x z proof lemma 25 proof first statement obviou otherwis suppos signific bit x 6 x similarli suppos j signific bit j 6 z j easi show signific bit x 6 z x thu x z similarli j j signific bit x j 6 z j x reason also impli second statement lemma ut lemma 26 everi x z tc 0 frege proof xz x also z proof lemma 26 z 0 clear x show induct decreas k assum z 0 let z 0 signific bit z base case induct show x z appli lemma 12 suffic show x two case x equal x n x case x signific bit posit greater 0 x one clearli exist x higher bit equal thu x induct step assum x want show x use argument base case one prove x induct hypothesi b x appli lemma 25 b obtain desir ut lemma 27 everi x z proof lemma 27 lemma 26 lemma lemma 28 everi x z proof lemma 28 first equal follow lemma 8 second lemma 26 fact lemma 29 everi x tc 0 frege proof proof lemma 29 x definit also sinc 0 bit 1 suppos l x ut 73 basic properti modular arithmet recal formula z p div p z take input variabl p z also variabl k formula give right output n follow theorem hypothesi valu variabl k r p correct short state hypothesi first lemma omit afterward simplic simplic also use notat k lemma use either number use dh formula fix hardwir valu eg q j one prime use iter product formula q product prime hardwir q k also hardwir henc valu correct straightforward check ie prove nonvari correct input dh formula requir 2 part requir dh formula lemma z p nbit number tc 0 frege proof proof lemma ut lemma 31 everi z p tc 0 frege proof also follow uniqu properti proof lemma 31 previou lemma express z sum r let l definit modulo formula first equal follow definit formula z p div p z remain equal follow follow lemma 20 6 8 21 13 15 14 30 let us prove uniqu part suppos done div p z claim bellow contradict similar argument hold div proof claim sinc v lemma 8 lemma lemma 9 get therefor lemma 29 26 lemma 25 get p x ut lemma 33 everi z k p tc 0 frege proof proof lemma 33 let lemma 31 therefor uniqu part lemma 31 appli x z lemma 34 everi x z p frege proof also proof lemma 34 lemma 31 lemma 33 similar argument show x lemma 35 everi z 1 z p tc 0 frege proof proof lemma 35 lemma follow easili lemma 13 lemma 34 ut lemma 36 everi x p tc 0 frege proof proof lemma 36 first equal follow lemma 34 next equal follow assumpt third equal follow lemma 34 ut lemma 37 everi x z p frege proof proof lemma 37 assum x follow lemma 36 x left side equat equal first equal follow lemma 34 second equal follow lemma 5 6 7 third equal follow lemma 33 similarli shown thu lemma follow ut lemma 38 everi x p tc 0 frege proof proof lemma 38 last equal follow lemma 33 ut lemma fix number bc everi z frege proof lemma use situat recal number q hardwir also correspond k r variabl henc think b c hardwir proof lemma 39 use lemma 313322 get ut 74 basic properti iter product lemma 40 everi z 1 z everi fix permut ff tc 0 frege proof iter product symmetr proof lemma 40 lemma immedi symmetr definit prod ut lemma 41 everi z 1 z everi 1 k tc 0 frege proof proof lemma 41 recal hardcod number u j u j mod q prime q j divid q verifi follow statement statement variablefre henc easili proven formula evalu recal k iter product number z k z calcul follow r km j comput like r j defin section 34 use r ij way r 1kgamma1km j calcul follow step 1 also calcul r 2 calcul ij g ij also j g j 3 calcul c 0 4 calcul r 1kgamma1km j g c 0 tablelookup therefor show henc need prove lemma 41 show follow claim 42 everi j tc 0 frege proof r 1kgamma1km first step prove follow claim 43 43 proven follow r km second equal follow lemma 39 third equal follow lemma 35 lemma 11 prove fourth equal need use fact u j delta r km also fact easili prove check possibl r km prove statement possibl easi statement variablefre henc easili proven formula evalu order prove fourth equal formal show sum i6j u delta r km equal zero induct number term sum ut turn proof claim 42 quantiti r 1m j obtain tabl lookup find valu equal g c j gamma1 similarli quantiti r 1kgamma1km j obtain tabl lookup find valu equal henc enough prove c use previou lemma thu suffic show recal j valu obtain tablelookup g j claim 43 r j turn valu obtain tablelookup equal g easi verifi tablelookup onetoon everi x use properti 75 chines remaind theorem properti iter prod uct heart proof proof follow lemma give hard direct chines remaind theorem proof direct simpler lemma 44 let r two integ everi j r q j frege proof fix prime use prod formula ie first prime q product proof lemma 44 without loss gener assum 0 r prove r otherwis defin r use lemma 39 show everi j r 0 sinc 0 r 0 conclud everi k let q k denot note number q k hardwir one easili prove follow statement statement variablefre henc easili proven formula evalu everi proof lemma induct number q j lemma trivial assum therefor induct hypothesi henc denot r lemma 31 sinc know r q r q lemma 37 sinc r lower q follow dr lower q henc claim therefor conclud everi proof sinc 1 olog n possibl 1 2 therefor one check possibl 1 2 prove statement possibl easi statement variablefre henc easili proven formula evalu altern one defin function domain f0 q g prove fx onto rang f0 q g appli proposit pigeonhol principl effici provabl tc 0 frege follow f one one ut abl prove follow lemma lemma 46 everi z tc 0 frege proof proof lemma 46 recal prodz calcul follow r j comput r claim 43 everi prodz q thu everi prodz q proof lemma follow lemma 44 ut lemma 47 everi z 1 z 2 tc 0 frege proof proof lemma us prove everi proof lemma follow lemma 44 two applic lemma 38 enough prove everi recal prodz 1 z 2 calcul follow r 12 j comput like r j defin section 34 claim 43 everi recal z 1 r 2i therefor prove everi r 12 definit r also r 12 therefor one check possibl 1i 2i ut use previou lemma abl prove follow lemma 48 everi z everi p tc 0 frege proof given 2 proof lemma 48 lemma use equal turn lemma 4147 384741 41 ut readi prove lemma 4 everi z 11 z mm 0 p tc 0 frege proof given 2 proof lemma 4 iter applic previou lemma ut acknowledg grate omer reingold moni naor collabor earli stage work particular suggest use diffiehellman cryptograph scheme also would like thank uri feig convers insight extend result boundeddepth frege part work done dagstuhl complex boolean function workshop 1997 r monoton circuit complex boolean function minim proposit proof length nphard linearli approxim gener diffiehellman modulo composit weaker factor log depth circuit divis relat problem nonautomatiz boundeddepth frege proof lower bound cut plane proof small coeffici undecid kprovabl godel theorem length proof ii lower bound recogn k symbol provabl cut plane connect threshold logic exponenti lower bound size monoton real circuit constant depth reduc new direct cryptographi upper lower bound treelik cut plane proof interpol theorem lower bound proof system independ result bound arithmet discret order modul firstord extens cut plane proof system threshold circuit small major depth key distribut system equival factor lower bound complex craig interpol sententi logic lower bound resolut cut plane proof monoton comput algebra model comput interpol algebra proof system lower bound monoton complex boolean func tion unprov lower bound circuit size certain fragment bound arithmet composit diffiehellman publickey gener system hard break tr ctr alexand razborov proposit proof complex journal acm jacm v50 n1 p8082 januari pavel pudlk reduc symmetri disjoint np pair theoret comput scienc v295 n13 p323339 24 februari olaf beyersdorff class represent disjoint nppair theoret comput scienc v377 n13 p93109 may 2007 albert atseria conjunct queri evalu searchtre revisit theoret comput scienc v371 n3 p155168 march 2007 samuel r buss polynomials frege resolut proof stconnect hex tautolog theoret comput scienc v357 n1 p3552 25 juli 2006 paolo liberator complex result dpll resolut acm transact comput logic tocl v7 n1 p84107 januari 2006 maria luisa bonet nicola galesi optim sizewidth tradeoff resolut comput complex v10 n4 p261276 may 2002 albert atseria mara luisa bonet automatiz resolut relat proposit proof system inform comput v189 n2 p182201 march 15 2004 juan lui esteban nicola galesi jochen messner complex resolut bound conjunct theoret comput scienc v321 n23 p347370 august 2004