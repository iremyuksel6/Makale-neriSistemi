parametr design synthesi distribut embed system abstractthi paper present design synthesi method distribut embed system system comput flow long pipelin interact softwar compon host varieti resourc manag local schedul method automat calibr local resourc schedul achiev system global endtoend perform requir system model set distribut task chain pipelin task repres activ requir nonzero load cpu network resourc task load requir vari stochast due secondord effect like cach memori behavior dma interfer pipelin stall bu arbitr delay transient headoflin block etc aggreg effectsalong task perservic load demandand model via singl random variabl rang arbitrari discret probabl distribut load model obtain via profil task isol simpli use engin hypothesi system project behavior endtoend perform requir posit term throughput delay constraint specif pipelin delay constraint upper bound total latenc computat accumul input output correspond throughput constraint mandat pipelin minimum accept output ratecount output meet delay constraint sinc percompon load gener distribut sinc resourc host stage multipl pipelin meet system endtoend constraint nontrivi problem approach involv solv two subproblem tandem 1 find optim proport load alloc task channel 2 deriv best combin servic interv load proport guarante design algorithm use analyt approxim quickli estim output rate propag delay candid solut paramet synthes estim endtoend perform metric recheck simul percompon load reserv increas synthesi algorithm rerun improv perform point system configur accord synthes schedul parametersand revalid via onlin profil paper demonstr techniqu exampl system compar estim perform simul onlin behavior b introduct embed system intrins realtim constraint impos extern input put perspect environ time comput path endpoint may flow larg set interact compon host varieti resourc manag local schedul queu polici crucial step design process involv calibr tune local resourc manag polici origin realtim object achiev realtim schedul analysi often use help make problem tractabl use approach upper bound deriv process time commun delay use worstcas assumpt task messag determinist schedul guarante time constraint get met constraint might includ individu thread process frequenc packet deadlin perhap rate network driver run type system hard realtim analysi use help predict ensur perform object attain approach becom increasingli difficult carri first achiev neartight executiontim bound virtual imposs due architectur featur like superscalar pipelin ing hierarchi cach memori etc mention nondetermin inher almost network given well fact program actual execut time datadepend worstcas time estim may sever order magnitud greater averag case one incorpor worstcas cost design result often lead extrem underutil system moreov paramet like process period deadlin use help achiev accept endtoend perform ie mean end end realiti miss deadlin rare lead failur fact occurr expect unless system radic overengin hard realtim schedul theori provid suffici way build embed system strictli necessari may yield effici design paper explor altern approach use statist guarante gener costeffect system design model realtim system set task chain task repres activ requir specif cpu network link exampl chain may correspond data path camera display video conferenc system reflect servoloop distribut realtim control system chain realtim perform requir specifi term maximum accept propag delay input output ii minimum accept averag throughput design system treat first requir hard constraint endtoend comput take longer maximum delay treat failur contribut overal throughput applic may abl use late output yet within system model current count contrast second requir view statist sens design system exceed averag minim accept rate assum task cost ie execut time program delay network link specifi arbitrari discret probabl distribut function problem solut strategi given set task chain realtim perform requir object design system meet requir chain system model includ follow assumpt help make solut tractabl ffl model task load requir stochast term discret probabl distribut function pdf whose random variabl character resourc time need one execut instanc task success task instanc model independ ffl assum static partit system resourc word task alreadi alloc specif resourc true embed system design often involv make taskplac decis howev note tune resourc schedul definit subservi alloc phase often involv account devicespecif local eg io port dma channel etc well systemlevel issu eg servic provid node paper focu narrow schedul synthesi problem hand note holist design tool could integr two problem use systemtun algorithm subroutin also object achiev overal statist level realtim perform still use tool provid hard realtim schedul help solv problem method involv follow step 1 assign task fix proport resourc load 2 determin reason servic interv frame proport guarante use techniqu provid realtim cpu network schedul guarante frame task get least design share resourc time share fail suffici current run task finish execut run next frame get frame share etc given model design problem may view follow interrel subproblem 1 cpu network load partit among task everi chain perform requir met 2 given loadassign frames set maxim effect output rate discuss sequel load proport quantiz infinitesim timefram henc task frame get progress smaller start pay larg price guarante form wast overhead paper present algorithm solv problem algorithm problem 1 use heurist compar rel need task differ chain compet resourc algorithm problem 2 make use connect markov chain estim effect throughput given chain sinc analysi approxim valid gener solut use simul model relat work like much work realtim system result extend preemptiv uniprocessor schedul analysi mani old new solut problem eg 1 15 20 21 moreov mani method come equip offlin analysi test determin priori whether underli system schedul test loadori suffici condit predict task alway meet deadlin provid system util exceed certain predefin threshold classic model gener larg degre exist analog result distribut system network protocol etc exampl model appli distribut hard realtim system follow straightforward manner eg see 26 31 network connect abstract realtim task share network resourc schedul analysi incorpor worstcas block time potenti suffer highprior packet wait transmiss lowerprior packet extent result global schedul problem solv set interrel local resourceschedul problem 30 classic model extend consid probabilist execut time uniprocessor system done give nomin hard amount execut time task instanc assumpt task usual complet within time nomin time exceed excess requir treat like sporad arriv via method similar use 19 previou work 8 9 relax precondit period deadlin paramet alway known ahead time rather use system endtoend delay jitter requir automat deriv task constraint turn ensur endtoend requir met uniprocessor system similar approach uniprocessor system explor 2 execut time budget automat deriv endtoend delay requir method use imprecis comput techniqu metric help gaug good candid solut concept later modifi use variou applic context recent result adapt endtoend theori discret continu control problem eg 18 27 realtim constraint deriv set control law object optim system perform index satisfi schedul origin approach 8 9 also use produc schedul realtim traffic fieldbu network 6 7 switch prioriti synthes ensur endtoend rate latenc guarante relat idea pursu radar process domain 11 optim method produc percompon process rate deadlin base system input puls rate prescrib allow latenc endtoend design becom significantli difficult distribut context solv problem usual involv find answer follow question given endtoend latenc budget optim way spend budget pipelin hop asid complex basic decis problem solut also involv practic issu get local runtim schedul guarante piecewis latenc result present 25 address problem determinist context extend origin uniprocessor method 8 distribut system static partit endtoend delay via heurist optim metric 25 similar approach propos soft transact distribut system 17 transact deadlin partit system resourc knowledg paper present first techniqu achiev statist realtim perform distribut system use endtoend requir assign period execut time budget light method view less schedul tool one approach problem realtim system design accomplish goal assum underli runtim system capabl follow ing 1 decreas task complet time increas resourc share 2 enforc resourc proport share alloc everi task minimum quantiz 3 within constraint isol task realtim behavior activ share resourc regard build mani result develop provid oslevel reserv guarante ratebas proportionalshar queu network sinc concept integr understand work paper treat length ratebas method task get alloc percentag avail bandwidth obvious percentag maintain infinitesim timeinterv rather proportionalshar servic approxim sens ie within margin error magnitud error usual due follow factor 1 quantiz ie degre underli system multiplex traffic 2 priorityselect ie order task select servic higher level quantiz multipl stream share fifo queue serviceord depart true proportionalshar analyt result reli perhap oldest known variant ratebas schedul timedivis multiplex tdm tdm abstract task guarante fix number timeslot predefin period interv call frame analyt techniqu assum task timeslot reserv ie task claim load load get wast appeal tdm basic reason need handl inher stochast workload model task intern decid much load need specif instanc load demand quit high arbitrari instanc may minuscul instanc moreov task start assum semant mandat also need finish sinc unregul workload simpli reshap sinc endtoend latenc guarante still must guarante tdm ensur reason level fair differ task resourc success instanc task downsid scheme tdm end wast unus load ratebas disciplin solv problem redistribut servic longer interv cost occasion postpon project complet time certain task disciplin howev conceiv inher regul workload model eg linear bound arriv process 3 set transient unfairnessi often smooth simpli reshap departur process ie insert delay stage mani algorithm develop provid proportionalshar servic highspe net work includ virtual clock method 38 fairshar queu 4 gener processor share gp 23 rate control static prioriti queu rcsp 36 model also use deriv statist delay guarante particular within framework rcsp 37 gp 39 relat result found 5 use polici like virtual clock 38 34 fcf varieti traffic distribut 14 statist servic qualiti object achiev via proportionalshar queu conjunct serverguid backoff server dynam adjust rate help util avail bandwidth recent mani ratebas disciplin sprout analogu cpu schedul exampl waldspurg et al 32 propos lotteri schedul multiplex avail cpu load base rel throughput rate system constitu task author also present determinist variant call stride schedul 33 method provid oslevel server method similar weightedfairqueu wfq disciplin use switch wfq also known packet gp pgp discret quantiz version fluidflow abstract use gp schedul decis wfq made via simul proportionalshar task readyqueu ideal model continuoustim multiplex task would hypothet finish first gp get highest prioriti put run queue next schedul round stoica et al 29 propos relat techniqu similarli use virtual timelin determin runtim dispatch order concept also appli hierarch schedul 13 multipl class task eg hard soft realtim applic coexist system sever scheme propos guarante processor capac share system realtim task simultan isol overrun caus task system exampl mercer et al 22 propos processor capac reserv mechan achiev method enforc task reserv share within reserv period microkernel control also shin et al 28 propos reservationbas algorithm guarante perform period realtim task also improv schedul aperiod task note mani proportionalshar method subject responsetim studi differ type arriv process done switch cpu entir network note problem determin aggreg delay network dual problem assign perhop delay achiev endtoend deadlin latter top approach design tell network perhop latenc network need guarante latenc delay analysi work bottomup fashion network basic tell user endtoend delay given proportionalshar alloc chain observ seemingli differ problem inextric relat topdown deadlin partit could function without way get bottomup feedback similarli bottomup method assum prealloc load chain realiti negoti meet chain endtoend latenc throughput requir realtim domain solv one problem requir solv deriv endtoend latenc involv answer follow question chain flow n node manag ratebas disciplin endtoend respons time issu quit simpl arriv process poisson stream servic time exponenti distribut node use fifo servic disciplin simpl jackson queu network like mani straightforward productform techniqu appli question get trickier linearli regul traffic stream differ arriv rate deviat bound differ intervals stream differ proport servic guarante fortun composit result exist present variou ratebas disciplin determinist 12 24 35 statist 39 37 workload determinist endtoend per connect delay consid 24 leakybucket regul traffic use pgp schedul techniqu 35 similar studi perform use nonworkconserv servic disciplin also note statist treatment provid pgp 39 rcsp 37 section 4 present analyt approxim tdm abstract perhap extrem case nonworkconserv disciplin method use estim endtoend delay product tdm queue chain load demand node gener distribut task chain differ pdf queue size constrain singl slot problem innat complex moreov design algorithm need test huge number solut candid achiev system object henc delay analysi fast consequ coars time coars must suffici accur expos key perform trend entir solut space shown section 4 approach problem composit topdown fashion algorithm start analyz chain head task isol result statist use help analyz second task etc line delay throughput metric obtain chain output task henc chain whole 3 model solut overview state model system set independ pipelin task chain everi task map design cpu network resourc chain abstract exampl captur essenti data path structur video conferenc system distribut process control loop formal system possess follow structur constraint boundedcapac resourc set resourc r r correspond one system cpu network link associ r maximum allow capac ae maximum load resourc multiplex effect typic function schedul polici case workstat r 7 r 9 r 4 figur 1 exampl system topolog switch arbitr polici case lan task chain system n task chain denot th task chain comput gamma carri endtoend transform extern input x output also producerconsum relationship exist connect pair task ij gamma1 ij assum oneslot buffer pair sinc queu polici choos newest data buffer henc produc may overwrit buffer data consum stochast process cost task cost model via discret probabl distribut function whose random variabl character time need one execut instanc resourc maximum delay bound gamma delay constraint md upper bound time take comput flow system still produc use result exampl mean gamma produc output time use correspond input sampl earlier gamma 500m comput result exceed propag delay drop minimum output rate gamma rate constraint mor specifi minimum accept averag rate output meet delay constraint exampl mor mean chain gamma must averag produc 10 output per second moreov mor implicitli specifi maximum possibl frames task frames 01 would suffic output produc everi frame exampl consid exampl shown figur 1 possess six chain label rectangl denot share resourc black circl denot task shade box resourc usag pdf task deriv et ms vart minmax numstep endtoend constraint maximum resourc util figur 2 constraint exampl extern input output system resourc requir endtoend constraint shown figur 2 system task load demand vari stochast due secondord effect like cach memori behavior dma interfer pipelin stall bu arbitr delay transient headoflin block etc use one random variabl model task load essenti collaps residu effect singl pdf also account task ideal bestcas executiontim model discret probabl distribut use purpos two point articul first fairli obviou pertask load model illfound synthesi result littl use inde situat one convolv abovement effect singl pdf may tempt stochast bundl driver process interfer task load model often one situat sort factor need repres explicitli task method easili accommod altern process obtain good model abstract nontrivi requir account matter like causal ie charg load deviat task caus scale ie compar task load statist mean varianc residu effect charg sensit ie statist gaug effect load quantiz endprocess result problem well outsid scope paper interest reader consult 16 decent introduct statist perform model howev none problem trivial given suffici time patienc statist compet one employ standard techniqu handl second point bit subtl though equal true purpos design coars load model repres singl stationari distribut better load model sort system design one need start basic notion pertask perform altern design system base blind guesswork consid task repres innerproduct function vectors rang 1000020000 element actual vectors chang dynam assum profil task repres dataset result load demand appear track inner two quartil normal distribut quantiz result histogram use model task pdf assum explicitli model vectors control variabl perhap valu truli nondeterminist perhap choos treat way sinc addit contribut littl margin accuraci pipelin estim departur process statist case quasinorm distribut may fact best model achiev innerproduct may suffici purpos design lead reason result real system object use model tool abstractli predict trend synthesi algorithm object directli repres system obtain load model one often appeal method outlin method commonli use hardwaresoftwar codesign task profil isol result histogram get postprocess stationari responsetim distribut experienc good result via method multiplatform simul work digit video playout system 10 second techniqu use preliminari stage design coars estim task averag load use creat synthet distribut eg exponenti normal chi squar etc load model would correspond hypothes task might behav integr system done task pdf quantiz accept level result fed synthesi tool system topolog handl number hypothet pertask load profil design gain margin confid system robust subtl chang load condit take latter approach run exampl discret two differ continu distribut reus result multipl task figur 2 deriv denot base continu distribut gener quantiz use paramet min max et mean varianc numstep number interv case exponenti distribu tion cdf curv shift min probabl given valu past max distribut interv proport granular discret control num step assum execut time associ interv maximum possibl valu within interv exampl time requir 11 follow normal distribut 10m mean 8m standard deviat minimum time 4m maximum time 35 ms continu distribut chop 10 interv sinc first interv contain time within 4m 7m associ time 7m interv give correspond portion continu cdf note attempt hard realtim approach solut would possibl exampl 31 requir 200m dedic resourc time run mean 31 frame must less 200m yet mor must produc new output least 5 time flow graph endtoend constraint system resourc distribut final load assign assign throughput approxim quantum increas mor unsatisfi chain candid system simul constraint satisfact failur figur 3 design overview per second turn mean 31 frame also greater 200m frame exactli 200m task induc util 10 resourc r 1 exceed resourc intrins 09 limit disallow capac task host 31 runtim model within system model task chain gamma consid schedul quasicycl fashion use timedivis multiplex abstract resourceshar f size frame gamma loadshar guarante f interv constitu resourc henc synthesi algorithm job 1 assign task ij proport resourc capac denot u ij 2 assign global f frame gamma given ij runtim behavior describ follow 1 within everi f frame ij use u ij resourc capac polic assign ij executiontim budget upper bound amount resourc time provid within f frame truncat discret unit assum system keep track arbitrarili fine granular time 2 particular execut instanc ij may requir multipl frame complet e ij run time expend frame 3 new instanc ij start within frame previou instanc ij still run ij input buffer contain new data alreadi exceed md polic timestamp mechan put comput input sampl due chain pipelin structur note n task gamma must sinc data flow n element produc comput 32 solut overview schemat design process illustr figur 3 main step follow 1 partit cpu network capac task 2 select chain frame optim output rate 3 check solut via simul verifi integr approxim use ensur chain output profil suffici smooth ie bursti partit algorithm process chain gamma find candid loadassign vector denot u element u ij u contain load alloc ij resourc given load assign gamma synthesi algorithm attempt find frame f gamma achiev optim output rate comput done approxim given f rate estim deriv 1 treat gamma output uniformli deriv iid perfram success simpli multipli theta 1 approxim chain output rate lower mor requir load assign vector increas final suffici load found chain result system simul ensur approxim sound excess capac given chain hope improv overal rate 4 throughput analysi section describ approxim gamma output rate candid load frame paramet chain section 5 show make use techniqu deriv system f u paramet everi chain assum current process gamma frames f load vector u estim output probabl recal output exceed maximum allow delay md count henc need way determin latenc system one benefit proportionalshar queu follow sinc chain effect isol other f interv observ analyz behavior gamma independ without worri headoflin block effect compon use discretetim model time unit term chain frames ie discret domain f0 correspond real time f0 f reduct make analysi tractabl also correspond worstcas condit sinc underli system may schedul task execut time within f frame assum input may read earli begin frame output may produc late end frame one except chain state interest occur frame boundari except model aggreg delay discret time domain treat b md c henc fraction part last frame ignor lead tighter notion success consequ er side conservat theoret could model comput delay construct stochast process chain whole solv possibl delay probabl would probabl futil ventur even smaller chain model would simultan keep track task local behavior sinc chain may hold 0 ongo comput mani one comput per task easi see statespac would quickli explod instead go construct model composit albeit inexact manner process task local use result successor consid follow diagram portray flow comput singl task age deltaout age ij random variabl defin follow 1 dataag age ij variabl chart comput total accumul time enter head leav ij 2 block time b ij durat time input buffer wait ij complet current comput 3 process time psi ij random variabl rang ij pdf psi ij e correspond variabl unit frame 4 interoutput time deltaout ij approxim ij interoutput distribut term frame measur time two success output assum data alway readi chain head henc age ij approxim via follow recurr relat age i1 age j 1 approxim entir age ij distribut assum three variabl independ ie prage prage note ij success probabl ij 1 probabl non stale output produc random frame process final task chain approxim endtoend success probabl output probabl appropri scale probabl excess delay inject execut point endtoend success rate estim note method topdown ie statist deriv i1 i2 use synthes metric i1 i3 etc also note process i1 alreadi figur 4 chain x ij maxpsi ij inform requir pdf word trivial prdeltaout retriev fresh input whenev readi therefor incur block time i1 execut new phase whenev finish previou phase blockingtim obtain reason blockingtim metric stage nontrivi affair especi longertail distribut involv carri analysi consid stochast process x ij whose state transit character two factor 1 ij remain execut time next task instanc 2 whether input process drop transit describ use simpl markov chain shown figur 4 maximum execut time 6f transit eventbas ie trigger new input ij gamma1 hand state measur remain time left current execut essenc move state k l denot 1 new input receiv 2 induc block time l frame sake analysi distinguish three differ outcom move state k state l transit descript use term denot endtoend delay bound term frame ie c 1 drop k l task current execut alreadi anoth input queu buffer calcul induc blockingtim k new input overwrit induc l blockingtim frame 2 failur k 0 new input arriv stale get process finishtim current execut 3 success k l new input arriv get process block time l figur 5 illustr case success transit l deltaout figur 5 transit k l case destin state 0 case b destin state l 0 tl distinguish outcom 13 via partit statetransit matrix ie p denot transit matric drop failur success respect calcul term paramet discuss ie age get complet transit matrix probabl usual fashion ie x p turn steadyst probabl use deriv ij perfram success probabl k index denot kth element result vector essens calcul comput probabl 1 input read random frame 2 success process obtain sum success outflow probabl simpl bayesean method use achiev stationari blockingtim pdf l0 final ingredi deriv task ij interoutput distribut deltaout ij use coars meanvalu analysi ij produc output know goe idl phase wait fresh input produc follow busi phase culmin anoth output let idl ij random variabl count number idl cycl busi phase use inform model event denot computestart pure bernoulli decis probabl st ij st eidl ij 1 ie output deliv st ij probabl random cycl start next busi phase approxim idl durat via modifi geometr distribut pridl deriv distribut prdeltaout ij pridl final approxim endtoend success probabl output proba biliti appropri scale account excess delay inject execut definit endtoend output rate given follow exampl exampl perform throughput estim gamma 6 assum system paramet f 30m recal delay bound chain 5 within headtotail approach first consid task 61 recal howev distribut age 61 deltaout 61 ident psi 61 quantiz load distribut moreov also next consid second last task 62 follow tabl show pdf psi 62 markov chain steadi state block time age 62 6 00005 0000001 00 01153 7 000008 00 00 00269 9 00 00 00 13 theta 10 gamma3 sum success outflow probabl henc chain iid success probabl defin follow prage 62 6 multipli framer get 5 system design process revisit highlevel problem determin system paramet object satisfi chain perform requir state introduct design problem may view two interrel subproblem 1 load assign given set chain cpu network load partit among set task perform requir met 2 frame assign given loadassign task chain optim frame chain effect throughput maxim note loadalloc main interchain problem frameassign view strictli intrachain issu timedivis abstract alter chain frames effect averag rate chain system consid synthesi algorithm figur 6 note f express millisecond initi largest frames could achiev desir output rate deltaf return ng e 1 n 2 ij ng 6 f find ij maxim return failur get f f f figur synthesi algorithm denot global timescal exampl chosen 1000 sinc unit millisec ond also note task ij resourc share u ij initi accommod correspond mean responsetim time et ij system could solv initi paramet execut time constant load assign loadassign work iter refin load vector u feasibl solut found entir algorithm termin output rate chain meet perform requir discov solut possibl employ backtrack task load never reduc mean solut space search total tightlyconstrain system potenti feasibl solut may found loadassign taskbas ie driven assign addit load task estim need heart algorithm found line 67 remain unsolv chain consid object assign addit load deserv task one chain select made use heurist weight w ij reflect potenti benefit increas ij util quest increas chain endtoend perform weight actual combin three factor play part achiev feasibl 1 addit output rate requir normal via rangesc interv 01 2 currentmaximum capac task resourc current capac denot ae k resourc r k 3 task current load assign idea high load assign indic diminish return set work chain task would probabl benefici result paper heurist use theta ae select task get util increas tunabl increment smaller increment obvious lead greater likelihood find feasibl solut howev also incur higher cost result present paper set addit load given select task chain new frames rate paramet determin meet minimum output requir remov consider frame assign get frame deriv feasibl frame one exist problem frameassign seem straightforward enough nonlinear surmount first true usabl load task given bu due fact system multiplex load arbitrarili fine granular time second analysi assum effect maximum delay round nearest frame err side conservat neg effect second factor like higher larger frame sinc result truncat fraction part comput final frame hand first factor becom critic smaller frame henc approxim util simpl rule sinc load monoton increas restrict search frame lower current one restrict search situat framebas delay estim truncat ff theta 100 percent continuoustim deadlin ff 1 subject guidelin frame evalu via throughput analysi present section 4 determin current design process solut exampl ran algorithm figur 6 find feasibl solut result present figur 7 sparc ultra algorithm synthes paramet exampl approxim minut wallclock time result present figur 7 note resourc capac spare r 1 highest load configur 072 r 7 lowest 035 other around 50 load spare load use increas chain output rate desir held chain designedin later synthes solut chain b resourc capac use system 072 039 045 04 065 052 035 062 065 065 figur 7 synthes solut exampl system 6 simul sinc throughput analysi use key simplifi approxim valid result solut via simul model recal analysi inject imprecis follow reason first tighten end output delay round fraction part final frame analog assum chain statechang alway occur frame boundari henc even intermedi output time assum take place frame end approxim inher composit dataag calcul ie assum perfram output ratio predecessor task iid allow us solv result markov chain quasiindepend fashion simul model discard approxim keep track tag comput chain well true state induc particip task also clock progress along realtim domain henc task end middl frame get place successor input buffer time also simul model schedul resourc use modifi deadlinemonoton dispatch deadlin consid end frame higherprior task get run earlier analyt method assum recal analysi implicitli assum comput may take place late possibl within given frame hand simul inherit simplif use design exampl inputread assum happen task get releas ie start frame analysi context switch overhead consid rather charg load distribut figur 8 summar differ two model valid design follow tabl compar analyt throughput estim deriv via simul simul rate display 95 confidenceinterv simul analysi maximum delay md bmd f c theta f state chang measur frame boundari output rate measur iid schedul framebas late possibl deadlin monoton data read time start frame start frame figur 8 comparison analysi model simul model 100 trial trial ran 100000 frame largest frame system last column show standard deviat outputr calcul ttime move averag wrt simul 10g mean 1second interv tool follow 1 gamma output rate chart 1second interv 2 interv deviat calcul 3 sumofsquar deviat obtain divid degre freedom sampl 4 squareroot result produc move averag note result simul system satisfi minimum throughput requir chain henc satisfactori solut desir improv dole excess resourc capac ie simpli iter design algorithm figur 9 compar simul analyt result multipl frame assign three select chain frames chang one chain time system util remain fix synthes valu simul run display ran 10 000 frame largest frame observ eg graph largest frame test denot 200 ms run last 2000 second graph show averag outputr chain entir simul trial along correspond standard deviat comput onesecond interv sampl vs mean combinatori comparison allow us make follow observ first output rate gener increas frames decreas point system start inject signific amount truncat overhead due multiplex recal runtim system multiplex infinitesim granular execut time rather task util alloc integr unit frame second relationship throughput bursti direct note chain deviat tend increas higher lower frame reflect two separ fact first fairli obviou artifact measur process success rate frame size analysi simul 200135success rate frame size chain 3 success rate analysi simul 2001357success rate frame size chain 6 success rate analysi simul standard deviat success rate frame size chain standard deviat standard deviat success rate frame size chain standard deviat deviat success rate frame size chain 6 standard deviat figur 9 analysi vs simul standard deviat second move averag calcul varianc statist 1second interv yield deviat comput basi singl refer timescal method insert bia low frame sinc process get sampl frequent turn lead artifici higher deviat larg frame anoth effect come play recal task dispatch frame boundari input wait predecessor henc produc overrun frame even slight amount consum wait next frame use data consequ add data age whole howev note simul deviat particularli high especi consid fact includ onesecond interv measur output rate actual exceed mean also output rate decreas frames increas curv smooth small spike observ simul analyt result effect due multiplex overhead discuss inject sinc executiontim budget integr exampl task assign util 011 frames 10 executiontim budget 1 result actual usabl util 01 howev output rate monoton decreas larger frame consid candid result integr executiontim budget final note differ analysi simul larger frames divid maximum permiss delay result round fraction part comput final frame caus us overestim output age remark coars analyt estim essenti synthesi stage show section 3 determinist realtim approach would fail work small exampl problem associ stochast time deviat would increas larger system note also could reli exclus simul synthesi phase ie substitut analysi base time inform singlerun simul approach would requir three month synthes small exampl henc sinc requir coars analyt estim design stage valid solut essenti first pass obviou choic discreteev simul reasonbl set simul run requir sever minut often significantli cheaper go directli integr discov design flaw implement nasti proposit inde eg hardwar found insuffici applic host simul model provid decent margin confid design robust particularli sinc underli assumpt fundament differ use analysi simpli put sake valid two perform model better one howev simul end stori object build appli cation calibr kernel driver use analyticallyderiv paramet point one subject system import valid test onlin profil even care synthesi strategi test usual lead addit system tune help compens imprecis model abstract use static design 7 conclus present design scheme achiev stochast realtim perform guarante adjust percompon load alloc process rate solut strategi use sever approxim avoid model entir system exampl estim endtoend delay use combin queu analysi realtim schedul theori simpl probabl theori search algorithm make use two heurist help significantli reduc number feasibl solut check spite approxim simul result quit promis show approxim solut reason tight also result secondmo statist show outputr rel smooth much work remain done first plan extend model includ rigid character system overhead due vari degre devicelevel multiplex current assum executiontim alloc integr unit devicespecif penalti function consid also plan get better approxim handov time task chain result tighter analyt result also investig new way achiev faster synthesi result speed converg one need metric approxim direct improv solut space whole would let synthesi algorithm shoot larg number increment improv hope attain quicker solut howev note problem trivial solut space contain mani nonlinear readymad global metric uncondit predict monoton improv yet potenti take advantag rel easi optim strategi hillclimb simul anneal key success lie find reason energi attract function necessarili one exact final current deploy design techniqu sever largescal field test distribut applic host sp2 myrinet system part project requir extend scheme handl dynam system chang onlin arriv departur permit ted componentwis pdf vari time accomplish work selftun mechan get invok chain throughput degrad certain threshold would trigger onlin adjust chain alloc load well associ frame size note analog common problem studi context comput network handl onthefli qo renegoti help smooth fluctuat servic demand fact investig variou strategi propos problem evalu whether modifi arcan equal challeng domain embed realtim system r preemptiv prioriti base schedul appropri engin approach algorithm schedul realtim task input error endtoend deadlin calculu network delay analysi simul fair queue algorithm commun configur fieldbu algorithm schedul tran smission data messag transmiss schedul fieldbu strategi schedul data messag fieldbu endtoend constraint guarante realtim requir resourcebas calibr period process analyz realtim properti dataflow execut paradigm use synthet apertur radar applic hierarch cpu schedul multimedia oper system network algorithm protocol multimedia server fix prioriti schedul period task vari execut prioriti art comput system perform analysi techniqu experiment design deadlin assign distribut soft realtim system visual assess realtim system design case studi cnc control optim algorithm schedul softaperiod task fixedprior preemptiv system note preemptiv schedul period schedul algorithm multiprogram hard realtim environ processor capac reserv oper system support multimedia applic gener processor share approach flow control integr servic network singl node case gener processor share approach flow control integr servic network multipl node case resourc consciou design realtim system endtoend approach task schedul realtim control system reservationbas algorithm schedul period aperiod realtim task proport resourc alloc algorithm realtim analysi hard realtim commun lotteri schedul flexibl proportionalshar manag stride schedul determinist proportionalshar resourc manag provid endtoend perform guarante use nonworkconserv di ciplin provid endtoend statist perform guarante bound interv depend stochast model new traffic control algorithm packet switch network statist analysi gener processor share schedul disciplin tr ctr dongin kang stephen crago jinwoo suh powerawar design synthesi techniqu distribut realtim system acm sigplan notic v36 n8 p2028 aug 2001