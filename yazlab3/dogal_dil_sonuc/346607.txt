symbol cach analysi realtim system cach impos major problem predict execut time realtim system sinc cach behavior depend histori previou memori refer pessimist assumpt cach hit obtain worstcas execut time estim prohibit realtim system paper present novel approach deriv highli accur analyt cach hit function cprogram compiletim base assumpt extern cach interfer eg process dispatch dma activ occur first symbol tracefil instrument cprogram gener base symbol evalu static techniqu determin dynam behavior program memori refer program describ symbol express recurr store chronolog order symbol tracefil second cach hit function sever cach architectur comput base cach evalu techniqu approach goe beyond previou work precis model program control flow program unknown model larg class cach architectur provid accur cach hit predict exampl sparc architectur use illustr accuraci effect symbol cach predict b introduct due highlevel integr superscalar architectur design comput capabl microprocessor increas significantli last year unfortun gap processor cycl time memori latenc increas order fulli exploit potenti processor memori hierarchi must effici util guid schedul realtim system inform execut time requir compiletim model cach present major obstacl toward predict execut time modern comput architectur worstcas assumpt eg everi memori access result cach miss 1 caus poor execut time estim c publish print netherland j blieberg fahring b scholz focu paper accur cach behavior analysi note model cach one perform aspect must consid order determin execut time mani perform characterist blieberg 1994 blieberg lieger 1996 blieberg 1997 fahring 1996 park 1993 heali et al 1995 analyz howev beyond scope paper paper introduc novel approach deriv highli accur analyt function precis number cach hit 2 impli program approach base symbol evalu cf eg fahring scholz 1997 compiletim collect runtim properti control data flow inform given pro gram number cach hit describ symbol express recurr defin program input data maintain relationship cach cost function input data figur 1 depict overview framework describ paper cprogram compil result instrument c program sourcecod level instrument insert code point main memori data referenc read written instrument sourcecod symbol evalu symbol tracefil creat memori refer program describ symbol express recurr store symbol tracefil base cach paramet describ cach architectur analyt cach hit function comput symbol evalu symbol tracefil note model strictli separ machin specif cach paramet program model substanti allevi portabl approach cach architectur program languag perform worstcas cach analysi accord approach divid follow step 1 build symbol tracefil base instrument program sourc use symbol evalu 2 comput analyt cach hit function symbol evalu symbol tracefil 3 find close form express cach hit function 4 determin lower bound cach hit function order deriv worstcas cach behavior program step 1 2 treat paper step guarante precis descript cach hit miss step 3 requir solv recurr relat implement recurr solver describ fahring scholz 1997 symbol cach analysi realtim system 3 ccompil instrument execut cfile instrument cfile symbol evalu symbol tracefil paramet cach cachehit function symbol cach evalu figur 1 overview predict cach perform fahring scholz 1999 current implement recurr solver handl recurr follow kind linear recurr variabl increment insid loop symbol express defin constant invari polynomi recurr variabl increment linear symbol express defin constant invari recurr variabl geometr recurr variabl increment term contain recurr variabl multipli invari algorithm fahring 1998b comput lower upper bound symbol express base set constraint use detect whether recurr variabl monoton increas decreas even close form found recurr variabl monoton inform may use instanc determin whether pair refer ever touch address 4 j blieberg fahring b scholz current implement symbol evalu framework model assign goto simpl io array statement loop procedur result step 3 conserv approxim number exact cach hit miss ie comput upper lower bound use find lower bound cach hit function output form step 3 suitabl normal casestructur possibl compris sever cach hit function condit attach differ case correspond origin program structur affect cach architectur step 4 determin minimum cach hit function casestructur mention note necessari determin worstcas input data program structur impli worstcas cach behavior step 3 4 describ detail fahring scholz 1997 fahring scholz 1999 fahring 1998b rest paper organ follow section 2 discuss architectur model cach section 3 describ symbol evalu outlin new model analyz array section 4 contain theoret foundat symbol tracefil illustr practic exampl section 5 symbol cach evalu techniqu present direct map set associ cach section 6 provid experiment result although approach explain experiment examin base cprogram languag similarli appli procedur languag includ ada fortran section 7 compar approach exist work final conclud paper section 8 2 cach rate processor execut instruct limit memori cycl time limit fact signific problem persist mismatch processor main memori speed cach rel small highspe memori introduc order hold content recent use data main memori exploit phenomenon local refer see hennessi patterson 1990 advantag cach improv averag access time data locat main memori concept illustr figur 2 cach contain small portion main memori cach hit occur cpu request memori refer found cach case refer memori word transmit symbol cach analysi realtim system 5 cpu cach memori transfer block transfer word figur 2 cpu cach main memori cpu otherwis cach miss occur caus block memori fix number word transfer main memori cach consequ refer transmit cach cpu commonli cpu stall cach miss clearli memori refer caus cach miss significantli costli refer alreadi cach past variou cach organ hennessi patterson introduc figur 3a depict gener cach organ cach consist ns slot slot hold n cach line one cach line contain block memori consist cl contigu byte tag hold first address bit memori block figur 3b show address divid three field find data cach block offset field use select desir data block index field select slot tag field use comparison note bit index use n 1 cach character three major paramet first capac cach determin number byte main memori may contain second line size cl give number contigu byte transfer memori cach miss third associ determin number cach line slot block memori resid exactli one locat cach call direct map cach set contain one cach line block resid cach locat cach call fulli associ one slot block resid exactli n locat n size cach set cach call nway set associ case fulli associ set associ cach memori block select replac cach set memori block full processor request data done accord replac strategi smith 1982 common strategi lru least recent use lfu least frequent use random furthermor two common cach polici respect write access cpu first write cach write data memori cach therefor memori cach line second write back cach updat cach line data 6 j blieberg fahring b scholz block offset tag block cach organ figur 3 cach organ item store write back cach cach line mark dirti bit differ memori block replac modifi cach line cach updat memori write access cpu address resid cach call write miss two common cach organ respect write miss first writealloc polici load referenc memori block cach polici gener use write back cach second nowritealloc polici updat cach line address cach polici often use write cach advantag memori alway contain uptod inform elaps time need write access constant symbol cach analysi realtim system 7 cach classifi cach hold instruct call instruct cach cach hold data call data cach cach hold instruct data call mix unifi cach cach design extens studi good survey found alt et al 1996 mueller 1997 ottosson sjoedin 1997 li et al 1996 li et al 1995 heali et al 1995 arnold et al 1994 nilsen rygg 1995 liu lee 1994 hennessi patterson 1990 3 symbol evalu symbol evalu 3 cheatham et al 1979 ploedered 1980 fah ringer scholz 1997 fahring scholz 1999 z construct descript semant program moreov symbol evalu mere arbitrari altern semant descript program relationship arithmet algebra specif arithmet comput dictat program oper gener delay use appropri formula dynam behavior precis repres symbol evalu satisfi commut properti symbol evalu gammagammagammagammagammagammagammagammagammagammagammagammagammagammagammagamma zp paramet result convent execut gammagammagammagammagammagammagammagammagammagammagammagammagammagammagammagamma zpi program p convent execut standard semant given input result symbol evalu program instanti clearli symbol evalu seen compil translat program differ languag use target languag symbol express recurr model semant program semant domain symbol evalu novel represent call program context fahring scholz 1997 fahring scholz 1999 everi statement associ program context c describ variabl valu assumpt regard constraint variabl valu path condit path condit hold given input statement execut formal context c defin tripl p state state condit p path condit gamma state describ set variablevalu pair fv program variabl e symbol 8 j blieberg fahring b scholz express describ valu v 1 n program variabl v exist exactli one pair gamma state condit contain constraint variabl valu impli loop variabl declar user assert path condit predic true program statement reach note compon context includ state inform describ symbol express recurr uncondit sequenc statement j 1 j r symbol evalu initi context repres context hold 1 r context hold r sequenc contain side effect impli chang variabl furthermor context c p logic assert c predic set program variabl program input free variabl input valu c igamma1 hold execut statement c strongest post condit dijkstra 1976 program variabl state satisfi c execut technic detail refer reader fahring scholz 1997 fahring scholz 1999 blieberg burgstal ler 1998 blieberg et al 1999 follow discuss novel approach evalu array 31 array let onedimension array n n 1 array element consid simpl array assign aiv element index substitut valu v intuit may think array assign array oper defin array oper appli array chang intern state argument array oper valu index new assign array element sequenc array assign impli chain oper formal array repres element array algebra array algebra induct defin follow 1 n symbol express n 2 2 2 ff fi symbol express phi ff fi 2 3 noth els symbol cach analysi realtim system 9 int a100x figur 4 cprogram fragment state context array variabl associ element array algebra undefin array state denot size array determin number array element array assign model phifunct semant phifunct given phi ff repres element array fi denot index element new valu ff follow gener array assign context context statement symbol valu variabl evalu statement denot furthermor element least one phifunct phichain everi phichain written length chain jaj number phifunct chain cprogram fragment figur 4 illustr evalu sever array assign context statement j repres c begin program fragment valu variabl x symbol express denot x array undefin j blieberg fahring b scholz 100 array assign statement state path condit set true code fragment impli branch program statement impli chang singl variabl valu order avoid larg list variabl valu state descript variabl whose valu chang evalu associ statement explicitli specifi reason introduc function ffi specifi state whose variabl bind equal state j except variabl v assign new valu e therefor previou exampl state 1 state 0 except symbol valu array last statement array symbol describ 1 leftmost phifunct relat first assign exampl program rightmost one last statement note last two statement overwrit valu first two statement therefor simplifi represent given although equival two symbol express undecid haghighat polychronopoulo 1996 wide class equival relat solv practic set condit among use variabl context significantli improv evalu equival relat partial simplif oper introduc simplifi phichain oper defin follow partial simplif oper seek two equal express phichain pair exist result initi phi chain without phifunct refer fi express smaller index pair exist oper return initi phichain chain could simplifi semant rightmost express relat latest assign overwrit valu previou assign symbol index partial simplif oper reduc one redund phifunct previou exampl must appli twice order symbol cach analysi realtim system 11 simplifi phichain moreov phifunct chain potenti redund one therefor chain potenti simplifi less jaj applic partial complet simplif iter applic partial simplif oper written appli appli simplifi anymor order access element array need model symbol access function oper ae symbol express e describ phichain read element index array index found phichain ae yield correspond symbol express otherwis ae undefin valu latter case possibl determin whether array element index written let element l1 ff l fi l oper ae defin ae symbol index array element found gener determin whether symbol index match phi function undecid practic wide class symbol relat solv techniqu compar symbol express 1998a symbol evalu framework prove result ae fi l ae resolv remain unchang symbol express e present four exampl figur 5 base valu end program fragment figur 4 everi exampl insert one follow statement end code fragment shown figur 4 1 xax 2 xax1 3 xax1 4 xay new variabl symbol valu figur show symbol valu x insert statement note first equat element index x uniqu determin second equat resolv well third exampl index x gamma 1 exist phichain therefor access return undefin symbol last equat enough inform determin uniqu valu array element index distinguish sever case cover possibl j blieberg fahring b scholz 1 2 3 4 figur 5 exampl ae 32 array oper insid loop model loop impli problem recurr variabl 4 use function model recurr follow ik valu scalar variabl end iter k 1 symbol evalu framework detect recurr variabl determin recurr system final tri find close form recurr variabl loop exit solv recurr sy tem recurr system given boundari condit initi valu recurr variabl loop prehead recurr relat impli assign recurr variabl loop bodi recurr condit loop exit condit implement recurr solver scheibl et al 1996 written top mathematica recurr solver tri determin close form recurr variabl base recurr system directli obtain program context implement recurr solver larg base method describ gerlek et al 1995 lueker 1980 improv techniqu fahring scholz 1997 fahring scholz 1999 similar scalar variabl array manipul insid loop describ recurr recurr system consist boundari condit recurr relat ff l k fi l k ff l k fi l k symbol express k recurr index k 0 clearli everi instanc recurr element without chang semant array recurr appli simplifi recurr relat symbol cach analysi realtim system 13 oper ae need extend array recurr array written insid loop access eg aeaz symbol express z number loop iter determin loop exit condit index access element furthermor recurr index k bound 0 k z determin possibl phifunct access element written potenti index set l lth phifunct comput l contain possibl fi l k z equal index index set one element array element written differ loop iter lth phifunct last iter write array element interest consequ choos element greatest index supremum x l index set l greatest index final defin oper ae follow ae az ae maximum supremum indic x l determin symbol valu ff l x l supremum index exist ae return access valu loop exampl code program figur 6 show symbol evalu array access recurr ik resolv state 3 3 due miss inform recurr array resolv symbol evalu still model dynam behavior exampl code 4 symbol tracefil trace method gener sequenc instruct data refer encount program execut trace data commonli store tracefil analyz later point time trace instrument need insert code point program memori address referenc tracefil creat sideeffect execut trace requir care analysi program ensur instrument correctli reflect data code refer program moreov instrument 14 j blieberg fahring b scholz int char a100s0 figur 6 cprogram fragment done sourcecod level machin code level framework need sourcecod level instrument past varieti differ cach profil introduc e g mtool gold berg hennessi 1991 pfcsim callahan et al 1990 cprof lebeck wood 1994 novelti approach comput trace data symbol compiletim without execut program symbol tracefil construct descript possibl memori refer chronolog order repres symbol express recurr follow discuss instrument program figur 6 sparc assembl code list figur 7 first part code loop prepar phase portion code content variabl n load work regist addit address built regist g2 insid loop storag locat n referenc anymor four read access ai ai ai1 two write access ai furthermor variabl held regist base inform instrument exampl program figur 8 instrument program shown function r refrnb denot read refer address r length nb byte write refer function w ref use symbol cach analysi realtim system 15 ld o3long5 read n mov 0o1 add g51g5 cmp o1g5 bge ll3 g2loag2 add g21o4 ldub o2losg2 read ldub o0g3 read ai add g2g3g2 stb g2o2lo write ldub o0g2 read ai ldub o1o4g3 read ai1 add g2g3g2 stb g2o0 write cmp o1g5 bl ll5 add o01o0 retl figur 7 sparc code exampl figur 6 symbol tracefil creat use chain algebra refer store chain symbol trace file 2 induct defin follow 1 2 2 r nb symbol express phi oer nb 2 3 2 r nb symbol express phi r nb 2 4 noth els semant function oe write refer memori symbol address r wherebi number referenc byte denot nb similar semant read refer r address nb number referenc byte instanc 32bit bu cach cpu transfer word refer 4 byte therefor doubl data item j blieberg fahring b scholz compris 8 byte r 8 must load two consecut step 4 word refer need number referenc byte anymor constant exampl legal rewrit r 8 rphir4 notat extens use exampl section 5 loop need recurr l k read write refer r l k nb r l k nb symbol evalu use automat gener symbol tracefil cprogram instead symbol evalu instrument call associ w ref r ref specif semant pseudo variabl 2 ad program read refer r refrnb translat phi r nb state pseudo variabl evalu instrument done write refer except replac oe let us consid exampl figur 8 enter loop need log refer r refn4 therefor equal phin n denot address variabl n insid loop recurr use describ symbol boundari condit t0 equal phi n 4 reflect state loop recurr relat given note altern notat ak start address array final last valu k recurr tk determin loop condit symbol tracefil small portion final program context need therefor extract necessari part final context describ symbol tracefil state condit symbol valu relev exampl figur 8 symbol tracefil given symbol cach analysi realtim system 17 int char a100s0 figur 8 cprogram fragment symbol tracefil length symbol tracefil correspond number readwrit refer either number read number write interest select count element oe instanc number read refer jtj number write refer jtj 1 overal number memori refer given 5 symbol evalu cach symbol tracefil program describ memori refer su cpu chronolog order base symbol trace j blieberg fahring b scholz file deriv analyt function input comput number hit symbol tracefil contain inform obtain hit function moreov symbol cach analysi decoupl origin program thu approach use tailor cach organ due need given applic follow introduc two formal comput hit function direct map set associ data cach symbol simul cach hardwar hit set introduc hit set symbol describ address held cach keep track number hit 51 direct map cach direct map cach easiest cach organ analyz item data exactli one locat direct map cach place 5 cach contain ns cach line size cach line cl determin amount data move main memori cach follow introduc cach evalu direct map cach write nowritealloc polici compar section 2 new cach evalu oper fi defin deriv hit set given tracefil hit set h first compon h symbol cach element second compon repres number cach hit symbol cach c hit set h ns element element correspond cach line cach formal algebra oper c phir fi load memori block start address r cach wherebi fi index cach line note cpu issu address r start address r correspond memori block must select describ refer moreov cach placement function map refer index cach c load oper refer r written c phi r r follow assum function modulo oper ns cl 511 definit cach evalu oper ns 0 denot initi hit set final hit set tracefil final hit set h f analyt descript number cach hit final state cach follow describ oper fi induct first empti tracefil hit set symbol cach analysi realtim system 19 second write refer first refer tracefil chang hit set remov 2 l either read refer r l write refer oer l third read refer new hit set must comput c otherwis increment 1 refer r cach otherwis zero refer r must load load data item address r cach c assign new symbol valu c phi r r order symbol describ condit behavior cach data item cach introduc flfunction see fahring scholz 1997 semant equival cx c condit express c negat c moreov x symbol express base definit fl 6 aggreg formula given 34 5 depend condit aec either number cach hit h 0 increment one symbol cach assign new symbol valu c j blieberg fahring b scholz similar tracefil hit set written pair first compon pair symbol describ hit set second compon contain constraint variabl valu condit recurr stem loop furthermor recursivelydefin tracefil need gener hit set hit set recurr let tk l k tracefil recurr relat h initi hit set hit set recurr express 512 exampl sake demonstr studi exampl figur 6 cach size 4 cach line cach line compris one byte cach placement function r r mod 4 map memori address slot cach moreov refer alreadi transform word refer refer n a0 align first cach line note exampl word refer transfer one byte cpu cach vice versa initi hit set h 0 base symbol tracefil given 1 hit set recurr deriv first appli oper fi hit set recurr accord 8 final hit set given h highest index k recurr determin loop condit follow evalu boundari condit hit set recurr success appli evalu rule 7 oper fi initi hit set 4 0 symbol cach analysi realtim system 21 note condit aec rule 7 fals read refer boundari condit evalu boundari condit still cach hit cach fulli load content variabl n next step analyz loop iter continu appli oper fi recurr relat c k h k denot symbol cach number hit kth iter hit set recurr global variabl map first cach line first slot cach contain address cach hit occur number hit increment otherwis new element load number hit remain appli oper fi obtain next step elimin write refer oe accord rule 2 appli oper fi ak 22 j blieberg fahring b scholz simplifi flfunction content symbol cach k k mod 4 k refer ak load step previou one note write refer oe destroy refer ak last step refer ak oeak evalu continu third flfunction reduc sinc element k1 never written condit aec 00 hit set recurr still condit investig necessari deriv close form number hit know number cach line four consid four modulo class index k given exampl result uncondit recurr 0 condit aec k first flfunction fals sinc aec k 0 rewritten k k 1 otherwis condit second flfunction aec 0 fals well cach line load refer case k mod hit set recurr reduc uncondit recurr first flfunction condit aec k never true previou step recurr symbol cach analysi realtim system 23 cach line 1 load content ak gamma 1 fur thermor element ak fetch previou step therefor condit second flfunction evalu true hit set recurr written 3 case condit flfunction true load refer interfer ak ak 1 recurr given extract number hit hit set 9 10 11 modulo class rewritten k replac 4i modulo class boundari condit stem number hit h0 recurr linear resolv obtain index z final hit set h determin z 1 analyt cach hit function h z given 12 approxim 9 exampl condit recurr collaps uncondit one gener obtain close form specif although import class condit recurr recurr resolv employ approxim techniqu describ fahring 1998a j blieberg fahring b scholz1n1 figur 9 nway set associ cach 52 set associ fulli associ cach section investig nway set associ write data cach writealloc polici least recent use replac lru strategi organ setassoci complex direct map data cach due place memori block n possibl locat slot compar section 2 similar direct map cach defin cach evalu oper fi deriv hit set given tracefil set associ cach hit set tupl cach h number hit max symbol counter increment everi read write refer note symbol counter need keep track least recent use refer slot figur 9 illustr symbol represent c set associ cach c array ns slot slot denot ns gamma 1 hold n cach line array c slot element array algebra formal algebra oper phi r fi load memori block start address r set wherebi fi index 0 fi n current symbol valu max read valu r denot ae r fi read time stamp written ae fi whole set load cach c via c phi note cpu issu address r start address r correspond memori block must select describ refer similar direct map cach cach placement function map memori refer slot load oper refer r written c phi aec r phi r r r function determin symbol cach analysi realtim system 25 index slot accord lru strategi defin exist ae note first case determin spare locat slot first spare locat determin second case comput least recent use cach line slot 521 definit cach evalu oper ns 0 0 denot initi hit set final hit set tracefil final hit set h f analyt descript number cach hit final state cach follow describ oper fi induct first empti tracefil hit set second read write oper r first memori refer tracefil new hit set deduc follow symbol counter max increment one furthermor slot refer r determin increment given 0 otherwis exist element slot equal r cach hit occur increment refer r must updat new time stamp function r look index refer r store slot r describ recurr 0 cach miss occur refer load cach 26 j blieberg fahring b scholz aggreg formula 13 18 flfunction depend condit new element updat new time stamp load cach note fl function nest formula 19 nest fl recurs expand compar 6 expand boolean express ad correspond true fals term higherlevel flfunction furthermor recursivelydescrib tracefil need gener hit set hit set recurr compar 8 522 exampl symbol evalu exampl figur 6 2way set associ cach two slot cach line size one byte cach organ word refer transfer one byte cpu cach vice versa thu cach size section 51 cach organ chang cach placement function r r mod 2 assum refer symbol tracefil alreadi transform word refer refer n a0 align first slot initi hit set h 0 base tracefil given 1 hit set recurr deriv similar exampl section 51 appli oper fi hit set recurr accord 8 read refer boundari cach hit occur cach load content variabl n number cach symbol cach analysi realtim system 27 hit zero next step evalu recurr relat continu appli oper fi accord rule 19 c k h k k denot symbol cach number hit time stamp counter kth iter hit set recurr order keep descript hit set recurr small possibl rewrit outer flfunction 20 p appli oper fi obtain next step evalu write refer oe get 28 j blieberg fahring b scholz simplifi flfunction variabl read within current iter loop without overwritten cach condit outer flfunction evalu true henc obtain similar previou step reduc flfunction read refer ak produc cach miss thu next step simplifi symbol cach analysi realtim system 29 last step fi oper appli write refer cach hit elimin fl function argument similar section 51 show condit outer flfunction p 0 p 00 true k 1 fals therefor deriv uncondit recurr relat number cach hit k 1 3 close form solut given 2 index z final hit set h determin z 1 thu analyt cach hit function show exampl set associ cach perform better direct map cach size 6 experiment result order assess effect cach hit predict chosen set cprogram benchmark adopt evalu framework introduc fahring scholz 1997 fahring scholz 1999 program languag c cach evalu instrument done hand although exist tool cprof lebeck wood 1994 could instrument benchmark suit symbol evalu framework comput symbol tracefil symbol evalu data cach order compar predict real valu j blieberg fahring b scholz int n char a100 void sum int figur 10 benchmark program measur cach hit given cach problem size measur empir data use ac cach simulatorhunt 1997 program benchmark suit amend instrument routin provid librari bin2pdt gener tracefil store pdat johnson ha 1994 file later read ac cach simul first program benchmark suit exampl program figur 10 contrast section 5 analyz direct map data cach cach line size greater one byte furthermor first byte array align first byte arbitrari cach line cach one cach line framework comput cach hit function number cach hit determin cl upsilon cl cach line size 4 8 byte intuit get 2n gamma 1 potenti cach hit everi new cach line miss impli therefor subtract number touch cach line cl upsilon number read refer tabl ia describ problem size n n first column number read rref second column write wref third column ref erenc sum read write refer tref fourth column tabl measur predict cach hit variou data cach configur capacitycach line size instanc dcach 2564 correspond cach 256 byte cach line size 4 byte everi tabl compris four column mmiss tabul measur cach miss mhit measur cach hit phit predict cach hit accord accur symbol cach analysi observ predict hit ident associ measur cach configur consid benchmark program taken deriv analyt cach hit function set associ data cach note result direct map cach even empir studi two way data cach capac deliv measur given tabl ib id symbol cach analysi realtim system 31 tabl problems rref wref tref 28 1000 1999 999 2998 10000 19999 9999 29998 tabl ib dcache2564 mmiss mhit phit 100 26 173 173 1000 251 1748 1748 10000 2501 17498 17498 tabl ic dcache16k8 mmiss mhit phit 1000 126 1873 1873 10000 1251 18748 18748 tabl mmiss mhit phit j blieberg fahring b scholz tabl iia experi mcnt problem size nthetam rref wref tref tabl iib dcach 64k16 nthetam mmiss mhit phit 100theta100 5000 5000 5000 100theta200 100000 100000 100000 second program mcnt benchmark suit count number neg element n theta mmatrix counter held regist interfer memori refer matrix analyz program three differ direct map cach configur 2564 16k8 64k16 data cach size 2564 16k8 cach hit function zero due float fnn unn newnn void jacobirelax int ij figur 11 jacobi relax symbol cach analysi realtim system 33 tabl iiia experi jacobi relax problem size nthetan rref wref tref 90theta90 48020 9604 288120 tabl iiib dcach 2564 nthetan mmiss mhit phit tabl iiic dcach 5124 nthetan mmiss mhit phit 50theta50 7102 4418 4418 90theta90 47672 348 348 tabl iiid dcach 1k4 nthetan mmiss mhit phit 50theta50 7102 4418 4418 90theta90 34 j blieberg fahring b scholz usag doubl element matrix 64k16 configur program benefit data cach cach hit given sigma ndeltamupsilon tabl iia iib analyt function compar measur result similar first benchmark cach hit function remain set associ data cach capac measur ident tabl iib third program jacobi relax figur 11 calcul jacobi relax n theta n float matrix doubli nest loop valu result matrix new comput loop variabl held regist therefor direct map data cach interfer occur read refer array f u investig jacobi relax code cach configur 2564 5124 1k4 number cach hit given ns ns ns ns ns n ns accord section 4 ns number cach line compar measur cach hit valu cach hit function result experi shown tabl iiia iiid fourth program gauss jordan figur 12 linear equat solver note program contain ifstat insid loop variabl ip j k held regist direct map data cach interfer occur read refer array analyz gauss jordan algorithm cach configur 2564 could classifi three differ rang n behavior hit function vari cn must describ n rang furthermor p n function contain 64 case note number 64 stem number cach line sake demonstr enlist symbol cach analysi realtim system 35 float ann void gaussjordanvoid int iipjk j aji aik aii figur 12 gauss jordan case tabl iva ivb compar measur result function valu hit function abil determin accur number cach hit depend complex input program qualiti techniqu resolv recurr analys complex array subscript express loop bound branch condit interprocedur effect pointer oper impact accuraci cach hit function instanc close form comput recurr introduc approxim symbol upper lower bound fahring 1998a provid detail analysi code handl symbol evalu fahring scholz 1999 36 j blieberg fahring b scholz tabl iva experi gauss jordan problem size nthetan rref wref tref 200theta200 15999600 3999900 19999500 2000theta2000 15999996000 3999999000 19999995000 tabl ivb dcach 2564 dcach 2564 nthetan mhit phit 200theta200 7060901 7060901 2000theta2000 5825464317 5825464317 7 relat work tradit analysi cach behavior worstcas execut time estim realtim system park 1993 puschner koza 1989 chapman et al 1996 far complex recent research ar nold et al 1994 propos method estim tighter bound wcet system cach work success appli instruct cach liu lee 1994 pipelin architectur heali et al 1995 lim et al 1994 extend origin time schema introduc puschner koza 1989 handl pipelin architectur cach architectur nearli method reli frequenc annot statement programm provid wrong annot qualiti predict doubt approach need user programm interact sinc deriv necessari inform program code 6 restrict program structur ghosh et al 1997 major compon framework describ arnold et al 1994 static cach simul mueller 1997 realiz data flow analysi framework alt et al 1996 altern formal reli techniqu abstract interpret present approach base dataflow analysi symbol cach analysi realtim system 37 properli model control flow among other deal dead path zerotrip loop care consid evalu framework fahring scholz 1997 blieberg 1997 implicit path enumer ipet li et al 1995 li et al 1996 allow express semant depend constraint control flow graph use integ linear program model frequenc annot still requir addit problem ipet count number hit miss keep track histori cach behavior littl work done introduc histori variabl ottosson sjoedin 1997 ipet model ifstat correctli provid programm suppli correct frequenc annot lack adequ handl loop tracefil exactli describ data control flow behavior program among other enabl precis model loop theil ferdinand 1998 ipet enrich inform abstract interpret describ alt et al 1996 graph color approach use rawat 1993 estim number cach miss realtim program approach support data cach random replac strategi 7 employ standard dataflow analysi requir compil support place variabl memori accord result present algorithm allevi assumpt loop cach perform improv transform loop unrol make analysi less precis approach assum everi memori refer access insid loop specif loop iter caus cach miss analysi consid refer might transmit cach due cach miss previou loop iter much research done predict cach behavior order support perform orient program develop approach base estim cach miss loop nest ferrant et al 1991 comput upper bound number cach line access sequenti program allow guid variou code optim determin upper bound cach miss array refer innermost loop inner two loop number cach miss innermost loop caus cach overflow multipli product number iter overflow loop contain loop approxim techniqu may entail polynomi evalu suffer limit control flow model unknown loop bound branch etc lam et al 1991 develop anoth cach cost function base number loop carri cach reus either tempor 38 j blieberg fahring b scholz relat data element spatial relat data element cach line employ reus vector space combin local iter space cross interfer element differ array displac cach self interfer interfer element array model loop bound consid even known constant temam et al 1994 examin sourc code numer code cach miss induc loop nest fahring 1996 1997 implement analyt model estim cach behavior sequenti data parallel fortran program base classif array refer control flow model loop bound branch etc model profil analyt cach cost function approach goe beyond exist work correctli model control flow program even presenc program unknown branch ifstat insid loop cover larger class program languag cach architectur particular data cach instruct cach unifi cach includ direct map cach set associ fulli associ cach handl import cach replac write polici approach accur comput cach hit wherea method restrict approxim close form express conserv approxim found accord step describ section 1 symbol evalu also use wcet analysi without cach blieberg 1997 therebi solv dead path problem program path analysi park 1993 altenbernd 1996 addi tion use perform standard compil optim thu optim framework integr optim compil wcet analysi compar engblom et al 1998 differ approach 8 conclus futur work paper describ novel approach estim cach hit impli program written procedur languag clude c ada fortran gener symbol tracefil input program base symbol evalu static techniqu determin dynam behavior program symbol express recurr use describ memori refer program store chronolog symbol tracefil cach symbol cach analysi realtim system 39 hit function sever cach architectur comput base cach evalu techniqu follow describ contribut research target upper bound cach miss focu deriv accur number cach hit automat determin analyt cach hit function compiletim without user interact symbol evalu enabl us repres cach hit function program unknown eg input data approach allow comparison variou cach organ given program respect cach perform easili port techniqu across differ architectur strictli separ machin specif paramet eg cach line size replac strategi etc machineindepend paramet eg loop bound array index express etc novel approach introduc model array part symbol evalu maintain histori previou array refer shown experi demonstr effect approach predict cach behavior exampl code perfectli match measur data although appli techniqu direct map data cach write writealloc polici set associ data cach write writealloc polici possibl gener approach cach organ well moreov approach also applic instruct unifi cach addit work extend analyz virtual memori architectur combin analysi cach pipelin via symbol evalu conduct near futur compar heali et al 1999 differ approach qualiti cach hit function depend complex eg recurr interprocedur effect pointer etc input program instanc find close form recurr employ approxim upper bound current extend symbol evalu techniqu handl larger class input program addit build sourcecod level instrument system sparc processor architectur investig applic techniqu multilevel data instruct cach final process conduct experi larger code j blieberg fahring b scholz note 1 cach miss occur referenc data cach need load main memori 2 cach hit occur referenc data cach 3 symbol evalu confus symbol execut see eg king 1976 4 variabl written insid loop includ loop variabl call recurr variabl 5 slot consist one cach line see section 2 6 clearli approach bypass undecid 7 random replac seem question realtim applic indeterminist behavior r analyz visual perform memori hierachi disciplin program kluwer academ publish comput architectur quantit approach research interest includ area analysi algorithm data structur studi comput scienc tu vienna receiv doctor degre reader may contact johann blieberg depart computeraid autom thoma fahring thoma fahring receiv master degre reader may contact fahring institut softwar technolog parallel system bernhard scholz bernhard scholz go enrol posit assist professor comput scienc dept reader may contact scholz dept figur 13 technic univers vienna tr ctr berhard scholz johann blieberg thoma fahring symbol pointer analysi detect memori leak acm sigplan notic v34 n11 p104113 nov 1999 thoma fahring bernhard scholz unifi symbol evalu framework parallel compil ieee transact parallel distribut system v11 n11 p11051125 novemb 2000 johann blieberg dataflow framework worstcas execut time analysi realtim system v22 n3 p183227 may 2002 b b fraguela r doallo j tourio e l zapata compil tool predict memori hierarchi perform scientif code parallel comput v30 n2 p225248 februari 2004