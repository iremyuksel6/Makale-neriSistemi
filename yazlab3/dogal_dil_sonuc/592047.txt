modelcomposit problem userinterfac gener autom userinterfac gener environ critic failur deliv rich power interact applic specifi power system design requir multipl special model notat modelcomposit problem concern automat synthes power correct effici user interfac multipl model specifi differ notat solut modelcomposit problem must balanc advantag separ code gener special code gener abl take advantag deep modelspecif knowledg correct effici obstacl result separ present correct effici solut maxim advantag separ use runtim composit mechan b introduct build user interfac ui time consum costli system graphic ui gui nearli 50 sourc code line develop time attribut ui 14 gui usual built fix set modul compos regular way henc gui construct natur target automa tion autom tool success support present aspect gui function provid limit support specifi behavior interact ui underli applic function modelbas approach interact system develop address defici decompos ui design construct separ model declar specifi 5 specifi autom tool integr model gener effici system modelcomposit problem need effici implement automat integr interact softwar specifi separ declar model paper introduc modelcomposit problem present solut model declar specif singl coher aspect user interfac appear interfac interact underli applic function focus attent singl aspect user interfac model express highlyspeci notat properti make system develop use modelbas approach easier build maintain system produc use approach 23 e r e e ui synchron toolkit modul model model model dialogu applic present present dialogu applic modul modul modul figur 1 modelbas code gener mastermind project 5 15 concern automat gener user interfac three kind model present model repres appear user interfac term widget widget behav applic model repres part function data applic access user interfac dialog model repres endus interac tion order affect present applica tion dialog model act glue present applic model express constraint sequenc behavior model modelspecif compil gener modul code model result modul compos complet user interfac figur 1 distinguish characterist mastermind modelspecif code gener work independ one anoth compos code gener multipl model difficult model de sign repres singl aspect system neutral respect other 3 inevit howev function describ one model overlap depend upon function describ anoth button exampl specifi present model behavior button influenc behavior model press button caus widget enabl di abl effect describ dialog model effect press button also caus applic method invok effect describ applic model code gener multipl model must cooper redund depend difficult resolv resolv automat mean behavior differ model must correctli unifi mechan unif must implement effici modelcomposit problem concern automat synthes power correct effici userinterfac separ present dialog applic model present twofold solut first formal three model concurr agent synchron common event sec tion 3 second present runtim architectur support composit modul gener independ model compil section 4 present modelcomposit problem 3 result approach two exampl give evid show scale section 5 2 background modelbas approach userinterfac gener use model specifi divers often incompat notat characterist complic model composit composit mechan one model may exist anoth section 21 prior research architectur userinterfac suggest use commun agent structur userinterfac code section 22 formal model commun agent provid techniqu call conjunct use compos partial specif system section 25 contribut paper extens conjunct specificationcomposit oper runtimecomposit mechan 21 modelbas gener modelbas approach interact system develop express system analysi design implement term integr collect mod el unlik convent softwar engin design compos softwar document whose mean relev diverg deliv code modelbas approach design build model critic system attribut analyz refin synthes model run sy tem modelbas ui gener work premis develop support environ may built around declar model system develop use approach build interfac specifi model describ desir interfac rather write program exhibit behavior 21 one characterist modelbas approach restrict focu model singl aspect system model notat special highli declar mastermind present model 6 exampl combin concept terminolog graphic design mechan describ complex present use function constraint mastermind dialog model 19 use state event construct describ usercomput convers composit featur includ state hierarchi concurr commun mastermind applic model combin concept terminolog objectori design techniqu 18 mechan compos complex behavior base method invoc figur 2 compar mastermind model term domain di cours commun mechan runtim compon com pose composit mechan one model may exist anoth model singl one intramodel mechan suffici compos three mastermind model modelcomposit problem restat need unifi behavior multipl model without violat rule intramodel composit gener effici code modelcomposit problem declar instanc problem construct softwar system modul process implement action implement intramodul composit applic abstract method invoc subclass aggreg present amulet object constraint command instanti aggreg dialog state machin synchron messag pass orthogon composit figur 2 multiparadigm action implement jor compon express program languag differ famili paradigm zave call multiparadigm program problem 24 22 multiag userinterfac architectur mastermind approach model composit build prior work multiag userinterfac architectur provid design heurist structur interact system architectur describ interact system collect commun agent independ comput unit ident behavior two gener frameworksmodelviewcontrol mvc 11 agent role provid guidanc agent connect mvc prescrib smalltalk simul compos instanti instanc three type agent model confus masterimind model describ applic state view provid present model control allow user affect simul behavior view regist interest one attribut model attribut chang regist view notifi recomput display necessari pac framework close match mastermind mvc pac present agent maintain state display accept input user abstract agent maintain represent underli applic state control agent ensur present abstract remain synchron mastermind present applic dialog model descript role play pac present abstract control agent sinc mastermind model describ pac agent chose make mastermind model compos manner pac agent compos specif present applic model defin action order tempor constraint dialog model make idea formal built upon prior work formal definit agent composit modelcomposit problem 5 23 formal model agent pac framework provid heurist definit userinterfac agent role connect pac agent concurr compos commun control data messag among gener code model agent need formal build block agent agent compo sition chose terminolog definit adopt variou process algebra specif loto 4 process algebra formal concurr commun prove particularli use describ ui softwar collect agent 1 2 notat statechart 8 petri net 16 also explor model ui agent altern notat also provid definit concurr commun chose loto composit loto resembl conjunct 25 use paradigm compos partial specif section 25 model behavior agent use loto abstract call process comput entiti whose intern structur discov observ interact environ process perform intern unob servabl comput interact concurr execut process interact process synchron one process tri commun process readi commun former process block latter readi thu act commun synchron concurr process process repres state agent procedur perform futur action action atom comput step taken individu pro cess action process observ event action particip event observ unit multiprocess commun multipl process particip event simultan perform action gate gate primit synchron devic use observ occurr action process action associ singl gate gate composit agent union gate constitu two constitu name gate action gate proceed simultan process associ constitu agent synchron action share gate name thu gate also repres class possibl interprocess synchron event event action offer one data valu observ action process particip event complet agent model process repres initi state agent multiag system model collect concurr commun process compos system multipl agent design must decid coordin action variou process model agent coordin synchron action label ident name gate 6 stirewalt rugab 24 loto loto rich languag specifi partial order action within process structur multiprocess interact complex process may express either combin subprocess use order oper eg process p sequenti composit subprocess p 1 p 2 conjoin subprocess run independ synchron action gate event allow valu flow particip action loto also describ semant valu pass respect synchron action loto follow structur action gate inputjoutput input output gate identifi action name gate zero input output input name variabl record valu offer action anoth process output express comput valu offer action process action concis repres occurr mani possibl event like action event associ particular gate unlik action event concept input output rather repres uniqu valu flow action event follow structur event gate valu valu note valu alway constant event uniqu assign valu synchron loto gate two conjoin process requir synchron must specifi vertic line symbol conjunct oper k exampl given follow loto process definit process process process r process r behav like p gate g 3 q gate g 4 r must behav like p q synchroni gate g 1 g 2 process mani gate loto notat quickli becom unread paper abbrevi conjunct oper use notat convent similar use csp 9 abbrevi notat write conjunct p q p k q understand p q must synchron gate common agent whose state p q respect repres suppos behavior agent describ loto process b agent perform action synchron event e denot modelcomposit problem 7 behavior point defin anoth process system studi determinist mean alway uniqu moreov system defin conjoin subprocess composit structur preserv throughout lifetim system occur gate agent event observ process p also observ conjunct p process fact import defin observ function section 34 25 conjunct composit alexand use conjunct compos separ defin applic present agent 2 abowd use agentbas separ illumin usabl properti interact system 1 approach reli use conjunct compos agent defin separ interact fact conjunct gener oper compos partial specif system 25 idea partial specif impos constraint upon variabl case agent event mention partial specif specif conjoin common variabl must satisfi constraint defin behavior system gener mastermind model behavior consist conjunct constraint impos dialog present applic model extend conjunct specif tool mechan compos runtim modul 26 summari three issu must address solv modelcomposit problem solut must gener userinterfac rich dynam behavior correct modul composit must demonstr gener modul must cooper effici mastermind rich express power achiev specialpurpos model notat 15 5 remaind paper address gener correct implement maxim effici preserv express power mastermind model 3 modelcomposit theori recal figur 1 class model code gener synthes runtim modul model class modul gener without detail knowledg model run time howev modul must cooper prescrib conjunct model gener section describ relationship model composit mechan associ modul cooper runtim 31 notat subject paper automat gener composit runtim modul designtim model modul unit code gener singl model use third class constructth loto processto defin correct model modul composit formal argument need refer three type construct thu distinguish construct use differ font also need special function map model modul compar domain repres class mastermind model use german letter symbol repres respect class mastermind present dialog applic model use ital font repres loto process semant model process set p rocess repres set loto process specif process written capit ital letter eg p respect set raceset defin set event trace alphabet gate space valu offer observ loto action function raceset map loto process set event trace observ process repres runtim entiti use san serif font set compon repres class runtim compon compon block code provid gate observ action compon defin compon runtim code provid gate observ behavior defin function raceset map compon set event trace observ gate compon provid two categori compon mastermind architectur gener modul synchron composit modul instanc gener modul written pre dialog appl respect also think modul synchron composit compon attain connect gener modul use synchron infrastructur de fine section 4 composit compon written synchpr dialog appl name synch suggest compon synchron three gener modul bracket suggest gener modul fit larger system synch compon 32 intermodel composit modelbas code gener construct runtim modul designtim mod el code gener strategi modelspecif reflect special model particular aspect system run time howev modul must co oper cooper behavior must violat correct constraint impos model inher distinct behavior modelcomposit problem 9 limit confin given model behavior affect affect model intermodel composit concern manag latter intermodel behavior behavior highli model specif neither influenc affect behavior specifi model figur 2 illustr mastermind present model graphic object implement use primit amulet toolkit 13 attribut relat implement declar formula runtim eagerli propag attribut chang depend attribut long chang attribut trigger behavior dialog applic model aspect ignor consid model composit applic model object specif compil abstract class assumpt design later extend subclass provid implement abstract method long detail extens trigger behavior dialog present model applic behavior may also ignor defin model composit within modul entiti compos accord modelspecif polici present model exampl object compos partwhol aggreg attribut compos formula evalu depend attribut applic model object compos use combin subclass aggreg polymorph consid model compos detail intramodel composit abstract away model impos tempor sequenc constraint occurr intermodel action model contribut valu comput entir system constraint contribut must captur form use reason model composit map intermodel behavior semant domain common across model domain describ loto notat specifi tempor constraint action data valu assum loto process deriv text model specif section 34 design may exampl need design action interest model loto process captur behavior model composit express essenti intermodel constrain behavior 33 exampl present exampl intermodel behavior express loto process dialog model consid printsav widget similar found user interfac draw tool web browser word processor see figur 3 widget allow user format document print either physic printer file disk call former task print latter task save option specif print print orient eg portrait vs landscap save name file save typic enabl disabl depend upon user choic task order depend reflect dialog model widget shown loto process figur 4 figur 3 screen shot printsav dialog box process p rintsav synchron gate follow squar bracket exampl gate print save go cancel layout kbd line 1 figur defin point synchron present wherea gate lpr write defin point synchron underli applic process paramet lpdhost f ilenam line 2 store name default printer userselect filenam respect paramet doc repres document print save paramet port repres print orient portrait true landscap fals widget figur 3 specifi separ present model shown model defin pair radio button label file printer two button label ok cancel button press offer event save print go cancel respect present model also contain pair radio button specifi paper orient button display graphic page either portrait landscap mode select offer event port valu true choic portrait orient fals landscap orient final text entri box user type file name user edit name text box respond offer content string type far part kbd event note actual press return edit function best handl text widget consid intermodel behavior separ applic model shown defin procedur issu print request save file disk procedur respons event lpr write respect action synchron event offer number valu includ printer name lpdhost filenam f ilenam modelcomposit problem 11 1 process printsav print save go cancel layout kbd lpr write 2 3 p go lpr write layout kbd 4 5 process p go lpr write layout kbd 7 endproc 8 process f go lpr write layout kbd 9 edit go write kbd 10 endproc 11 process layout go lpr layout 12 13 go lpr lpdhost 14 endproc 15 process edit go write kbd 17 19 endproc figur 4 printsav dialog process tempor structur dialog present applic model composit given behavior specif line 3 behavior p rintsav behavior process p defin line 5 7 caveat may disabl termin time observ cancel event disabl shown oper process p repres interact applic invoc must happen order send document printer function actual express subprocess layout defin line 11 14 p behav like layout normal case disabl save event observ recal save event offer whenev user press save file button present model process f defin line 8 10 likewis behav like process edit defin line 15 18 normal case disabl event print observ note f p disabl mean user switch back forth print save mani time like hit go button gammagammagammagamma p rocess cd compon ob gammagammagammagamma raceset figur 5 dialog compil correct 34 model modul process like shown figur 4 use understand relationship model modul relationship complex describ first singl model three model composit formal correct condit mastermind dialog model similar formal exist mastermind model figur 5 show relationship dialog model member set runtim modul gener dialog model member set dialog intermodel behavior dialog model member set p rocess relationship set defin function map member one set member anoth function cd dialog map dialog model runtim modul think cd abstract descript dialogmodel compil rocess map dialog model loto process describ intermodel behavior think ad abstract interpret dialog model express semant loto set function relat commut diagram figur 5 extern observ model behavior map loto process ad set trace modul extern observ event record ob say dialog model 2 consist modul cd everi trace set rad sequenc 62 obscd intermodel behavior interpret agre exactli observ behavior runtim modul gener commut diagram requir properti dialog model set 35 modelbas synthesi correct relationship model modul figur 5 extend specifi correct modul composit function ap ad aa map model loto process process compos conjunct also runtim compon synch combin modul pre dialog appl singl compon whose action observ ob function figur 6 show constraint behavior entiti let p 2 p 2 2 code gener modelcomposit problem 13 figur 6 modulecomposit correct model correct observ behavior oe oe legal trace conjunct model equat defin condit necessari correct modul composit without assum modelspecif interpret action serv therefor specif design requir next section present implement satisfi requir 4 modulecomposit runtim architectur turn design runtim synchron modul modelspecif compil figur 1 essenti design problem make gener modul compos retain independ modelspecif compil condit figur 6 impos constraint design tunat constraint requir modelspecif knowledg eg graphic concept present model data layout applic model thu modulecomposit logic separ modelspecif function within modul separ key make modelbas synthesi independ without sacrif correct modul integr mastermind runtim librari contain effici primit class enabl independ modul synthesi correct composit conjunct librari provid great deal gener flexibl code gener paper describ aspect librari relev support independ synthesi first introduc mechan compos gener modul section 41 describ mechan implement conjunct without sacrif independ model synthesi section 42 demonstr oper exampl section 43 41 design structur support conjunct facilit independ model synthesi design mechan enabl modul compos modul without directli referenc figur 1 suggest gener modul compos aid special synchron compon call synch design synch interfac simplifi gener modul section describ interfac process model compil integr figur 7 illustr interfac gener modul synch compon modul contain action object link explicitli refer gate 14 stirewalt rugab action action action action action action gate gate gate synch dialog pre appl figur 7 structur depict composit accord synchpr dialog appl object synch compon name suggest action object reifi loto action gate object reifi loto gate runtim action implement unit observ behavior modul gate implement synchron action conjunct mathemat connect loto action gate reifi use explicit link action gate object link constitut mechan compos gener modul synch compon modul plug architectur link action object appropri gate object synch compon dash line figur 7 illustr mani possibl link architectur enabl model synthesi treat separ modul integr similar way compil treat separ link tradit program separ allow modul synthes singl model independ synthesi model synthesi modelbas compil independ gener modul behavior must observ modul must packag instanc class action emit code creat instanc compil also write name associ gate auxiliari file consequ output model compil modul auxiliari file list name depend gate modul integr modul integr read auxiliari file creat synch compon combin gener modul produc execut imag go back run exampl consid compil present model printsav dialog box figur 3 model process compil emit action object interfac directli ui toolkit widget compil pre modul contain action widget dialog box exampl distinct action object pair ok cancel button radio button filenam textentri widget integr pre modul modul action must link gate object synch compon note action emit correspond gate object yet exist gate creat modul integr thu link action correspond gate establish compil time instead action object instanti name gate modelcomposit problem 15 void enabl void disabl action abstract modulesourc void registerappl void unregisterappl dialappg void registerpr void unregisterpr presdialg gate abstract void confirmlisten void synchron presdialappg void unregisterdi void registerdi dialgat void execut command abstract listen abstract void listen void ignor gener disjoint subclass gener overlap subclass legend synchron actionrol abstract figur 8 detail design action gate class must synchron runtim action use name locat correspond gate modul integr creat gate name gate action object assum gate exist runtim design greatli simplifi model compil presentationmodel compil need concern locat object anoth compon rather compil simpli creat modul use action object write name gate auxiliari file 42 behavior design structur synthesi one mastermind model proceed independ synthesi model gener modul refer indirectli gate object gate object respons determin synchron occur dispatch control associ action object appropri order synchron constraint satisfi cons quentli action object need concern issu rather action concern implement modelspecif function separ crucial support independ model synthesi figur 8 describ design class action gate class gate design intern inform modul whose action requir synchron gate henceforth shall refer inform synchron constraint gate rule conjunct figur number possibl variat constraint runtim gate determin whether synchron check whether constraint satisfi make determin gate must infer locat modul action wish synchron gate call process infer tabul tabul occur action announc readi synchron announc made action regist gate action regist pass invoc regist oper gate gate determin constraint satisfi invok synchron oper dispatch control regist action may execut gate tabul modul request activ gate must abl infer modul everi action regist mean action must know modul exist class action subclass call modulesourc special three subclass pre dialand appl shown figur concret class everi action must inherit one three subclass implement tabul special regist oper dispatch base subclass subclass gate contain modul variat regist function subclass embodi three possibl synchron constraint aris mastermind constraint associ class presdialg requir pre dial action present gate similarli constraint associ class dialapplg requir dial appl action present gate constraint associ class presdialogapplg requir action three modul present gate three type synchron constraint requir mastermindgener user interfac next issu concern dispatch control regist action gate synchron constraint satisfi mastermind support two differ action control mechan gener actionrol one mechan gener interfac execut modelspecif oper class command mechan gener interfac reactiv observ asynchron event user interact graphic widget class listen happen gate synchron constraint satisfi depend upon control mechan use regist action exampl two command wait gate satisfi synchron constraint gate execut method command invok instead one action listen command command invok listen receiv event listen reactiv need abl announc recept event gate accomplish invok confirm oper gate modul request perform action invok oper enabl enabl caus action regist gate design abstract logic request perform action enabl disabl method correctli cooper correspond gate irrespect particular synchron constraint thu logic complet encapsul abstract class action modelcompil writer need never modifi moreov modelcompil writer packag modelspecif function use one two quit differ control polici command listen one consequ design modul integr must determin type gate emit simpl task howev given inform written modelcomposit problem 17 gener legend pointer oper pseudocod void listen void ignor listen abstract widget amtextinputwidget void textfieldact void listen void ignor pre figur 9 exampl use auxiliari file model compil exampl gate cancel use printsav dialog use present model observ press cancel button dialog model observ complet dialog modul compos conjunct gate associ cancel alway synchron action pre modul action dialog modul implement behavior modul integr emit instanc presdialogg return associ action link name gate 43 exampl demonstr featur work context printsav dialog recal figur 3 text entri field allow user enter file name save document dialog model figur 4 entri file name model atom action gate kbd connect dialog action text entri widget ultim wit action need present action know attach text entri widget need gate object repres kbd gate figur 9 illustr reusabl action listen text entri creat primit introduc section 42 presentationmodel compil emit instanc class implement textentri box fig ure render primit class grey distinguish new object class modelcompil writer creat new class call textfieldact inherit class pre instanc emit pre modul inherit class listen concern monitor control textinput widget class associ text input widget object associ call widget object prede fine amulet toolkit 13 current version mastermind use present support textfieldact control amulet object invok start stop oper object instruct widget enabl disabl keyboard input invoc method form implement listen ignor respect also need way widget signal action object event accomplish overrid method widget go find gate associ action invok confirm oper gate signifi occurr event method thought callback function amulet invok deliv event case event keyboard return exampl serv illustr sequenc behavior enact mastermind librari primit suppos object class textfieldact regist gate associ kbd synchron constraint gate satisfi gate invok listen method textfieldact invoc turn caus start method text input widget invok enabl user input widget synchron context chang constraint longer satisfiedeith pre modul disabl textfieldact anoth modul disabl action wait gate gate invok ignor oper caus textfieldact invok stop method text input widget disabl text input hand user enter string hit return key method widget invok caus invoc confirm method gate gate proce execut command wait 44 summari design enabl independ code gener action gener modul insul action modul gate object compos modul creat gate object embodi synchron requir model link action gate independ afford approach allow modelbas code gener appli deep modelspecif knowledg synthesi code 5 result statu evalu solut modelcomposit problem respect power correct effici multiparadigm action prove easi special accommod featur dispar implement toolkit architectur exampl special action repres action amulet object system 13 c object system specialpurpos statemachin languag figur 2 summar differ applic result modelcomposit problem 19 51 power abl express user interfac use model notat sever case studi test qualiti user interfac two specif exampl printsav widget describ section 33 airspaceandrunway execut support airtraff control atc 19 former demonstr abil gener common highli reusabl code standard graphic user inter face latter demonstr abil support complex applic use directmanipul interfac atc exampl testifi power approach flight number key textentri box airplan graphic annot flight number appear airspac plane come airspac control key flight number textentri box control decid chang posit plane drag airplan icon new locat screen soon press hold mous button feedback object shape like airplan appear follow mous new locat mous releas plane icon move newli select locat present model atc exampl quit rich specifi grid airplan graphic alway uniformli place within lane specifi feedback object present control inform plane oper real deploy locat flight chang respons asynchron applic signal special hardwar monitor deploy signal would connect listen action would fit framework without chang detail case studi printsav dialog see stirewalt dissert 19 52 correct addit abl gener manag power user interfac composit modul correct two aspect approach requir justif ground first design runtim action synchron second synthesi runtim dialog compon member set dialog model paper address theoret issu involv design runtim action synchron gate action class traceabl refin correspond concept loto practic found design quit robust one aspect synchron correct address paper show modelspecif special action violat delic callback protocol underli system exampl say appl model loto observ valu x offer valu implement use method invoc method bind x paramet bind return valu sinc valu offer evalu sequenc sure order evalu interfer invoc method vice versa current check inspect investig way packag problem model checker eg spin 10 smv 12 detect anomali stirewalt use smv model checker valid interoper action gate object 19 mention earlier mastermind dialog model notat syntact sugar subset loto languag describ greater detail 20 implement prototyp dialog model code gener whose correct valid describ stirewalt 19 code gener compil dialog model without refer model 53 effici measur effici empir appli code gener atc exampl gener dialog modul connect handcod present applic modul exampl tri observ time delay interact quantifi result instrument sourc code measur use comput resourc wallclock time maximum time taken interact 004 second compar well de facto hci benchmark respons time 01 second believ heavyweight middlewar solut implement synchron objectrequest broker competit result 54 futur work current complet robust dialog code gener new code gener incorpor statespac reduct technolog improv interact time prototyp function depth dialog express interact execut constant time 6 conclus gener code special model notat well understood problem integr code gener multipl model integr much complic mere link compil object modul model declar must assum entiti name one model behavior elabor anoth model design want treat present tempor order effect separ aspect isol express highli special languag would less clear requir express aspect well interact system composit conjunct essenti separ complex specif manag piec unfortun program languag like c java provid conjunct oper oper difficult implement correctli effi cientli fact tri implement rather cast model composit formal framework includ conjunct abl express correct solut refin correct solut effici de modelcomposit problem 21 sign key differ approach middlewar solut implement object composit gener event registri callback result contribut bodi autom softwar engin research two way first framework practic solut help autom engin interact system second use formal method identifi design constraint subsequ refin constraint objectori design may serv model research tri deal model composit context code gener formal approach allow us minim design constraint key arriv power correct effici solut r formal aspect humancomput interact structur dialogu use csp develop softwar user interfac introduct iso specif languag loto use declar descript model user interfac mastermind declar model present pac objectori model dialog design visual formal commun sequenti process model checker spin cookbook use model view control user interfac paradigm smalltalk symbol model check approach state explos problem amulet environ new model effect userinterfac softwar develop survey user interfac program knowledg develop environ use share design model valid interact system design verif formal task system model mecano project comprehens integr support modelbas user interfac develop automat gener interact system declar model design implement mdl mastermind dialogu languag declar model userinterfac construct tool mastermind approach beyond interfac builder modelbas interfac tool beyond hack model base approach user interfac design composit approach multiparadigm program conjunct composit tr