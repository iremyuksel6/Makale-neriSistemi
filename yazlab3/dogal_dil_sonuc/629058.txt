compiletim techniqu data distribut distribut memori machin solut problem partit data distribut memori machin discuss solut use matrix notat describ array access fulli parallel loop allow deriv suffici condit communicationfre partit decomposit array seri exampl illustr effect techniqu linear refer use loop transform deriv necessari data decomposit formul aid deriv heurist minim commun communicationfre partit feasibl present b introduct distribut memori machin intel ipsc2 ncube process address space process must commun explicitli send receiv messag local memori access machin much faster involv interprocessor commu nicat result programm face enorm difficult task orchestr parallel execut programm forc manual distribut code data addit manag commun among task explicitli task addit errorpron timeconsum gener lead nonport code henc parallel compil machin activ area research recent 3 4 5 9 14 19 20 22 24 25 enorm task extent reliev hypercub programm paradigm 6 attent paid partit task alon assum fix data partit programmerspecifi form annot data partit 9 7 14 20 number effort way develop parallel compil multicomput programm specifi data decomposit compil gener task appropri messag pass construct 4 7 14 15 20 22 25 though reli intuit base domain knowledg programm alway possibl verifi annot inde result effici execut recent paper program multiprocessor alan karp 12 observ see data organ key parallel algorithm even share memori system import data manag also problem peopl write automat parallel compil todat compil technolog direct toward optim control flow today hierarch distribut memori make program perform function data organ compil exist chang data address specifi programm improv perfor manc compil success particularli messagepass system new kind analysi develop analysi match data structur execut code order minim memori traffic paper attempt provid new kind analysi present matrix notat describ array access fulli parallel loop let us present suffici condit communicationfre partit decomposit array case commonli occur class access present formul fraction integ program problem minim commun cost communicationfre partit array possibl rest paper organ follow section 2 present background assumpt make discuss relat work section 3 illustr exampl import difficulti find good array decomposit section 4 present matrixbas formul problem determin exist communicationfre partit array present condit case constant offset array access section 5 seri exampl present illustr effect techniqu linear refer addit show use loop transform deriv necessari data decomposi tion section 6 gener formul present section 4 arbitrari linear refer section 7 present formul aid deriv heurist minim commun communicationfre partit feasibl section 8 conclud summari discuss assumpt relat work commun messag pass machin could aris need synchron nonloc data impact absenc global share memori compil writer sever addit manag parallel essenti compil writer appreci signific data distribut decid data copi gener local memori focu distribut array commonli use scientif comput primari interest array access execut nest loop consid follow model processor own data element make updat exactli one copi even case fulli parallel loop care must taken ensur appropri distribut data next section explor techniqu compil use determin data distribut commun incur oper involv two operand requir operand align correspond operand store memori processor execut oper model consid mean operand use oper must commun processor hold operand appear left hand side assign statement align operand gener requir interprocessor commun current day machin interprocessor commun timeconsum instruct execut insuffici attent paid data alloc problem amount time spent interprocessor commun might high serious undermin benefit parallel therefor worthwhil compil analyz pattern data usag determin alloc order minim interprocessor commun present machineindepend analysi communicationfre partit make follow assumpt 1 exactli one copi everi array element processor whose local memori element store said element 2 owner array element make updat element ie instruct modifi valu element execut owner processor 3 fix distribut array element data reorgan cost architecturespecif 21 relat work research problem relat memori optim goe back studi organ data page memori system 1 balasundaram other 3 work interact parallel tool multicomput provid user feedback interplay data decomposit task partit perform program gallivan et al discuss problem associ automat restructur data move local memori case share memori machin complex memori hierarchi present seri theorem enabl one describ structur disjoint sublattic access differ processor use inform make correct copi data local mem ori write data back share address space modif complet gannon et al 8 discuss program transform effect complexmemori manag cedarlik architectur threelevel memori gupta banerje 10 present constraintbas system automat select data decomposit loop nest program hudak abraham 11 discuss gener rectangular hexagon partit array access sequenti iter parallel loop knobe et al 13 discuss techniqu automat layout array compil target simd architectur connect machin comput system li chen 17 5 address problem index domain align find set suitabl align function map index domain array common index domain order minim commun cost incur due data movement class align function consid primarili permut embed kind align function deal gener mace 18 prove problem find optim data storag pattern parallel process shape problem npcomplet even limit one twodimension array ad dition effici algorithm deriv shape problem program model direct acycl graph dag deriv seriesparallel combin treelik subgraph wang gannon 23 present heurist statespac search method optim program memori hierarchi addit sever research develop compil take sequenti program augment annot specifi data distribut gener necessari commun koelbel et al 14 15 address problem automat process partit program written function languag call blaze given userspecifi data partit group led kennedi rice univers 4 studi similar techniqu compil version fortran local memori machin includ annot specifi data decomposit show exist transform could use improv perform roger pingali 20 present method given sequenti program data partit perform task partit enhanc local refer zima et al 25 develop superb interact system semiautomat transform fortran program parallel program suprenum machin looselycoupl hierarch multiprocessor 3 deriv good partit exampl consid follow loop exampl 1 alloc row array row array b local memori processor commun incur alloc column block interprocessor commun incur data depend exampl loop refer doall loop easi see alloc row would result zero commun sinc offset access b along first dimens figur 1 show partit array b next exampl even though nonzero offset along dimens commun free partit possibl exampl 2 case row column block alloc array b would result interprocessor commun case b partit famili parallel line whose equat commun result figur 2 show partit b kth line array ie line line array b must assign processor figur 1 partit array b exampl 1 figur 2 partit array b exampl 2 loop structur array modifi function array b commun partit case refer compat partit consid follow loop skeleton exampl 3 array modifi loop l 1 function element array b loop l 2 modifi array use element array loop l 1 l 2 adjac loop level nest effect poor partit exacerb sinc everi iter outer loop suffer interprocessor commun case communicationfre partit possibl extrem import communicationfre partit array involv adjac loop refer mutual compat partit preced exampl follow array access pattern comput element ai j element bi 0 requir c c j constant consid follow exampl exampl 4 exampl alloc row array column array b processor would result commun see figur 3 partit b exampl note 0 function j j 0 function presenc arbitrari array access pattern exist communicationfre partit determin connect data access graph describ array element access either written read associ node graph k differ array access graph k group node node belong given group element array let node associ left hand side assign statement refer write set node associ array element figur 3 array partit exampl 4 right hand side assign statement call readset edg everi member readset data access graph graph connect communicationfre partit 19 referencebas data decomposit consid nest loop follow form access array b exampl 5 linear function j ie disjoint partit array find correspond requir disjoint partit array b order elimin commun partit b requir given partit element partit b appear right hand side assign statement bodi loop modifi element partit given partit requir refer imag map discuss array partit context fulli parallel loop though techniqu present 2dimension array gener easili higher dimens particular interest partit array defin famili parallel hyper plane partit benefici point view restructur compil portion loop iter execut processor gener rel simpl transform loop thu question partit state follow find partit induc parallel hyperplan b commun focu attent 2dimension array hyperplan 2 dimens line henc discuss techniqu find partit b parallel line incur zero commun loop occur scientif comput function f g linear j equat defin famili parallel line differ valu c given ff fi constant one zero exampl defin column defin diagon given famili parallel line array defin find correspond famili line array b given commun among processor condit solut one ff fi zero similarli one ff 0 fi 0 zero otherwis equat defin parallel line solut satisfi condit refer nontrivi solut correspond partit call nontrivi partit sinc 0 given equat 1 2 impli 21 22 20 sinc famili line defin ffi 21 5 22 6 20 7 solut system equat would impli zero commun matrix notat 0 11 21 0 12 22 0 c 0c b ff cc set equat decoupl 11 21 12 22 ff illustr use suffici condit follow exampl exampl element ai j need two element b consid element bi gamma 1 j communicationfre partit systemb c 0c b ff cc must solut similarli consid element solut must exist follow system well 0 c 0c b ff cc given singl alloc b two system equat must admit solut reduc follow system figur 4 partit array b exampl 6 set equat reduc solut say impli b partit antidiagon figur 4 show partit array zero commun relat c c 0 give correspond line b minor modif exampl 6 shown exampl 7 reduc system equat would solut 2 figur 5 show line array b incur zero commun next exampl show nest loop array partit commun exampl 8 figur 5 line array b exampl 7 system equat case reduc one solut ff 0 nontrivi solut thu communicationfre partit array b exampl consid far involv constant offset access array element find compat partit next case consid one need find mutual compat partit consid nest loop exampl 9 case access due loop l 1 result system access due loop l 2 result system therefor communicationfre partit two system equat written must admit solut thu get reduc system solut figur 6 show partit b diagon 41 constant offset refer discuss import special case array access constant offset occur code solut partial differenti equat consid follow loop k q j integ constant vector refer offset vector offset vector one access pair ai j bi figur mutual compat partit b exampl 9 case system equat access index k 1 k mb c 0c b ff cc reduc follow constraint therefor given collect offset vector communicationfre partit possibl consid offset vector q k point 2dimension space commun free partit possibl point q collinear addit commun requir rowwis partit similarli q j partit array column result zero commun zero commun nest loop involv kdimension array mean offset vector treat point kdimension space must lie dimension hyperplan exampl one solut set valu ff ff 0 next section show exampl infinit number solut loop transform play role choic specif solut 5 partit linear refer program transform section discuss communicationfre partit array refer constant offset linear function consid loop exampl 10 exampl 10 commun free partit possibl system equationsb c 0c b ff cc solut one ff fi zero one ff 0 fi 0 zero set reduc set infinit number solut present four discuss rel merit first two equat involv four variabl fix two lead valu two exampl set array partit row set equat get ff 0 array b partit column sinc assign row k array column k array processor commun see figur 1 partit second partit chosen set 1 case array partit column therefor ff 0 mean b partit row figur 7a partit set array partit antidiagon set equat get ff 0 mean array b also partit antidiagon figur 7b show third partit fourth partit chosen set gamma1 case array partit diagon therefor ff 0 mean b also partit antidiagon case kth subdiagon diagon correspond kth superdiagon diagon array b figur 7c illustr partit figur 7 decomposit array b exampl 10 point loop transform 2 24 rewrit loop indic processor execut portion loop iter partit 1 2 easi let us assum number processor p number row column n n multipl p case partit 1 partit row rewritten processor k execut 1 k p n p row r r mod assign processor k column r b r mod also assign processor k case partit 2 partit column loop rewritten processor k execut 1 k p n p column r r mod row r b r mod also assign processor k sinc data depend anyway loop interchang written processor k execut 1 k p n p partit 3 4 result complic loop structur partit 3 1 step perform transform loop use loop skew loop interchang transform 24 perform follow step 1 distribut iter outer loop roundrobin manner case processor k system p processor execut iter refer wrap distribut appli loop interchang wrapdistribut iter interchang outer loop appli follow transform index set ff fi 2 appli loop interchang outer loop stripmin sinc loop involv flow antidepend loop interchang alway legal first transform loop need rectangular therefor rule interchang trapezoid loop 24 use perform loop interchang result loop transform loop interchang follow exampl 11 loadbalanc version loop processor k execut 1 k p 2n p reason distribut outer loop iter wraparound manner distribut result load balanc execut n p partit 4 gamma1 result loop transform loop interchang follow processor k execut 1 k p next consid complic exampl illustr partit linear recurr exampl 12 access bi result follow systemb c 0c b ff cc second access result systemb c 0c b ff cc togeth give rise follow set equat one solut 0 thu communicationfre partit shown imposs follow loop communicationfre partit column possibl exampl 13 access give follow set equat case solut 1 thu b partit column 6 gener linear refer section discuss gener problem formul discuss section 4 exampl 14 linear function j ie thu statement loop case famili line array b given line array given thu famili line array rewritten array 11 ff 0 12 ff 0 22 fi 0 20 15 therefor communicationfre partit find solut follow system equat constraint one ff fi zero one ff 0 zerob 11 21 0 12 22 0 c 0c b ff cc consid follow exampl exampl 15 figur 8 partit array b exampl 15 access result follow system equationsb c 0c b ff cc lead follow set equat solut 1 see figur 8 partit complic exampl exampl access result follow system equationsb c 0c b ff cc lead follow set equat solut ff system follow solut 1 loop transform processor k execut 1 k p 2n p follow section deal formul problem commun minim communicationfre partit feasibl 7 minim commun constant offset section present formul commun minim problem use communicationfre partit imposs focu twodimension array constant offset access result gener higher dimension array consid follow loop model array access loop give rise set offset vector 2 theta matrix q whose column offset vector q refer offset matrix sinc ai j comput iter j partit array defin partit iter space viceversa constant offset shape partit two array b array boundari depend offset vector given offset vector problem deriv partit processor equal amount work commun minim assum n 2 iter n 2 element array comput number processor p also assum n 2 multipl p thu workload processor n 2 shape partit consid parallelogram rectangl special case parallelogram defin two vector normal one side parallelogram let normal vector matrix refer j array indic defin famili line given differ valu c 1 vector defin famili line given differ valu c 2 must nonsingular order defin parallelogram block span entir array matrix defin linear transform appli point j imag point j consid parallelogram defin solut follow set linear inequ r 1 l r 2 l length side parallelogram number point discret cartesian space enclos region must workload processor n 2 det 6 0 nonzero entri matrix q 0 sum absolut valu entri ith row q ie commun volum incur 2l thu problem find block minim interprocessor commun find matrix valu l aspect ratio r 1 r 2 commun volum minim subject constraint processor amount workload ie element matrix determin shape partit valu r size partit summari current day distribut memori machin interprocessor commun timeconsum instruct execut insuffici attent paid data alloc problem much time may spent interprocessor commun much benefit parallel lost therefor worthwhil compil analyz pattern data usag determin alloc order minim interprocessor commun paper formul problem determin communicationfre array partit decomposit exist present machineindepend suffici condit class parallel loop without flow anti depend array refer affin function loop index variabl addit communicationfre decomposit possibl present mathemat formul aid minim commun acknowlegd grate acknowledg help comment refere improv earlier draft paper r perform enhanc page system program analysi transform automat translat fortran program vector form interact environ data partit distribut compil program distributedmemori multiprocessor compil parallel program optim perform solv problem concurr processor volum volume1volum gener techniqu regular problem problem optim data transfer complex memori system strategi cach local memori manag global program transform array distribut superb automat data partit distribut memori multipro cessor compil techniqu data partit sequenti iter parallel loop program parallel data optim alloc array reduc commun simd machin semiautomat process partit parallel comput support share data structur distribut memori machin compil program nonshar memori machin index domain align minim cost crossreferenc distribut array memori storag pattern parallel process process decomposit local refer compil local refer map data processor distribut memori computa tion appli ai techniqu program optim parallel comput optim supercompil supercomput superb tool semiautomat mimdsimd parallel tr program parallel automat translat fortran program vector form memori storag pattern parallel process solv problem concurr processor vol 1 gener techniqu regular problem strategi cach local memori manag global program transform problem optim data transfer complex memori system process partit parallel comput process decomposit local refer data optim alloc array reduc commun simd machin support share data structur distribut memori architectur compiletim techniqu parallel execut loop distribut memori multiprocessor compil program nonshar memori machin compil techniqu data partit sequenti iter parallel loop array distribut superb optim supercompil supercomput compil local refer ctr g n srinivasa prasanna agraw b r musicu hierarch compil macro dataflow graph multiprocessor local memori ieee transact parallel distribut system v5 n7 p720736 juli 1994 jihwoei huang chihp chu effici commun schedul method processor map techniqu appli data redistribut journal supercomput v37 n3 p297318 septemb 2006 wenglong chang jihwoei huang chihp chu use elementari linear algebra solv data align array linear quadrat refer ieee transact parallel distribut system v15 n1 p2839 januari 2004 array partit base smith normal form intern journal parallel program v33 n1 p3556 februari 2005 ravi ponnusami yuanshin hwang raja da joel h saltz alok choudhari geoffrey fox support irregular distribut use dataparallel languag ieee parallel distribut technolog system technolog v3 n1 p1224 march 1995 anant agarw david kranz venkat natarajan automat partit parallel loop data array distribut sharedmemori multiprocessor ieee transact parallel distribut system v6 n9 p943962 septemb 1995 wenrui gong gang wang r kastner storag assign highlevel synthesi configur architectur proceed 2005 ieeeacm intern confer computeraid design p36 novemb 0610 2005 san jose ca kueip shih jangp sheu chuahuang huang statementlevel communicationfre partit techniqu parallel compil journal supercomput v15 n3 p243269 mar12000 kandemir choudhari n shenoy p banerje j ramanujam hyperplan base approach optim spatial local loop nest proceed 12th intern confer supercomput p6976 juli 1998 melbourn australia skew data partit align techniqu compil program distribut memori multicomput journal supercomput v21 n2 p191211 februari 2002 manish gupta prithviraj banerje paradigm compil automat data distribut multicomput proceed 7th intern confer supercomput p8796 juli 1923 1993 tokyo japan minyi guo linear data distribut base index analysi high perform scientif engin comput hardwaresoftwar support kluwer academ publish norwel 2004 catherin mongenet map commun minim use distribut align proceed ifip wg103 work confer parallel architectur compil techniqu p185193 june 2729 1995 limassol cypru chen j p sheu communicationfre data alloc techniqu parallel compil multicomput ieee transact parallel distribut system v5 n9 p924938 septemb 1994 paul feautrier toward automat partit array distribut memori comput proceed 7th intern confer supercomput p175184 juli 1923 1993 tokyo japan esin onbasioglu linet zdamar optim data distribut processor alloc problem use simul anneal journal supercomput v25 n3 p237253 juli jordi garcia eduard ayguad jesu lebarta novel approach toward automat data distribut proceed 1995 acmiee confer supercomput cdrom p78e decemb 0408 1995 san diego california unit state thoma rauber gudula rnger deriv array distribut optim techniqu journal supercomput v15 n3 p271293 mar12000 akimasa yoshida kenichi koshizuka hironori kasahara dataloc fortran macrodataflow comput use partial static task assign proceed 10th intern confer supercomput p6168 may 2528 1996 philadelphia pennsylvania unit state vincent loechner catherin mongenet commun optim affin recurr equat use broadcast local intern journal parallel program v28 n1 p47102 februari 2000 david garzasalazar wim bhm reduc commun honor multipl align proceed 9th intern confer supercomput p8796 juli 0307 1995 barcelona spain wei li keshav pingali access normal loop restructur numa comput acm transact comput system toc v11 n4 p353375 nov 1993 wei li keshav pingali access normal loop restructur numa compil acm sigplan notic v27 n9 p285295 sept 1992 micha cierniak wei li unifi data control transform distribut sharedmemori machin acm sigplan notic v30 n6 p205217 june 1995 jame r laru compil sharedmemori messagepass comput acm letter program languag system lopla v2 n14 p165180 marchdec 1993 kandemir j ramanujam choudhari p banerje layoutconsci iter space transform techniqu ieee transact comput v50 n12 p13211336 decemb 2001 peizong lee effici algorithm data distribut distribut memori parallel comput ieee transact parallel distribut system v8 n8 p825839 august 1997 mahmut kandemir alok choudhari nagaraj shenoy prithviraj banerje j ramanujam linear algebra framework automat determin optim data layout ieee transact parallel distribut system v10 n2 p115135 februari 1999 ender zcan esin onbaioglu memet algorithm parallel code optim intern journal parallel program v35 n1 p3361 februari 2007 mahmut taylan kandemir compil techniqu improv wholeprogram local acm sigplan notic v36 n3 p179192 march 2001 mahmut kandemir alok choudhari j ramanujam prith banerje reduc fals share improv spatial local unifi compil framework ieee transact parallel distribut system v14 n4 p337354 april mahmut taylan kandemir improv wholeprogram local use intraprocedur interprocedur transform journal parallel distribut comput v65 n5 p564582 may 2005 peizong lee zvi meir kedem automat data comput decomposit distribut memori parallel comput acm transact program languag system topla v24 n1 p150 januari 2002