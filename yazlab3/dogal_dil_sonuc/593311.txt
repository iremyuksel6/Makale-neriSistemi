local local search tradit techniqu solv combinatori search problem rais much interest recent year design implement local search algorithm easi task gener may requir consider experiment program effort howev contrari global search littl support avail assist design implement local search algorithm paper describ design implement local model languag implement local search algorithm local make possibl express local search algorithm notat close inform descript scientif paper experiment result boolean satisfi graph color graph partit jobshop schedul show feasibl approach b introduct combinatori search problem solv global local search global search problem divid subproblem subproblem simpl enough solv directli local search initi configur gener algorithm move current configur neighborhood configur solut deci sion problem good solut optim problem found resourc avail exhaust two approach complementari strength weak applic area design global search algorithm support varieti tool rang model languag ampl 2 numerica 10 constraint program languag chip ilog solver clp prologiv oz name contrast littl attent devot support local search despit increas interest algorithm recent year note howev variou effort integr local search clp languag eg 9 design local search algorithm easi task howev problem model mani differ way see instanc 4 make design process inher experiment enterpris addit effici implement local search algorithm often requir maintain complex data structur increment tediou errorpron activ local 5 domainspecif languag implement local search al gorithm combin aspect declar imper program sinc import local search algorithm local make possibl write local search algorithm notat close inform present found scientif public induc reason overhead specialpurpos implement local offer support defin tradit concept like neighborhood accept criteria restart state addit local also introduc declar concept invari order autom tediou errorpron aspect local search procedur increment data structur invari provid declar way specifi need maintain defin neighborhood object function paper progress report describ statu local februari 1998 main focu languag implement 1 intend final word languag sinc new higherlevel extens current evalu paper howev describ core local probabl evolv signific way paper organ four main part section 2 give reader quick tour local section 3 describ languag detail section 4 describ implement invari cornerston local section 5 summar experiment result sever applic final section 6 conclud paper tour local section give overview main featur local start review comput model local gener form local statement consid two main contribut local invari neighborhood 21 comput model understand statement local best consid underli comput model first figur 1 depict comput model local decis problem model captur essenc local search algorithm algorithm perform number local search maxsearch global condit satisfi local search consist number iter maxtrial local condit satisfi iter algorithm first test state satisfi case solut found otherwis select candid move neighborhood move new state accept solut found maxtrial local condit fals algorithm restart new local iter state restartst comput model optim problem similar except line 5 need updat best solut far necessari eg case minim 51 bestbound valu 52 best companion paper oper research commun orient around applic model aspect optim algorithm cours initi f properli return best solut found end comput procedur local begin 2 search 1 maxsearch global condit 3 trial 1 maxtrial local condit 5 return 6 select n neighborhood 7 acceptablen 9 restartst figur 1 comput model local 22 structur local statement purpos local statement specifi problem hand instanc data state gener part comput model eg neighborhood accept criterion local statement consist number section depict figur 2 instanc data defin type constant init section use tradit data structur program languag state defin valu variabl neighborhood defin neighborhood section use object previou section accept criterion part definit neighborhood initi state defin section start restart state defin section restart paramet eg maxtrial given paramet section global local condit given section global condit local condit note identifi boldfac descript comput model eg search trial fact keyword local mention previous origin aspect local specif neighborhood accept criterion cours notat reminisc languag ampl clair syntact level underli concept fundament differ rest section describ origin aspect local without tri comprehens 23 run exampl overview mostli use boolean satisfi illustr concept local boolean satisfi problem amount find truth assign firstord boolean formula express disjunct normal form input given set claus model solv j optim hobject functioni figur 2 structur local statement claus consist number posit neg liter tradit liter simpli atom posit atom negat atom neg atom claus satisfi soon least one posit atom true least one neg atom fals local search model consid boolean satisfi base gsat algorithm selman et al 8 local search move consist flip truth valu atom local improv model boolean satisfi describ figur 3 model atom repres integ 1 n claus repres two set set posit atom p set neg atom n data represent specifi type section problem instanc specifi array claus n variabl instanc data declar constant section initi init section shown state specifi truth valu atom captur array variabl variabl section variabl ai repres truth valu atom invari section key compon local statement describ declar way data structur must maintain increment invari review detail section 24 model depict figur 3 maintain number true liter nbtlc claus c number satisfi claus nbclausesat satisfi section describ state solut claus satisfi object function section describ object function maxim number satisfi claus use drive search neighborhood section describ actual neighborhood accept criterion neighborhood consist state obtain flip truth valu atom move accept improv valu object function neighborhood section anoth import part local review solv type constant cl array1m claus variabl array1n boolean invari 1m int sumi clip aj sumj clin aj satisfi object function maxim nbclausesat neighborhood move ai ai f1ng accept improv start foral 1n ai randomftruefalseg restart foral 1n ai randomftruefalseg figur 3 local improv model boolean satisfi detail section 25 start restart section describ gener initi state new state restart search use simpl random gener model interest point stress simplic model sinc difficult imagin concis formal statement algorithm 24 invari invari probabl import tool offer local support design local search algorithm make possibl specifi need maintain increment without consid inform speak invari express guarante time comput valu variabl v type valu express exp also type cours instanc invari 1m int sumi clip aj sumj clin aj boolean satisfiabl model specifi nbtlc equal sum true posit atom fals neg atom claus c claus 1n local use effici increment algorithm maintain invari comput autom one tediou timeconsum task local search algorithm instanc whenev valu ak chang nbtlc updat constant time local allow wide varieti invari complex data structur invari also boolean satisfi model illustr use relat insid invari relat use insid express consid 01 integ ie relat evalu 1 true 0 otherwis excerpt c array1n int distributex1n1n select 1n select 1n sizeci 0g unus candid b arrayk 1n select ck select j ck ai j taken graphcolor model implement algorithm 4 graphcolor problem amount find smallest number color label graph adjac vertic differ color graph n vertic algorithm consid n color integ 1 n color class c set vertic color bad edg c denot b edg whose vertic color main idea algorithm minim object function whose local minima valid color minim function algorithm choos vertex choos color whose color class nonempti one unus color import consid one unus color avoid bia toward unus color invari b arrayk 1n select ck select j ck adji j bk set edg obtain select two adjac vertic color class k illustr local maintain queri set vari time sinc evolv local search invari c array1n int distributex1n1n equival effici c arrayi 1n int select 1n primit function provid sinc use larg varieti applic invari select 1n sizeci 0g defin nonempti class note set 1n vari condit import emphas signific support provid local invari invari maintain complex data structur increment user specifi declar way 25 neighborhood mani strategi local improv simul anneal tabu search propos last decad local search algorithm section review model neighborhood section fundament tool provid local 251 local improv local nondegrad model depict figur 3 use stochast local improv approach neighborhood section neighborhood move ai ai f1ng accept improv specifi follow strategi select valu 1n ie select atom flip ai result state improv valu object function take move state improv valu object function move taken local proce next iter innermost loop comput model strategi illustr structur neighborhood definit local move part specifi state transform use tradit imper construct show transform state anoth state part specifi set object use specifi state transform accept part describ accept move local improv strategi made greedi ad keyword best front move instruct neighborhood best move ai ai f1ng accept improv solv type constant cl array1m claus variabl array1n boolean invari 1m int sumi clip aj sumj clin aj satisfi object function maxim nbclausesat neighborhood best move ai ai f1ng accept nodecreas start foral 1n ai randomftruefalseg restart foral 1n ai randomftruefalseg figur 4 gsatbas model boolean satisfi excerpt specifi follow strategi consid valu 1n flip produc improv select one best improv note strategi explor neighborhood systemat way previou strategi select random move test improv neighborhood section neighborhood first move ai ai f1ng accept improv anoth approach explor neighborhood systemat move improv valu object function found contrast random walk strategi present previous sometim import allow flexibl local search allow move may improv object function neighborhood neighborhood best move ai ai f1ng accept nodecreas accept best move decreas valu object function result model depict figur 4 captur essenc gsat algorithm 252 simul anneal simul anneal wellknown stochast strategi enhanc local improv search easili express local neighborhood neighborhood move ai ai f1ng accept improv ch cor nodecreas key novelti accept statement may number accept condit tri sequenc one succe fail addit accept condit associ action simul anneal neighborhood specifi move accept improv object function decreas object function standard probabl simul anneal depend temperatur paramet variat delta object function note variabl ch increment improv decreas object function complet model given figur 5 model illustr also sever new featur local oper section describ two procedur use subsequ start restart section oper local use tradit construct imper program languag eg loop condit well new primit random featur describ detail section 3 note also variabl temperatur ch chang counter use variou place model 253 tabu search tabu search anoth strategi escap local optima contrast simul anneal resort stochast move neighborhood neighborhood best move ai ai f1ng tabui accept alway tv trial solv type constant cl array1m claus variabl array1n boolean real invari 1m int sumi clip aj sumj clin aj oper void foral 1n xi randomftruefalseg ch 0 void lowtemp f ch 0 satisfi object function maxim nbclausesat neighborhood move ai ai f1ng accept improv ch cor nodecreas start restart lowtemp figur 5 simul anneal model sat indic simpl tabu search express local key idea select atom tabu claus gener includ condit move sodefin accept model also keep track atom last flip use keyword trial atom tabu flip recent express f return tl paramet specifi time atom stay tabu list complet model describ figur 6 cours complic tabu search algorithm eg use aspir criteria overwrit tabu statu tabu list whose size vari time implement easili 254 compos neighborhood local make also possibl compos neighborhood instanc follow neighborhood tri move occurinunsatclaus accept default best move f1ng accept nodecreas implement random walknois strategi gsat local flip arbitrari variabl unsatisfi claus probabl 01 appli standard strategi probabl 09 note local simpli goe next iter select neighborhood empti sinc neighborhood may nonempti 255 increment issu model present far local need simul move find object function evolv simul becom expens move accept practic local search implement often tri evalu impact solv type constant cl array1m claus variabl array1n boolean array1n int tl int invari 1m int sumi clip aj sumj clin aj oper void tl 10 foral 1n xi randomftruefalseg foral 1n ti tl return satisfi object function maxim nbclausesat neighborhood best move ai ai f1ng tabui accept alway tv trial start restart figur model boolean satisfi move current state local support practic allow specifi accept criteria evalu current state instanc neighborhood definit neighborhood first move ai ai f1ng accept current state evalu condit gaini 0 current state determin whether take move cours requir gener invari maintain gaini increment invari becom invari nbtl array 1m int sumi clip aj sumj clin aj inform mean new invari follow g01i repres chang number satisfi claus chang valu atom fals true assum atom current fals obvious flip produc gain unsatisfi claus atom appear posit also produc loss claus appear neg atom respons satisfact claus g10i repres chang satisfi claus chang valu atom true fals assum atom current true comput way similar g01 gaini repres chang satisfi claus chang valu atom implement use condit express term g01i g10i current valu atom simul necessari result model gsat model made even increment sinc gsat select move best object valu possibl maintain candid move increment chang add two invari candid select 1n maxgain simpli maximum gain candid describ set candid flip set atom whose gain posit maxim invari describ neighborhood defin flip one candid need use keyword best nodecreas accept criteria sinc alreadi enforc invari complet model depict figur 7 cours transform perform tabu search model solv data type constant cl array1m claus po array 1n fintg select c 1m clcp array 1n fintg select c 1m clcn variabl array1n boolean invari nbtl array 1m int sumi clip aj sumj clin aj gain array 1n int ai g10i els g01i candid select 1n satisfi neighborhood move ai ai candid start foral 1n restart foral 1n figur 7 increment model gsat 3 languag mention previous local hybrid languag embed aspect declar program within imper languag main declar tool cours concept invari specifi express whose valu must maintain crement imper construct mostli use specifi state transform start restart state section review local detail essenti organ along textual order local statement 31 type section type section local use defin record type record within local ident record found convent imper languag like pascal c aggreg number name field possibl differ type instanc excerpt declar record type edg consist two integ origin destin node excerpt declar record type claus two field pl nl type set integ 32 constant constant section declar input data possibl deriv data use state model constant type read ie modifi assign initi shown later variou way initi data local 321 data type basic data type basic data type support local integ boolean float excerpt declar integ n whose valu 10 float whose valu 314 boolean integ rang gamma2 float doubleprecis floatingpoint number array local support multidimension array arbitrari type declara tion defin onedimension array integ initi vector 61457 declar declar matrix integ record mention previous record use local cluster togeth relat data instanc declar edg defin p array 3 edg edg initi tupl tupl compat record type number field type field compat type correspond field set final local support set arbitrari type instanc declar declar initi set edg 322 inlin offlin initi constant initi inlin previou exampl also initi offlin init section separ model instanc data usual good practic excerpt declar float f whose initi given init section init section consist set pair identifiervalu cours type initializationmust match type declar offlin initi use arbitrari type instanc boolean satisfi model may contain initi section form init cl cl initi vector 11 tupl tupl pair set first set pair associ first field record type claus denot set posit liter claus second set match second field record denot neg atom claus 323 gener data local also support concept gener data introduc numerica 10 basic idea initi data use express may depend paramet declar gener especi attract defin deriv data use simplifi model case fulli increment version gsat see figur 7 import know claus atom appear posit neg inform deriv data cl use gener declar constant po arrayi 1n fintg select c 1m clcpg arrayi 1n fintg select c 1m clcng coupl import point stress first declar use paramet rang index set array instanc paramet rang 1n set atom second paramet use express defin righthand side specifi valu array given posit gsat exampl poi defin set claus atom appear posit express allow righthand side gener syntax given figur 8 figur 9 describ signatur primit function obviou mean 33 variabl variabl cours fundament local sinc defin state com putat variabl declar way constant except initi gener given initi valu start section modifi neighborhood restart section clear exampl local assign oper whose righthand side express 34 invari invari key concept provid local support design local search algorithm syntact invari simpli gener data howev invari static sinc may contain variabl andor invari consequ valu invari statedepend local respons updat state transit follow excerpt illustr invari graphcolor model ci refer anoth invari whose type fintg set integ constant liter hexpri hidentifieri hset bodyi hexpri hexpri j hexpri hexpri hexpri select hidentifieri hrangei hexpri select hidentifieri hexpri hexpri hrangei hexpri hexpri figur 8 express syntax arithmet set relat output min2intintint sizeftgint printvoid max2intintint randomftgt printlnvoid floorfloatint minofftgt ceilfloatint insertftgtvoid roundfloatint removeftgtvoid expfloatfloat timeint figur 9 primit function select 1n sizeci0g 1n fedgeg select ck select j ck addit standard express invari also defin term distribut dcount take input onedimension array integ two set must subset index set result type distribut express onedimension array set integ b whose index set fintg result type dcount express onedimension array integ whose index set mean given follow equival express introduc ubiqu practic applic import stress data declar invari appear lefthand side assign statement oper oper section contain function definit function local essenti similar function c use tradit assign condit iter statement well recurs addit local provid construct use local search algorithm syntax statement local sketch figur 10 foral instruct provid conveni way iter element set choos instruct use select element set dont care nondeterminist way possibl filter element given set select element optim function follow exampl illustr variou form choos statement choos choos minim di choos gaini 0 choos gaini 0 maxim di entir state includ constant variabl invari access function howev variabl local modifi assign note function imper construct use start restart section specif state transform neighborhood action associ specif accept criteria instruct appear claus move instruct typic exampl function introduc model figur 5 6 hexpri hstatementi return hexpri choos hidentifieri hexpri hoptclausei hoptclausei minim hexpri maxim hexpri hexpri minim hexpri hletblocki hexpri maxim hexpri hletblocki figur 10 syntax statement 36 neighborhood neighborhood specifi local move instruct form move xn sn instruct use declar procedur compon first part statement specifi imper code transform current state one neighbor second part start keyword specifi object use imper code model effort primarili devot definit set invari base syntax move instruct depict figur 11 element neighborhood select local determin appropri move accept criterion list boolean condit tri sequenc soon state satisfi one condit accept state transform perform criterion build accord syntax hidentifieri f hexpr 1 hidentifieri f hidentifieri htypei j hselect 1 hidentifieri hlvaluei hoptclausei figur 11 syntax move instruct result state hacceptancestatementi current state hacceptancestatementi improv nodecreas hacceptanceconditioni hacceptanceconditioni hacceptanceconditioni hacceptanceconditioni hacceptanceconditioni accept criteria default evalu new state new state must construct induc updat invari also possibl specifi accept criterion evalu current state use keyword current state use current state evalu move may produc signific improv effici 37 object function object function state separ section use assess qualiti given state object function fact view invari maintain local use evalu move note object function option use accept criteria evalu result state 38 termin criteria termin handl via sever section depend natur problem model start keyword either solv optim specifi either decis optim problem satisfi section option satisfi section use specifi whether state solut decis problem local termin whenev case optim problem local updat best solut whenev state solut improv best bound found far section omit local assum everi state solut local global condit section option specifi boolean predic use control innermost outermost loop comput model instanc simul anneal model use local condit implement cutoff strategi termin innermost loop drop temperatur whenev evalu function updat suffici mani time paramet section section also option use overrid default valu paramet system typic use redefin maxsearch maxtrial paramet comput model implement section review implement invari cornerston local izer inform speak invari implement use planningexecut model plan phase gener specif order propag invari execut phase actual perform propag model make possibl propag differ two state mimic certain extent way specif local search algorithm implement planningexecut model impos restrict invari restrict intuit make sure order invari propag pair variableinvari consid variou restrict impos static invari order compil time thu especi effici howev static invari rule interest model schedul resourc alloc problem dynam invari still make possibl produc order pair variableinvari consid howev dynam invari requir interleav plan execut phase dynam invari seem good compromis effici express rest section organ follow algorithm use normal invari section 41 review normal process section 42 describ static invari implement give reader preliminari understand implement section 43 describ dynam invari implement section consid arithmet invari difficult gener result invari set 41 normal invari local rewritten primit invari flatten express array primit invari form x phi z c constant x variabl phi arithmet oper arithmet relat q aggreg oper sum prod max min relat return 1 true 0 otherwis invari assign x element posit e list x last invari use array index express contain variabl given time local maintain set invari variabl v given invari 2 form x e e express defi denot x expi denot e given set invari v x 2 v invariantsx return subset invari fi x occur expi set variabl v nfdefiji ig variabl paramet system invari variabl modifi neighborhood definit note also variabl x defin one invari ie exist one 42 static invari basic assumpt behind local implement invari chang margin move one state one neighbor consequ goal implement run time proport amount chang precis implement make sure pair variabl invari consid ie variabl updat invari updat never reconsid variabl achiev goal implement use planningexecut model plan phase determin order updat execut phase actual perform exist suitabl order guarante restrict impos invari system note also planningexecut model often graphic constraint system eg 1 section describ static invari impos static restrict although restrict may seem strong accommod mani model applic satisfi graph color name main practic limit element array depend element array restrict lift dynam invari note howev static invari nice properti plan phase entir perform compil time 421 plan phase basic idea behind static invari requir exist topolog order variabl topolog order obtain associ topolog number tx variabl x topolog number invari simpli tdefi topolog number obtain constraint deriv invari 1 topolog constraint invari defin follow definit 2 topolog constraint set invari denot tci i2i tci definit 3 set invari static exist assign satisfi tci plan phase static invari consist find topolog assign plan phase perform compil time sinc topolog constraint depend valu variabl given state 422 execut phase execut phase given set variabl updat topolog assign propag chang accord topolog order algorithm use queue contain pair form hx ii intuit pair mean invari must reconsid variabl x updat main step algorithm consist pop pair hx ii smallest ti propag chang possibl ad new element queue algorithm shown figur 12 procedur executeimt begin endwhil function popqt pre q empti post figur 12 execut phase static invari 423 propag invari complet descript implement static invari remain describ propag invari basic idea associ two valu x variabl x valu x repres valu variabl x begin execut phase valu x c repres current valu x begin execut phase x cours keep two valu possibl comput much variabl chang updat invari accordingli instanc propag invari perform procedur procedur propagatex x sumx 1 begin procedur updat x c accord chang x note topolog reach final valu note also x c necessarili final updat pair hx may need propag 43 dynam invari static invari attract sinc plan phase perform entir compil time howev interest applic area schedul resourc alloc set invari static section introduc dynam invari broaden class invari accept local dynam invari updat seri planningexecut phase plan phase take place execut time 431 motiv main restrict static invari come invari static topolog constraint invari prevent local accept express element array may depend element array constraint strong valu e known compil time fact may even known start execut phase sinc invari may updat howev mani applic schedul resourc alloc invari occur natur instanc schedul applic may model term invari start3 maxendprec3 enddisj3 starti repres start date task preci predecessor task job disji predecessor task disjunct variabl disji typic updat local search invari normal set form start 3 maxp cours applic also invari form impli result set invari static 432 overview approach basic idea behind dynam invari evalu invari level invari associ one level insid one level invari static level complet plan next level take place use valu previou level sinc lower level never reconsid comput model mind topolog constraint associ invari reconsid basic idea requir e evalu x ie level x level e e updat easi find weaker topolog constraint sinc valu e known invari simplifi plan phase thu divid two step first step carri compil time partit invari level second step execut runtim topolog sort invari within level whenev invari lower level propag 433 formal basic intuit formal term two assign l two set constraint definit 4 level constraint associ invari denot lci defin follow g level constraint strong except invari element level x strictli greater level e inform mean e must evalu earlier phase x definit 5 level constraint associ set invari denot li simpli i2i definit 6 set invari serializ exist assign l satisfi lci serializ set invari partit sequenc invari level serial perform compiletim second step consist order invari insid partit order take place runtim sinc necessari know valu invari simplifi element invari definit 7 let comput state let sx denot valu x static constraint associ invari wrt denot sdi defin follow definit 8 static constraint associ set invari wrt state denot sdi simpli i2i definit 9 set invari static wrt state exist assign main novelti cours invari element topolog constraint ignor e sinc valu known addit sinc final valu e known topolog constraint made precis sinc element e c x depend upon known comput state set invari dynam wrt 0 1 serializ partit sequenc 2 static wrt 0 state obtain propag invari igamma1 igamma1 cours dynam invari recogn compiletim may produc execut error runtim local plan level 434 execut algorithm new execut algorithm simpl gener static algorithm shown figur 13 note plan step call level procedur executeim begin endfor figur 13 execut algorithm dynam invari 5 experiment result section summar preliminari result implement local 35000 line c goal report final word implement rather suggest local implement effici compar specif local search algorithm demonstr practic experi local sever problem gsat graph color graph partit jobshop schedul 51 gsat gsat gener recogn fast well implement system experiment result carri specifi 8 tabl 1 give number variabl v number claus c maxtrial size benchmark well cpu time second local l cpu time second gsat g report 8 ratio lg time gsat given sgi challeng 70 mhz mip r4400 processor time local obtain sun sparc scale factor 15 account speed differ two machin local time increment model present section 2 note comparison perfect eg random may differ suffici show local implement effici 52 graph color graph color object extens experiment evalu 4 section report experiment result along line experi conduct graph densiti 10 50 90 size 125 250 500 also conduct socal cook graph natur experiment result report 4 easi compar effici local effici algorithm consequ effici c implement algorithm built scratch graduat student close supervis obtain effici increment algorithm far judg time qualiti algorithm seem 5 200 860 2000 87311 16800 520 av 338 tabl 1 gsat experiment result consist 4 addit algorithm effici implement built graduat student combinatori optim class brown cs258 last three year given model cours follow discuss develop time two implement qualiti solut obtain make sure algorithm compar qualiti effici develop time c implement algorithm 1500 line long requir full week local model one page long qualiti solut tabl 2 describ qualiti color found lo caliz result agre c implement report 4 set row correspond class graph 100 execut local graph class row set report variou valu found local graph frequenc column report number vertic densiti graph size factor sf use experi number color found solut frequenc color qualiti instanc first set row report graph 125 vertic densiti 50 92 execut led color 19 color 8 execut led color color result given random cook graph frequenc similar local c implement effici tabl 3 compar effici local c implement problem row report averag time two implement 100 graph class comput slowdown local experi perform sun sparc ultra1 run solari 551 standard c compil averag slowdown 482 minimum maximum slowdown respect 356 554 problem averag slowdown slightli higher machin gener remain reason given preliminari natur implement slowdown also contrast substanti reduct develop time vertic densiti size factor sf color frequenc random 125 50 3 19 92 random 250 50 4 43 34 44 random 500 50 4 random 125 90 1 44 7 random random 500 90 1 143 144 22 cook 125 4 9 100 cook cook 500 2 25 71 tabl 2 graph color qualiti solut vertic densiti size factor sf local l c implement c lc random 125 50 3 783 189 450 random 250 50 4 828 184 450 random 500 50 4 6337 1234 510 random 125 90 1 1618 453 356 random random 500 90 1 1627 296 488 cook 125 4 2209 418 528 cook cook 500 2 2403 499 480 averag 482 tabl 3 graph color effici local 53 graph partit problem studi experiment 3 experi report base similar set tabl 4 depict experiment result local first row give set paramet start tempera ture tf percentag reduct temperatur sf size factor remain two describ previous tabl 5 compar local result report 3 54 jobshop schedul conclud report preliminari result jobshop schedul local evalu set 28 classic benchmark model use experi implement neighborhood commonli refer n1 consid revers exactli one edg critic path n1 number nice properti preserv satisfi solut transit graph induc neighorhood optim solut reachabl node graph experi conduct fashion similar report 6 paramet defin ffl maxim number search maxsearch 1 ffl maxim number iter inner loop maxtrial 12000 ffl tabu list vari length constrain 5 30 moreov length vari accord rule 6 ffl contrari 6 model use restart strategi graph result class v ertic densiti sb f req local random 124 2 1113 1416 1719 33 38 29 222 random 4 5559 6065 6677 random 8 159174 175190 191 23 53 24 324 random random random 2 92106 107121 122131 12 42 36 510 random 4 324343 344363 364380 38 43 19 650 random 8 828877 878927 928 37 40 23 998 random 500 05 4854 5559 6066 15 43 42 1008 random 4 16611701 17021741 17421824 22 58 20 2067 random 1000 025 90103 104118 119126 41 52 7 1999 random 05 439455 456475 476503 36 43 21 2262 geom 500 5 413 1423 2437 7 58 geom 20 148246 247346 347450 41 44 15 1140 geom 1000 5 2443 4463 6478 37 57 6 1870 geom 20 196399 400599 600816 28 tabl 4 graph partit experiment result graph result class v ertic densiti lbest ltime jbest jt ime ratio random 124 2 11 222 13 854 385 random random 500 05 47 1008 52 3798 377 random 1000 025 90 1999 102 7299 365 tabl 5 graph partit comparison result tabl 6 report preliminari result result realli compar result 6 sinc neighborhood use experi rn1 rn2 model use reli n1 alon time report correspond algorithm termin 12000 iter spent time requir produc best optim solut first time note also valu optim solut use stop criterion condit use run time would vari lot instanc la01 usual produc optimum solut 05 second interestingli enough even simpl neighborhood n1 quit well find optimum solut benchmark 28 benchmark tabl also report coars histogram summar frequenc apparit solut frequenc obtain base seri 100 experi benchmark summari result seem indic local also compar well schedul applic 6 conclus main contribut paper show local search support model languag shorten develop time algorithm substanti preserv effici specialpurpos algorithm substanti claim present progress report domainspecif languag local introduc 5 local statement organ around tradit concept local search may exploit special structur problem hand main conceptu tool underli benchmark result md12000ms1neighborhoodn1 name job opt rang f req loc avgsol tabl ing local concept invari make possibl specifi complex data structur declar data structur maintain increment local izer autom one tediou errorpron part local search algorithm experiment result indic local implement run effici compar specif implement current research focus build higherlevel data structur simplifi design invari cornerston languag extend strategi accommod dynam kopt 7 genet algorithm constraint techniqu also contem plate longer term research explor local turn program languag librari guarante extens wide applic expert user preserv right level abstract acknowledg paper dedic memori pari c kanellaki kept gentli pressur us pursu topic thank mcallest b selman mani discuss research costa bush implement graphcolor algorithm c research support part nsf nyi award r program languag aspect thinglab ampl model languag mathemat program optim simul anneal experiment evalu optim simul anneal experiment evalu model languag local search marco trubian mauro dellamico combinatori optim algorithm complex new method solv hard satisfi problem model use stochast constraint solver constraint logic program numerica model languag global optim tr ctr simon de givri laurent jeannin unifi framework partial hybrid search method constraint program comput oper research v33 n10 p28052833 octob 2006 pascal hentenryck laurent michel liyuan liu contraintbas combin local search constraint v10 n4 p363384 octob 2005 irit katriel laurent michel pascal hentenryck maintain longest path increment constraint v10 n2 p159183 april 2005 pascal hentenryck laurent michel control abstract local search constraint v10 n2 p137157 april 2005 laurent michel pascal van hentenryck constraintbas architectur local search acm sigplan notic v37 n11 novemb 2002 marco cadoli toni mancini combin relat algebra sql constraint model local search theori practic logic program v7 n12 p3765 januari 2007 laurent michel pascal van hentenryck comet context proceed pari c kanellaki memori workshop principl comput knowledg pari c kanellaki memori workshop occas 50th birthday p95107 june 0808 2003 san diego california usa