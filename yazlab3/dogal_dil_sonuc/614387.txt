outofcor streamlin visual larg unstructur mesh abstractthi paper present outofcor approach interact streamlin construct larg unstructur tetrahedr mesh contain million element outofcor algorithm use octre partit restructur raw data subset store disk file fast data retriev memori manag polici tailor streamlin calcul use streamlin construct small amount data brought main memori demand care schedul comput data fetch overhead read data disk significantli reduc good memori perform result outofcor algorithm make possibl interact streamlin visual larg unstructuredgrid data set singl midrang workstat rel low mainmemori capac 515 megabyt also demonstr approach much effici reli virtual memori oper system page algorithm b introduct visual softwar tool design data fit main memori singl workstat mani scientif applic data desir accuraci overwhelm memori capac scientist desktop workstat particularli true data obtain three dimension aerodynam calcul fine unstructur tetrahedr mesh need model arbitrarili complex configur airplan although adapt mesh techniqu appli reduc resolut mesh result mesh may contain ten million tetrahedr cell rapidli increas cpu perform memori capac begin allow scientist studi data resolut mani scientist access workstat 500 megabyt one gigabyt memori capabl visual million tetrahedr cell capabl also allow scientist model problem even greater resolut moreov everi scientist constant access highend workstat solv problem previou research mainli focus use parallel distribut comput multiresolut data represent exampl pv3 3 parallel break problem domain space place partit individu workstat streamlin calcul distribut interact manner partic ular pv3 coupl visual calcul simul approach attract scientist open distribut comput environ also shown work well distributedmemori parallel comput like ibm sp2 4 anoth popular approach make use supercomput like cray visual calcul highend graphic workstat display streamlin streamlin visual approach prefer distribut approach sinc streamlin calcul parallel well final multiresolut data represent allow user explor data lower resolut accord comput perform still memorylimit highest resolut recent visual softwar compani 1 well corpor research laboratori 11 begun look problem attempt provid viabl solut softwar product solut might advanc graphic workstat gener visual purpos outofcor approach intend enabl interact streamlin visual larg unstructur grid data midrang workstat even pcclass machin moder amount main memori 11 outofcor outofcor process new fact long use cope larg data mani comput problem engin scienc involv solut extrem larg linear system fit comput main memori use outofcor method solut absenc larg memori space parallel comput anoth exampl databas applic larg databas construct outofcor approach oper system smart enough handl memori content caus use bruteforc algorithm data visual solv linear system databas construc tion answer modern oper system good manag multipl job provid time share via page swap make memori appear nowher particular data access random irregular typic unstructur data visual poor local referenc lead thrash virtual memori exampl unstructuredgrid data gener store coordin solut valu node grid point node indic triangular face tetrahedr cell shown figur 1 node face cell data store contigu disk space accord spatial relationship visual calcul access two neighbor cell may invok refer farther apart disk space consequ constant page forc fetch disk resid data memori overload eventu becom io overload moder page common desper swap often intoler evid mani commerci free visual softwar packag fail handl larg data set averag workstat research motiv local scientist need interact visual mechan studi data desir resolut particl trace one import capabl request 12 outofcor streamlin visual algorithm streamlin path massless particl releas steadi flow field 15 plot streamlin fundament techniqu visual vector field data set gener scientif comput 7 9 14 streamlin extend construct type object like streamtub streamribbon 2 5 14 streamlin usual construct use stepwis numer integr integr involv follow step 1 select initi point 2 locat cell contain point node node node id3 1051 node cell n z coordiat node 34 z coordiat z coordiat node 1051 z coordiat node 1052 z coordiat node 36 z coordiat node 37 z coordiat node boundari face 1 boundari face 2 boundari face f solut data node 277 solut data node 278 solut data node 279 solut data node 280 solut data node 281 solut data node 282 solut data node 283 solut data node node node node node node node node node node node node node node node node node figur 1 typic data structur unstructur mesh normal node face cell data store separ chunk access two cell next spatial domain may invok refer correspond data item scatter across disk space 3 interpol vector field calcul new point use numer integr method 4 termin condit met go step 2 outofcor algorithm design base follow observ ffl streamlin calcul increment local integr step need small amount data one two tetrahedr cell ffl calcul multipl streamlin concurr cheaper calcul one streamlin maxim local refer increas memori perform dramat ffl data pack essenti reduc number disk read data pack way fetch cell small neighborhood done one disk read ffl much effici read small chunk data disk move larger chunk data disk would like disrupt interact streamlin readi enter neighbor chunk result algorithm contain two step preprocess interact streamlin con struction preprocess step determin connect calcul addit quantiti interpol function coordin transform function restructur raw data store inform compact octre represent disk step need done second step requir graphic user interfac facilit pick seed point trace streamlin begin interact streamlin construct step reli oper system fetch requir data instead memori manag polici design effici util minimum memori space fetch data disk streamlin integr octant octant base principl preemption timeshar way streamlin construct interact use megabyt memori space midrang workstat like sun sparc20 rest paper organ follow section 2 illustr data preprocess step streamlin construct algorithm describ section 3 memori manag polici explain section 4 test perform compar virtual memori algorithm studi perform memori manag polici local disk access nonloc disk access measur averag cost overhead test result present discuss section 5 follow conclud remark futur research direct 2 data preprocess effici visual oper unstructuredgrid data obtain preprocess irregular mesh topolog perform streamlin visual izat two import oper 1 identifi tetrahedra cell contain user specifi seed point 2 comput veloc locat node point fast cell search method like one present 9 need addit data cell connect inform coordin transform function data also need integr step could comput fli streamlin construct comput cost would high interact visual flow solut defin node locat interpol must use comput flow variabl valu locat attain maximum effici run time interpol function cell also precomput store data tetrahedr cell use linear basi function interpol 6 14 summari preprocess step first determin cell connect comput coordin transform interpol function cell final partit reorgan raw data comput data use octre structur facilit fast data retriev achiev interact visual avoid precomput store data addit storag space requir actual make outofcor approach even attract issu techniqu calcul transform interpol function well connect inform found previou research 13 14 21 data partit two approach partit unstructur data set first approach divid cell total disjoint group sinc data set unstructur geometr shape result group gener irregular advantag approach data redund introduc howev one disadvantag spatial relationship group difficult determin specif becom difficult verifi whether two group adjac identifi group specifi point locat second approach partit data set superimpos regular framework subset form group cell intersect contain within region framework framework could regular 3d mesh kway tree octre 10 sinc data set unstructur cell may intersect sever region regular framework thu data redund inevit approach partit physic domain correspond octre figur 2 octre data partit major advantag second approach spatial inform subset easili obtain exampl octre employ framework data partit octant contain seed point identifi search octre root leav within olog n step n number octant neighbor octant also found appli techniqu one neighbor octant contain next point current streamlin outofcor set octre use framework data partit sinc unstructur grid highli adapt shape resolut octre wide employ mani comput graphic visual applic allow us refin data partit region grid dens subset rel equal data size ie term number tetrahedr cell figur 2 simpl exampl octre shown note framework regular 3d mesh search may complet constant time high resolut regular mesh must use accommod origin mesh irregular base octre structur data partit carri topdown manner first whole data set consid one octant octant decompos eight child octant use three cut plane perpendicular x z axe number tetrahedr cell child octant exce predefin limit maximum octant size child octant partit procedur perform recurs octant contain fewer cell maximum octant size cell octant store file current implement enabl straightforward access octant though larg number file may creat maximum octant size small altern way store octant singl file method must employ index algorithm size octant differ number octant larg octant store bound box octant number cell octant center octant id file use store cell octant shown figur 3 center octant three cut plane intersect posit point set arithmet averag center cell octant number cell file id pointer child octant x z center octant bound box child0 child1 child7 figur 3 data structur octre node center cell defin arithmet averag vertic choic keep size eight child octant level tree octre creat repres structur data partit store file partit complet file read first begin streamlin visual session typic octre requir one megabyt storag space structur octre node allow effici systemat way retriev need data calcul streamlin 22 outofcor data preprocess size data consid data preprocess step must also perform outofcor manner done alloc eight buffer memori open eight disk file store cell read input data file top level eight buffer disk file correspond root eight child octant bound region cell read memori increment cell assign buffer intersect correspond bound region mention previous cell may assign one buffer whenev buffer full cell buffer dump correspond disk file cell process octant size examin octant cell maximum octant size anoth round partit proce eight buffer disk file creat octre complet built next step find cell connect calcul coeffici coordin transform well interpol function one octant file process time note maximum octant size determin number octant gener larger octant size impli less data redund thu less disk space use problem keep larg octant main memori harder achiev consist perform rememb streamlin visual move mani smaller data chunk gener less expens move larger piec sinc normal small portion data chunk access streamlin calcul moreov higher hit rate would achiev mani smaller octant core hand maximum octant size rel small larger number octant gener preprocess step would becom expens data redund becom higher disk space requir store data howev octant resid main memori streamlin construct attain consist perform test result provid section 5 show select maximum octant size influenc perform outofcor method 3 streamlin construct two oper repeatedli perform integr streamlin first one comput new posit streamlin second one move requir data disk main memori alreadi compar cpu speed memori access time disk io rel slow order narrow gap comput datafetch care schedul furthermor memori space limit resourc import fulli util memori space store inform calcul comput carri minimum interrupt order achiev goal outofcor streamlin construct algorithm base two fundament oper system concept preemption timeshar 12 base avail data streamlin construct may follow three state wait readi trace need octant main memori streamlin readi state enter trace state next posit calcul otherwis streamlin wait state wait need octant brought disk memori space occupi octant longer involv comput new streamlin posit releas reus short outofcor program follow preprocess stage consist follow step ffl initi read octre creat data partit step disk alloc memori space hold octant creat data structur need streamlin construct ffl construct streamlin 1 get initi posit select user 2 identifi octant streamlin enter flag octant id memori block size octant pointer use 006 500k free n1 figur 4 octant tabl 3 fetch octant main memori 4 integr streamlin octant main memori leav octant 5 go back 2 termin condit streamlin met 31 initi initi step first read octre disk creat follow data structur ffl octant tabl keep track octant main memori ffl three queue schedul comput octant tabl use store inform octant resid main memori one octant associ entri octant tabl entri contain four field figur 4 show tabl n entri first field flag indic whether entri alloc octant second field contain id octant third field store size memori space alloc octant last one pointer start posit octant three queue creat keep data streamlin construct queue name wait queue readi queue finish queue streamlin kept wait queue enter octant resid main memori otherwis readi queue streamlin complet integr store finish queue three queue octant tabl employ schedul streamlin construct octantfetch streamlin process time use less memori space head tail x z veloc data streamlin streamlin object next object segment point record streamlin number point octant id figur 5 data structur streamlin 32 construct given initi seed point streamlin object creat streamlin object store list streamlin posit number point streamlin id octant contain recent integr posit streamlin streamlin point coordin veloc magnitud angular rotat rate flow local flow expans rate 14 record data structur streamlin object depict figur 5 initi id octant contain initi posit identifi enter streamlin object streamlin object kept wait queue next step streamlin construct streamlin object wait queue examin one one long still space prealloc main memori octant identifi streamlin object read octant tabl octant streamlin object read streamlin object move wait queue readi queue subsequ streamlin object readi queue process one one fourth order rungekutta method 8 use calcul new streamlin point time angular rotat rate local flow expans rate comput streamribbon streamtub construct 13 streamlin leav octant octant contain new posit streamlin identifi octant tabl search check whether octant alreadi main memori data cell contain current streamlin posit found streamlin construct continu streamlin object move end wait queue anoth streamlin object select readi queue process readi queue wait queue cpu streamlin construct finish queue figur object schedul streamlin reach physic domain boundari current time step exce predefin limit streamlin object delet readi queue store finish queue readi queue empti octant main memori longer involv streamlin construct memori space occupi releas free space pool octant tabl entri mark free wait queue search new set octant fetch main memori anoth round streamlin construct begin streamlin integr complet streamlin object finish queue exampl illustr migrat streamlin object streamlin construct depict figur 6 4 memori manag octant produc preprocess stage may differ size therefor unwis use fix size memori block hold octant effici util memori space memori manag polici design support outofcor streamlin visual program first size memori space dedic outofcor program select user present size measur number cell greater maximum octant size memori space decompos memori block differ size size memori block creat determin two paramet maximum octant size paramet call block size level two valu either control user set automat base inform obtain preprocess step block size level repres number differ block size exampl valu one block size equal maximum octant size set k size block maximum octant size block creat descend order size largest block gener first block second largest size creat creation process 6 mbyte 3 mbyte mbyte free space tabl free memori block figur 7 free memori space pool remain memori space small creat block particular size size skip block next smaller size creat howev remain memori space smaller smallest block size process stop smallest block creat rerun process remain memori space larg enough creat block memori block creat put free space pool pool tabl creat bookkeep number entri tabl equal block size level entri list block size maintain exampl free space pool shown figur 7 block size level three octant fetch main memori size octant retriev octre free space pool search find memori block larg enough hold octant search start list smallest block bestfit block may found block assign octant remov free space pool octant longer involv comput memori block releas free space pool block size level import paramet determin memori util effici small larg former result larg block space ineffici store smaller octant would caus excess octant fetch latter result mani smaller block might small therefor never use test run studi effect paramet upon outofcor program result present next section test test outofcor visual algorithm ibm rs6000 workstat 128 megabyt main memori well sun sparc20 workstat 64 megabyt main memori note algorithm need 520 megabyt 64128 megabyt achiev interact visual ibm workstat larger memori space allow us compar perform outofcor method program reli virtual memori manag addit three set test conduct sun workstat first set test use reveal maximum octant size memori space size block size level affect overal perform outofcor program second set test overhead produc fetch data schedul comput record analyz third set studi effect caus store data nonloc disk test wall clock time use measur cost test run batch mode render display time includ current render done softwar fast streamlin construct rate increment softwar render make interact view streamlin format possibl 51 outofcor method versu virtual memori order reveal strength outofcor method two streamlin construct method reli virtual memori implement test three program use numer method integr streamlin two virtualmemorybas method attempt store much data possibl main memori first program cell record contain four vertex indic four neighbor cell indic size cell record byte four neighbor cell indic cell record calcul preprocess stage though coeffici coordin transform function comput fli streamlin construct second program cell record store four vertex indic four neighbor cell indic 3 theta 4 matrix coordin transform function coeffici store eight integ 12 float kept cell record size cell record 80 byte neighbor cell indic coordin transform function coeffici precomput preprocess stage outofcor program cell record hold inform second program maximum octant size set 20000 cell memori space equal six time maximum octant size dedic program block size level set three data set test artifici creat divid cube one two three four five million tetrahedr cell set memori requir store streamlin vertic cell record larger user space main memori exampl four million tetrahedr cell would requir least 128 megabyt dedic user space ten megabyt gener artifici data set three compon vector field determin follow formula wx figur 8 streamlin visual artifici data set tabl 1 vmbase method 1 data size initi construct total streamlin visual data set shown figur 8 data set store disk binari format data set one hundr streamlin construct use three program maximum number time step streamlin set 5000 ibm rs6000 model 560 workstat use test machin 128 megabyt main memori 512 megabyt page space two cost measur use wall clock time second first one initi cost mainli time read test data second one cost construct 100 streamlin total cost calcul ad two test result summar figur 9 logarithm scale use yaxi larg small number plot window time breakdown case list tabl 1 2 3 compar two virtualmemorybas program perform 5total time data size million tetrahedr cell outofcor vs incor method incor incor precomput outofcor precomput figur 9 outofcor versu vmbase method tabl 2 vmbase method 2 data size initi construct total tabl 3 outofcor method data size initi construct total ofcor program almost two order magnitud better initi cost grow slowli data size streamlin construct cost small constant virtualmemorybas program tri keep much data main memori streamlin construct test result show lot time devot alloc memori space read data set data size equal two million cell initi cost grow dramat sinc size requir memori space alreadi exce size physic main memori space oper system swap data page space creat memori space input data situat becom wors data size increas three million cell second program handl data set four million cell oper system signal system error quit program initi stage complet therefor shown tabl 2 first virtualmemorybas program requir less memori space handl larger data set howev coeffici coordin transform function comput fli streamlin construct consequ cost construct streamlin program high compar two program initi cost program toler data size three million cell data size reach four million cell initi cost becom high total cost equal 49 minut 47 second case data set five million cell program need total 57 minut 14 second construct 100 streamlin outofcor program consum less 41 second perform oper therefor perform first second program accept interact visual test result two import find first virtual memori system oper system help visual applic second speed construct streamlin sever degrad coeffici coordin transform function precomput achiev interact visual doubt must trade space time case use less expens disk space employ memori manag polici tailer streamlin calcul 52 maximum octant size size memori space block size level three paramet influenc perform outofcor program maximum octant size size memori space block size level test conduct sun workstat explor three paramet affect perform outofcor program find optim combin three paramet test maximum octant size set 10000 20000 30000 40000 cell respect cell repres 80 byte inform explain section 51 size memori space set 4 6 8 10 time maximum octant size block size level vari 1 8 test perform follow valu maximum octant size ffl subdivid data set base maximum octant size ffl memori space size creat memori space block size level base block size level construct 100 streamlin 3 measur report cost conveni smaller data set 178 million cell use test data set come wind tunnel simul visual result shown figur 10 note streamtub softwar render comput cost data partit preprocess togeth 20 minut workstat note cost depend maximum octant size data store local disk workstat initi point 100 streamlin randomli select maximum number time step streamlin 5000 test result shown figur 11 12 13 14 cost construct streamlin use maximum octant size shown individu figur curv plot figur repres cost use differ size main memori space vari block size level compar test result conclud dataset maximum octant size essenti paramet outofcor program perform program significantli improv paramet reduc 30000 cell 20000 cell outofcor program favor smaller octant size obviou cost declin memori space increas 4 time 6 time maximum octant size matter maximum octant size howev increas memori space improv perform memori space 4 6 time maximum octant size outofcor program perform better block size level increas signific improv obtain chang block size level memori space larger current set best perform thu obtain maximum octant size set 10000 cell memori space use 64 megabyt equival 6 time maximum octant size block size level 3 cost construct 100 streamlin 25 second figur 10 streamlin visual windtunnel data set summari outofcor program perform better maximum octant size smaller alloc memori space larger block size level higher nevertheless improv made chang three paramet limit reason describ follow streamlin construct small portion cell visit streamlin octant even whole data set perform improv load larger number cell main memori instead improv load cell actual use integr streamlin use smaller maximum octant size higher block size level larger memori space octant stay main memori percentag cell directli involv integr becom higher comput accomplish two consecut octantfetch overhead fetchingdata reduc howev mani octant read overhead octantfetch becom high increas overhead cancel gain local comput perform reach limit 53 averag cost overhead anoth set test conduct sun workstat measur overhead caus datafetch streamlin schedul studi overhead affect behavior program data set 48 million tetrahedr cell use data set time block size level maximum octant size10000 cells08mb 32 mbyte 4 time 64 mbyte 8 time figur 11 time program maximum octant size10000 cells30507090 time block size level maximum octant size20000 cells16mb 64 mbyte 4 time figur 12 time program maximum octant size20000 cell time block size level maximum octant size30000 cells24mb 96 mbyte 4 time 192 mbyte 8 time figur 13 time program maximum octant size30000 cells30507090 time block size level maximum octant size40000 cells32mb 192 mbyte 6 time figur 14 time program maximum octant size40000 cell figur 15 streamlin visual airplan data set obtain comput fluid dynam simul flow pass around airplan bodi visual result shown figur 15 note portion airplan model 407 megabyt memori requir store vertex cell record data set maximum octant size memori space size block size level fix test maximum octant size set 40000 cell memori space size four time maximum octant size block size level three test perform calcul 10100 streamlin maximum number time step streamlin limit 5000 total cost overhead measur test total cost includ overhead cost integr streamlin test result present figur 16 overhead includ cost search fetch octant select memori block schedul streamlin object total cost overhead divid total number time step use streamlin construct obtain averag cost averag overhead singl step comput averag cost singl step comput shown figur 17 note averag cost fluctuat test case seed point randomli select therefor length streamlin vari also note averag cost decreas much streamlin construct concurr increas overhead due streamlin schedul octant search cancel time number streamlin execut time wall clock figur total cost construct streamlin benefit octant share final averag overhead divid averag cost produc percentag cost due overhead percentag cost due overhead singl step calcul depict figur 18 accord test result overhead high 40 percent overal cost also measur differ cost construct one streamlin time multipl streamlin one test one hundr streamlin construct one one thu streamlin schedul octant search requir memori alloc trivial sinc one octant one streamlin resid main memori time averag cost trace streamlin 076 second circumst hand test reveal averag cost construct 100 streamlin concurr 056 second per streamlin observ 263 improv perform due octant share even though overhead introduc multistreamlin execut 54 local disk versu nonloc disk previou test data store local disk workstat environ ment data may store nonloc disk fileserv connect workstat via network order explor effect store data nonloc execut time microsecond number streamlin averag cost one step figur 17 averag cost singl step computation2832364010 20 number streamlin percentag overhead one step figur averag overhead singl step comput time block size level maximum octant size10000 cells08mb 32 mbyte 4 time 64 mbyte 8 time figur 19 time construct streamlin use nonloc disk disk set anoth set test repeat test describ section 52 use data set howev data store nonloc disk two set test result present figur 19 20 penalti use nonloc disk appar latenc network significantli affect overal perform percentag cost result network latenc 59 65 maximum octant size 10000 cell increas 68 76 maximum octant size 40000 cell total cost increas least 100 sinc network share sever comput program perform unstabl gener case program perform better maximum octant size smaller similar result report previou test perform improv memori space alloc octant fetch becom frequent order fill addit memori space trigger nonloc disk io 6 conclus present effici outofcor algorithm visual larg unstructur vector field data set singl workstat moder size main memori use octre structur data set partit subset store disk file subset read main memori demand memori manag polici time block size level maximum octant size40000 cells32mb 192 mbyte 6 time figur 20 time construct streamlin use nonloc disk design alloc memori space store test conduct explor perform algorithm implement test result demonstr outofcor algorithm enabl interact streamlin visual data set sever million tetrahedr cell averag workstat exampl data set 178 million cell comput cost construct 100 streamlin concurr mani 5000 integr point 25 second sun sparc20 use 64 megabyt main memori space also show visual requir achiev use virtual memori use highend workstat like sun ultra sparc sgi indigo2 would increas interact test result reveal perform program better data divis finer block size level higher memori space use larger also show outofcor program run much faster data store local disk futur work includ make use hardwar render capabl graphic workstat optim preprocess step design outofcor algorithm type visual oper surfac volum render acknowledg research support part nation aeronaut space administr nasa contract nas119480 nation scienc foundat acerc center thank tom crockett construct suggest r final progress report phase sbir softwar architectur effici visual larg unsteadi cfd result visual 3d vector field variat stream pv3 distribut system largescal unsteadi cfd visual applic pv3 coprocess visual environ 3d unstructur mesh calcul ibm sp2 parallel comput construct stream surfac steadi 3d vector field interact time depend particl trace use tetrahedr decomposit numer analysi vector particl tracer unstructur grid design analysi spatial data structur stream pipelin oper system concept elementari fluid mechan tr ctr douglass davi william ribarski nickola faust jiang intent percept outofcor visual appli terrain proceed confer visual 98 p455458 octob 1823 1998 research triangl park north carolina unit state ralph bruckschen falko kuester bernd hamann kenneth joy realtim outofcor visual particl trace proceed ieee 2001 symposium parallel largedata visual graphic octob 2223 2001 san diego california ricardo faria cludio silva outofcor render larg unstructur grid ieee comput graphic applic v21 n4 p4250 juli 2001 falko kuester ralph bruckschen bernd hamann kenneth joy visual particl trace virtual environ proceed acm symposium virtual realiti softwar technolog novemb 1517 2001 baniff alberta canada tahsin kurc mit atalyrek chialin chang alan sussman joel saltz visual larg data set activ data repositori ieee comput graphic applic v21 n4 p2433 juli 2001 naveen kumar polap raghu machiraju dhabhaleshwar panda featur estim effici stream proceed 2002 ieee symposium volum visual graphic octob 2829 2002 boston massachusett dougla davi william ribarski jiang nickola faust sean ho realtim visual scalabl larg collect heterogen object case studi proceed confer visual 99 celebr ten year p437440 octob 1999 san francisco california unit state tahsin kurc mit atalyrek chialin chang alan sussman joel saltz visual larg data set activ data repositori ieee comput graphic applic v21 n4 p2433 juli 2001 jame ahren kristi brislawn ken martin berk geveci c charl law michael papka largescal data visual use parallel data stream ieee comput graphic applic v21 n4 p3441 juli 2001 shyhkuang ueng outofcor encod larg tetrahedr mesh proceed 2003 eurographicsiee tvcg workshop volum graphic juli 0708 2003 tokyo japan david ellsworth bryan green patrick moran interact terascal particl visual proceed confer visual 04 p353360 octob 1015 2004 vijay kumar benjamin rutt tahsin kurc umit catalyurek joel saltz sunni chow stephan lamont maryann marton imag visual analysislarg imag correct warp cluster environ proceed 2006 acmiee confer supercomput novemb 1117 2006 tampa florida shyhkuang ueng k sikorski outofcor method comput connect larg unstructur mesh proceed fourth eurograph workshop parallel graphic visual septemb 0910 2002 blaubeuren germani c charl law william j schroeder kenneth martin joshua temkin multithread stream pipelin architectur larg structur data set proceed confer visual 99 celebr ten year p225232 octob 1999 san francisco california unit state sara mcmain joseph hellerstein carlo h squin outofcor build topolog data structur polygon soup proceed sixth acm symposium solid model applic p171182 may 2001 ann arbor michigan unit state yijen chiang cludio silva william j schroeder interact outofcor isosurfac extract proceed confer visual 98 p167174 octob 1823 1998 research triangl park north carolina unit state shyhkuang ueng yanjen su chitang chang lod volum render fea data proceed confer visual 04 p417424 octob 1015 2004 paolo cignoni claudio montani claudio rocchini roberto scopigno extern memori manag simplif huge mesh ieee transact visual comput graphic v9 n4 p525537 octob david ellsworth patrick j moran acceler larg data analysi exploit regular proceed 14th ieee visual 2003 vis03 p74 octob 2224 wagner correa jame klosowski claudio silva visibilitybas prefetch interact outofcor render proceed ieee symposium parallel largedata visual graphic p2 octob 2021 peter lindstrom cludio silva memori insensit techniqu larg model simplif proceed confer visual 01 octob 2126 2001 san diego california ricardo faria cludio silva outofcor render larg unstructur grid ieee comput graphic applic v21 n4 p4250 juli 2001 papadomanolaki anastassia ailamaki julio c lopez tiankai tu david r ohallaron gerd heber effici queri process unstructur tetrahedr mesh proceed 2006 acm sigmod intern confer manag data june 2729 2006 chicago il usa gokul varadhan dinesh manocha outofcor render massiv geometr environ proceed confer visual 02 octob 27novemb 01 2002 boston massachusett brent wood bradley clymer joel saltz tahsin kurc parallel implement 4dimension haralick textur analysi diskresid imag dataset proceed 2004 acmiee confer supercomput p48 novemb 0612 2004 yijen chiang ricardo faria cludio silva bin wei unifi infrastructur parallel outofcor isosurfac extract volum render unstructur grid proceed ieee 2001 symposium parallel largedata visual graphic octob 2223 2001 san diego california michael beynon chialin chang umit catalyurek tahsin kurc alan sussman henriqu andrad renato ferreira joel saltz process largescal multidimension data parallel distribut environ parallel comput v28 n5 p827859 may 2002