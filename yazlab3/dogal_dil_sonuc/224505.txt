exact methodolog schedul 3d design space abstract paper describ exact solut methodolog implement renssela voyag design space explor system solv schedul problem 3dimension 3d design space usual 2d design space trade area schedul length plu third dimens repres clock length unlik design space explor methodolog reli bound estim methodolog guarante find global optim solut 3d schedul problem furthermor methodolog effici prune search space elimin provabl inferior design point care select candid clock length tight bound number function unit type schedul length b introduct highlevel synthesi process solv schedul problem view process explor 2dimension 2d design space axe repres time schedul length area ideal total area often simplifi function unit area realiti howev 2d design space small part much larger design space one larger design space present de mich 15 illustr figur 1 design space highlevel synthesi view 3 dimension 3d space axe repres schedul length area clock cycl length well typic schedul algorithm explor one 2d slice larger 3d design space 2d slice correspond fix clock length chosen priori design clock length depend mani factor includ delay function unit storag element glue logic wire well clock skew valu unknown schedul therefor estim stage design process given lack detail inform design forc make ad hoc frequent arbitrari guess clock length unfortun elimin entir dimens search space thu even optim schedul explor one 2d slice design space produc schedul optim one clock length better schedul may exist differ clock length better schedul found motiv need explor larger design space consid problem schedul wellknown ellipt wave filter 23 p206 ewf benchmark varieti materi base upon work support nation scienc foundat grant mip9211323 dept electr comput system engin z depart comput scienc schedul length area length figur 1 larger 3dimension 3d design space clock cstep ns cstep ns cstep ns 48 25 1200 26 1248 37 1776 tabl 1 resourceconstrain schedul result ewf resourc constraint find fastest possibl schedul assum vdp100 modul librari 16 24 use multipl delay 163n addit delay 48n forc choos clock length schedul algorithm use design would probabl choos either clock length 48n 163n execut delay either addit multipl given clock length optim schedul support multicycl oper ilpbas schedul 5 voyag design space explor system would produc result shown line label 48 163 tabl 1 consid line tabl 1 repres perhap less obviou choic clock length resourc constraint fastest design correspond clock length 24n design would found schedul methodolog limit ad hoc guess 1 thu import explor number candid clock length find global optim solut paper present exact solut methodolog implement voyag design space explor system find global optim solut schedul problem 3d design space methodolog make problem tractabl care prune provabl inferior point design space 2 provabl effici exact algorithm solv individu problem cours small clock length also result larger number control step thu larger complex control unit howev note clock length 55n compar ad hoc guess result schedul almost fast one correspond 24n clock faster correspond ad hoc guess 8th int symp system synthesi cann franc septemb 1995 timeconstrain 3d schedul tcs3d read dfg modul librari time constraint comput minim set candid clock length clock length perform timeconstrain schedul tc present result user evalu timeconstrain schedul tc comput tight lower bound number function unit type use lower bound resourc constraint solv trc decis problem feasibl schedul found increas resourc constraint solv trc decis problem figur 2 voyag timeconstrain 3d schedul tcs3d methodolog paper present two methodolog solv clock determin schedul problem guarante find global optim design far effici exhaust search design space one methodolog solv timeconstrain 3d schedul problem figur 2 solv resourceconstrain 3d schedul rcs3d problem figur 3 methodolog implement ren selaer voyag design space explor system core methodolog roughli methodolog comput set candid clock length candid clock length optim solv schedul problem howev straightforward implement core methodolog take much long solv even small benchmark thu import 1 solv schedul problem small provabl minim set candid clock length 2 solv schedul problem effici possibl optim solut found reason amount time sinc search space tc rc problem larger trc problem methodolog solv tc rc problem gener miss constraint effect convert easiertosolv trc problem tc problem methodolog comput constraint number function unit type rc problem comput time constraint length schedul sinc constraint also found effici entir methodolog effici 21 timeconstrain 3d schedul tcs3d voyag methodolog solv timeconstrain 3d schedul problem outlin figur 2 methodolog begin read data flow graph dfg execut delay relev function unit modul librari overal time constraint minim set candid clock length determin see section 3 base execut delay relev function unit modul librari ewf modul librari describ earlier 10 candid clock length would gener clock length resourceconstrain 3d schedul rcs3d read dfg modul librari resourc constraint comput minim set candid clock length clock length perform resourceconstrain schedul rc present result user evalu resourceconstrain schedul rc comput tight lower bound schedul length use lower bound time constraint solv trc decis problem feasibl schedul found increas time constraint solv trc decis problem figur 3 voyag resourceconstrain 3d schedul rc timeconstrain schedul perform result present user evalu solv tc problem effici voyag ilp formul trc problem describ section 4 use follow first tight lower bound number function unit type comput use method sketch section 5 bound use resourc constraint trc problem solv decis problem trc produc feasibl schedul schedul guarante optim resourc constraint increas process repeat tcs3d solut methodolog rel effici follow reason first function unit lower bound comput polynomi time solv two linear program lp second trc solv decis problem rather optim problem use formul wellstructur requir branch branchandbound search 5 final function unit lower bound highli accur 4 almost everi case lead immedi feasibl lution practic lower bound seldom increas solv trc thu tcs3d problem solv quickli even mediums benchmark see section 7 effici methodolog increas goal find schedul fewest number function unit case tc problem solv trc problem fu lower bound compar number fu requir best previou schedul new bound smaller trc problem solv explain new bound larger need solv trc problem sinc would requir function unit best solut found far 22 resourceconstrain 3d schedul rcs3d voyag methodolog solv resourceconstrain 3d schedul problem similar see figur 3 methodolog read resourc constraint gener minim set candid clock use clock length determin algorithm describ section 3 clock length resourceconstrain schedul perform solv rc problem effici voyag ilp formul trc problem section 4 use fol low first tight lower bound overal length schedul comput section 6 bound use time constraint trc problem solv decis problem trc produc feasibl schedul schedul guarante optim time constraint increas process repeat rc problem solv quickli even mediums benchmark see section 7 effici methodolog increas goal find shortest schedul case rc problem solv trc problem schedul length lower bound compar length best previou schedul new bound smaller trc problem solv explain new bound larger need solv trc problem sinc would result longer schedul best solut found far 23 advantag solut methodolog summari voyag exact solut methodolog twofold advantag previou methodolog 1 guarante optim result 2 solut techniqu base effici prune search space unlik design space explor methodolog reli bound estim make problem tractabl methodolog gener minim set candid clock length could possibl correspond optim design optim solv either tc rc problem clock length thu guarante find global optim result furthermor although methodolog may appear first glanc perform exhaust schedul realiti quit effici three reason first minim set candid clock length gener schedul perform valu second instead directli solv tc rc problem miss constraint gener convert problem trc problem smaller search space moreov constraint tight also gener effici final trc formul use care design wellstructur 5 therefor usual find optim solut branch 3 determin candid clock length one import paramet need schedul algorithm length system clock howev determin clock length requir detail analysi clock skew wire delay glue logic de lay setup propag delay storag element etc 1 quantiti larg unknown highlevel syn thesi fortun although detail analysi necessari later design process need highlevel synthesi macroscop structur circuit determin one appropri model clock length highlevel synthesi present chaiyakul gajski 3 clock length assum 3 compon datapath delay control delay wire delay three control delay wire delay meaning estim schedul fortun delay play major role schedul problem resourc util datapath primarili affect delay datapath unit thu schedul use datapath delay determin clock length ignor control wire delay realiz actual clock length determin later longer due delay furthermor oper execut delay comput assum busbas architectur pointtopoint interconnect topolog mean exist one bu two function unit andor storag unit port setup time propag delay regist let delay tristat driver delay function unit type k denot delay k execut delay k registerto regist transfer execut oper type k given throughout remaind section set use denot set k found given dfg discuss voyag methodolog determin candid clock length necessari measur qualiti one clock length respect clock length particular oper one measur commonli use oper slack defin follow definit 2 given clock length c slack k oper type k given voyag methodolog determin minim set candid clock length rang c c rang bound c minimum clock length possibl implement design control one goal voyag 3d design space explor methodolog find minim set noninferior clock length c rang need examin order find global optim solut unfortun clock determin problem usual ignor favor ad hoc decis estim demonstr later ignor much design space lead inferior design exampl sever previou clock estim scheme 19 11 use delay slowest function unit estim clock length realist approach use 16 contigu rang integ candid clock length heurist evalu attempt provid guidanc best clock length choos howev approach choos clock length independ schedul thu best estim sinc never possibl guarante better schedul differ clock length exist therefor may seem first global optim solut 3d schedul problem found without optim solv schedul problem everi possibl clock length prohibit expens exhaust search fortun exhaust search necessari 7 corazao et al combin clock length determin problem oper templat match made suggest reduc number candid clock length howev number candid clock length reduc even shown theorem 1 similar observ made chen et al 6 present without proof follow theorem show certain clock length rang c c must explor find global optim clock length c chain consid ere clock length assum integ theorem 1 c integr divid least one regist transfer delay formal k c least one proof consid clock period c k c 0 8 k optim basic schedul gener use c clock length show c optim found anoth clock period c 0 lead faster schedul number function unit cstep origin schedul ceg new clock period c 0 found c ffl use definit k c definit 2 valu c 0 deriv substitut c 0 furthermor sinc c 0 c also follow dd k c 0 e dd k ce two relat impli dd k c regist transfer take number control step new clock c 0 origin clock c henc origin schedul still valid new clock c 0 howev c 0 less c result faster execut time number cstep function unit remain corollari 1 use integ clock length noninteg clock c gener applic theorem 1 replac c least one k 2 k summari theorem 1 corollari 1 give method determin small set candid clock length ck provabl contain optimum clock length c set comput denot ceil integr divisor delay k fall rang c c practic size ck less 10 integ rang c c similar theorem develop schedul support chain schedul support oper templat howev theorem present due lack space optim solv schedul problem highlevel synthesi basic schedul problem problem determin control step oper execut care formal analysi schedul problem 5 abl develop wellstructur integ linear program ilp formul schedul problem particular trc problem voyag formul trc problem summar follow denot set op erat denot schedul interv asap oper binari variabl x 2 use indic whether oper schedul cstep feasibl schedul valu variabl must satisfi three type constraint 1 assign constraint ensur oper schedul onto exactli one cstep 2 preced constraint p ensur oper alway schedul predecessor 3 resourc constraint r ensur schedul use avail number function unit type trc problem problem determin whether feasibl schedul exist satisfi constraint written succinctli 0 vector zero r coeffici matric due assign constraint preced constraint resourc constraint respect detail voyag schedul ilp formul found 5 5 bound number function unit discuss earlier section 2 import gener tight lower bound number function unit type bound use resourc constraint convert tc problem easierto solv trc problem furthermor bound must comput effici prefer polynomialtim algorithm function unit lowerbound problem view relax function unit minim problem unfortun mani possibl relax problem therefor mani possibl function unit lowerbound problem ideal would like find tightest bound possibl relax effici solut methodolog one approach form fu lowerbound problem fu minim problem relax preced constraint oper work 4 awar two methodolog comput fu lower bound manner relax consid jain 12 similar relax 13 tighter relax 22 18 10 20 base method origin propos fernandez bussel 8 theorem 1 work describ fulli 4 take differ approach start formal descript fu minim problem find minimum valu k number function unit type k 2 k relax problem form gener descript entir class fu lowerbound problem problem special case gener class final select one lowerbound problem produc tightest possibl bound solv problem thu approach formal entir class fu lowerbound problem guarante produc tightest possibl bound practic verifi bound produc exact case furthermor solut function unit lowerbound problem found solv two lp done polynomi time thu develop function unit lowerbound methodolog 4 guarante produc tightest bound possibl preced relax polynomi time even though origin formul ilp formul 6 bound length schedul previou section briefli describ voyag method gener tight lower bound number function unit search space tc problem could reduc solv problem effici describ section 2 section present similar method gener tight lower bound schedul length rc problem solv effici one earli formul schedul length lowerbound problem presenc resourc constraint present 12 howev bound produc approach loos recent algorithm produc tighter bound 21 20 base jackson earliest deadlin rule edrul 2 22 10 base theorem origin given fernandez bussel 8 theorem 2 furthermor algorithm appli iter hu et al appli fernandez theorem 2 9 langevin appli edrul 14 produc even tighter bound although cost increas algorithm complex investig problem shown relax ilp formul rc problem form gener descript entir class schedul length lowerbound problem much manner fu lowerbound function unit lower bound select one lowerbound problem produc tightest possibl bound problem special case gener class solv prob lem thu approach formal entir class schedul length lowerbound problem guarante produc tightest bound possibl preced relax polynomi time 7 experiment result demonstr accuraci perform voy ager 3d schedul methodolog conduct seri experi use wellknown ellipt wave filter ewf 23 p206 discret cosin transform 17 dct benchmark use vdp100 modul librari 16 24 give datapath delay 48n addit 56n subtract 163n multipl benchmark perform timeconstrain 3d schedul tcs3d resourceconstrain 3d schedul rcs3d use methodolog present section 2 71 ellipt wave filter ewf tcs3d result ewf present tabl 2 show two time constraint clock length candid set lead feasibl schedul clock length lead infeas schedul regardless number function unit avail time constraint 1394n three clock length 55n 48n 24n led minimum number function unit schedul 55n clock dd mult 3e requir fewest control step thu potenti time clock cstep ns mult add time constraint 1394n 48 29 1392 2 2 time constraint 1035n tightest 43 1032 4 tabl 2 ewf tcs3d result ns cs ns cs ns cs ns 48 23 1104 lb 1632 26 1248 25 1200 28 40 1120 lb 1596 44 1232 42 1176 43 1032 66 1584 48 1152 46 1104 tabl 3 ewf rcs3d result smaller control would prefer note 48n clock one obviou ad hoc guess add may requir addit multipli find fastest possibl design critic path length use deriv tightest possibl time constraint 1035n time constraint one clock length 24n led feasibl schedul thu guarante fastest design rcs3d result ewf shown tabl 3 schedul length interest shown boldfac lowerboundedbi rcs3d methodolog shown gray along lowerbound schedul length describ section 22 trc problem solv clock length sinc would result schedul longer shortest schedul found previou clock length 55n 24n clock length correspond fastest schedul interest note neither clock length obviou ad hoc guess 55 dd mult 3e 24 dd mult 7e dd add 2e mean fastest schedul might miss use convent methodolog furthermor although clock length 24n would correspond larger number control step perhap larger control small clock length result overal fastest schedul small clock granular tend reduc oper slack 72 discret cosin transform dct tcs3d result dct present tabl 4 first set result time constraint 500n correspond design run 2mhz eight clock length produc feasibl schedul one 24n led minimum number function unit find fastest possibl design critic path length use deriv tightest possibl time constraint 434n one clock length 24n led feasibl schedul thu guarante fastest design rcs3d result dct present tabl 5 56n clock length sub correspond fastest schedul time clock cstep ns mult add sub time constraint 500n 2mhz 28 17 476 11 7 4 15 5 19 26 494 11 5 4 15 7 434n tightest tabl 4 dct tcs3d result clock cstep ns 48 lb 816 28 28 784 19 lb 798 tabl 5 dct rcs3d result 73 methodolog run time voyag design space explor methodolog consist three main task comput minim set candid clock length comput tight bound number function unit schedul length solv trc problem minim set candid clock length comput quickli bound comput solv two linear program polynomi time discuss section 5 6 final trc formul use voyag care construct well structur mean convergeson optim solut faster arbitrari formul motiv need solv tc rc problem first comput bound solv result trc problem consid result solv tc problem directli time constraint 1394n 24n clock ewf benchmark even wellstructur formul voyag solv problem directli took hour cpu time use lindo sun sparcstat 2 contrast spent 151 sec comput lower boundson number function unit 775 sec solv trc problem solv problem two order magnitud less time larger benchmark dct time constraint 500n 24n clock spent 828 sec comput lower bound number function unit 262 sec solv trc problem directli solv tc problem case took hour gener best design exampl gener within second howev small clock length eg 19n ilp trc problem becom quit larg case would taken hour find exact solut fortun even case bound produc fairli quickli could often obviat need solv trc problem clock length describ section 21 22 summari paper defin new problem 3d schedul problem present exact solut methodolog solv problem without resort timeconsum exhaust search solut methodolog exact guarante find optim clock length schedul furthermor effici prune inferior point design space care select candid clock length import design paramet often determin guesswork estim tight bound number function unit length schedul r simpl algorithm multiprocessor schedul meet dead line time model high level synthesi comput lower bound function unit schedul analyz exploit structur constraint ilp approach schedul problem optim modul set clock cycl select dsp synthesi instruct set map perform optim bound number processor time multiprocessor optim schedul improv lower bound schedul optim problem lower bound iter time number resourc function pipelin data flow graph modul select pipelin synthesi predict systemlevel area delay pipelin nonpipelin design recurs techniqu comput lowerbound perform schedul synthesi optim digit circuit system clock estim base clock slack minim salsa new approach schedul time constraint comprehens lower bound estim behavior descript synthesi optim clock scheme estim implement bound real time dsp applic specif circuit estim architectur resourc perform highlevel synthesi applic algorithm regist transfer level synthesi system ar chitect workbench vlsi technolog inc tr system clock estim base clock slack minim time model highlevel synthesi comprehens lower bound estim behavior descript analyz exploit structur constraint ilp approach schedul problem comput lower bound function unit schedul instruct set map perform optim modul select pipelin synthesi synthesi optim clock scheme synthesi optim digit circuit algorithm registertransf level synthesi ctr h juan bakshi gajski clock optim highperform pipelin design proceed confer european design autom p330335 septemb 1996 geneva switzerland narasimhan j ramanujam improv comput perform ilpbas problem proceed 1998 ieeeacm intern confer computeraid design p593596 novemb 0812 1998 san jose california unit state ann mignott olivi peyran reduc complex ilp formul synthesi proceed 10th intern symposium system synthesi p5864 septemb 1719 1997 antwerp belgium anand raghunathan niraj k jha iter improv algorithm low power data path synthesi proceed 1995 ieeeacm intern confer computeraid design p597602 novemb 0509 1995 san jose california unit state ranga vemuri sriram govindarajan iyad ouaiss meenakshi kaul vinoo srinivasan shankar radhakrishnan sujatha sundaraman satish ganesan awartika pandey preetham lakshmikanthan autom design synthesi partit adapt reconfigur hardwar hardwar implement intellig system physicaverlag gmbh heidelberg germani 2001