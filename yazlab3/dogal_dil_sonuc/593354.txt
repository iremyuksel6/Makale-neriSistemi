fourier elimin compil constraint hierarchi linear equal inequ constraint aris natur specifi mani aspect user interfac requir one window left anoth requir pane occupi leftmost 13 window prefer object contain within rectangl possibl interact use need solv similar constraint satisfact problem repeatedli screen refresh success problem differ previou one posit input devic previou state system present algorithm solv system constraint use project solut compil effici constraintfre code parameter new input produc straightlin constraintfre code sort import number applic exampl provid predict perform realtim system allow compani ship product without includ runtim constraint solver compil java applet download run remot without includ runtim solver applic runtim effici particularli import even less timecrit user interfac applic smooth perform result code pleas code produc use current techniqu b introduct constraint natur tool user interfac toolkit kind interact graphic system import use applic area includ specifi layout geometr inform maintain consist applic data view data maintain consist among multipl view import abl express prefer well requir interact constraint system one import use express desir stabil move part imag thing stay unless reason move second use process potenti invalid user input grace way exampl user tri move gure outsid bound window reason gure bump side window stop rather signal error third use balanc con ict desir exampl lay graph constraint need specifi maintain layout inform typic linear equal inequ real number 2 inequ constraint particular need express relationship insid leftof overlap exampl express requir window1 left window2 constraint window1rightsid window2leftsid layout constraint requir other prefer interact system typic requir resatisfi constraint repeatedli user move part gureeach time screen refresh constraint must resatis constraint satisfact problem dier previou one valu constant constraint exampl mous posit one strategi achiev requir interact respons time compil constraint satisfact plan block code execut repeatedli resolv constraint differ input paramet view kind partial evalu constraint solv algorithm long done local propag solver eg 1 recent simultan linear equat 4 acycl set inequ constraint 2 howev system compil plan system constraint includ cyclic set simultan equal inequ lack address origin motiv work constraint solv user interfac toolkit kind graphic interact system techniqu use two reason rst produc code requir runtim support constraint solv second code ecient techniqu also use applic either consider factor abil get rid runtim support import mani real softwar task one exampl sort constraintbas author environ produc java applet behaviour applet partial speci use constraint applet written test author environ constraint compil use produc straight java code ship net run remot machin without requir runtim constraint solver remot machin preliminari work applic done 6 use constraint compil produc java code sever applet includ interact demonstr geometr theorem abacu simul includ web document second exampl build embed realtim engin control predict perform need compil code provid call runtim constraint solver gener final develop product compani might use constraint develop applic want ship proprietari constraint solv packag applic 8 compil code also ecientour measur show speed 5 20 time faster test case perform use runtim solver base simplex algorithm 7 runtim solver reason ecient well mani applic constraint solv time domin graphic refresh time either techniqu howev case simplex solver markedli vari respons timesmuch time extrem fast success pivot requir slow consider give rise overal jerki qualiti interact peopl prefer uniform respons time vari one addit speed could import case well exampl compil code run slower processor paper show use fourier elimin compil heirarch constraint solv 3 section 2 introduc notion solv constraint project show use produc compil code review notion constraint hierarchi express preferenti constraint section 3 show adapt project algorithm handl hierarch constraint section 4 section 5 address issu redund manag section 6 discuss extens algorithm examin compiletim runtim properti prototyp implement section 7 section 8 present theoret complex result algorithm final section 9 conclud 2 solv constraint use project section brie illustr project use nd solut linear equal inequ constraint moment ignor preferenti constraint also ignor issu compil primit constraint context linear inequ equal constraint set primit constraint assum everi primit constraint written simpli form variabl appear twice primit constraint let varsc denot set variabl appear constraint c similarli let varsc denot set variabl appear equat inequ c denot 9w f existenti quantic variabl f except w formula 9v 1 9v 2 9v k f w set variabl variabl x 2 varsc partit c follow way let c 0 x set primit constraint c 2 c x 62 varsc let x set equat c 2 c x 2 varsc let c x set inequ c 2 c c equival inequ form x e e linear express involv x final let c x set inequ c 2 c c equival inequ form e x e linear express involv x project algorithm figur 1 elimin variabl x constraint c return constraint 9xc use either gaussian elimin fourier elimin solv constraint project variabl turn use project variabl remain result constraint c 0 equival 9 c none primit constraint c 0 involv variabl henc straightforwardli determin whether c 0 satis answer satis question exist c 2 x c everi occurr x replac e els c 2 c c 2 c x c e x end end return figur 1 combin fouriergaussian project x l0 100 figur 2 simpl constrain pictur c use intermedi constraint c produc 1 applic project well variabl x order elimin build solut c 1 n case varsc g cn contain variabl xn henc contain constraint form satis nd valuat xn solut cn extend solut c i1 solut c follow consid constraint c involv x one equat equival x e e express involv variabl let contain inequ contain x written form x e j e k x e j e k express involv variabl fx g use valuat determin minimum u e j maximum l e k valu l u give valid solut c new solut thu g figur 3 constraint project exampl give exampl constraint solv use project use illustr figur 2 constraint follow xm constrain midpoint line x l x r x l constrain least 10 left x r variabl must lie rang 0 100 repres use constraint c 1 shown figur 3 solv constraint use variabl elimin start c 1 select variabl project continu variabl remain suppos rst select x l project use equat yield constraint c 2 project x r yield constraint c 3 elimin simpl redund final elimin xm obtain c 4 clearli satis show construct solut constraint inspect know pick valu 5 95 xm say 50 next examin constraint c 2 involv x r fxm 100g given 100g thu pick valu x r rang 55100 say 70 final examin constraint c 1 equat involv x l name x use equat directli set x l 30 use inform compil sequenc statement construct solut constraint return tripl illustr figur 4 stand sequenc statement isnt interest sinc solv one problem howev section 4 show use similar techniqu compil code parameter appropri input 3 constraint hierarchi discuss earlier interact graphic applic import abl express prefer well requir constraint system particular desir minim chang gure manipul use constraint hierarchi 5 specifi desir solut collect requir preferenti constraint independ particular algorithm involv x l x u choos xm 2 x l x l x u r min f 2xm 100 choos x r 2 x l r x u r return figur 4 code solv constraint figur 2 obtain fourier elimin label primit constraint primit constraint label strength written sc strength c primit constraint strength nonneg integ clariti give symbol name dierent strength primit constraint strength 0 symbol name requir alway reserv requir constraint purpos paper shall use follow symbol name strength strong 1 gener approach work number strength level note higher integ strength indic weaker constraint constraint hierarchi multiset label primit constraint given constraint denot multiset requir primit constraint h label remov way dene multiset h strength sinc deal nonrequir constraint valuat interest may satisfi constraint henc need abl measur degre constraint satis assum primit constraint c error function ec return nonneg real number indic nearli primit constraint c satis valuat work describ domain real error function return valu vari depend nearli constraint satis exampl error error x max0 x set solut hierarchi dene follow 0 set valuat h 0 constraint hold form elimin potenti valuat wors potenti valuat use compar predic better assum use local compar better compar two solut primit constraint primit constraint section 6 look extend approach certain kind global compar valuat locallybett anoth valuat primit b c figur 5 demonstr theorem quadrilater constraint strength level k 1 error appli equal appli level k error strictli less least one primit constraint less equal rest locallybett locallybett compar error function known locallyerror better tradit demonstr constraintbas graphic quadrilater theorem illustr figur 5 screen snapshot taken smalltalk implement use code produc project algorithm side quadrilater bisect line drawn midpoint inner line alway form parallelogram express constraint midpoint lie halfway endpoint line addit point constrain least 10 pixel side window north vertex constrain least 30 pixel south vertex east vertex constrain least 30 pixel right west vertex latter two quadrilater collaps point taken togeth constraint dicult ui constraint solver sinc involv cyclic equal inequ constraint figur 5a pick one midpoint mous begun move temporarili ad edit constraint equat posit midpoint mous constraint strongli prefer requiredw violat necessari corner point weakli constrain stay stay constraint constraint heirarchi repres quadilater problem shown figur 6 n x coordin north east south west vertic respect coordin midpoint ne x ne se x se sw x sw nw x nw mous x mous current coordin mous oldn x oldn requir 2ne requir 2ne requir 2se requir 2se requir 2sw requir 2sw requir 2nw requir 2nw requir n requir e x w x requir requir strong se strong se figur 6 constraint heirarchi repres quadrilater problem etc give old coordin point want stay strong edit constraint ensur south east midpoint tri follow mous weak stay constraint tri maintain corner point old posit figur 5b mous move right keep midpoint constraint satis east vertex move well continu move right figur 5c east vertex run imaginari wall result constraint least 10 pixel window boundari move result order maintain midpoint constraint south vertex move instead final figur 5d mous move beyond permit region midpoint midpoint move close mous possibl thu caus two endpoint line press boundari well formal stay edit constraint exampl simpli constraint form constant b howev come compil code repeatedli solv collect constraint import handl constraint ecient sinc valu b chang solut stay constraint valu v previou step edit constraint come extern input constraint remain unalt step 4 compil project hierarchi describ complet algorithm compil code repeatedli nd locallyerrorbett solut constraint hierarchi given seri input valu assum constraint hierarchi hierarch normal form form kind preferenti constraint one form variabl v constant b constraint requir ie must satisfi solut practic origin problem usual alreadi form easi transform arbitrari linear constraint hierarchi form ad error variabl exampl strong b e linear express becom required b e new error variabl recal hierarch constraint h separ part h contain primit constraint strength h hierarch normal form 1 h contain equat form variabl b constant use inform build strength partit variabl let v dene follow contain variabl whose strongest nonrequir primit constraint strength simplic assum everi variabl involv nonrequir constraint normal case constraintbas graphic applic add weak stay constraintweak exist constraintsto variabl otherwis involv nonrequir constraint locallyerrorbett solut new hierarch constraint also locallyerrorbett solut origin constraint consid solv constraint figur 2 augment preferenti constraint strongx h g strength partit variabl give g use project algorithm build code solv hierarch normal form constraint problem dier other valu constant b nonrequir primit constraint problem correspond solut constraint heirarchi requir determin posit object screen refresh manipul diagram appli project algorithm elimin variabl set v j elimin variabl v j total order x 1 x 2 xn variabl x hierarch normal form constraint h respect hierarchi return exampl solv constraint figur 2 augment l order respect heirarchi xm x r x l full algorithm gener code take order variabl requir constraint c solv constraint c conjunct h 1 h 2 h k variabl x l select constraint arbitrarili choos one highest strength nonrequir constraint x determin valu b make choic correct locallyerrorbett compar minimis error one strongest nonrequir constraint alway give locallyerrorbett end n 1 exist c 2 c c x els minset maxset primit constraint c 2 c x c e x minset els c x e maxset end emit els b x l end emit return figur 7 code gener algorithm lution choos dierent constraint strength would comput dierent still valid locallyerrorbett solut code produc algorithm figur 7 either set x b legitim choic given solut determin far set x lower upper bound whichev closest valu b theorem 1 correct code gener let c constraint variabl g given variabl order x 1 x 2 xn variabl constraint c solut return code produc code locallyerrorbett solut constrain weaker strength proof valu variabl chosen avail rang valu variabl determin fouriergaussian elimin thu correct fouriergaussian elimin algorithm alway produc solut satisfi requir constraint c remain show solut produc also locallyerrorbett assum contrari locallyerrorbett solut constraint exist anoth solut 0 n locallyerror better largest index 0 examin select valu variabl x j correct fouriergaussian elimin 9 fx j x ng c ng c given variabl x take valu respect clearli solut x j c j rang x l henc error equat greater solut 0 mean n locallyerrorbett sinc greater error equat x error everi nonrequir equat higher strength otherwis b j x l j 0 j must rang x l error constraint x greater 0 impli 0 n locallyerrorbett remain case b j x u j similar continu run exampl compil constraint figur 2 augment strongx l result code shown figur 8 note high similar code figur 4 suppos midpoint line select mous move posit 60 remain point constrain stay x 70 impos constraint strongx code figur 8 gener answer 60 70 50 mous move posit 70 edit stay constraint translat code gener answer 70 75 65 mous move posit 0 code gener answer 5 10 0 5 redund manag one problem fourier elimin larg number constraint produc potenti exponenti number mani redund constraint compil base fourier elimin succeed crucial x l x u els xm x l els xm x u x l x u r min f 2xm 100 r x u r els b r x l r x r x l els x r x u return figur 8 code midpoint exampl constraint issu redund constraint address detect elimin redund practic number type redund cheap detect still eectiv keep number redund constraint one quasisyntact redund primit constraint quasisyntact redund respect c 2 1 x case c 1 drop without aect result test inexpens log n test n primit constraint yet allow us get rid signic number redund constraint main class redund detect elimin target output constraint project process best known constant bound maintain variabl variabl say x elimin constraint yield upper lower bound x examin constraint shown redund respect anoth use bound inform accumul earlier discard redund elimin point drastic reduc size crossproduct form elimin x also directli reduc number compil constraint bound inform use evalu minimum maximum valu express take subject known bound best use made examin express say upper bound x pairwis fashion evalu dierenc express minimum possibl valu dierenc nonneg rst express guarante smaller second maximum valu nonposit guarante larger case one constraint may discard redund otherwis redund inform deduc evalu dierenc constraint fashion rather constraint individu one abl obtain much redund inform exampl suppos bound x x 2y x 10 know 5 5 rst bound deduc lie 10 10 second 5 15 sinc 5 10 guarante rst constraint alway tighter second howev look dierenc 10 work lie 15 5 thu guarante rst constraint alway tighter second discard latter redund second main approach manag redund tri minimis number redund constraint gener rst place done clever order variabl elimin algorithm stand leav us reason freedom choic variabl elimin choos variabl strength order like simpl heurist variabl elimin next make substanti dierenc number constraint gener obviou use heurist choos variabl appear equat gaussian elimin use rather fourier variabl choos x minimis x jjc x j work well minimis next step sum number output constraint number constraint remain prior redund elimin actual heurist use count number linear term constraint rather number constraint sinc discourag format constraint mani term particularli problemat fourier elimin base reason approach select variabl elimin next result theorem 4 see section 8 often allow us process rel small group variabl constraint given time limit scope produc redund constraint practic approach seem work well 6 renement section discuss renement solver would appear increas class problem solv implement simpli alter input main algorithm requir requir requir x l 0 requir xm 0 requir xr 0 requir x l 100 requir xm 100 requir xr 100 strong x figur 9 midpoint exampleloc compar version 61 optimis function rather return solut satisfi input constraint possibl optimis linear object function done introduc new variabl repres valu object function plu requir constraint relat variabl depend constraint appropri strength tri set valu object function suitabl larg small minimis valu 4 note one actual mani object function mani dierent strength one want instanc one could optimis particular function subject requir constraint optimis anoth subject rst remain optim add nonrequir constraint valu variabl appli nal optimis assign appropri strength note normal object function would share strength anyth els exampl two object function assign strength solver would free choic optimis rst allow choic would usual make sens unless object function independ 62 global compar section 3 4 assum work local compar howev possibl achiev eect equival use linear global compar way done similar introduct object except time function term error variabl may requir introduct extra error variabl need well requir nonneg constraint error variabl requir requir requir x l 0 requir xm 0 requir xr 0 requir x l 100 requir xm 100 requir xr 100 strong x requir x l l requir xm requir xr r requir e l 0 requir e l 0 requir e requir e 0 requir e requir e r 0 requir e l figur 10 midpoint exampleglob compar version consid simpl midpoint exampl ad weak stay constraint x l xm x r plu strong constraint x l constraint shown figur 9 suppos wish minimis sum error constraint medium strength error weak constraint x jx r rj encod error directli use linear constraint due modulu instead introduc pair new variabl repres error one dierenc neg one posit variabl constrain nonneg sum use repres error 5 thu x r r e r 0 e r 0 take consider weak constraint global error l g minimis also add medium strength nal result shown figur 10 note kept stay constraint ensur variabl set particular valu seen surprisingli use global compar come cost term size number constraint compil 7 comput result projectionbas compil algorithm implement test prototyp implement mercuri 14 includ modul easili adapt gener code dierent target languag current implement produc smalltalk code store le smalltalk environ code load incorpor graphic applic execut advantag use smalltalk smalltalk includ extens graphic librari make easi test interact graphic program also smalltalk implement cassowari simplexbas solver allow headtohead comparison run time two algorithm investig perform algorithm sever mediums exampl constraint interact graphic boxcar benchmark number box horizont row box constrain right previou one constrain stay within speci horizont rang binari tree benchmark complet binari tree given height pair children constrain height must least minimum distanc parent must separ minimum distanc parent node must centr children nalli everi node must lie within certain bound box formul redundancyw could speci left child minimum distanc parent rather left right children sinc children height howev redund aris natur specic grid benchmark n n grid point everi point constrain imaginari vertic line point horizont line point left right point within given distanc neighbour point lie within given box specic lead redund constraint compil result shown tabl 1 benchmark give follow inform number variabl origin formul number primit constraint origin formul typic number primit constraint compil code number inequ use minset maxset calcul plu equat use emit calcul code typic choic edit variabl typic cpu time requir mercuri program produc smalltalk code compil done dec alphaserv 8400 eight 300 mhz 21164 processor compil version suer exponenti blowup number primit constraint inde contain fewer constraint input reduct due redund elimin perform project code produc extrem ecient also predict perform irrespect input valu tabl 2 give measur execut speed compil code compar execut speed cassowari constraint solver 7 use ecient simplexbas algorithm specic adapt repeatedli solv constraint aris interact graphic applica tion time done use oti smalltalk version 40 run ibm thinkpad 760el laptop comput tabl 1 compil statist problem size variabl primit compil time constraint constraint sec boxcar 50 50 149 100 07 100 100 299 200 14 200 200 599 400 45 binari tree 5 62 199 111 05 9 1022 3319 1910 462 tabl 2 runtim statist problem time millisecond avg pivot fourier cassowari graphic cassowari 50 boxcar 10 50 380 011 infrequ collis 50 boxcar 10 160 380 051 frequent collis depth 5 tree 53 686 460 155 frequent collis depth 5 tree 53 1245 460 377 v frequent collis time shown averag number millisecond perform one updat ie solv constraint problem new valu mous posit fourier cassowari time without graphic refresh addit refresh time shown graphic column final cassowari last column give averag number simplex pivot per updat two dierent run given boxcar exampl one input vari slowli collis boxcar rel infrequ anoth rapidli vari input caus collis time run fourier code case howev frequent collis cassowari time per updat increas substanti reason collis gener requir pivot simplex tableau expens collis tableau updat ecient pivot requir also two run tree exampl use tree node display close space mani collis move node bump stationari one case second run involv move mous quickli gener even collis exampl fourier code approxim 5 20 time faster runtim simplex solver rel simpl constraint boxcar exampl graphic refresh time substanti time requir satisfi constraint test howev use simplex solver tree exampl constraint solv time becom signic compar graphic refresh time addit simplex solver variabl solv time quit appar mous move quickli exampl often updat extrem fast numer pivot need slow give less pleasant jerki qualiti interact fair simplex approach possibl extrapol current direct mous movement presolv pivot done current system addit use realtim system predict respons provid compil fourier code essenti 8 complex analysi variabl elimin algorithm bad worst case complex project one variabl system linear inequ produc om 2 inequ worst case henc elimin n variabl primit constraint om 2 n howev empir result far shown quit reason perform practic problem section attempt analys situat point reason one major factor reason perform algorithm mani practic problem primit constraint involv small number vari abl henc worst case aris also number restrict case much reason worst case complex one restrict case constraint involv 2 variabl grid benchmark fall categori follow result due nelson 12 theorem 2 let c set inequ involv n variabl inequ involv 2 variabl fourier elimin omn d2 log ne3 log n anoth exampl worst case phenomena occur almost constraint equat theorem 3 let c constraint involv n variabl linearli independ equat l inequ choic variabl elimin order fourier elimin onmm proof use equat elimin variabl leav l inequ n variabl result follow also appear mani practic constraint problem interact graph ic constraint tightli connect examin class constraint graph tightli connect constraint graph constraint c undirect graph construct follow node variabl primit constraint c 2 c edg variabl node v primit constraint node c v 2 varsc two node x graph g biconnect exist two nodedistinct path g x biconnect compon graph g maxim set node n biconnect g constraint graph g kbiconnect biconnect compon g k variabl node binari tree benchmark exampl constraint graph 3biconnect theorem 4 let c constraint involv n variabl primit constraint whose constraint graph kbiconnect choic variabl elimin order slightli modi fourier elimin algorithm quasisyntact redund elimin onm 2 k proof start form biconnect compon graph cluster cluster form tree forest origin graph fulli connect proceed elimin cluster one time start leav leaf cluster connect rest tree via singl node node repres variabl say x task easi simpli project constraint cluster onto x possibl result constraint x bound use quasi syntact redund two l x x u bound ad parent cluster hand connect node repres constraint introduc temporari variabl split constraint rst let constraint form op either e 1 linear express contain variabl includ cluster e 2 linear express contain variabl cluster constraint split e 1 former ad current leaf cluster latter replac origin constraint variabl ad parent cluster project constraint current leaf cluster onto add result bound parent cluster note introduct temporari variabl increas number variabl node cluster temporari variabl appear exactli one equat two bound constraint though note one temporari variabl may appear equat origin constraint cut node sever biconnect compon met elimin temporari variabl rst easi see equat involv temporari variabl yield two inequ involv remain variabl elimin ol l temporari variabl involv leav cluster k variabl standard fourier elimin appli elimin variabl leaf cluster never add constraint parent cluster elimin leaf henc maximum number constraint cluster given time maximum number variabl elimin cluster standard algorithm appli k henc process one cluster standard algorithm om 2 k n cluster tree thu n temporari variabl introduc henc complex result hold theorem 4 particular constrain order variabl elimi nate interact graphic problem typic two variabl edit constraint x coordin point move variabl must elimin last compat order requir theorem x constraint independ case exampl mani case well howev problem includ constraint relat x coordin eg shape squar may unabl use complex guarante provid theorem 9 conclus fourier elimin use gener fast constraintfre code solv problem aris interact graphic applic approach use applic realtim system need predict perform smooth respons time interact system produc applic run without employ runtim constraint solver execut speed import approach compil constraint solv project appli constraint domain variabl elimin function project one variabl constraint along method nding solut conjunct constraint one variabl constraint domain meet requir includ boolean constraint unit two variabl per inequ integ constraint 11 partial order constraint current algorithm batch one direct futur research design increment version would reus part previou solut accommod chang constraint beyond simpli chang constant previou work involv hybrid constraint solv algorithm partit set constraint region turn appropri subsolv class constraint constraint topolog 3 compil base fourier elimin promis candid use architectur handl cyclic collect linear equal inequ constraint theorem 4 particularli interest show structur constraint solv exploit make actual solv ecient sabin freuder 13 also studi structur constraint graph exploit case demonstr substanti improv solv time random binari csp identifi approxim cycl cutset constraint graph seem interest area explor acknowledg project fund part nation scienc foundat grant iis9975990 australian research council larg grant a10017012 alan born visit univers melbourn sponsor part fulbright award note 1 current address whicparcicacuk icparc william penney laboratori imperi colleg exhibit road london sw7 2az unit kingdom 2 note user interfac object map particular pixel locat display thu coordin theori integr practic usual necessari desir applic round real coordin nearest integ point quit appropri locat screen treat real make constraint solv easier work assum coordin real note nonlinear constraint aris user interfac applic attribut area angl nite domain constraint also aris handl font case sophist techniqu requir eg 9 3 earlier version paper appear 10 4 maxfloat similar sucient applic would trivial chang solver implement featur directli 5 strictli sum accur represent error least one variabl zero guarante minimis global error r program languag aspect thinglab indigo local propag algorithm inequ constraint oti constraint solver constraint librari construct interact graphic user interfac ultraviolet constraint satisfact algorithm interact graphic constraint hierarchi constraint web solv linear arithmet constraint user interfac applic object technolog intern compil constraint solv use project n log n algorithm twovariableperconstraint linear program sati abil problem understand improv mac algorithm execut algorithm mer curi ecient pure declar logic program languag tr ctr jakob mauss frank seelisch mugur ttar constraint solver modelbas engin ai commun v17 n2 p7592 april 2004