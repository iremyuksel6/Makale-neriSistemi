adapt pattern match pattern match import oper use mani applic function program rewrit rulebas expert system preprocess pattern dfalik automaton rapidli select match pattern singl scan relev portion input term automaton typic base lefttoright travers pattern adapt travers order suit set input pattern possibl consider reduc space match time requir automaton design adapt automata focu paper first formal notion adapt travers present sever strategi synthes adapt travers order aim reduc space match time complex worst case howev space requir exponenti size pattern show establish exponenti lower bound space independ travers order use discuss orthogon approach space minim base direct construct optim dag automata final work bring forth impact type pattern match particular show sever import problem eg lazi pattern match ml comput hard presenc type disciplin wherea solv effici untyp set b introduct pattern match fundament oper number import applic function equat program term rewrit theorem prove applica tion pattern partial order assign prioriti instanc languag ml 5 haskel 6 pattern occur earlier text higher prioriti follow applic impos prioriti also handl special case match prioriti typic approach pattern match preprocess pattern dfalik automaton rapidli select pattern match input term 1 main advantag match automaton pattern match identifi singl scan ie backtrack portion input term relev match purpos done time independ number pattern fig 1 show match automaton construct basi lefttoright travers pattern automaton repres tabl compil case statement state automaton correspond prefix input term seen reach state annot set pattern possibl match instanc state 4 correspond inspect prefix fb x x denot subterm yet examin state annot pattern set f1 2 3g sinc rule match three pattern basi prefix fb x research partial support nsf grant ccr880573491021599110055 ny st grant rdg 90173 research complet suni stoni brook match root input term identifi nonlinear consid sinc even applic allow pattern failur associ symbol mismatch observ 3 gammapsi r gammapsi gammapsi r f2g f1g f3g f1g f gammapsi r r gammapsi f3g figur 1 lefttoright left adapt automata right fx b fb fx textual order prioriti x denot variabl pattern match automata extens studi well decad augustsson 1 wadler 14 describ pattern match techniqu base lefttoright travers drawback method may reexamin symbol potenti sever time worst case may end test pattern separ input term drawback overcom method christian graf schnoebelen base lefttoright travers variant thereof howev space requir becom exponenti size pattern one way improv space match time engin travers order suit set pattern applic domain refer travers adapt travers automata base travers adapt automata travers order longer fix apriori adapt automaton must specifi travers order instanc adapt automaton shown fig 1 state label next argument posit inspect state adapt travers two main advantag fixedord travers leftto right ffl result automaton smaller eg adapt automaton fig 1 8 state compar 11 lefttoright automaton reduct factor even becom exponenti ffl pattern match requir lesser time adapt travers fixedord travers furthermor fixedord travers use prioriti inform avoid inspect symbol irrelev determin highest prioriti match instanc adapt automaton announc match pattern 1 examin last two argument f wherea lefttoright automaton need inspect three argument observ examin unnecessari run counter goal lazi evalu context function program design adapt automata focu paper process studi sever import problem remain open even context automata base fixedord travers problem includ lower upper bound space complex construct optim dag automata impact type pattern match 11 summari result first formal concept adapt travers special case name fix travers order present algorithm construct adapt automata ffl section 3 examin space match time complex show space requir automata quit larg establish first known tight exponenti lower bound size result quit difficult obtain sinc proof must independ travers order ffl section 4 present sever techniqu synthes travers order improv space match time first develop import concept repres set form basi sever optim techniqu aim avoid inspect unnecessari symbol present quadratictim algorithm comput repres set untyp system wherea show comput set np complet type system ffl present sever power strategi synthes travers order intric exampl show sometim increas space match time therefor present anoth strategi base select indic overcom drawback huet levi 7 establish import index design optim automata stronglysequenti pattern result extend applic indic even pattern stronglysequenti ffl section 4 synthes travers st given travers lefttoright inspect index posit whenev possibl use st place affect termin properti function program programm continu assum wherea implement benefit signific improv space time use ffl section 5 describ orthogon approach space minim base dag represen tation tightli character equival state directli build optim dag automaton import problem remain open 4 even lefttoright travers ffl section 6 focu import problem index comput priorit system lavil 9 puel suarez 11 extend huetlevi 7 index comput algorithm deal prioriti howev algorithm requir exponenti time worst case contrast present first polynomialtim algorithm index comput untyp system furthermor also show problem conp complet type system therefor present power heurist significantli speed process type system ffl work clearli bring forth impact type pattern match shown sever import problem context pattern match unlik effici algorithm type system wherea given polynomi time algorithm untyp system clearli demonstr type make algorithm inher complex rather serv optim aid prune search space index comput suggest 9 final implic result discuss section 7 proof detail omit main paper found appendix preliminari section introduc notat use rest paper also present gener algorithm adapt automata construct form basi result present later section assum familiar basic concept term use roott denot symbol appear root term notion posit use refer subterm term follow posit either empti string reach root pi p posit integ reach ith argument root subterm reach p use tp refer subterm reach p tp denot term obtain replac subterm tp substitut map variabl term instanc tfi term obtain substitut fix everi variabl x instanc u say u call u prefix fring u set variabl posit u use x z denot variabl denot unnam variabl b c f denot nonvari say two term unifi iff possess common instanc denot least instanc order given topdown travers inspect node term success character select function inspect prefix u choos next posit visit match set l u prefix u set pattern unifi u let p denot set fring posit u wherein least one pattern l u nonvari adapt fix travers adapt travers topdown travers wherein posit next visit function prefix u given set pattern l fix travers order p simpli function p pattern say pattern l 2 l match iff l 6 l 0 l 0 prioriti higher l l l say pattern match among pattern equal prioriti may announc match term instanc one pattern ambigu unambigu system set pattern l said ambigu whenev one pattern match given term otherwis l unambigu type system type system set allow input term constrain type disciplin instanc constraint may take form argument function f must drawn set ft fg case term ft allow untyp system untyp system type disciplin henc allow input term includ term alphabet sigma 0 superset alphabet sigma use pattern pattern match tp nonvari intuit index posit must examin determin pattern match eg fring posit u everi pattern l u nonvari index 21 gener algorithm build adapt automata state v automaton rememb prefix u inspect reach v start state suppos p next posit inspect v v transit symbol c present p l 2 l u also transit v 6 taken see symbol differ edg gener algorithm construct adapt automaton given observ prioriti implicitli handl definit match procedur buildv u 1 let denot pattern match u 2 6 oe matchsetv state v announc match pattern 3 els 4 select function choos next posit inspect 5 posit inspect record po field 6 symbol 9l 2 l u nonvari c 7 creat new node v c edg v v c label c 8 9 9l 2 l u variabl p ancestor p 10 creat new node v 6 edg v v 6 label 6 11 buildv build similar previous known algorithm christian 3 huetlevi 7 main differ build gener wherea other prespecifi select function build invok call build start state automaton take two paramet v specifi state automaton u specifi prefix examin reach jm r j omega omega ae gammapsi phi 12c c 24 22 cb 124 23 21 l 3 l 1 e e e l 4 l 3 l 2 l 1 figur 2 adapt automaton construct build pattern shown topright prioriti bottomright po field l u shown state state label denot ident subtre state v invoc build construct subautomaton root v line 6 7 8 creat transit base symbol could appear p pattern l u line 8 build recurs invok prefix extend includ symbol seen transit creat line 7 pattern l u variabl p transit 6 creat line 10 build recurs invok line 11 fig 2 show set pattern along prioriti correspond automaton construct build automaton 25 state sinc state label ident subtre 4 state observ posit interest recal sum size pattern posit integ sequenc encod integ omit detail encod found implement equal 10 use encod symbol specifi posit access without extra overhead compar fixedtravers order final observ automata gener build tree structur also represent use previou pattern match method popular tree stem simplic fact readili support case statement represent 3 space match time complex examin upper lower bound independ travers order space match time complex adapt tree automata sever class pattern fig 3 summar result observ contribut depth automata whose upper bound space insignific compar exponenti lower bound major contribut come breadth automata furthermor even pattern without variabl ie ground term hard reduc number state 2 wherea reduc breadth therefor rest paper use breadth measur size automaton present detail lower bound proof proof upper bound establish along line 4 12 space bound given section independ 2 size pattern number nonvari symbol class pattern lower bound upper bound lower bound upper bound space space time time unambigu prioriti unambigu prioriti omegagamma n ambigu figur 3 space match time complex adapt automata n jl j denot respect number pattern sum size 2 averag size size ith pattern6 6 6 4 b b b figur 4 exampl matrix b b b b figur 5 matric repres l u state reach transit b travers order establish use flat pattern root symbol f arbitrarili larg ariti shown purpos buid either smallest size automaton one match shortest possibl time flat pattern equival set pattern common prefix u whose fring size equal ariti f everi symbol common prefix inspect path final state follow theorem 4 section 43 automaton inspect symbol first larger automaton 31 unambigu unpriorit pattern consid set n nonoverlap pattern alphabet ff bg variabl sinc flat pattern root symbol f need specifi argument therefor n pattern repres matrix n row ith row list argument f ith pattern column one occurr one occurr b rest pair pattern l l 0 least one column wherein l l 0 differ nonvari system unambigu fig 4 show matrix repres four pattern fa size smallest automaton n pattern pick posit ie column discrimin column contain one nonvari posit transit ie transit b left l u without reduct problem size instanc fig 4 choos column 7 inspect left problem build automaton match basi first six posit pattern word left matrix obtain fig 4 delet last column henc problem still instanc s4 hand column contain two nonvari base symbol seen column partit n pattern two set consist pattern set must discrimin henc two instanc sn gamma 1 eg exampl inspect posit 2 result pattern set f1 2 4g f2 3 4g shown fig 5 henc whose solut 32 unambigu priorit pattern deriv lower bound size automaton unambigu priorit set pattern consid follow set flat pattern textual order prioriti use set pattern construct obtain lower bound space omegagamma n follow denot sn size automaton pattern form shown smallest size automaton obtain first inspect cs first column second column shown posit examin automaton thu obtain index follow lemma 4 see section 43 automaton larger automaton consid first state automaton state 6 branch lead subautomaton match pattern therefor whose solut n note averag size pattern lower bound n 33 ambigu pattern consid set pattern use section 32 assum prioriti among pattern observ automata set pattern must report match sinc prioriti relationship among pattern use automaton priorit system consid previou section reach final state v simpli announc match pattern highest prioriti among matchsetv henc automaton smaller pattern prioriti thu arriv lower bound omegagamma n ambigu unpriorit pattern lower bound hold even prioriti allow sinc automata unpriorit pattern use match priorit pattern manner mention 34 match time one possibl measur match time averag roottoleaf path length automaton measur exhibit follow anomali suppos automaton properti path automaton 0 correspond path shorter length clearli better match time may reflect averag roottoleaf path length reason may sever path 0 correspond singl path suppos one path p length 2 anoth path q length 7 also assum two path 0 correspond p length 3 one correspond q length 7 note although path shorter equal length correspond path 0 averag path length 45 wherea averag path length 0 43 good measur suffer anomali averag mean match time pattern mean match time pattern l averag path length path lead match state l quantiti 45 wherea 5 0 base measur upper lower bound match time given fig 3 bound establish construct use obtain space bound synthes travers order observ build specifi select function present sever techniqu use combin deriv select function improv space match time 41 repres set suppos v state reach see prefix u observ may pattern l u match announc descend v instanc consid pattern fig 2 prefix although l observ match l 4 declar 3rd argument f b case declar match higher prioriti pattern l 1 inspect posit behalf pattern l 4 wast eg inspect posit 1 u useless sinc irrelev declar match l 1 avoid inspect posit identifi repres set l u minim set consist pattern match announc descend v exampl g repres set form core sever optim discuss later lavil notion access pattern 9 repres set contribut definit yield simpl algorithm comput set definit access pattern yield algorithm 9 use notion compat pattern correspond match set l u place access pattern observ also use l u place l u follow optim may make optim less effect instanc algorithm directli build optim dag automata see section 5 fail identifi equival state l u use place l u comput l u note pattern l follow properti need present match l identifi term descend v also identifi match anoth pattern equal higher prioriti term precis definit properti arriv l u repeatedli delet pattern l howev definit immedi lend decis procedur sinc refer infinit number instanc u although set term consid restrict finit set still lead effici procedur sinc theorem 1 comput l u np complet type system proof therem use reduct similar use proof theorem 9 see section 62 omit proof detail untyp system effici method develop consid l u instanc specif theorem 2 l u comput on time untyp system delet l proof first need show two character l delet equival easi see l satisfi second character also satisfi first one show l satisfi first character also satisfi second let l 1 l k pattern instanc v l u henc l u also instanc one l 1 l k consid term obtain l u instanti variabl 6 term instanc l unless l l u observ l serv role l 0 second character thu two character equival easili seen comput l u use simpler character done on time note definit l l 0 equal prioriti l one retain l u discard choic affect structur automaton current state determin whether match announc l l 0 final state except choic among pattern second definit specifi l u uniqu final note unambigu system l 42 greedi strategi resort greedi strategi implement function select sinc dynam program approach take exponenti time subautomata exponenti size begin list sever strategi choos p 1 number distinct nonvari p pattern l u minim 2 number distinct nonvari p pattern l u maxim 3 number pattern nonvari p maxim 4 let l 1 l r match set children v maxjl 1 j jl r j minim 5 sigma r improv space rational strategi follow strategi 1 local minim breadth strategi 2 attempt distinguish quickli among pattern contain potenti exponenti blowup sinc pattern variabl p duplic among children v strategi 3 minim number strategi 5 carri one step minim number duplic strategi 4 attempt minim size largest subautomaton root child v sinc determin size automaton case blowup improv time strategi 3 also 5 minim number pattern inspect symbol p unnecessari strategi 2 4 observ worst case time spent match v proport sum size pattern l u quickli discrimin among pattern quantiti rapidli reduc greedi strategi suffer drawback theorem 3 greedi strategi exist pattern set automata smaller size match time obtain make choic differ given greedi strategi proof strategi 234 5 consid follow set pattern equal prioriti inspect root strategi choos one posit 23 4 shown enumer possibl match automata pattern smallest breadth number state match time obtain choic 20 47 425 respect figur reduc 15 45 4 respect choos posit 1 construct exampl quit intric key idea make pattern set f1 4 5 6g f2 4 5 6g f3 4 5 6g stronglysequenti 3 wherea set contain two first three pattern one last three 3 stronglysequenti system prefix u must index 43 select indic propos import strategi suffer drawback strategi key idea select p index u show strategi yield automaton smaller size smaller match time obtain choic import index known context stronglysequenti system result demonstr applic pattern stronglysequenti specif given subautomata root v select posit p construct anoth subautomata 0 select index q show size match time 0 greater construct proce seri step interchang order posit q anoth posit seen immedi preced follow theorem state without proof make construct precis theorem 4 p q v suppos posw q everi child w v order inspect p q interchang without increas size match time automaton repeat interchang obtain 0 quit interest note repetit interchang step permit restrict condit suffici global rearrang travers order get 0 although theorem assert size match time 0 larger fig 6 show strictli smaller 0 remark interchang step size sometim reduc bya much exponenti factor time use arbitrari travers order determin compil time appropri function program sinc termin properti program depend travers order therefor programm must made awar travers order apriori given constraint show possibl intern chang travers order way affect termin properti time realiz advantag adapt travers 4 given prefix u suppos travers order select p next posit visit said monoton iff prefix u variabl travers select p unless u 0 p correspond variabl posit 8l 2 l u 0 travers possess monoton properti includ known travers order depthfirst breadthfirst well variat without lefttoright bia particular includ fixedtravers order mention earlier lefttoright righttoleft also includ travers use implement stronglysequenti system given monoton travers obtain anoth travers st inspect indic whenev possibl without affect termin properti specif let st denot travers use follow strategi pick posit inspect prefix u ffl u indic arbitrarili select one ffl otherwis select posit fring u first visit theorem 6 size match time never becom wors st use place path automaton use st examin subset posit examin correspond path minim space use dag previou section discuss synthes travers order order improv space time discuss orthogon approach minim space base share equival state 4 remark transform applic function languag sideeffect omega omega omega oe r f figur exampl illustr size match time reduct due transform figur show automata f b fa f textual order prioriti obviou way achiev share use standard fsa minim techniqu optim tree automaton construct build effici method identifi equival two state without even gener subautomata root state observ tree automaton may exponenti larger dag automaton case naiv approach use exponenti time space wherea direct construct potenti use polynomi space polynomi time import problem directli build optim automata even restrict lefttoright travers remain open 4 propos solut problem identifi equival state suppos two prefix u 1 u 2 repres set l u differ posit p everi pattern l u variabl p sinc posit irrelev determin match two prefix equival hand also shown differ repres set differ posit equival base observ defin relev prefix u term obtain replac subterm posit p symbol 6 instanc prefix correspond differ state mark fig 2 differ relev prefix fx 6 b show two state equival iff correspond relev prefix ident theorem 7 automaton obtain merg state ident relev prefix optim merg equival state describ substanti reduc space requir automata eg tree automaton fig 2 25 state reduc 16 share also recal pattern fig 4 part automaton reach posit transit alon exponenti show share state part automaton becom polynomi 51 impact dag space match time complex sinc share affect space requir alon result establish far relat space theorem 6 time continu hold dag well follow discuss impact dag result establish earlier regard space show upper bound size dag automata o2 n much smaller correspond bound automata also establish lower bound o2 n ambigu pattern unambigu pattern clear whether lower bound size exponenti instanc appear pattern use lower bound proof size tree automata unambigu pattern possess polynomials dag automaton reason lower bound becom extrem complic dag sinc difficult captur behavior share formal final greedi strategi well strategi select indic case increas space dag automata failur index select strategi demonstr complex share recal index prefix u posit fring must inspect announc match pattern l u absenc prioriti posit must inspect announc match pattern l exactli fring posit wherein l nonvari prioriti howev may inspect posit wherein l variabl order rule match higher prioriti pattern obviou variabl posit l must inspect clear comput indic priorit system therefor lavil 8 propos indirect method index comput first transform priorit pattern equival set unpriorit pattern use index comput pattern l transform gener set l instanc instanc higher prioriti pattern type system instanc observ type disciplin gener transform system l2l l puel suarez 11 develop compact represent set l base notion constrain term term constraint place substitut taken variabl instanc constrain term feqx yjx 6 6 bg denot set term precis semant constrain term given first regard term variabl denot set instanc constrain term ftjg denot set instanc also satisfi constraint formula defin constraint formula first defin atom constraint form 6 form x 6 x variabl variabl unnam 5 former case term satisfi constraint must belong set gamma latter case substitut taken x must instanc arbitrari constraint obtain combin atom constraint use constraint satisfi term satisfi either similarli constraint satisfi term satisfi well final note type system alway implicit constraint impos type disciplin requir variabl substitut term type variabl henceforth may use sever method simplifi constrain term method quit intuit correct readili follow semant use constrain term set l repres compactli fljl pattern prioriti greater l constraint l 6 l simplifi constraint variabl l simplifi constraint l 6 l 0 first check two pattern unifi constraint simplifi true otherwis let x variabl l substitut nonvari term say unifi l l 0 simplifi constraint use procedur simplif constraint pattern l done os time illustr consid follow exampl defin equal enumer data type 5 prevent constraint x 6 ay 6 b complic develop materi rest section note two among first n pattern unifi condit vacuous henc first n pattern appear unchang transform system last rule howev unifi everi rule get translat condit ith disjunct prevent instanc ith pattern recogn instanc last rule seen constraint cnf clear indic obtain puel suarez simplifi dnf make structur term set denot constrain term appar instanc constrain term simplifi note type system constraint x 6 1 x 6 2 simplifi fals constraint simplifi x 6 1 6 2 constrain term dnf indic prefix u wrt c easili pick follow firstli variabl posit u wherein nonvari symbol index u secondli consid variabl posit p wherein variabl x constraint substitut x appear everi conjunct note term instanc constrain term must satisfi one constraint 1 sinc x appear everi one conjunct substitut must examin order determin whether term satisfi constraint therefor posit also indic u convers constraint pattern l cnf dnf expens take ojlj n time therefor puel suarez algorithm base convers exponenti time complex type untyp system lavil algorithm also exponenti type untyp system contrast present first polynomialtim algorithm untyp system oper directli origin pattern 61 algorithm index comput untyp system index prefix comput two step first comput set indic prefix wrt constrain pattern l u intersect set thu comput yield indic prefix wrt l u comput indic prefix u wrt singl constrain pattern l follow pattern l u prioriti l also unifi l follow two step specifi indic u wrt l 1 variabl x u l nonvari posit correspond x 2 variabl x must posit instanti l tu determin match higher prioriti pattern l j remark similar algorithm suggest lavil heurist fast index comput howev question power complet heurist address illustr algorithm l textual order prioriti prefix z observ x z indic l 1 step 1 index l 2 x step 1 observ step 2 yield addit indic l 2 l 3 z index step 1 x index step 2 l intersect posit x therefor index u index comput take time use algorithm show theorem 8 algorithm comput indic untyp system sound complet proof need establish algorithm comput indic u wrt constrain pattern l clearli posit comput use step 1 index wrt l c posit select use step 2 observ constraint l 6 l j simplifi x 6 term constraint appear everi conjunct dnf fl posit select step 2 thu indic l c complet need show posit p u select step 1 2 index l c accomplish give instanc l c variabl p suppos p select step 1 step 2 l must case either l p variabl one posit fring l u need instanti determin match l either case disjunct obtain simplifi l 6 l contain least one liter differ lp consid obtain l u substitut 6 x mention note substitut variabl l u satisfi constraint l c henc instanc l still variabl p prove p index u type system unlik escap exponenti complex sinc show intuit reason complex gap type untyp system draw analog index comput constrain term satisfi problem note liter constraint gener puel suarez algorithm form x 6 x variabl arbitrari term constrain term analog boolean formula neg liter boolean formula trivial satisfi truth assign assign fals everi liter similarli index comput simpl untyp system howev type system implicit posit constraint introduc type disciplin instanc implicit constraint constrain term 1 thu constraint contain posit neg liter constrain term analog boolean formula posit neg liter henc complex gap proof index select problem pose decis problem take form u possess index wrt pattern set l show problem conp need show problem decid whether p index np let r set fring node u first guess r instanc u p variabl r verifi instanc least one pattern l declar u index clearli accomplish polynomi time henc problem determin whether u possess index np index select problem conp show problem conp complet reduc complement satisfi problem let instanc satisfi problem disjunct liter form x x x 2 fx g transform index comput problem follow system consist n 1 pattern textual order prioriti root pattern symbol f stand common prefix share pattern argument last argument f type consist nonvari b n 1th pattern form fx specifi first n term unifi also assum term type unifi term specifi ith pattern 1 b depend upon whether x j x j occur neither occur j variabl observ size pattern set polynomi size construct show determin whether index equival determin whether first transform pattern set set constrain pattern follow transform n 1th pattern becom slightli abus notat replac x j 6 x j x j 6 b ie x j 6 type disciplin x j use heurist 1 constraint simplifi show fx 0 xm index name x 0 iff input sat problem satisfi 63 heurist fast index comput type system suppos constrain term form disjunct contain occurr x suppos exist term valid type x equal rule 1 indic obtain constraint exactli obtain constrain term term valid type x rule 2 consist singl variabl index power rule 1 evid fact order appli need identifi variabl x constraint x simplifi fals 6 x identifi avoid expand fl 2 n term instead concern two term expans name illustr power rule 2 consid constrain term 1 note x 6 1 x 6 simplifi fals form 6 also contain 6 say reduc fals mean satisfi ie contradict one variabl henc index interchang role x also note x index note comput indic taken time linear sum size rule contrast puel suarez algorithm spend exponenti time reduc constraint dnf proof correct rule 1 expand fl take conjunct ffi get ffl disjunct term contain least one constraint x first term expans constrain x therefor variabl x appear index unless appear everi conjunct dnf ffi furthermor sinc x apear term expans except fl 0 clear x index iff fl 0 reduc fals exactli captur consid x proof rule 2 expand fl elimin term reduc fals observ everi conjunct expans contain least one form 6 conjunct dnf constrain index 7 conclud remark paper studi pattern match adapt automata present lower upper bound worstcas size automata sever class pattern discuss improv space match time synthes travers order show good travers order select indic whenev possibl use one greedi strategi especi strategi 4 5 otherwis although greedi strategi may sometim fail appear complex counter exampl failur may rare function program synthes travers st monoton travers sinc use st affect termin properti programm assum wherea implement benefit signific improv space match time also discuss orthogon approach space minim share equival state recal even index select strategi may fail improv space dag automata occur index select may advers affect way descend state share sinc difficult predict share among descend state possibl improv space without use indic appear practic best approach use strategi section 4 use share addit sourc space optim tree automata work clearli bring forth impact type priorit pattern match shown sever import problem context pattern match unlik polynomialtim algorithm type system wherea given polynomialtim algorithm untyp system rais question whether worthwhil consid type pattern match clear often type inform use find index determin pattern belong l u found otherwis hand signific penalti term comput effort problem use type inform r complex trie index construct definit standard ml report haskel comput nonambigu linear term rewrit system lazi pattern match ml languag implement lazi pattern match algorithm fast parallel implement function languag equal experi refin compil pattern match function languag tr 1491 effici compil pattern match tr ctr nadia nedjah minim determinist lefttoright patternmatch automata acm sigplan notic v33 n1 januari 1998 nadia nedjah luiza de macedo mourel effici concis determinist patternmatch automata ambigu pattern acm sigplan notic v37 n2 februari 2002 per gustafsson konstantino sagona effici manipul binari data use pattern match journal function program v16 n1 p3574 januari 2006 r sekar v ramakrishnan andrei voronkov term index handbook autom reason elsevi scienc publish b v amsterdam netherland 2001