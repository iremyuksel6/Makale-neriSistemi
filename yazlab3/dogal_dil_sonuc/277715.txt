implement complet asynchron distribut garbag collect exist referencebas distribut object system includ kind acycl garbag collect fail provid accept collect cyclic garbag provid gc current suffer one problem synchron oper need expens global consensu termin algorithm suscept commun problem algorithm scale present simpl complet faulttoler asynchron extens acycl cleanup protocol ssp chain system extens scalabl consum resourc could easili adapt work referencebas distribut object systemsrend usabl largescal applic b introduct automat garbag collect import featur modern highlevel languag although lot accumul experi local garbag collect distribut program still lack effect cyclic garbag collect local garbag collector correct complet distribut garbag collector also asynchron space continu work local garbag collect one space faulttoler work even unreli commun space crash scalabl sinc network connect larger number comput increas distanc previous publish distribut garbag collect algorithm fail one requir paper present distribut garbag collector distribut languag provid three desir properti moreov algorithm simpl implement consum resourc algorithm describ paper develop part referencebas distribut object system dialect ml objectori ex permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee sigplan pldi98 montreal canada tension remot refer manag use stub scion pair chain sspc system extend cyclic detect algorithm although system base transpar distribut refer design assumpt weak enough support kind distribut languag base channel exampl calculu 8 joincalculu 3 other next two section paper introduc basic mechan remot refer sspc system acycl distribut garbag collect section 4 describ cycl detect algorithm includ short exampl show work section 5 briefli investig issu relat algorithm section 6 7 analyz algorithm greater depth discuss implement issu surround final two section compar algorithm recent work distribut garbag collect present conclus basic consid distribut system consist set space space process memori local root local garbag collector space commun space comput differ one send asynchron messag messag may lost duplic deliv order distribut comput effect send messag invok procedur remot object remot procedur call rpc compon local procedur call distinguish object perform call zero argument arbitrari includ ing refer type option result arbitrari type result deliv caller synchron word caller block durat procedur call encod argument result inclus messag call marshal decod messag recipi call unmarsh argument result rpc refer type ie refer object refer serv rpc recipi refer back argumentresult object object also protect garbag collect remain reachabl ie last local remot refer delet follow section write namex indic variabl call name locat space x contain inform object write increas b mean variabl set maximum variabl variabl b stubr r figur 1 refer space x b space 21 remot refer marshal refer local remot object sent messag use remot comput eg remot invoc refer r object space x object b space repres two object stubx r scioni r repres concret ffl local pointer x stubx r ffl local pointer scioni r b scion correspond incom refer treat root local garbag collect object one incom refer remot space therefor consid live local garbag collector even absenc local refer object stub local proxi remot object contain locat associ match scion scion one match stub stub exactli one match scion sever space contain stub refer object b uniqu match scion bs space one scion stub refer r creat space export space x follow first new scion scioni r creat marshal messag marshal represent encod locat scioni r rel x messag sent x locat unmarsh creat stubx r 3 stubscion pair chain sspc system 13 mechan distribut refer track similar network object 1 support acycl distribut garbag collect differ network object sever import respect reduct number messag requir send refer lower latenc faulttoler support object migrat howev describ part need understand garbag collector garbag collector base refer list extens refer count better suit unreli commun timestamp messag avoid race condit follow explan base exampl shown figur 1 simpl exampl easili generaliz situat refer space messag stamp sender monoton increas time messag contain r sent x timestamp messag store scioni r field call scionstamp messag receiv x field stubx r call stubstamp increas timestamp messag stubx r stubstamp contain timestamp recent messag contain r receiv similarli scioni r scionstamp timestamp last messag contain r sent x object becom unreach stubx r collect local garbag collector space x stubx r final valu call increas stubstamp field x thresholdx therefor contain timestamp last messag receiv contain refer object whose stub sinc reclaim local garbag collector garbag collect space x messag live sent space immedi vicin immedi vicin space x set space stub scion whose associ scion stub x live messag sent space contain name scion still reachabl stub x valu thresholdx also sent live messag valu allow space determin recent messag receiv x time live messag sent space extract list scion name receipt live messag list compar list exist scion whose match stub locat x exist scion mention list known unreach x call suspect suspect scion delet provid danger refer current transit x prevent incorrect delet suspect scion scionstamp field suspect scion compar contain live messag stub refer messag sent last one contain r collect impli last messag contain r receiv live sent stub creat r messag must longer exist space x suspect scion therefor delet safe prevent outoford messag violat last condit messag mark timestamp smaller current valu thresholdx refus space x thresholdx must therefor initi timestamp smaller timestamp first messag receiv mechan call thresholdfilt live messag extend miss time stamp field inform space timestamp smaller thresholdx receiv messag yet possibl resend correspond messag use new timestamp newlycr scion sinc older messag refus thresholdfilt algorithm prevent prematur delet scion contain messag delay tran sit delet howev safe sinc delay messag refus thresholdfilt situat occur recent messag arriv delay messag recent messag caus creation stub subsequ delet local garbag collect arriv delay messag happen fifo commun tcpip moreov threshold filter delay messag problemat applic use unreli commun udp sinc applic design function correctli even presenc messag loss thresholdfilt messag loss due faulti commun indistinguish applic distribut garbag collect mechan faulttoler unreli commun creat dangl pointer scion never delet case crash space contain match stub support extens handl crash recoveri moreov scalabl space send receiv messag immedi vicin asynchron local garbag collect space allow time need synchron space howev mechan complet distribut cycl never delet use refer list remaind paper present contri bution algorithm detect cut distribut cycl render sspc garbag collector complet 4 detect free distribut cycl detector free distribut cycl extens sspc garbag collector space may elect use acycl sspc gc without detector extens eg scalabl reason space choos involv detect cycl call particip space space call nonparticip space detector detect cycl lie entir within set particip space 41 overview algorithm base date propag along chain remot pointer use properti propag reachabl stub receiv increas date wherea unreach stub belong distribut cycl eventu mark constant date threshold date comput central server stub mark date inferior threshold known constant date therefor unreach particip space send minimum local date wish protect central server stub date collect inform base date mark local stub also old date propag outgo refer algorithm asynchron valu comput conserv toler unreli commun use old valu comput alway safe sinc transmit valu monoton increas benign normal sspc garbag collector nonparticip space work overlap cluster particip space even take part cycl detect 42 data structur messag stub extend timestamp call stubdat time recent trace possibl remot site stub chain found root stub second timestamp call olddat valu stubdat previou trace scion extend timestamp call sciondat copi recent propag stubdat scion match stubi time recent remot trace scion chain found root stubdat space propag match scion space send stubdat messag stubdat messag stamp time trace gener site vector call cyclicthreshold contain timestamp last stubdat messag receiv remot space cyclicthreshold valu remot space period propag back space send threshold messag emiss threshold messag delay save cyclicthreshold valu given time set call cyclicthresholdtosend particular event site protect outgo refer remot garbag collect comput time call lo calmin sent localmin messag dedic site detect server minimum localmin space maintain variabl call globalmin lo calmin messag acknowledg detect server send back ack messag final comput localmin site maintain per space valu call protectnow contain new date protect next local garbag collect valu save perspac tabl call protect set reus thu protect local garbag collect 43 algorithm lamport clock use simul global time particip space 1 431 local propag current date lamport clock increment local garbag collect use mark local root scion sciondat mark date receiv match stub date propag local root scion stubdat field reachabl stub mark phase garbag collect stub reachabl differ root mark differ date mark largest date propag easi implement minor modif trace garbag collector scion sort decreas sciondat object memori trace scion turn trace stubdat visit unmark stub increas sciondat scion trace began 432 remot propag modifi live messag call stubdat sent particip space vicin local garbag col lection messag serv propag date stub match scion date propag local scion stub receiv space next local garbag collect space clock implement send current date messag case messag use detect free cycl concern messag receiv current local date increas strictli greater date messag increment current date fifo addcyclicthresholdtosend set current datecycl threshold mark rootloc rootscurr date scionscion date globalmin scionpoint null els scionscion date mark rootscionpointercurr date els mark rootscionpointerscionscion date stubstub date stuboldd decreas protect nowspac stuboldd stuboldd stubstub dateg fifo addprotect setspac protect nowspacecurr date protect nowspac current date sendspacestubdatescurr date stubstub idstubstub dateg localmin minprotect set sendserverlocalmincurr datelocalmin figur 2 pseudocod local garbag collec tion protect set cyclicthreshold tosend set implement fifo queue three function add head remov 433 characteris free cycl local root mark current date alway increas reachabl stub therefor mark increas date hand date stub includ unreach cycl evolv two differ phase first phase largest date cycl propag everi stub cycl second phase new date reach cycl local root therefor date stub cycl remain constant forev sinc unreach stub constant date wherea reachabl stub increas date possibl comput increas threshold date call globalmin reachabl stub scion alway mark date larger globalmin hand globalmin eventu becom greater date stub belong given cycl scion whose date smaller current glob almin trace local garbag collect stub reachabl scion therefor collect normal acycl sspc garbag collector remov associ scion eventu entir cycl 434 comput globalmin globalmin comput dedic space detect server minimum localmin valu sent particip space 2 central server alway com globalmin could comput lazi distribut consensu howev central server easier implement simpli receivespacestubd gc date stub set increas cyclicthresholdspac gc date old scion set spacescion spacescion fg old scion set f findscionscion idstub set found stub date found scionscionstamp threshold f threshold increas scionscion date stub date spacescion spacescion u fsciong gg figur 3 pseudocod stubdat handler find function look scion identifi set stub receiv messag stub found set found set true stub date set date associ stub scionstamp greater threshold messag scion kept aliv date set gc datethreshold datespac f increas threshold datespac current date localminspacelocalmin figur 4 pseudocod detect server messag treat garbag collect date lattest date receiv space pute globalmin recent receiv valu localmin sent space see pseudocod figur 4 435 comput localmin localmin recomput local garbag collect given particip space pseudocod shown figur 2 introduc notion probablyreach stub stub probablyreach either use mutat remot oper invoc sinc last local garbag collect stubdat increas local trace notion neither lower upper approxim reachabl stub might reachabl probablyreach time might also probablyreach reachabl time howev reachabl chain remot refer least one probablyreach stub differ date chain therefor sinc space protect date probablyreach stub date chain protect detect probablyreach stub local trace previou stubdat stub store olddat one particip space local network collector use often central structur fifo headcyclicthresholdtosend set datecycl threshold send date gc date f repeat f fifo removecyclicthresholdtosend set datecycl threshold send date gc date cyclic threshold sendspac figur 5 pseudocod ack messag handler old valu cyclicthresholdtosend set discard sinc smaller sent threshold messag correspond protectnow valu protect set therefor also remov threshold messag receiv field compar newlypropag stubdat particip space immedi vicin date call protectnow contain minimum olddat stub detect probablyreach sinc last local garbag collect valu protectnow space save perspac set call protect set garbag col lection protectnow reiniti current date localmin space comput minimum protectnow valu protect set new valu localmin sent detect server localmin messag next valu globalmin smaller olddat olddat associ stub detect probablyreach sinc latest garbag collect therefor protect new valu globalmin stub scion mark date collect 3 globalmin must protect olddat rather stubdat scion associ probabl reachabl stub must protect collect scion mark olddat match stub fact globalmin protect associ scion also refer reachabl probablyreach stub mark olddat stub 436 reduct protect set stubdat localmin messag contain date local garbag collect sent stubdat messag receiv see figur 3 perspac threshold cyclicthreshold increas gc date contain messag cyclicthreshold particip space save cyclicthresh oldtosend set local garbag collect localmin messag receiv detect server acknowledg ack messag contain gc date ack messag receiv see figur 3 slightli cryptic phrase latest garbag collec tion explain full next section receivespacethresholdcycl fifo headprotect setspac protect nowgc date gc date cyclic threshold f fifo removeprotect setspac protect gc date fifo headprotect setspac protect gc date figur pseudocod threshold handler cyclicthreshold save cyclicthreshold tosend set local garbag collect start gc date ack messag sent associ space threshold messag older valu older local garbag collect cyclicthresholdtosend set discard perfectli safe space receiv threshold messag perform action perform previou threshold messag lost cyclicthreshold date receiv threshold messag older protectnow valu protect set associ send space remov see figur 6 valu longer particip comput globalmin explain cryptic phrase latest garbag collect appear previou section olddat probablyreach stub protect protectnow protect set continu protect certain time sever event oc cur new stubdat must first sent match scion stubdat messag propag local trace outgo stub new probablyreach stub space detect trace new localmin must receiv use detect server ensur olddat newli detect probablyreach stub protect next valu globalmin ack messag receiv detect server trigger threshold messag contain cyclicthreshold equal gc date stubdat messag greater stubdat messag receiv local garbag collect threshold messag receiv protectnow remov protect set 44 exampl figur 7 8 9 show simpl exampl distribut detect free cycl space b particip space space c detect server system contain two distribut cycl c1 c2 contain two object oa1 ob 1 c1 oa2 ob 2 c2 c1 local reachabl wherea c2 unreach sinc date 2 local garbag collect date 6 propag date stuba 1 previous mark date 2 protect set associ b contain singl entri protectnow 2 date 6 figur 7 local garbag collect occur b date 8 date 6 mark scionb 1 propag stubb 1 previous mark 2 b save localmin 2 globalmin gcdate gcdate date figur 7 local garbag collect date 8 space b new localmin 2 sent detect server c acknowledg cyclic threshold 6 messag sent remov entri protect set new protectnow 2 associ protect set send stubdat messag new stub date localmin messag new localmin 2 detect server save new localmin detect server send ack messag b contain date origin localmin messag glob almin valu possibl uptod piggyback messag recept ack messag b send threshold messag contain date last stubdat messag receiv consequ remov associ protectnow entri protect set empti figur 8 local garbag collect occur date 10 current date 10 propag stuba 1 previous mark 6 protectnow associ b therefor decreas 6 stuba2 particip comput protectnow sinc still mark 2 protectnow save protect set new localmin 6 sent detect server recept ack messag c threshold messag sent ot b remov associ entri protect set howev localmin detect server still equal 2 thu prevent globalmin increas figur 9 local garbag collect occur b date 12 new localmin comput b equal 6 new globalmin therefor increas 6 scion mark smaller date trace start moment b receiv new valu globalmin consequ sciona2 scionb 2 trace subsequ garbag collect oa 2 ob 2 stubb 2 stuba2 collect local garbag collect time sciona2 scionb 2 collect sspc garbag collector stubdat messag contain stubb 2 stuba2 receiv b respect cycl c2 entir collect 5 relat issu 51 new remot refer nonparticip space new remot refer creat stub olddat set current date sciondat initi special date call moreov time scion locat resent associ space new stub may creat previou one alreadi collect sciondat therefor reiniti time scion locat resent messag scion mark propag current date garbag collect newlycr scion therefor behav normal local root new date propag stubdat messag match stub sspc threshold compar scionstamp ensur messag contain scion receiv fix sciondat mechan also use allow incom refer nonparticip space stubdat messag never receiv nonparticip space sciondat associ scion therefor remain forev act local root distribut cycl includ remot refer never collect safe impact complet algorithm particip space must also cope outgo refer nonparticip space must avoid put entri pro localmin 6 figur 8 new local garbag collect localmin increas 6 tect set nonparticip space sinc threshold messag receiv remov entri would prevent localmin henc globalmin increa ing thu stall detect process space must therefor send stubdat messag creat entri protect set known particip space list particip space maintain detect server sent particip space whenev necessari new particip space arriv space quit detect process space suspect crash slow respond 52 cope mutat activ mutat creat delet remot refer interv local garbag collect date remotelyreach object might therfor never increas phantom refer time local garbag collect occur space object reach abl mutat give refer object anoth space delet local refer collect greater date might therefor never propag object object would detect still reachabl see figur 10 exampl transient refer may move stub scion invoc scion stub refer pass ing first case mark invok scion current date prevent globalmin stall second case ensur time stub use mutat invoc copi tofrom anoth space olddat use increas protectnow associ space match scion date protectnow therefor alway contain minimum olddat stub use interv two local current stub r 11o figur 10 local refer 1 invok stub 1 creat new local refer b 2 delet local refer r 1 perform new local garbag collect stub 1 therefor remark 2 localmin increas 5 incorrect sinc cycl reachabl b reason extern mutat activ must monitor detector free cycl garbag collect protect object reachabl stub transient phantom refer 53 fault toler algorithm toler messag loss outoford deliveri stubdat threshold localmin ack messag accept sate greater previous receiv messag comput alway conserv use old valu even localmin messag may lost ack messag sent therefor threshold localmin 6 figur 9 new local garbag collect b localmin b set 6 globalmin increas 6 thu free cycl mark 2 collect sinc date smaller globalmin space continu protect date lost localmin messag would protect crash space space slow respond handl detect server exclud suspect space detect process send special messag particip space particip space set sciondat scion whose match stub suspect space remov entri suspect space protect set final detect server may also crash stop acycl garbag collect delay cyclic garbag collect detect server restart dynam rebuild list particip space special recoveri protocol wait particip space send new localmin valu comput new uptod valu globalmin 6 analysi estim worstcas time need collect newli unreach cycl time need propag date greater cycl reachabl stub assum space perform local garbag collect approxim rate defin period time necessari space perform new local garbag collect time need collect cycl equal product length largest chain reachabl refer period also estim number size messag sent local garbag collect one live messag sent sspc garbag collector plu one stubdat messag one threshold messag sent space immedi vicin first two messag concaten singl network messag henc two messag sent space vicin stubdat messag contain one identifi one date live stub refer destin space plu sspc threshold timestamp threshold messag contain cyclicthreshold valu destin space one localmin messag also sent detect server one ack messag sent back server protect set contain tripl space vicin space x vicin number tripl x protect set equal number local garbag collect occur sinc last garbag collect x frequenc garbag collect differ particip space similar protect set grow much one space requir mani garbag collect protect set becom larg avoid perform cyclic detect garbag collect stop garbag collect suffici entri protect set remov final larg number space may use detect server server contain two date per particip space comput minimum array expens 7 implement algorithm incorpor implement ssp chain system written objectivecaml 5 use unix thread modul 6 objectivecaml implement sspc consist 1300 line code 200 associ cyclic gc algorithm propag date trace implement minor modif exist caml garbag collector 2 mark rootroot function chang mark rootrootsd mark stub reachabl set root given date function appli first normal local root current date alway greater date scion set scion sort decreas date reachabl stub therefor mark date first root reachabl final stub requir updat threshold collect implement use list pair pair contain weak pointer stub stubstamp field garbag collect weak pointer test determin refer object still live stubstamp field use updat threshold weak pointer found dangl protect set implement fifo queue particip space head queue contain protectnow valu modifi mutat local garbag collect threshold messag receiv entri remov tail queue last entri date greater one messag final localmin comput minimum entri queue objectivecaml highlevel capabl automat marshal unmarsh symbol messag eas implement complex protocol modif compil standard object librari need enabl dynam creation class stub dynam type verif sspc howev modif relat either acycl gc cycl detector algorithm 8 relat work 81 hughesalgorithm algorithm inspir hugh algorithm hugh algorithm local garbag collect provok global trace propag start date trace ever threshold date comput termin algorithm due rana 11 date stub therefor repres start date recent global trace stub detect reachabl threshold start date termin global trace stub mark strictli smaller date detect reachabl termin global trace therefor collect safe howev termin algorithm use algorithm requir global clock instantan commun support failur moreov local garbag collect one space trigger new comput particip space behavior suitabl largescal faulttoler system 82 recent work detect free cycl address sever research good survey found 10 present recent work three recent algorithm base partit group space node cycl collect includ entir within singl partit heurist use improv partit algorithm complex may difficult implement moreov effici depend greatli choic heurist select suspect object maheshwari liskov 7 work base backtrac group trace opposit direct refer start object suspect belong unreach cycl heurist base distanc select suspect object backward trace encount local root object free cycl detector asynchron faulttoler welladapt largescal system nevertheless backtrac requir extra data structur remot refer everi suspect cycl need one trace wherea algorithm collect cycl concurr rodrigu joness 12 cyclic garbag collector inspir lang et al4 divid network group process algorithm collect cycl garbag contain entir within group main improv suspect object accord heurist maheshwari liskov distanc trace global synchron need termin detect difficult know algorithm behav group becom larg dmo garbag collector 9 desir prop erti safeti complet nondisrupt incremen taliti scalabl space divid number disjoint block call car car differ space group togeth train reachabl data copi car one train car train unreach data cycl contain one car one train left behind collect complet guarante order collect algorithm highli complex implement moreov problem relat faulttoler address author 9 conclus describ complet distribut garbag collector creat extend acycl distribut garbag collector detector distribut garbag cycl garbag collector desir properti asynchroni particip space faulttoler messag lost particip space server crash low resourc requir memori messag time final eas implement seem well adapt largescal distribut system sinc support nonparticip space consequ cluster cyclicallycollect space within larger group interoper space current work new implement joincalculu languag futur work includ handl overlap set particip space protocol server recoveri perform mesur acknowledg author would like thank neilz dorta studi recent cyclic garbag collector also thank jeanjacqu levi damien doligez valuabl comment suggest improv paper r network object concurr reflex chemic abstract machin joincalculu garbag collect world objectivecaml system softwar unix system program caml light collect cyclic distribut garbag back trace calculu mobil process ii survey distribut garbag collect techniqu distribut solut distribut termin problem cyclic distribut garbag collector network ob ject chain robust tr garbag collect world concurr gener garbag collector multithread implement ml calculu mobil process ii network object collect distribut garbag cycl back trace garbag collect world survey distribut garbag collect techniqu cyclic distribut garbag collector network object calculu mobil agent ctr fabric le fessant detect distribut cycl garbag largescal system proceed twentieth annual acm symposium principl distribut comput p200209 august 2001 newport rhode island unit state stephen blackburn richard l hudson ron morrison j eliot b moss david munro john zigman start termin methodolog build distribut garbag collect algorithm australian comput scienc commun v23 n1 p2028 januaryfebruari 2001 abhay vardhan gul agha use passiv object garbag collect algorithm garbag collect activ object acm sigplan notic v38 n2 supplement februari michael hick suresh jagannathan richard kelsey jonathan moor cristian ungureanu transpar commun distribut object java proceed acm 1999 confer java grand p160170 june 1214 1999 san francisco california unit state luc moreau peter dickman richard jone birrel distribut refer list revisit acm transact program languag system topla v27 n6 p13441395 novemb 2005 laurent amsaleg michael j franklin olivi gruber garbag collect clientserv persist object store acm transact comput system toc v17 n3 p153201 aug 1999