clock synchron fault recoveri extend abstract present convergencefunct base clock synchron algorithm simpl effici faulttoler algorithm toler failur allow recoveri long less third processor faulti time arbitrari byzantin fault toler without requir awar failur recoveri contrast previou clock synchron algorithm limit total number fault throughout execut realist assum fault detect use algorithm ensur secur reliabl time servic requir mani distribut system algorithm particular secur time fundament assumpt proactiv secur mechan also design allow recoveri arbitrari fault therefor work crucial realiz mechan secur b introduct accur synchron clock extrem use coordin activ cooper processor therefor essenti mani distribut algorithm sy tem although comput usual contain hardwarebas clock imprecis substanti drift highli precis clock expens cumbersom furthermor even hardwarebas clock prone fault andor malici reset henc clock synchron algorithm need let processor adjust clock overcom effect drift failur algorithm maintain processor logic clock base local physic clock messag exchang processor algorithm must deal commun delay uncertainti clock imprecis drift well link processor fault mani system main need clock synchron deal fault rather drift drift rate quit small work eg 11 12 actual ignor drift note howev clock synchron ongo task never termin realist limit total number fault system lifetim contribut work abil toler unbound number fault execut long mani processor faulti done allow processor longer faulti synchron clock oper processor protocol withstand arbitrari byzantin fault affect processor may deviat specifi algorithm arbitrari manner potenti cooper malici disrupt goal algorithm system obvious critic toler fault system secur attack ie design secur system inde mani secur system assum use synchron clock usual effect drift ignor assumpt may becom weak spot exploit attack malici chang clock therefor solut frequent tri reli synchron clock eg use instead fresh authent protocol eg kerbero 22 howev alway achiev often synchron clock essenti effici function fact secur task requir secur synchron clock definit exampl timestamp 14 ecommerc applic payment bid expir date therefor secur time servic integr part secur system dce 25 ongo work standard secur version internet network time protocol ietf 28 note exist secur time protocol simpli authent clock synchron messag easi see may withstand malici attack even authent secur origin motiv work came need implement secur clock synchron proactiv secur toolkit 1 proactiv secur allow arbitrari fault processor long f processor faulti fix length period name proactiv secur make use processor faulti later recov import notic set may possibl malici attack avoid detect solut need work even indic processor fail recov achiev algorithm proactiv secur period perform correctivemainten action exampl may replac secret key may expos attack clearli secur reliabl period protocol depend secur synchron clock ensur mainten protocol inde perform period substanti amount research proactiv secur includ basic servic agreement 24 secret share 23 17 signatur eg 16 pseudorandom 4 5 see survey 3 howev result far assum clock synchron work therefor provid miss foundat futur proactiv secur work 11 relat prior work larg bodi research clock synchroniza tion much focus faulttoler focu relev work number work focu handl processor fault ignor drift dolev welch 11 12 analyz clock synchron hybrid fault model recoveri arbitrari initi state processor self stabil well nap stop failur number processor 11 byzantin fault third processor 12 work assum synchron model synchron logic clock goal clock number puls result directli compar sinc clear algorithm self stabil analysi assum system initi correctli hand allow byzantin fault third processor period work asynchron set allow drift synchron real time model timeadapt self stabil suggest kutten pattshamir 18 closer goal recov arbitrari fault f processor time function f notic weaker model sens assum period fault timeadapt selfstabil clock synchron protocol asynchron model present herman 15 protocol compar allow drift synchron real time among work deal processor fault drift assum processor fail never cover bound f number fail processor throughout lifetim system mani work base local converg function earli overview approach found schneider report 26 partial list result along line includ 13 7 8 9 21 2 20 network time protocol design mill 21 allow recoveri without analysi proof furthermor authent version 21 pro pose far attempt recoveri malici fault algorithm use converg function similar fetzer cristian 9 turn refin welch lynch 20 howev seem one design goal solut 9 incompat processor recoveri specif 9 tri minim chang made clock synchron oper ation use small correct may delay recoveri processor clock far correct one 9 recoveri may never complet problem account differ converg function one 9 choic small maximum correct valu fast recoveri time chose latter anoth aspect 9 optim maximum logic drift see definit 3 section 23 lution logic drift equal hardwar drift wherea solut addit factor o2 gammak k number synchron oper perform everi time period roughli assum less third processor faulti time period requir sever synchron oper take place period model approach 9 ie length time period approach infin ad factor logic drift approach zero conjectur optim logic drift achiev mobil fault model anoth differ algorithm sever tradit converg function base clock synchron algorithm mani solut proceed round correct process approxim agre time round start end round processor read clock adjust clock accordingli contrast protocol also ntp 21 proceed round believ implement round synchron across larg network internet could difficult previou work address fault recoveri clock synchron due dolev halpern simon strong 10 work assum fault detect practic fault often undetect especi malici fault attack make everi effort avoid detect attack handl undetect fault recoveri critic proactiv secur trivial recov processor may clock set valu bit outsid permit rang solut 10 reli signatur rather authent link therefor also limit power attack assum collect mani bad signatur assumpt a4 10 algorithm dolev et al 10 base broadcast requir processor sign forward messag processor sever practic disadvantag compar local converg function base algorithm present paper di advantag mostli result global natur discuss fetzer cristian 13 addit practic disadvantag broadcastbas algorithm includ sensit transient delay inabl take advantag realist knowledg regard delay overhead delay result depend broadcast reach network eg internet hand broadcast base algorithm dolev et al 10 requir major processor correct need two third also 10 requir subnet non faulti processor connect rather demand direct link two processor implement broadcast use 10 substanti overhead requir twothird processor correct connect 12 inform statement requir clock synchron algorithm handl fault recoveri satisfi synchron guarante time clock valu nonfaulti processor close 1 accuraci guarante clock rate nonfaulti processor close realtim clock one reason requir practic set processor island sometim need commun coordin processor outsid world recoveri guarante processor longer faulti processor recov correct clock valu rejoin good processor within fix amount time present formal model goal simpl algorithm satisfi requir analyz algorithm model attack temporarili corrupt processor commun link may possibl refin analysi show algorithm use even attack corrupt processor link long mani either corrupt time 2 formal model 21 network clock network model fulli connect commun graph n processor processor local clock denot processor name assum 1 note trivial solut set local clock constant valu achiev synchron goal accuraci requir prevent happen processor know name name neigh bor addit processor network model also contain adversari may occasion corrupt processor network limit time throughout discuss assum bound ae clock drift good processor bound time take send messag two good processor refer ae drift bound messag deliveri bound envis network environ real time conveni way think real time anoth clock also tick less rate processor clock purpos analysi conveni view local clock processor p consist two compon one unresett hardwar clock hp adjust variabl adj p reset processor clock valu p real time denot cp sum hardwar clock adjust factor time cp notat 26 2 stress hp adj p mere mathemat conveni processor adversari realli access valu formal oper processor p perform hp adj p read valu hp ad arbitrari factor adj p chang valu hp chang continu valu adj p remain fix clock hardwar clock processor p smooth monoton increas function denot hp adjust factor p discret function chang p add valu adjust variabl local clock p defin assum upper bound ae drift rate processor hardwar clock real time name 1 2 everi processor p network hold 2 note practic ae usual fairli small 22 adversari model said network model come adver sari occasion break processor reset local clock arbitrari valu adversari may choos leav processor would like processor recov clock valu envis adversari see modifi commun network also break processor leav wish break gener adj p discret variabl could also depend dont use gener paper though processor p adversari learn current intern state processor furthermor point leav p adversari may send messag p may also modifi intern state p includ adjust variabl adj p adversari leav processor p access ps intern state say p faulti control adversari adversari broke leav yet assum reliabl authent commun processor p q faulti pre cise let denot messag deliveri bound processor p q faulti p send messag q time q receiv exactli messag p furthermor nonfaulti processor q receiv messag processor p time either p sent exactli messag q els faulti time interv 3 power adversari model measur number processor control within time interv certain length limit reason otherwis even adversari control one processor time corrupt clock system move fast enough processor processor limit adversari let 0 ng fix adversari flimit respect time interv control f processor refer time period f number faulti processor notic definit 2 impli particular f limit adversari control f processor want break anoth one must leav one current processor least time unit break new one rest paper assum n 3f 1 23 clock synchron protocol intuit purpos clock synchron algorithm ensur processor local clock remain close close real time faulti processor becom synchron quickli adversari leav clear howev protocol achiev instantan recoveri must allow processor time recov typic want recoveri time time adversari break new processor one left alreadi recov definit 3 clock synchron consid clock synchron protocol execut network drift rate ae messag deliveri bound presenc flimit adversari respect time period 3 formul good link complet rule replay old messag paus problem applic howev say ensur synchron maxim deviat ffi time two processor faulti gamma hold ii say ensur accuraci maxim drift ae maxim discontinu whenev p faulti interv hold 3 aclocksynchronizationproto col practic clock synchron protocol basic oper protocol estim processor peer clock therefor begin subsect 31 discuss requir clock estim procedur describ simpl known procedur subsect 32 describ clock synchron protocol descript abstract clock estim procedur view black box provid properti discuss final subsect 33 elabor aspect protocol compar similar synchron protocol model 31 clock estim protocol basic build block subroutin processor p estim clock valu anoth processor q natur requir procedur accuraci valu return procedur far actual clock valu processor q bound error along estim clock valu also get upper bound error estim technic reason also conveni procedur return distanc local clock p q rather clock valu q henc defin clock estim procedur twoparti protocol processor p invok protocol tri estim clock valu anoth processor q protocol return two valu dq aq distanc accuraci valu interpret sinc procedur voke point differ cq gamma cp dq error aq formal definit 4 say clock estim routin read error timeout maxwait whenev processor p nonfaulti time interv maxwait call routin time estim clock q routin return time 0 maxwait valu moreov q also nonfaulti interv 0 valu satisfi follow ffl ffl time 00 2 0 cq 00 gammac p 00 describ simpl clock estim algorithm requestor p send messag q return repli contain time accord clock q send repli p receiv repli within messag deliveri bound abort estim set wise p send ping messag q local time receiv answer c local time r set rgammasintuit p estim local time rs qs time c network total symmetr time messag arriv ident way p q way back q p ps clock progress r constant rate estim would total accur case q return answer c time p local time p local time r q valu c estim offset cant miss rgamma simpl procedur optim sever way common method use practic decreas error estim peer clock expens wors timeli repeatedli ping processor choos estim given ping least round trip time use exampl ntp protocol 21 also reduc network load may possibl piggyback clock queri messag messag perform differ thread spread across time interv cours implement latter idea mobil adversari set clock synchron protocol period check thread exist restart otherwis protect adversari kill thread note implement way guarante condit definit 4 anymor sinc separ thread may return old cach valu measur call clock estim procedur henc analysi paper appli right box case time estim done separ thread 32 protocol sync clock synchron protocol use clock estim procedur one describ section 31 denot estimateoffset timeout bound denot maxwait maxim error paramet protocol local time syncint two execut synchron protocol paramet wayoff use processor gaug distanc clock clock proce sor paramet approxim comput network model paramet ae constraint paramet satisfi syncint 2maxwait 4 maximum deviat want achiev set discuss analysi sec tion 42 section 33 sync protocol describ figur 1 basic idea processor p use estimateoffset get estim clock peer p elimin f smallest f largest valu use remain valu adjust clock roughli p comput low valu c f 1st smallest estim high valu c f 1st largest estim ps clock cp wayoff away interv c know clock far clock good processor ignor clock reset c c 2 otherwis ps clock far processor would like limit chang case instead complet ignor old clock valu reset clock minc ps clock c c move halfway toward valu detail sync protocol slightli differ though specif way low valu high valu chosen processor p first use error bound gener overestim underestim clock valu comput low valu c f 1st smallest overestim high valu f largest underestim analysi also assum clock estim done parallel time take make local comput neglig run sync take maxwait time local clock realli crucial save introduct extra paramet analysi 33 discuss sync protocol follow gener framework conver genc function synchron algorithm see 26 next clock valu processor p comput estim clock valu processor use fix simpl converg function 4 round mention section 11 one notabl differ protocol protocol propos literatur mani converg function protocol exampl 8 9 proceed round processor keep differ logic clock round round time two consecut synchron protocol protocol processor ask roundi clock processor alreadi 1st round would return valu clock didnt last synchron protocol contrast sync protocol processor p alway respond current clock valu make analysi protocol littl complic greatli simplifi implement especi mobil adversari set sinc variabl current round 4 current algorithm analysi processor need estim clock processor expect improv processor need estim clock local neighbor paramet syncint time synchron wayoff bound clock far rest 1 everi syncint time unit call sync 3 function sync f 4 q 2 ng 5 7 8 f 1st smallest dq 9 f 1st largest q 11 adj p adj 12 els adj p adj 13 g last round clock time begin next round recov break known valu anoth practic advantag protocol requir know valu paramet messag deliveri bound hardwar drift ae maximum deviat ffi may hard measur practic fact may even chang cours execut use valu analysi protocol practic algorithm paramet depend valu like maxwait syncint wayoff may overestim multipl factor without much harm ie without introduc factor maximum deviat logic drift recoveri time actual achiev perform sync protocol processor execut sync protocol everi syncint time unit local time make assumpt rel time sync execut differ processor common way implement set alarm end execut start new execut alarm goe mobil adversari set one must make sure alarm recov breakin note analysi depend processor execut sync exactli everi syncint time unit rather need time interv 1 aesyncint maxwait real time processor complet least one two sync 4 analysi let denot valu everi nonfaulti processor complet least one two full sync interv length specif set appropri purpos syncint time specifi protocol maxwait bound execut time singl sync ae drift rate 41 main theorem follow main theorem character perform achiev protocol theorem 5 let defin let k assum k 5 sync protocol fulfil synchron requir maximum deviat ii sync protocol fulfil accuraci requir logic drift discontinu note theorem show tradeoff rate sync protocol perform function optim perform choos small compar instanc small get almost perfect accuraci ae ae signific term maximum deviat bound 16 42 clock bia purpos analysi conveni consid bia clock rather clock valu bia processor p time differ logic clock real time denot bp name realtim impli context often omit notat write bp instead bp analysi view protocol sync affect bias processor rather clock valu particular execut sync processor p view dq estim bp gamma bq rather estim view modif adj p last step modif bp therefor rewrit figur 2 algorithm sync processor p bia formul paramet syncint time sunchron wayoff bound clock far rest 1 everi syncint time unit call sync 3 function sync f 4 q 2 ng 5 7 8 b 1st smallest b q 9 b 1st largest b q 10 11 bp 12 els bp 13 g protocol term bias rather clock valu figur 2 note referenc bp protocol mean bp real time refer take place stress protocol implement describ figur 2 sinc processor p know bia bp rather descript altern view real protocol describ figur 1 43 proof overview main theorem provid inform overview proof detail includ use piec syntax statement technic lemma found appendix complet proof includ full version paper simplic overview look case drift clockread error name note case alway step 67 protocol get analysi look consecut time interv i0 length proce induct inter val interv prove spirit follow claim bia valu good processor get closer togeth distanc ffi begin distanc 7ffi8 end ii bia valu recov processor get much closer good processor recov processor distanc rang good processor begin would distanc 2 rang end therefor follow interv bia recov processor ffi away good processor prove claim main technic lemma consid given interv assum set g least n gamma f processor nonfaulti throughout bia valu small rang begin wlog rang gammad prove follow three properti first show bias processor g remain rang gammad throughout interv everi execut sync processor get bias rang processor g sinc g contain 2f processor b rang ps bia remain rang also complet sync protocol also follow argument alway processor p never ignor current bia step 11 protocol next consid processor whose initi bia valu low say median g execut two sync time interv sync take averag current bia anoth bia bia p remain bound strictli specif one show result bia valu larger z z initi median valu similarli processor q 2 g high initi bia valu bia valu remain bound strictli gammad specif least z gamma 3d4 properti 3 last use result previou step show end interv bia everi processor g z gamma 7d8 z 7d8 henc case error drift size interv includ processor g shrunk 2d 7d4 see recal result previou step whenev processor p 2 g execut sync get bia valu bound z3d4 processor low initi bias low estim b must also smaller z similarli get bia valu bound 3d4 processor high initi bias high estim b p must larger bia p sync protocol comput minb bp2 sinc bp rang gammad result first step result step follow moreov similar argument appli even processor outsid g whose initi bia rang gammad specif show begin interv nonfaulti processor p high bia say 0 end interv bia p z 7d8 henc distanc p good rang shrink 2 formal analysi includ effect drift read error includ full version paper 5 futur direct result requir third processor faulti period previou clock synchron protocol assum authent channel abl requir major nonfaulti processor 19 27 interest close gap 10 anoth weaker requir subnetwork contain nonfaulti processor remain connect 10 also assum signatur may possibl prove variant protocol particular would interest show suffici nonfaulti processor form suffici connect subgraph hold also justifi limit clock synchron link limit number neighbor processor one practic advantag converg base clock synchron note 3f1connect suffici protocol one construct graph 6f 2 node 3f 1connect yet protocol work graph consist two cliqu 3f1 node addit ith node one cliqu connect ith node graph clearli 3f connect protocol guarante clock one cliqu drift apart addit work requir explor practic potenti protocol particular practic protocol network time protocol 21 involv mani mechan may provid better result typic case feedback estim compens clock drift improv may need protocol make sure retain secur well refin protocol analysi provid better bound result typic scenario synchron accuraci requir defin talk behavior protocol adversari suitabl limit may also interest ask happen stronger adversari specif happen adversari power back flimit altern way ask question happen adversari limit initi clock valu processor ar bitrari along line 11 12 desir improv protocol andor analysi also guarante self stabiliza tion mean network eventu converg state nonfaulti processor synchron 6 r implicit reject averag function faulttoler physic clock synchron maintain secur presenc transient fault proactiv pseudorandom gener maintain authent commun presenc breakin probabilist clock synchron probabilist intern clock synchron optim intern clock synchron algorithm dynam faulttoler clock synchron lower bound converg function base clock synchron phase clock transient fault repair proactiv public key signatur system share cope perpetu leakag synchron clock presenc fault new faulttoler algorithm clock synchron network time protocol kerbero authent servic comput network withstand mobil viru attack new solut byzantin gener problem chapter 7 dce time servic synchron network time understand protocol byzantin clock synchron technic report tr87859 tr synchron clock presenc fault new solut byzantin gener problem optim clock synchron new faulttoler algorithm clock synchron withstand mobil viru attack extend abstract understand dce waitfre clock synchron dynam faulttoler clock synchron lower bound converg function base clock synchron maintain authent commun presenc breakin timeadapt self stabil proactiv public key signatur system proactiv secur toolkit applic maintain secur presenc transient fault proactiv secret share understand protocol byzantin clock synchron ctr michael back christian cachin reto strobl proactiv secur messag transmiss asynchron network proceed twentysecond annual symposium principl distribut comput p223232 juli 1316 2003 boston massachusett kun sun peng ning cliff wang faulttoler clusterwis clock synchron wireless sensor network ieee transact depend secur comput v2 n3 p177189 juli 2005 hermann kopetz astrit ademaj alexand hanzlik combin clockstat clockrat correct faulttoler distribut system realtim system v33 n13 p139173 juli 2006 kun sun peng ning cliff wang tinysersync secur resili time synchron wireless sensor network proceed 13th acm confer comput commun secur octob 30novemb 03 2006 alexandria virginia usa