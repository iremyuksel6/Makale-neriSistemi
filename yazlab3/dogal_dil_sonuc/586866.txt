onlin load balanc hierarch server topolog hierarch server environ job assign onlin fashion collect server form hierarchi capabl job request specif server meet need system free assign either server server higher hierarchi job carri certain load impart server assign goal find competit assign maximum total load server minimizedw consid linear hierarchi server total order term capabl investig sever variant problem unweight oppos weight problem job unit weight fraction oppos integr model job may assign sever server receiv fraction weight final temporari oppos perman job may depart activ finit durat time show optim ecompetit algorithm unweight integr perman model algorithm e1competit weight case fraction version ecompetit even temporari job allow integr model temporari job show algorithm 4competit unweight case 5competit weight case show lower bound e unweight case integr fraction bound valid even respect random algorithm also show lower bound 3 unweight integr model temporari job allowedw gener problem consid hierarchi server form tree tree hierarchi job assign node also assign node ancestor show determinist algorithm 4competit unweight case 5competit weight case perman job allow random algorithm improv competit e e1 respect also show omegasqrtn lower bound temporari job allow b introduct one basic onlin loadbalanc problem follow job arriv one time must schedul one n server job certain load associ subset server may schedul goal assign job server minim cost assign defin maximum load server natur loadbalanc problem consid onlin decis must made without knowledg futur job previou decis may revok compar perform onlin algorithm perform optim olin scheduleron know entir sequenc job advanc ecaci paramet onlin schedul competit ratio roughli defin receiv editor octob 26 1998 accept public revis form march 29 2001 publish electron septemb 26 2001 extend abstract paper appear proceed 7th european symposium algorithm lectur note comput sci 1643 httpwwwsiamorgjournalssicomp31234613html researchattcom author leav electr engin depart tel aviv univers tel aviv 69978 israel comput scienc depart technion haifa 32000 israel ariefcstechnionacil naorc technionacil 528 amotz barnoy ari freund joseph seffi naor maximum ratio taken possibl sequenc job cost incur algorithm cost optim assign 11 hierarch server problem hierarch server problem server form hierarchi capabl job may run given server may also run server higher hierarchi consid linear hierarchi server number 1 n imagin physic order along straight line run left right server 1 leftmost server n rightmost leftward server capabl rightward one say server 1 left server right input sequenc job carri posit weight request one server job request server assign server left server job elig server assign job weight w server increas load w initi load 0 use term job request interchang cost given assign l load server use opt cost optim olin assign algorithm ccompetit exist b 0 independ input cost c opt sequenc scalabl problem addit factor b may ignor lower bound construct consid variant model problem accord three orthogon dichotomi integr model job must assign entireti singl server fraction model job weight may split among sever elig server weight model job may arbitrari posit weight unweight model job unit weight result fraction model hold unweight weight case distinguish unweight fraction model weight fraction model final perman job continu load server assign indefinit temporari job activ finit durat time depart durat temporari job activ known upon arriv may allow temporari job may restrict input perman job temporari job allow cost assign defin l load server time version problem view basic weight integr model perman job natur gener problem server form root tree hierarchi job request certain server may assign ancestor tree variou model pertain problem well hierarch server problem import practic paradigm captur mani interest applic divers area assign class servic call commun network rout queri hierarch databas sign document rank execut upgrad class car car rental compani theoret point view hierarch server problem also interest virtu relat problem relat machin 3 problem server elig everi job may dierent speed assign job weight w server speed v increas load wv without loss gener assum speed server consid set job assign cost bound c let us focu particular job whose weight w achiev cost c must refrain assign load balanc hierarch server 529 job server wv c word exist rightmost server may assign job thu restrict cost induc elig constraint similar hierarch server problem idea develop context hierarch server problem applic problem relat machin lead better bound problem 10 12 background graham 16 explor assign problem job may assign server show greedi algorithm competit ratio 2 1 later work 8 9 17 2 investig exact competit ratio achiev problem gener n variou special case best result date gener n lower bound 1852 upper bound 1923 2 year mani loadbalanc problem studi see 4 20 survey assign problem arbitrari set elig server allow consid azar naor rom 7 show upper lower bound log n sever variant problem perman job assum subsequ paper gener problem allow temporari job 5 lower bound n upper bound 23 shown upper bound later tighten n 6 relat machin problem investig aspn et al 3 show 8competit algorithm base doubl techniqu result improv berman charikar karpinski 12 show refin doubl algorithm 3 5828competit random algorithm abl improv bound 4311 also show lower bound 2438 de terminist 1837 random random bound recent improv 2 14 azar et al 6 gener problem allow temporari job show determinist upper bound 20 impli random upper bound 5e 1359 lower bound 3 upper bound later improv resourc procur problem defin studi kleywegt et al 18 independ work problem job arriv discret time specifi deadlin must complet job must execut singl server view problem assign perman job parallel server think time slot server fact problem equival follow variant hierarch server problem model consid fraction model perman job input consist precis n job jth job arriv specifi server server elig job j addit onlin natur problem less demand schedul need commit full assign job immedi arriv rather jth job arriv must decid fraction first j job assign server n 1 kleywegt et al 18 develop lower bound techniqu similar abl establish lower bound 251 analyt numer mean also describ 345 competit algorithm 13 result signific portion work devot develop continu framework recast problem continu framework mere relax problem discret featur rather fulli fledg model new variant problem defin advantag continu model lie abil employ tool infinitesim calculu make analysi much easier section 2 use continu model design optim ecompetit algorithm surprisingli algorithm oper counterintuit weight distribut assign job bias left ie weight end leftward server show gener procedur transform algorithm continu model algorithm fraction model also show gener procedur transform algorithm fraction model algorithm integr model thu get ecompetit algorithm fraction model algorithm respect e 1competit unweight integr weight integr model former algorithm admit temporari job latter upper bound e also appli resourc procur problem kleywegt et al 18 virtu theorem 2 paper thu improv best upper bound 345 section 3 develop procedur deriv lower bound context continu model construct continu model rather unconvent gener discret model fact surfac thing two model seem incompar albeit analog deeper level though turn continu model actual special case discret model make lower bound obtain continu model valid discret set well make upper bound intrigu develop continu framework transport back discret model lower bound obtain procedur also valid discret model fraction well integr even unweight case perman job even respect random algorithm use procedur find e tight lower bound sinc lower bound techniqu one use independ kleywegt et al 18 context resourc procur problem lower bound e appli problem well improv best lower bound 251 thu work solv problem complet demonstr tight bound e section 4 consid temporari job integr model show doubl algorithm 4competit unweight case 5competit weight case also show determinist lower bound 3 section 5 extend problem tree hierarchi show algorithm respect 4 4 5competit fraction unweight integr weight integr model random algorithm improv competit e e e 1 respect show lower bound n model determinist random temporari job allow eect restrict set elig server sever way discuss section 6 three case consid show lower bound log n exampl lower bound hold case server form circuit line elig server must contigu note sinc problem special case problem consid 7 upper bound olog n immedi 2 upper bound section show algorithm whose respect version fraction unweight integr weight integr model e e 1competit fraction version admit temporari job integr version build algorithm introduc studi semicontinu model class memoryless algorithm begin optimum lemma character opt term input sequenc 21 optimum lemma fraction unweight integr model lemma provid exact formula opt weight integr case give load balanc hierarch server 531 2approxim 1 optimum lemma recurr theme exposit given input sequenc given server denot w total weight job request server left let clearli h lower bound opt unweight integr model tighten h addit maximum weight job input sequenc denot w max also lower bound opt integr model turn upper bound opt let us say given server satur given moment load least h integr model consid algorithm assign job rightmost unsatur elig server algorithm treat job onlin fashion requir advanc knowledg h olin clearli unsatur elig server alway found cost h w max claim inde case see suppos job weight w arriv elig server satur let maxim server left satur maxim job assign left must request server left sinc total weight least h w contradict fraction model modifi algorithm follow job weight w arriv assign follow let rightmost unsatur elig server let l current load w assign job entireti otherwis split job assign unit weight treat remaind recurs new job assign algorithm achiev cost h optimum lemma summar result fraction model unweight integr model weight integr model 22 memoryless algorithm memoryless algorithm algorithm assign job independ previou job cours memoryless algorithm interest fraction model model go consid focu restrict type memoryless algorithm name uniform algorithm uniform memoryless algorithm instanc gener algorithm shown instanc character function u algorithm genericuniform job weight w request server arriv 1 r w 2 r 0 3 assign min w ui r unit weight server 4 r r 5 1 unreason expect easili comput formula opt weight integr model would impli polynomialtim solut nphard problem partit 532 amotz barnoy ari freund joseph seffi naor algorithm start server request job proce leftward long job fulli assign fraction job weight assign server ui unless w ui remaind job reach condit ensur job alway fulli assign algorithm note assign gener uniform memoryless algorithm independ number server order job input moreov collect job total weight w request server may replac singl request weight w therefor assum exactli one job request server allow job zero weight number server infinit denot weight job request server w consid job weight w request server right given server request server close job leav wu unit weight regardless exact server request point howev job contribut load begin diminish distanc request grow final request made far enough away eect denot p point beyond eect begin diminish p point die complet note p p may undefin case take infin interest function u satisfi p import p lie fact load due job request server rang p simpli us time total weight job follow lemma corollari dicult prove worst case lemma let uniform memoryless algorithm follow problem given k 0 server find input sequenc maxim load assign subject solv l result load ssatisfi p corollari 3 let uniform memoryless algorithm let ca competit ratio sup 23 semicontinu model fraction integr version problem server job discret object therefor refer model discret model section introduc semicontinu model server made continu section 3 defin continu model make job continu well semicontinu model best understood physic metaphor consid bottom vessel fill nonuniform fluid appli vari degre pressur dierent point forc act singl point zero load balanc hierarch server 533 region nonzero area suer net forc equal integr pressur region similarli semicontinu model talk individu server rather continuum server analog bottom vessel arriv job analog quantiti fluid must ad vessel notion load weight becom divorc load analog pressur weight analog forc formal server interv 0 job must assign job j weight w j request point j 0 server interv assign job j specifi integr function 2 x 3 g j continu right everi point full assign given full assign g load l defin l x gz dzthe mean weight densiti load point x defin l gx introduc notat l x consist previou notat cost assign lemma 4 optimum lemma semicontinu model let w x total weight request made left x includ x proof lower bound trivial upper bound let x 1 x 2 point request job rearrang job jth job request x j idea pack job order rectangl extend left end server interv let consid follow assign assign clearli attain follow definit h j sucient assign valid adapt definit uniform memoryless algorithm semicontinu model model uniform algorithm character function 0 follow given point x 0 let qx point satisfi equat 1 assign job j qx g j defin properli must requir otherwis algorithm may fail fulli assign job request point close 0 note load 0 alway zero given point x 0 defin px point px x px exist algorithm competit ratio unbound demonstr request sequenc consist job unit weight jth job request point j sequenc l shall therefor allow algorithm satisfi 0 semicontinu model nice properti p p dispar discret model fuse singl entiti ps worst case lemma corollari becom follow lemma lemma 5 worst case lemma semicontinu model let uniform memoryless algorithm defin ux follow problem given k 0 point 0 server interv find input sequenc maxim load assign subject solv singl job weight psk request point ps result load psku corollari 6 competit ratio sup x pxux 24 ecompetit algorithm semicontinu model consid algorithm harmon uniform memoryless algorithm defin let us calcul px x dz z x thu competit ratio algorithm harmon sup x ex 1 25 applic discret model devis competit algorithm semicontinu model wish import discret model start show transform algorithm semicontinu model algorithm discret fraction model follow show algorithm fraction model may transform algorithm integr model semicontinu fraction let input sequenc fraction model treat server point 0 view request server request point view request sequenc semicontinu model well respect optimum lemma lemma 1 4 valu opt model let ccompetit onlin algorithm semicontinu model defin algorithm b fraction model follow job j arriv b assign unit weight server g j assign function gener job clearli cost incur b bound cost incur thu b ccompetit import observ memoryless b thu even temporari job allow assign gener b ccompetit time compar optim olin assign activ job give algorithm thu deriv algorithm harmon name fraction alharmon proposit 7 algorithm fractionalharmon ecompetit even temporari job allow fraction integr let algorithm fraction model defin algorithm b integr model weight unweight follow job arriv b keep track assign would make server said overload load bs assign exce load assign assign rightmost elig server overload allow assign job proposit 8 whenev job arriv least one elig server overload load balanc hierarch server 535 proof denot l j load server job j assign b respect job j consid assign b server overload j defin l j claim j 1 job j arriv server 1 elig overload 2 proof induct j claim clearli true job j 1 whose weight w l j 1 second inequ justifi induct hypothesi thu server 1 overload remain show let rightmost server algorithm assign part job j ie max j j 1 let b server b assign job induct hypothesi j b b assum b still prove claim b 1 algorithm assign job j server b one server b 1 elig right b must therefor case l j 1 thu b 1 l l j l b l b second inequ justifi induct hypothesi let w max j maximum weight job among first j job algorithm maintain l b j unweight case weight case w max opt optimum lemma lemma 1 valu opt integr model least high valu fraction model thu ccompetit b ccompetit unweight case 1competit weight case give algorithm thu deriv algorithm fractionalharmon name integralharmon proposit 9 algorithm integralharmon ecompetit unweight case e 1competit weight case 3 lower bound section devis techniqu prove lower bound limit n bound obtain valid fraction integr model even unweight case fact remain valid even presenc random respect oblivi adversari use techniqu obtain tight constant lower bound e success approach facilit transport problem discret set continu model job server continu 31 simpl lower bound consid fraction model restrict attent righttoleft input sequenc defin sequenc made request server restrict attent sequenc server request exactli allow job zero weight 536 amotz barnoy ari freund joseph seffi naor b fig 1 histogram job weight let kcompetit algorithm given righttoleft input sequenc denot w weight job request server l load server given moment suppos first n culmin request server assign recal definit h optimum lemma lemma 1 denot h valu h respect job sinc k competit load must obey l kh consid specif input sequenc defin w w 0 sequenc h thu first job assign l n kwn second job handl l n1 2kwn l n kwn still hold new job could assign server n gener request server process l n note total weight job input equal total load server assign complet get kw kw henc k lim n 2 n 2 32 discuss figur 1 depict request sequenc result kh histogramlik fashion height bar indic respect valu bar equal width equival consid area rather height precis let us redraw histogram bar width 1 height equal numer valu repres total weight assign total area job bar total weight actual assign bound total area kh bar instead draw histogram kh let us draw histogram h lower bound found solv total area job bar k total area h bar total area job bar total area h bar note multipli weight job constant c 0 height job bar h bar increas factor c leav area ratio intact similarli express scale job weight scale width bar histogram eect result ratio thu express entir procedur geometr term follow select input histogram width bar 1 let h ij area bar divid jn width j bar let h divid area jn rather j h height bar whose area load balanc hierarch server 537 equal valu opt first n divid area input histogram area h histogram drawn scale obtain lower bound scale histogram allow us keep consid finit area n goe infin form link discret model continu model introduc next 33 continu model continu model motiv observ analysi suggest previou section tend exceedingli dicult simplest input histogram turn continu model order avail machineri infinitesim calculu continu model dier semicontinu model introduc section 2 two way instead infinit server interv use finit interv 0 impor tantli job continu model discret rather continu job flow arriv time possibl defin gener continu model arriv job time describ function place server interv time although model interest mathemat construct right focu restrict modelon allow equival righttoleft sequenc formal input request function integr nonneg real function fx defin server interv 0 interpret f mean integr ie x1 x0 fx dx total amount weight request point interv x 0 x 1 underli intuit request flow righttoleft sens infinitesim request point x assum occur time assign continu assign describ assign function integr nonneg real function gx 0 1 continu right everi point 2 satisfi x 0 0 equal x algorithm model algorithm given fx output gx x 0 gx interv x independ fx outsid interv definit load cost semicontinu model continu model z proof let z zfx dx h addit assign function achiev cost h let us adapt lower bound procedur section 32 continu model consid request function fx correspond assign gx gener kcompetit onlin algorithm wish bound valu gx fix point defin new request function f respect f equal ha note analog h ij h discret 538 amotz barnoy ari freund joseph seffi naor model da valu g must f f g produc onlin algorithm thu ga kha true henc lower bound ww readili obtain certain request function simplifi procedur fx continu monoton decreas function tend 0 point x 0 x allow use f restrict 0 request function follow shortcut ha solv db h fx dx b let ba solut follow easi justifi ha ba note x 0 simplifi procedur may return valu ba outsid server interv 0 case true valu ha less valu comput lead less tight still valid lower bound therefor use simplifi method without concern issu also sometim conveni assum server interv rather finit 0 easili seen make dierenc least far use simplifi procedur concern exampl let k find easier solv e e kx dx rather b db thu set z z familiar exponenti integr function 1 lower bound obtain therefor load balanc hierarch server 539 11 lower bound e obtain method consid request function e kx 1k limit k server interv 0 proof conveni consid integr valu k start review elementari fact concern gamma function 1 gamma function defin shown posit integ 1 incomplet gamma function defin z dt integr part obtain recurr z e z also need stirl approxim final consid integr dx substitut k 1k z k1 e z dz thu finit return problem dx k k1 relat b given kb 1k e kx 1k substitut r previou equat simplifi give appli recurr side equat rearrang term yield also get directli let us explor relationship r clearli r easi see function x k e x increas 0 k decreas k thu refer figur 2a see r k k 1 rk1 r area region mark x r r k e r area dot rectangl r r 1 sinc area equal x k e x decreas region next consid r k2 refer figur 2b appli reason see r1 k1 let us consid function x k1 e x maximum occur 1 thu sinc k 1 function increas interv r refer figur 2c appeal k r k see summar e r r 11k b c fig 2 relationship r graph drawn scale use x k e x show r k r 1 b use x k e x show r k 2 k 1 c use x k1 e x show dierenti get impli r k1 e dr k e put piec togeth e kb 1k da w dr r k1 e dr r k1 e dr e e r k1 e r dr substitut 11k first integr give 11kz k1 e z dz e thu e e henc lim k e obtain lower bound lim k 34 applic discret model return discret set claim lower bound obtain use method continu model appli discret model well intuit correct sinc continu model may view limit case integr model n arbitrarili long input sequenc omit proof lack space also claim lower bound valid even random algo rithm wherea typic determinist lower bound construct adversari dierent input sequenc tailor algorithm lower bound techniqu provid singl sequenc fit algorithm consequ bound deriv also valid random algorithm seen easili either directli via yao principl see eg 13 load balanc hierarch server 541 4 temporari job section allow temporari job input restrict attent integr model alreadi seen section 25 optim ecompetit algorithm fraction model admit temporari job present algorithm 4competit unweight case 5 competit weight case also show lower bound 3 unweight integr model recal definit h optimum lemma lemma 1 consid job activ upon job js arriv includ job j denot hj valu h defin respect job server satur arriv job j load least khj k constant determin later algorithm pushright assign job rightmost unsatur elig server proposit 12 k 4 whenev job arriv least one elig server unsatur thu take 5competit unweight resp weight model proof begin consid properti certain sequenc number whose role becom evid later consid infinit sequenc defin recurr condit 1 interest valu k sequenc increas monoton solv recurr reveal follow 4 k 4 two root quadrat polynomi k 4 easi see sequenc increas monoton first two case third consid infinit sequenc obey dicult show k chosen increas monoton ie k 4 i2 ks return proposit let k 4 suppos job arriv find elig server satur let j 0 first job let 1 server request show construct two sequenc i0 follow properti 1 2 although server elig job j algorithm assign job right 3 job j i1 distinct arriv j 0 properti 3 state job j 0 preced infinit number job yield contradict alreadi defin defin defin i2 j i1 follow properti 1 impli properti 2 know job arriv total weight activ job assign server least ks optimum lemma lemma 1 least one job must request server whose number least ks one job i2 server request 542 amotz barnoy ari freund joseph seffi naor 41 lower bound show lower bound 3 competit ratio determinist algorithm use essenti construct use 6 context relat machin detail dierent though owe dierent natur two problem complet present construct full detail consid unweight model motiv construct suppos valu opt known advanc consid algorithm assign job rightmost elig server whose current load less k opt k 1 appropri chosen constant design input sequenc target specif algorithm shall see lower bound 3 obtain use input sequenc valid onlin algorithm use algorithm motiv construct recal righttoleft input sequenc sequenc j request server j made request server input sequenc righttoleft focu principl cost rigor shall refer either server simpli server also refer server x without worri fact x may noninteg simplifi matter design sequenc opt 1 chang later figur 3 depict first step ensu construct 1 kn 2 kn kn fig 3 first two round input sequenc start make request server n sinc opt alreadi known algorithm lose noth make n request maximum permit 1 algorithm assign job server n1 1 remov n job determin shortli natur job remov one assign rightmost algorithm remain n1 job one assign server n1 1 k adversari assign job server n n valu determin desir remain job assign algorithm strictli left assign adversari end select k1 solv equat n proceed second round job logic choic request server n make n request maximum permit opt 1 algorithm assign job rang n1 1 n job one assign rightmost algorithm remain n job assign adversari rang n n algorithm rang determin solv n1 1 load balanc hierarch server 543 b fig 4 ith round solid rectangl repres assign activ job begin round dot rectangl repres assign job arriv ith round subsequ depart algorithm assign b adversari assign n arriv gener procedur note number job arriv given round chosen equal number job depart round preced let us introduc notat denot r server request made ith round f leftmost server job get assign algorithm alreadi chosen r n seen n ith round job suppos follow two condit hold end round 1 see figur 4 1 adversari assign activ job assign rang 2 algorithm assign activ job arriv round occupi server f i1 r job assign left f i1 ith round r request made server r assign algorithm rang f f i1 thu r next r i1 job depart r i1 chosen r r i1 remain job occupi server f r i1 thu kr equival f i1 actual lower bound construct follow let onlin algorithm purport kcompetit k 3 without loss gener k ration number arbitrarili close 3 consid two sequenc defin simultan substitut k i1 i1 second recurr get i1 shown see 6 exist minim integ p p 0 ration number server use n integ recurr defin hold f r well let c posit integ construct input sequenc unit weight job 1 cr 1 job request server r 1 2 3 cr i1 job request server r i1 cr job assign rightmost depart tie broken arbitrarili 4 cr new job request server r lower bound proof proce follow omit proof lack space input sequenc well defin must r 13 figur 4 denot j set job request server r j set cr i1 job j eventu depart let w number activ job assign left server time denot moment time immedi prior arriv job j observ recurr f r i1 equival r 15 suppos algorithm kcompetit w r corollari 16 algorithm kcompetit 5 tree hierarchi section studi gener problem server form root tree job request server may assign ts ancestor tree let us introduc terminolog server said lower proper ancestor trunk defin set server u set u ancestor server u server elig given job form path also trunk refer interchang job elig path elig trunk given input sequenc denot w total weight job request server trunk let trunk denot w max maximum weight job sequenc note analog linear hierarchi follow lemma prove manner similar proof optimum lemma linear hierarchi lemma 1 lemma 17 optimum lemma tree hierarchi fraction model unweight integr model weight integr model 51 doubl algorithm olin algorithm use proof optimum lemma lemma 17 nearli valid onlin algorithm olin featur requir valu h known outset thu employ standard doubl techniqu see eg 4 easili construct onlin algorithm respect 4 4 7competit fraction unweight integr weight integr model algorithm present base sophist doubl approach pioneer 12 4 4 5competit respect case random version algorithm respect e e e start describ algorithm weight integr model algorithm use two variabl guess hold current estim h limit deter load balanc hierarch server 545 mine satur threshold server satur load least limit say set server u satur everi server u satur set u overload total weight assign server u greater u limit newli arriv job danger assign lowest unsatur elig server overload trunk particular elig trunk satur job danger algorithm avoid overload trunk increment limit whenev danger job arriv turn guarante whenev job arriv least one elig server unsatur note assign job may satur server assign algorithm doubl initi upon arriv first job 1 let w first job weight elig trunk 2 guess wt limit guess job 3 job danger 4 guess 2 guess 5 limit limit guess 6 assign job lowest unsatur elig server divid algorithm execut phase new phase begin whenev line 45 execut arriv heavi job may trigger success sever empti phase let p number phase denot guess limit respect valu guess limit ith phase consist defin note initi valu guess ensur guess 1 h proposit 18 guess h ith phase last one consequ guess p 2h proof suppos guess h consid begin ith phase claim moment onward algorithm encount danger job suppos true let us stop algorithm first danger job encount assign job manual lowest unsatur elig server overload trunk r let maxim trunk contain r r satur clearli overload well total weight assign greater limit hand overload end 1st phase sinc algorithm never overload trunk thu total weight job assign ith phase includ job assign manual greater limit limit i1 maxim job must request server thu total weight job request server greater h yield contradict corollari 19 cost 4opt proof claim follow sinc cost limit thu algorithm doubl 4competit unweight integr model 5competit weight integr model fraction model modifi algorithm follow job call danger elig path satur assign job may split proof optimum lemma linear hierarchi lemma 1 algorithm achiev cost limit p 4opt 52 random doubl consid random oblivi ad versari random techniqu use fairli standard similar idea use sever time dierent context see eg 11 19 15 12 10 idea random initi valu guess tweak doubl pa ramet specif let r random variabl uniformli distribut 0 1 select constant k 1 replac line 2 4 shown e limit see 12 10 detail express minim e h put e thu e algorithm ecompetit fraction unweight integr model e1competit weight integr model 53 lower bound temporari job contrast linear hierarchi allow temporari job tree hierarchi drastic eect competit solut unweight integr model show determinist random lower bound n 11 1 respect bound tight multipl constant demonstr upper bound shown 6 gener problem unrestrict elig constraint random lower bound construct appli fraction model well 531 determinist lower bound integr model let determinist onlin algorithm let 1 show input sequenc assign satisfi cost k server tree use flowerlik structur compos stem petal stem consist k server 1 2 root parent 1 petal children k server k call calyx suppos competit better k given n consid follow request sequenc let c arbitrarili larg integ 1 2 job unit weight request petal p 3 job ck depart rest perman choic job depart made maxim number job assign p depart 4 ck job request calyx first stage line 13 adversari alway assign perman job petal temporari one server stem c job server thu begin second stage job assign stem server adversari assign c new job thu consid job request p sinc better kcompetit assign fewer ck job p thu iter c perman job assign server stem henc begin second stage ck 2 job assign server stem sinc addit ck job must assign server stem least one server must end load greater ck contradict assumpt better k competit load balanc hierarch server 547 532 random lower bound let us gener previou construc tion use flowerlik server tree p petal stem server input sequenc two stage first consist p iter ith iter c request petal p c depart second stage cs job request calyx goal first stage push enough job stem algorithm fail second stage consid ith iter let x j random variabl denot contribut jth job load server stem integr model 01 variabl fraction model x j may assum valu 0 1 sinc algorithm better kcompetit expect total weight assign p less ck e j k thu exist c job c cs1ks1 adversari make job perman termin rest consequ begin second stage expect total load server stem greater cp 1 end second stage expect grow cs algorithm better kcompetit expect maximum load server stem must less ck thu expect total load server stem must less ck reach contradict choos p satisfi solv equat yield ks 2 minim n fix subject last equat yield 6 elig restrict hierarch server problem set elig server job restrict form exampl linear hierarchi follow form server left server special case problem consid 7 elig set may arbitrari section studi variou restrict elig set focu follow three 1 server form path set server elig given job must contigu path 2 server form root tree job specifi node v whose descend includ v elig 3 number server elig given job k fix show extend log n lower bound 7 three variant problem show greedi algorithm olog ncompetit gener problem remain optim multipl constant mani restrict scenario first variant consid follow input sequenc conveni assum n power 2 otherwis consid first 2 log n server path job unit weight arriv log n round ith round consist specifi set elig server set chosen first round server elig 548 amotz barnoy ari freund joseph seffi naor defin construct i1 follow suppos total weight assign server end ith round least ni2 certainli case 1 set contigu ie server form path least half total weight assign assign either first half path second half defin i1 half major weight assign break tie arbitrarili thu total weight assign i1 end 1st round least n2 defin log n1 manner call singl server compris leader load leader end last round least 1log n adversari assign job ith round server i1 one job server thu opt 1 lower bound follow second variant use similar construct server arrang complet binari tree number job ith round defin recurr 1 set elig server defin follow first round server elig let v root subtre defin i1 subtre root child v weight assign end ith round third variant use recurs construct partit server nk subset k server appli construct first variant subset load leader subset log k continu recurs set leader level recurs increas load leader level log k log k n log n log level thu log n level recurs adversari assign weight leader one job server henc opt 1 lower bound follow r handbook mathemat function better bound onlin schedul competit onlin assign new algorithm ancient schedul problem better lower bound onlin schedul new algorithm relat machin temporari job yet linear search problem lower bound onlin schedul uniformli relat machin improv approxim ratio minimum latenc problem bound certain multiprocessor anomali better algorithm ancient schedul problem onlin resourc minim tr ctr pilu crescenzi giorgio gambosi gaia nicosia paolo penna walter unger onlin load balanc made simpl greedi strike back journal discret algorithm v5 n1 p162175 march 2007 onlin algorithm channel assign problem cellular network discret appli mathemat v137 n3 p237266 15 march 2004