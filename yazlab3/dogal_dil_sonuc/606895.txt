largescal activeset boxconstrain optim method spectral project gradient new activeset method smooth boxconstrain minim introduc algorithm combin unconstrain method includ new linesearch aim add mani constraint work set singl iter recent introduc techniqu spectral project gradient drop constraint work set global converg prove comput implement fulli describ numer comparison assess reliabl new algorithm b introduct problem consid paper consist minim smooth bound variabl feasi depart comput scienc imeusp univers sao paulo rua matao 1010 cidad universitaria 05508090 sao paulo sp brazil author support pronexoptim 7679100800 fapesp grant 99080299 01045974 cnpq grant 300151004 email egbirginimeuspbr depart appli mathemat imeccunicamp univers campina author support pronex optim 7679100800 fapesp grant 01045974 cnpq faepunicamp email martinezimeunicampbr ble set dene boxconstrain minim algorithm use subalgorithm solv subproblem appear mani augment lagrangian penalti method gener constrain optim see 11 12 16 17 18 19 20 21 26 28 31 promis novel applic reformul equilibrium problem see 1 refer therein method introduc 11 26 trustregion type iter x k 2 quadrat approxim f minim trustregion box object function valu trial point sucient smaller fx k trial point accept otherwis trust region reduc dierenc 11 26 11 trial point face dene cauchi point wherea 26 trial point obtain mean specic boxconstrain quadrat solver call quacan see 2 15 23 25 31 13 p 459 trustregion method boxconstrain optim introduc 3 29 quacan activeset method use conjug gradient within face approxim internalfac minim project add constraint activ set orthogonaltothefac direct leav current face approxim minim face met 17 clever physic interpret direct given numer experi 16 suggest ecienc algorithm 26 reli trustregion strategi strategi quacan deal constraint motiv us adapt strategi quacan gener boxconstrain problem adapt involv two main decis one hand one need choos unconstrain minim algorithm deal object function within face hand necessari dene robust ecient strategi leav face add activ constraint attempt rst decis made 6 10 10 secant multipoint minim algorithm use 6 author use secondord minim algorithm zhang xu 36 paper adopt leavingfac criterion 6 employ spectral project gradient dene 7 8 see also 4 5 32 33 34 intern minim face introduc new gener algorithm line search combin backtrack extrapol compromis everi linesearch algorithm accuraci local onedimension minim economi term function evalu backtrackinglik linesearch algorithm cheap sometim tend gener excess small step reason backtrack complement simpl extrapol procedur direct chosen step arbitrari provid angl condit satis implement describ paper suggest choos direct use truncatednewton approach mean search vector approxim minim quadrat approxim function current face use conjug gradient nd direct rst iter obvious descent direct properti easili monitor success conjug gradient step present research organ follow section 2 describ unconstrain minim algorithm deal minim function box algorithm use new linesearch techniqu due techniqu possibl prove either method nish point boundari perhap mani constraint ad converg point box gradient vanish boxconstrain algorithm describ section 3 essenti use algorithm section 2 work within current face spectral project gradient 7 leav constraint spectral project gradient techniqu also allow one leav mani bound add mani other work set singl iter featur import largescal calcul section prove global converg boxconstrain algorithm comput descript code gencan given section 4 section 5 show numer experi use cute collect section 6 report experi use larg problem 10 7 variabl final section 6 make nal comment suggest line futur research section assum f ir ug set b repres close face section 3 dimens n section dimens reduc subspac section 3 gradient section compos deriv respect free variabl section 3 hope use notat rf section lead confus denot object dene gener iter algorithm start interior b either converg unconstrain stationari point nish boundari b decreas function valu algorithm use within face boxconstrain method algorithm 21 base line search armijolik condit extrapol given current point x k descent direct k nish line search x k k satis sucient descent criterion direct deriv sucient larger hgx k k sucient descent criterion hold backtrack obtain sucient descent increas direct deriv enough tri extrapol let us explain think philosophi adequ largescal boxconstrain optim 1 pure backtrack enough prove global converg mani optim algorithm howev accept rst trial point satis armijo condit lead small step critic situat therefor step larger uniti must tri indic say worthwhil 2 direct deriv sucient larger consid much decreas increas steplength direct k accept unit steplength provid satis armijo condit reason sinc usual search direct contain amount secondord inform make unitari steplength desir point view preserv satisfactori order converg 3 unitari steplength satisfi armijo condit backtrack case judg worthwhil comput gradient new trial point would discard point accept 4 extrapol especi use largescal problem import tri add mani constraint possibl work set extrapol rather greedi way multipli steplength xed factor function valu decreas 5 think algorithm present simpl way extrapol devic introduc reason balanc cost ecienc import stress line search coupl virtual minim procedur comput descent direct z 2 ir n euclidean project z onto convex set denot p z section denot p symbol k k repres euclidean norm throughout paper algorithm 21 linesearch base algorithm algorithm start x 0 2 intb nondimension paramet given also use small toler ab rel 0 initi set k 0 step 1 comput search direct step 11 kg k step 12 comput step 2 linesearch decis step 21 comput set minf go step 22 els go step 23 step 22 point x k take go step 5 els go step 3 extrapol els go step 4 backtrack step 23 point x k take k max x fx k1 go step 5 practic point obtain perform step 3 algorithm extrapol els go step 4 backtrack step 3 extrapol step 31 max n max set trial max els set trial n step 32 max kp take execut algorithm 21 step 33 fp take step 5 els set trial go step 31 step 4 backtrack step 41 comput new step 42 fx k take go step 5 els go step 41 step 5 k max termin execut algorithm 21 els set step 1 remark let us explain main step algorithm 21 motiv algorithm perform linesearch along direct satisfi anglecosin condit 2 gener line search use direct possess secondord inform nat ural step must initi test accept sucientdesc directionalderiv condit 3 4 satis rst test step 21 ask whether x k interior box case fx k tri obtain smaller function valu multipli step xed factor project onto box procedur call extrapol x k interior backtrack interior armijo condit 3 hold also backtrack backtrack stop armijo condit 6 fulll 3 hold test direct deriv condit 4 mention 4 satis accept x k new point howev 3 hold 4 judg like take larger step along direct k produc decreas object function case also extrapol extrapol procedur tri success project x k k onto box increas valu entri point interior x k nd k make sure point x test rst extrapol nish decreas function obtain anymor distanc two consecut project trial point neglig iter algorithm 21 nish step 5 correspond iter x k1 boundari b algorithm stop encount boundari point function valu decreas respect previou one x k1 interior b execut continu increas iter number uxdiagram figur 1 2 help understand structur linesearch procedur xd int aaamax line search bbcondit xnewxd end armijo backtrack extrapol figur 1 line search procedur extrapol aamax dist ee aaaatrial aatrialnnaa aamax nna aamax fpxaatrial xnewpxaad end figur 2 extrapol strategi follow theorem prove sequenc gener algorithm 21 either stop unconstrain stationari point stop boundari b gener limit unconstrain stationari point theorem 21 algorithm 21 well dene gener point strictli decreas function valu fx k g sequenc gener algorithm 21 one follow possibl hold sequenc stop x k gx k ii sequenc stop x iii sequenc innit least one limit point everi limit point x satis gx proof let us prove rst algorithm well dene gener sequenc strictli decreas function valu see well dene prove loop step 3 4 necessarili nish nite time fact step 3 multipli nonnul direct k number greater one take maximum allow feasibl step therefor eventu boundari reach increas condit 5 met loop step 4 classic backtrack loop nish wellknown direct deriv argument see 14 exit algorithm alway requir fx k sequenc strictli decreas remain prove neither ii hold cluster point x gener sequenc satis gx innit subset lim suppos rst ks k k bound away zero k 2 k 1 therefor exist 0 ks k k k 2 k 1 3 6 k 2 k 1 therefor 2 continu f impli lim k2k 1 suppos ks k k bound away zero k 2 k 1 exist k 2 innit subset k 1 lim k2k 2 ks set indic k comput step 22 analog let k 4 k 2 set indic k comput step 3 k 2 k 4 let k 5 k 2 set indic k comput step 4 k 2 k 5 consid three possibl k 3 innit ii k 4 innit iii k 5 innit consid rst case 4 ks ks k 2 k 3 sinc k 3 innit take converg subsequ take limit 7 use continu obtain sinc 2 0 1 impli hgx di 0 2 continu consid case iii case k 5 innit k 2 k 5 exist 0 k ks 0 ks k 10 lim ks 0 9 k 2 k 5 meanvalu theorem exist k 2 0 1 k 2 k 5 divid ks 0 k k take limit converg subsequ obtain inequ similar 8 gx follow argument consid case ii sinc consid case innit sequenc gener turn 5 p moreov step 31 trial n p therefor k 2 k 4 write 0 0 therefor meanvalu theorem k 2 k 4 exist k 2 k thu k 2 k 4 sinc 0 divid kd k k take converg subsequ k kd k k obtain hgx di 0 2 take limit get hgx di kgx k impli complet proof 2 3 boxconstrain algorithm problem consid section minim fx subject x given 1 23 let us divid feasibl set disjoint open face follow smallest ane subspac contain f parallel linear subspac v continu project gradient xi dene x 2 f dene g p x main algorithm consid paper describ algorithm 31 gencan assum x 0i arbitrari initi point 2 0 1 0 min face contain current iter x k assum g p otherwis algorithm termin main iter algorithm perform test kg 13 take place judg conveni new iter belong f closur f comput x k1 one iter algorithm 21 set variabl restrict free variabl f set b previou section correspond f 13 hold decid constraint abandon new iter x k1 comput one iter spg method describ algorithm 32 case comput x k1 comput spectral gradient coecient k follow way otherwis dene algorithm 32 algorithm use necessari leav current face accord test 13 algorithm 32 spg comput next iter monoton spg iter 7 8 spectral step k name dene search direct k comput x way tri rst perhap reduc coecient mean safeguard quadrat interpol procedur remark observ x f x k 2 f x k1 comput algorithm 32 case 13 hold kg p compon correspond free variabl g mean g p compon correspond xed variabl therefor f 0 f 0 accord spg iter 0 0 0 impli x f nish section give theoret result roughli speak prove algorithm well dene karushkuhntuck point comput arbitrari precis moreov dual nondegeneraci innit algorithm identi face limit belong nite number iter theorem 31 algorithm 31 well dene proof trivial consequ fact algorithm 21 algorithm 32 spg algorithm 7 well dene 2 theorem 32 assum fx k g gener algorithm 31 suppos exist k 2 f0 k k everi limit point fx k g rstorder stationari proof case x k1 comput algorithm 21 k k thu theorem 21 gradient respect free variabl tend zero straightforward project argument follow kg sinc 13 hold impli kg p everi limit point rstorder stationari 2 theorem 33 suppos k 2 f0 exist x k exist limit point fx k g rstorder stationari proof see theorem 33 6 2 theorem 34 suppos stationari point 12 nondegen erat f hypothesi theorem 32 henc thesi must hold proof see theorem 34 6 2 theorem 35 suppos fx k g sequenc gener algorithm 31 let arbitrari posit number exist k 2 f0 kg p proof result direct consequ theorem 32 33 2 implement iter k algorithm 21 current iter x k look direct k satisfi condit 2 use truncatednewton approach comput direct solv newtonian system call algorithm 41 describ r 2 fx k follow algorithm appli problem initi approxim solut 14 algorithm nd point solut satis qs qs 0 perhap nal point boundari region dene ksk l u algorithm 41 conjug gradient paramet 1 k max 2 given algorithm start step 1 test stop criteria set step 2 comput conjug gradient direct step 21 els comput step 22 p step 3 comput step step 31 comput ug step 32 comput step 33 step 4 comput new iter step 41 comput step 42 b k1 kbkk k1 set step 43 set step 5 comput set step 1 algorithm modic one present 27 p 529 symmetr posit denit matric without constraint modic follow step 22 test p k descent direct k ie hp k rq k forc condit multipli p k 1 necessari matrixvector product comput exactli safeguard necessari howev mani case matrixvector product ap k replac nitedier approxim reason perform test order guarante quadrat decreas along direct p k step 33 test p inequ hold step k direct p k comput minimum among conjugategradi step maximum posit step preserv feasibl rst iter cg set k max way cg stop angl condit step 42 iter zero cg keep current approxim solut 14 obtain far step 42 test whether angl condit 2 satis new iter condit fulll stop algorithm previou iter also stop algorithm boundari feasibl set achiev step 43 converg criterion conjugategradi algorithm dy namic vari linearli logarithm norm continu project gradient begin valu nish f dene log log use stop criterion kg p xk 1 algorithm 31 paramet k max maximum number cgiter call conjugategradi algorithm also vari dynam way iter allow end process begin reason want invest larger eort solv quadrat subproblem close solut far fact log incrementalquoti version gencan r 2 fx k comput matrixvector product r 2 fx k approxim fact compon correspond free variabl comput exist xed variabl conveni exploit 15 5 numer experi cute collec tion order assess reliabl gencan test method wellknown altern algorithm use nonquadrat bound constrain problem 50 variabl cute 12 col lection algorithm use compar gencan box quacan 26 see also 28 lancelot 11 12 spectral project gradient method spg describ spg2 7 see also 8 method use converg criterion kg p stop criteria inhibit gencan use algorithm 31 algorithm 41 algorithm use paramet line search algorithm 32 default paramet mention 7 use line search algorithm 21 ie lancelot use exact second deriv use precondit conjugategradi method reason gencan conjug gradient method comput direct also use without precondit option lancelot default one small number modic made boxquacan provid fair comparison modic initi trustregion radiu gencan adopt ii maximum number conjugategradi iter xed accuraci solv quadrat subproblem dynam box quacan vari 01 10 5 done gencan iv minimum trustregion radiu min xed 10 3 equal correspond paramet gencan code written fortran 77 test done use ultrasparc sun 4 processor 167 mhz 1280 mega byte main memori solari 251 oper system compil workshop compil 42 oct 1996 fortran 77 42 final use ag o4 optim code rst four tabl report full perform lancelot spg boxquacan gencan true hessian gencan increment quotient usual denit iter lancelot involv one function evalu howev order unifi comparison call iter whole process comput new iter lower function valu start current one therefor singl lancelot iter involv one gradient evalu perhap sever function evalu iter sever trustregion problem solv approxim use number cgiter problem hadam scon1l bound lower limit equal upper limit boxquacan run circumst perform method situat report correspond tabl tabl report method number iter fe function evalu ge gradient evalu cg conjug gradient iter except case spg cg iter comput time cpu time second nal function valu obtain project gradient nal point next 3 tabl repeat inform rst one compact readabl form tabl 5 report nal function valu obtain method case least one dierenc comput four signic digit tabl 7 report method number fe gecg idea cg iter sometim costli gradientevalu cost certainli use incrementalquoti version gencan roughli speak gecg repres amount work use solv subproblem fe repres work done true problem tri reduc object function tabl 8 report comput time problem least one method use 1 second comput time use lancelot must consid warn made 9 page 136 lancelot requir interfac use cute tool worth note lancelot exploit much structur problem n fe ge cg time fx kg p xk1 6467d 06 qrtquad 120 144 178 145 570 139 3625d06 3505d 06 chebyqad 50 22 28 23 463 222 5386d 7229d 06 linvers 1999 22 28 23 2049 4722 6810d02 3003d 06 tabl 1 perform lancelot provid interfac tool consequ although gencan use less iter less function evalu less gradient evalu less conjugategradi iter lancelot scon1l comput time greater one spent lancelot problem like qr3dl chebyqad way lancelot take advantag sif structur also impress includ addit tabl motiv observ tabl 7 observ number function evalu per iter larger gencan lancelot box quacan possibl reason three mani spgiter perhap mani function evalu per iter mani tniter backtrack mani tniter extrapol classifi iter extrapol success unsuccess one success extrapol iter extrapol produc function valu smaller one correspond rst problem n fe ge time fx kg p xk1 7896d 06 qrtquad 120 598 1025 599 020 3624d06 8049d 06 hadam 1024 chebyqad 50 841 1340 842 3375 5386d 9549d 06 nonscomp 10000 43 44 44 281 3419d 10 7191d 06 tabl 2 perform spg trial point unsuccess extrapol correspond failur rst attempt doubl steplength therefor unsuccess ex trapol addit unnecessari function evalu done next iter correspond rst trial point accord report tabl 9 follow featur gencan incrementalquoti spgit spg iter use leav current face spgfe function evalu spgiter tnit tn iter tnfe function evalu tniter tnstep 1it tniter unitari step accept tnstep 1fe function evalu tniter unitari step accept necessarili equal tnstep 1 tnbacktrackingit tniter backtrack necessari problem n fe ge cg time fx kg p xk1 5742d 06 expquad 120 28 523 9133d03 6388d 07 qrtquad 120 22 28 23 214 010 3625d06 5706d 07 chebyqad 50 52 66 53 960 4570 5387d 9535d 06 6559d 06 tabl 3 perform boxquacan tnbacktrackingf function evalu iter backtrack tnextrapit success iter extrapol tnextrapf function evalu success iter extrapol tnextrap unsuccess iter extrapol tnextrap fe function evalu unsuccess iter extrapol number necessarili equal twice correspond number iter problem n fe ge cg time fx kg p xk1 expquad 120 3813d 06 nonscomp 10000 17 43 19 9053d 06 tabl 4 perform gencan truehessian version problem n fe ge cg time fx kg p xk1 explin 120 17 43 19 expquad 120 21 51 23 53 003 3626d06 2236d 06 chebyqad 50 31 43 2929d 06 nonscomp 10000 tabl 5 perform gencan incrementalquoti version bdexp 1969d 2744d 1967d qrtquad 3625d06 3624d06 3625d06 3625d06 3625d06 chebyqad 5386d 5386d 5387d 5386d 5386d deconvb 6393d 09 4826d 08 5664d 6043d qr3dl 2245d 08 1973d 05 1450d scon1l 5981d 04 1224d00 1269d 4549d 04 tabl final function valu problem lancelot spg boxquacan gencanquot fe gecg fe ge fe gecg fe gecg 43 58 43 expquad qrtquad 178 715 1025 599 28 236 75 101 chebyqad 28 486 1340 842 66 1012 43 918 28 2072 1853 1023 19 415 34 87 scon1l 9340 5750468 7673022 5000002 8565 4995260 tabl 7 function equivalentgradi gecg evalu mccormck 424 227 523 457 356 hadam 440 163 180 119 chebyqad 222 3375 4570 1386 2226 qr3dl 43931 220397 228609 97613 52350 tabl 8 comput time type gencan iter detail truncat newton iter spg iter tn iter step1 backtrack extrap extrap problem fe fe fe fe fe fe tabl 9 gencan featur observ tabl 9 realis 1 number spgiter surprisingli small therefor iter mechan leav face activ iter number activ constraint remain increas clearli spgiter respons rel high number function evalu 2 number iter backtrack necessari also surprisingli small therefor extrapol respons functionalevalu phenomenon sinc unsuccess extrapol use one addit unnecessari function evalu contribut increas fe also moder fact unsuccess extrapol respons 116 function evalu consid problem mean less 8 evalu per problem turn mani function evalu use success extrapol consid overal perform method seem realli good featur extrem case bdexp one tniter perform give success extrapol use 11 function evalu gave solut problem remark converg obtain problem method test except spg solv scon1l thirti hour comput time method case obtain lowest function valu gencanquot dier enc seem larg enough reveal clear tendenc alreadi mention 7 behavior spg surprisingli good although method fail solv problem reason time behavior problem work quit ecient indic exist famili problem spg probabl best possibl altern observ alreadi made 8 boxquacan less success method set ex periment surpris sinc author 16 observ method outperform lancelot quadrat problem good function far quadrat fact observ motiv present work nevertheless still larg scope improv boxquacan far take account improv solut quadrat subproblem possibl sophist strategi updat trustregion radiu incorpor 6 experi larg problem wish place q circl radiu r rectangl 0 1 way qg intersect circl circl j one point therefor given goal determin c solv problem minim subject r c r c point c center desir circl object function valu solut minim problem zero origin problem solv problem known cylind pack problem 22 present gener direct sociometri applic tabl describ main featur medium larg scale problem type problem 915 set randomli gener schrage random number gener 35 seed 1 case use 05 observ n number variabl equal 2 q tabl 11 12 show perform gencan lancelot intern limit bigproblem instal cute forbid solut larger instanc problem use sif show cpu problem n box tabl 10 medium largescal classic modi cylind pack problem time gencan use sif siftim fortran subroutin fs comput function gradient use random initi point gener insid box schrage algorithm seed equal 1 method found global solut case tabl 12 also report number free variabl solut far found gencan gencan use fortran subroutin use sif lancelot fe ge cg time fe ge cg time fe ge cg time tabl 11 gencan lancelot cylind pack problem 9 28 1064979 9914682 tabl 12 gencan larg problem 7 final remark numer algorithm must analyz point view present state also consider relat possibl im provement chanc improv activeset method like one present paper come develop new unconstrain algorithm adapt known unconstrain algorithm specic characterist problem algorithm comput search direct open mani possibl mention introduct secant multipoint scheme dierent procedur leav face consid 10 negativecurvatur newtonian direct small problem use 6 leav face also associ spg particularli interest altern precondit spectral project gradient method introduc 30 extens techniqu paper gener linearli constrain optim anoth interest subject possibl research theoret point view extens straightforward converg proof oer technic diculti real diculti need project onto feasibl set extrapol step spg iter theori extrapol avoid without aect global converg project essenti spg iter sometim feasibl polytop project easi comput see 8 case extens gencan would probabl quit ecient acknowledg author grate nick gould help use sif languag also indebt two anonym refere whose comment help us lot improv nal version paper r resolut gener nonlinear complementar problem limit memori algorithm bound constrain minim restrict opti mizat clue fast accur implement common ection surfac stack method cute constrain unconstrain test environ global converg class trust region algorithm optim simpl bound global converg augment lagrangean algorithm optim gener constraint simpl bound numer method unconstrain optim nonlinear equat compar numer perform two trustregion algorithm largescal boundconstrain minim optimis palletis cylind case matrix comput precondit spectral gradient method unconstrain optim problem barzilai borwein choic steplength gradient method barzilai borwein gradient method larg scale unconstrain minim problem portabl fortran random number gener class ind tr global converg class trust region algorithm optim simpl bound global converg augment lagrangian algorithm optim gener constraint simpl bound limit memori algorithm bound constrain optim matrix comput 3rd ed gradient method retard gener estim optic constant thick thin film use unconstrain optim portabl fortran random number gener trustregion method valid augment lagrangian algorithm gaussnewton hessian approxim use set hardspher problem dualitybas domain decomposit natur coarsespac variat inequalities0 algorithm 813 resolut gener nonlinear complementar problem class indefinit dogleg path method unconstrain minim barzilai borwein gradient method larg scale unconstrain minim problem nonmonoton spectral project gradient method convex set newton method larg boundconstrain optim problem constrain quadrat program proport project augment lagrangian adapt precis control quadrat program equal constraint ctr g birgin j martnez structur minimalmemori inexact quasinewton method secant precondition augment lagrangian optim comput optim applic v39 n1 p116 januari 2008 g birgin r castillo j martnez numer comparison augment lagrangian algorithm nonconvex problem comput optim applic v31 n1 p3155 may 2005 g birgin j martnez f h nishihara p ronconi orthogon pack rectangular item within arbitrari convex region nonlinear optim comput oper research v33 n12 p35353548 decemb 2006