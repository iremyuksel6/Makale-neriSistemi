fast estim diamet shortest path without matrix multipl recent past consider progress devis algorithm allpair shortest path apsp problem run time significantli smaller obviou time bound on3 unfortun new algorithm base fast matrix multipl algorithm notori impract work motiv goal devis pure combinatori algorithm match improv run time result come close achiev goal present algorithm small addit error length path obtain algorithm easi implement desir properti combinatori natur hidden constant run time bound fairli smallour main result algorithm solv apsp problem unweight undirect graph addit error 2 time on25sqrtlog n algorithm return actual path distanc addit give effici algorithm run time footnotes on15 sqrtk log n case requir determin shortest path k specifi pair vertic rather pair vertic start point result om sqrtn log n algorithm distinguish graph diamet 2 4 later extend obtain ratio 23 approxim diamet time om sqrtn log n n unlik case apsp result approxim diamet comput extend case direct graph arbitrari posit real weight edg b introduct consid problem comput allpair shortest path apsp unweight undirect graph g n vertic edg recent work alon galil margalit agm91 alon galil margalit naor agmn92 seidel sei92 led dramat progress devis fast algorithm problem algorithm base formul problem term matric small integ entri use fast matrix multipl achiev time bound denot expon run time matrix multipl algorithm use current best matrix multipl algorithm due coppersmith winograd cw90 contrast naiv algorithm apsp perform breadthfirst search vertex requir time thetanm given fundament natur problem import consid desir implement algorithm practic unfortun fast matrix multipl algorithm far practic suffer larg hidden constant run time bound consequ adopt view treat result primarili indic exist effici algorithm consid question devis pure combinatori algorithm apsp run time 3gammaffl admittedli vagu term combinatori algorithm intend contrast algebra flavor algorithm base fast matrix multipl understand distinc depart comput scienc stanford univers email donaldcsstanfordedu support nsf graduat fellowship nsf grant ccr9357849 depart comput scienc stanford univers email chekuricsstanfordedu support otl grant nsf grant ccr9357849 z depart comput scienc stanford univers email rajeevcsstanfordedu support alfr p sloan research fellowship ibm faculti develop award otl grant nsf young investig award ccr 9357849 match fund ibm schlumberg founda tion shell foundat xerox corpor 1 notat ofn denot ofn polylogn tion believ instruct tri interpret algebra algorithm pure graphtheoret term even use simpler matrix multipl algorithm strassen str69 current best known combinatori algorithm due feder motwani fm91 run time yield margin improv naiv algorithm take step direct realiz goal outlin present algorithm solv apsp problem addit error 2 time 25 log n algorithm return actual path distanc note run time better practic matrix multipl algorithm strassen str69 use 281 algorithm describ earlier explain also give slightli effici algorithm spars graph approxim diamet algorithm easi implement desir properti combinatori natur hidden constant run time bound fairli small result present case unweight undirect graph gener case undirect graph small integ edg weight detail provid final version paper crucial step develop result shift focu problem comput diamet graph maximum pair vertic shortest path distanc ver tice diamet determin comput allpair shortest path apsp distanc graph appear known way solv diamet problem fact fan chung chu87 earlier pose question whether 3gammaffl algorithm find diamet without resort fast matrix multipl situat regard combinatori algorithm diamet margin better case apsp basch khanna motwani bkm95 present combinatori algorithm verifi whether graph diamet 2 time slight adapt algorithm yield boolean matrix multipl algorithm run time bound therebi allow us verifi diamet graph constant time consid problem devis fast algorithm approxim diamet easi estim diamet within ratio 12 om time perform breadthfirst search bf vertex v let depth bf tree obtain clearli diamet g lie 2d better approxim algorithm known problem fact even known distinguish graph diamet 2 4 first result om log n algorithm distinguish graph diamet 2 4 later extend obtain ratio 23 approxim diamet time om work suggest sever interest direct futur work elementari combinatori algorithm run time 3gammaffl distinguish graph diamet 2 3 belief problem effici comput diamet solv given decis algorithm work provid evid support belief fact view bottleneck obtain faster combinatori apsp algorithm precis problem distinguish graph diamet 2 3 also rais question whether strong equival diamet apsp problem eg complex within polylogarithm factor final cours remov addit error result remain major open problem rest paper organ follow begin present definit use observ section 2 section 3 describ algorithm distinguish graph diamet 2 4 extens obtain ratio 23 approxim diamet section 4 appli idea develop estim diamet obtain promis algorithm addit approxim apsp final section 5 present empir studi perform algorithm allpair shortest path preliminari basic algorithm present notat result concern domin set graph underli algorithm definit respect fix undirect graph gv e n vertic edg definit 21 distanc du v two vertic u v length shortest path definit 22 diamet graph g defin max uv2g du v denot diamet graph g delta definit 23 kneighborhood n k v vertex v set vertic v distanc k v ie degre vertex v denot final use notat n denot set vertic distanc 1 v import keep mind set n v contain neighbor v also includ v definit 24 vertex v 2 v denot bv depth bf tree g root vertex v throughout paper work paramet chosen later serv threshold classifi vertic low degre high degre threshold implicit follow definit definit 25 defin lv sg hv sg follow gener standard notion domin set definit 26 given set v set b v domin set vertex vertex n b one neighbor b follow theorem underli algorithm theorem 21 exist domin set hv size os gamma1 n log n domin set found om remark 21 easi see choos set theta gamma1 n log n vertic uniformli random give desir domin set hv high probabl theorem effect derandom result random algorithm proof suppos begin hv interest standard domin set graph g problem comput minimum domin set g reformul set cover problem follow everi vertex v creat set give instanc set cover problem g goal find minimumcardin collect set whose union v given set cover solut c set vertic correspond subset c form domin set g size c vertex v occur one set sw 2 c thu either fast estim diamet shortest path 3 domin set neighbor therein similarli domin set g correspond set cover cardin greedi set cover algorithm repeatedli choos set cover uncov element known provid set cover size within factor log n optim fraction solut joh74 lov75 sinc everi vertex degre least therefor correspond set v cardin least assign weight 1s everi set give fraction set cover total weight fraction size equal gamma1 n thu optim fraction set cover size on greedi set cover algorithm must deliv solut size os gamma1 n log n give domin set g size implement greedi set cover algorithm keep set bucket sort number uncov vertic algorithm shown run time om consid case hv construct graph g ad set dummi vertic g everi vertex new graph degre higher preced argument construct domin set g 0 size os gamma1 ns log n os none new vertic x connect vertic hv restrict domin set v give domin set hv size os gamma1 n log n final run time increas addit new vertic edg sinc total number edg ad ns on get desir time bound 2 rest paper denot domin set hv construct per theorem 3 estim diamet section develop algorithm find estim e 2delta3 e delta first present algorithm distinguish graph diamet 2 4 shown algorithm gener promis approxim algorithm 31 distinguish diamet 2 4 basic idea behind algorithm root follow lemma whose proof straightforward lemma 31 suppos g pair vertic b 4 bf tree root vertex v 2 n n b depth least 3 algorithm call algorithm 2vs4 comput bf tree small set vertic guarante contain vertex one bf tree certifi diamet 2 algorithm 2vs4 1 lv choos v 2 lv b comput bf tree vertic n v 2 els comput domin set hv b comput bf tree vertic 3 endif 4 bf tree depth 2 return 2 return 4 assum algorithm set lv dv provid part input otherwis comput omn time theorem 31 algorithm 2vs4 distinguish graph diamet 2 4 run time om proof clear algorithm output 2 graph diamet 2 sinc graph bf tree depth exceed 2 assum g diamet 4 fix pair vertic 4 show algorithm bf vertex v 2 n n b sinc lemma 31 depth bf tree root v least 3 algorithm output 4 consid two case aris algorithm case 1 lv either b belong n v noth prove bv 2 noth prove therefor case remain b n 2 v see figur 1 sinc da b 4 path b go vertex n 1 v impli sinc comput bf tree vertex n v guarante bf neighbor b complet proof size n v therefor time comput bf tree bound om case 2 lv sinc domin set v follow immedi n n b 6 establish proof correct theorem 21 4 aingworth chekuri motwani v less node figur 1 case 1 algorithm 2vs4 log n impli bound om log n cost comput bf tree case 2 choos log n obtain follow corollari corollari 31 graph diamet 2 4 distinguish om log n time 32 approxim diamet basic idea use algorithm 2vs4 gener estim diamet gener fix two vertic b delta delta diamet graph suppos find vertex v n delta3 n delta3 b clear bv 2delta3 use bv estim find small set vertic guarante vertex n delta3 n delta3 b comput bf tree vertic use maximum depth tree estim e reason choos fraction 13 becom appar analysi algorithm fol low simplifi notat assum delta3 integ gener though analysi need modifi use bdelta3c also assum delta 3 easi see case delta 2 easi handl separ key tool rest algorithm notion partialbf defin term paramet k kpartialbf tree obtain perform usual bf process point exactli k vertic includ root visit lemma 32 kpartialbf tree comput time ok 2 proof number edg examin vertex visit bound k sinc kpartialbf process termin k distinct vertic examin impli total number edg examin ok 2 domin run time 2 note kpartialbf tree contain k vertic closest root set uniqu defin due tie typic k clear context mention explicitli definit 31 let pbf k v set vertic visit kpartialbf v denot pbv depth tree construct fashion approxim algorithm diamet follow algorithm approxdiamet 1 comput spartialbf tree vertex v 2 let w vertex maximum depth 3 comput bf tree vertex 4 comput new graph b g g ad edg form u v u 2 pbf v 5 comput domin set b g 6 comput bf tree vertex 7 return estim e equal maximum depth bf tree step 3 6 follow lemma constitut analysi algorithm lemma 33 domin set found step 5 size os gamma1 n log n proof b g vertex v 2 v adjac vertic pbf v respect graph g everi vertex v degre vertex b g least theorem 21 follow find domin set size os lemma 34 jn delta3 vj vertex proof consid particular vertex v 2 v v noth prove otherwis sinc domin set b g vertex u 2 u v edg b g u v g done sinc u 2 n v ae n delta3 v possibl u neighbor v g must case u 2 pbf v condit jn delta3 vj impli pbf v ae n delta3 v turn impli u 2 n delta3 v henc fast estim diamet shortest path 5 reader notic similar preced lemma case 2 theorem 31 lemma 34 follow gener set cover idea use proof theorem 21 hold even replac delta3 fraction delta crucial lemma given lemma 35 let set vertic v vertex w found step 2 belong addit bw 2delta3 everi vertex v pbf w n delta3 v 6 proof verifi vertex u 2 convers vertex v v n delta3 conclud nonempti vertex largest depth belong also vertex u 2 must n delta3 u ae pbf u bw 2delta3 everi vertex within distanc 2delta3 w fact n delta3 w ae pbf w follow proof lemma make clear reason estim within 23 diamet essenti need ensur deltak neighborhood w intersect deltak neighborhood everi vertex happen bw suffici small small enough want bw good estim balanc condit give us ratio 23 theorem 32 algorithm approxdiamet give estim e 2delta3 om ms ns 2 choos log n give run time om proof analysi partit two case let b two vertic delta case 1 vertic v jn delta3 vj either b done otherwis proof lemma 34 set vertex b sinc step 6 comput bf tree vertex one v bv desir estim case 2 exist vertex v 2 v let w vertex step 2 bw 2delta3 bw estim done otherwis lemma 35 pbf w vertex v 2 n delta3 n delta3 b sinc step 3 comput bf tree vertex pbf w one v bv desir estim run time easi analyz partial bf step 1 take os 2 thu total time spent step 1 on 2 step 2 implement time step 3 comput bf tree vertic requir total om time time requir step 4 domin time requir comput partial bf tree step 1 theorem 21 impli step 5 requir 2 note graph b g could mani edg lemma 33 step 6 take om time final cost step 7 domin cost comput variou bf tree step 3 6 run time domin cost step 1 3 6 ad bound give desir result 2 addit factor approxim possibl determin diamet allpair shortest path distanc within addit error 2 basic idea domin set sinc contain neighbor everi vertex graph must contain vertex within distanc 1 shortest path sinc find small domin set vertic hv treat lv vertic differ low degre allow us manag partialbf combin inform glean domin set algorithm approxapsp comment defin glv subgraph g induc lv 1 initi entri distanc matrix b infin 2 comput domin set hv size 3 comput bf tree vertex v 2 updat b shortest path length v obtain 4 comput bf tree glv vertex shortest path length v obtain 5 u 6 return b apsp matrix largest entri diamet figur 2 illustr idea behind algorithm 6 aingworth chekuri motwani actual shortest path path comput step 5 hi lo bf node lo step bf node step graph hi lo label figur 2 illustr algorithm approxapsp theorem 41 algorithm approxapsp vertic distanc return b satisfi 2 algorithm modifi produc path length b rather mere return approxim distanc algorithm run time choos log n give run time 25 log n proof first show algorithm easili modifi return actual path rather distanc achiev step 3 4 associ updat entri matrix path bf tree use updat step 5 mere concaten two path step 3 sum whose length determin minimum valu vertex u clear shortest path distanc vertex v 2 v return smaller correct valu sinc correspond actual path see differ 2 need consid three case case 1 u 2 case bf tree v comput step 3 clearli distanc return correct case 2 definit must case u neighbor w clearli distanc u w vertex differ 1 distanc w alway correct per case 1 assign step 6 guarante 2 case 3 u 2 lv fix shortest path u v suppos path u v entir contain lv du v set correctli step 4 otherwis path must contain vertex w 2 hv w contain correct distanc comput per case 1 final w 2 hv nd contain neighbor x clearli step 6 one possibl consid involv path u x path x v sinc distanc involv x correctli comput step 3 mean b 2 final analyz run time algo rithm step 1 requir 2 time theorem 21 impli perform step 2 state time bound step 3 requir ms gamma1 n log n comput bf tree step 4 may comput mani omegagamma n bf tree glv on edg requir 2 time final step 5 take vertex pair compar vertic impli desir time bound 2 although error algorithm 2 improv special case distinguish diamet 2 4 base follow two observ fact 41 u 2 hv distanc delta vertex v b proof consid w vertex domin u algorithm set b 5 algorithm would impli b exact vertic possibl 2 fact 42 whenev algorithm report 2 verifi time on per vertex thu perform verif vertic report distanc 2 improv algorithm approxapsp alway perform well diamet approxim algorithm previou section first fact also appear use bring diamet error 1 unfortun vertic lv handl easili larger diamet 5 experiment result evalu use algorithm ran two famili graph compar result care code algorithm base breadthfirst search algorithm approxapsp tweak follow heurist improv step 5 avoid mani needless iter node neighbor copi distanc neighbor sinc differ 1 algorithm call fast approxapsp occasion higher fraction incorrect entri seem fastest way solv allpair shortest path problem fast estim diamet shortest path 7 approxapsp fast approxapsp approxapsp fast approxapsp speedup speedup accuraci accuraci gb median 059 395 069 053 gb averag 244 1018 072 047 gb standard deviat 024 173 016 013 rg median 052 530 039 051 rg averag 063 475 039 055 rg standard deviat 023 170 014 012 tabl 1 summari experiment result first famili graph random graph g nm model bol85 graph chosen uniformli random n vertic edg experi chose random graph n rang 10 1000 2mn 2 rang 003 090 graph fast approxapsp run 5 time faster bf implement half distanc one second famili graph come stanford graphbas knu93 test connect undirect graph appendix c knuth knu93 ignor edg weight heterogen famili graph includ graph repres highway connect american citi athlet schedul 5 letter english word expand graph well combinatori graph thu result quit indic practic perform although bfsbase algorithm run fastest certain subfamili graphbas fast approxapsp outperform algorithm overal result summar tabl 1 tabl gb rg refer graphbas random graph spectiv speedup number indic invers ratio execut time algorithm care code bf algorithm accuraci refer ratio total number exact entri distanc matrix total number entri matrix famili accuraci approxapsp could improv subtract 1 step 5 seem necessari given bf approach perform fast approxapsp fast approx apsp perform faster roughli 50 accuraci number indic gener graph addit factor error accept fast approxapsp algorithm choic specif famili graph paramet adjust even better perform acknowledg grate noga alon comment suggest nati linial help discuss thank also michael goldwass david karger sanjeev khanna eric torng comment r expon pair shortest path problem boolean matrix multipl shortest path diamet verif boolean matrix multipl random graph diamet graph old problem new result matrix multipl via arithmet progress cliqu partit approxim algorithm combinatori problem ratio optim integr allpairsshortestpath problem gaussian elimin optim tr ctr david eppstein joseph wang fast approxim central proceed twelfth annual acmsiam symposium discret algorithm p228229 januari 0709 2001 washington dc unit state mattia andersson joachim gudmundsson christo levcopoulo approxim distanc oracl graph dens cluster comput geometri theori applic v37 n3 p142154 august 2007 tom feder rajeev motwani liadan ocallaghan chri olston rina panigrahi comput shortest path uncertainti journal algorithm v62 n1 p118 januari 2007 alan p spragu o1 queri time algorithm pair shortest distanc permut graph discret appli mathemat v155 n3 p365373 februari 2007 mikkel thorup uri zwick approxim distanc oracl proceed thirtythird annual acm symposium theori comput p183192 juli 2001 hersonisso greec joachim gudmundsson christo levcopoulo giri narasimhan michiel smid approxim distanc oracl geometr graph proceed thirteenth annual acmsiam symposium discret algorithm p828837 januari 0608 2002 san francisco california michael elkin jian zhang effici algorithm construct 1 spanner distribut stream model proceed twentythird annual acm symposium principl distribut comput juli 2528 2004 st john newfoundland canada mikkel thorup uri zwick approxim distanc oracl journal acm jacm v52 n1 p124 januari 2005 joan feigenbaum sampath kannan andrew mcgregor siddharth suri jian zhang graph distanc stream model valu space proceed sixteenth annual acmsiam symposium discret algorithm januari 2325 2005 vancouv british columbia feodor f dragan estim pair shortest path restrict graph famili unifi approach journal algorithm v57 n1 p121 septemb 2005 surend baswana telikep kavitha kurt mehlhorn seth petti new construct spanner pure addit spanner proceed sixteenth annual acmsiam symposium discret algorithm januari 2325 2005 vancouv british columbia mikkel thorup uri zwick spanner emul sublinear distanc error proceed seventeenth annual acmsiam symposium discret algorithm p802809 januari 2226 2006 miami florida surend baswana sandeep sen approxim distanc oracl unweight graph expect on2 time acm transact algorithm talg v2 n4 p557577 octob 2006 timothi chan allpair shortest path unweight undirect graph omn time proceed seventeenth annual acmsiam symposium discret algorithm p514523 januari 2226 2006 miami florida rezaul alam chowdhuri vijaya ramachandran externalmemori exact approxim allpair shortestpath undirect graph proceed sixteenth annual acmsiam symposium discret algorithm januari 2325 2005 vancouv british columbia surend baswana sandeep sen simpl linear time random algorithm comput spars spanner weight graph random structur algorithm v30 n4 p532563 juli 2007 pair shortest path use bridg set rectangular matrix multipl journal acm jacm v49 n3 p289317 may 2002