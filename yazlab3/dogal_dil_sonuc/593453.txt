parallel algorithm discoveri associ rule discoveri associ rule import data mine task sever parallel sequenti algorithm propos literatur solv problem almost algorithm make repeat pass databas determin set frequent itemset subset databas item thu incur high io overhead parallel case algorithm perform sumreduct end pass construct global count also incur high synchron costin paper describ new parallel associ mine algorithm algorithm use novel itemset cluster techniqu approxim set potenti maxim frequent itemset set identifi algorithm make use effici travers techniqu gener frequent itemset contain cluster propos two cluster scheme base equival class maxim hypergraph cliqu studi two lattic travers techniqu base bottomup hybrid search use vertic databas layout cluster relat transact togeth databas also select replic portion databas need comput associ local processor initi setup phase algorithm need commun synchron algorithm minim io overhead scan local databas portion twice setup phase process itemset cluster unlik previou parallel approach algorithm use simpl intersect oper comput frequent itemset maintain search complex hash structuresour experiment testb 32processor dec alpha cluster interconnect memori channel network present result perform algorithm variou databas compar well known parallel algorithm best new algorithm outperform order magnitud b introduct recent progress autom data gather avail cheap storag lot busi routin start collect massiv amount data variou facet organ eventu goal data gather abl use inform gain competit edg discov previous unknown pattern data guid decis make highlevel infer process may provid host use inform custom group buy pattern stock trend etc process automat inform inferenc commonli known knowledg discoveri data mine kdd look one central kdd task mine associ discoveri associ rule import problem databas mine prototyp applic analysi sale basket data agraw et al 1996 basket data consist item bought custom along transact identifi besid retail sale exampl associ rule shown use domain decis support telecommun alarm diagnosi predic tion univers enrol etc 11 problem statement problem mine associ basket data introduc agraw imielinski swami 1993 formal state let set distinct attribut also call item transact databas transact uniqu identifi contain set item call itemset ie transact itemset k item call kitemset subset length k call ksubset itemset said support transact contain itemset associ rule express b itemset b ae confid associ rule given bsupporta simpli condit probabl transact contain b given contain data mine task associ rule broken two step first step consist find frequent itemset ie itemset occur databas certain userspecifi frequenc call minimum support second step consist form condit implic rule among frequent itemset agraw srikant 1994 second step rel straightforward support frequent itemset known rule form gener frequent itemset provid rule meet desir confid hand problem identifi frequent itemset hard given item potenti frequent itemset form lattic subset howev small fraction whole lattic space frequent discov frequent itemset requir lot comput power memori disk io provid parallel comput effici parallel method need discov relev itemset focu paper 12 relat work sequenti algorithm sever algorithm mine associ propos literatur apriori algorithm mannila toivonen verkamo 1994 agraw srikant 1994 agraw et al 1996 shown superior perform earlier approach agraw imielinski swami 1993 park chen et al 1995 houtsma swami 1995 form core almost current algorithm apriori use downward closur properti itemset support prune itemset lattic properti subset parallel associ rule 3 frequent itemset must frequent thu frequent kitemset use construct candid 1itemset pass databas made level find frequent itemset among candid larg disk resid databas algorithm incur high io overhead scan iter partit algorithm savaser omiecinski navath 1995 minim io scan databas twice partit databas small chunk handl memori first pass gener set potenti frequent itemset itemset local frequent partit second pass global support obtain anoth way minim io overhead work small random sampl databas toivonen 1996 zaki et al 1997a recent propos new algorithm zaki et al 1997b scan databas gener frequent itemset new algorithm shown outperform previou apriori base approach order magnitud zaki et al 1997b perform gain obtain use effect itemset cluster lattic travers techniqu paper present effici parallel implement new algorithm parallel algorithm rel less work parallel mine associ three differ parallel apriori distributedmemori machin ibm sp2 present agraw shafer 1996 count distribut algorithm straightforward parallel apriori processor gener partial support candid itemset local databas parti tion end iter global support gener exchang partial support among processor data distribut algorithm partit candid disjoint set assign differ proce sor howev gener global support processor must scan entir databas local partit remot partit iter thu suffer huge commun overhead candid distribut algorithm also partit candid select replic databas processor proce independ local databas portion still scan everi iter count distribut shown superior perform among three algorithm agraw shafer 1996 parallel algorithm improv upon idea term commun effici aggreg memori util also propos cheung et al 1996b 1996a han karypi kumar 1997 pdm algorithm park chen yu 1995b present parallel dhp algorithm park chen yu 1995a ever pdm perform wors count distribut agraw shafer 1996 recent work present ccpd parallel algorithm sharedmemori machin zaki et al 1996 similar spirit count distribut candid itemset gener parallel store hash structur share among processor processor scan logic partit databas atom updat count candid share hash tree ccpd use addit optim candid balanc hashtre balanc shortcircuit subset count speed perform zaki et al 1996 also present new parallel algorithm eclat zaki parthasarathi li 1997 dec alpha cluster eclat use equival class itemset cluster scheme along bottomup lattic travers shown outperform count distribut order magnitud paper present parallel result new cluster travers techniqu 13 contribut main limit current parallel algorithm park chen yu 1995b zaki et al 1996 agraw shafer 1996 cheung et al 1996b 1996a make repeat pass diskresid databas partit incur high io overhead furthermor scheme involv exchang either count candid remot databas partit iter result high commun synchron overhead previou algorithm also use complic hash structur entail addit overhead maintain search typic suffer poor cach local parthasarathi work contrast approach sever way present new parallel algorithm fast discoveri associ rule base idea zaki parthasarathi li 1997 zaki et al 1997b new parallel algorithm character term cluster inform use group relat itemset term lattic travers scheme use search frequent itemset propos two cluster scheme base equival class maxim uniform hypergraph cliqu util two lattic travers scheme base bottomup hybrid topdownbottomup search algorithm also use differ databas layout cluster relat transact togeth work distribut among processor way processor comput frequent itemset independ use simpl intersect oper interest benefit use simpl intersect algorithm propos implement directli gener purpos databas system holsheim et al 1995 houtsma swami 1995 techniqu elimin need synchron initi setup phase enabl us scan databas two time drastic cut io overhead experiment testb 32 processor dec alpha smp cluster 8 host 4 processorshost interconnect memori channel gillett 1996 network new parallel algorithm also novel util machin configur inform ie assum distributedmemori model across 8 cluster host assum sharedmemori model 4 processor host experiment show new algorithm outperform well known count distribut algorithm also present extens perform result speedup sizeup commun cost memori usag rest paper organ follow begin provid detail sequenti apriori algorithm section 3 describ previou apriori base parallel algorithm present main idea behind new algorithm itemset transact cluster lattic travers techniqu section 4 section 5 describ design implement parallel associ rule 5 new parallel algorithm experiment studi present section 6 conclus section 7 2 sequenti apriori algorithm section briefli describ apriori algorithm agraw et al 1996 sinc form core parallel algorithm agraw shafer 1996 cheung et al 1996b 1996a han karypi kumar 1997 park chen yu 1995b zaki et al 1996 apriori use downward closur properti itemset support subset frequent itemset must also frequent thu iter algorithm itemset found frequent previou iter use gener new candid set prune step elimin candid least one whose subset frequent complet algorithm shown tabl 1 three main step candid kth pass gener join l kgamma1 express c denot ith item x j denot item index j itemset x exampl let l bc bd deg c bdeg tabl 1 apriori algorithm 1 ffrequent 1itemset 2 3 4 transact 2 5 ksubset 7 8 set frequent itemset insert itemset c k apriori test whether frequent prune step elimin lot unnecessari candid candid c k store hash tree facilit fast support count intern node hash tree depth contain hash tabl whose cell point node depth 1 itemset store leav insert procedur start root hash success item insert candid leaf count c k transact databas ksubset transact gener lexicograph order subset search hash tree count candid increment match subset comput intens step algorithm last step form l k select itemset meet minimum support criterion detail 6 zaki parthasarathi ogihara li perform characterist apriori refer reader agraw srikant 1994 3 aprioribas parallel algorithm section look previou parallel algorithm algorithm assum databas partit among processor equals block resid local disk processor count distribut algorithm agraw shafer 1996 simpl parallel apriori processor gener entir candid hash tree processor thu independ get partial support candid local databas partit follow sumreduct obtain global count note partial count need commun rather merg differ hash tree sinc processor copi entir tree global l k determin processor build c k1 par allel repeat process frequent itemset found simpl algorithm minim commun sinc count exchang among processor howev sinc entir hash tree replic processor doesnt util aggreg memori effici implement count distribut use comparison experi differ slightli descript optim testb configur one copi hash tree resid 8 host cluster 4 processor host share hash tree processor still local databas portion use local array gather local candid support sumreduct accomplish two step first step perform reduct among local processor host second step perform reduct among host also util optim techniqu hashtre balanc shortcircuit subset count zaki et al 1996 improv perform count distribut data distribut algorithm agraw shafer 1996 design util total system memori gener disjoint candid set processor howev gener global support processor must scan entir databas local partit remot partit iter thu suffer high commun overhead perform poorli compar count distribut agraw shafer 1996 candid distribut algorithm agraw shafer 1996 use properti frequent itemset agraw shafer 1996 zaki et al 1996 partit candid iter l processor gener disjoint candid independ processor time databas select replic processor gener global count independ choic redistribut pass involv tradeoff decoupl processor depend soon possibl wait suffici load balanc achiev experi repartit done fourth pass depend processor processor prune candid processor asynchron broadcast local frequent set processor parallel associ rule 7 iter prune inform use arriv time otherwis use next iter note processor must still scan local data per iter even though use problemspecif inform perform wors count distribut agraw shafer 1996 candid distribut pay cost redistribut databas scan local databas partit repeatedli usual larger jjdjjp 4 effici cluster travers techniqu section present techniqu cluster relat frequent itemset togeth use equival class maxim uniform hypergraph cliqu describ bottomup hybrid itemset lattic travers techniqu also present techniqu cluster relat transact togeth use vertic databas layout layout abl better exploit propos cluster travers scheme also facilit fast itemset support count use simpl intersect rather maintain search complex data structur 41 itemset cluster lattic subset 12345 border frequent itemset lattic subset 1234 lattic subset 345 sublattic induc maxim itemset figur 1 lattic subset maxim itemset induc sublattic motiv need itemset cluster mean exampl consid lattic subset set f1 2 3 4 5g shown figur 1 empti set omit figur frequent itemset shown dash circl two maxim frequent itemset frequent itemset maxim proper subset frequent itemset shown bold circl due downward closur properti itemset support fact subset frequent itemset must frequent frequent itemset form border frequent itemset lie border infrequ itemset lie border frequent itemset shown bold line figur 1 optim associ mine algorithm enumer test frequent itemset ie algorithm must effici determin structur border structur precis determin maxim frequent itemset border correspond sublattic induc maxim frequent itemset sublattic shown figur 1 given knowledg maxim frequent itemset design effici algorithm simpli gather support support subset singl databas pass gener precis determin maxim itemset intermedi step algorithm howev approxim set itemset cluster techniqu design group item togeth obtain superset maxim frequent itemset potenti maxim frequent itemset present two scheme gener set potenti maxim itemset base equival class maxim uniform hypergraph cliqu two techniqu repres tradeoff precis potenti maxim itemset gener comput cost hypergraph cliqu approach give precis inform higher comput cost equival class approach sacrific qualiti lower comput cost 411 equival class cluster let reconsid candid gener step apriori let l f abc abd abe acd ace ade bcd bce bdeg assum l kgamma1 lexicograph sort partit itemset l kgamma1 equival class base common prefix ie equival class 2 l kgamma2 given candid kitemset simpli gener itemset within class join pair class identifi prefix exampl obtain equival class feg observ itemset produc equival class name set fabc abd abe acd ace adeg independ produc class b set fbcd bce bdeg class 1 member elimin sinc candid gener thu discard class idea partit l equival class independ propos agraw shafer 1996 zaki et al 1996 equival partit use zaki et al 1996 parallel candid gener step ccpd also use candid distribut agraw shafer 1996 partit candid disjoint set parallel associ rule 9 intermedi step algorithm set frequent itemset l k 2 determin gener set potenti maxim frequent itemset l k note entir item univers maxim itemset howev k 2 extract precis knowledg associ among item larger valu k precis cluster exampl figur 2 show equival class obtain instanc 2 equival class potenti maxim frequent itemset exampl class 1 gener maxim itemset 12345678 412 maxim uniform hypergraph cliqu cluster let set item denot vertex set hypergraph berg 1989 famili edg subset e 6 n simpl hypergraph hypergraph simpl graph simpl hypergraph whose edg cardin 2 maximum edg cardin call rank j edg cardin h call uniform hypergraph simpl uniform hypergraph rank r call runiform hypergraph subset x ae subhypergraph induc x given ng runiform complet hypergraph vertic denot k r consist rsubset runiform complet subhypergraph call runiform hypergraph cliqu hypergraph cliqu maxim contain cliqu hypergraph rank 2 correspond familiar concept maxim cliqu graph given set frequent itemset l k possibl refin cluster process produc smaller set potenti maxim frequent itemset observ use given frequent mitemset k ksubset must frequent graphtheoret term item vertex hypergraph ksubset edg frequent mitemset must form kuniform hypergraph cliqu furthermor set maxim hypergraph cliqu repres approxim upperbound set maxim potenti frequent itemset true maxim frequent itemset contain vertex set maxim cliqu state formal lemma hlk kuniform hypergraph vertex set edg set l k let c set maxim hypergraph cliqu h ie let set vertex set cliqu c maxim frequent itemset f 9t 2 f exampl uniform hypergraph cliqu cluster given figur 2 exampl case l 2 thu correspond instanc gener cluster techniqu reduc case find maxim cliqu regular graph figur show equival class maxim cliqu within also show graph class 1 maxim cliqu seen immedi cliqu cluster accur equival class cluster exampl equival class cluster produc potenti maxim frequent itemset 12345678 hypergraph cliqu 12 13 14 15 16 17 18 23 25 27 28 34 35 36 45 46 56 58 68 78 frequent 2itemset equival class graph maxim cliqu equival class 1 maxim cliqu per class equival class figur 2 equival class uniform hypergraph cliqu cluster cluster produc refin set f1235 1258 1278 13456 1568g equival class 1 maxim cliqu discov use dynam program algorithm class x 2x said cover subset x given class c first identifi cover set given fy 2 cjcovi 6 covi 6 covz z 2 c z yg recurs gener maxim cliqu element cover set class maxim cliqu cover set prefix class identifi eliminat ing duplic obtain maxim cliqu current class see zaki et al 1997c detail gener graph maxim cliqu decis problem npcomplet garey johnson 1979 howev equival class graph usual spars maxim cliqu enumer effici edg densiti increas cliqu base approach may suffer factor affect edg densiti includ decreas support increas transact size effect paramet present zaki et al 1997b parallel associ rule 11 42 lattic travers equival class uniform hypergraph cliqu cluster scheme gener set potenti maxim frequent itemset potenti maxim itemset induc sublattic lattic subset databas item travers sublattic determin true frequent item set goal devis effici scheme precis determin structur border frequent itemset differ way expand frequent itemset border lattic space possibl present two scheme travers sublattic one pure bottomup approach hybrid topdownbottomup scheme16 13 14 12 support potenti maxim frequent itemset 123456 sort itemset support topdown phase true maxim frequent itemset 1235 13456 hybrid travers figur 3 bottomup hybrid lattic travers 421 bottomup lattic travers consid exampl shown figur 3 show particular instanc cluster scheme use l 2 gener set potenti maxim itemset let assum equival class 1 one potenti maxim itemset 123456 1235 13456 true maxim frequent itemset support 2itemset class also shown like figur 1 dash circl repres frequent set bold circl maxim itemset box denot equival class potenti maxim itemset 123456 form lattic element equival class 16g need travers lattic determin true frequent itemset pure bottomup lattic travers proce breadthfirst manner gener frequent itemset length k gener itemset level k 1 ie intermedi step determin border frequent kitemset exampl pair element 1 join produc new equival class frequent 3itemset name produc maxim itemset 1235 6g next step yield frequent class produc maxim itemset 13456 current algorithm use approach exampl process gener c k l kgamma1 use apriori agraw et al 1996 relat algorithm savaser omiecinski navath 1995 park 1995a pure bottomup explor lattic space sinc bottomup approach frequent subset maxim frequent itemset gener intermedi step travers 422 hybrid topdownbottomup search bottomup approach doesnt make full use cluster inform use cluster restrict search space may gener spuriou candid intermedi step sinc fact subset itemset frequent doesnt guarante itemset frequent exampl itemset 124 126 figur 3 infr quent even though 12 14 16 frequent envis travers techniqu quickli identifi set true maxim frequent itemset set known either choos stop point interest maxim itemset gather support subset well subset known frequent definit paper restrict attent identifi maxim frequent subset one possibl approach perform pure topdown travers cluster sublattic scheme may thought tri determin border infrequ itemset start top element lattic work way exampl consid potenti maxim frequent itemset 123456 figur 3 turn frequent done case frequent check whether 5subset frequent step ksubset turn frequent need check subset approach doesnt work well practic sinc cluster approxim maxim frequent itemset lot infrequ superset true maxim frequent itemset may gener exampl would gener 10 infrequ itemset 123456 12345 12346 12356 12456 1234 1245 1236 1246 1256 use pure topdown scheme instead two infrequ itemset gener pure bottomup approach 124 126 therefor propos hybrid topdown bottomup approach work well practic parallel associ rule 13 basic idea behind hybrid approach quickli determin true maxim itemset start singl element cluster frequent k itemset extend one itemset till gener infrequ itemset compris topdown phase bottomup phase remain element combin element first set gener addit frequent itemset import consider topdown phase determin element cluster combin approach first sort itemset cluster descend order support start element maximum support extend next element sort order approach base intuit larger support like itemset part larger itemset figur 3 show exampl hybrid scheme cluster 2itemset sort 2itemset decreas order support intersect 16 15 produc 156 extend 1356 join 156 13 13456 final find 123456 infrequ remain element 12 simpli join element produc frequent itemset class 12 gener maxim itemset 1235 bottomup hybrid approach contrast figur 3 pseudocod scheme shown tabl 3 43 transact cluster databas layout kdd process consist variou step fayyad piatetskyshapiro smyth 1996 initi step consist creat target dataset focus certain attribut via data sampl databas creation may requir remov unnecessari inform suppli miss data transform techniqu data reduct project user must determin data mine task choos suitabl algorithm exampl discoveri associ rule next step involv interpret discov associ possibl loop back previou step discov understand pattern import consider data preprocess step final represent data layout dataset anoth issu whether preliminari invari inform glean process two possibl layout target dataset associ mine horizont vertic layout 431 horizont data layout format standardli use literatur see eg agraw srikant 1994 mannila toivonen verkamo 1994 agraw et al 1996 dataset consist list transact transact transact identifi tid follow list item transact format impos comput overhead support count step particular transact averag length l iter k gener test whether gamma l ksubset transact contain c k perform fast subset check candid store complex hashtre data structur search relev candid thu add addit comput overhead furthermor horizont layout forc us 14 zaki parthasarathi ogihara li item tid item tid horizont layout vertic layout figur 4 horizont vertic databas layout scan entir databas local partit iter count candid distribut must pay extra overhead entail use horizont layout furthermor horizont layout seem suitabl bottomup explor frequent border appear extrem complic implement hybrid approach use horizont format altern approach store potenti maxim itemset subset data structur fast lookup eg hashtre agraw et al 1996 gather support singl databas scan plan explor later paper 432 vertic data layout vertic invert layout also call decompos storag structur holsheim et al 1995 dataset consist list item item follow tidlist list transact identifi contain item exampl success use layout found holsheim et al 1995 savaser omiecinski navath 1995 zaki parthasarathi li 1997 zaki et al 1997b vertic layout doesnt suffer overhead describ horizont layout due follow three reason first tidlist sort increas order support candid kitemset comput simpli intersect tidlist two data structur need maintain dont gener ksubset transact perform search oper hash tree second tidlist contain relev inform itemset enabl us avoid scan whole databas comput support count itemset layout therefor take advantag principl local frequent itemset cluster itemset gener parallel associ rule 15 move next cluster third larger itemset shorter tid list practic alway true result faster intersect exampl consid figur 4 contrast horizont vertic layout simplic shown null element realiti spars storag use tidlist given 4g tidlist ab simpli 4g immedi determin support count number element tidlist meet minimum support criterion insert ab l 2 intersect among tidlist perform faster util minimum support valu exampl let assum minimum support 100 intersect two itemset ab support 119 ac support 200 stop intersect moment 20 mismatch ab sinc support abc bound 119 use optim call shortcircuit intersect fast join invert layout howev drawback examin small itemset tend costlier horizont layout employ tidlist small itemset provid littl inform associ among item particular inform present tidlist 1itemset exampl databas 1000000 1m transact 1000 frequent item averag 10 item per transact tidlist averag size 10000 find frequent 2itemset intersect pair item requir oper hand horizont format simpli need form pair item appear transact increment count requir gamma number possibl solut problem 1 use preprocess step gather occurr count 2itemset sinc inform invari perform lifetim databas cost amort number time data mine inform also increment updat databas chang time 2 store count 2itemset support greater user specifi lower bound thu requir less storag first approach 3 use small sampl would fit memori determin superset frequent 2itemset l 2 lower minimum support use simpl intersect sampl tidlist sampl experi toivonen 1996 zaki et al 1997a indic feasibl approach superset determin easili verifi true frequent itemset among current implement use preprocess approach due simplic plan implement sampl approach later paper solut repres differ tradeoff sampl approach gener l 2 onthefli extra databas pass preprocess approach requir extra storag item count storag requir om 2 disk space quit larg larg valu howev use experi add memori channel address receiv transmit transmit receiv receiv figur 5 memori channel space line region map transmit receiv node 1 receiv node 2 gray region map receiv node 1 transmit node 2 small extra storag overhead use second approach reduc storag requir may requir extra scan lower bound support chang note also databas requir amount memori horizont vertic format obviou figur 4 5 new parallel algorithm design implement 51 dec memori channel digit memori channel mc network gillett 1996 provid applic global address space use memori map region region map process address space transmit receiv virtual address region map physic address locat io space mc pci adapt virtual address receiv region map physic ram write transmit region collect sourc mc adapt forward destin mc adapt hub transfer via dma receiv region global identifi see figur 5 region within node share across differ processor node write origin given node sent receiv region node loopback enabl region use loopback featur use writedoubl instead processor write receiv region transmit region process host see modif made process host though pay cost doubl write reduc amount messag hub system unicast multicast processtoprocess write latenc 52 perlink transfer bandwidth mb mc peak aggreg bandwidth also 32 mb memori channel guarante write order local cach parallel associ rule 17 coher two write issu transmit region even differ node appear order everi receiv region write appear receiv region invalid local cach copi line 52 initi databas partit assum databas vertic format support count 2itemset avail local host assum databas tidlist initi partit among host partit done offlin similar assumpt made count distribut agraw shafer 1996 tidlist partit total length tidlist local portion host roughli equal achiev use greedi algorithm item sort support next item assign least load host note entir tidlist item resid host figur 6 show origin databas result initi partit two processor 53 new parallel algorithm present four new parallel algorithm depend cluster lattic travers scheme use ffl pareclat use equival class cluster bottomup lattic travers ffl parmaxeclat use equival class cluster hybrid travers ffl parcliqu use maxim uniform hypergraph cliqu cluster bottomup lattic travers ffl parmaxcliqu use maxim uniform hypergraph cliqu cluster hybrid travers algorithm use bottomup lattic travers name pareclat par cliqu gener frequent itemset use hybrid travers name parmaxeclat parmaxcliqu gener maxim frequent itemset note earlier trivial modifi hybrid travers algorithm gener frequent itemset interest examin benefit quickli identifi maxim element hybrid scheme present parallel design implement issu applic four algorithm 54 parallel design implement new algorithm overcom shortcom count candid distribut algorithm util aggreg memori system partit itemset cluster disjoint set assign differ processor depend among processor decoupl right begin equival class equival class weight 1 6 equival class assign p1 2 3 partit databas origin databas tidlist tidlist commun sublattic p1 2 3 sublattic p0 1 sublattic induc l2 figur 6 databas partit cluster schedul parallel associ rule 19 tabl 2 pseudocod new parallel algorithm 1 begin parassoci 2 initi phase 3 form l2 2itemset support count 4 gener cluster l2 use 5 equival class uniform hypergraph cliqu 6 partit cluster among processor p 7 scan local databas partit 8 transmit relev tidlist processor 9 receiv tidlist processor 10 asynchron phase 11 assign cluster c2 12 comput frequent itemset bottomupc2 hybridc2 13 final reduct phase 14 aggreg result output associ 15 end parassoci redistribut cost amort later iter sinc processor proceed independ costli synchron end iter furthermor new algorithm use vertic databas layout cluster relev inform itemset tidlist processor comput frequent itemset one cluster proceed next local databas partit scan contrast candid distribut must scan iter algorithm dont pay extra comput overhead build search complex data structur gener subset transact intersect perform itemset immedi insert l k notic tidlist also automat prune irrelev transact itemset size increas size tidlist decreas result fast intersect two distinct phase algorithm initi phase respons commun tid list among processor asynchron phase gener frequent itemset pseudocod new algorithm shown tabl 2 541 initi phase initi step consist three substep first support count 2itemset preprocess step read frequent one insert l 2 second appli one two cluster scheme l 2 equival class maxim hypergraph cliqu cluster set potenti maxim frequent itemset gener potenti maxim cluster partit among processor suitabl level loadbalanc achiev third databas repartit processor local disk tidlist 1itemset cluster assign schedul first partit l 2 equival class use common prefix describ use equival class cluster alreadi potenti maxim itemset howev use cliqu cluster gener maxim cliqu within class see section 4 next gener schedul equival class differ processor manner minim load imbal minim interprocess commu nicat note may necessari sacrific amount load balanc better commun effici reason whole equival class includ maxim cliqu within assign processor load balanc achiev assign weight factor equival class base number element class sinc consid pair next iter assign weight class element weight assign gener schedul use greedi heurist sort class weight assign class turn least load processor ie one least total weight point tie broken select processor smaller identifi step done concurr processor sinc access global l 2 figur 6 show exampl along equival class weight assign class two processor notic entir sublattic induc given class assign singl processor lead better load balanc even though partit may introduc extra comput exampl 234 frequent 1234 frequent either sinc belong differ equival class assign differ processor inform use although size class give good indic amount work better heurist gener weight possibl exampl could better estim number frequent itemset could deriv equival class could use estim weight believ decoupl processor perform right begin hold promis even though may caus load imbal sinc repartit cost amort later iter deriv better heurist schedul cluster minim load imbal well commun part ongo research tidlist commun cluster partit among processor processor exchang inform everi processor read nonloc tidlist memori channel network minim commun awar fact configur one local disk per host recal cluster 8 host 4 processor per host host take part tidlist exchang addit process 8 host spawn asynchron phase accomplish interprocess tidlist commun processor scan item tidlist local databas partit write transmit region map receiv processor processor extract tidlist parallel associ rule 21 receiv region belong cluster assign exampl figur 6 show initi local databas two host final local databas tidlist commun tabl 3 pseudocod bottomup hybrid travers 1 input c equival 2 class maxim cliqu 3 cluster kitemset 4 output frequent itemset 2 c k 5 6 2 c k 7 c 8 9 10 nsup minsup 11 c 12 end 13 c k1 14 bottomupc k1 15 end 1 2 topdown phase 3 4 5 6 nsup minsup 7 8 els break 9 end 11 bottomup phase 12 2 s2 13 15 c3 16 end 542 asynchron phase end initi step relev tidlist avail local host thu processor independ gener frequent itemset assign maxim cluster elimin need synchron processor cluster process move next cluster step involv scan local databas partit thu benefit huge io save sinc cluster induc sublattic depend algorithm either use bottomup travers gener frequent itemset use hybrid travers gener maxim frequent itemset pseudocod two lattic travers scheme shown tabl 3 note initi tidlist 1itemset store local disk use tidlist 2itemset cluster gener sinc cluster gener small result tidlist kept memori bottomup approach tidlist 2itemset cluster intersect gener 3itemset cardin result tidlist exce minimum support new itemset insert l 3 split result frequent 3itemset equival class base common prefix length 2 pair 3itemset within equival class intersect determin l 4 22 zaki parthasarathi ogihara li till frequent itemset found l k determin delet thu need main memori space itemset l kgamma1 within one maxim cluster topdown phase hybrid travers maxim element seen far need memoryresid along itemset yet seen new algorithm therefor main memori space effici experiment result memori usag algorithm present next section prune candid recal count candid distribut use prune step elimin unnecessari candid step essenti algorithm reduc size hash tree smaller tree lead faster support count sinc subset transact test tree howev vertic databas layout found prune step littl help attribut sever factor first addit space comput overhead construct search hash tabl also like degrad local second extra overhead gener subset candid third extra commun overhead commun frequent itemset iter even though may happen asynchron fourth averag size tidlist decreas itemset size increas intersect perform quickli shortcircuit mechan end asynchron phase accumul result processor print 55 salient featur new algorithm section recapitul salient featur propos algorithm contrast count candid distribut algorithm differ follow respect ffl unlik count distribut util aggreg memori parallel system partit candid itemset among processor use itemset cluster scheme ffl decoupl processor right begin repartit databas processor comput frequent itemset independ elimin need commun frequent itemset end iter ffl use vertic databas layout cluster transact contain itemset tidlist use layout enabl algorithm scan local databas partit two time processor first scan commun tidlist second obtain frequent itemset contrast count candid distribut scan databas multipl time iter ffl comput frequent itemset perform simpl intersect two tid list extra overhead associ build search complex hash tree data structur complic hash structur also suffer poor cach local parthasarathi zaki li 1997 algorithm parallel associ rule 23 avail memori util keep tidlist memori result good local larger itemset gener size tidlist decreas result fast intersect shortcircuit join base minimum support also use speed step ffl algorithm avoid overhead gener subset transact check candid hash tree support count 6 experiment evalu tabl 4 databas properti databas d1 d1 size d4 d4 size experi perform 32processor 8 host 4 processorshost digit alpha cluster interconnect via memori channel network gillett 1996 system unicast multicast processtoprocess write latenc 52 perlink transfer bandwidth 30mb alpha processor run 233mhz there total 256mb main memori per host share among 4 processor host host also 2gb local disk attach less 500mb avail us partit databas resid local disk processor use differ synthet databas gener use procedur describ agraw srikant 1994 use benchmark databas mani associ rule algorithm agraw srikant 1994 holsheim et al 1995 park chen yu 1995a savaser omiecinski navath 1995 agraw et al 1996 tabl 4 show databas use properti number transact denot r r replic factor databas roughli 90mb size except sizeup experi result shown databas replic factor could go beyond replic factor 6 use sizeup experi sinc repartit databas would becom larg fit disk averag transact size denot jt j averag maxim potenti frequent itemset size ji j number maxim potenti frequent itemset 2000 number item refer reader agraw srikant 1994 detail databas gener experi perform minimum support valu 025 fair comparison algorithm discov frequent kitemset k 3 use support 2itemset preprocess step execut time sec count distribut pareclat execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur 7 parallel perform t10i4d2048k 61 perform comparison section compar perform new algorithm count distribut henceforth refer cd shown superior data candid distribut agraw shafer 1996 figur differ parallel configur repres hxpyt z denot number host number processor per host z total number processor use experi figur 7 8 9 show total execut time differ databas differ parallel configur configur arrang increas order configur arrang increas order h first column compar pareclat cd second column compar new algorithm differ among appar clearli seen pareclat outperform cd almost configur databas improv high factor 5 look best new algorithm second column see improv order magnitud even dramat improv possibl lower minimum support zaki parthasarathi li 1997 interest trend figur perform gap seem decreas larger configur cd actual perform better h8p4t32 t10i4d2084k t15i4d1471k see consid figur 10 show total number frequent itemset differ size differ databas also figur 11 show initi databas repartit tidlist commun cost percentag parallel associ rule 25 total execut time pareclat becom clear enough work two databas suffici offset commun cost consequ 70 time spent initi phase t20i6d1137k work pareclat still twice fast cd basic argument fall classic comput versu commun tradeoff parallel comput whenev ratio high expect pareclat outperform cd also expect rel improv pareclat cd better larger databas unfortun due disk space constraint abl test algorithm larger databas except configur local databas partit less avail memori cd entir databas would cach first scan perform cd thu best case scenario sinc result includ real hit cd would taken multipl disk scan mention section 55 pareclat design scan databas frequent itemset comput execut time sec count distribut pareclat total execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur 8 parallel perform t15i4d1471k second column figur 7 8 9 show differ among new algorithm differ databas parallel configur sever paramet affect perform seen gener parcliqu parmaxcliqu perform better pareclat parmaxeclat respect use maxim hypergraph cliqu approach gener precis cluster axi gener parmaxcliqu par maxeclat outperform parcliqu pareclat respect hybrid lattic travers scheme gener maxim frequent itemset save number intersect result also depend number 26 zaki parthasarathi ogihara li execut time sec count distribut pareclat execut time sec pareclat parcliqu parmaxeclat parmaxcliqu figur 9 parallel perform t20i6d1137k frequent itemset larger number frequent itemset opportun hybrid approach save join exampl consid show total number tidlist intersect perform four algorithm three databas t20i6d1137k largest number frequent itemset see figur 10 parmaxcliqu cut number intersect 60 pareclat reduct 20 parmaxeclat 35 parcliqu factor respons trend indic winner term total execut time clearli parmaxcliqu improv pareclat high 40 62 memori usag figur 12 show total memori usag pareclat algorithm comput frequent itemset progress mean memori usag tidlist less 07mb databas even though databas 360mb figur show case memori usag twice mean peak graph usual due initi construct 2itemset tidlist within cluster sinc equival class cluster larg observ maximum usag 35mb pareclat still less 10 databas algorithm expect peak lower sinc maxim cliqu cluster precis result smaller cluster hybrid travers doesnt need entir cluster 2itemset initi parallel associ rule 271000300050007000 number frequent itemset frequent itemset size k frequent itemset number intersect pareclat parmaxeclat parcliqu parmaxcliqu figur 10 number frequent kitemset b number intersect commun commun commun figur 11 commun cost pareclat 63 sensit analysi figur 13 14 15 first column show speedup differ databas parallel configur due disk constraint use replic 28 zaki parthasarathi ogihara li246810memori usag 2mean time t10i4d2084k memori usag mean055mb pareclat12345memori usag 2mean time t15i4d1471k memori usag mean043mb pareclat5152535memori usag 2mean time t20i6d1137k memori usag mean069mb pareclat figur 12 memori usag pareclat h1p1t1152535h1p1t1 h1p2t2 h2p1t2 h1p4t4 h2p2t4 h4p1t4 h2p4t8 h4p2t8 h8p1t8 h4p4t16 h8p2t16 h8p4t32 rel t10i4d2084k speedup pareclat parmaxeclat parcliqu total execut time sec replic factor t10i4d2084k sizeup pareclat parmaxeclat parcliqu parmaxcliqu figur 13 t10i4d2048k speedup sizeuph4p1t4 factor 4 databas size approxim 360mb speedup number parallel associ rule 2915253545 rel t15i4d1471k speedup pareclat parmaxeclat parcliqu parmaxclique50150250350 total execut time sec replic factor t15i4d1471k sizeup pareclat parmaxeclat parcliqu parmaxcliqu figur 14 t15i4d1471k speedup sizeuph4p1t4 impress first glanc howev surpris exampl largest configur h8p4t32 there 11mb data per processor combin fact amount comput quit small see figur 50 70 time spent tidlist commun see figur 11 see maximum speedup 5 anoth reason commun involv 8 host addit process host spawn initi phase thu repres partiallyparallel phase limit speedup take commun cost see maximum speedup 12 16 interest trend stepeffect seen speedup graph configur number total processor one host perform better also configur total processor 4 configur immedi preced 1 processor per host perform better case reason increas number processor given host caus increas memori content bu traffic increas disk content processor tri access databas local disk time sizeup sizeup experi fix parallel configur h4p1t4 vari databas replic factor 1 6 total databas size rang 90mb 540mb figur 13 14 15 second column show sizeup four algorithm differ databas figur indic almost linear sizeup slightli upward bend due rel comput versu commun cost larger databas time spent commun intersect cost doesnt increas rel pareclat parmaxeclat parcliqu total execut time sec replic factor pareclat parmaxeclat parcliqu parmaxcliqu figur 15 t20i6d1137k speedup sizeuph4p1t4 pace moreov number frequent itemset remain constant sinc use percentag minimum support oppos absolut count replic factor 7 conclus paper propos new parallel algorithm discoveri associ rule algorithm use novel itemset cluster techniqu approxim set potenti maxim frequent itemset set identifi algorithm make use effici travers techniqu gener frequent itemset contain cluster propos two cluster scheme base equival class maxim hypergraph cliqu studi two lattic travers techniqu base bottomup hybrid search also use vertic databas layout cluster relat transact togeth databas also select replic portion databas need comput associ local processor initi setup phase algorithm need commun synchron algorithm minim io overhead scan local databas portion two time setup phase process itemset cluster algorithm use simpl intersect oper comput frequent itemset dont maintain search complex hash structur ad benefit use simpl intersect algorithm propos im parallel associ rule 31 plement directli gener purpos databas system holsheim et al 1995 use techniqu present four new algorithm pareclat equival class bottomup search parcliqu maxim cliqu bottomup algorithm discov frequent itemset parmaxeclat equiv alenc class hybrid search parmaxcliqu maxim cliqu hybrid search discov maxim frequent itemset implement algorithm processor dec cluster interconnect dec memori channel network compar well known parallel algorithm count distribut agraw 1996 experiment result indic substanti perform improv obtain use techniqu acknowledg work support part nsf research initi award ccr 9409120 arpa contract f1962894c0057 r parallel mine associ rule fast algorithm mine associ rule fast discoveri associ rule mine associ rule set item larg databas hypergraph combinator finit set fast distribut algorithm mine associ rule effici mine associ rule distribut databas kdd process extract use knowledg volum data comput intract guid theori npcomplet memori channel optim cluster interconnect scalabl parallel data mine associ rule acm sigmod conf perspect databas data mine 11th intl effici algorithm discov associ rule effect hash base algorithm mine associ rule effici parallel data mine associ rule acm intl effici algorithm mine associ rule larg databas sampl larg databas associ rule parallel data mine associ rule sharedmemori multiprocessor evalu sampl data mine associ rule new algorithm fast discoveri associ rule new algorithm fast discoveri associ rule local algorithm parallel associ mine srinivasan parthasarathi current doctor student univers rochest wei li receiv ph tr ctr jennif seitzer jame p buckley yi pan ind distribut knowledgebas learn system ieee intellig system v15 n5 p3846 septemb 2000 sukom pal aditya bagchi associ dissoci pragmat consider frequent itemset gener fix variabl threshold acm sigkdd explor newslett v7 n2 p151159 decemb 2005 fast algorithm mine sequenti pattern larg databas journal comput scienc technolog v16 n4 p359370 712001 euihong sam han georg karypi vipin kumar scalabl parallel data mine associ rule ieee transact knowledg data engin v12 n3 p337352 may 2000 moham j zaki parallel distribut associ mine survey ieee concurr v7 n4 p1425 octob 1999 congnan luo anil l pereira soon chung distribut mine maxim frequent itemset data grid system journal supercomput v37 n1 p7190 juli 2006 jiawei han lak v lakshmanan jian pei scalabl frequentpattern mine method overview tutori note seventh acm sigkdd intern confer knowledg discoveri data mine august 2629 2001 san francisco california chenyong hu benyu zhang yongji wang shuicheng yan zheng chen qing wang qiang yang learn quantifi associ via princip spars nonneg matrix factor intellig data analysi v9 n6 p603620 novemb 2005 yang srinivasan parthasarathi sameep mehta gener framework mine spatiotempor pattern scientif data proceed eleventh acm sigkdd intern confer knowledg discoveri data mine august 2124 2005 chicago illinoi usa gregori buehrer srinivasan parthasarathi shirish tatikonda tahsin kurc joel saltz toward terabyt pattern mine architectureconsci solut proceed 12th acm sigplan symposium principl practic parallel program march 1417 2007 san jose california usa assaf schuster ran wolff dan trock highperform distribut algorithm mine associ rule knowledg inform system v7 n4 p458475 may 2005 shengnan cong jiawei han jay hoefling david padua samplingbas framework parallel data mine proceed tenth acm sigplan symposium principl practic parallel program june 1517 2005 chicago il usa moham j zaki scalabl algorithm associ mine ieee transact knowledg data engin v12 n3 p372390 may 2000 aleksandar lazarev zoran obradov boost algorithm parallel distribut learn distribut parallel databas v11 n2 p203229 march 2002 moham j zaki neal lesh mitsunori ogihara planmin predict plan failur use sequenc mine artifici intellig review v14 n6 p421446 decemb 1 2000 john holt soon chung parallel mine associ rule text databas journal supercomput v39 n3 p273299 march 2007 vipin kumar moham zaki high perform data mine tutori pm3 tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p309425 august 2023 2000 boston massachusett unit state petr hjek martin holena formal logic discoveri hypothesi format machin theoret comput scienc v292 n2 p345357 27 januari andrzej skowron jan komorowski zdzislaw pawlak lech polkowski rough set perspect data knowledg handbook data mine knowledg discoveri oxford univers press inc new york ny 2002 andrzej skowron rough set boolean reason granular comput emerg paradigm physicaverlag gmbh heidelberg germani 2001 maniatti moham j zaki system support scalabl data mine acm sigkdd explor newslett v2 n2 p5665 dec 2000