discret lotsiz schedul batch sequenc discret lotsiz schedul problem one machin sequencedepend setup time setup cost solv singl machin schedul problem term batch sequenc problem relationship lotsiz problem batch sequenc problem analyz batch sequenc problem solv branch bound algorithm acceler bound domin rule algorithm compar recent publish procedur solv variant dlsp found effici number item larg b introduct certain manufactur system signific amount setup requir chang product one type product anoth schedul product line chemic engin product increas batch order avoid setup howev demand differ product aris differ point time within plan horizon satisfi dynam demand either larg inventori must kept product run larg batch frequent setup requir inventori level kept low signific setup time consum scarc product capac tend complic schedul problem discret lotsiz schedul problem dlsp wellknown model situat dlsp demand item dynam backlog allow prior product run setup requir setup cost setup time depend either next item sequenc independ sequenc item sequenc depend product meet present futur demand latter case also incur hold cost plan horizon divid finit number short period period one item produc setup made noth product optim product schedul dlsp minim sum setup hold cost relationship dlsp schedul model gener motiv us solv dlsp batch sequenc problem bsp deriv bsp instanc dlsp instanc solv dlsp bsp demand item interpret job deadlin process time job correspond demand item group one famili item dlsp famili bsp job must process singl machin time zero respect deadlin switch job one famili job anoth famili incur sequenc depend setup time setup cost earli complet job penal earli cost correspond hold cost dlsp optim schedul bsp minim sum setup cost earli cost dlsp first introduc lasdon terjung 10 applic product schedul tire compani complex result dlsp extens examin salomon et al 14 close relationship dlsp job class schedul problem emphas broader view lotsiz schedul problem given pott van wassenhov 13 approach base lagrangean relax propos fleischmann 6 dlsp without setup time fleischmann 7 util idea solut procedur vehicl rout problem solv dlsp sequenc depend setup cost dlsp sequenc independ setup time setup cost examin cattryss et al 4 recent work salomon et al 15 propos dynam program base approach solv dlsp sequenc depend setup time setup cost optim result 4 7 15 serv benchmark approach solv bsp complex schedul problem batch setup time investig bruno downey 2 monma pott 12 bruno downey show feasibl problem nphard setup time nonzero solut procedur schedul problem batch setup time studi unal kiran 17 ahn hyun 1 mason anderson 11 17 feasibl problem bsp address effect heurist propos 1 11 algorithm minim mean flow time propos webster baker 20 survey recent result deriv properti optim schedul variou batch problem contribut paper twofold first solv dlsp bsp state equival model solv either dlsp bsp second present algorithm solv bsp faster known procedur solv dlsp paper organ follow present dlsp bsp section 2 provid numer exampl section 3 relationship model analyz section 4 section 5 present timet procedur convert sequenc minimum cost schedul section 6 describ branch bound algorithm solv bsp comparison algorithm solut procedur solv variant dlsp found section 7 summari conclus follow section 8 model formul dlsp present sequenc depend setup time setup cost refer problem sdstsc sdstsc includ dlsp sequenc independ setup sistsc sequenc depend setup cost zero setup time sdsc gener dlsp sequenc independ setup cost zero setup time cf fleischmann 6 special case tabl 1 paramet dlsp index item famili denot idl machin index period q demand item period hold cost per unit period item st gi setup time item g item gi setup cost per setup period item g item sc gi setup cost item g item st gi g tabl 2 decis variabl dlsp 1 item produc period 0 otherwis time period machin setup item period previou item item g 0 otherwis inventori item end period dlsp paramet given tabl 1 item famili dlsp bsp index hold cost per unit item period product fulfil demand q item period setup cost sc gi distribut maxf1 st gi g setup period defin perperiod setup cost sc p gi decis variabl given tabl 2 set product take place item period v setup item g item period denot inventori item end period mix binari formul tabl 3 object 1 minim sum setup cost sc p per setup period st gi inventori hold cost constraint 2 express inventori balanc noth product enforc constraint 3 period machin either produc full unit capac undergo setup item idl ie idl period st instanti v git appropri constraint 5 coupl setup product whenev st gi 0 item produc period item g period tgamma gamma1 decis variabl v st gi constraint 6 enforc correct length string setup variabl v gitgamma st gi 1 howev st gi 0 exclud case set v done constraint 7 constraint 8 prevent backlog final variabl v gi initi 0 constraint 11 due noth product write dlsp schedul term perioditem assign string specifi action period ie st gi 0 bsp famili schedul problem cf eg webster baker 20 paramet cf tabl relat n famili index number job n famili total number job j tabl 3 model dlsp min 1 subject st st st gi st gi st gi st gi 0 tabl 4 paramet bsp number job famili number job denot jth job famili process time jth job famili ij deadlin jth job famili w ij earli weight per unit time jth job famili number tabl 5 decis variabl bsp sequenc job denot job posit k c ij complet time job idl time job 0 otherwis tabl model bsp min zbsp subject st kgamma1 k st 0i k st kgamma1 k st kgamma1 k one unit famili inventori one period time setup time st gi setup cost sc gi given pair famili g set job partit famili jth job famili index tupl j associ job process time p ij deadlin ij weight w ij job weight w ij proport quantiti process time job proport weight deriv h p ij put tupl bracket index job attribut tupl denot job one entiti decis variabl given tabl 5 sequenc denot process order job denot job posit k togeth complet time c ij job obtain schedul oe conceptu model formul bsp present tabl 6 zbsp oe denot sum earli setup cost schedul oe minim object 12 earli weight w ij setup cost sc kgamma1 k incur job differ famili job schedul time zero deadlin respect sequenc machin well setup time done constraint 13 constraint one idl time two consecut job setup time st 0i k idl machin rather sequenc depend setup time st kgamma1 k initi begin end schedul given 16 17 respect remark 1 bsp dlsp paramet assum 1 setup time setup cost satisfi triangl inequ ie st gi st gl st li sc gi 2 setup within famili ie st teardown time cost ie st 3 binari demand dlsp ie q 2 f0 1g 4 job one famili label order increas deadlin deadlin interfer ie remark 1 state 1 benefici perform two setup order accomplish one mason anderson 11 show problem nonzero teardown easili convert problem sequenc depend setup zero teardown motiv 2 1 2 st 0i st gi analog setup cost thu third term object 12 alway nonneg assumpt 3 anticip noth product item cf also salomon et al 14 basic assumpt 4 job one famili consid schedul c main observ motiv us consid dlsp special case bsp q matrix spars especi setup time signific basic idea interpret item dlsp famili bsp regard nonzero demand dlsp job deadlin process time bsp order solv dlsp special case bsp deriv bsp instanc dlsp instanc follow way setup time setup cost bsp comparison equival bsp solut procedur dlsp instanc dlsp solut procedur bspdlsp bsputdlsp solut transform figur 1 comparison dlsp bsp dlsp ident job attribut bsp instanc deriv q matrix definit 1 2 defin bsp instanc unit time job deriv dlsp instanc famili n job entri q denot job defin bsp instanc deriv dlsp instanc sequenc consecut one q matrix ie q number time sequenc consecut one appear item defin n figur 1 provid framework bspdlsp comparison transform dlsp instanc bsp instanc compar perform solut procedur qualiti solut differ approach follow dlsp decis made anew individu period repres decis variabl v git cf tabl 2 bsp decid schedul job ie decid complet time job bsp dlsp address underli plan problem use differ decis variabl bruggemann jahnk 3 make anoth observ concern transform instanc dlsp instanc may polynomi bound size size bspdlsp instanc polynomi bound account 3 argu q matrix reason encod dlsp instanc sens garey johnson 9 bspdlsp describ problem instanc concis way 3 numer exampl section provid exampl illustr gener bsputdlsp bspdlsp also refer exampl demonstr certain properti bsp figur 2 illustr equival model correspond paramet setup time setup cost hold cost given tabl 7 figur 2 show demand matrix q dlsp job respect deadlin bsputdlsp bspdlsp tabl 7 numer exampl setup hold cost st 3 3 3 3 2 1 1 2 bsputdlsp oe ut bsputdlsp oe ut bspdlsp oe figur 2 dlsp bsputdlsp bspdlsp tabl 8 bsputdlsp instanc solut bsputdlsp interpret entri one job j deadlin ij process time p ij equal one job summar bsputdlsp paramet tabl 8 optim dlsp schedul h string figur 2 entri f0 1 2 3g idl time product differ item respect schedul repres oe ut bsputdlsp display tabl 8 schedul optim object function valu zbsp oe ut bspdlsp consecut one demand matrix q link one job number job thu smaller bspdlsp bsputdlsp instanc job 1 2 1 3 bsputdlsp link one job 1 2 bspdlsp compar oe ut b oe b howev bspdlsp schedul figur 2 sinc need unit time job bspdlsp let cost paramet cost famili sc optim dlsp schedul oe b optim bspdlsp schedul optim object function valu zbsp oe b exampl show schedul obtain differ model next section formal analyz equival dlsp bsp 4 relationship bsputdlsp bspdlsp dlsp bsp distinguish sequenc schedul bsp schedul may insert idl time process order fulli describ schedul follow say consecut sequenc job sequenc next posit consecut schedul job idl time job ie term bracket constraint 14 equal zero sequenc bsp consist group group order set consecut sequenc job belong famili hand schedul consist one sever block job one block consecut schedul differ block separ idl time distinguish setup time job one block may belong differ famili block group may consist singl job exampl refer figur 2 oe c oe consist five group oe c form two block oe one block given sequenc bsp schedul oe call semiact c ij constrain either ij start next job job schedul later rightshift semiact schedul oe deriv oe sequenc constraint 13 equal p k set zero cost zbsp oe lower bound cost zbsp oe bsp schedul oe oe optim schedul relax bsp constraint 14 omit howev semiact schedul may idl time may benefici schedul job earlier ie leftshift job save setup concern timet procedur section 5 model save setup batch job dlsp batch noninterrupt sequenc period product take place item 6 0 ie bsp job one group consecut schedul without setup batch batch must preempt idl time figur 2 group famili 3 form two batch schedul oe c wherea group one batch oe b call sequenc schedul oe eddwf sequenc schedul job one famili sequenc schedul nondecreas order deadlin eddwf abbrevi earliest deadlin within famili order job eddwf call order batch schedul problem monma pott 12 consid eddwf sequenc reduc search space branch bound algorithm describ section 6 first consid bsputdlsp instanc follow theorem state bsputdlsp restrict eddwf sequenc theorem 1 bsputdlsp schedul oe convert eddwf schedul oe cost proof recal job one famili weight process time schedul oe let b c repres part oe consist sever job process time part consid schedul job order eddwf ie schedul object function valu w ij 1 complet time part b c chang interchang job repeat oe eddwf schedul complet proof 2 dlsp schedul bsputdlsp schedul oe call correspond solut defin decis schedul schedul oe correspond solut point time follow hold oe job process belong famili setup perform oe iii machin idl oe figur 2 give exampl correspond solut correspond oe ut b correspond oe ut b alway deriv entri oe complet time oe alway deriv oe eddwf schedul theorem 2 schedul oe feasibl bsputdlsp correspond solut feasibl dlsp oe object function valu proof first prove constraint dlsp bsputdlsp defin solut space dlsp constraint 2 8 stipul q 0 2 8 enforc sequenc machin sequenc depend setup time taken account describ constraint 3 7 bsp achiev constraint 13 schedul job time zero deadlin job process singl machin take account sequenc depend setup time second prove object function 1 12 assign object function valu correspond solut oe cumul inventori item plan horizon equal cumul earli famili job weight equal hold cost ie h bsputdlsp thu term equal correspond solut oe explan necessari show correspond solut oe setup cost consid setup famili g g 6 0 without idl time oe sc st gi g st gi consecut one v git enforc 6 hand case insert idl time setup idl machin enforc decis variabl p k bsp st 0i consecut one v 0it thu term equal correspond solut oe therefor correspond solut oe incur hold setup cost prove theorem 2 consequ theorem 2 schedul oe optim bsputdlsp correspond solut optim dlsp constitut equival dlsp bsp bsp utdlsp instanc thu solv dlsp solv bsputdlsp gener howev attract option solv bspdlsp number job smaller definit 3 schedul oe let product start famili start time first job batch let inventori famili build c ij ij schedul oe call regen product start famili long still inventori famili term regen stem regener properti found wagner whitin 19 similar idea cf eg vickson et al 18 regen schedul also eddwf schedul revers true schedul oe regen job batch hold furthermor regen bsputdlsp schedul oe job consecut one q schedul consecut recal instanc oe ut b oe b figur 2 henc regen bsputdlsp schedul repres bspdlsp schedul well figur 2 schedul oe regen batch famili start still inventori first show lose feasibl restrict regen schedul theorem 3 oe feasibl bsputdlsp bspdlsp schedul also feasibl regen schedul oe oe oe figur 3 regen schedul proof schedul oe let b famili first last job part b belong consid nonregen schedul oe ie one batch though c consid schedul interchang one batch oe feasibl leftshift b violat feasibl furthermor due triangl inequ st b st st ii b thu b leftshift p ij time unit without affect ca interchang job repeat oe regen prove theorem 2 illustr construct regen schedul depict figur 3 interchang b obtain oe regen schedul oe unit process time need proof theorem 3 fact two result first find feasibl schedul may consid bspdlsp instead bsputdlsp second bspdlsp need search regen schedul find feasibl schedul theorem 3 stronger result one found salomon et al 14 unal kiran 17 state first result moreov hold cost equal next theorem extend result optim schedul theorem 4 oe optim bsputdlsp bspdlsp schedul h constant 8i also optim regen schedul oe proof analog proof theorem 3 must consid chang object function valu interchang without loss gener let h zbsp oe zbsp oe denot object function valu oe oe part b leftshift wb pb process time part b pb b may contain setup well interchang b j object chang follow due triangl inequ setup cost setup time oe larger oe ie gammasc gamma explain leftshift b p ij rightshift j pb wb pb explain ii thu zbsp oe zbsp oe prove theorem 2 consid regen schedul achiev consider reduct search space summar far obtain follow result 1 dlsp bsp equival bsputdlsp 2 feasibl bspdlsp impli feasibl dlsp 3 equal hold cost optim bspdlsp schedul optim dlsp instanc unequ hold cost solv theoret differ bspdlsp dlsp 3 small effect comput result section 73 show almost alway optim regen bsputdlsp schedul found solv bspdlsp 5 timet procedur given sequenc given sequenc follow timet procedur decid partit block equival consecut sequenc job consecut schedul bsp model formul tabl 6 job posit k start new block p block preced job start new block posit k save earli cost expens addit setup cost figur 2 earli cost oe b higher oe c save one setup oe b timet procedur start semiact schedul leftshift job find minimum cost schedul consid exampl figur 2 sequenc 3 3 2 2 1 2 semiact schedul oe given figur 4 first consid two special case omit constraint 14 bsp group batch idl time may preempt batch timet trivial semiact schedul optim given sequenc job rightshift decreas earli cost setup cost determin oe timet also trivial earli weight zero ie h case leftshift job without increas earli cost result schedul one block eg schedul oe figur 2 one block job leftshift sc gi sc i0 sc setup cost minim job schedul block optim schedul consist one block gener case need definit block cost bc k1k2 cost contribut block posit k 1 k 2 ie bc k1 block size bs k number job consecut schedul job includ instanc figur 4 bs let denot f k b cost schedul posit k j bs k cost minimum cost schedul bs k correspond block size posit k recurr equat determin f k bs f b1b oe posit k figur 4 semiact schedul tabl 9 comput equat 18 exampl figur 4 f equat 18 take minimum cost bs maximum block size posit k new block start kb 1 given block size b f k b sum block cost posit k posit k next block minimum cost f kb basic equat 18 must comput everi sequenc howev simplif possibl two job consecut schedul semiact schedul optim increment bs bs equat 18 need evalu consequ semiact schedul one block timet trivial group oe equal one batch whole schedul form block setup sequenc independ minimum cost schedul deriv less effort follow let group size gs k posit k denot number consecut sequenc job posit r k belong famili job k j k sequenc independ setup equat 18 must evalu gs k reason follow job differ group leftshift block save setup cost consecut group famili g would need sc hold sequenc independ setup therefor need decid leftshift within group exampl comput equat 18 given tabl 9 semiact schedul figur 4 see cost paramet tabl 7 schedul oe contain idl time determin f bs k posit k k j consid job 22 33 32 posit 65 4 figur 4 posit 4 semiact schedul one block increment bs k denot entri tabl 9 job 31 oe insert idl time posit 3 4 differ block size must consid find minimum cost schedul tabl 9 find f ie start new block posit split group two batch done oe c figur 2 object function valu add sc 02 f 1 obtain cost zbsp oe c 6 sequenc algorithm section present branch bound algorithm solv bsp optim denot sabsp job sequenc backward ie stage 1 job assign posit j stage 2 posit stage posit assign job last posit sequenc addit spartial schedul oe also assign complet time job partial schedul call complet oe extend oe schedul oe schedul job write examin eddwf sequenc preced constraint job preced graph exampl figur 2 shown figur 5 use eddwf order figur 5 eddwf preced graph backward sequenc tabl 10 attribut partial schedul consider stage ub upper bound object function valu current best schedul coe cost oe without setup us set job alreadi schedul unschedul spartial schedul oe ui set famili job us belong job form first block oe earli weight job g 1 oe ie decid fact stage famili schedul job elig stage preced relat predecessor schedul spartial schedul correspond node search tree extend schedul elig job stage 1 appli depthfirst search enumer use bound branch domin rule describ section 61 62 prune search tree spartial sequenc uniqu defin minimum cost spartial schedul oe timet procedur enumer done sequenc stop sequenc implicitli examin best solut found optim implement sabsp take advantag fact equat 18 need recalcul everi oe case backtrack comput equat 18 alreadi accomplish partial schedul backtrack tabl list attribut spartial schedul schedul stage identifi job consider start time toe cost coe spartial schedul set current schedul unschedul job denot us ui denot famili job us belong ub current upper bound 61 bound branch rule feasibl bound state given oe current unschedul job us must schedul time zero toe furthermor need setup time famili ui formal defin min fst ij2u oe feasibl complet toe cost bound state cost coe spartial schedul lower bound extens oe complet least one setup famili ui must perform defin min fsc gi g oe extend schedul improv ub c bound check spartial schedul oe clearli c easili updat search also test sophist lower bound unschedul job schedul edd order without setup way abl deriv lower bound earli cost well check feasibl care comput time decreas regen schedul need consid find optim schedul cf theorem 4 employ branch rule follow schedul elig eddwf preced graph toe batch consid job extens oe need enumer partial schedul oe extend job g result schedul nonregen 62 domin rule remark reduct comput time come result domin rule domin rule sabsp compar two spartial schedul oe oe schedul set job notat schedul oe denot spartial schedul current consider oe denot previous enumer schedul may domin oe partial schedul oe domin oe effici term time cost oe start later schedul jobset ie toe incur less cost ie coe coe famili job schedul stage differ oe oe make partial schedul compar setup compar time cost subtract setup time setup cost appropri schedul oe domin store job set famili pair toe coe like domin spartial schedul note number partial schedul exponenti number item n storag requir domin rule grow rapidli n increas formal descript domin rule need sever definit cf tabl 10 job form block belong set g 1 oe sum earli weight g 1 oe denot w 1 oe domin rule take account block cost extens oe oe consid oe maximum oe minimum cost incur block oe domin oe coe plu upper bound block cost less equal coe plu lower bound block cost upper bound block cost oe given sc 0i recal sc 0i sc gi oe start new block tighter upper bound found start time close toe order save cost leftshift job g 1 oe g 1 oe perform new setup idl machin g 1 oe largest block may leftshift let pbtoe denot time cost increas due leftshift g 1 oe exce sc 0i w 1 oe toe defin pullbacktim pbtoe spartial schedul oe follow consequ time pbtoe upper bound block cost given leftshift g 1 oe bound sc 0i lower bound block cost oe given way oe consid smallest block leftshift simpli job state domin rule differenti theorem 5 orem 6 theorem 5 consid two spartial schedul oe oe proof complet oe also feasibl complet oe oe feasibl due ii schedul oe lower cost oe follow consid cost contribut oe oe due leftshift extend oe oe consid figur 6 illustr situat timecost diagram due eddwf also line repres upper bound block cost oe pbtoe expens leftshift g 1 oe pbtoe setup idl machin perform broken line repres lower bound block cost oe smallest block leftshift job order prove oe never less cost oe due block check cost point ii iii ii compar cost toe iii compar pbtoe ii iii cost increas linearli pbtoe know monoton cost increas oe cost oe longer increas thu ii iii fulfil cost contribut oe less oe ie complet zbsp oe complet proof 2 exampl figur 2 figur 7 8 illustr theorem 5 3partial schedul oe 3 oe 3 figur 7 g 1 oe 3 cost oe oe figur illustr theorem 5 oe 3t figur 7 theorem 5 oe 3 domin oe 3 check ii 22 iii 22 oe 3 domin figur 8 illustr effect block cost modifi data follow 103 check theorem 5 ii fulfil thu oe 3 domin oe 3 though coe 3 figur 8 show coe 4 leftshift second domin rule case must consid sc 0i instead sc gi take block cost account theorem 6 given two spartial schedul oe oe st denot famili last job complet oe st st st analog setup cost due triangl inequ thu complet oe also feasibl complet oe oe feasibl oe feasibl due ii schedul oe lower cost oe figur 8 theorem 5 oe 3 domin oe 3 differ also block cost taken account ii leftshift g 1 oe extens oe coe upper bound cost contribut trivial lower bound cost contribut oe coe thu oe domin oe complet oe lower cost complet proof 2 final altern way solv bsp dynam program approach defin jobset state appli domin rule way implement approach less effici describ jordan 8 7 comparison procedur solv variant dlsp analysi section 4 know address plan problem bsp dlsp find correspond solut consequ section compar perform algorithm solv bsp procedur solv variant dlsp comparison made dlsp instanc use test dlsp procedur take instanc provid cite author solv bspdlsp bsputdlsp instanc cf figur 1 except made refer 7 use randomli gener instanc differ dlsp variant summar tabl 11 dlsp first column refer second dlsp variant display fourth column denot propos algorithm third column show whether comput result propos algorithm report equal unequ hold cost depend hold cost differ dlsp variant solv bspdlsp bsputdlsp instanc except refer 15 dlsp procedur test equal hold cost regen schedul optim 4 7 71 sequenc independ setup time setup cost sistsc cattryss et al 4 mathemat program base procedur solv sistsc propos cattryss et al 4 refer procedur dual ascent column gener procedur dacgp dlsp first formul set partit problem spp column repres product schedul one item cost column calcul separ setup sequenc independ dacgp comput lower bound spp column gener new tabl solv differ dlsp variant bsp author variant hold cost algorithm instanc properti schedul cattryss et al 4 regen fleisch mann regen salomon et al 15 one block column gener solv singl item subproblem polynomi dp recurs dacgp feasibl schedul ie upper bound may found column gener step calcul enum algorithm column gener far neither case feasibl schedul found attempt made simplex base procedur heurist dacgp gener upper lower bound sabsp solv bspdlsp optim dacgp code fortran sabsp code c dacgp run ibmps2 model 80 pc 80386 processor 80387 mathemat coprocessor implement sabsp machin make comput time compar comput result dacgp report ident hold cost item consequ solv dlsp bspdlsp need consid regen schedul theorem 4 furthermor timet procedur requir fewer comput equat 18 setup sequenc independ dlsp instanc nonzero setup time provid author 4 gener instanc itemperiod combin fn 60g refer instanc smaller instanc solv much faster sabsp dacgp dlsp instanc setup time st gi either 0 1 2 period averag setuptim per item instanc approxim 05 make setup time signific item period combin instanc differ approxim capac util ae gener low l capacit ae 055 medium 055 ae 075 high h capacit instanc ae 075 approxim capac util defin ae 1t gener combin amount 3 instanc total tabl 12 use j denot averag number job bspdlsp instanc size n dlsp dacgp use 4 avg denot averag gap percent upper lower bound inf number instanc found infeas differ procedur r avg denot averag time second need instanc class dacgp valu tabl 12 taken 4 tabl 12 comparison dlsp bsp algorithm sistsc dacgp sabsp 4 386 pc coprocessor comparison dacgp sabsp bb algorithm solv problem much faster number sequenc examin rel small comput time sabsp order magnitud dacgp 6 60m simplex base procedur dacgp find feasibl integ solut one 10 instanc claim infeas dacgp thu 6 60m 9 instanc remain unsolv dacgp wherea sabsp find 7 infeas instanc dacgp also fail find exist feasibl schedul n ae 260h 460m recal sabsp take advantag small solut space keep enumer tree small thu detect infeas feasibl schedul quit quickli dacgp tri improv lower upper bound difficult without initi feasibl schedul therefor heurist solut procedur dacgp may fail detect feasibl schedul solut space small problem size n dlsp number job j bspdlsp may differ therefor solut time differ consider sabsp tabl 13 present frequenc distribut solut time everi problem class major instanc solv less averag time dacgp 72 sequenc depend setup cost sdsc algorithm solv sdsc propos fleischmann 7 fleischmann transform dlsp travel salesman problem time window tsptw tour correspond product schedul sdsc fleischmann calcul lower bound lagrangean relax condit node visit exactli relax upper bound calcul heurist first construct tour tsptw tri improv schedul use oropt oper oropt piec initi tour exchang obtain improv schedul oropt repeat improv found refer fleischmann algorithm tsporopt tsporopt tabl 13 frequenc distribut solut time sabsp number instanc solv faster 4 28 386 pc coprocessor code fortran experi perform 486dx266 pc origin code provid fleischmann fleischmann divid time axi micro macro period hold cost aris macro period demand occur end macro period thu direct comparison tsporopt sabsp use fleischmann instanc viabl instead use randomli gener bsp instanc transform dlsp instanc gener instanc low l ae 075 high hae 097 capac util note zero setup time ae depend schedul feasibl problem polynomi solvabl bsp averag number job process time interv 1 4 dlsp averag high h low l capacit instanc hold cost ident solv bspdlsp 7 select 2 setup cost matric s4 s6 satisfi triangl inequ s4 cost equal 100 g 500 g s6 two kind setup item f1 2 3g f4 5g form two setupgroup minor setup cost 100 within setupgroup major setup cost 500 one setupgroup tabl 14 result aggreg instanc class use 4 avg denot averag gap lower upper bound tsporopt r avg r avg denot averag time tsporopt sabsp second denot 4z best averag deviat object function valu heurist tsporopt optim one found sabsp tabl 14 show 4 avg quit larg tsporopt solut time sabsp short high capacit instanc long low one s4 tsporopt gener good lower bound best deviat optim object due poor heurist upper bound hand s6 lower upper bound close optimum well note sabsp solv larg instanc sdsc 8 10 item wherea fleischmann report comput experi instanc size well feasibl bound much weaker zero setup time equival solut space much larger make sabsp less effect tabl 14 comparison dlsp bsp algorithm sdsc setup cost tsporopt sabsp best r avg r avg instanc tabl 14 howev sabsp yield better perform 73 sequenc depend setup time setup cost sdstsc salomon et al 15 fleischmann transform dlsp tsp time window tsptw extend nonzero setup time order solv sdstsc node tsp network repres posit demand node must visit within certain time window transform dlsp solv dynam program approach design tsptw problem cf duma et al 5 refer procedur 15 tsptwa path tsp network correspond partial schedul similar domin rule sabsp tsptwa path may domin path via cost domin may elimin extend correspond feasibl bound tsptwa code c run hp9000730 workstat 76 mip 22 flop sabsp run 486dx266 pc order test tsptwa salomon et al 15 use randomli gener instanc similar 4 setup time st gi 2 f0 2g unfortun setup time satisfi triangl inequ triangular eg floydwarshal algorithm often result setup time equal zero adjust setup time upward possibl case st gi 2 f0 1 2g result setup time rare zero ad 4 8 unit plan horizon order obtain medium capac util 15 way instanc suppos degre difficulti tsptwa sabsp smaller solut space due correct st gi upward compens longer plan horizon 15 instanc gener take largest instanc itemperiod combin fn 60g instanc medium capac util 05 ae 075 setup time nonzero n combin without hold cost gener hold cost differ among item consequ solv bsputdlsp furthermor need appli timet procedur latter case optim schedul one block tabl 15 f number problem solv tsptwa sabsp within time limit 1200 sec 1200 sec memori limit 20 mb 10 mb j denot averag number job bsp r avg tabl 15 comparison dlsp bsp algorithm sdstsc f r avg denot averag time sabsp requir solv instanc consid regen schedul averag time calcul instanc solv within time limit r avg put bracket instanc solv last column show result consid regen schedul enumer provid maxim deviat optim schedul may nonregen tabl 15 demonstr sabsp succe solv problem remain unsolv tsptwa solut time sabsp rel short compar tsptwa 5 solut time increas instanc solv number job rel small instanc becom difficult nonzero especi unequ hold cost enumer regen schedul solut time sabsp decreas moreov one instanc solv optim n thu even unequ hold cost optim schedul regen case furthermor n instanc would solv within time limit 1200 sec regen schedul would consid 8 summari conclus paper examin discret lotsiz schedul problem dlsp batch sequenc problem bsp present model formul dlsp bsp dlsp decis regard done made individu period bsp decid schedul job dlsp solv bsp dlsp instanc transform schedul one model correspond solut model prove equival model mean optim schedul bsp correspond solut dlsp also optim schedul vice versa order solv bsp effect tri restrict search subset possibl schedul found job one famili preorder accord deadlin furthermor equal hold cost optim start product famili inventori famili solv bsp branch bound algorithm optim face difficulti alreadi feasibl problem difficult must maintain feasibl minim cost time compar schedul model object function rather difficult bsp tight lower bound could thu develop therefor use domin rule prune search tree difficult object function complic domin rule forc us distinguish differ case order evalu approach test special procedur solv variant dlsp despit fact effect lower bound approach prove effici number item small ii instanc hard solv ie capac util high setup time signific appropri schedul job decid individu period dlsp time horizon divid small period paramet base period length bsp paramet also real number setup time particular restrict multipl period length differ model also result differ problem size dlsp bsp problem size dlsp essenti number item n period problem size bsp depend number famili job conjectur approach advantag instanc item small solut space ie long setup time high capac util job sequenc main characterist solut case manag solv instanc 10 5 famili job pc dlsp solut procedur thought better suit lower capacit instanc mani item setup time signific paramet differ among period appropri decid anew individu period futur extend bsp multilevel structur multipl machin acknowledg indebt dirk cattryss marc solomon made avail instanc bernhard fleischmann made avail code furthermor would like thank three anonym refere valuabl comment earlier version paper r singl facil multiclass job schedul complex task sequenc deadlin extens discret lotsiz schedul problem dual ascent column gener heurist discret lotsiz schedul problem setuptim technic note optim algorithm travel salesman problem time window discret lotsiz schedul problem discret lotsiz schedul problem sequencedepend setupcost batch schedul model method sever problem class comput intract guid theori npcomplet minim flow time singl machin job class setup time complex schedul batch setuptim integr schedul batch lot size review algorithm complex extens discret lotsiz schedul problem discret lotsiz schedul sequenc depend setup time cost batch singl oper manufactur system batch sequenc batch sequenc compon singl facil dynam version econom lot size model schedul group job singl machin tr ctr c k lin c l wong c yeung heurist approach schedul problem plastic mold depart audio compani journal heurist v8 n5 p515540 septemb 2002 satyaki ghosh dastidar rakesh nagi schedul inject mold oper multipl resourc constraint sequenc depend setup time cost comput oper research v32 n11 p29873005 novemb 2005