effect buffer perform rtree abstractpast rtree studi focus number node visit metric queri perform sinc databas system usual includ buffer mechan propos number disk access realist measur perform develop buffer model analyz number disk access requir spatial queri use rtree model use evalu qualiti rtree updat oper variou node split tree restructur polici measur queri perform result tree use model studi perform three wellknown rtree load algorithm show ignor buffer behavior use number node access perform metric lead incorrect conclus quantit also qualit addit consid problem mani level rtree pin buffer b introduct rtree 3 common index techniqu spatial data wide use spatial multidimension databas typic applic includ computeraid design geograph inform system comput vision robot multikey index tradit databas tempor databas scientif databas signific amount effort devot develop better rtree construct algorithm 9 1 8 4 5 6 work focus propos compar new algorithm previou one littl work done methodolog compar algorithm notabl except work kamel faloutso 4 theodoridi selli 10 4 author develop analyt model predict queri perform model provid good insight problem especi establish quantit relationship perform total area perimet minimum bound rectangl mbr tree node suffer one major drawback primari object function comparison number node visit real databas portion tree buffer main memori buffer portion tree significantli affect perform consequ propos better metric averag number disk access requir satisfi queri work theodoridi selli 10 provid fulli analyt model requir minimum bound rectangl rtree node input work also focus number node visit model could coupl model done model kamel faloutso order deriv model base number disk access borrow techniqu develop bhide et al 2 context model databas uniform access within sever partit develop new buffer model model use evalu qualiti rtree updat oper node split polici 3 pack algorithm 8 4 measur queri perform result tree model accur simpl understand make easi research integr studi furthermor applic rtree easili modifi model btree perform main contribut paper first buffer model methodolog second demonstr import consid buffer third insight larg buffer use fourth show effect pin top level rtree buffer emphas inclus buffer chang quantit perform algorithm case chang qualit order algorithm buffer model analyt model base simpl probabl theori overal perform model hybrid model start use pack algorithm creat actual rtree variou data set comput minimum bound rectangl tree node use input buffer model rest paper organ follow section 2 provid background inform rtree describ three load algorithm chosen test result sinc choic mean exhaust emphas purpos paper draw irrevoc conclus best load algorithm although allow comparison chosen one rather demonstr need util buffer model section 3 present queri perform model kamel faloutso modif region queri model new buffer model section 4 present valid model section 5 contain result model experi section 6 conclud 2 overview rtree load algorithm section provid brief overview rtree load algorithm detail understand load algorithm use necessari rest paper reader interest detail descript refer articl list bibliographi 21 rtree rtree hierarch data structur deriv btree design effici execut intersect queri rtree store collect rectangl chang time insert delet rectangl arbitrari geometr object also handl repres object smallest upright rectangl enclos rtree gener easili dimens higher two notat simplic describ 2d case node rtree store maximum n entri entri consist rectangl r pointer p leaf level r bound box actual object point p intern node r minimum bound rectangl mbr rectangl store subtre point p note path along tree correspond sequenc nest rectangl figur 1 sampl rtree input rectangl shown solid last actual data object note also rectangl level may overlap rtree set rectangl mean uniqu figur 1 illustr 3level rtree assum maximum 4 rectangl fit per node assum level number 0 root 1 2 leaf level 64 rectangl repres small dark box 64 rectangl group 16 leaf level page number 1 16 note mbr enclos leaf node smallest box fulli contain rectangl within node mbr serv rectangl store next level tree exampl leaf level node 1 4 place node 17 level 1 mbr node 17 node 181920 purpos drawn slightli larger need clariti root node contain 4 level 1 node 17 18 19 20 perform queri q rectangl intern intersect queri region must retriev accomplish simpl recurs procedur start root possibl follow sever path along tree node process first retriev rectangl store node intersect q node intern node subtre point retriev rectangl process recurs otherwis node leaf node retriev rectangl simpli report illustr consid queri q exampl figur 1 process root node determin node 19 20 level 1 must search search proce node case determin queri region intersect rectangl within two node two subqueri termin rtree shown figur 1 fairli well structur insert rectangl rtree base insert algorithm guttman 3 would like result less well structur tree algorithm creat well structur tree develop describ section 22 algorithm attempt cluster rectangl minim number node visit process queri rest paper assum exactli one node fit per page hereaft use two term interchang 22 load algorithm section describ three load algorithm first base insert tupl time use one insert algorithm propos guttman 3 tupleatatim algorithm insert one tupl time rtree use quadrat split heurist guttman 3 note result rtree wors space util structur rel two algorithm discuss next thu node disk access may necessari satisfi queri follow two pack algorithm use similar framework base preprocess entir data file determin group rectangl node follow assum data file r rectangl store tree n rectangl per node whole process similar build btree collect key leaf level 7 gener algorithm 1 preprocess data file r rectangl order drne consecut group n rectangl group n intend place leaf level node note last group may contain less n rectangl 2 load drne group rectangl page output tupl mbr pagenumb leaf level page temporari file pagenumb need set child pointer node one level 3 recurs pack mbr node next level root node remain algorithm differ rectangl level order nearestx algorithm propos 8 rectangl sort xcoordin detail given paper assum xcoordin rectangl center use rectangl pack node use order hilbert sort hs fractal base algorithm propos 4 algorithm order rectangl use hilbert fractal space fill curv center point rectangl sort base distanc origin measur along hilbert curv determin order rectangl place node rtree 3 model descript kamel faloutso 4 introduc analyt model comput averag respons time queri function geometr characterist rtree model consid effect buffer perform measur number rtree node access practic queri perform mainli affect time requir retriev node touch queri resid buffer cpu time requir retriev process buffer resid node usual neglig start describ model kamel faloutso modifi model better fit definit uniformli distribut queri fix size final extend model take account exist buffer includ handl pin buffer top level rtree section consid 2dimension data set consist rectangl store rtree h1 level label 0 h input rectangl normal fit within unit squar assum queri rectangl q size q x theta q uniformli distribut unit squar note point queri correspond case q descript concentr 2d gener higher dimens straightforward throughout section use follow notat number page ith level total number page ie jth rectangl ith level xextent r ij yextent r ij area r ij ie q probabl r ij access queri q number access r ij sum area mbr sum xextent mbr sum yextent mbr number queri perform far expect number queri requir fill buffer number distinct page level access n queri expect number page buffer resid access perform queri size q x theta q expect number disk access perform queri size q x theta q 31 model kamel faloutso kamel faloutso consid bufferless model perform measur number node access independ whether current resid buffer observ uniform point queri probabl access r ij area r ij name ij point level r ij resid immateri rectangl contain q must retriev accordingli point queri expect number node retriev deriv kamel faloutso 1 sum area rectangl leaf level mbr well mbr intern node turn attent region queri let ha b c di denot upright rectangl bottom left top right corner b c respect consid rectangular queri modifi notat 4 make consist notat use paper b figur 2 two data rectangl region queri q b correspond extend rectangl equival point queri q tr q tr top right corner q insid extend rectangl r illustr figur 2 kamel faloutso infer probabl access r perform q area r 0 region queri q equival point queri q tr rectangl extend outlin thu expect number node retriev deriv 4 equat 2 illustr fact good pack algorithm cluster rectangl minim total area total perimet rectangl intern node rtree point queri hand q minim total area enough 32 modif model region queri consid set uniformli distribut region queri size q x theta q queri rectangl prescrib dimens fit entir within unit squar otherwis rectangl would equival possibl much smaller rectangl two potenti problem use equat 2 analyz perform queri fix size b figur 3 domain q tr queri size 03 theta 03 u 0 area shade b three data rectangl probabl access r area r 0 divid area u 0 formula 2 use area r 0 shown dash instead 1 uniformli distribut rectangular queri size q x theta q top right corner q tr queri region q arbitrari point insid unit squar entir queri region fit within unit squar rather q tr must insid box u 2 probabl access rectangl area r valu bigger one rather access probabl percentag u 0 cover rectangl r q differ formula 2 3 small q small becom much larger size q increas illustr figur 3 region queri size 03 theta 03 consid note q tr must fall insid u 0 ie outsid shade area figur 3a three rectangl r 1 r 2 r 3 size 01 theta 02 01 theta 01 005 theta 005 respect shown figur 3b r 3 equat 2 comput probabl equat 3 probabl q access r 1 modifi model 20 resp 16 origin model kamel faloutso differ arguabl matter interpret point origin model predict probabl access rectangl h01 01 09 09i queri size 03 theta 03 121 modif probabl access rectangl 100 point model probabl access input rectangl longer uniform rectangl within shade region figur 3a less like access rectangl insid u 0 altern guarante uniform access probabl allow q tr fall uniformli insid still requir correct model kamel faloutso name q queri window could partial lie outsid area interest thu effect reduc actual queri size sinc want model measur perform function specif queri size rest paper use former interpret even though mean data along edg data set might access less frequent buffer model well experi perform valid access probabl comput use equat 3 use q ij denot probabl rectangl r ij access perform queri q probabl comput appli formula 3 note q point ij simpli ij area r ij 33 buffer model bhide et al 2 analyz lru buffer replac polici databas consist number partit uniform page access within partit model perform buffer warmup observ buffer hit probabl end warmup period good estim steadi state buffer hit probabl conjectur similar behavior would occur context rtree appli lru replac polici name steadi state buffer hit probabl virtual buffer hit probabl buffer first becom full conjectur verifi experiment discuss section 4 uniformli distribut point queri probabl access rectangl r ij perform queri ij accordingli probabl r ij access next n queri expect number distinct page access n queri note may may bigger b buffer initi empti first becom full perform n queri n smallest integ satisfi dn b valu n determin simpl binari computen high high low high2 dn dn low n els high n return n buffer full probabl r ij buffer equal p b ij 1 probabl random queri requir disk access sinc steadi state buffer hit probabl approxim buffer hit probabl n queri expect number disk access point queri steadi state deriv also hold region queri provid q ij use instead ij see formula 3 summar result section expect number disk access requir satisfi uniformli distribut random queri q size q x theta q q q ij probabl q intersect r ij given equat 3 final point easi extend result model buffer manag polici pin top level rtree buffer simpli reduc number buffer page number page pin level omit top level model 4 model valid valid model compar simul simul model lru buffer like model take input list mbr node level gener bufsiz simul model dif simul model dif simul model dif 50 23120 22682 1189 22060 21651 1185 15892 15807 053 100 17008 16862 086 16288 16166 075 12336 12275 049 200 11627 11599 024 11194 11172 020 08720 08710 011 tabl 1 valid averag number disk access per queri model simul random point queri unit squar check node mbr see contain point mbr contain point node request buffer pool node buffer pool least recent use node buffer push new node put top lru stack note simul accur sens rtree implement retriev rectangl intern intersect region queri confid interv collect use batch mean 20 batch 1000000 queri result confid interv less 3 90 confid level ran comparison three differ rtree 6 differ buffer size tree rtree 1668 node mbr node differ produc three differ pack algorithm tabl 1 report averag number page requir disk per point queri predict simul model percent differ rel simul result within 2 less confid interv return simul comparison experi shown result agreement within 2 less simul region queri gave similar result 5 model result section present perform result predict model consid two type queri point queri region queri point queri specifi point unit squar find rectangl contain point region queri specifi region given size find rectangl intersect region queri rectangl size q x theta q whose upper right corner contain region u 0 describ section 32 51 need consider buffer impact figur 4 plot number disk access versu buffer size long beach data set extract tiger system u bureau censu assum rtree 100 rectangl per node left plot point queri right region queri consid top two curv right plot small buffer size tat algorithm requir fewer disk access nx algorithm buffer size 200 perform two algorithm cross nx algorithm becom better algorithm henc ignor buffer would result incorrect conclus tat better nx thu underscor import includ buffer effect comparison studi second experi show consid buffer impact introduc signific error figur 5 present result synthet data uniformli distribut data set creat contain 10000 300000 rectangl rectangl lower left corner uniformli distribut unit squar rectangl squar length chosen uniformli 0 ffl valu ffl fix data set size equal 2 02510000 thu 10000 rectangl data set sum rectangl area equal 025 unit squar 100000 rectangl total area equal 25 time unit squar similar experiment methodolog use 4 top left graph plot number node visit ie buffer consid versu number rectangl data set top right graph plot number disk access versu data set size buffer size 10 bottom graph buffer size 300 ignor buffer impact top left lead conclus queri rtree 300000 rectangl expens queri rtree 25000 rectangl could caus queri optim produc poor queri plan buffer consid fact larger tree expens evid 52 choos buffer size rtree section studi reduct disk access obtain increas buffer size sinc main memori valuabl resourc insight gain alloc buffer space need consid figur 4 number disk access versu buffer size plot point region queri run long beach tiger data set data set 53145 rectangl actual line segment node size 100 rectangl assum result hs nx algorithm 532 page leaf level 6 page level 1 1 root node buffer size vari 2 500 page 04 928 rtree left plot point queri curv plot top bottom tat nx hs rtree produc tat algorithm poorli structur result seem benefit significantli increas buffer size hs tree much better structur experienc halv number requir disk access buffer size 10 addit buffer increas help modestli nx algorithm experi much reduct need disk access small buffer size hs algorithm hypothes better rtree structur capabl capit small amount buffer point queri wherea wors rtree structur linear reduct disk access right plot 1 region queri note region queri none curv data size level 1 root level 2 level 3 level 4 tabl 2 number node per level well defin knee thu base experi appear possibl execut region queri reduct disk access increas buffer size linear point queri 53 choos number level pin past buffer manag studi shown btree root mayb first level pin buffer pool pin node decreas buffer size avail page guarante pin page buffer present experi investig gain perform expect pin rtree node mani level pin experi section want get deeper rtree keep experi time reason creat synthet data set 40000 250000 rectangl use rtree node size 25 result 4 level rtree number node per level shown tabl 2 figur 6 plot number disk access point queri versu data size three buffer size tree creat hs algorithm result algorithm similar plot top left buffer 500 page top right buffer 1000 page bottom graph buffer 2000 page number disk access remain roughli pin pin first root level pin first two level three scenario plot singl top line three graph bottom line pin third level addit first two level gener rule thumb pin level make big differ total number page pin within factor two buffer size total number page pin less one third buffer size margin benefit seen smaller rel number pin page lru replac polici succe keep top level buffer without explicit pin exampl buffer size 500 data size 250000 rectangl pin three level pin 417 page result 53 fewer disk access data size 80000 rectangl 135 page pin save 4 buffer size 2000 pin first three level make almost differ sinc number page pin less one fourth buffer size thu point queri pin advantag total number node pin within factor 2 buffer size note pin never hurt perform henc fix size buffer dedic rtree applic mani level possibl pin buffer share among mani applic benefit pin must compar applic buffer model use predict benefit accru pin number rtree level region queri experi date shown result modest 25 improv pin thu appear pin may mostli benefit point queri even special scenario 6 conclus develop new buffer model predict number disk access requir per queri given input rtree specifi minimum bound rectangl node tree model shown experiment agre simul within 2 numer test case model simpl implement quick solv thu provid use methodolog studi order develop model first modifi earlier rtree region queri model modifi queri model use compon overal model predict number disk access requir per queri model demonstr use number node access per queri perform metric suffici ignor buffer effect show buffer effect taken account quantit predict perform chang qualit predict chang well particular actual order polici differ buffer consid versu consid thu essenti consid buffer effect perform studi rtree use number disk access primari metric addit use model determin data consid small amount buffer superlinearli improv perform well structur rtree point queri poorli structur tree experi linear improv perform due increas buffer space addit find region queri even well structur rtree result linear improv buffer ad final show case pin top level rtree littl effect perform rel use lru buffer point queri find certain scenario buffer size time larger number node level pin level significantli improv perform acknowledg would like thank jeff edgington develop rtree pack algorithm code would also like thank ken sevcik use discuss preliminari version work r simpl analysi lru buffer replacemtn polici relationship buffer warmup transient rtree dynam index structur spatial search pack rtree hilbert rtree improv rtree use fractal simpl effici algorithm rtree pack time space optim btree direct spatial search pictori databas use pack rtree model predict rtree perform tr ctr shuch chen xinran wang naphtali rish mark allen weiss webbas spatial data access system use semant rtree inform sciencesinformat comput scienc intern journal v167 n14 p4161 2 decemb 2004 yongjin choi junki min chinwan chung cost model spatiotempor queri use tprtree journal system softwar v73 n1 p101112 septemb 2004 yufei tao dimitri papadia jun zhang cost model overlap multivers structur acm transact databas system tod v27 n3 p299342 septemb 2002 jignesh patel yun chen v prasad chakka stripe effici index predict trajectori proceed 2004 acm sigmod intern confer manag data june 1318 2004 pari franc victor teixeira de almeida ralf hartmut gting index trajectori move object network geoinformatica v9 n1 p3360 march 2005 byunggu yu thoma bailey process partial specifi queri highdimension databas data knowledg engin v62 n1 p177197 juli 2007 antonio corral yanni manolopoulo yanni theodoridi michael vassilakopoulo cost model distanc join queri use rtree data knowledg engin v57 n1 p136 april 2006