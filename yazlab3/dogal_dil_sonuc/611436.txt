approach zerotre imag video code mimd architectur wavelet transform wide use imag video compress one best known algorithm imag compress set partit hierarch tree algorithm involv wavelet transform today parallelis wavelet transform suffici investig work deal parallelis compress algorithm next step two competit approach present one direct parallelis use alter algorithm suit better parallel architectur b introduct imag video code method use wavelet transform success provid high rate compress maintain good imag qualiti gener much interest scientic commun competitor dct base compress scheme context mpeg4 jpeg2000 standardis process video compress algorithm reli 2d base scheme employ motion compens techniqu hand ratedistort ecient 3d algorithm exist abl captur tempor redund natur way 10 5 4 16 1 unfortun 3d algorithm often show prohibit comput memori demand especi realtim applic therefor mimd architectur seem interest choic algorithm signic amount work alreadi done parallel wavelet transform algorithm sort high perform comput nd variou kind suggest 1d 2d 3d algorithm mimd comput decomposit 8 19 15 13 3 6 well connect imag compress scheme 9 2 zerotre base code algorithm ecient encod approxim wavelet coecient encod collect neglect insignic coecient singl symbol collect call zerotre treelik arrang wavelet coecient exploit wavelet transform selfsimilar properti parallelis ezw algorithm import zerotre code scheme present 2 two approach propos one straightforward parallelis perform ezw algorithm local process element pe distinct block make result bitstream bs incompat sequenti algorithm approach reserv one pe collect symbol encod pe perform reorder symbol encod approach similar approach present work far author understand compat sequenti ezw improv ezw spiht algorithm set partit hierarch tree 14 well known fast ecient algorithm also use 3dvariant video compress 5 howev algorithm make use list coecient make hard parallelis mean although consecut list entri initi point neighbour wavelet transform coecient algorithm jumbl entri thu easi data driven parallelis approach packetis spiht algorithm present 17 similar rst approach 2 output sever execut spiht spacial block multiplex base rate alloc techniqu approxim distort reduct fast spihtspec statist howev result bitstream bs compat sequenti spiht work concentr parallelis spiht algorithm present two competit approach rst direct parallelis ie sequenti algorithm map parallel architectur without alter sequenti algorithm sever trick found overcom involv parallelis diculti second approach introduc variant spiht involv spacial orient coecient scan order thu avoid problem rst approach similar algorithm propos 18 11 12 although breadthrst scan order tree coecient 18 psnroptim depthrst scan order 11 12 prefer better spacial separ 11 parallel wavelet transform fast wavelet transform ecient implement pair appropri design quadratur mirror filter qmf consist lowpass highpass lter decompos origin data set two frequencyband subband downsampl 2 procedur recurs appli coars scale lowpass ltere subband 2d case consecut ltere row column produc four subband eight 3d case one ltere lowpass lter dimens decompos call pyramid wavelet transform perform wavelet transform parallel data distribut among pe way work data split slice time domain ltere perform parallel local data border data exchang decomposit step neighbour pe due lter length transform data found distribut shown figur 1 contrast parallelis wavelet transform present previou paper7 parallel wavelet transform use dispens video data distribut well collect transform data initi data distribut necessari input perform parallel ie pe read part video data note speedup report work includ io oper io view part algorithm anoth advantag drop hostnod paradigm extra singl pe respons data distribut likewis collect transform data necessari data pass code part algorithm also perform parallel redistribut data requir see section 22 32 2d case b 3d case figur 1 distribut coecient list entri parallel wavelet transform dierent colour indic dierent pe 12 zerotre zerotre base algorithm arrang coecient wavelet transform treelik manner figur 2 ie coecient certain number child coecient anoth subband mostli 4 2d 8 3d case use follow notat op direct ospr coecient p ie coecient whose parent coecient p descp descend coecient p includ op oop parentp parent coecient p p 2 oparentp furthermor zerotre subtre entir consist insignic coecient signic coecient rel threshold play import role spiht algorithm statist properti transform imag video data selfsimilar ensur exist mani zerotre set insignic coecient encod ecient help zero tree see sometim root coecient subtre even direct ospr insignic zerotre view collect coecient approxim equal spacial posit fact impli coecient signic statist relat exploit spiht algorithm also mean zerotre local object correspond data distribut produc parallel wavelet transform see figur 2 exploit parallelis zerotre algorithm see section 22 32 parallelis without algorithm alter 21 spiht algorithm although spiht algorithm sucient explain origin paper14 help context reformul algorithm figur 2 parallel decomposit data distribut way zerotre resid singl pe threshold li lip approxim subband set lsp empti renement step threshold threshold 2 process li process lip process lsp pseudo code li lip lsp coeffici process process process bs sig sign refbit sig sign b data ow graph figur 3 spiht algorithm signic inform repres three list li list insignic set pixel entri list two type type type lip list insignic pixel lsp list signic pixel li basic contain zerotre root entri type correspond insignic subtre without root entri type b correspond insignic subtre without root root direct ospr lip contain insignic coecient part zerotre li lsp contain signic coecient li lip lsp bs initialis read separ process separ end li lip lsp bs li lip lsp bs li lip lsp bs figur 4 function separ four state three list bitstream process li algorithm shown coars level figur 3 initi threshold greater coecient thu li lip lled approxim subband coecient lsp empti entri list test chang signic result test encod bit bitstream bs instanc type entri li turn insignic precis descend zero bit written bitstream entri delet li insert type b entri end li direct ospr insert end lip entri insert end list also process renement step entri left figur 3b show data ow graph renement step decod process perform algorithm howev evalu signi canc list entri simpli read inform bitstream approxim valu correspond coecient good 22 spiht parallelis parallelis spiht algorithm face problem use list coecient posit therefor inher sequenti reason hard perform gener list oper distribut list nevertheless set distinct list oper involv spiht algorithm limit enabl us develop ecient way manag distribut list coecient 221 separ basic oper algorithm move iter list delet element iter posit append element end list aim distribut list peloc entri correspond local coecient coecient distribut among pe shown figur 1 simpl task initi distribut howev coecient append end list one provid mechan indic part list belong pe pe view sequenc local coecient end part anoth pe list insert work done separ see figur 4 idea insert separ end part list entir belong singl pe initi approxim subband split equal slice slice assign singl pe pe local list li lip lled coecient pe local slice separ append end list sequenti algorithm perform local one except time iter meet separ separ copi end destin list destin list list entri potenti insert current list process see figur 3b appli principl list l pe split separ part l ij assembl list ident list sequenti algorithm would produc true bitstream enabl parallel algorithm assembl bitstream correctli pe encod part wavelet coecient import question process list ie renement step complet essenti procedur stop process last nonsepar entri list unfortun guarante pe produc number separ howev necessari condit correct parallel algorithm wise correct order listpart would lost therefor global maximum number separ calcul unfortun synchronis pe list lled separ algorithm continu next renement step fact even process list matter fact number separ grow exponenti number renement step often separ appear row togeth list avoid unnecessari memori demand consecut separ kept togeth singl entri associ counter mean separ entri contain counter insert end list separ entri also contain counter alreadi sit counter simpli ad 222 algorithm termin anoth problem termin whole algorithm sequenti case process termin requir number bit written bitstream parallel case test global test execut end renement step thu parallel algorithm potenti gener much bit cours decreas speedup inconveni case necessari super uou bit simpli cut assembl bitstream due natur spiht algorithm procedur assembl bitstream collect peloc bitstream sequenti part algorithm unfortun get complic therefor consum calcul time number pe increas result signic decreas speedup 223 parallel spiht decompress note revers algorithm reconstruct video data bitstream method describ applic although part work shortli outlin idea implement parallel spiht decod first whole bitstream copi pe also pe process bit bitstream independ whether belong local coecient therefor global list kept pe speedup potenti adjust nonloc coecient involv oat point oper threshold descp offp figur 5 predic use algorithm keep consecut nonloc list entri entri belong nonloc coecient togeth singl entri associ counter similar separ possibl posit inform need nonloc entri although seem simpl approach impli necess process synchronis contain sequenti part 3 parallelis algorithm alter approach describ reveal drawback eg complic bitstream handl addit commun need nonneglect sequenti code part direct consequ fact spiht algorithm inher sequenti therefor modifi sequenti algorithm although result bitstream compat spiht parallelis alter algorithm cours compat sequenti version basic idea substitut list coecient posit involv algorithm bitmap indic membership coecient certain list result list iter use frequent process list entri turn normal scan coecient follow certain spacial direct thu data driven parallelis perform easili loop parallelis coecient scan 31 zerotre compress signic map sm follow use three logic predic ap bp cp dene figur 5 ap simpli denot signic coecient p bp true least one ps descend signic cp denot includ direct ospr p visualis figur 5 state signic given set coecient describ predic term zerotre correspond predic use map b c essenti repres b c dierenc b c immedi chang valu threshold chang therefor implement functionprocedur use program languag b c updat explicitli therefor implement array boolean valu call b c signic map sm substitut list coecient see section 21 algorithm respons equal b c b c respect processal threshold set b c fals renement step threshold threshold 2 p approximationsubband c p renep els p ap q op figur base zerotre code algorithm threshold success decreas factor 1 2 done avoid evalu b c far possibl follow idea spiht algorithm result evalu encod bitstream one bit allow decod reproduc decis encod made algorithm obey rule shown figur 6 outer loop renement loop divid threshold 2 iter exactli origin algorithm within loop algorithm navig set coecient along tree coecient depthrst manner major dierenc sm base algorithm spiht start set coecient contain approxim subband accomplish recurs procedur processco coecient p state b c check one anoth p ap evalu p fals transit true 7 fals possibl p ap true sign p encod well p alreadi true procedur rene call endecod anoth bit coecient valu rene decod approxim p bp evalu b p fals cp evalu c p fals b p true last recurs child coecient perform b p true obviou reason decod algorithm look exactli dierenc instead encod result evalu b c inform read bitstream togeth sign renementbit enough inform enabl decod perform step encod approxim coecient error threshold note algorithm encod inform fact bit spiht algorithm order bit dierenc mean end renement step compress perform equal spiht order bit written bitstream crucial bit dierent eect decod imag thu import encod bit greater eect rst figur 7 show comparison psnrperform wellknown lenaimag 2d case algorithm show major drawback respect origin spiht nevertheless almost overcom scan set coecient sever pass rst pass process coecient part zerotre signic subsequ pass check state zerotre root process coecient emerg decompos zerotre method denot sophist figur 7 nevertheless improv algorithm use work parallelis investig psnr bpp sm simpl sophist figur 7 psnr sm base algorithm compar origin spiht 32 parallelis contrast origin spiht algorithm parallelis sm base algorithm easi base fact parallel wavelet transform data distribut way zerotre local object see figur 2 parallelis inner loop procedur processal read p approximationsubband accord data distribut approxim subband see figur 1 comput within renement step localis ie peloc comput depend data neighbour pe commun requir within renement step pe produc one continu part bitstream renement step end part collect singl pe assembl properli ie altern way direct spiht parallelis major bottleneck howev number bitstream part reduc signicantli speed bitstream assembl termin problem see section 22 pe synchronis end renement step determin global number bit produc far sucient howev synchronis drop termin condit bitstream size xed number renement step 4 experiment result experiment result conduct cray t3e900lc edinburgh parallel comput centr use mpi video data size alway 864 frame 88 72 pixel video sequenc use upart grandma wavelet transform perform level 3 note data size limit memori constraint case number pe 1 singl pe hold video data number frame high enabl uniform data distribut parallelis well downscal wavelet transform output bpp overal code figur 8 sequenti speedup sm base algorithm respect spiht thu frame size small realworld scenario howev frame size bigger reason frame size scalabl dicult measur nevertheless linear scalabl assum due author experi fact execut time code part depend video data size number output bit first look sequenti perform sm base algorithm slower origin spiht parallelis would make sens howev figur 8 show outperform origin spiht especi higher bitrat hand mean even harder get reason speedup figur 9 show speedup xed compress rate 014 bpp bit per pixel pixel dierent frame count dierent pixel fact speedup curv smooth ie discontinu 54 caus divis 864 length video sequenc determin size local data subset note due depth wavelet transform 3 size divid 8 result number divid number pe alway possibl without remaind sequenti bitstream assembl take execut time higher number pe share execut time get higher 50 code part note point particular hardwar implement bitstream assembl integr output modul separ actual code speedup two dierent algorithm show complic bitstream assembl main problem direct spiht parallelis could solv ecient domin problem pe synchronis sequenti code part present approach howev sm base algorithm expect gain lower parallelis ecienc two reason own commun overhead sequenti algorithm faster less potenti posit cach eect parallelis optim cach utilis due spacial orient coecient scan suppos main reason sm base algorithm faster overal spiht overal code b sm base algorithm figur 9 speedup vari pe xed compress rate 014 bpp fact parallelis ecienc strongli suggest bitstream assembl parallel sm base algorithm ecient figur show speedup curv xed pe vari compress rate cours execut time wavelet decomposit depend compress rate reason speedup breakdown certain compress rate termin problem parallel algorithm see section 222 parallel algorithm optim compress rate achiev end renement step note although speedup code part increas bitrat overal speedup remain constant drop slightli share execut time code part increas bitrat problem unevenli distribut complex illustr figur 11 approxim rst half video sequenc substitut carphon sequenc contain much motion grandma sequenc caus bigger coecient valu higher frequenc subband complex video part thu coecient process within renement step make algorithm consum comput time load balanc problem consequ one clearli see necess process synchronis sever point algorithm lead increas idl time pe wait pe figur 12 show speedup compar figur 9 slightli reduc problem conclus seen inher sequenti zerotre code algorithm parallelis although speedup overwhelm present way parallelis prevent necess perform code sequenti thu reason speedup possibl higher number process element whole rang compress rate two method parallelis either use call separ output bpp decomposit overal spiht spiht 8 pes26100004 output bpp decomposit overal code b sm base 8 pes5150004 output bpp decomposit overal spiht c spiht output bpp decomposit overal code sm base output bpp decomposit overal spiht output bpp decomposit overal code figur 10 speedup decomposit code overal speedup vari compress rate evenli distribut complexity13579 b unevenli distribut complex figur execut scheme decomposit spiht code 10 pe time horizont axi measur millisecond nearli vertic black line indic data transfer horizont grey bar indic calcul phases515253510 20 overal spiht figur 12 speedup video unevenli distribut complex xed compress rate 014 bpp rewrit algorithm better parallel architectur signic map base algo rithm rst method complic guarante compat origin spiht bitstream second method show similar speedup result better execut time although unevenli distribut imagemot complex decreas speedup potenti eect seem keep within limit acknowledg author would like acknowledg support european commiss tmr grant number erb fmge ct950051 trac programm epcc author also support austrian scienc fund fwf project p13903 r imag code use parallel implement embed zerotre wavelet algorithm scalabl 2d discret wavelet transform algo rithm embed wavelet video coder use threedimension set partit hierarch tree spiht parallel algorithm twodimension discret wavelet transform hardwar softwar aspect 3d wavelet decomposit share memori mimd comput optim 3d wavelet decomposit multiprocessor parallel 2d fast wavelet transform space lling curv imag scan video compress use 3d wavelet transform listless zerotre code color imag 3d listless zerotre code low bit rate video scalabl 2d wavelet transform algorithm analyt experiment result coarsegrain parallel comput vector parallel implement wavelet transform multir 3d subband code video imag compress without list parallel discret wavelet transform paragon mimd machin tr scalabl 2d discret wavelet transform algorithm hardwar softwar aspect 3d wavelet decomposit share memori mimd comput embed wavelet video coder use threedimension set partit hierarch tree spiht ctr roland norcen andrea uhl high perform jpeg 2000 mpeg4 vtc smp use openmp parallel comput v31 n1012 p10821098 octob decemb 2005