finit state machin string infinit alphabet motiv formal model recent propos context xml studi automata logic string infinit alphabet conserv extens classic automata logic defin regular languag finit alphabet specif consid regist pebbl automata extens firstord logic monad secondord logic type automaton consid oneway twoway variant well determinist nondeterminist altern control investig express complex automata connect logic well standard decis problem result answer open question kaminski francez regist automata b introduct one signific recent develop relat world wide web www emerg extens markup languag xml standard data exchang web 1 sinc xml document tree structur usual defin dtd xml queri model map tree tree tree transduc tion schema languag close relat tree automata automata theori natur emerg central tool formal work xml 5 17 18 19 20 21 22 23 connect logic automata prove fruit understand languag develop optim algorithm static analysi techniqu howev abstract ignor import aspect xml name presenc data valu attach leav tree comparison test perform xml queri data valu make big dierenc inde case differ decid undecid eg see 4 therefor import extend automata logic formal tree data valu initi investig model data valu infinit alphabet consid simpler case string rather tree string also relev tree case formal allow reason along path tree case xml would accur consid string label finit alphabet attach data valu posit preliminari version titl toward regular languag infinit alphabet appear proceed 26th intern symposium mathemat foundat comput scienc mfc 2001 czech republ 2001 postdoctor research fund scientif research flander author support part nation scienc foundat grant number iis9802288 string howev would render formal complic bear result although limit string believ result provid use start point investig gener problem particular lowerbound result easili extend tree consid model accept precis regular languag restrict finit alphabet use observ infinit alphabet longer sucient equip automata state alon inde automata least abl check equal symbol two main way 1 store finit set posit allow equal test symbol posit 2 store finit set symbol allow equal test symbol first approach howev lead multihead automata immedi go beyond regular languag therefor instead equip automata finit set pebbl whose use restrict stack disciplin automaton test equal compar pebbl symbol second approach follow kaminski francez 15 14 extend finit automata finit number regist store alphabet symbol process string automaton compar symbol current posit valu regist base comparison decid store current symbol regist addit automata consid anoth wellknown formal monad secondord logic mso precis associ string firstord structur standard way consid extens mso fo denot mso fo done gradel gurevich context metafinit model 8 mso proven good yardstick gener regular languag investig eg tree infinit string 25 graph 6 result concern express power variou model provid lower upper complex bound consid standard decis problem mention automata model consid determinist nondeterminist n altern control well oneway twoway variant denot automata model dcx 1 2 1 2 stand one twoway respect n stand determinist nondeterminist altern pa ra pebbl regist automata main result follow express result also repres figur 1 regist pursu investig regist automata initi kaminski francez 15 particular investig connect ra logic show essenti incompar inde show mso defin 2dra furthermor even properti fo express 2ara proof latter base commun complex 12 next consid relationship variou ra mod el separ 1nra 2dra 2nra 2ara subject standard complexitytheoret assumpt pebbl consid two kind pa one everi new pebbl place first posit string one everi new pebbl place posit current pebbl refer strong weak pa respect clearli pebbl placement make dierenc case oneway pa oneway case strong 1dpa simul fo weak 1npa whenc name proof latter separ base commun complex furthermor show pebbl automata variant defin mso final provid evid strong pa robust notion show power strong 1dpa strong 1npa 2dpa 2npa coincid decis problem final consid decis problem ra pa answer sever open question kaminski francez first show univers contain 1nra nonempti 2dra und cidabl next obtain nonempti undecid even weak 1dpa ra orthogon logic defin class one might argu pa better suit defin notion regular languag infinit alphabet inde reason express lie fo mso furthermor strong pa form robust notion ad twoway nondetermin increas express class defin languag close boolean oper concaten kleen star captur exactli mso like requir signific extens pa mso one express complet problem everi level polynomi hierarchi comput 2apa p relat work kaminski francez first consid ra call finitememori automata handl string infinit alphabet show 1nra close union intersect concaten kleen star show nonempti decid 1nra contain decid 1nra automaton contain test two regist input restrict finit alphabet pa recogn regular languag even presenc altern 18 point pebbl mechan employ base one milo suciu vianu 18 liber one use globerman harel 9 inde case pebbl place automaton still walk whole string sens presenc pebbl globerman harel prove certain lower bound gap succinct express automata overview paper organ follow section 2 provid formal framework section 3 studi regist automata section 4 examin pebbl automata conclud section compar regist pebbl model section 6 consid decis problem end discuss section 7 consid string infinit alphabet formal dstring w finit sequenc 1 n languag set dstring often deal 2way automata delimit input string two special symbol left right end string neither ie automata alway work string form denot domw set 1 w w length w domw also write val w 21 regist automata explain introduct regist automata finit state machin equip finit number regist regist hold valu process string automaton compar symbol current posit valu regist base comparison decid store current symbol regist stress allow oper regist apart assign comparison symbol current process transit depend current state whether current symbol alreadi present regist transit relat specifi chang state movement head possibl whether current symbol store regist follow definit kaminski francez 15 14 tupl q q 0 f 0 p q finit set state q 0 q initi state f q set final state initi regist assign p finit set transit form q q q q given string w configur b w tupl j initi configur 0 1 q 0 0 configur j q q f accept given transit p respect p appli val w j 1 k given defin one step transit relat configur follow transit q q appli respect transit q q appli j defin previou case obtain set val w j denot transit closur intuit transit q q appli valu current posit regist transit appli valu current posit dier valu regist case current valu copi regist requir initi regist assign contain symbol automata recogn boundari input furthermor right transit lefttransit allow usual string w accept b 0 accept configur languag lb accept b defin v v accept b automata defin far gener nondeterminist automaton determinist configur one transit appli lefttransit automaton oneway altern automata defin subsect 23 explain introduct refer automata dcra 1 2 clearli input restrict finit alphabet ra accept regular languag 22 pebbl automata pebbl automata finit state machin equip finit number pebbl ensur regular behavior use pebbl restrict stack disciplin pebbl number 1 k pebbl place pebbl present string highestnumb pebbl present string act head automaton transit depend current state pebbl place current posit head equal type data valu place pebbl transit relat specifi chang state movement head possibl whether head pebbl remov new pebbl place pebbl remov pebbl becom current head formal definit borrow notat milo suciu vianu 18 kpebbl automaton tupl q q finit set state q 0 q initi state f q set final state finit set transit form form p v q p v q 1 k form q q q stay left right placenewpebbl liftcurrentpebbl given string w configur w form 1 k q q 1 domw call pebbl assign depth configur pebbl assign sometim denot depth configur pebbl assign depth depth initi configur 0 1 q 0 configur q q f accept transit p v p appli configur 1 2 3 4 val w transit p v q appli 13 hold transit p v q appli intuit p v p appli configur pebbl current head p current state v set pebbl see symbol top pebbl p set pebbl sit posit top pebbl current symbol seen top pebbl finit set transit automaton identifi finit number distinguish symbol henc everi regard constant regist model constant determin initi regist assign defin transit relat follow q q transit p appli q liftcurrentpebbl definit accept languag determinist oneway analog case regist automata refer automata dcra c definit new pebbl place posit recent pebbl altern would place new pebbl begin string choic make dierenc twoway case signific oneway case refer model defin weak pebbl automata latter strong pebbl automata strong pebbl automata formal defin set placenewpebbl case definit transit relat 23 altern automata automata model also defin altern version altern automata addit set u q univers state set q u call existenti automaton nondeterminist run w tree node label configur follow 1 root label initi configur 2 everi inner node label existenti configur exactli one child 3 everi inner node label univers configur children label accept run run everi leaf node label final configur languag accept defin w accept run w 24 logic consid firstord monad secondord logic dstring represent well logic special instanc metafinit structur logic defin gradel gurevich 8 string w repres logic structur domain domw natur order domain function instanti val w atom formula form x obviou semant logic fo obtain close atom formula boolean connect firstord quantif domw henc quantif allow logic mso obtain ad quantif set domw quantif allow sentenc defin set string usual way precis l w exampl consid defin set string everi posit carri dierent symbol 25 complex class infinit alphabet separ result rel complexitytheoret assumpt end consid straightforward gener standard complex class like logspac nlogspac ptime case infinit alphabet defin class use gener ture machin gtm devic introduc hull su 13 model comput queri infinit alphabet inform gtm ture machin two rightinfinit tape tape alphabet infinit input consist string tape alphabet initi place leftmost first tape move similar classic ture machin except equal symbol head test move symbol one head written tape cell head gtm also test equal constant distinguish finit subset tape alphabet write constant either tape classic complex class c one defin analog c gtm model natur way exampl p consist languag accept gtm alway stop polynomi mani move respect length input immedi show usual complex 26 terminolog sequel present sever express complex result first introduc notat b two formal defin languag dstring write everi languag defin defin b everi b b final write b b b addit express power formal interest comput complex follow problem let formal defin languag dstring membership problem determin given w whether w la consid data complex consid fix henc complex measur size w two problem interest univers contain first problem decid whether given second determin whether complex measur respect 1 2 respect 3 regist automata start investig ra particular compar fo mso main result ra orthogon logic even express fo properti express properti defin mso separ variant ra subject standard complexitytheoret assumpt 31 express show properti dstring defin mso easili express 2dra rest paper make extens use symbol delimit therefor assum theorem 3 2dra mso proof consid string form uv u v defin n u n v set symbol occur u v respect denot n u n v cardin show 2dra accept uv n mso sentenc first introduc notat string w denot lmow posit w leftmost occurr suppos n everi j lmo u n u n v visit lmo u 1 sequenc henc n b reach simultan automaton reject input string otherwis accept remain explain 2dra visit lmo u 1 sequenc clearli lmo u 1 lmo v b 1 first posit u v spectiv valu b store regist comput i1 b i1 inde comput i1 proce follow first move head posit lmow go left boundari afterward walk right encount test posit lmow start carri leftmost occurr symbol done follow posit lmow goe left either see reach left end string former case goe back lmow identifi first proce lmow 1 latter case lmow carri leftmost therefor i1 identifi comput b i1 done similar way assum toward contradict mso sentenc uv c set dsymbol occur call string uv admiss dsymbol occur u v c occur u v let obtain replac occurr everi occurr everi admiss string 1 n e 1 would mso defin therefor regular lead desir contradict mso proven good yardstick gener regular string languag tree graph 6 25 theorem suggest ra behav nonregular manner follow proposit show essenti due abil move head direct proposit 4 mso simul everi 1nra proof let describ construct mso formula hold input accept comput w first guess posit w state b read done existenti quantifi set q qq next guess posit transit b appli read w done quantifi set tt assum accept comput b w q qq tt chosen accordingli regist j regist content b read posit determin follow form q q j straightforward express mso even fo abil determin regist content easi check fo q qq tt consist transit relat b far one might think 2way regist automata simpli strong compar mso logic next result provid evid comput model base regist simpli compar logic precis show ra captur fo even altern proof base commun complex argument commun complex see eg 12 input string divid predetermin manner two parti gener refer ii send messag accord given protocol languag accept protocol string parti decid execut protocol whether string belong languag parti unlimit comput power part string protocol restrict way parti commun typic restrict form number messag next sketch main idea separ 2dra fo basic idea extend deal altern proof theorem 5 consid string form uv u v encod set set dsymbol suitabl way seen languag u v repres set set defin fo show languag accept 2dra note 2dra work string form uv simul protocol follow way given u ii given v first parti simul 2dra comput tri cross delimit right point send present state q data valu 1 k current regist henc ii get full inform configur posit symbol fix iisend turn current configur process continu one parti detect final state kind protocol simul behavior first need messag everi configur suppos restrict n dierent data valu string uv q n k dierent messag need k number regist q set state 2d ra call sequenc messag dialogu need consid dialogu length everi messag sent everi direct henc 2 dierent dialogu input string consist n dierent dsymbol latter valu exponenti n howev 2 2 n set set n dierent dsymbol larg enough n must dierent string uu vv accept protocol via dialogu mean uv also accept henc protocol defin l impli 2dra accept l proof theorem 5 extend idea altern requir exchang partial comput tree 2ara appli count trick consid deepli nest hyperset proof techniqu inspir proof abiteboul herr van den buss che 2 separ tempor queri languag etl tsfo end show everi queri etl special sort databas evalu commun protocol constant number messag wherea case tsfo case simul 2dra 2ara need power protocol number messag depend number dierent data valu u v theorem 5 fo 2ara proof start terminolog let finit infinit set 1hyperset finit subset 1 ihyperset finit set 1 hyperset often denot ihyperset superscript eas present assum contain natur number d1 j next let j 0 fix induct defin encod ihyperset j first string encod 1hyperset j encod w 1 w n 1hyperset iw 1 iw 2 iw n encod ihyperset hw languag uv u v encod mhyperset dm lemma 6 l defin fo proof let k 1 fix k defin express input w interv x x r r encod ihyperset x z abbrevi xx z clean abbrevi formula formula hyp express x x r encod ihyperset therefor let 1 clean formula induct defin follow 1 languag l k express formula 1 max refer first last element string respect 1 successor function next show 2ara recogn l describ underli idea larg enough 2ara simpli commun enough inform two side input string check whether hu definit 7 let p binari predic ihyperset let k l 0 say p comput k lcommun protocol two parti denot ii polynomi p finit set finit alphabet size pd ihyperset x comput follow 1 get x ii get know 2 send messag 1 x ii ii repli messag b messag khyperset 3 send messag ii ii repli messag b 4 exp l pd round messag exchang ii enough inform decid whether p x hold precis appli boolean function r1 x b r b r1 r ii evalu true formal protocol consist function 1 r1 b 1 b r1 note comput power ii complet arbitrari lemma 8 4 l comput 22commun protocol proof suppos protocol comput l everi finit set el ement number dierent possibl messag number 2hyperset exp 2 pd call complet sequenc exchang messag 1 b 1 2 b 2 dialogu everi dialogu exp 2 pd round henc dierent dialogu howev number dierent mhyperset exp henc 4 larg enough mhyperset protocol give dialogu p x x mean also give dialogu p x lead desir contradict refer string form uv u v contain split string commun protocol comput string assign u v ii lemma 9 split string languag defin 2ara recogn 22commun protocol proof let work split string assum wlog transit possibl final configur assum b never chang direct symbol henc split string uv leav u right enter v vice versa defin p polynomi pn qn k number configur assum posit label string n dierent data valu let uv input split string let set data valu occur w let posit string split symbol e set e q set configur assum posit split symbol refer configur note essenc parti comput partial run send configur b walk part string parti concret comput run b u leav run consist configur final configur inner vertex label configur send ii set set configur appear leav run parti ii turn comput inform run start set configur receiv send process repeat exp 2 messag messag contain empti set input accept final configur transmit presenc empti set indic run leav accept configur next describ formal configur q call uconfigur e vconfigur configur call uconfigur assum left vconfigur assum right note assumpt never chang direct distinguish two set configur introduc follow notion arbitrari configur run run root label leav label final configur configur inner vertex besid possibl root label configur run defin leaflabelst set configur occur leav set c configur defin c 1 set set configur note c 1 comput set c 1 configur final set 2 set configur defin 2 2 c 1 singleton 2hyperset contain singleton set 0 0 0 recal 0 initi configur defin sequenc 2hyperset configur i1 1 note 0 even 2hyperset vconfigur odd 2hyperset uconfigur let us call run ipass run leaf configur either accept configur reach comput visit exactli time clearli c 1 ipass run b w c 1 vice versa henc b accept w c 1 contain empti set protocol work follow parti start send 1 0 parti ii receiv 2i1 respond 2i parti receiv 2i respond 2i1 parti accept whenev 2hyperset empti set transmit exp 2 dierent 2hyperset parti reject empti set never obtain exp 2 round messag lemma 8 9 l comput 2ara henc theorem 5 follow 32 control previou section relat ra logic section compar ra variou kind control kaminski francez alreadi show 1dra weaker 1nra properti data valu dierent 2dra 1nra separ class reli complex theoret assumpt explain next main observ string special shape ra simul multi head automata string even length odd posit contain pairwis distinct element even posit carri symbol finit alphabet say b store uniqu id preced bs ra rememb posit head multihead automaton note 2dra check whether input string desir form determinist nondeterminist altern multihead automata recogn precis logspac nlogspac ptime languag respect membership 2dra 2nra 2ara hard class respect 24 16 furthermor easi see respect membership problem also belong infinit alphabet variant class actual even complet class one alway encod string infinit alphabet binari alphabet thu show follow proposit proposit 10 1 membership 2dra complet logspac 2 membership 2nra complet nlogspac 3 membership 2ara complet ptime index techniqu use 1nra check whether odd posit form uniqu index howev extend 2 1nra use direct reduct nlogspacecomplet problem order reachabl proposit 11 membership 1nra complet nlogspac proof clearli membership nlogspac hard use reduct order reachabl given order graph properti edg u v u v path first node last one problem hard nlogspac inde ordinari reachabl complet nlogspac nlogspac follow logspac reduct ordinari reachabl order reachabl given graph g n node sourc sink construct graph g vertic graphic edg j edg g sourc sink 1 n respect clearli reachabl g n reachabl 1 g g comput logspac henc order reachabl hard nlogspac next reduc latter membership problem 1nra input 1nra form 1 11 1i 1 2 21 2i 2 n j j1 ji j encod edg j jl 1nra accept n reach 1 follow edg everi order graph encod list henc sinc order reachabl hard nlogspac membership 1nra consequ proposit 11 four class defin mention automata model dierent unless correspond complex class collaps refer reader figur 1 visual represent relationship 4 pebbl automata next focu pebbl automata show pa better behav ra respect connect logic sens pa regular ra inde show strong 1dpa simlat fo even liber pebbl model 2apa defin mso furthermor separ 2ara mso usual complexitytheoret assumpt next show weak oneway pa suce captur fo proof base commun complex final prove strong pa oneway twoway determinist nondeterminist variant collaps togeth straightforward closur boolean oper concaten kleen star result suggest strong pa defin robust class languag 41 express proposit 12 fo strong 1dpa proof clearli fo defin dstring even length 1dpa strong easili inclus note fo sentenc prenex normal form evalu straightforwardli strong 1dpa use one pebbl quantifi pebbl 1 use outermost quantifi pebbl largest number use innermost quantifi automaton cycl possibl assign posit pebbl henc variabl record state inform equal inequ among symbol pebbl posit next show pa subsum mso thu behav regular manner theorem 13 mso simul 2apa proof proof extens infinit alphabet proof 18 shown altern treewalk pebbl automata finit alphabet simul mso brief reduc simul problem kpebbl automaton altern graph access problem agap 10 altern graph andor graph graph e whose node v partit andnod node consist pair g x g altern graph x access vertex g access defin follow andnod access successor access ornod access least one successor access note andnod successor definit access shown set access node defin mso therefor mso inde consid formula reverseclos unari relat contain andnod respect given altern kpebbl automaton string construct follow andor graph e ornod configur w whose state existenti andnod configur whose state univers togeth addit distinguish andnod set edg e accept follow directli definit la agap string w la initi configur 0 access graph gaw henc remain show express agap problem gaw mso diculti lie fact node gaw tupl node input structur w configur repres itupl 1 q depend w encod separ henc set 1 longer unari circumv reli special properti gaw name two node describ itupl 1 jtupl 1 j connect edg either tupl agre last posit follow stack disciplin pebbl last pebbl move allow us quantifi independ dierent portion graph construct reli observ outlin construct next simplic assum wlog univers state q either p v q two state q 1 q 2 p v q also conveni assum q partit disjoint state q control pebbl furthermor enumer state q consid first case use singl pebbl illustr one encod state configur encod transit simplic consid transit involv constant deal transit without constant easi gener case one pebbl configur assimil pair q x transit simplifi q p stayleftright mso formula defin accept use dierent unari relat j state q j q name reverseclos reverseclos formula state 0 close revers transit accord andor semant thu state initi configur access andor graph gaw follow hold accept w formula reverseclos direct represent transit edg gaw mso transit q u q u existenti reverseclos includ one conjunct exampl correspond conjunct succx fo formula defin successor relat domw q u univers q u transit q u reverseclos includ conjunct see hold w accept w suce notic similar 1 3 one need observ formula reverseclos gener graph 2 becom formula instanti gaw exampl notic andnod gaw zero two successor henc univers quantifi 2 becom conjunct extend 3 case k arbitrari defin predic reverseclos state n i1 1 n close revers transit mso formula equival 3 reverseclos replac reverseclos 1 predic reverseclos assum pebbl fix posit describ free variabl x 1 x also free variabl predic consid move aect pebbl partit transit set transit state q reversedclos transit lift place pebbl reverseclos except also inspect presenceabs previou i1 pebbl test equalityinequ correspond valu current valu exampl correspond gener transit p v q use formula new transit liftcurrentpebbl placenewpebbl transit determin follow conjunct reverseclos reverseclos i1 v note resembl i1 3 q v act initi state pebbl 1 note q u act termin state pebbl complet proof translat mso note stack disciplin impos use pebbl essenti construct proof open whether inclus strict howev show follow proposit 14 everi n mso formula membership problem hard p respect contrast membership 2apa ptimecomplet proof ajtai fagin stockmey 3 show everi level polynomi hierarchi ph mso formula graph model check hard level henc suce observ graph readili encod string describ translat mso formula mso formula translat graph e string wg g henc model check hard level ph model check correspond level ph end defin wg string consist block form 1 k ei j let vertexx obtain replac everi occurr ex induct replac insid outsid everi occurr subformula xx x xvertexx xvertexx xx xx vertexx xx xx vertexx complet descript translat latter statement proposit recal configur kpebbl 2apa consist state k posit pebbl take logarithm space size input therefor 2apa simul alogspac equal ptime hard follow reduct agap defin proof theorem 13 proposit 12 theorem 13 show pa fall nice fo en mso next subsect show determin nondetermin one twoway coincid strong pa open whether altern control yield addit power end subsect consid weak pa recal weak pa place new pebbl locat current head rather begin string clearli make dierenc oneway model unlik strong counter part show weak pa simul fo justifi name proof base commun complex show languag defin proof theorem 5 comput weak 1npa howev use dierent kind commun protocol better reflect behaviour weak 1npa theorem 15 fo weak 1npa proof proof similar theorem 5 show commun complex argument fo express languag l 2 defin proof theorem 5 recogn weak 1npa recal l 2 consist string form uv u v encod 2hyperset let k fix let set new protocol one agent arbitrari access string u limit access string v u comput power unlimit access v restrict follow let fix function agent evalu f argument v tupl length k symbol u 1 base inform u agent decid whether uv accept first show function f agent recogn toward contradict assum otherwis let 1 2 f correspond finit set advic function respect let uv input string let denot set symbol occur u contain 1 2 u correctli encod 2hyperset let assum wlog agent alway evalu f possibl argument k 1 argument k 1dierent interact agent function f import protocol nonadapt ie order question matter let let u 1 u h encod h possibl 2hyperset 1 2 larg enough respect k 1 2 2hyperset 1 2 dierent interact henc must encod u u 2hyperset hu hu interact uu u u henc agent accept uu accept contradict remain show split string weak 1npa simul protocol intuit work follow input uv consid oneway weak pa whenev current pebbl enter v comput remain v pebbl lift therefor set state obtain lift pebbl depend v symbol pebbl place u placement inform pebbl locat posit henc defin fv set state reach pebbl enter v state q pebbl place symbol indic pebbl present q code addit also contain posit placement pebbl u function provid enough inform agent simul 1npa 42 control next result show variant strong pebbl automata without altern collaps suggest strong pa provid robust automaton model theorem 16 follow express power 2npa 2dpa strong 1npa strong 1dpa proof show 2npa strong 1dpa b accept languag actual construct b use number pebbl therefor let pebbl technic simplic assum wlog lift pebbl right delimit instead lift pebbl arbitrari posit rememb target state q go right delimit lift pebbl move state q first inform describ idea construct recal classic powerset construct translat nondeterminist 1way automaton finit alphabet without pebbl determinist one intuit comput prefix u input string set state might reach read u perform onlin simul sens step comput correspond exactli one step one expect onlin simul work 2way automata even finit alphabet nondeterminist behaviour 2way automaton might involv move dierent direct instead finit case without pebbl determinist automaton comput posit input string w function f describ aggreg behaviour w 1 w ie portion input lefthand side ith posit function f comput induct left right forget f i1 f comput end f n knowledg possibl first state automaton assum right delimit input provid necessari inform decid whether w accept mayb bit surpris approach larg adapt case pebbl present alphabet infinit proceed follow first assum normal accept input configur 1 q ie one pebbl virtual ad two step view accept comput consist 1 first step first pebbl place first posit 2 comput alway least one pebbl present 3 final step remain pebbl remov write 0 virtual configur without pebbl determin whether accept one find whether 0 q 0 0 q final state q latter done recurs solv subproblem form q q subscript indic subcomput consid everi step pebbl present formal show follow claim induct start claim 17 0 k finit set r strong 1dpa b k pebbl whenev b start configur p p r next configur depth b p q particular set state b contain r r 2 qq first note theorem follow claim end set intend initi state b 0 obtain automaton end state p 0 set q q q 0 q 0 0 q set final state b 0 simpli consist state p 0 contain pair proof claim trivial configur depth k henc b k comput p staytransit therefor let k suppos claim hold j intuit set comput one lefttoright pass i1st pebbl pass b comput posit l string set pair q q subcomput start state q posit l posit 1 respect end state q posit l without move pebbl posit l l note subcomput might move pebbl j posit l comput inform automaton b i1 use repeatedli first introduc notat let input string w length n fix l n let l denot 1pebbl assign coincid first pebbl l l write l set pair q q state comput start 1 q l reach includ configur j q fulfil j 1 j intuit say pebbl allow move right posit l write l set pair q q state l reach subcomput satisfi properti readi complet proof claim set l comput follow let r l set pair q q one follow hold exist 1dra 1nra mso w1dpa w2npa figur 1 inclus class consider solid line indic inclus strict shown dot line indic class incompar dash line indic strict inclus subject complexitytheoret assumpt straightforward see simpli transit closur r inform need comput one lefttoright pass pebbl 1 induct assum subautomaton b i1 comput posit l part r contribut condit b note c comput transit closur requir pebbl movement pass automaton comput posit l set l comput l make use set n n transit relat one deduc lift pebbl step set claim note n posit right delimit recal lift pebbl posit complet proof claim theorem regist versu pebbl known inclus class consid depict figur 1 pebbl regist model rather incompar inde connect logic deduc follow 2dra alreadi express nonmso defin properti twoway regist model subsum pebbl model convers strong 1dpa alreadi express fo strong pebbl model subsum regist model open problem relationship regist pebbl automata given section 6 5 decis problem briefli discuss standard decis problem ra pa kaminski francez alreadi show nonempti 1nra decid decid whether la lb 1nra 1nra b 2regist next show univers automaton accept everi string 1nra un decid impli contain arbitri 1nra undecid kaminski francez ask whether decid nonempti extend 2dra show regard pa show nonempti alreadi undecid weak 1dpa due fact pa lift pebbl control transfer pebbl 1 therefor even weak 1dpa make sever lefttoright sweep input string proof use reduct post correspond problem pcp wellknown undecid 11 instanc pcp sequenc pair instanc solut n 1 1 n x 1 x ask whether given instanc problem solut suppos wlog integ number 1 n valu b denot latter set symbol sym consid input string form delimit u v string repres candid solut pcp instanc suitabl way check whether candid inde solut roughli check whether correspond pair taken 2 string correspond posit x 1 xm carri symbol check 1 2 use doubl index system base uniqu data valu describ encod detail item x j encod string separ sym repres j uniqu data valu b x j repres posit x uniqu data valu achiev uniqu symbol allow occur u correspondingli j encod string j correspond condit hold string uv syntact correct properti describ far fulfil follow two condit project u ie string consist entri u equal project v project u equal project v syntact correct string uv repres solut pcp instanc numer right u v symbol b right u v next show univers 1nra weak 1dpa undecid former case construct 1nra accept input string w syntact correct repres solut henc accept input pcp instanc solut construct nondetermin come play automaton simpli tri guess error encod repres input string show undecid univers weak 1dpa construct automaton check whether error occur encod repres input string happen sever sweep input string 51 regist automata theorem undecid whether 1nra univers proof initi regist assign assign valu sym first n regist construct 1nra accept input string w syntact correct repres solut henc accept input pcp instanc solut check one follow condit hold input string w 1 w wrong form w form uv u v form 1 1 n b x 1 k entri u 1 k entri v 2 project wrong first u dier first v b last u dier last v c two u two v successor u v latter three condit involv nondeterminist guess posit failur take place 3 project wrong done complet analog fashion 4 w repres solut valu u dierent correspond valu v b abvalu u dierent correspond abvalu v clearli w solut one condit hold corollari 19 contain 1nra undecid next question also rais kaminski francez section 32 observ twoway ra simul multihead automata string special shape nonempti multihead automata undecid next proposit easili follow proposit 20 undecid 2dra whether 52 pebbl automata next result impli standard decis problem undecid class pebbl automata theorem 21 undecid whether weak 1dpa nonempti proof weak 1dpa first check whether input desir form accept input encod solut pcp instanc pebbl move right keep first pebbl first posit invok subroutin posit perform pebbl put first pebbl first posit oper follow 1 check whether u v form 1 k respect entri u v achiev one left right scan second pebbl reach end string pebbl simpli lift 2 check w syntact correct verifi follow u dierent place second pebbl first scan u third pebbl dierent first one second pebbl move next process repeat b check v dierent similar c first u equal first w put second pebbl first use third pebbl run first w check last u equal last w similar successor u also successor v involv four pebbl number 2 5 second pebbl cycl u valu automaton proce follow third pebbl place right second pebbl fourth pebbl cycl symbol v find found fifth pebbl place right consist check check fail found v input reject otherwis three recent pebbl remov f analog way also verifi form index 3 check w repres solut pcp instanc proce follow check x pick u correspond choic v hereto second pebbl cycl valu u keep correspond valu finit memori use third pebbl run v check whether entri latter conform entri former b analog way also check avalu correspond entri complet descript construct straightforward check accept input repres solut pcp instanc henc pcp instanc solut la nonempti 6 discuss investig sever model comput string infinit alphabet one main goal identifi natur notion regular languag correspond automata model particular notion agre finit alphabet case classic notion regular languag consid two plausibl automata model ra pa result tend favor pa natur two inde express pa lie fo mso inclus fo provid reason express lower bound mso upper bound indic languag defin pa remain regular natur sens moreov strong pa quit robust variant without altern one twoway determinist nondeterminist express power result paper quit intric proof bring play varieti techniqu confluenc commun complex languag theori logic along way answer sever question ra left open kaminski francez sever problem remain open weak 1dpa weak 1npa simul 2dra ii 1dra 1nra subsum pebbl model know defin mso 1nra hard nlogspac like simul 2dpa iii weak 1npa strictli power weak 1dpa iv 2apa strictli power 2npa r data web closur monad np xml data valu typecheck revisit formal model express fragment xslt monad secondord logic graph handbook formal languag metafinit model theori complex result twoway multipebbl automata logic limit parallel comput introduct automata theori commun complex parallel comput algebra calculu queri languag recurs type complex object structur document transform base xsl type check xml transform extens attribut grammar structur document queri queri automata express e dtd infer view xml data tapebound complex class multihead finit au tomata tr graph rewrit finitememori automata limit parallel comput complex result twoway multipebbl automata logic commun complex parallel comput languag automata logic metafinit model theori temport connect versu explicit timestamp queri tempor databas altern data web intract decis problem finitememori automata typecheck xml transform dtd infer view xml data express effici pattern languag treestructur data extend abstract closur monad np web odyssey xml data valu power walk queri treestructur data foundat databas queri automata finit tree introduct automata theori languag comput formal model express fragment xslt automata logic xml ctr michael kaminski toni tan regular express languag infinit alphabet fundamenta informatica v69 n3 p301318 august 2006 mikolaj bojaczyk clair david anca muschol thoma schwentick luc segoufin twovari logic data tree xml reason proceed twentyfifth acm sigmodsigactsigart symposium principl databas system june 2628 2006 chicago il usa stphane demri ranko lazi david nowak freez quantifi constraint ltl decid complex inform comput v205 n1 p224 januari 2007 luc segoufin static analysi xml process data valu acm sigmod record v36 n1 march 2007 thoma schwentick automata xmla survey journal comput system scienc v73 n3 p289315 may 2007