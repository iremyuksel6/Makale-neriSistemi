approach safe object share essenti secur abl isol mistrust program one anoth protect host platform program isol difficult objectori system object easili becom alias alias cross program boundari allow program exchang inform without use system provid interfac could control inform exchang java mistrust program place distinct loader space uncontrol share system class still lead alias program paper present object space protect model objectori system model decompos applic set space object assign one space method call object differ space mediat secur polici implement model java present b introduct age internet program import sound secur mechan system never greater host execut program unknown network sourc need abl run program distinct protect domain program run protect domain prevent access code data anoth domain control secur polici domain protect mistrust program also protect host environ sever aspect protect domain access control resourc alloc control safe termin paper concentr access control sever way implement protect domain program oper system tradit implement domain use hardwareenforc address space trend toward portabl program mobil code led nonetheless virtual machin enforc protect softwar one exampl objectori context guard object 10 approach guard object maintain refer guard object request gain access guard object mediat upon guard anoth exampl softwar enforc protect found java 2 protect domain possess name space set class object 17 domain share basic system class isol java protect domain enforc runtim control assign object refer variabl anoth domain signal type error classcastexcept difficulti implement protect domain objectori context eas object alias creat 12 object alias least two object hold refer alias difficult detect unexpect alias across domain constitut storag channel sinc inform intend extern access leak modifi 15 alias domain avoid make object set disjoint data need share domain exchang valu instead refer partit protect domain disjoint object graph cumbersom object need access sever domain simultan especi true object mutabl eg applic environ object necessit continu copi object made transmit seriou problem system object must directli share domain eg systemprovid commun object even limit share enough creat alias lead storag channel instanc noth prevent error code guard object leak refer guard object outsid world techniqu control object alias often cite mean enforc secur control spread object refer program 12 techniqu fundament softwar engin techniqu goal enforc stronger object encapsul secur requir two main reason first alias control techniqu often classbas aim prevent object class referenc though protect select instanc class second secur constraint dynam natur alias constraint one exampl server contain 7 goal allow server process client request request server must forget refer hold object transmit client goal server contain reduc server abil act covert channel 15 crux problem refer ob tain use name object invok method object believ name invoc must separ thu introduc access control languag least privileg 23 one exampl system secur properti requir access control impl mentat least privileg mean program assign minimum right need accomplish task use exampl file system secur least privileg insist directori object abl gain access file store 7 order minim effect erron directori object thu directori name file object neither modifi extract content paper introduc object space model objectori system java 2 chosen implement platform space lightweight protect domain hous set object method call object differ space mediat secur polici though attempt made control propag object refer space model allow safe effici object share effici stem fact copybyvalu object paramet domain longer need model safe sens ever object refer leak program anoth space invoc method use refer alway mediat secur polici addit access object differ space prohibit default space must explicitli grant access right space invok object owner space may time revok right implement model made java thu modif java vm languag need applic object implicitli assign space object object creat object anoth space though receiv indirect refer object bridg object return refer new object implement assur basic properti access object anoth space alway goe bridg object bridg contain secur polici mediat crossspac method call space lightweight protect domain model access control element domain thread manag resourc control issu treat sinc requir modif java virtual machin remaind paper organ follow section 2 outlin object space model explain design choic section 3 present java api model exampl use section 4 describ implement model java 2 give perform result section 5 review relat work section 6 conclud 2 object space model basi object space model separ abil name object abil invok method object done partit applic set object sever object space space contain set object possibl children space everi object applic insid exactli one space object may invok method object resid space method invoc object differ space mediat applicationprovid secur polici start section 21 overview object space model formal definit model given section 22 present exampl model wellknown protect problem section 23 21 model overview set space applic creat dynami calli applic startup initi object occupi rootspac object space may creat space new space own rootspac children space may turn creat space space creat object enclos space creator object becom owner space new space space graph thu tree ownership relat b c figur 1 ownership author relat space object space may invok method object anoth space second space own call object space call object owner space call object call space must explicitli grant right invok method object second space owner second space set space organ hierarch model well control structur mani applic 22 typic system separ program set protect domain sinc must protect program compon may also need isol one anoth sinc exampl may use code differ librari object space model program space map compon distinct space decid includ space destruct within space model difficultli implement safe effici space like object remov system space longer possess refer object insid object may creat object space without prohibit space may also creat object children space space initi object creat space s1 may creat object anoth space s2 s1 parent space s2 goal restrict prevent s1 insert trojan hors object space s2 trick s2 grant s1 right s2 figur 1 give exampl space graph applic develop access right introduc ownership repres arrow access right repres dash line arrow system start rootspac repres space s0 figur creat exampl space s0 creat two children space s1 s2 permit object space s1 invok object space s2 object space s0 invok object space s1 s2 default sinc space s0 own space s1 s2 figur 1b space s1 creat child space s3 grant copi access right s2 space s1 possess right s3 though figur 1c s3 creat child space s4 grant space s2 access right s4 mean object space s2 s3 call object space s4 access control model could seen introduc program complex object possess refer longer assur method call referenc object succeed also case applet java call issu applet system object mediat securitymanag object reject call 22 formal definit state object space protect system defin tripl r set space ownership relat r repres space access right let n denot set space name gener subset name newli creat space taken nn relat space n theta n fnullg use s1 s2 mean space s1 own space s2 express s1 s2 evalu true s1 s2 null valu definit denot owner rootspac final r relat type n theta n s1 r s2 mean space s1 possess right invok method space s2 space alway right invok object own space s1 s2 s2 r s1 object alway invok method object space 8ss r defin semant object space opera tion grants0 s1 s2 oper allow object space s0 give object space s1 right invok object space s2 oper succeed s0 must own space s2 s0 must alreadi access right s2 owner s1 logic behind parent space decid access chil dren space may alway copi right possess children space s2 s0 s0 r s2 s1 s0 r fs1 s2g els r access right space also revok space revok right space possess right space own space lose right descend space space hierarchi implicitli lose right also space might acquir right grant copi right child space child execut code behalf exploit access right oper revokes0 s1 s2 use object space s0 remov right object space s1 access object space s2 oper revers grant ds denot set descend space space tree said space also right revok dsg oper allow owner lose right access child space s2 s0 s1 s0 s1 r s2 r n fs1 s2 els r space may creat new space becom owner new space given fresh name 62 createss r system startup rootspac s0 creat initi system state thu fs0 g fs0 nullg fs0 s0g final time method call effect system access control decis made use checkaccess oper determin space s0 may invok method object space s1 figur 1a fs0 s1 s2g fs1 s0 s2 s0 s0 nullg r contain fs0 s1 s0 s2 s1 s2g well pair figur 1b set fs3g fs3 s1g fs3 s2 s1 s3g includ three element system state figur 1c s3 creat child space s4 grant space s2 access right s4 thu s3 r s4 s2 r s4 s4 s3 23 exampl give brief exampl model ex ploit detail ad section 3 java api model present 231 program isol today comput user realist trust program run bug viru free crucial host abl run nontrust program isol servic mean client program abl commun servic control secur polici decid whether method call program server permit basi achiev isol use object space model shown figur 2a root space creat space server host servic object client space user program host secur polici place root space control whether user program may access servic use grant revok oper code exampl given section 32 comparison abil isol program fashion awkward java use loader space java program alloc class loader 17 respons load version class pro gram object instanti class load one loader consid possess distinct type object class load anoth loader mean assign object refer one domain variabl anoth domain constitut type error classcastexcept model inconveni clientserv commun sinc paramet object must serial transfer valu b root root guard gobj c user root client server client1 client2 server user packet figur exampl space 232 guard object common exampl mechan control share guard object consid two differ version guard object notion java 2 version 10 second tradit version 23 java guard object contain guard object applic startup guard object possess refer guard object object contain method execut checkaccess method encapsul secur polici return refer guard object checkaccess permit mechan use context client must authent server gain access server object eg file server authent access use checkaccess return refer file implement tradit guard object notion would never return refer guard object rather method call guard object would mediat guard would transfer call checkaccess permit transfer back result object approach weak howev java version way revok refer guard object refer copi outsid guard object revoc need practic confin spread access right system problem tradit notion guard object method guard object may return object contain refer guard object clearli undermin role guard figur 2b illustr guard object implement object space model guard object place space guard guard creat child space gobj instanti guard object space guard control space access gobj implement tradit version guard object paradigm guard would never grant access gobj space implement java version getobject guard grant client space access gobj event checkaccess succeed guard time revok access someth done tradit implement even refer leak grant oper must also effect access guard object possibl give code exampl section 32 guard requir system stronger encapsula tion goal encapsul abl make object public access program without make compon object directli access often requir kernel interfac object sinc seriou error could occur user program gain hold refer intern object exampl secur bug allow applet gain refer list code signer jdk111 applet could modifi 4 ad signer object list applet could inherit privileg associ signer privat vector object signer public vector getsign return signer jdk actual use array repres signer 4 array requir special treatment object space model seen section 4 exampl also show declar variabl privat enough control access object bound variabl object space model stronger encapsul intern object eg signer achiev object instanti space gobj own kernel interfac object space guard 233 server contain server share sever client program environ mistrust program execut server allow act covert channel hold onto refer object pass paramet servic request subvertli pass refer third parti secur requir server contain 7 server longer gain access object request servic schema use space shown figur 2c packet space object pass paramet server grant access object durat servic call access revok follow call server contain requir abil isol program one anoth abil revok right space use featur also present preced two exampl 3 object space api section describ class object space system api present exampl use 31 basic java class three class applic requir use object space model iosobject space remotespac briefli describ role present implement java 2 section 4 class iosobject 1 describ object possess attribut space attribut denot space hous object object applic need inherit iosobject requir first object instanti within space subclass iosobject sinc way least one object other may obtain pointer enclos space object api iosobject follow public class iosobject protect space myspac public iosobject public final space getspac getspac method enabl object get handl enclos space iosobject space class repres object handl enclos space handl space instanc remotespac class spaceobject empti interfac implement space remotespac public final class space implement spaceobject public static remotespac createrootspaceiosobject iosobj protect public remotespac createchildspac public void grant spaceobject sourcespac spaceobject targetspac public void revok spaceobject sourcespac spaceobject targetspac public object newinst string classnam remotespac target public remotespac getpar protect void setparentspac parent static boolean checkaccess space protectedobjspac io come internet oper system name project space model develop space callerspac recal space organ hierarchi root hierarchi creat static method createrootspac method return remotespac ob ject system ensur method call createchildspac method creat child space invok object space grant revok method implement access control command model see section 22 space object invok either oper grantor revok space oper newinst method creat object within specifi space object initi creat insid space implement verifi class specifi extend iosobject subsequ creat object mean obtain refer space parent space may execut method goal prevent space inject malici code space aim forc space execut grant would allow malici object space gain access right attack space setpar method execut system initi space checkaccess method consult secur polici two method use object space model implement third class object space api remotespac public final class remotespac implement spaceobject public remotespacespac sp repres handl anoth space uservis public oper constructor allow object gener remot space pointer pointer enclos space enabl space transfer pointer space thu allow space grant access right import note object possess space refer enclos space never space way system assur object one space forc anoth space grant access right sinc grant revok oper defin space mean system alway identifi space invok object thu author call note also space remotespac class final mean malici program introduc trojan hors version class system 32 exampl code extract first exampl continu program isol discuss section 231 taken newspap system product distribut articl 19 concentr program compil articl secur reason wish isol program rest system particularli storag graphic editor object requir abl medit method call client program servic secur requir summar figur 3 typic exampl need isol user program rest system section 4 give perform comparison implement exampl use java loader space copybyvalu semant object space implement root storag articl client client space servic space editor figur 3 articl packag exampl code root applic startup program creat two object space instanti object domain class applic use object space model api method editor class use sever swing compon offer frontend user exchang request messag event client program public class root extend iosobject public void start creat client server space remotespac remotespac alloc access right creat servic newinstanceguieditor child1 storag newinstancekernelstorag child1 creat client client newinstancekernelcli child2 start thing run editor ed einitc ainitcinit public static void main string arg remotespac exampl applic main start instanc root creat two child space child1 child2 grant right space invok object method editor object storag object creat space child1 client program instal child2 editor given refer client object forward event gui interfac client given refer two servic object root class almost ident use implement guard object model figur 2b guard object client creat distinct space extract exampl guard string class iosstr guard object class iosstr version string motiv class given section 4 import interneto import internetoslang public class guard extend iosobject iosstr guardedobject remotespac guardedspac public void init newinstanceinternetoslangiosstr guardedobject setnew iosobjectth secret text public object getobjectiosstr password remotespac caller checkaccesspassword myspacegrantcal guardedspac return guardedobject guard object init method call root method creat child space guardedspac instanti guard object space initi use set method defin iosstr role guard mediat access request getobject client must furnish password string guard verifi password use guard object checkaccess method check succe guard grant access client space return object refer public class client extend iosobject guard g public void initguard g g iosstr new iosstringthi password iosstr iosstringggetobjectpassword new remotespacemyspac systemoutprintlnstr client program request access guard suppli password pointer space getobject 4 object space implement section describ implement model first describ notion bridg mechan separ space implement level portabl prototyp reason current implement made java 2 platform modif virtual machin languag made futur implement could integr model jvm way aspect protect domain resourc control safe termin also treat begin section 41 describ basic role bridg object section 42 describ interpos method call space section 43 explain bridg class gener section 44 describ detail object space model interact case conflict featur java languag section 45 present perform evalu implement 41 bridg object far seen object belong space interact either local insid space issu method call across space boundari interact object differ space allow secur polici permit implement object space model bridg object interpos caller calle object locat differ space caller author issu call bridg forward call calle otherwis secur violat except rais call calle protect object sinc protect extern access bridg use term possessor refer caller illustr figur 4 real refer denot arrow dash line arrow denot protect refer whose use medit secur polici secur polici repres access matrix access bridg encod author relat r defin section 22 access matrix bridg protect object possessor space 1 figur 4 bridg object interpos object space bridg hidden applic programm pure implement techniqu appear api assum secur permit program behav direct refer object remot space main except rule array refer alway refer local copi array even entri array refer remot object return question array section 44 consid class root section 32 start method contain call cinit transfer refer editor storag object client program three object differ space root object refer use fact refer bridg object even though programm root class see bridg implement use instanc java bridg class bridg interfac provid class c bridg class bc construct interfac bc c bc defin subclass c make possibl use instanc bc ie bridg anywher instanc c expect role bridg threefold 1 verifi caller issu call protect object precis result verifi space caller access space calle accord secur polici consult use checkaccess method class space method shown figur 7 2 forward request possessor protect object possessor right access protect object 3 ensur object exchang paramet possessor protect object becom directli access outsid space protect model broken object obtain direct refer object anoth space refer direct bridg interpos object happen call argument directli pass calle therefor bridg interpos calle argument ceiv similarli wrap occur object return method call protect object avoid refer leak exploit java except mechan bridg also respons catch except rais execut protect object method throw bridg version except caller 42 interposit bridg bridg introduc system applic object creat object child space use newinst method method furnish system space redefin user sinc defin final class addit creat requir object assign space newinst creat bridg new object refer bridg return object initi object creation make new object access creator bridg instanc exampl 32 refer e c point bridg instead point directli editor storag client object sinc object creat use newinst way bridg object appear system crossdomain call need protect argument return object aris default refer object pass bridg bridg object referenc object gener destin space nevertheless bridg object protect object alreadi exist destin space refer bridg return instead new bridg object gener implement use map map protect object space pair bridg use object space refer protect object advantag solut bridg share among object space refer protect object howev object resid differ space share bridg second advantag time need consult bridg cach inferior time need gener new bridg object final advantag concern equal semant oper appli two bridg refer protect object alway evalu true howev case bridg interposit necessari instanc object creat anoth object resid space creator direct refer new object allow case java new oper use ie object creat new belong space creator direct invoc allow bridg receiv bridg refer argument call observ protect object bridg actual destin space protect object refer return place bridg space 1 o3 space 3 space 1 o3 o2 o2 o4 figur 5 creation bridg space exampl interposit bridg object shown figur 5 space 1 possess object o1 creat object o2 space 2 use newinst bridg b1 creat refer o1 pass refer o2 b1 detect refer remot creat bridg b2 o2 creat object o3 local space use new obtain direct refer o3 creat object o4 space 3 bridg b3 creat final o2 pass refer o1 o4 via o3 new bridg b4 creat note refer space 3 space 1 except exchang remotespac object object type freeli pass foreign space without bridg intervent con sequent direct access object allow object use space grant revok access children allow direct share remotespac object lead refer leak sinc method instanc field remotespac access user program seen api space object transmit bridg convert remotespac need ensur invari space object referenc object enclos space 43 gener bridg class subsect describ gener system bridg class bc mediat access instanc class c bridg gener alway start call getbridg method bridgefactori class method expect three argument object bridg guard protect object space protect object space possessor method getbridg return bridg whose class subclass protect object class class file bridg exist time method call construct class file start instanti new object follow method also respons manag map cach bridg interpos given space protect object return cach bridg anoth object given space refer protect object outlin code class bridgefactori shown figur 10 bridg class place packag object space implement constructor protect prevent user code directli creat instanc main task behind gener bridg pro duce method defin class c well superclass correspond method mb bc implement expect function bridg describ section 41 structur mb method gener uni form first piec code insert begin method consult secur polici access grant bridg instead argument pass protect object forward call done argument except argument primit class remotespac case valu argument copi ensur protect object possess direct access argument argument convert method forward call protect object call return nonprimit valu argument bridg instead return valu return caller object figur 9 present bridg gener user class fileupdat shown figur 8 avoid except leak intern object bridg catch except thrown protect object gener bridg encapsul except throw except back caller code check whether access protect object allow perform static method checkaccess defin class space method take space protect object well space caller input consult access matrix store two dimension array call author decid whether access grant code interpos bridg argument call protect object present method getbridgeforarg wherea code interpos bridg return valu possessor bridg locat insid method getbridgeforreturn method defin insid class bridgefactori shown figur 10 notic method handl sever case either argument respect return object bridg remotespac space instanc user class bridg object protect bridg extract appropri bridg interpos protect object calle respect caller public class bridgeintern object protectedobj space protectedobjspac space callerspac initi field initi object go space gospac space pspace figur 6 class bridgeintern class space access matrix static boolean author static boolean checkaccess space protectedobjspac space callerspac return figur 7 method checkaccess control access bridg contain bridgeintern object role object store inform relat state bridg ie protect object latter space space possessor class bridgeintern shown figur 6 possibl reserv field inform insid user bridg class gener method getbridgeforarg getbridgeforreturn need access inform receiv bridg argument return object soot framework manipul java bytecod 24 use gener bridg class public class fileupdat public file concatfilesfil file1 file file2 throw filenotfoundexcept throw new filenotfoundexceptionfil found return file1 figur 8 user class exampl 44 caveat java section look detail implic object space implement java program partic ular sever featur languag final class method incompat implement ap proach deal issu mean impos restrict class object referenc across space boundari final privat claus import softwar engin notion control visibl class applic object space implement work class c object transfer bridg class bc gener subclass c final class thu bridg gener current implement bridg gener complain object pass whose class contain final claus though public class fileupdaterbridg extend fileupdat implement bridg bridgeintern new bridgeintern fileupdaterbridg fileupdaterbridg object obj space protectedobjspac space callerspac biiniti obj protectedobjspac callerspac bridgeintern getbridgeinternalreturn bi public file concatfilesfil arg1 file arg2 throw filenotfoundexcept bicallerspac tri file file file returnedobjfileupdaterbiprotectedobj concatfil arg1bridg arg2bridg return filebridgefactori catch filenotfoundexcept e throw filenotfoundexceptionbridgefactori getbridgeforreturn bi catch throwabl e throw runtimeexceptionbridgefactori getbridgeforreturn bi els throw new accessexceptionunauthor call figur 9 exampl bridg class gener restrict appli javalangobject see low order handl final method class object space system loader could remov final modifi class bridgefactori map pair objecttoprotect callerspac bridg interpos map objandcallerspacetobridg static bridg getbridg object object space protectedobjspac space callerspac method first check map alreadi contain bridg interpos object callerspac return bridg check whether bridg class file exist class file exist method ask soot build one final creat return new instanc bridg static object getbridgeforargobject arg bridgeintern currentbi bridgeintern call argument bridg object locat space calle return direct refer object argbiprotectedobjspac currentbiprotectedobjspac return argbiprotectedobj call argument locat anoth space get handl return bridgefactori argbiprotectedobjspac currentbiprotectedobjspac els arg instanceof remotespac requir around remetospac return arg els arg instanceof space allow transfer space object return new remotespacespacearg els call argument live caller space get handl return bridgefactori currentbicallerspac currentbiprotectedobjspac idea getbridgeforarg time return object protect caller static bridg getbridgeforreturn object returnedobj bridgeintern currentbi figur class file link prevent illeg subclass loader must record final modifi class alreadi load verifi class load violat final constraint loader must also remov privat modifi class bc rewrit approach use loader javas 6 system remov catch threaddeath except sinc catch except would allow applet ignor termin signal parent rewrit approach work system class load link basic system loader system class class includ javalang javautil javaio class problem class final eg javalangstr contain final method overridden class javalangobject must permit sinc everi class subclass final method class notifyal notifi wait getclass method overridden invoc method object control former three method use thread synchron howev lock scope access control model issu fullyfledg protect domain model requir modif virtual machin case concern method getclass program call getclass bridg class get class object bridg object ever constructor bridg class protect program noth object special treatment also given system class like string integ final class java 2 implement provid tailor version class repres string integ exchang across boundari class iosstr instanc simpli wrapper around string object exchang space reader may notic class iosstr paper exampl object space implement also provid bridg class iosstr class contain copi wrap string object iosstr use transfer valu string across space set method api iosstr given second constructor take string object allow space creat iosstr string local transmit string valu anoth domain public class iosstr implement serializ protect string mystr public iosstr public iosstringstr public iosstr getstr public void setiosstr public void print lastli sinc string final bridg defin bridg class defin tostr method return null order avoid direct refer string remot domain case string need exchang conveni like except instanc user class defin getmessag method return iosstr field access access field also form interobject commun must control secur current implement howev yet cater solut would loader instrument bytecod instruct consult access matrix field access field access convert method call former approach appli java 21 current implement bridg access field remot object becom access field bridg field reflect correspond field protect object static field method static method pose two problem first redefin subclass sec ond object referenc static variabl could share protect domain without access control check take place fulli fledg implement protect domain class share domain 6 avoid undetect share domain object space implement bridg gener signal error receiv object user class contain static method problem static variabl look 8 propos strengthen isol loader space keep differ copi object referenc static variabl copi class use loader unfor tunat use solut object space implement sinc class share across domain remot array figur 11 treatment array object space implement array array java object sens method defin object execut array object unfortun array object sens element select use method call requir special treatment approach outlin figur 11 whenev refer array object copi across space boundari ie bridg array copi local copi even made array contain primit type like int char implic approach method call array object travers space boundari array select done local effect copi valu use array ob ject array entri modifi one space without correspond chang anoth domain entri copi array object becom bridg alreadi mean nonarray object alway name use bridg object within space even though array object may copi share array requir programm must furnish array class entri selector method solut interest repercuss regard exampl bug java cite section 232 signer object fact repres array ident signer object space model use implement copi signer array would return caller whose modif array would remain innocu synchron object intric influenc interposit bridg object two object locat differ space will synchron protect object would experi undesir behavior sinc implicitli perform oper two differ bridg protect protect object instead act protect object problem aris synchron statement use instead reli solut exploit synchron method latter perfectli valid sinc bridg forward call protect object consequ lock occur protect object nativ method also lead secur flaw sinc could use leak object refer space way control code current implement java allow bridg class possess nativ method except object method eg hashcod 45 perform evalu effici one goal object space model particular cost mediat interspac call bridg gener inferior cost copybyvalu serial exampl exchang byte array commun channel conduct perform measur implement run suno 56 333 mhz ultrasparciii processor use sun vm jdk121 measur obtain averag larg number iter one basic measur taken compar cost method call protect domain use space bridg model loader java serial model also made comparison jkernel 25 latter allow domain exchang paramet either use java serial mechan use faster serial tool develop jkernel pass capabl jkernel capabl object denot object remot domain jkernel equival bridg object tabl show comparison method call paramet b method call string paramet c method call articl object paramet articl class use applic section 32 consist hashtabl file repres articl content well string articl attribut time shown microsecond estim basic method call without argument serial around 5 nanosecond crossdomain call without argument faster approach jkernel basic call jkernel overhead mainli explain thread context switch perform cross domain implement overhead resid secur polici check requir crossdomain call cost quit low sinc check reduc lookup access matrix implement static two dimension array store class space even though access matrix fast tradeoff space requir 2 number space present system mechan use copi pass paramet expect slower counterpart jkernel capabl object space model scale well size argument cost paramet pass object space model approxim two time slower pass paramet capabl jkernel overhead come dynam creation lookup bridg model ever cost come benefit model stricter control access object jkernel capabl releas environ possibl control spread among domain wherea model select grant revok access certain domain space serial jkernel serial fast copi capabl c 25 3632 10042 5872 14 figur give estim basic mechan get gener overview implement articl packag exampl section 32 use object space model java loader model space implement describ earlier loader implement class loader object creat load client articl class servic class storag editor load system loader commun channel object instal client servic object exchang serial messag applic highli interact direct comparison obviou therefor compar two type com munic cost save articl store within program disk cost send event messag gui editor client loader version time save small articl approxim 5617 microsecond cost includ time serial articl space version figur slightli less 5520 micro second also articl serial sinc articl must serial save disk figur includ creation bridg object articl pass storag object time send messag gui program 143 microsecond space implement loader implement figur around 1511 microsecond due serial cost serial reduc make class object exchang sharabl load system loader ever result weaken isol greater scope alias domain regard space usag bridg requir 4 word refer bridgeintern object contain 3 word refer guard object refer guard possessor space space object requir 3 word intern integ identifi refer parent space refer hashmap object contain children space pointer access matrix static share space object n space activ system overhead space n 2 access matrix entri nm entri hashmap maintain bridgefactori map object space pair bridg denot number object space referenc object space space contain object maximum number bridg system repres case object space referenc object space measur taken instal bridg class implement bridg class gener fli class found disk costli process instanc bridg editor class take around 367 second gener due pars class file startup articl packag applic root servic client space creat necessit creation 10 bridg take around 624 second 5 relat work section compar object space model relat work divid java relat work gener work program secur 51 java secur java advanc secur model includ protect domain whose design goal isol applet basic mechan use class loader applet java assign class loader load distinct privat version class protect domain 17 java possess properti class one loader distinct type class load anoth loader type therefor basi isol sinc creat refer one loader space anoth signal type error problem model dynam type violat properti space refer class load basic system loader share loader space never reload system loader load basic class eg javalang share loader space en demic share enough lead alias loader space consid class password load two loader space j result class version password password j class implement interfac passwordid method init valu suppos interfac passwordid load system loader case follow program allow one password read valu password object loader space uid 2 directli invok password object space public final class password implement passwordid privat int uid privat passwordid sister privat string password public static void mainstr arg throw except creat two loader space myload new myload myload new myload root leak refer space child1init1 hth3tgh3 child2 child2init2 tr54ybb child1 public void initint string passwordid r public string valu return password program start creat two loader class myload loader read file fix directori deleg load basic java class passwordid interfac parent system loader program creat instanc password loader space ask loader load instanti instanc class program grant password refer despit fact domain distinct loader call valu second password first succe loader space use implement protect domain sever javabas system eg 3 14 6 25 isol obtain share class make leak exampl object space approach model least guarante ever refer object escap leak anoth space use refer nevertheless mediat secur polici secur polici prohibit call space default access right space must explicitli grant grant undon subsequ revoc one advantag loader space model object space model former allow program control class load protect domain import prevent code inject attack malici code insert domain attempt steal corrupt data object space model parent forc child space execut code foreseen program newinst method howev way control class use particular space section 4 compar implement object space model jkernel 25 recal protect domain jkernel made select share system class user class load domain loader well instanc class capabl object use refer object remot domain call capabl object transfer control call domain paramet call copi valu unless capabl object copi directli comparison object space model jkernel use copybyvalu default wherea object space model use copybyrefer jkernel must explicitli creat capabl object transfer refer object space model must explicitli serial object copi valu latter approach natur objectori choic access control base capabl j kernel problem capabl propag control domain export capabl one object longer control domain receiv copi capabl revoc exist entail revok copi capabl mean distribut access right object must start scratch object space model owner grant revok right space select space anoth differ two system presenc hierarchi object space model absenc multipl class loader class instanc goal javas kernel 6 isol mobil agent host platform protect domain javas known seal also implement use java loader mechan set seal organ hierarchi messag exchang two seal rout via common parent seal suppress messag secur reason fact experi program newspap applic 19 javas first motiv object space model mani object environ variabl articl object need distribut sever seal meant copybyvalu semant found cumbersom mutabl object like key certif articl file want safe form object share simplifi program interest similar exist object space model memori manag realtim java 5 latter scopedmemori object act memori heap temporari object newli creat realtim thread assign scopedmemori altern thread enter context scopedmemori execut enter method memori object contain refer counter increment time thread enter object creat thread scopedmemori alloc memori object object scopedmemori may creat scopedmemori object thu introduc hi erarchi goal scope memori model avoid use slow garbag collector remov object refer counter scopedmemori object becom 0 object contain remov prevent dangl refer object hold refer object sibl scopedmemori jvm dynam check refer assign verifi constraint compar object space model approach use hierarchi access space dynam check howev access restrict object space model dynam modifi access nonrel space possibl hand object space model deal resourc termin 52 program secur mechan much work integr access control program approach annot program call secur polici checker 21 9 java instanc 9 system class contain method call securitymanag object check whether call thread right pursu call anoth approach program secur use program languag support instanc languag 13 18 includ notion access right program possess right object access program object progress possess access right languag design today tend equat secur type correct way secur anoth good havior properti program verifi use static analysi dynam check 20 16 leroy rouaix use type enforc secur environ run applet 16 secur context mean applet gain access certain object privat environ function object access assign specifi set permit valu system type special version defin set permit valu instanc may string classpath possibl valu appletpubl binjava convers object entail verifi object respect permit valu environ function avail applet bridgelik sens incom refer type cast similar object space model implement java sinc class bridg class construct contain code verifi system access control polici access permiss specifi access matrix object space model rather permit object valu goal jflow 20 inform flow secur deal control attack abil infer inform object rather control access object method jflow extend java languag associ secur label variabl secur label denot sensit object inform jflow static analyz ensur object transfer refer data object inferior secur label would constitut leak complex mechan come ensur inform object use condit express evalu implicitli leak object modifi scope condit express comparison work object space implement reli type ensur object access made use secur version class ie one includ access control check annot class check could includ check field access object 21 mention section 4 relat topic access control alias control eg confin type 4 balloon 1 island 11 confin type recent effort control visibl kernel object control visibl class name confin type class whose object invis specif user program advantag approach confin type verifi compil hand class confin nonconfin time import one design object class protect object public instanc visibl string repres password must confin though class string gener class access program anoth problem alias control object visibl vari object lifetim instanc object given server must remain access server server worktim server complet task object remov server visibl server contain properti 7 object space model control access object basi visibl constraint dynam alter 6 conclus paper present access control model objectori environ model api strongli influenc java loader space program model though aim overcom weak java access control caus alias evalu proposit implement java 2 though implement advantag portabl mean address resourc control domain termin issu issu must treat object space becom fullyfledg protect domain virtual machin support could also use overcom limit model java eg prohibit field access work around final modifi result show interposit access control program object differ domain effici simpl copybyvalu data loader space believ object space model natur object program style copybyvalu especi object need access mani program whose valu chang often eg environ vari abl model also advantag leak refer space innocu receiv space explicitli grant right use space referenc object even access grant right may alway remov acknowledg author grate anonym refere jan vitek valuabl comment content present paper work support swiss nation scienc foundat grant fnr 205339998 r balloon type control share state data type java program languag confin type realtim specif java javas mobil agent ker nel protect hydra oper system applic isol java virtual chine insid java 2 platform secur architectur island alias protect objectori languag geneva convent treatment object alia ing languag extens control access share data secur ajanta mobil agent system note confin problem secur properti type ap plet dynam class load java virtual machin access control parallel program commerci electron inform jflow practic mostlystat inform flow control provid finegrain access control java program protect inform comput system optim java bytecod use soot framework feasibl tr island geneva convent treatment object alias use name space plan 9 secur properti type applet dynam class load java virtual machin java program languag 2nd ed jflow insid java 2 platform secur architectur api design implement confin type commerci electron inform applic isol java virtual machin note confin problem jkernel realtim specif java provid finegrain access control java program optim java bytecod use soot framework sign seal guard java object javas mobil agent kernel protect hydra oper system ctr chri hawblitzel thorsten von eicken luna flexibl java protect system proceed 5th symposium oper system design implement due copyright restrict abl make pdf confer avail download decemb 0911 2002 boston massachusett chri hawblitzel thorsten von eicken luna flexibl java protect system acm sigop oper system review v36 nsi winter 2002 laurent dayn grzegorz czajkowski lightweight flexibl isol languagebas extens system proceed 28th intern confer larg data base p718729 august 2023 2002 hong kong china grzegorz czajkowski laurent dayn multitask without comprimis virtual machin evolut acm sigplan notic v36 n11 p125138 11012001 krzysztof palacz jan vitek grzegorz czajkowski laurent dayna incommunicado effici commun isol acm sigplan notic v37 n11 novemb 2002