embed complet binari tree butterfli network author present embed complet binari tree butterfli network without wraparound connect let even integ qmlog m1 author show emb 2sup q11node complet binari tree tq m12sup m1node wraparound butterfli bsub wm1 dilat 4 emb tq m22sup m2node wraparound butterfli bsub wm2 optim dilat 2 also present embed wraparound butterfli bsub wm m12sup mnode nowraparound butterfli bm dilat 3 use embed shown tq embed nowrap butterfli bm1 resp bm2 dilat 8 resp 5 b introduct import issu parallel process 2 3 4 5 6 7 8 10 12 paper studi relationship complet binari tree network butterfli network b present embed b let q 2 q1 gamma 1node complet binari tree even integ let bw resp bm m2 node resp butterfli resp without wraparound connect 4 bhatt et al show emb q bw m3 dilat 4 embed constant expans use butterfli 8 time 1 mani node necessari paper first present two improv embed q one emb q bw dilat 4 anoth one emb q optim dilat 2 two embed one present 4 use wraparound connect butterfli heavili show butterfli wraparound connect constant factor power one without wraparound connect precis show emb bw wraparound butterfli network bm dilat 3 use embed abl emb q bm 1 dilat 8 bm 2 dilat 5 next give definit notat use throughout paper embed f g b defin biject map f node node b togeth map g map everi edg onto path ge connect fv fw refer f assign two commonli extens studi cost measur embed dilat expans 1 4 9 11 dilat defin maximum distanc b two adjac node expans defin ratio number node b number node let q complet binari tree 2 q number 0 1 q let bw butterfli network 1 simplic omit lower order term wraparound connect consist level number 0 level 2 node everi node bw identifi l indic level node resid fi 0 fi 1 fi mgamma1 pwl posi tion within level string 1 node bw connect follow node connect straight edg node l cross edg node l l fi node level connect node level 0 repres wraparound edg let bm butterfli wraparound connect differ bm bw bm contain addit level level wraparound edg level level 0 bw replac edg level gamma 1 level section 2 describ embed tree q butterfli bw 1 dilat 4 embed achiev dilat one 4 expans 2 versu expans 8 note straight forward modifi embed 4 use bw m2 instead bw m3 section 3 contain embed q bw m2 dilat 2 respect dilat embed optim sinc embed o1 expans achiev dilat less 2 4 section 4 show emb bw bm dilat 3 use result obtain embed q butterfli wraparound connect embed section 2 3 use gener approach describ 4 precis also use notion signatori 1 serial number pwl string concept ensur two node q assign node butterfli embed well embed present 4 crucial point node level q assign differ level butterfli achiev 4 embed describ section 2 subtre grow upward downward butterfli vari number level result dilat 4 embed describ section 3 use differ techniqu achiev assign node level tree differ level butterfli thu achiev dilat 2 embed q b w section describ emb q bw dilat 4 embed view finetun strategi use 4 embed present 4 tree q embed three stage first stage emb level 0 log second stage emb level log mlog third stage emb remain level q order avoid collis among embed three stage stage simpli embed differ copi bw embed use bit posit way differ stage embed share subbutterfli network much possibl left half bw m1 b 2 right half bw m1 shown figur 2 clariti reason henceforth refer node q pe process element node butterfli node emb q bw 1 four stage stage 1 emb first log level q dilat 2 pe level log assign node level use oddnumb level k th tree root pe level log emb first dilat 4 pe level 0 k remain assign node stage 1 pe level m2 k assign node level b 2 stage 2 use oddnumb level b 1 addit even level even level b 2 last m2 level k embed two stage stage 3 assign next k level k dilat 4 pe level m2 assign node level 3 use oddnumb level b 2 stage 4 assign remain k dilat 2 stage 4 use evennumb level b 1 b 2 use level summar tabl 1 embed assign two pe node bw 1 two adjac pe distanc 4 apart level use b 1 level use b 2 stage 2 oddnumb level level stage 3 oddnumb stage 4 evennumb evennumb tabl 1 use level four stage descript embed given next assum power two result hold howev even describ necessari chang end section 2 unarystraight branch branch node level l node level use straight edg unarycross branch branch node level l node level l use cross edg final binari branch branch node level l two node level l use straight cross edg stage 1 embed first log level q assign root q node use unarystraight binari branch assign two pe level 1 q two node note binari branch gener pwl string unarystraight branch keep 0 1 continu fashion assign 2 pe level q node thu m2 pe level log assign node figur 2 show first step embed stage easi see two pe assign node ie collis occurr x ff 0 occurr x ff 0 3 denot wild card charact indic 0 1 stage 2 embed level log m2 alreadi defin k k th tree root pe level log assign pe level 1 m2 pe level 1 assign oddnumb level b 1 pe level m2 gamma 1 m2 assign evennumb level treat differ order keep dilat 4 embed level m2 goal stage 2 assign pe level m2 k node lambda0 1 posit pwl string call signatori 1 4 purpos keep node pe k assign differ node pe leftmost rightmost pwl string head resp tail pwl string consid node get pe assign stage 1 head consist altern 0s 1s tail consist altern 0s addit 0 rightmost posit tree k posit head pwl string observ posit signatori 1 alreadi contain 1 tree k posit tail pwl string begin stage 2 posit contain 0 first describ embed signatori 1 posit head stage 1 assign root k node use two unarystraight branch binari branch assign two pe level 1 k two node result dilat 3 pe level 0 level 1 k assign 2 l pe level l k 2 l node level 2l gamma 1 b 1 use unari cross binari branch except occur pe level k order keep signatori 1 use unarystraight instead 4 string k string k k k denot binari represent k k r th posit left k k k k posit 2r k 0 k 0 k 0 2 level k node bw l l tabl 2 assign stage 2 section 2 k log unarycross branch figur 3 show first step handl bit head pwl string use unarystraight keep 0s binari branch assign level place pe level node level chang strategi remain two level follow unarystraight binari unarystraight branch assign pe level m2 gamma 1 node level final binari unarystraight unarycross level 0 b 2 unarystraight branch level assign pe level m2 k node level strategi result dilat 2 level l l dilat tabl 2 show assign pe k k log gamma 1 first line tabl state posit root second line cover level point posit signatori 1 encount line 3 cover remain posit head line 4 cover tail exclud last two level handl differ given line 5 6 obvious line meaning situat correspond last posit head line 3 thu meaningless line 2 3 4 meaningless case pe level 1 1 4 assign node level 2 use line 5 pe level 2 assign node level 4 use line 6 branch done somewhat differ dilat 4 next consid case signatori 1 posit tail overal strategi tabl 3 show assign one briefli discuss tabl 3 line 1 state posit root line 2 cover assign pe bit head pwl string chang line 3 cover tail posit 0 chang signatori 1 line 4 cover remain assign includ level b 1 assign last two level state line 5 6 line meaning line 3 cover level level line 4 meaningless sinc bit set two final level line 3 cover level level 2 tabl 4 show assign tree order consist tabl 2 3 show 0 tabl 4 howev everi 0 correspond 0 situat tree 0 similar situat describ tree 1 4 whose assign given tabl 2 pe level 1 0 4 assign node level 2 use line 4 tabl 4 pe level 2 0 4 assign node level 4 use line 5 next show collis within stage 2 obvious node get two pe assign must come differ k ms let x k x j two pe k j respect assign node level r let k j pwl string node respect show k 6 loss gener j k consid two case depend valu k case 1 k log case 11 1 pwl string k j differ tail pwl string k k rightmost 2 log rightmost 2 log case 12 differ signatori 1 pwl string k 1 posit pwl string j 0 posit case 2 case 21 case similar case 11 level k node bw l l tabl 3 assign stage 2 section 2 level 0 node bw l l tabl 4 assign stage 2 section 2 case 22 1 pwl string k j log differ least one rightmost blog kc bit case 23 pwl string k 1 posit posit pwl string j 0 complet discuss stage 2 show collis stage 1 stage 2 collis sinc 0 4 1 4 use evennumb level stage 2 henc assum r level b 1 pe assign stage 1 stage 2 sinc stage 1 place root level largest oddnumb level use stage 2 pwl string node contain pe stage 1 start 0101 ie contain 1 posit 1 3 node assign pe stage 2 start either lambda0 0 lambda0 1 lambda1 0 thu collis stage 1 stage 2 occur level 3 case stage 2 handl four tree name tree 0 8 pwl string node level 3 get pe k 8 k 2 assign stage 2 form lambda0 1 k 0 k 00 henc collis pwl string node level 3 get pe 3 8 assign stage 2 form lambda1 1 3 0 3 00 3 assign one pe name root q level 3 assign node pwl string 010100000 henc collis possibl complet descript stage 2 embed level 1 m2 k embed last m2 level k similar stage 3 4 howev purpos divid embed last m2 level k two stage name stage 3 4 emb level m2 k respect divis show precis use right half full bw 1 stage 3 4 respect stage 3 embed level m2 th subtre height root pe level m2 k shown figur 4 subtre 0 consist one pe pe alreadi assign stage 2 henc stage 3 emb ks k 1 stage 2 root k assign node 4 refer posit fi 0 fi 2 fi serial number k emb k stage 3 serial number signatori 1 remain fix serial number help keep subtre k 0 help keep k emb first dk2e level k grow upward ie toward lower number level b 2 right half bw b 2 emb remain level k leav k place node upward downward use everi fourth level b 2 henc embed incur dilat 4 precis process embed k describ next assign pe level l k node level root k assign stage 2 node use binari two unarystraight branch assign 2 pe level 1 k two node success use unarystraight binari two unari straight branch assign 2 l pe level l k l 2 node k odd assign 2 dk2e pe level dk2e k use unarystraight binari branch node except occur 1 leav 1 level 1 1 assign level make binari branch node level 5 denot 0 1 depend binari represent grow k downward assign 2 l pe level l node dilat root k two pe level 1 3 1 1 dilat remain level k 4 except occur level bk2c dk2e k odd level bk2c bk2c even case dilat 2 sinc signatori 1 chang stage 3 argument similar one stage 2 combin observ serial number kept fix stage 3 show collis within stage 3 stage 3 use oddnumb level b 2 sinc stage 1 2 use oddnumb level b 1 even level level collis among stage 3 complet descript stage 3 describ stage 4 briefli explain last two level k embed stage 2 ie level m2 gamma 1 m2 handl differ level stage 2 place pe level 3 place pe level m2 order keep dilat 4 pe level place level pe level m2 place level b 2 result differ strategi last two level k stage 2 addit place pe level allow us set signatori 1 correctli 0 stage 4 embed level m2 subtre k root root k height m2 let r k forest form k shown figur 4 stage 4 emb tree r k dilat 2 use even level b 1 b 2 everi tree r k m2 gamma k level need embed recal root tree ie leav k assign k 1 stage 3 node stage 2 node make necessari branch need posit pwl string stage 4 use posit contain 0 left signatori 1 rightmost posit 1 start stage 4 assign pe first level tree r k node 0 done unarystraight binari branch k 1 simpli binari branch tree r 0 success use unarystraight binari branch emb remain level r k thu pe level l r k assign node sinc serial number signatori 1 remain fix stage easi see collis within stage 4 stage 4 use evennumb level sinc stage 1 3 use oddnumb level collis stage 4 stage 1 3 see tabl 1 note level use stage 2 b 2 stage 4 use level henc possibl collis stage 2 stage 4 occur level stage 4 leav 0 assign level thu pwl string node pe assign level string node level pe assign stage 2 lambda0 posit 0 stage 2 posit 1 stage 4 collis possibl complet stage 4 henc embed q bw 1 conclud section show modifi embed even power 2 recal stage 1 emb first blog mc level q assign root q node embed everi occurr log replac blog mc stage 1 dont m2 pe embed level three stage emb remain level q stage 2 emb next m2 level level blog mc m2 emb final m2 level q sinc tree k root pe level blog mc gamma 1 q rang k 0 2 blog reflect chang throughout stage 2 3 4 use blog mc instead log obtain desir embed q bw 1 argument correct carri straightforward way proof collis differ stage must consid interact stage 1 stage 2 case howev case stage 1 use level 3 5 wherea stage 2 use level 1 4 6 collis occur embed q b w section 2 describ emb q bw dilat 4 natur question aris whether exist embed achiev smaller dilat yet know emb q bw 1 dilat less 4 next show emb q bw 2 dilat 2 embed achiev optim dilat sinc embed o1 expans achiev dilat less 2 4 purpos descript assum power two result hold howev even integ necessari chang describ end section 3 th quarter bw shown figur 5 emb q bw 2 three stage stage 1 use emb first log level q pe level log assign node level 1 k th tree root pe level log emb level 1 m2 pe level m2 assign node either level stage 3 emb remain level k b 3 main differ embed one describ previou section stage 2 previou embed one 4 achiev assign pe level q differ level butterfli grow subtre upward downward vari number level embed section achiev effect differ subtre grow differ number level alreadi stage 2 right signatori 1 place avoid upward downward growth togeth modif allow us reduc dilat 4 2 describ stage embed section detail stage 1 embed first log level q stage could use embed stage 1 given section 2 howev sinc use bw instead bw 1 use simpler embed similar one 4 allow us simplifi remain stage use version stage 1 embed section 2 sinc would result collis stage 1 2 sake clariti complet describ stage 1 detail assign root q node use binari branch assign done 4 2 l pe level l q node 2 final use binari unarycross branch assign m2 pe level log node figur 5 show step embed stage observ stage use b 1 level 1 dilat level l l log straightforward see collis stage stage 2 embed level 1 m2 done section 2 partit pwl string head tail head consist leftmost bit tail consist rightmost log pwl string section 2 head even tail odd length either even odd reason use ds follow descript observ node pe assign stage 1 head consist 0s tail consist lambda 10 two rightmost posit goal stage assign dilat 2 pe level m2 k pe level m2 0 node tree k k 1 pwl string get signatori l l tabl 5 assign stage 2 section 3 k log mgamma1 set posit set first describ embed signatori 1 place head ie k log stage 1 assign root k node assign 2 l pe level l k node level 2l gamma 1 use unarystraight binari branch place signatori 1 make unarycross branch use binari branch assign pe level node level signatori 1 place use binari branch assign pe level l k node level show precis assign k k log mgamma1 first line tabl show assign root second line cover assign point posit signatori 1 encount third line cover remain posit head fourth line cover tail section 2 line meaning situat e line 3 meaningless case signatori 1 correspond rightmost posit head case log odd second rightmost posit case log even embed case signatori 1 posit tail similar order place 0s oddnumb posit placement signatori 1 make unarycross unarystraight branch depend valu show assign log mgamma1 tabl 6 assign tree shown tabl 7 0 stop level assign leav 0 node alreadi state signatori 1 set l tabl assign stage 2 section 3 e level 0 node bw log l b mgammalog m1 tabl 7 assign stage 2 section 3 0 posit signatori 1 0 would posit pwl string set 1 would requir use unarycross edg level thu place pe level m2 0 level would result dilat 3 sinc pe level assign level signatori 1 set 0 requir stage 3 handl 0 somewhat differ easi see dilat 2 stage 2 argument show collis within stage similar one given stage 2 section 2 omit stage 1 use b 1 level level henc collis stage 1 stage 2 stage 3 embed level m2 stage similar stage 4 section 2 howev sinc pe level m2 0 assign node level differ let r th subtre root pe level m2 k first describ embed last m2 level 0 ie embed r m2 describ embed r recal stage 2 assign root r m2 node use binari branch next assign two pe level 1 two node assign pe level 2 use binari unarycross branch ie pe level 2 place level 0 b 3 b 4 use unarystraight binari branch success assign remain level r m2 gener l pe level l r m2 assign node 3 l m2 leav r m2 thu assign level stage 2 assign root r assign pe level 1 r use binari unarycross branch use unarystraight binari branch assign 2 l pe level l r leav r thu assign level 2 show collis within stage 3 sinc serial number denot pwl string kept fix collis chang stage 3 henc collis r 1 signatori 1 posit also avoid possibl collis r m2 r seen follow assum level pe r m2 r assign node contain pe r signatori 1 posit pwl string leav r place level 2 node contain pe r m2 start 0 posit chang 1 binari branch go level level never chang henc exist node assign pe r m2 r final easi see collis stage 1 2 stage 3 stage 1 2 use also use level b 2 stage 3 howev signatori 1s keep node level pe k assign stage 2 k 1 distinct node pe 0 assign stage 3 complet stage 3 henc second embed conclud section show modifi embed section even integ power two stage 1 emb pe level 0 blog mc gamma 2 q node level pe level blog assign node level everi occurr log replac blog mc stage 1 2 blog mgamma1c pe embed level 1 b 2 henc 2 blog mgamma1c tree k ms rang k 0 reflect chang throughout stage 2 3 use blog mc instead log obtain desir embed q bw 4 embed use wraparound previou two section describ two embed complet binari tree butterfli wraparound connect embed make heavi use wraparound connect section first show wraparound connect conveni make butterfli power asymptot sens precis next describ embed bw bm dilat 3 best knowledg use result document literatur make use result show q embed dilat 8 resp 5 clariti henceforth refer node bw pe node bm node embed bw bm achiev expans m12 2 optim sinc bm smallest butterfli wraparound consist least m2 node embed bw bm must achiev dilat least 2 show assum sake contradict exist embed ae dilat 1 ae everi node bm assign one pe bw furthermor edg bm assign edg bw sinc number node bm greater number pe bw exist node v bm pe bw assign edg incid v edg bw assign otherwis dilat would 1 sinc v least 2 incid edg m2 edg bm edg bw assign ae sinc bw consist m2 m1 edg everi edg bm assign 1 edg bw ae dilat 1 assign pe level 0 bw node level 0 bm remain pe assign two pe adjac level bw 2 level apart bm pe level assign node level 3 furthermor node level 1 bm get pe assign formal let p pe assign node fl ff 0 ff 1 ff exampl string fi 0 fi 1 fi 2 fi 3 fi 4 fi 5 fi 6 fi 7 assign node pwl string ff level 0 1 2 3 4 assign node level 0 2 4 6 8 respect pe level 5 6 7 assign node level 7 5 3 respect easi see two pe assign node henc embed bw bm next show dilat 3 assum even integ argument odd ms analog let p cross edg bw l fi 1 depend valu l distinguish four case case 1 assign node v 1 2l fi 0 fi connect v 2 path consist cross straight edg result dilat 2 case 2 assign node v 1 fi 0 fi assign node v connect cross edg dilat p 1 p 2 1 case 3 2 assign node v 1 pe p 2 assign node v 2 l fi henc v 1 v 2 connect path consist straight cross edg dilat 2 case 4 assign node v 1 3 fi 0 fi assign node v 2 0 fi 0 connect v 2 path consist straight cross straight edg henc dilat p 1 p 2 3 embed wraparound edg one dilat 3 level l bw chosen edg level l l dilat 3 complet embed bw bm dilat 3 next briefli describ embed q wraparound butterfli first embed q bw dilat 4 use embed section 2 embed bw dilat 3 immedi follow q embed dilat 4 similarli q embed dilat 2 howev sinc wraparound edg incur dilat 3 remain edg incur dilat 2 better everi edg q map onto path length 4 bw 1 everi path contain one wraparound edg henc dilat everi edg q 3 similar argument use emb q bm 2 dilat 5 order obtain claim dilat 8 embed q bm 1 chang embed bw edg level 1 2 bw 1 dilat 3 bm 1 remain edg dilat 2 edg q use edg level 1 2 bw 1 dilat 2 thu dilat 3 dilat 4 bw 1 incur dilat 4 conclus paper describ two embed complet binari tree wraparound butterfli bw two embed wraparound butterfli b first embed emb q bw dilat 4 1 second one emb q bw 2 dilat 2 first embed achiev expans 2 second one achiev expans 4 optim dilat embed optim dilat expans would emb q bw dilat 2 even 4 feel techniqu differ one use signatori 1s need achiev bound third resp fourth embed emb q bm dilat 8 resp 5 6 acknowledg would like thank anonym refere help suggest comment r embed rectangular grid squar grid multidimension array processor embed grid hypercub optim simul butterfli network optim simul tree machin embed rectangular grid hypercub quotient network embed larg tree machin small one cost tradeoff graph embed optim simul mesh connect array processor preserv proxim array topolog properti hypercub tr optim simul meshconnect array processor topolog properti hypercub embed rectangular grid hypercub multidimension array processor optim simul butterfli network embed larg tree machin small one cost tradeoff graph embed applic embed grid hypercub ctr xiaojun shen weifa liang qing hu embed 2d mesh size ieee transact comput v46 n8 p880889 august 1997