remov node overlap graph layout use constrain optim although graph draw extens studi littl attent paid problem node overlap problem aris almost exist graph layout algorithm assum node point practic howev node may label label may overlap investig node overlap remov subsequ layout adjust phase propos four differ approach remov node overlap base constrain optim techniqu first simplest perform minim linear scale remov nodeoverlap second approach reli formul node overlap problem convex quadrat program problem solv quadrat solver disadvantag sinc constraint must linear node overlap constraint express directli must strengthen obtain linear constraint strong enough ensur node overlap third fourth approach base local search method third adapt egenet solver origin design solv gener constraint satisfact problem fourth approach form lagrangian multipli method wellknown optim techniqu use oper research third fourth method abl handl node overlap constraint directli thu may potenti find better solut disadvantag effici global optim method avail problem henc must accept local minimum illustr method seri layout adjust problem b introduct graph draw extens studi last fteen year howev almost research dealt graph layout node treat point layout graph unfortun treat node point inadequ mani applic exampl textual label frequent ad node explain import inform mani illustr diagram engin design human bodi geographi even satisfactori layout pointbas graph may lead node overlap label consid reason interest layout adjust take initi graph layout size node input modi origin graph layout node overlap remov primarili address problem layout adjust dynam context use interact applic graph display subgraph enlarg shrunk node label chang aim take exist graph layout remov node overlap preserv user mental map graph follow misu et al 17 order minim chang mental map preserv graph orthogon order say rel order node x direct attempt place node close possibl origin posit also consid layout adjust context static graph case wish minim area graph new layout howev sinc assum sophist graph layout algorithm use give initi layout graph like dynam case still tri preserv initi layout remov node overlap paper studi four dierent propos perform graph layout adjust ment approach model problem constrain optim problem advantag view layout adjust constrain optim problem also add constraint captur semant diagram simpl graph exampl add constraint specifi certain node must boundari graph specifi rel placement node rst approach layout adjust simplest perform minimum linear scale x direct remov nodeoverlap give simpl ecient algorithm base dynam program nding minimum disadvantag uniform scale mean node often move unnecessarili far approach may lead good layout second approach base formul node overlap problem convex quadrat program problem solv use quadrat solver approach attract algorithm convex quadrat optim well understood global optim possibl polynomi time main disadvantag aris need model node overlap constraint use linear constraint unfortun nodelabel overlap constraint node u v inher disjunct ie u sucient left v u sucient v u sucient right v u sucient v express directli must strengthen obtain linear constraint strong enough ensur node overlap optim layout respect stronger linear constraint may supoptim respect origin nodelabel overlap constraint contrast third fourth approach allow disjunct node overlap constraint express directli approach use local search method 1 2 7 6 27 local search method start current valu variabl examin local neighbourhood tri move point closer optimum constraint handl penalti optim function search proce local minimum found local minimum repres solut constraint satis algorithm termin otherwis may penal local minimum avoid visit continu search nd solut layout adjust problem start posit close global optimum name initi layout mani case local search ecient nd optimum third approach modic egenet 11 solver extens genet model 27 perform layout adjust modic requir handl constraint optim problem oppos constraint satisfact egenet design b handl real oat point variabl rather variabl discret domain work repres rst attempt know investig egenet solver use solv constrain optim problem involv real number 1 fourth approach adapt lagrangian multipli method lmm 13 20 26 classic optim techniqu use oper research lagrangian multipli method gener approach constrain optim appli mani dicult problem success develop specic lagrangian algorithm variabl treat pair correspond node posit nonconvex constraint repeatedli optim use result previou optim give new possibl better start posit search littl work layout adjust mental map preserv close relat paper ead et al 9 mental map propos rst time orthogon order proxim relat topolog given three criteria misu et al 17 provid forcedirect algorithm call forc scan algorithm perform dynam graph layout adjust demonstr method apart uniform scale approach give better layout forc scan algorithm although slower relat work includ lyon 15 tri improv distribut node new layout accord measur distribut cluster bust simultan tri minim dierenc two layout accord measur dierenc anchor graph draw ead et al 8 tri preserv mental map anim graph draw use modi spring algorithm provid smooth user transit relat work includ 19 4 14 18 21 preliminari version second propos includ proof appear 10 comprehens survey graph draw method see 3 22 final mention previou work 24 25 adapt genet model solv constraint optim problem 23 guid local search gl 25 iter call local search procedur base genet variabl updat scheme modifi minim augment cost function preden stop condit reach gl success solv radio link frequenc assign problem paper organ follow section 2 describ view layout adjust problem constrain optim problem introduc static dynam version problem section 3 describ simplest approach solv layout adjust problem linear scale section 4 show replac disjunct nonod overlap constraint layout problem linear approxim allow us transform layout adjust problem quadrat program problem handl quadrat solver section 5 introduc origin egenet model discuss modifi egenet model handl static dynam layout problem continu constrain optim problem section 6 brie describ basic concept multipli method discuss adapt concept deriv lagrangianbas search procedur special layout adjust problem provid empir evalu four propos use set arbitrari graph layout problem investig ecienc eectiv section 7 also compar approach forcescan algorithm misu et al final summar conclud work section 8 2 layout adjust constrain optim algorithm layout adjust base translat problem constrain quadrat optim problem form minim respect c quadrat express c possibl nonlinear collect constraint term variabl repres posit node assum given possibl direct graph ng set node graph e v v set edg graph say edg node u node v node label g consist two vector wn node v width w v height h v label respect initi layout graph g consist two vector x n map node v x posit respect say node v place intuit shown figur 1 node rectangular bound box display area origin lower left corner x axi rightward upward variabl layout adjust problem x coordin node shall repres use two vector x constraint problem layout adjust must ensur node overlap result solut constraint c express u figur 1 notat v right u right v equival fact usual want node separ minimum distanc directli abutt simpli handl modifi height width node ad distanc treat problem overlap new larger node indic introduct primarili concern layout adjust context dynam graph layout use interact applic graph display subgraph enlarg shrunk node label chang aim take exist graph layout remov node overlap preserv user mental map graph one heurist ensur aesthet criteria remain satis new layout similar initi layout preserv orthogon order origin layout 17 idea preserv rel order node x direct context linear constraint c oo ensur preserv orthogon order u v x u x v x 0 v x similarli ydirect shall use heurist rst two approachesuniform scale quadrat programmingbut local search base method dynam layout adjust problem nd new layout g x constraint c satis posit node close possibl origin posit encod dynam layout adjust problem constrain optim problem set object function dyn wish minim dyn subject c 1 choos constraint problem c either c c c oo new layout given optim solut problem apart layout adjust dynam context might also consid layout adjust static context case underli assumpt initi layout gener use sophist graph layout algorithm captur aesthet criteria want redo work layout adjust phase henc static layout adjust remov nodelabel overlap still preserv presum aesthet pleas node placement initi layout also interest minim overal area graph preserv initi layout similar preserv user mental model use techniqu constraint preserv orthogon order term object function move node littl possibl main dierenc dynam layout adjust problem extra term object function stat allow area new layout minim precis static layout adjust problem nd new layout g x solv constrain optim problem subject c 2 c either c c c oo k 0 weight factor toward layout suppos shrunk arithmet averag node x coordin median node x coordin one also take posit centroid graph even preden point c minim attempt place node close possibl preden posit reduc overal area new layout despit dierent motiv formul static layout adjust problem similar static thu follow section focu techniqu solv dynam case sinc also use littl modic solv static case 3 use uniform scale rst consid simpl approach layout adjust uniformli scale graph remov overlap nd c x x c move node v x x 0 linear transform preserv graph orthogon order inde origin graph structur scale factor x chosen node overlap remov disadvantag uniform scale may caus node move unnecessarili rst examin comput c x c given scale factor x follow equat 1 must minim scale minim x mean x 0 v 0 respect follow x 2 varianc x 0 v 0 respect consid comput scale factor consid node dimens w dimens w similarli ij construct mx ij minimum amount scale x direct remov overlap two node similarli mx ij minimum amount scale direct remov overlap henc solv layout adjust problem use scale nding scale factor sx sy solv constrain optim problem minim scale subject 81 inspect equat 4 reveal choos minim scale factor remov overlap mean x mx ij overlap node j similarli observ lead algorithm shown figur 2 comput c x remov overlap possibl minim layoutscal comput mean mu x varianc 2 x x 0 comput mean mu varianc 2 0 lexicograph array a1m let ak form mx comput possibl pair scale factor bmxk bmyk endfor determin pair least cost bestcost cost cost bestcost bestcost cost best k endif endfor solut els x bmxbest figur 2 scale method layout adjust scale subtleti notic scale factor bmxi bmyi remov overlap sinc scale bmxi xdimens remov overlap correspond a1 ai scale bmyi ydimens remov overlap correspond ai main part algorithm complex om log number overlap node sinc number overlap node ojv j 2 overal complex ojv j 2 log jv j 4 use quadrat program quadrat program use nd global optimum convex quadrat object function constraint conjunct linear arithmet equal 9and inequ quadrat program wide studi oper research interior point method provid polynomi time algorithm solv problem section 2 saw encod layout adjust problem constrain optim problem object function convex quadrat mula unfortun constraint express conjunct linear arithmet constraint sinc overlap constraint involv disjunct use quadrat program base approach need replac disjunct constraint linear approxim guarante overlap constraint hold sinc individu disjunct linear constraint straightforward way choos disjunct possibl must hold order construct linear approxim nooverlap constraint c respect x direct c x dene right horizont neighbour node constrain node overlap right neighbour sens hardwir constraint direct node must move remov overlap node v right horizont neighbour node set rightv set contain node u initi posit 1 u 6 v 2 u right v v 3 u v could overlap move x direct either x 0 x 0 rightv immedi right horizont neighbour node node v exist node u rightv similarli dene upper vertic neighbour node set upperv immedi upper vertic neighbour node u v straightforward dene constraint c x node v 2 v comput immedi right horizont neighbour r v say add constraint c x similarli dene c gener orthogon order constraint c oo x c oo x direct respect conceptu straightforward ecienc import elimin mani redund constraint possibl precis algorithm given 10 treat layout adjust problem two separ optim problem one x dimens one dimens break optim function two part constraint two part constraint direct c x given c x togeth c oo constraint x variabl x similarli dene c dynam layout adjust problem follow denit dyn optim problem subject c x 6 quadraticopt comput c x x minim x subject c x comput c minim subject c figur 3 quadrat program approach layout adjust xdirect subject c 7 ydirect new layout given x x solut solut 7 advantag separ problem way twofold first improv ecienc sinc roughli halv number constraint consid problem second solv xdirect rst allow us delay comput c take account node overlap remov optim xdirect actual layout adjust algorithm use given figur 3 first problem x dimens solv x 0 reset x x posit discov optim may reduc number upper vertic neighbour reduc size c also allow exibl node placement ydirect previous observ polynomi time algorithm solv quadrat program problem exist howev medium size problem sever hundr one thousand constraint prefer method solut activ set method use increment implement activ set method provid c qoca constraint solver 5 key idea behind activ set method solv sequenc constrain optim problem 0 problem minim f respect set equal constraint call activ set activ set consist origin equal constraint plu inequ constraint tight word inequ current requir satis equal inequ ignor moment 5 use egenet solver section investig egenet solver use solv layout adjust problem order use quadrat program need linear nooverlap constraint implicitli xed choic whether remov overlap vertic horizont direct mean potenti better solut layout adjust problem never consid egenet handl disjunct nooverlap constraint directli henc attract method solv constrain optim problem associ layout adjust formul nonconvex local optimum found remaind section rst review origin egenet model solv discret constrain satisfact problem examin modifi origin egenet handl continu constrain satisfact problem without optim lastli discuss modi egenet use solv layout adjust problem continu constrain optim problem knowledg work repres rst attempt investig egenet solver use solv continu constrain optim problem 51 origin egenet solver constraint satisfact problem csp 16 tupl u dc u nite set variabl dene nite set z call domain z z 2 u c nite set constraint restrict combin valu variabl take solut assign valu domain respect variabl constraint satis simultan csp wellknown nphard gener genet 27 artici neural network base mincon ict heurist mch solv arbitrari csp binari constraint mch assign valu caus minimum number constraint con ict variabl quickli nd local minima search space lee et al 12 extend genet egenet gener represent scheme handl binari nonbinari constraint egenet success appli solv nonbinari csp carsequenc problem cryptarithmet problem ecient manner 12 constraint egenet repres function valu variabl nonneg number exampl constraint z 1 z 2 repres function altern repres constraint use boolean valu function gener csp formul discret unconstrain optim problem follow min z2d zn cartesian product nite domain n variabl total number constraint g z denot penalti function constraint c csp repres weight given constraint penalti g z equal 0 variabl assign z return posit integ weight associ constraint initi 1 may modi egenet procedur formul goal minim output cost function fz whose valu depend number unsatis constraint weight associ constraint solut z origin csp fz satis constraint egenet use simpl local search rule minim cost function fz heurist learn rule chang weight constraint nd solut z initi complet random variabl assign z 0 gener network execut converg procedur follow variabl asynchron updat converg cycl updat simpli nd valu variabl give lowest total cost without modifi vari abl chang valu assign variabl network trap local minima local minimum repres solut heurist learn rule use updat weight violat constraint c csp help network escap local minima network converg procedur iter solut found predetermin resourc limit exceed 52 modi egenet solver origin egenet solver support constraint nite domain fore solv layout adjust problem egenet approach consid modifi origin egenet solver handl problem continu domain handl continu constrain problem decid repres realnumb domain variabl egenet network domain variabl csp nite usual repres nite set contigu integ continu constrain problem inappropri sinc even consid real variabl take oat point valu mani possibl instead repres rang possibl valu variabl z simpli lower upper bound l u problem natur lower upper bound variabl need gener tighter bound use ecient search sinc examin smaller area give initi bound tight may lead solut found even one exist sinc origin egenet variabl updat function assum nite number possibl valu domain variabl updat continu variabl modi egenet network need treat domain continu variabl repres rang l set nite number element bound valu l u word sampl domain continu variabl tri nite number possibl valu rang updat valu within egenet comput number element tri updat call domain sampl size larger domain sampl size closer true local optimum solut like get comput requir step use domain sampl size 10 throughout experi although could chang even within comput order overcom coars search use small domain sampl size without increas comput overhead greatli whenev solut found revis bound variabl inward toward solut found eect focus search around solut found approach use algorithm extra exibl make algorithm substanti dierent case domain size variabl remain xed throughout comput use discret constrain optim satisfact problem handl continu constrain optim problem simpli add optim compon function minim augment cost function shall see next section close relat lagrang multipli method pseudocod gener optim algorithm egenetopt given figur 4 algorithm take domain sampl size dsz number n variabl z cost function cost input return tupl consist best solut found z b cost best basic idea similar gl 25 first initi egenet variabl use initi var usual random use var order function produc permut perm determin order variabl z updat core method updat loop sampl valu variabl z v tri turn valu give minimum cost retain new valu repres simpl local search best valu variabl z v cost function includ penalti violat constraint drive search toward solut loop continu local minima found variabl updat local minimum repres solut egenetopt invok function revis bound tri revis bound domain egenet variabl comput solut cost accord cost function updat best solut x b best cost current solut smaller best modifi augment cost function egenetopt invok penal ctrz basic origin egenet heurist learn mechan penal violat constraint respect current variabl assign similarli egenetopt invok penal optz modifi form optim function occur augment cost function algorithm iter function stop criterion detect preden stop criterion fulll therefor return true initi varsz z b z best costz b repeat repeat perm var ordern mincost costz minval z v costz mincost mincost costz minval z v endif endfor z v minval endfor updat v 2 z z repres solut revis boundsz costz best z b z best costz b endif endif penal ctrz penal optz stop criterion return hz b besti figur 4 gener egenetbas optim algorithm clearli ecienc use egenetopt solv continu constrain optim problem qualiti 2 best solut found egenet opt depend larg dene augment cost function appropri modifi cost function penal ctr penal opt function 53 handl layout adjust variabl layout adjust problem x x coordin node given exibl represent scheme gener constraint egenet model straightforward dene nooverlap constraint disjunct constraint egenet network ensur overlap label j follow figur 5 show constraint repres modi egenet net work dene function g ij measur amount overlap x direct return 0 overlap nooverlap constraint appli pair j node 1 j n demonstr one advantag use egenet approach solv layout adjust problem gener simpl repres constraint involv problem relat graph layout problem egenet network inde arbitrari addit constraint ad problem straightforwardli fx fy fy figur 5 egenet network nooverlap constraint need determin suitabl rang variabl problem order make use modi egenet algorithm would like ensur variabl initi rang contain solut problem exist conserv approach nd solut use uniform scale approach use minim rang contain posit origin valu instanc x u v posit comput uniform scale approach node v posit node v origin graph initi rang x v set x otherwis similarli v clearli rang guarante includ least one solut problem scale factor tend larg rang also larg practic make assumpt densiti node start smaller rang thu reduc search dene max x maximum overlap x direct pair node dene max similarli use initi rang x 0 v mean solut guarante true graph dens overlap initi layout practic rare layout adjust problem initi valu variabl x return initi var given initi layout x 0 0 one reason investig local search method initi layout usual quit close global optimum henc local search around initi layout like nd good solut variabl order strategi var order use simpli updat variabl one dimens x random order updat variabl dimens eectiv sinc relationship x variabl weak disjunct constraint evalu dimens turn get faster converg local minima strategi cours possibl revis bound function dene follow solut found x x x x 0 reset upper bound current valu x lower bound reset x 0 reset lower bound current valu x upper bound reset x 0 bound unchang similarli encod strategi sinc found solut one side start point look side look away look farther away tend reduc optim solut graph layout problem stop criterion return true predetermin number iter tri cost current solut wors equal previou solut total resourc limit initi set 1000 time better solut found resourc limit reset doubl amount resourc use nd previou solut less 100 otherwis resourc limit reset minimum 1000 120 resourc use nding previou solut remain determin penal ctr penal opt function rel weight object function constraint penalti impor tant exampl graph layout adjust problem augment cost function bias toward penalti constraint violat node lap egenetopt may take longer time even fail return good solut 3 hand augment cost function bias toward solut cost egenetopt may fail nd solut satisfi nooverlap constraint recal object function dyn layout adjust quantiti usual order 100 1000 alway much larger penalti valu constraint boolean constraint violat need normal quantiti avoid bia toward solut cost rang x v l v u v maximum valu term l v c x denot omax v normal optim function x v simpli norm x clearli valu return norm x real number rang similarli dene normal optim function norm variabl accordingli dene augment cost function costx sum penalti constraint violat sum normal optim function follow norm x denot total number constraint problem local minimum found penalti function penal opt chang normal optim function take account new smaller rang variabl penal ctr function simpli increas weight violat constraint 1 origin egenet model note egenet approach ignor orthogon order constraint simpli concentr overlap constraint sinc practic found minimim dyn preserv structur origin graph tend preserv orthogon even though explicit constraint 6 use pseudolagrangian method egenet local search method describ previou section modica tion discret constrain satisfact algorithm solv continu constrain optim problem end look similar lagrang multipli method inspir us directli solv problem use approach 61 lagrangian multipli method lagrang multipli method gener approach continu constrain optim tackl nonlinear object function nonlinear constraint gener continu equalityconstrain object function formul follow minim fz subject fz object function gz vector function repres constraint penalti lagrangian function associ problem weight sum object function constraint dene vector lagrang multipli lagrangian function relat local extrema problem 8 follow theorem see eg 13 theorem 1 let z local extremum fz subject gz assum z regular point 4 exist vector r z fz figur 6 overlap calcul base theorem number method solv constrain optim problem wide use rstorder method repres iter process z k stepsiz paramet intuit equat repres counteract forc achiev good solut optim problem constraint violat 11 increas weight constraint forc search toward solut contrast 10 perform descent optim direct lagrang multipli xed 62 layout adjust lagrang multipli lagrangian approach layout adjust perform iter process like dene rather synchron updat variabl node v treat turn two coordin variabl x v v updat togeth allow nonoverlap constraint handl meaning way two node j overlap illustr figur 6 overlap j eect creat forc direct shown node move either distanc dx ij x direct dy ij direct overlap disappear choos minimum magnitud dx ij dy ij result constraint violat eect treat constraint function g ij follow 0 overlap given denit r x otherwis similarli r two constraint function g ij g ji symmetr repres singl underli overlap constraint henc pair lagrang multipli ij repres current weight constraint basic local search simpli lagrangian optim use rstorder step sinc optim nd local minima one optim may nd good solut local minima reach pseudolagrangian method reduc stepsiz half also move node closer posit initi layout sinc decreas object function albeit risk introduc overlap let search potenti nd better solu tion eventu number reoptim method nish return best solut found experi initi stepsiz 0125 factor limit 255 function initi multipli simpli initi lagrang multipli 1 resourc limit never exceed algorithm figur 7 take account orthogon order constraint could ad use standard lagrangian approach ad new constraint function name unfortun simpl addit lead diverg behaviour one simpl approach handl equal constraint orthogon order instead simpli forc complianc let set coordin must equal eg fx g set comput averag x2 xjsj set valu within averag valu eg x 1 approach seemingli adhoc quit principl justic replac set variabl singl variabl eect use equat constraint substitut chang variabl would determin sum chang variabl set averag simpli function sum chang variabl howev approach handl inequ constraint orthogon order egenet approach empir evalu langrangian approach includ constraint preserv origin orthogon dere sinc practic found minimim dyn preserv structur origin graph tend preserv orthogon initi multipli best 1 stepsiz initi step size repeat 6 endif endfor endfor gx x best best x els stepsiz stepsize2 initi multipli endif endif factor limit resourc limit exceed return figur 7 pseudolagrangian method layout adjust 7 empir evalu section compar perform scale algorithm scale present section 3 forc scan algorithm fsa misu et al 17 quadrat solver approach quad present section 4 modi egenet solver describ section 5 psuedolagrangian method plm discuss section 6 set nine dynam graph layout adjust problem quad implement borland c window version 45 solver implement c compil gcc compil version 273 linux test perform pentium pc run 155mhz tabl 1 cpu time taken scale fsa quad egenet plm layout adjust exampl problem graph node scale fsa quad egenet plm tabl 2 valu dyn adjust layout use scale fsa quad egenet plm layout adjust exampl problem graph node scale fsa quad egenet plm 9 17 38880 127008 77760 5535 3688 quantit comparison dierent method sampl problem provid tabl 1 2 tabl rst column give identifi number graph second column give number node sampl graph tabl 1 detail cpu time second taken nd adjust layout method tabl 2 detail valu dyn adjust layout given method local search method egenet plm averag cpu time cost 10 success run report case case test egenet plm success nd suboptim nal layout without node overlap note egenet plm solver halt current solut found wors previou one egenet solver also halt possibl reset resourc limit exceed broadli speak nd rank method respect cpu time taken nd adjust layout fastest slowest scale fsa quad plm egenet scale fsa consider faster method quad somewhat faster plm modi egenet solver take much longer solver probabl modi egenet solver consid nite number point domain variabl updat slowli revis domain learn valu dyn report tabl 2 provid simpl numer measur qualiti adjust layout howev also import look actual aesthet qualiti adjust layout reason look exampl graph show result layout adjust method note use asterisk indic method give subject best layout exampl tabl 2 graph 1 gener b graph 1 box node c layout scale layout fsa layout quad f layout egenet g layout plm figur 8 initi layout adjust graph 1 figur 8a 8b respect show initi layout graph 1 ideal graph circl node label graph figur 8c 8d 8e 8f 8g give result layout adjust use scale fsa quad mod i egenet plm respect method provid reason layout ad justment although note egenet introduc edgenod label overlap plm give best adjust note gure scale graph maximum height width one inch thu adjust layout may scale smaller usual better layout may identi rel larger node label graph 2 layout scale c layout fsa layout quad e layout egenet f layout plm figur 9 initi result layout graph 2 surprisingli graph 2 shown figur 9 simplest method scale nd best layout method nd local minimum method give reason layout adjust quad give worst layout figur show initi result layout graph 3 chosen exampl kind explan diagram wide use biolog engin textbook arguabl quad give best adjust layout sinc best preserv origin graph structur scale increas size much egenet lesser extent plm chang orthogon order graph remov symmetri graph 4 shown figur 11a exampl root tree label graph commonli use display data structur organ structur mani reallif applic method give reason layout worst scale sinc unnecessarili increas size layout found quad slightli better found plm egenet graph 5 anoth exampl root tree layout time plm give best layout although chang orthogon order close follow fsa preserv orthogon order quad egenet introduc edgelabel cross graph 6 care design show layout adjust may introduc edg cross even though layout adjust method preserv graph orthogon order fsa quad produc worst layout sinc introduc edg cross scale introduc edg cross nal graph 3 b layout scale c layout fsa layout quad e layout egenet f layout plm figur 10 initi result layout graph 3 graph 4 b layout scale c layout fsa layout quad e layout egenet f layout plm figur 11 graph 4 tree layout adjust 1 layout sinc initi layout contain edg cross result layout usual unnecessarili wide modi egenet plm method produc similar good layout produc egenet slightli better produc plm shown figur 14a graph 7 rather patholog graph edg lot node overlap occur dierent horizont level scale clearli give worst layout adjust modi egenet give best layout neatli pack fairli close initi layout hand plm give stacklik layout look quit dierent origin graph graph 5 b layout scale c layout fsa layout quad e layout egenet f layout plm figur 12 graph 5 tree layout adjust 2 graph 8 shown figur 15a simpli version graph 7 node remov thu less node overlap graph 8 algorithm produc result closer origin graph case plm give aesthet pleas layout graph 9 xshape graph symmetri x yaxi layout reason layout scale fsa quad retain symmetri produc modi egenet plm quad produc best layout see method produc uniformli better layout adjust even scale produc best layout one exampl howev gener scale fsa produc worst layout gener plm close follow quad produc best layout howev egenet plm lose origin structur graph preserv structur would need add extra constraint modi egenet plm solver gener quad fsa preserv structur part preserv orthogon order may still introduc edg overlap found origin graph scale guarante preserv origin structur sinc perform simpl uniform scale graph 6 without node label b graph 6 node label c layout scale layout fsa e layout quad f layout egenet g layout plm figur 13 initi result layout graph 6 71 resourcebound layout adjust although plm solver produc best layout tabl 1 suggest substanti slower scale fsa solver natur question ask given small xed amount time method give best layout question make sens plm solver employ local search techniqu point time current best solut thu stop plm solver time interv look qualiti solut compar scale fsa solver make sens perform experi quad sinc concept current best solut graph figur 17 show cost best solut found far multipl best found eventu versu time graph 1 7 9 execut plm algorithm rst nonoverlap solut found graph within 002 second except graph 9 valu dyn solut smaller solut eventu found scale fsa graph 7 b layout scale c layout fsa layout quad e layout egenet f layout plm figur 14 initi result layout graph 7 graph 8 b graph 8 scale c graph 8 fsa graph 8 quad e graph 8 egenet f graph 8 plm figur 15 initi result layout graph 8 graph 9 b layout scale c layout fsa layout quad e layout egenet f layout plm figur 16 initi result layout graph 9 quad graph 9 rst solut cost 8108 graph plm nd solut whose valu dyn within 20 eventu best less half time requir nd best exampl could safe stop plm 015 second obtain solut within 20 best found better solut found algorithm 8 conclus studi problem layout adjust graph wish remov node overlap preserv graph origin structur henc user mental map graph given four algorithm solv problem reli view constrain optim problem empir evalu algorithm shown reason fast give nice layout better compar algorithm fsa misu et al gener speak approach base lagrangian method give best layout reason time howev may preserv orthogon layout origin graph quadrat program approach also produc good layout reason time preserv graph orthogon order uniform scale give fastest simplest approach layout adjust may lead unnecessari enlarg graph guarante preserv origin structur graph result interest layout adjust graph also suggest techniqu lay nonoverlap window label map graph 9 graph 7 graph 1 figur 17 cost best solut found far time graph 1 7 9 9 acknowledg would like thank peter ead comment work yi xiao quadrat solver note 1 note unless number pixel use real number usual use denot posit size node graph layout sinc allow greater exibl 2 even though global optim result solut guarante egenet approach local search method experiment result relat gl approach report 25 show set reallif militari frequenc assign problem gl alway found better solut found convent search method 3 mean solut cost close enough global optim cost optim problem 4 regular point constraint g one rg 1 linearli independ r boltzmann machin travel salesman problem discret stochast neural network algorithm constraint satisfact problem algorithm draw graph annot bibliographi solv linear arithmet constraint user interfac applic genet connectionist architectur solv constraint satisfact problem iter improv solv small larg scale constraint satisfact problem use heuristicbas microgenet algorithm onlin anim graph draw use modi preserv mental map diagram remov node overlap use constrain optim extend genet nonbinari csp toward ecient stochast constraint solver bust anchor graph draw consist network relat layout adjust mental map experiment theoret result interact orthogon graph draw edg extend graph automat graph draw readabl diagram foundat constraint satisfact tunnel algorithm partial csp combinatori optim problem partial constraint satisfact problem guid local search method optim solv satisfact problem use neuralnetwork tr ctr huang wei lai forcetransf new approach remov overlap node graph layout proceed twentysixth australasian confer comput scienc research practic inform technolog p349358 februari 01 2003 adelaid australia wanchun li peter ead nikola nikolov use spring algorithm remov node overlap proceed 2005 asiapacif symposium inform visualis p131140 januari 01 2005 sydney australia huang wei lai sajeev junbin gao new algorithm remov node overlap graph visual inform scienc intern journal v177 n14 p28212844 juli 2007 huang peter ead wei lai framework filter cluster dynam layout graph visual proceed twentyeighth australasian confer comput scienc p8796 januari 01 2005 newcastl australia