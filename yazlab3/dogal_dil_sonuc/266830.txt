predict data cach miss nonnumer applic correl profil maxim benefit minim overhead softwarebas latenc toler techniqu would like appli precis set dynam refer suffer cach miss unfortun inform provid stateoftheart cach miss profil techniqu summari profil inadequ refer intermedi miss ratio result either fail hide latenc els insert unnecessari overhead overcom problem propos evalu new techniqu correl profil improv predict correl cach behavior associ dynam context experiment result demonstr roughli half 22 nonnumer applic studi potenti enjoy signific reduct memori stall time exploit least one three form correl profil consid b introduct dispar processor memori speed continu grow memori latenc becom increasingli import perform bottleneck cach hierarchi essenti step toward cope problem complet solut toler latenc number promis softwarebas techniqu propos exampl compil toler modest latenc schedul nonblock load earli rel result consum 12 toler larger latenc insert prefetch instruct 7 9 softwarebas techniqu provid latencyhid benefit also typic incur runtim overhead exampl aggress schedul nonblock load increas regist lifetim lead spill softwarecontrol prefetch requir addit instruct comput prefetch address launch prefetch benefit techniqu typic outweigh overhead whenev miss toler overhead hurt perform case refer would enjoy cach hit anyway therefor maxim overal perform would like appli latencytoler techniqu precis set dynam refer would suffer miss previou work address problem numer code 9 paper focus difficult import case isol dynam miss instanc nonnumer applic 11 predict data cach miss nonnumer code overcom compil inabl analyz data local nonnumer code instead make use profil inform one simpl type profil inform precis miss ratio static memori refer throughout remaind paper refer approach summari profil sinc miss ratio memori refer summar singl valu summari profil indic signific memori refer instruct ie execut frequent enough make nontrivi contribut execut time miss ratio close 0 100 isol dynam miss trivialw simpli appli latencytoler techniqu static refer alway suffer miss contrast import refer intermedi miss ratio eg 50 suffici inform distinguish dynam instanc hit miss sinc inform lost cours summar miss ratio current stateoftheart approach deal intermedi miss ratio treat static memori refer miss ratio certain threshold though alway miss alway hit respect 2 howev allornoth strategi fail hide latenc refer predict hit actual miss induc unnecessari overhead refer predict miss actual hit rather settl suboptim perform would prefer predict dynam hit miss accur 111 correl profil expos cach behavior directli user inform memori oper 6 enabl new class lightweight profil tool collect sophist inform simpli perrefer miss ratio exampl cach miss correl inform recent controlflow path whether recent memori refer hit miss cach etc help predict dynam cach miss behavior refer approach correl profil figur 1 illustr correl profil inform might exploit load instruct shown figur 1 overal miss ratio 50 howev depend dynam context load may see predict behavior exampl context b result high likelihood load miss wherea context c henc would like appli latenc toler techniqu within context b c dynam context shown figur 1 view simpli nonoverlap set dynam instanc load group togeth share common distinguish pattern paper consid three differ type inform use distinguish context first controlflow informationi sequenc n basic block number preced load two base sequenc cach access outcom ie hit miss previou memori refer self correl consid cach outcom previou n dynam instanc given static refer global correl refer previou n dynam refer across entir program note load context c context context figur 1 exampl correl cach miss dynam context may improv predict xy mean x miss dynam refer analog form three type correl profil explor previous context branch predict 4 10 15 16 12 object overview goal paper determin whether correl profil predict data cach miss accur nonnumer code summari profil translat signific perform improv appli softwarebas latenc toler techniqu greater precis focu specif predict load miss paper load latenc fundament difficult toler store latenc hidden buffer pipelin although reli simul captur profil inform studi correl profil practic techniqu sinc could perform rel littl overhead use inform memori oper 6 remaind paper organ follow begin section 2 discuss three differ type histori inform use correl profil section 3 present qualit analysi expect perform benefit section 4 present experiment result quantifi perform advantag correl profil collect 22 nonnumer applic addit section 5 report memoryaccess behavior individu applic explain correl profil effect section 6 compar perform softwar prefetch guid summari correl profil modern superscalar processor final discuss relat work present conclus section 7 8 profil techniqu section propos motiv three new correl profil techniqu predict cach outcom controlflow correl self correl global correl 21 controlflow correl first profil techniqu correl cach outcom recent controlflow path collect inform profil tool maintain n recent basic block number fifo buffer match pattern hitmiss outcom given memori refer intuit controlflow correl use detect case either data reus cach displac like path lead data reuseeith tempor spatialthen next refer like cach hit consid exampl shown figur 2ab graph travers recurs procedur walk cyclic path eg abcda pqrsp result tempor reus pdata exampl controlflow correl potenti detect last four travers decis lead cycl eg right left high probabl next pdata refer enjoy cach hit controlflow path may increas likelihood cach miss displac data line reus exampl x 0 condit true figur 2c subsequ loop like struct node f int data struct node left right void walknod p f go leftpdata elsif go rightpdata elsif go elsif go els p null walkp r left right code data reus b exampl graph c code cach displac figur 2 exampl controlflow correl detect data reus cach displac control flow profil load underlin void preordertreenod p f p null f preorderpleft preorderpright preorder travers self cach outcom pdata exampl code b tree construct travers preorder figur 3 exampl use selfcorrel profil detect spatial local pdata consecut number node adjac memori displac p primari cach load note path access larg amount data obviou problem displac might also due map conflict 22 self correl self correl profil load l correl cach outcom n previou cach outcom l approach particularli use detect form spatial local appar compil time exampl consid case figur 3 tree construct preorder assum consecut call memori alloc return contigu memori locat cach line larg enough hold exactli two treenod depend travers order extent tree modifi creat may experi spatial local tree subsequ travers exampl tree also travers preorder expect pdata suffer miss everyoth refer cach line boundari cross therefor despit fact overal miss ratio pdata 50 compil would difficulti recogn form spatial local self correl profil would accur predict dynam cach outcom pdata 23 global correl contrast self correl idea behind global correl correl cach outcom load l previou n cach outcom regardless posit within program profil tool maintain pattern use singl ndeep fifo updat whenev dynam cach access occur 1 f regist int regist listnod curr null f g r adata anext bdata bnext gdata gnext rdata rnext adata anext bdata bnext h h h memori global cach outcom global htab10a exampl code b hash tabl access figur 4 exampl use globalcorrel profil detect bursti cach miss currdata note sinc earlier instanc l may appear global histori pattern global correl may captur behavior self correl particularli extrem tight loop intuit global correl particularli help detect bursti pattern miss across multipl refer one exampl situat move new portion data structur access long time henc displac cach case fact first access object suffer miss good indic associ refer neighbor object also miss figur 4 illustr case larg hash tabl larg fit cach organ array link list case might expect strong correl whether htabi list head pointer miss whether subsequ access currdata list element also miss similarli entri access twice within short interv eg htab10 fact head pointer hit strong indic list element eg adata bdata also hit summari correl cach outcom context refer occurseg surround control flow cach outcom prior referencesw potenti predict dynam cach behavior accur possibl summar miss ratio qualit analysi expect benefit present quantit result later section begin section provid intuit correl profil improv perform key factor dictat potenti perform gain ratio latenc toler overhead v cach miss latenc l extrem case v point appli latenc toler techniqu select sinc either cost benefit appli select may import figur 5a illustr averag number effect stall cycl per load cpl vari function v l variou strategi appli note cpl metric includ overhead associ appli includ singl cycl execut load instruct never appli cpl simpli ml averag miss ratio extrem alway appli latenc alway hidden refer even normal hit suffer henc note v better never appli rather alway appli figur 5b show altern view cpl plot function fix v l observ choic whether alway never appli depend valu rel v l achiev better perform allornoth approach appli decisionmak process ie compar miss ratio v l refin set load ideal case would consid optim dynam refer individu result cpl mv shown figur 5 howev sinc impract softwarebas techniqu must consid aggreg collect refer sinc summari profil provid singl miss ratio per static refer finest granular cpl never cpl singleactionperload ideal multipleactionsperload cpl alway cpl cpl singleactionperload ideal multipleactionsperload cpl alway cpl never cpl vs v figur 5 illustr cpl differ approach appli latenc toler scheme overal averag load miss ratio latenc toler overhead load miss latenc decid whether appli dynam instanc given static refer figur 5 illustr potenti shape singl action per load curv bound case never alway ideal appli sinc correl profil distinguish differ set dynam instanc static load base path inform allow us make decis finer granular summari profil therefor potenti achiev even better perform illustr multipl action per load curv figur 5 detail actual cpl equat summari correl profil case found appendix quantit evalu perform gain section present experiment result quantifi perform benefit offer correl profil begin measur understand potenti perform advantag gener latenc toler scheme later section 6 focu softwarecontrol prefetch specif case studi 41 experiment methodolog measur impact correl profil follow 22 nonnumer applic entir spec95 integ benchmark suit addit integ benchmark contain spec92 suit uniprocessor version two graphic applic splash2 14 eight applic olden 11 suit pointerintens benchmark standard unix util awk tabl 1 briefli summar applic includ input data set run complet case tabl 2 show relev dynam statist applic compil applic o2 optim use standard mip c compil irix 53 use mip pixi util 13 instrument binari pipe result trace detail perform simul increas simul speed simplifi analysi model perfectlypipelin singleissu processor similar mip r2000 section later section 6 model modern superscalar processor mip r10000 reduc simul time simul perform correl profil select subset load instruct criteria profil load must rank among top 15 load term total cach miss count miss ratio must 10 90 use criteria focu signific load intermedi miss ratio refer load correlationprofil load fraction dynam load refer applic correl profil shown tabl 2 tabl 1 benchmark characterist suit name descript input data set cach size integ perl unix script languag perl train scrabbl 128 kb go comput game go train 8 kb ijpeg graphic compress decompress train 8 kb vortex databas program train 8 kb compress compress decompress file memori train li lisp interpret train 8 kb integ espresso minim boolean function cp eqntott translat boolean equat truth tabl int pri 3eqn 8kb raytrac raytrac program car 4kb radios light distribut use radios method batch 8kb olden bh barneshut nbodi forcecalcul 4k bodi 16kb mst find minimum span tree graph 512 node 8kb perimet comput perimet region imag 4k x 4k imag 16kb health simul columbian health care system max level 5 16kb tsp travel salesman problem 100000 citi 8kb bisort sort merg biton sequenc 250000 integ 8kb em3d simul propag em wave 3d object 2000 hnode 32kb 100 enod voronoi comput voronoi diagram set point 20000 point 8kb unix awk unix script languag awk extens test 32kb util awk capabl attempt maintain much histori inform possibl sake correl controlflow correl typic maintain path length 200 basic blocksin case result larg number distinct path forc measur 50 basic block self global correl experi maintain path length previou cach outcom either self global focu predict singl level data cach two level make analysi compli cate choic data cach size import either larg small rel problem size predict dynam miss becom easi either alway hit alway miss therefor would like oper near knee miss ratio curv predict dynam hit miss present greatest challeng although could potenti reach knee alter problem size greater flexibl adjust cach size within reason rang chose data cach size follow first use summari profil collect miss ratio load within applic differ cach size rang 4kb 128kb chose cach size result largest number signific load intermedi miss ratiosthes size shown tabl 1 case model twoway setassoci cach line 42 improv predict accuraci perform figur 6 show three correl profil schemescontrolflow c self global g improv predict accuraci correlationprofil load bar normal respect number mispredict refer summari profil p broken two categori top section predict hit actual miss repres lost opportun predict refer hit thu attempt toler latenc actual miss predict miss actual hit section account wast overhead appli latenc toler refer actual hit discuss earlier section 3 threshold decid whether appli latenc toler refer miss ratio must exceed v latenc toler overhead l miss latenc summari profil threshold appli overal miss ratio instruct correl profil appli group dynam refer along individu path figur 6 show result two valu v summari profil tend appli latenc toler aggress thu result notic amount wast overhead contrast v summari profil tend conserv thu result mani untoler miss overal correl tabl 2 dynam benchmark statist column inst number dynam instruct column load number dynam load percentag inst also given column load miss rate datacach miss rate load column cp load fraction dynam load correl profil column cp load miss fraction load miss correl profil suit name dynam statist inst load load miss rate cp load ref cp load miss integ perl 79m 15m 18 123 21 95 go 568m 121m 21 71 10 23 ijpeg 1438m 266m 18 27 2 17 vortex 2838m 830m 29 33 7 48 compress 39m 8m 20 39 6 87 gcc 282m 61m 22 14 2 40 li 228m 54m 24 40 8 73 integ espresso 560m 112m 20 22 6 70 raytrac 2105m 588m 28 48 10 53 radios 996m 236m 24 04 1 32 olden bh 2326m 667m 29 10 3 82 mst 90m 14m 16 69 17 91 perimet 123m 17m 14 23 5 88 health 8m 2m 25 90 20 84 tsp 825m 239m 29 10 1 37 bisort 732m 132m 18 25 6 74 em3d 420m 73m 17 14 4 98 voronoi 263m 87m 16 13 4 57 unix util awk 70m 9m 7 76 16 90 profil significantli reduc type mispredict quantifi perform impact increas predict accuraci figur 7 show result execut time four profil scheme assum cach miss latenc 50 cycl bar normal execut time without latenc toler broken four categori bottom section busi time section predict miss actual miss use overhead paid toler refer normal miss top two section repres mispredict penalti includ wast overhead predict miss actual hit untoler miss latenc predict hit actual miss degre improv predict accuraci translat reduc execut time 1 depend rel import load stall also fraction load correl profil factor favor eg eqntott see larg perform improvementswhen either factor small eg perimet tsp perform gain modest despit larg improv predict accuraci 5 case studi develop deeper understand correl profil succe examin number applic greater detail addit discuss memori access pattern applic also show impact correlationprofil load three perform metric miss ratio distribut stall cycl per load cpl due correlationprofil load overal cpl cp measur impact execut time miss ratio distribut give us insight effect correl profil isol dynam hit miss instanc static load instruct fail hide miss expens wast overhead possibl improv perform replac expens less expens mispredict even total mispredict count increas eg raytrac controlflow correl v predict miss actual hit predict hit actual miss normal mispredict awk 200 basic block normal mispredict bh 200 basic block normal mispredict bisort 200 basic block normal mispredict compress 200 basic block normal mispredict em3d 200 basic block normal mispredict eqntott 50 basic block normal mispredict espresso 200 basic block normal mispredict gcc 200 basic block normal mispredict 100 104 108 100 100 93 go 50 basic block normal mispredict health 50 basic block normal mispredict ijpeg 100 basic block normal mispredict li 100 basic block normal mispredict normal mispredict 22 10872 28 2215191001410019 25 mst 200 basic block normal mispredict perimet 200 basic block normal mispredict 71 7078 perl 200 basic block normal mispredict radios 200 basic block normal mispredict raytrac 50 basic block normal mispredict sc 200 basic block normal mispredict tsp 200 basic block normal mispredict voronoi 200 basic block normal mispredict vortex 200 basic block figur number mispredict correlationprofil load normal summari profil summari profil controlflow correl global correl maximum path length use controlflow correl indic next benchmark name 51 li half total load miss caus two pointer derefer thisn flag mark pn flag sweep illustr pseudocod figur 8 access pattern behav follow procedur mark travers binari tree three loop shown figur 8a start particular node first inner loop continu descend treechoos either left right child goesuntil reach either mark node leaf node point backup node continu descend search predict hit actual miss predict miss actual hit predict miss actual miss busi normal exec time 88 87 85 85 100 95 95 95 awk 200 basic block normal exec time 97 97 97 97 99 99 99 99 bh 200 basic block normal exec time 94 92 92 92 100 96 96 96 bisort 200 basic block normal exec time 86 84 86 86 95 90 95 95 compress 200 basic block normal exec time 96 96 94 95 em3d 200 basic block normal exec time 94 eqntott 50 basic block normal exec time 96 95 92 93 99 98 96 97 espresso 200 basic block normal exec time gcc 200 basic block normal exec time 96 94 95 95 99 99 99 99 go 50 basic block normal exec time 81 79 78 79 95 94 94 94 health 50 basic block normal exec time ijpeg 100 basic block normal exec time 92 88 86 88 100 96 94 97 li 100 basic block normal exec time normal exec time 86 80 79 7988 86 87 mst 200 basic block normal exec time 95 94 93 93 100 98 96 97 perimet 200 basic block normal exec time 72 70 69 69 93 perl 200 basic block normal exec time radios 200 basic block normal exec time 90 raytrac 50 basic block normal exec time 91 87 87 89 sc 200 basic block normal exec time 97 94 93 94 98 97 96 97 tsp 200 basic block normal exec time voronoi 200 basic block normal exec time 93 vortex 200 basic block figur 7 impact profil scheme execut time assum 50 cycl miss latenc l summari profil controlflow correl perform second inner loop tree alloc preorder similar one shown figur 3 except much larger therefor enjoy spatial local long continu follow left branch tree spatial local disrupt whenev backup second inner loop illustr figur 8c three type correl profil provid better cach outcom predict summari profil thisn flag refer mark li self correl detect form spatial local effect global correl accur summari profil less accur self correl case cach outcom refer help predict refer consum wast space global histori pattern controlflow correl also perform well void marknod ptr f true f outer loop true f 1st inner loop thisn flag mark break mark node els f els livecdrthi f right gels break leaf node end ifels end 1st innerwhil true f 2nd inner loop backup point continu descend end 2nd inner 1st outer procedur mark pn flag b procedur sweep tree pointer c tree travers order mark figur 8 procedur mark sweep li memori access pattern mark note consecut number node part c correspond adjac address memori observ thisn flag like suffer miss begin iter first inner loop immedi follow backup perform second inner loop preced outer loop iter final refer pn flag sweep shown figur 8b fact array refer written pointer form self correl global correl detect spatial local caus access consecut element within array although compil could potenti recogn spatial local static analysi recogn pn flag effect array refer alway possibl case figur 9 show detail perform result li miss ratio distribut figur 9a ten rang miss ratio contain four bar correspond fraction total dynam correlationprofil load refer fall within rang bar summari profil repres inher miss ratio load instruct three case repres degre correl profil effect group togeth dynam instanc load separ path similar cach outcom behavior correl scheme effect would like see ushap distribut refer isol alway high low miss ratiosw refer case strongli bias contrast refer cluster around middl distribut say weakli bias correl profil outperform summari profil increas degre bia observ figur 9a summari profil 80 load profil 2 miss ratio rang 3050 includ thisn flag pn flag refer shown earlier figur 8 contrast self correl 2 recal profil load miss ratio 10 90 among top 15 rank load term contribut total miss therefor summari profil case never load outsid miss ratio rang cpl summari global controlflow self cpi summari global controlflow self ideal b cpl due correlationprofil load c overal cp figur 9 detail perform result li profil 27 isol load miss ratio 3050 rang 45 either 10 90 three correl scheme increas degre bia case increas degre bia correlationprofil load translat reduct cpl shown figur 9b cpl due correlationprofil load plot rang overheadtolat assum miss latenc 50 cycl discuss section 3 correl profil partial close gap summari profil ideal predict overal cp also shown figur 9c 511 eqntott figur show detail perform result eqntott see three form correl profil success increas degre bia reduc cpl henc cp focu memori access behavior load miss caus four load cmppt shown figur 11a two array refer ptandi b ptandi clearli spatial local enjoy two array refer detect self correl henc global correl howev access pattern two load a0ptand b0ptand complic procedur cmppt multipl call site two say 1 2 invok frequent whenev cmppt call 1 a0 like unchang b0 new valu contrast whenev cmppt call 2 b0 like unchang a0 new valu moreov 1 2 repeatedli call cmppt callsit depend behavior result stream cach outcom illustr figur 11b self correl captur stream behavior controlflow correl also predict cach outcom accur distinguish two call site cmppt cach outcom a0ptand also help predict ptandiif a0ptand hit impli array ptand load recent therefor ptandi refer like also hit similar correl also exist b0ptand b ptandi henc global correl quit effect case controlflow correl also predict cach outcom ptandi cpl summari controlflow global self ideal 1121416 cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur 10 detail perform result eqntott extern int ninput noutput int cmppt b pterm b f regist int aa bb regist int ptand b ptand famou correl branch return 0 a0ptand b0ptand procedur cmppt caus b callsit depend load miss cach outcom pattern figur 11 memori access behavior eqntott make load explicit rewrit two express a0ptandi b0ptandi origin cmppt four load ie a0ptand ptandi b0ptand b ptandi shown b ptandi indirect fashion virtu predict a0ptand b0ptand cpl summari controlflow global self ideal 09810210611114118 cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur 12 detail perform result perimeter161 middleright left right middleleftmor spatial local found bottom void middl firstquadtre p f p null return middl firstpmiddl left middl firstpmiddl right middl middl quadtre alloc preorder b code travers quadtre figur 13 exampl case spatial local found bottom tree exampl assum one cach line hold three tree node tree alloc preorder node consecut number adjac memori 512 perimet bisort figur 12 show detail perform result perimet main data structur use perimet bisort tree quadtre perimet binari tree bisort tree alloc preorder order travers rather arbitrari result see regular cach outcom pattern one illustr figur 3 applic cpl summari controlflow global self cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur 14 detail perform result mst nevertheless still consider amount spatial local among consecut access node travers around bottom tree alloc preorder exampl travers quadtre use procedur middl first shown figur 13 miss twice upon access node 156 160 tree bottom assum node 156 158 one cach line node 159 161 anoth contrast rel littl spatial local travers middl tree self correl henc global correl discov whether current region tree enjoy spatial local controlflow correl also potenti detect whether close bottom tree notic number level recurs descent 513 mst miss mst see detail perform result figur 14 caus load hashlookup tmpedgehash load bluerul illustr figur 15 mst applic consist two phase creation phase comput phase phase invok hashlookup creation phase caus miss call hashlookup check whether key alreadi exist hash tabl alloc new entri comput phase much data alreadi brought cach henc rel miss self correl global correl accur predict cach outcom two distinct phase sinc appear repeat stream either hit miss controlflow correl also effect sinc distinguish call chain invok hashlookup load tmpedgehash bluerul access link list whose node fact alloc contigu memori locat consequ self correl detect spatial local accur controlflow correl help void hashlookupint key hash hash f int j hashentri ent ent entkey key ent return ententri return null static bluereturn bluerul f tmpvlistnext tmp prevtmptmptmpnext f figur 15 pseudo code drawn mst total correlationprofil miss ratio controlflow global self miss ratio distribut correlationprofil load references0050150250350 cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur detail perform result raytrac 514 raytrac tsp raytrac refer figur 16 perform result 30 load miss caus pointer derefer tmpbv prim box2 see figur 17 subdiv bintre two call prim box2 copi part array pe current node btn array btn1pe btn2pe btn1 btn2 children btn process copi pe perform recurs whole tree creat bintre result prim box2 call upon node n may use valu array pe refer pepa prim box2 n anteced n henc hope data load tmpbv alreadi cach case refer tmpbv hit cach contrast valu pepa new tmpbv refer miss henc self correl captur stream hit stream miss theori controlflow correl could also achiev good predict observ whether copi occur parent nodeunfortun profil tool record enough state across mani controlflow chang subdiv bintre prim box2 know decis made parent node element prim box2pepa f comput ovlap chang pepaj ovlap 1 f return npepa void subdiv bintreebtnod btn f btn1 btn2 btn children prim box2btnp prim box2btnp void creat bintreebtnod root f f subdiv bintreeroot creat bintreerootbtn0 creat bintreerootbtn1 figur 17 pseudo code drawn raytrac tree tsptree tint sz f tsize sz return conquert return mergeleftv rightval static tree conquertre f l ldonext f figur code drawn tsp procedur makelisttre sling list consist node similar raytrac tsp also travers binari tree recurs data read current node read descend illustr figur 18 procedur tsp recurs travers tree call conquert size greater sz procedur conquert use makelistt sling everi node list travers loop therefor sinc descend brought cach whenev conquert call subsequ recurs tleft tright within tsp result mani cach hit henc ldata refer either mainli hit mainli miss given node self correl captur pattern effect controlflow correl also quit effect observ number time conquer call given recurs descentmost miss occur first time invok 515 voronoi compress controlflow correl offer best predict accuraci applic miss voronoi caus load bnext splice call three differ place merg illustr figur 20a splice call call site 1 bnext hit sinc ldinext load data cach prior call splice call two call site bnext like miss henc controlflow correl distinguish behavior differ call site accur self correl less effect sinc bnext regular cach outcom pattern compress see figur 19 perform result roughli half miss caus hash total correlationprofil ref summary4 0 10 20 30 40 50 60 70 80 90 100 miss ratio controlflow global self miss ratio distribut correlationprofil load references005015025035 cpl summari global self controlflow cpi summari global self controlflow ideal b cpl due correlationprofil load c overal cp figur 19 detail perform result compress tabl access htabofi procedur compress see figur 20b index hash tabl htab function combin prefix code ent new charact c combin seen hash probe test htabi fcode trueif seen recent load htabi like hit cach sinc input file use provid spec gener frequenc distribut common english text string appear often other expect condit htabi fcode true quit frequent mani common string enter htab last test htabi fcode fals probabl next one true high also impli next refer htabi like hit therefor controlflow correl make accur predict examin last sever outcom branch 516 espresso vortex m88ksim go four applic correl profil mainli improv cach outcom predict array refer espresso see figur 21 detail perform result mani load miss due array refer written pointer form variabl stride figur 22a show one exampl insid loop p increment bbwsize whose valu depend call chain setup bb cc rang 4 24 byte differ valu result differ degre spatial local captur self correl henc global correl controlflow correl also make enhanc predict exploit callchain inform vortex m88ksim go mani load miss caus array refer locat insid procedur array indic pass procedur paramet see figur 22b exampl drawn vortex procedur multipl call site cach outcom array refer mainli callsit depend explain controlflow correl offer highest cach outcom predict accuraci three benchmark vortex array index paramet valu given call close even ident time valu pass differ call site quit differ consequ refer made call site enjoy tempor andor spatial edg pair merg f call site 1 derefer ldj call site 2 derefer ldk call site 3 splicequad edg quad edg b f htabi fcode f els f store fcode htab code fragment voronoi b code fragment compress figur 20 pseudo code drawn voronoi b compress local made differ call site sinc procedur usual invok multipl time call site invok anoth call site result stream pattern miss follow sever hitshenc self correl also perform well vortex captur cach outcom pattern 52 lesson learn case studi although global correl make excel predict case correl behavior across differ load instruct eg eqntott case essenti assimil self correl perform quit well sinc record less histori given load self correl often success sinc recogn form spatial local recogniz compil time eg li perimet bisort mst also long run either hit miss eg eqntott mst tsp raytrac often find four previou cach outcom per refer suffici achiev good predict self correl captur call chain inform controlflow correl distinguish behavior base call site eg eqntott espresso vortex m88ksim go mst voronoi depth recurs travers tree eg perimet bisort tsp roughli half applic enjoy signific improv controlflow self correl mani case observ load refer success predict form correl good news sinc controlflow correl profil easiest case exploit practic use procedur clone 5 distinguish callchain depend behavior 6 appli correl profil prefetch demonstr practic correl profil use summari correl profil guid manual insert prefetch instruct three applic eqntott tsp raytrac case correl profil use procedur clone 5 isol differ dynam instanc static refer adapt prefetch strategi accordingli respect call site assum v decid whether insert prefetch 3 perform fullydetail simul processor similar mip r10000 8 detail memori hierarchi shown figur 23a 3 assum averag prefetch overhead v two cycl averag miss latenc l 20 cycl total correlationprofil ref summary26 miss ratio controlflow global self miss ratio distribut correlationprofil load references002006010140 cpl summari controlflow global self ideal cpi summari controlflow global self ideal b cpl due correlationprofil load c overal cp figur 21 detail perform result espresso void setup bb ccpcover bb pcover ccf lastpbbcountbbws boolean chkgetchunknumtyp chunknum f code fragment espresso b code fragment vortex figur 22 pseudo code drawn espresso b vortex figur 23b show result execut time normal case without prefetch applic summaryprofil direct prefetch actual hurt perform due overhead unnecessari prefetch contrast correl profil provid measur perform improv isol dynam hit miss effect therebi achiev similar benefit significantli less overhead would also like point number repres limit correl achiev exampl 8kb primari data cach correl profil offer 10 speedup summari profil case eqntott 7 relat work abraham et al 2 investig use summari profil associ singl latenc toler strategi ie either attempt toler latenc profil load use approach reduc memori paramet mip r10000 simul primari instr data cach 32kb 2way setassoc unifi secondari cach 2mb 2way setassoc line size 32b primarytosecondari 12 cycl miss latenc primarytomemori miss latenc data cach miss 8 handler mshr data cach bank 2 data cach fill time 4 cycl requir exclus access main memori bandwidth 1 access per 20 cycl normal exec time load stall113 eqntott tsp raytrac store stall inst stall busi memori paramet b execut time figur 23 impact correl profil prefetch perform prefetch prefetch direct summari profil prefetch direct correl profil cach miss ratio nine spec89 benchmark includ integ floatingpoint program followup studi 1 also report improv effect cach miss ratio contrast earlier work studi focus correl profil novel techniqu provid superior predict accuraci rel summari profil ammon et al3 use path profil techniqu observ larg fraction primari data cach miss spec95 benchmark occur along rel small number frequent execut path three form correl explor studi controlflow self global inspir earlier work use correl enhanc branch predict accuraci 4 10 15 16 branch outcom cach access outcom quit differ interest observ correlationbas predict work well case conclus achiev full potenti softwarebas latenc toler techniqu propos correl profil techniqu isol dynam instanc static memori refer like suffer cach miss evalu potenti perform benefit three differ form correl profil wide varieti nonnumer applic experi demonstr correl profil techniqu alway outperform summari profil increas degre bia miss ratio distribut improv predict accuraci translat signific reduct memori stall time roughli half applic studi detail case studi individu applic show self correl work well cach outcom pattern individu refer often repeat predict way controlflow correl work mainli mani cach outcom callchain depend although global correl offer superior perform case part mainli assimil self correl final observ correl profil offer superior perform summari profil prefetch superscalar processor believ promis result may lead innov optim memori perform nonnumer applic appendix deriv stall cycl per load cpl five latencytoler scheme denot cpl particular toler scheme cpl let cpl cpl load program f fraction refer made load total refer load theta f 1 let l cycl stall upon load miss v overhead appli latencytoler techniqu load refer miss ratio load overal miss ratio load load refer stall cach miss fulli toler latenc load refer alway incur overhead cpl singl action per load miss ratio decid whether appli load singl action per load ae l ie appli otherwis ie appli 4 cpl singl action per load singl action per load theta f singl action per load theta f set load miss ratio v l na set load miss ratio v l cpl multipl action per load appli refer load belong context miss l formula cpl multipl action per load simpli obtain ad extra level equat 5 captur notion context within load multipl action per load set context load miss ratio v set context load miss ratio v miss ratio context j load f ij fraction refer load context j cpl multipl action per load obtain substitut multipl action per load equat 1 loadmiss latenc fulli toler overhead incur miss refer r predict load latenc use cach profil predict loadstor instruct latenc exploit hardwar perform counter flow context sensit profil branch classif new mechan improv branch predictor perform methodolog procedur clone inform memori oper provid memori perform feedback modern processor mip technolog inc design evalu compil algorithm prefetch improv accuraci dynam branch predict use branch correl support dynam data structur distribut memori machin softwar support specul load trace pixi splash2 program character methodolog consider comparison dynam branch predictor use two level branch histori improv accuraci static branch predict use branch correl tr softwar support specul load design evalu compil algorithm prefetch improv accuraci dynam branch predict use branch correl comparison dynam branch predictor use two level branch histori branch classif improv accuraci static branch predict use branch correl support dynam data structur distributedmemori machin splash2 program inform memori oper predict loadstor instruct latenc exploit hardwar perform counter flow context sensit profil ctr aleksandar milenkov achiev high perform busbas sharedmemori multiprocessor ieee concurr v8 n3 p3644 juli 2000 craig zill gurindar sohi executionbas predict use specul slice acm sigarch comput architectur news v29 n2 p213 may 2001 k tan k raghunathan g lakishminarayana n k jha highlevel softwar energi macromodel proceed 38th confer design autom p605610 june 2001 la vega nevada unit state young michael smith better global schedul use path profil proceed 31st annual acmiee intern symposium microarchitectur p115123 novemb 1998 dalla texa unit state jeffrey dean jame e hick carl waldspurg william e weihl georg chryso profilem craig b zill gurindar sohi understand backward slice perform degrad instruct acm sigarch comput architectur news v28 n2 p172181 may 2000 adi yoaz mattan erez ronni ronen stephan jourdan specul techniqu improv load relat instruct schedul acm sigarch comput architectur news v27 n2 p4253 may 1999 chihung chi junli yuan chinm cheung cyclic depend base data refer predict proceed 13th intern confer supercomput p127134 june 2025 1999 rhode greec abhinav da jiwei lu howard chen jinpyo kim penchung yew weichung hsu dongyuan chen perform runtim optim blast proceed intern symposium code gener optim p8696 march 2023 2005 young michael smith static correl branch predict acm transact program languag system topla v21 n5 p10281075 sept 1999 martin burtscher amer diwan matthia hauswirth static load classif improv valu predict datacach miss acm sigplan notic v37 n5 may 2002 jaydeep marath frank mueller tushar mohan broni r de supinski salli mckee andi yoo metric track ineffici memori hierarchi via binari rewrit proceed intern symposium code gener optim feedbackdirect runtim optim march 2326 2003 san francisco california chikeung luk toler memori latenc softwarecontrol preexecut simultan multithread processor acm sigarch comput architectur news v29 n2 p4051 may 2001 tor aamodt paul chow optim data prefetch helper thread pathexpress base statist model proceed 21st annual intern confer supercomput june 1721 2007 seattl washington jiwei lu howard chen rao fu weichung hsu bobbi othmer penchung yew dongyuan chen perform runtim data cach prefetch dynam optim system proceed 36th annual ieeeacm intern symposium microarchitectur p180 decemb 0305 chikeung luk robert muth harish patil richard weiss p geoffrey lowney robert cohn profileguid postlink stride prefetch proceed 16th intern confer supercomput june 2226 2002 new york new york usa jaydeep marath frank mueller tushar mohan salli mckee broni r de supinski andi yoo metric memori trace via dynam binari rewrit identifi cach ineffici acm transact program languag system topla v29 n2 p12e april 2007 character memori behavior java workload structur view opportun optim acm sigmetr perform evalu review v29 n1 p194205 june 2001 mark horowitz margaret martonosi todd c mowri michael smith inform memori oper memori perform feedback mechan applic acm transact comput system toc v16 n2 p170205 may 1998