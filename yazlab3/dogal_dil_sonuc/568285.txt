decid edt0l structur equival show tree pushdown automaton verifi arbitrari nondeterminist construct structur tree correspond valid deriv given edt0l grammar way reduc structur equival problem edt0l grammar decid empti tree languag recogn tree pushdown automaton ie empti problem contextfre tree languag thu establish structur equival edt0l grammar decid effect result contrast known undecid result et0l structur equival b introduct contextfre type grammar g 1 g 2 said structur equival correspond syntax tree g 1 produc termin word grammar g 2 syntax tree structur vice versa structur syntax tree leaflabel tree obtain remov nontermin label intern node import notion structur equival contextfre grammar due fact decid effect 12 14 18 wherea languag equival undecid work support natur scienc engin research council canada grant ogp0041630 ogp0147224 depart comput inform scienc queen univers kingston ontario k7l 3n6 canada email ksalomaacsqueensuca z depart comput scienc univers western ontario london ontario n6a 5b7 canada email syucsduwoca structur equival remain decid also parallel contextfre e0l grammar 15 16 17 25 surprisingli shown 23 parallel deriv control finit set tabl et0l grammar structur equival undecid even decid whether e0l grammar et0l grammar two tabl structur equival show structur equival becom decid tabl grammar restrict homomorph edt0l grammar thu structur equival problem cross borderlin undecid decid restrict tabl grammar homomorph proof use automata theoret method differ consider automata theoret decid proof e0l structur equival 25 et0l strong structur equival 10 e0l structur tree well et0l structur tree augment inform controlsequ use recogn determinist bottomup use tree automaton model equival decid appear possibl edt0l structur tree sinc arbitrari choic sequenc tabl make deriv inher nondeterminist reduc edt0l structur equival empti problem tree pushdown automata guessarian 8 automata recogn exactli contextfre tree languag empti decid algorithm show given edt0l grammar g 1 g 2 tree pushdown automaton verifi nondeterminist guess structur tree g 1 correspond valid deriv g 2 decid proof reli strongli nondetermin actual algorithm follow proof requir multipl exponenti time seen easili edt0l structur equival pspacehard one expect find effici algorithm shown 24 e0l structur equival hard determinist exponenti time edt0l case obtain exponenti time lower bound preliminari assum reader familiar basic formal languag theori 29 briefli recal definit concern parallel contextfre type grammar tree automata inform regard parallel grammar interest reader ask consult 21 regard tree automata refer reader 5 6 cardin finit set denot power set sometim identifi singleton set fag set posit nonneg integ denot respect 0 set nonempti finit word denot empti word length w 2 jwj let finit set defin map pi 1 set tree domain 6 nonempti finit subset satisfi follow two condit u 2 everi prefix u ii everi u 2 exist rank u 2 0 ui 2 0 node u successor alabel tree map domt gamma domt tree domain node u 2 domt said label tu 2 node v successor respect immedi successor assum notion height root leaf intern node subtre tree known height denot hgt use convent height onenod tree zero subtre node u tu level node u 2 domt mean distanc u root ie juj clearli maxim level node hgt tree said balanc leaf node level set level k subtre sub k 0 k hgt defin note sub k set tree oppos set occurr subtre thu sub k contain one copi tree 0 occur subtre defin level k node also ftg decid proof use topdown tree pushdown automaton model guessarian 8 give brief inform descript model suffici purpos interest reader find formal algebra definit 6 8 tree pushdown automaton extens finit tree automaton copi finitest control access auxiliari pushdown store automaton begin comput root input tree given initi state q 0 initi symbol pushdown store state q node u label b input tree z topmost stack symbol depend tupl q b z either chang intern state pop z stack ii chang state push symbol stack iii go immedi successor node u state q send node copi pushdown stack node u assum rank automaton accept input tree nondeterminist reach leav accept state tree languag recogn denot gener automata 8 employ tree structur stack automaton model describ call restrict tree pushdown automaton 8 restrict gener tree pushdown automata recogn exactli famili contextfre tree languag 3 4 6 20 given contextfre tree languag term tree pushdown automaton contextfre tree grammar effect construct index grammar gener yield sinc empti decid index grammar 1 2 follow result proposit 21 decid effect whether tree languag recogn given tree pushdown automaton empti 3 structur equival recal invent notat concern parallel contextfre grammar 21 structur tree deriv 23 24 et0l grammar g tupl 1 v finit alphabet nontermin sigma finit alphabet termin initi nontermin h finit set tabl tabl h 2 h finit set rewrit rule allow rewrit termin grammar g edt0l determinist et0l grammar everi tabl h 2 h contain exactli one rule left side nontermin 2 v thu h morphism v gamma v sigma ha denot right side rule h nontermin left side grammar g e0l contain one tabl grammar said propag right side product empti word ie h 2 h paper deal mainli structur tree edt0l deriv defin structur tree arbitrari et0l grammar sinc definit essenti simpler determinist case remaind section g alway et0l grammar 1 let fg denot set v sigma tree new symbol use label node correspond empti word defin parallel deriv relat g par union relat par defin follow let obtain 1 follow assum 1 leav note leaf 1 label termin deriv continu 1 choos rule 2 2 node u k successor label respect symbol 1 2 node u one successor label symbol 1 u leaf 2 denot 0 singleton tree node label initi nontermin 0 set syntax tree sg g defin syntax tree 2 sg termin leav label element sigma set termin syntax tree g denot tsg case g edt0l grammar rule 2 determin uniqu tabl h call word alphabet h controlsequ given edt0l grammar g controlsequ g syntax tree obtain initi nontermin appli sequenc tabl specifi thu g uniqu tree tree 3 exist otherwis g undefin g propag everi syntax tree g path root leaf length ie balanc nonpropag grammar path root leaf label element v sigma length note definit allow rewrit termin symbol ie assum grammar synchron 21 restrict sinc arbitrari edt0l grammar easili transform synchron edt0l grammar way transform preserv structur equival grammar transform e0l grammar explain 15 obtain caten natur lefttoright order leav label leav yield syntax tree defin morphism defin set e e syntax tree yieldt sententi form gener g deriv correspond languag lg gener g consist termin word gener g ie clearli definit equival standard definit languag gener edt0l grammar 21 structur syntax tree 2 sg strt tree obtain relabel intern node oe oe new symbol v sigma denot element stsg call termin structur tree g g known sometim speak simpli sigmastructur tree sinc leav label element sigma note rule g determin maxim number immedi successor node structur tree g thu cours alphabet sigma determin set sigmastructur tree grammar g 1 g 2 said languag equival lg 1 well known languag equival undecid alreadi contextfre grammar shall consid follow two restrict notion equival let g 1 g 2 et0l grammar grammar g 1 g 2 ffl structur equival stsg 1 ffl syntax equival equal modulo renam nontermin note syntax equival impli structur equival structur equival grammar turn alway languag equival syntax equival incompar notion strong structur equival 10 et0l grammar syntax structur equival decid contextfre e0l grammar 7 12 14 15 18 25 formal defin notion sequenti contextfre grammar definit analog parallel case syntax equival strong structur equival decid also et0l grammar et0l structur equival undecid 10 23 consid structur equival problem determinist et0l grammar 4 main result show edt0l structur equival decid effect first introduc notat concern width tree intuit structur tree said width distinct subtre level definit 41 set sigmastructur tree said subtreewidth 2 distinct subtre level k ie definit note sub k j set sigma foeglabel tree ie element consist occurr subtre j note also subtreewidth need minim number distinct subtre given level ie width 0 0 code structur arbitrari deriv edt0l grammar g 1 string use string encod stack tree pushdown automaton verifi one comput controlsequ anoth grammar g 2 gener structur tree construct reli essenti fact failur edt0l deriv respect given control sequenc check follow one nondeterminist chosen path tree lemma 41 let edt0l grammar exist 2 everi controlsequ 2 h structur tree strg width proof sinc tabl h homomorph follow alway node domg length label nontermin gu choos strg width 2 structur tree constant subtreewidth code string ith symbol left code inform level subtre direct descend level node ith symbol also code order occurr level subtre number distinct level subtre bound constant furthermor need consid constant number level node correspond pairwis differ subtre defin describ code structur tree subtreewidth prove regular properti code lemma 43 propag edt0l grammar restrict propag grammar done avoid unnecessarili complic notat afterward explain result straightforwardli extend grammar allow eras product definit 42 let propag edt0l grammar let 2 defin setomegagamma consist tupl map j everi element occur tupl j set final f defin consist tupl map note sigma j set order jtupl element sigma set string length j sequenc w omegagamma said wellform consid stupl structur tree denot structur tree level one subtre left right standard algebra notat tree allow symbol oe variabl ariti correspond wellform sequenc w 7 defin induct 11 tupl sigmastructur tree xiw say wellform sequenc w repres xiw first final repres 1 tupl structur tree induct definit denot w 0 suffix w obtain delet first symbol assum note sinc w wellform denot 1 exampl 41 let tree given figur 1 choos c c c c c c c c b b b b oe oe oe oe oe oe oe figur 1 follow lemma prove use induct maxim height tree lemma 42 let 2 fix let set sigmastructur tree subtreewidth max 1im exist wellform sequenc w 2 omegagamma 7 furthermor i1 cardin set level word w 2 omegagamma omega f said simpl first symbol w form 1 w simpl wellform xiw onetupl sigmastructur tree practic identifi xiw immedi consequ lemma 42 corollari 41 everi sigmastructur tree subtreewidth exist simpl wellform sequenc w 2 omegagamma omega f xiw follow lemma state given simpl wellform sequenc w 2 omegagamma omega f controlsequ edt0l grammar g finit automaton determin whether lemma 43 let propag edt0l grammar 2 let alphabet andomega f definit 42 denot l set word 2 omega f simpl wellform denot map pi simpli pi 2 claim l regular languag proof condit easili verifi finit automaton henc suffici show given 2 satisfi finit automaton verifi whether ii hold note hold xipi 1 necessarili defin may denot order tupl tree set state initi state fs 0 g assum state u read input symbol goe reject state rej construct follow possibl condit hold assum goe accept state acc also goe accept state acc x 2 u read rest input verifi hold remain possibl x 2 u form case read symbol goe state z set z construct follow x 2 u follow add element set z j set z nonempti satisfi condit 5 intuit u consist element v deriv g follow morphism read far second compon input reach node correspond ith subtre repres say kth level xipi 1 thu condit 8 hold deriv reach level k node u xipi 1 symbol 2 v number immedi successor u equal jhaj condit contain termin symbol thu deriv use next tabl h structur xipi 1 condit ii hold case condit 8 9 hold correspond situat parallel deriv step determin h level k immedi violat structur tree set z construct consist respect nontermin appear 2 subtre repres follow level remain defin oper reach final symbol h state u follow idea done accept exactli deriv step h produc leaf repres b 2 sigma wrong termin symbol nontermin possibl correspond situat hold need consid possibl deriv step h produc correct termin symbol leav mean ii hold reject hand enter accept state x 2 u lemma 43 formul prove propag grammar howev exactli proof work also gener edt0l grammar possibl eras product add one subtre repres level structur tree modifi definit 42 symbol 4 partial function undefin repres node immedi successor case defin new symbol belong g proof lemma 43 simpli modifi divid condit 8 9 case depend whether defin thu prove follow lemma 44 statement lemma 43 hold without assumpt g propag show tree pushdown automaton singl comput verifi whether possibl deriv given edt0l grammar violat given structur tree constant width lemma 45 let g edt0l grammar let constant guarante g 1 lemma 41 effect construct tree pushdown automaton exist width proof denot k tree pushdown automaton receiv input tree intern node exactli k immedi successor intern node label symbol 0 set stack symbol omegagamma assum automaton accept balanc kari input tree begin comput nondeterminist push stack word ff top stack left intuit stack content guess omega f simpl wellform satisfi follow properti denot 11 corollari 41 exist w satisfi 12 read input symbol alway pop topmost stack symbol remain stack content forward k successor node initi nondeterminist guess push symbol stack state consist two compon oper parallel first compon verifi condit 12 hold proof lemma 44 see done use finitest memori first compon oper ident path input tree ignor input symbol treat initi stack content input path leaf input 1 second compon verifi proof lemma 44 follow possibl use finitest control second compon ignor second compon h stack symbol henc differ path input verifi xiw structur syntax tree controlsequ 0 length verifi xiw 62 stsg 2 hand branch comput consum entir stack accept input tree necessarili balanc thu accept input tree exist tree 10 hold subtreewidth 2 note proof lemma 45 essenti guess instanc 2 stsg 1 pushdown stack string encod although gener tree pushdown automaton model 8 allow fact tree also stack shown tree pushdown automaton nondeterminist push balanc tree arbitrari height stack 22 one could directli store arbitrari 2 stsg 1 tree stack begin comput furthermor simul deriv g 2 given differ controlsequ directli tree would follow problem path lead failur deriv g 2 may branch earlier correspond controlsequ branch input tree specif tree pushdown automaton find controlsequ g 2 least one path lead failur controlsequ correspond differ path input gener possibl two controlsequ long common prefix wherea correspond path branch alreadi root situat like caus problem string encod xiw pushdown stack simul path input distinct subderiv g 2 within structur combin lemma 41 45 proposit 21 prove follow result note constant lemma 41 independ controlsequ chosen theorem 41 given edt0l grammar g 1 g 2 decid effect whether exactli proof lemma 45 given edt0l grammar g 1 g 2 nonempti reduc decid whether tree pushdown automaton recogn nonempti tree languag sinc number nontermin g 1 g 2 finit new proof decid syntax equival result follow also 23 theorem 42 syntax equival decid edt0l grammar 2 5 discuss open problem decid result syntax equival structur equival strong structur equival edt0l grammar summar tabl 1 tabl stand decid u undecid decid strong structur equival et0l grammar prove 10 e0l grammar notion coincid structur equival languag equival natur undecid case note e0l edt0l languag famili incompar syntax equiv structur equiv strong struct equiv e0l edt0l et0l u tabl 1 decid syntax strong structur equival proof theorem 41 give multipl exponenti time algorithm edt0l structur equival know exact complex problem determinist exponenti time hard result obtain 24 e0l structur equival use least directli prove similar lower bound complex edt0l structur equiva lenc hand expect obtain effici algorithm edt0l case sinc known alreadi structur equival problem linear grammar pspacecomplet 9 structur equival linear grammar easili logspac reduc edt0l structur equival note sententi form one nontermin constant number occurr nontermin edt0l grammar simul contextfre deriv simpli differ tabl rule intuit decid proof previou section reli follow two properti edt0l deriv current nontermin remain controlsequ determin uniqu subderiv ii controlsequ gener structur tree one level time properti enabl us produc string encod w structur tree failur possibl controlsequ produc structur verifi finit automaton read w controlsequ parallel necess condit ii illustr consid indian parallel grammar ip grammar contextfre grammar deriv relat defin deriv step one rewrit occurr one nondeterminist chosen nontermin b given sententi form use rule left side b nontermin rewritten formal definit reader may consult 2 19 26 27 well known languag gener ip grammar strictli includ edt0l languag sequenc rule use deriv ip grammar view control sequenc ip grammar clearli properti howev differ sequenc rule gener distinct part given structur tree complet differ order analog condit ii seem hold ip grammar thu spite fact edt0l grammar strictli power ip grammar term famili gener languag appear possibl use proof method previou section decid structur equival problem ip grammar conjectur ip structur equival decid e0lip grammar 11 structur equival shown decid exactli proof theorem 41 e0lip grammar combin indian parallel e0l rewrit mechan deriv step occurr everi nontermin rewritten use rule russian parallel rp grammar 2 13 28 extend ip grammar allow also sequenti contextfre deriv step decid rp structur equival problem remain open r extens contextfre case regul rewrit formal languag theori io oi grammar macrolik product tree automata akademiai kiado handbook formal languag system sci pushdown tree automata strong equival et0l grammar studi parallel rewrit system character parenthesi languag grammar global product russian normal form structur equival e0l grammar defin famili tree e0l grammar simplif e0l grammar classif indian parallel languag map grammar tree mathemat theori l system academ press determinist tree pushdown automata monad tree rewrit system complex e0l structur equival decid structur equival e0l grammar parallel contextfre languag parallel contextfre languag decomposit theorem variou kind languag parallel natur theori comput john wiley tr determinist tree pushdown automata monad tree rewrit system classif indian parallel languag decid structur equival eol grammar defin famili tree e0l grammar tree languag parenthesi grammar theori comput regul rewrit formal languag theori mathemat theori l system structur equival et0l grammar extend abstract