test input gener java pathfind show model check symbol execut use gener test input achiev structur coverag code manipul complex data structur focu obtain branchcoverag unit test core method redblack tree implement java treemap librari use java pathfind model checker three differ test gener techniqu introduc compar name straight model check code model check use blackbox fashion gener input fix size lastli model check use whitebox test input gener main contribut work show effici whitebox test input gener done code manipul complex data take account complex method precondit b evalu approach gener test redblack tree 16 implement java treemap li brari contribut work power exibl test input gener framework unit test framework use ecient approach symbol execut code manipul complex data structur take account precondit stop analysi infeas path soon possibl framework use uniformli whitebox blackbox test show framework use gener test code manipul complex data structur specic redblack tree illustr exibl model check tool test input creation compar straight model check code test blackbox approach whitebox approach 2 background describ java pathfind jpf model checker 43 extend symbol execut ca x x pc true x x pc xy x x pc xy x xy pc xyint x 1if 2 3 4 5 x x xy x pc xy x x pc xy x x x x figur 1 code swap two integ correspond execut tree transit label program control point pabil show section 4 use extens jpf whitebox blackbox test input gener 21 java pathfind jpf explicitst model checker java program built top custommad java virtual machin jvm jpf handl languag featur java also treat nondeterminist choic express annot program analyz annot ad program method call special class verifi follow method verifi class use paper randombool return boolean valu nondeterminist randomn return valu 0 n nondeterminist ignoreifcond forc model checker backtrack cond evalu true jpf previous use nd error number complex system includ realtim oper system deo honeywel 39 prototyp mar rover develop nasa ame call k9 11 recent also use mean gener input plan current k9 rover take input 5 plan gener blackbox fashion similar techniqu describ section 42 22 symbol execut java pathfind section give background symbol execut present symbol execut framework use reason java program 221 background symbol execut main idea behind symbol execut 31 use valu instead actual data input valu repres valu program variabl symbol ex pression result output comput program express function symbol input state symbol execut program includ symbol valu program variabl path condit pc program counter path condit quantier symbol input accumul constraint input must satisfi order execut follow particular associ path program counter dene next statement execut symbol execut tree character execut path follow symbol execut program node repres program state arc repres transit state consid code fragment figur 1 swap valu integ variabl x x greater figur also show correspond symbol execut tree initi pc true x symbol valu x respect branch point pc updat assumpt input order choos altern path exampl execut rst statement els altern statement possibl pc updat accordingli path condit becom fals ie set input satisfi mean symbol state reachabl symbol execut continu path exampl statement 6 unreach 222 gener symbol execut 30 describ algorithm gener tradit symbol execut support advanc construct modern program languag java c algorithm handl dynam alloc structur primit data concurr sinc extend work 30 ad support symbol execut array algorithm start execut method input uniniti eld use lazi initi assign valu eld ie initi eld rst access method symbol execut allow symbol execut method without requir priori bound number input object execut access uniniti refer eld algorithm nondeterminist initi eld null refer new object uniniti eld refer object creat prior eld initi systemat treat alias execut access uniniti primit string eld algorithm rst initi eld new symbol valu appropri type execut proce branch condit primit eld eval uat algorithm nondeterminist add condit negat correspond path condit check path condit satis use decis procedur path condit becom infeas current execut termin ie algorithm back track 223 framework symbol execut framework built top jpf model checker enabl jpf perform symbol execut lazi initi origin program instrument sourc sourc translat add nondetermin support manipul formula repres path conditions1 1the interest reader refer 30 detail descript code instrument class node int elem node next precondit acycl void foo 1 elem telem 2 figur 2 simpl exampl illustr gener execut model checker check instrument program use usual state space explor techniqu essenti model checker explor symbol execut tree program state includ heap congur path condit primit eld thread schedul whenev path condit updat check satis use appropri decis procedur omega librari 40 linear integ constraint path condit unsatis model checker backtrack framework use test input gener nding counterexampl safeti properti test input gener model checker gener path wit test criterion encod set properti everi report path model checker also report input heap congur encod constraint refer eld path condit primit input eld thread schedul use reproduc error note perform forward symbol execut program loop explor innit execut tree systemat state space explor framework use depth rst search iter deepen breadth rst search although concentr paper analysi sequenti code worth mention symbol execut framework handl concurr use model checker systemat analyz thread inter leav use model checker search engin framework allow us also exploit builtin capabl model checker backtrack dierent search capabl eg heurist search techniqu combat stateexplos eg partial order symmetri reduct also note although consid branch coverag metric test framework handl test criteria encod properti model checker check eg dataow base coverag 224 illustr illustr gener symbol execut simpl exampl see figur 2 class node implement singlylink list eld elem next repres respect node integ valu refer next node figur 3 give part correspond code instrument symbol execut concret type replac symbol type librari class pro vide concret oper method call implement equival oper symbol type class express support manipul symbol integ class node express elem node next boolean nextisiniti fals boolean elemisiniti fals static vector static vaddnul node newnod int return nodevelementati return n node getnext ifnextisiniti verifyignoreifpreconditioneg acycl return next void foo 1 ifgetelemgttgetelem 2 setnexttgetnext figur 3 instrument code input structur next next pc true1 next next pc e0e1 pce0e1 next next next next next next next next next next next figur 4 symbol execut tree excerpt field read updat replac get set method get method implement lazi initi eld origin class declar boolean eld ie next initi elem initi ad eld set true get set method vector v store input object creat result lazi initi helper method new node call get node use element vector v systemat initi input refer eld accord dierent alias possibl figur 4 illustr path gener symbol execut code method foo given input structur node execut tree denot symbol state branch tree correspond nondeterminist choic introduc build path condit handl alias edg label number refer program statement without number lazi initi step valu elem eld indic eld initi cloud indic next eld initi null node repres structur repres constraint refer eld eg input structur figur 4 repres cyclic acycl list least two node point second node explain later section 43 method precondit use lazi initi input structur violat precondit model checker backtrack ie call method verifyignoreif figur 3 exampl consid precondit input list acycl algorithm explor transit mark x figur 4 3 case studi redblack tree use input gener techniqu test varieti program includ method class javautil packag program manipul complex data structur particular illustr techniqu java implement redblack tree given javautiltreemap standard java librari version 13 redblack tree 16 binari search tree one extra bit inform per node color either red black restrict way node color path root leaf redblack tree ensur tree balanc ie guarante basic dynam set oper redblack tree take olog n time worst case binari search tree redblack tree 1 everi node either red black 2 root black 3 node red children black 4 everi simpl path root node descend leaf contain number black node four redblack properti express java use four properti togeth basic properti binari search tree dene repok method ie java predic check represent invari class invari correspond data structur case repok check input redblack tree figur 5 give part javautiltreemap declar figur 6 give fragment code repok repres third redblack tree properti red node black children gener redblack tree particularli interest framework due complex structur ie primit eld back pointer etc next section present dierent techniqu use gener test input implement redblack tree javautiltreemap illustr test input gener sever helper method put remov method class javautiltreemap respons ad delet node correspond public class treemap entri root static final boolean static final boolean static class entri implement mapentri object object valu entri left entri right entri parent boolean precondit repokroot public object removeobject key public object addobject key figur 5 declar javautiltreemap boolean repokentri e redhasonlyblackchildren worklistisempti entri currententryworklistremovefirst entri cl currentleft entri cr currentright ifcurrentcolor red ifcl null clcolor red return fals ifcr null crcolor red cl null cr null return true figur given key tree note delet complex oper among standard oper redblack tree involv rotat togeth auxiliari method addit togeth delet javautiltreemap 300 line java code implicit precondit put remov method requir input satisfi class invari ie repok input must redblack tree 4 test input gener section illustr three applic model check test input gener softwar manipul complex data structur focu implement put remov method redblack tree java treemap librari test criterion use sourc code level branchcoverag sinc want compar blackbox whitebox approach test input gen erat mention section 223 framework also handl kind test criteria aim gener set nonisomorph test meet desir coverag criteria isomorph among test dene isomorph among graph heap java program view edgelabel node ident permut primit valu 10 note java semant allow object alloc dictat exact object ident impli initi test input concret represent level set eld valu abstract level use sequenc method invoc say regress test gener ident structur gener isomorph structur first show model checker use test execut sequenc method call data structur interfac secondli show use execut framework build nonisomorph input tree given small size use blackbox test method done symbol execut java code method precondit case code repok lastli show framework use whitebox test input gener conserv precondit use lazi initi stop analysi infeas path also show input constraint comput symbol execut solv provid input actual test 41 model check test model check clear distinct system analyz environ system ie input system take whenev environ underapproxim less behavior consid present actual environ model check model check becom form test note often case model check softwar sinc environ usual larg consid connect one therefor use model checker gener input analyz code input illustr idea show one test java treemap librari analyz sequenc put remov call set maxim n element use jpf model checker figur 7 note exampl interest coverag code rather correct henc use model checker default properti uncaught except import oracl gener approach allow gener oracl includ method postcondit express java predic 42 input gener blackbox test framework use automat gener java data structur descript method precon public static int public static treemap new treemap public static integ elem static elem new integern int new public static void mainstr arg true els figur 7 model check test dition note sequenti code gener symbol execut explor path nonisomorph put therefor gener nonisomorph input structur satisfi precondit appli gener symbol execut code precondit input structur use otheshelf constraint solver solv constraint path condit thu obtain test input test input use blackbox test method test drawback approach relationship input code coverag hand one would interest cover input specic rather code test blackbox method achiev full coverag input structur given bound order test put remov method automat gener nonisomorph input tree given small size java descript method precondit ie structur invari thu elimin need construct input use sequenc method call framework symbol execut repok gener input structur whenev repok return true put limit number gener object whenev size vector store object creat lazi initi see section 2 reach limit model checker backtrack result input structur satisfi repok size speci limit creat approach contrast brute forc ap proach one rst gener possibl tree given size accord class denit would appli repok select valid redblack tree approach scale better sinc gener tree demand lazi initi backtrack soon redblack tree properti violat thu prune larg portion search space import note actual structur repok crucial ecienc method repok would rst evalu tree end determin whether tree valid approach would equival gener tree prune 43 input gener whitebox test symbol execut framework use input gener white box test gener input meet given test criterion framework use symbol execut method test model check properti encod test criterion counterexampl properti repres path satisfi criterion everi path framework also report input structur path condit primit input valu togeth dene set constraint input satisfi order execut path2 particular characterist framework use method precondit two phase input gener elimin infeas structur conserv precondit deal partial initi structur use lazi initi see section 431 counterexampl found structur constraint path use input concret precondit one use section 42 solv constraint valid input see section 431 conserv precondit use precondit initi eld see figur 3 particular eld initi valu violat precondit notic evalu precondit structur still may uniniti eld therefor requir precondit conserv ie return fals initi eld structur violat constraint precondit consid analysi remov method redblack tree implement method precondit class invari redblack tree data structur ie repok java predic conserv version precondit use lazi initi illustr figur 8 boolean ag left initi right initi ad code instrument keep track uniniti input eld see section 224 code conserv repok ident repok except constraint encod repok evalu initi eld exampl assum three input tree illustr figur 9 creat analysi remov method lazi initi step round lled node repres entri color black empti node repres entri color red null node repres cloud denot uniniti eld intuit repres set node sinc lazili initi dierent node simplic present omit repres key valu eld figur 9 also show result evalu conserv repok tree structur rst tree violat repok matter concret valu cloud sinc red node red children case model checker backtrack consid structur second tree concret structur satis repok third tree repres concret tree may may satisfi repok conserv repok return true rather dont know analysi continu note lazi initi input eld framework relat materi summari node shape analysi 33 conserv precondit formul context abstract interpr tation would like explor connect 2our framework also report thread schedul informa tion case multithread code boolean conservativerepokentri e redhasonlyblackchildren worklistisempti entri currententryworklistremovefirst entri cl currentleft entri cr currentright currentcolor red currentleftisiniti cl null clcolor red return fals currentrightisiniti cr null crcolor red return fals currentleftisiniti cl null currentrightisiniti cr null return true figur 8 predic conserv repok fals true true dont know figur 9 evalu conserv repok 3 structur 432 handl destruct updat lazi initi algorithm build input structur need basi rst access symbol execut code analysi perform destruct updat structur input lost creat test input therefor need reconstruct input structur exampl consid structur leav symbol execut tree depict figur 4 result destruct updat structur longer contain inform input structur link rst two node order recov origin input structur keep map object uniniti eld object solut satisfi repok solut symbol input structur constraint 4 violat satisfi conservativerepok figur 10 concret symbol structur creat eld initi map use reconstruct input structur note whenev precondit need evalu lazi initi rst reconstruct input structur evalu precondit reconstruct input structur 433 solv constraint result symbol execut particular program path heap structur encod constraint refer eld path condit encod constraint primit data constraint dene input allow execut path order obtain actual test input solv constraint ie build actual java data structur use test framework solv constraint separ structur primit data rst convert symbol structur concret structur uniniti eld also satisfi method precondit method pre condit amount simpli set uniniti eld null otherwis symbol input structur satis conserv precondit use input code concret precondit symbol execut obtain concret structur way similar test input gener method describ section 42 constraint path condit solv use otheshelf constraint solver note concret symbol structur satis conserv precondit valid solut exampl given figur 10 5 experi mention measur branchcoverag method treemap class simplic consid 3 helper method deleteentri del fixafterdeletet xd fixafterinsert xi optimal3 branchcoverag achiev method 86 19 22 deleteentri 100 20 20 fixafterdelet 88 14 16 fixafterinsert note 100 statement coverag obtain 3 method uncov branch miss els branch option alway taken 3the rest branch shown infeas resourc coverag n time mem state del xd xi 28 3 24 23 730 68 5 75 6 memori tabl 1 model check test result obtain use jpf model checker version 311 22 ghz dual processor pentium 1 gb memori run window 2000 java 142 51 model check test result tabl 1 show coverag achiev three method model check code figur 7 dierent valu n number entri ad treemap coverag number gather use jpf facil calcul branchcoverag bytecod level execut simpl transform done obtain branchcoverag sourc code level note techniqu also use branchcoverag calcul rest section tabl also contain time taken second memori consum mb number state gener model check result indic approach scale well size 4 result give appear actual good fast low memori reason coverag exponenti explos becom appar size 5 size 6 handl entireti fixafterdelet 100 branchcoverag achiev fixafterdelet call deleteentri henc surpris larg jump coverag size 3 4 advantag model check approach obtain good path behavior coverag small input domain well system test fundament hard concurr system domain consid name sequenti program manipul complex data techniqu test could appropri rst pass nding error obtain good structur coverag one need sophist approach 52 blackbox tabl 2 show result blackbox structur coverag xed size n input tree gener symbol execut repok method use jpf input tree possibl node delet one new insert execut test code coverag measur also report total number tree creat struct specic size n parenthesi number tree size n given well mani structur consid candid lazi initi code within repok sinc memori consumpt minim less 10mb case shown report time taken gener tree time run test neglig note sinc structur gener given size result includ smaller structur well statist coverag struct candid time test del xd xi tabl 2 blackbox structur test statist coverag time mem test del xd xi tabl 3 whitebox test 1 minut tree requir achiev optim coverag code gener size 5 note tree size n creat analyz sequenc put remov oper section 51 subset tree size n allow repok believ due class invari repok permiss properti maintain sequenc putremov op erat inde say perform concern method may maintain properti stronger state class invari therebi disallow certain structur otherwis valid gener execut method sequenc 53 whitebox result whitebox analysi method treemap obtain set test input achiev optim branchcoverag three method given tabl 3 report time taken second memori usag mb number test run number test gener remov duplic parenthesi coverag obtain although mention input tree consid test input consist input tree well node putremov note dont parameter result size tree tabl 2 sinc goal cover branch achiev dierent size tree howev limit size tree look size 5 smaller expect coverag obtain optim mani duplic amongst input tree gener cover 53 branch code 11 uniqu input tree requir 11 tree made tree size 1 2 3 4 two tree size 5 8 possibl tree 54 discuss lazi initi repok use blackbox test input gener compar approach taken korat 10 korat gener input constraint given java predic use backtrack also monitor execut repok fulli initi input within priori given input size exampl use number candid structur two techniqu consid similar howev one also introduc integ valu structur approach consid lot fewer structur sinc use symbol execut togeth integ constraint solv wherea korat enumer integ eld fact whitebox approach 11 test input requir versu 84 obtain optim coverag blackbox approach illustr power use goaldirect whitebox approach blind blackbox approach test input gener obtain high coverag believ complic structur invari dierenc test input size black white box approach would even pronounc drawback current approach determin whether code unreach code contain cycl case redblack tree exampl consid consid techniqu automat invari gener 38 use shapepred abstract address problem inher drawback symbol execut strength decis procedur use check infeas path condit current deal linear integ constraint hope add power decis procedur near futur note experi dierent approach repres data structur eg could complet symbol repres partial initi java structur context work present use latter approach facilit evalu precondit written java predic 6 relat work 61 specicationbas test idea use constraint repres input date back least three decad 14 29 31 41 idea implement variou tool includ effigi 31 tegtgen 32 inka 24 prior work solv constraint primit data integ boolean solv constraint complex structur requir dierent constraint solv techniqu recent framework notabl testera 35 korat 1034 support nonisomorph gener complex structur redblack tree testera gener input constraint given alloy rstorder declar languag base relat testera use otheshelf sat solver solv constraint alreadi discuss korat section 54 korat algorithm recent includ asml test gener 20 enabl gener structur testera korat focu solv structur constraint directli solv constraint primit data instead systemat tri primit valu within given bound may ecient testera korat use blackbox test whitebox set earli paper goodenough gerhart 23 emphas import specicationbas test variou project autom test case gener specic z specic 18 uml statechart 37 adl specic 12 asml specic 25 specic typic involv structur complex input address objectori program doong frankl 19 use algebra specic gener test includ oracl object orient program astoot tool gener sequenc interfac event check whether result object observ equival speci algebra specic although interest gener test cover input structur blackbox code white box use algebra specic creat addit test check function requir code straightforward extens gargantini heitmey 21 use model checker gener test violat known properti specic given scr notat ammann black 3 4 combin model check mutat analysi gener test case specic rayadurgam et al use structur coverag base approach gener test case specic given rsmle use model checker 26 lee et al 28 dene framework use tempor logic specifi dataow test coverag 62 static analysi threevaluedlog analyz tvla 3342 rst static analysi system verifi preserv list structur program perform list revers via destruct updat input list tvla use analyz small program manipul doubli link list circular list well sort program recent tvla system extend also deal precondit shapegraph 44 pointer assert logic engin pale 36 verifi larg class data structur repres span tree back bone possibl addit pointer data structur includ doubli link list tree parent pointer thread tree static analysi program properti promis approach ensur program correct long run current static analysi techniqu verifi limit program properti exampl none techniqu verifi correct implement balanc tree redblack tree test hand gener verifi decid program properti realist larg implement bound input 63 softwar model check lot recent interest appli model check softwar 781517222743 work focus check event sequenc speci tempor logic api usag rule form nite state machin approach oer strong guarante program success check inputexecut would lead error howev typic consid link data structur consid reduc state space explor check data structur work show enabl otheshelf model checker check properti complex structur take account complex precondit algorithm implement straightforward fashion enabl model checker support dynam structur check structur properti recent two popular softwar model checker blast slam base predic abstract use whitebox test input gener 2 6 case goal gener test cover specic predic combin predic techniqu focu gener complex test input class invari redblack tree would also like handl complex precondit thank review detail comment allow us greatli improv paper 7 conclus 8 main contribut work show com plex precondit use allow ecient symbol execut code manipul complex data gener test input obtain high code coverag particular illustr use conserv precondit evalu structur ie structur fulli initi elimin structur lead valid concret input achiev state coverag conserv precondit seen abstract version concret precondit sinc disallow 3 valid structur might accept structur instanti concret structur fail concret precondit although creat conserv precondit hand would like investig 4 gener directli concret precondit use techniqu abstract interpret experi precondit class invari approach handl precondit express java predic 5 also show two approach use model check symbol execut test firstli tradit approach model check perspec tive one simpli appli model check system test approach obtain high level behavior coverag small congur data 6 structur secondli show symbol execut code precondit one ecient obtain test suitabl blackbox test second ap 7 proach show exibl lazi initi approach symbol execut resembl algorithm employ korat tool 10 highli success gener test input 8 believ exibl approach test complex softwar import end think techniqu cover seen continuum follow fashion code analyz doesnt full specic one use blackbox approach consid structur input gener test 10 note structur input must known case given java predic specic exist exampl algebra specic use 19 specic center approach test input genera tion use augment note requir specic given notat accept model checker java case point blackbox approach exhaust one need consid code whitebox gener addit test although consid simpl coverag criteria drive symbol execut base test input gener one specifi criteria express prop erti model checker exampl predic coverag 26 lastli test sucient case exampl test concurr program notori incomplet power techniqu program model check use 13 acknowledg 14 would like thank darko marinov insight discuss share us java implement r econom impact inadequ infrastructur softwar test specicationbas coverag metric evalu test set use model check gener test specic experi test case gener runtim analysi automat valid tempor safeti properti interfac slam project debug system softwar via static analysi softwar test techniqu korat autom test base java predic intern symposium softwar test analysi issta experiment evalu veric valid tool martian rover softwar structur specicationbas test autom support experiment evalu model check system gener test data symbol execut program introduct algorithm autom formal specic base use model model check program languag use verisoft toward theori test data select tempor logic base theori test coverag gener approach program test gener symbol execut model check test symbol execut program test autom test data gener program procedur tvla system implement static analys test use solver imper constraint testera novel framework autom test java program pointer assert logic engin gener test uml specic veric java program use symbol execut invari gener veric time partit deo schedul kernel omega test fast practic integ program algorithm depend analysi autom gener program test data solv shapeanalysi problem languag destruct updat model check program symbol comput mostprecis abstract oper shape analysi tr introduct algorithm astoot approach test objectori program model check program languag use verisoft solv shapeanalysi problem languag destruct updat automat test data gener use constraint solv techniqu deadlock detect tool concurr java program use model check gener test requir specif structur specificationbas test model check bandera verif time partit deo schedul kernel approach program test symbol execut program test pointer assert logic engin automat valid tempor safeti properti interfac sscplamscp project softwar test techniqu gener finit state machin abstract state machin korat model check program specificationbas coverag metric evalu test set tempor logic base theori test coverag gener autom formal specificationbas test tvla toward theori test data select use model check gener test specif testera gener test counterexampl ctr willem visser corina psreanu radek pelnek test input gener redblack tree use abstract proceed 20th ieeeacm intern confer autom softwar engin novemb 0711 2005 long beach ca usa autom test gener engin applic proceed 20th ieeeacm intern confer autom softwar engin novemb 0711 2005 long beach ca usa nikolai tillmann wolfram schult parameter unit test unit meister acm sigsoft softwar engin note v30 n5 septemb 2005 colin blundel dimitra giannakopoul corina psreanu assumeguarante test acm sigsoft softwar engin note v31 n2 march 2006 patric godefroid composit dynam test gener acm sigplan notic v42 n1 januari 2007 petri ihantola creat visual test data program exercis informat educ v6 n1 p81102 januari 2007 carlo pacheco shuvendu k lahiri michael ernst thoma ball feedbackdirect random test gener proceed 29th intern confer softwar engin p7584 may 2026 2007 koushik sen darko marinov gul agha cute concol unit test engin c acm sigsoft softwar engin note v30 n5 septemb 2005 rupak majumdar koushik sen hybrid concol test proceed 29th intern confer softwar engin p416426 may 2026 2007 nikolai tillmann wolfram schult parameter unit test acm sigsoft softwar engin note v30 n5 septemb 2005 michael emmi rupak majumdar koushik sen dynam test input gener databas applic proceed 2007 intern symposium softwar test analysi juli 0912 2007 london unit kingdom willem visser corina psreanu radek pelnek test input gener java contain use state match proceed 2006 intern symposium softwar test analysi juli 1720 2006 portland main usa tao xie jianjun zhao framework tool support gener test input aspectj program proceed 5th intern confer aspectori softwar develop march 2024 2006 bonn germani sarfraz khurshid yuk lai suen gener symbol execut librari class acm sigsoft softwar engin note v31 n1 januari 2006 jame h andrew susmita haldar yong lei felix chun hang li tool support random unit test proceed 1st intern workshop random test juli 2020 2006 portland main marat boshernitsan roongko doong alberto savoia daikon agit lesson challeng build commerci tool develop test proceed 2006 intern symposium softwar test analysi juli 1720 2006 portland main usa arindam chakrabarti patric godefroid softwar partit effect autom unit test proceed 6th acm ieee intern confer embed softwar octob 2225 2006 seoul korea patric godefroid nil klarlund koushik sen dart direct autom random test acm sigplan notic v40 n6 june 2005 marcelo damorim steven lauterburg darko marinov delta execut effici statespac explor objectori program proceed 2007 intern symposium softwar test analysi juli 0912 2007 london unit kingdom aysu betin tevfik bultan mikael lindval benjamin lux stefan topp elimin synchron fault air traffic control softwar via design verif concurr control autom softwar engin v14 n2 p129178 june 2007 paul darga chandrasekhar boyapati effici softwar model check data structur properti acm sigplan notic v41 n10 octob 2006 marc fisher ii gregg rothermel darren brown mingm cao curti cook margaret burnett integr autom test gener wysiwyt spreadsheet test methodolog acm transact softwar engin methodolog tosem v15 n2 p150194 april 2006