local label resourc alloc use preprocess paper studi power nonrestrict preprocess commun graph g synchron reliabl system scenario arbitrari preprocess perform g sequenc label problem solv differ subgraph g suggest preprocess produc orient g goal exploit preprocess minim radiu neighborhood around vertex data collect order determin label defin set label problem done time complex label subgraph depend topolog graph g alway less minchig olog n2 hand show exist graph even unbound preprocess allow fast solut simpl label problem specif shown processor need know omegalog n log log nneighborhood order pick labelfin deriv result resourc alloc problem particular show omegalog n log log n commun round need resourc fulli util context defin compact color problem orient preprocess provid fast distribut label algorithm algorithm suggest effici solut resourc alloc problem b introduct time requir perform certain comput messagepass system depend mani case local inform ie distanc inform forward clearli within commun round processor get inform processor locat within distanc studi problem local ie valu processor depend closebi neighborhood attract much attent eg 13 16 12 18 11 studi assum processor knowledg network topolog mani common scenario situat problem solv mani time differ subnetwork fix network g might worthwhil conduct preliminari preprocess g studi label problem processor pick label subject restrict label whole network allow arbitrari preprocess g afterward sever instanc label problem need solv differ subnetwork g 0 g processor g particip algorithm particular subnetwork g 0 label processor g 0 pick label assum system synchron oper round bound messag length local comput unlimit furthermor assum system complet reliabl preprocess attempt increas local problem ie decreas radiu preliminari version paper appear proceed 8th intern workshop distribut algorithm terschel netherland septemberoctob 1994 g tel p vitanyi ed pp 194208 lectur note comput scienc 857 springerverlag work support grant 920233 unit statesisrael binat scienc foundat bsf jerusalem israel fund promot research technion technion vpr fund 2 depart comput scienc technion haifa 32000 israel part work hada shachnai done ibm tj watson research center yorktown height ny email hagitcstechnionacil hadascstechnionacil tamicstechnionacil neighborhood processor v need know order pick label preprocess present produc orient assign prioriti processor later processor comput label subgraph consid processor higher prioriti defin paramet quantifi qualiti orient denot tg tg depend topolog g alway less minfg olog n 2 g defin extend label problem label graph extend independ set vertic larger label graph without invalid origin label maxim independ set problem 1color problem extend suggest effici preprocess g allow solv problem within tg round subgraph g also discuss distribut random preprocess g take olog n 2 round enabl solv problem subgraph g within olog n 2 round give distribut random algorithm compact color barnoy et al 6 shown algorithm provid effici solut resourc alloc problem larg class graph introduc problem processor commun processor nonconst distanc even unbound preprocess problem k dens color restrict color problem color kdens everi vertex color c k neighbor color c valid color kdens requir check neighbor ie processor distanc 1 prove exist network processor must know omegagammaeir n log log nneighborhood order pick color network even unbound preprocess allow solv problem local local distribut comput first studi cole vishkin show 9 3color ring requir knowledg olog n neighborhood bound shown tight linial 12 gener problem comput label local studi naor stockmey 16 case preprocess allow present local algorithm label problem whose valid check local also show random help make label problem local followup work mayer naor stockmey 15 consid amount initi symmetrybreak need order solv certain label problem less relat work studi color maxim independ set problem graph eg goldberg plotkin shannon 11 szegendi vish wanathan 18 panconesi srinivasan 17 anoth use graphtheoret techniqu local algorithm appear work spars partit 2 14 work preprocess appli order partit graph graph small diamet given partit possibl solv problem local subgraph compos result label see also survey linial 13 describ work local distribut comput preprocess help context ongo problem resourc alloc 7 job conflict resourc requir schedul effici instanc problem commun graph g vertic repres processor edg pair processor may compet resourc resourc requir processor may vari current requir repres dynam conflict graph c vertic processor wait execut job edg two processor current compet resourc note c g consid restrict version resourc alloc problem schedul kcompact everi wait processor p everi k round either p run exist conflict neighbor p run guarante p delay one conflict neighbor run lower bound kdens color problem impli preprocess enabl distribut kcompact schedul within less omegagammaan n log log n round present distribut algorithm compact known upper bound execut time job algorithm use preprocess produc torient respons time algorithm degre p c resourc alloc problem introduc chandi misra 7 definit known dine philosoph problem resourc requir processor static consid dynam version problem known drink philosoph problem sever algorithm drink philosoph problem known without preprocess best algorithm date 5 achiev log n respons time ffi degre p c ffi maxim degre c contrast use preprocess algorithm achiev respons time algorithm reli preprocess color commun graph induc prioriti processor achiev respons time offi 2 present 8 usag preprocess induc orient conflict graph first consid 7 barbosa gafni 4 present theoret result concern maxim concurr may achiev use orient like algorithm paper orient use induc prioriti processor decreas wait time processor howev work qualiti graph orient measur maxim direct length graph correspond maxim wait chain particular processor contrast measur qualiti orient maxim undirect distanc two processor connect direct path allow us combin orient preprocess local distribut label algorithm result wait time processor bound small constant although length maxim direct path may equal size graph rest paper organ follow section 2 give basic definit section 3 studi label problem deriv lower bound label problem hold also case unbound preprocess allow introduc torient preprocess prove preprocess provid effici label algorithm certain problem section 4 deal resourc alloc problem present lower bound kcompact resourc alloc distribut algorithm compact resourc alloc use torient conclud section 5 problem left open work 2 preliminari model comput consid distribut messagepass system processor network connect processor model graph vertic correspond processor bidirect commun link everi pair adjac processor assum system synchron oper round begin round k 1 processor receiv messag sent neighbor end round k local comput processor may send messag neighbor bound messag length local comput unlimit graph theoret notion consid directedundirect graph e two vertic v v undirect distanc v u g note even g direct distanc measur shortest undirect path g v u diamet g diamg max vu2v dv u given vertex v rneighborhood v integ r 0 subgraph g induc vertic u dv u r girth g gg length shortest cycl g set vertic independ two vertic v 0 adjac independ set maxim contain strictli larger independ set ccolor g partit v c independ set equival ccolor map specifi vertex color two adjac vertic color chromat number g g indic smallest number c g ccolor given graph g denot ffi v degre vertex v ie number vertic adjac let delta maxim degre vertex g g direct vertex v sourc g incom edg label problem label graph e alphabet sigma map label problem l set label intuit set label satisfi certain requir exampl ccolor label problem requir everi edg hv ui distribut algorithm solv label problem l perform round commun processor pick label label graph l 3 label problem 31 lower bound present label problem prove everi distribut algorithm solv problem requir least omegagammaast n log log n round even unbound preprocess problem restrict color problem adjac vertic differ label addit label close formal definit 31 color kdens fix k 1 everi vertex color c k neighbor color c 0 2 intuit kdens color graph everi vertex color c k least one neighbor smaller color rel close c k captur maxim gap color given label graph everi vertex v color c valid label examin 1neighborhood label legal v neighbor label c c k v neighbor color c mean kdens color 1checkabl terminolog 16 present lower bound result proof show graph g vertex g v must pick differ label two differ subgraph g 1 g 2 g v 1 log n log log nneighborhood g 1 g 2 proof use graph larg chromat number larg girth exist graph guarante follow theorem theorem 31 erd os 10 n 1 graph g n vertic g 1log n gg 1log n log follow immedi take corollari 32 n 1 log n exist graph g n vertic g 1log n log log n k gg k log n log log n next lemma show maxim color kdens color tree lower bound tree depth lemma 33 everi kdens color tree vertex v color c vertex distanc least c proof sinc color kdens v must neighbor v 1 cv 1 must neighbor v 2 cv 2 2k gener must neighbor v color least c gamma ik path v extend v long therefor length path least c 1 clearli simpl path sinc tree simpl path v v c therefor dv v c prove lemma prove main theorem section theorem 34 everi k 1 n 1 k 1log exist commun graph g size n subgraph g 0 g everi distribut algorithm find kdens color g 0 requir least 1 log n log log n round proof assum way contradict exist algorithm find kdens color within r round r 1 log n log log n clearli within r round vertex know rneighborhood proposit 35 let g 1 g 2 two subgraph g let v vertex g rneighborhood v g 1 ident rneighborhood v g 2 v pick label execut g 1 g 2 corollari 32 exist graph g size n g kr gg 2r assumpt find kdens color subgraph g 0 g within r round particular find kdens color g sinc exist vertex v color c kr r neighborhood v g sinc gg 2r g 0 includ vertic distanc r v follow g 0 tree clearli v rneighborhood g g 0 therefor proposit 35 v color c also g 0 sinc g 0 tree lemma 33 impli vertex distanc c v henc r c 1 hand sinc c kr k follow r c contradict remark state lower bound theorem 34 assum k 1 exist graph g 1 n vertic log log n1 log log n impli similar way everi distribut algorithm find 1dens color requir least 1log n log log n round 32 effici label use torient section defin class label problem show specif preprocess allow solv effici let g 0 g graph label clearli within diamg 0 1 round processor v 2 g 0 learn g 0 therefor pick label 1 intuit 1 note g 0 connect diamg label problem color suffici processor know connect compon g 0 order pick label problem number round need order label g 0 diamg 0 connect compon maxim diamet g 0 label problem find number processor g 0 whole graph g 0 known kind fig 1 optim torient graph preprocess present section orient edg neighbor processor therebi assign prioriti way processor close vertic orient ie higher prioriti show problem includ color maxim independ set exist label algorithm processor label depend vertic higher prioriti allow processor commun vertic assumpt rel close 321 torient graph requir acycl orient everi vertex close vertic direct path definit 32 torient graph g acycl orient without direct cycl g everi two vertic v u direct path v u direct graph du v orient number graph g denot tg smallest g torient note everi graph g topolog sort impli acycl orient therefor proposit 36 everi graph g tg diamg howev case much better exampl ccolor g impli 1orient direct edg v u v u 1orient sinc direct path length c impli proposit 37 everi graph g exampl orient number ring 1 ring even length 2 ring odd length use 2color 3color respect figur 1 includ exampl optim torient sever graph recal definit torient requir undirect distanc two vertic u v connect direct path bound comment proposit 37 hold also stronger definit requir direct distanc u v bound therefor expect upper bound g given proposit 37 tighten 2 simpl way construct optim torient preprocess collect complet graph topolog node local find best orient reli fact local comput power unbound requir odiamg commun round follow show moder comput effort may yield optim orient allow us problem diamg round need order label g 0 2 possibl gap tg g well demonstr cliqu g n vertic find orient good sens alway bound small polylogarithm n theorem 38 everi graph g size n possibl find olog n 2 orient g random distribut algorithm within olog n 2 round proof everi graph partit olog n subgraph diamet everi connect compon subgraph olog n done random distribut algorithm linial sak 14 within olog n 2 round end algorithm everi vertex know id subgraph v belong id vertic belong connect compon v partit use construct olog n 2 orient g within ologn addit round follow everi connect compon everi subgraph orient acyclicli eg central topolog sort within olog n round edg whose endpoint differ subgraph orient accord id subgraph edg hv ui orient clearli orient acycl furthermor assum direct path v u path visit subgraph defin g strictli increas order therefor visit subgraph sinc diamet everi connect compon subgraph olog n dv 322 extend label problem defin class label problem torient preprocess help problem label construct extend part graph alreadi label definit 33 let e graph extens g graph note v 0 independ set g 0 definit 34 let l label problem extens label algorithm l everi graph g label l everi extens label ffl label g 0 l ffl label v depend connect compon g v connect label v independ label vertic v 0 compon g definit 35 label problem extend determinist extens label algorithm argu import label problem extend consid follow extens algorithm label denot everi v neighbor proposit 39 find maxim independ set extend label problem proof let e graph legal label ie everi vertex label v 2 f0 1g vertic independ set g let g extens g clearli extens algorithm maxim independ set problem proposit 310 1color extend label problem proof let e graph legal color ie everi vertex label v vertic form independ set let g extens g follow clearli extens algorithm problem everi v 2 v defin v smallest c 2 1g neighbor u v exist v ffi v neighbor therefor ffi v color use vs neighbor thu g 0 extens algorithm label vertex smallest color use neighbor suitabl kdens color problem therefor proposit 311 everi k 1 kdens color problem extend 323 algorithm extend label problem show follow theorem theorem 312 given torient graph g extend label problem l distribut algorithm solv l within round everi subgraph g proof let l extend label problem let determinist extens algorithm l describ distribut algorithm solv l subgraph g within round let g graph acycl orient let g 0 subgraph g note torient g induc acycl orient g 0 consid partit g 0 layer l length longest direct path g 0 v 2 g 0 longest direct path v g 0 length note partit well defin sinc g finit orient acycl 313 layer form independ set proof let v u neighbor g 0 v u everi direct path v extend u particular longest one thu u belong layer higher vs layer everi vertex v subgraph g 0 induc v vertic g 0 direct path v v 2 g 0 partit g 0 v layer l 0 g 0 v v k length longest direct path g 0 v partit follow properti ffl u v everi direct path u g 0 g 0 v u g 0 v ffl particular u v longest direct path u g 0 v therefor everi v l consequ u v everi l v algorithm consist two stage first stage inform collect specif first round everi vertex v 2 g 0 distribut distanc fact belong g 0 vertic g particip stage sinc g torient vertex v 2 g 0 know g 0 v within round second stage algorithm everi vertex v 2 g 0 use extens algorithm label g 0 v label comput iter ith iter label v code v 2 g 0 stage appear figur 2 denot ahv applic label graph h g 0 v extend independ set v edg connect h v g 0 iter repeat loop addit layer g 0 v label denot label v u label assign v u 2 g 0 v v execut particular label v v label v assign alreadylabel repeat execut aalreadylabel v alreadylabel alreadylabel l g 0 v v label fig 2 label algorithm code v 2 g 0 next lemma show label v assign vertic g 0 v ident label vertic assign lemma 314 u v label u label v u proof show induct 0 label u label v u everi v base case contain sourc g 0 consid note label u u determin first iter execut u everi v u 2 g 0 v assign label u first iter execut v may vertic addit u l 0 g 0 v sinc label u depend connect compon includ u sinc determinist label u label v u induct step assum claim hold vertic l note label u u determin jth iter u execut u u everi v u 2 g 0 v assign label v u execut v l j g 0 v connect compon u v u induct assumpt vertic u v label ident v u thu sinc determinist label u label v u entir label g 0 consist label label v v lemma 314 ident label produc appli g 0 sequenti layer layer thu l theorem 38 corollari 315 everi graph g size n random preprocess take olog n 2 round extend label problem solv everi note preprocess suggest result assum n known advanc proposit 311 theorem 312 impli everi graph g fix color everi g 0 g found distribut within round assum exist torient g particular corollari 315 random distribut preprocess take olog n 2 round enabl find kdens color everi g round note lower bound kdens color theorem 34 log log n sinc kdens color problem extend theorem 34 theorem 312 impli corollari 316 let tn maxim tg among graph size n omegagamma135 n log log n 4 resourc alloc section studi resourc alloc prob lem problem contrast label problem ongo natur repetit solv instanc howev shown employ techniqu result develop label problem instanc resourc alloc problem commun graph g vertic repres processor edg pair processor may compet resourc resourc requir processor may vari current requir repres formal dynam conflict graph c vertic processor wait execut job edg two processor compet resourc clearli c g denot degre processor p conflict graph c ffi maximum number round requir complet job algorithm resourc alloc problem decid wait processor use resourc execut job satisfi follow properti 1 exclus two conflict job execut simultan safeti properti 2 starvat request processor eventu grant live properti respons time request number round elaps processor request use resourc execut job good algorithm minim respons time consid also follow properti guarante better exploit resourc reduc averag respons time definit 41 algorithm resourc alloc kcompact everi wait processor p everi k round either p run conflict neighbor p run section 41 prove everi k 1 effici distribut algorithm kcompact reduct lower bound kdens color prove earlier specif show lower bound ofomegagamma3 n lg lg n respons time resourc alloc algorithm kcompact k 1 section 42 present compact color problem use later compact resourc alloc section 43 present distribut compact algorithm resourc alloc use torient preprocess 41 lower bound kcompact resourc alloc show given conflict graph c k 1 kcompact resourc alloc algorithm use label c label k edens color togeth lower bound prove theorem 34 impli lower bound compact resourc alloc let g commun graph let c conflict graph oneshot resourc alloc problem schedul resourc c way satisfi safeti live condit slow execut given set job execut job use resourc exactli round terminolog borrow rhee 19 specif algorithm consid slow execut respect oneshot resourc alloc problem algorithm schedul one batch job need resourc run time clearli special case resourc alloc problem lower bound case appli gener problem let 0 first round processor start execut job starvat properti guarante exist 0 associ processor p label p start execut job interv interv exist starvat properti henc label well defin 41 label k color conflict graph proof mutual exclus properti sinc execut slow legal color assum p 2 p start execut job interv algorithm kcompact everi k round either start execut job exist conflict processor p j execut job latter case conflict processor p j start execut job interv 1 definit p j label c 0 togeth theorem 34 impli theorem 42 everi k 1 kcompact distribut algorithm resourc alloc problem respons time less log n log log n 42 compact color section introduc compact color problem properti next section use properti show processor join conflict graph c differ time algorithm agre color processor c definit 42 color compact everi vertex v color j neighbor color note everi compact color 1dens hand consid graph line length 4 whose vertic color 4 1dens color compact given compact color let c denot set vertic color sinc color compact c maxim independ set v n consid follow extens algorithm label psi denot c everi defin psiv smallest number c neighbor u v lemma 43 compact color extend label problem next lemma claim remov vertic color 1 c graph g obtain graph g 0 everi vertex v g 0 v color c g v color appli c g 0 lemma 44 let e graph let compact color g produc c let g graph obtain delet vertic compact color g 0 produc c everi proof prove lemma consid algorithm iter execut mi extens algorithm given graph g see figur 3 recal label vertex v 1 v neighbor lower layer label otherwis v label 0 use studi c due follow claim 45 everi graph g label phi produc ident label psi produc c proof recal given acycl orient graph g vertex v ith layer l g longest direct path v length proof induct layer g repeat execut g produc everi g empti fig 3 algorithm base case consid vertex v 2 l 0 g note l 0 g contain sourc g c color everi sourc v 1 induct step assum claim hold vertic l j let v 2 l g assum consid neighbor v lower layer end iter k v join mi k c v color k v neighbor lower layer color neighbor lower layer color k sinc everi iter produc maxim independ set v neighbor lower layer mi 1 induct hypothesi impli v neighbor color v join mi k v neighbor lower layer mi k thu induct hypothesi v neighbor lower layer color k c therefor need claim 45 g particular mi 1 g set vertic g claim 45 result graph g 0 let phi 0 color produc appli g 0 consid execut g remov g first iter execut sinc result graph g 0 remaind execut g ident execut g 0 execut g 0 ident suffix execut g start second iter henc v 2 mi g v 2 mi impli everi 1 claim 45 everi repeatedli remov set vertic color 1 obtain corollari 46 let e graph let compact color g produc extens algorithm c fix integ z 0 graph obtain delet vertic psiv 2 compact color g 0 produc c everi corollari use resourc alloc algorithm show processor join conflict graph c differ time agre color processor c 43 distribut compact resourc alloc algorithm section describ compact distribut algorithm resourc alloc problem whose respons time orient number commun graph g assum known advanc processor fix run phase consist round addit processor submit request resourc entranc phase consist tg1 round processor wish execut job wait begin next entranc phase submit request add tg1 round respons time everi request partit round entranc phase run phase ident respect processor therefor processor submit request batch two success batch algorithm use preprocess find acycl orient g achiev orient number g use denot p orient p j orient entranc phase induc orient dynam conflict graph c follow edg hp resourc earlier entranc phase p j p j p request resourc entranc phase entranc phase processor partit three set 1 idl processor need resourc processor current execut job 2 request processor request resourc current entranc phase 3 wait processor request resourc previou entranc phase still wait run phase idea algorithm use torient order merg request processor wait processor manner delay wait processor provid short respons time new request code processor appear figur 4 section 32 denot c p subgraph c p j 2 c p direct path intuit algorithm proce follow request processor p transmit request collect current state c p upon initi state c p denot c 0 p run phase p determin compact color c 0 p p color k p execut job kth run phase count first run phase begin end current entranc phase wait processor updat conflict graph transmit request processor begin entranc phase updat state c p obtain previou one delet set processor begin execut job next first prove everi request processor p learn processor may influenc color entranc phase lemma 47 request processor p tg begin entranc phase proof proof induct entranc phase base case consid processor p request resourc first entranc phase direct path p contain processor request resourc first entranc phase sinc g torient distanc processor c p p tg therefor p know c p tg round induct step let p processor request resourc rth entranc phase r 1 let direct path p c algorithm processor enter p direct processor earlier entranc phase thu ae divid two part request resourc strictli rth entranc phase everi entranc phase need resourc next transmit neighbor messag receiv order execut job next round receiv neighbor part c p consist processor made request previou entranc phase next tg round distribut part c p request transmit neighbor messag receiv construct c p combin old part alreadi know part receiv last tg round use c find compact color c p color k execut job kth run phase everi p j color k p j execut job kth run phase wait updat c p remov processor start execut job next round accord compact color remov processor connect anymor distribut c p neighbor next tg round transmit neighbor messag receiv fig 4 distribut algorithm code p request resourc rth entranc phase two success entranc phase separ round therefor induct hypothesi p join p k alreadi know path algorithm p l receiv p k part ae first round rth entranc phase sinc graph torient p receiv messag vertic round reconstruct ae next lemma state everi p assign run phase p j done p p j ident p j color k compact color c 0 p p j go execut job kth run phase count first run phase begin end p entranc phase lemma 48 everi request processor p everi p run phase assign p j p k p j execut job phase k proof proof induct entranc phase base case consid processor p request resourc first entranc phase sinc p j c 0 p submit request first entranc phase lemma 47 p within round lemma 43 compact color problem extend therefor claim 314 refer algorithm c assign color k p assign color k p j c 0 p sinc p start count round run phase count ident impli lemma induct step assum induct hypothesi hold processor request resourc rth entranc phase let p processor submit request rth entranc phase algorithm first round phase r everi wait processor p l remov c p l processor start execut job entranc phase r accord compact color calcul p l c p l includ processor request resourc rth entranc phase thu induct hypothesi updat reflect correctli current state c p l fact togeth lemma 47 impli p obtain p within round consid processor p two case case 1 p j processor request resourc entranc phase r definit c p c 0 p j p use claim 314 p j assign color k p assign color k p j c 0 p case 2 p j processor request resourc entranc phase r 0 note p includ processor request resourc p let x ratio length one entranc phase length one run phase denot number first run phase begin rth entranc phase let 0 denot number first run phase begin r 0 th entranc phase assum p j assign color c 0 entranc phase r 0 algorithm p j execut job run phase addit r gamma r 0 entranc phase r 0 r p j remov c p j processor start execut job period formal processor color p j remov c p j induct hypothesi impli updat c p j begin rth entranc phase contain processor still wait corollari 46 compact color updat c p j assign color p claim 314 impli p assign color c p j c 0 p thu p determin p j execut job run phase number complet proof prove main properti algorithm lemma 49 safeti everi two processor p p j need p p j run simultan proof need neighbor c assum without loss gener legal differ color c p lemma 48 run phase p determin p j ident run phase p j determin therefor belong differ run phase thu algorithm p p j run simultan show schedul becom compact 2tg processor initi request resourc lemma 410 everi wait processor p first everi round either p run conflict neighbor p run proof algorithm everi wait processor p color c p compact thu p color c neighbor color therefor least one neighbor p run run phase 1 first run phase count run phase begin 2tg round request initi p henc round schedul compact respons time processor p consist three compon first p wait begin next entranc phase take tg entranc phase p collect c 0 p lemma 47 take round final p wait run phase compact properti lemma 410 p wait ffi run phase take round impli theorem 411 exist algorithm resourc alloc problem whose respons time remark algorithm ffi captur number processor issu compet resourc request simultan p processor delay processor request resourc note gener mean algorithm guarante fifo order thu processor issu request later p may execut job earlier p still wait happen p need popular resourc request p j 44 discuss present algorithm assum system syn chronou local comput power processor unlimit first remark algorithm easili chang work asynchron system employ simpl synchron ff 1 sinc algorithm reli synchron neighbor processor synchron ff allow run algorithm correctli detail straightforward omit second remark local comput perform algorithm fairli moder consum step comput compact color done repeat applic turn greedili assign color node furthermor comput integr collect inform neighbor node way compact color comput iter overlap iter inform collect local comput node reduc choos color base color neighbor 5 conclus open problem work address power unrestrict preprocess particular torient preprocess sever open question remain 1 deriv lower bound number commun round need kcompact resourc alloc lower bound number commun round need resourc alloc algorithm guarante safeti live properti 2 lower bound kdens color depend k upper bound problem valu k bound tighten particular algorithm kdens color whose complex depend k 3 show torient preprocess help label problem help type preprocess 4 show tg olog n 2 everi graph g size n exist graph g size n tg omegagamma368 n log log n upper bound reduc ologn log log n particular distribut algorithm achiev better orient nonrandom distribut algorithm achiev good orient 5 nphard determin tg given graph acknowledg would like thank roy meshulam bring erdo theorem attent point exist graph omegagamma1 n log log n also thank amotz barnoy help discuss anonym refere provid mani comment improv present r complex network synchron spars partit dine philosoph algorithm polynomi respons time concurr heavili load neighborhoodconstrain sy tem distribut resourc alloc algorithm chromat sum distribut resourc allo cation drink philosoph problem effici fault toler algorithm distribut system determinist coin toss acceler cascad micro macro techniqu design parallel algorithm graph theori probabl parallel symmetrybreak spars graph distribut algorithmsglob solut local data decompos graph region small diamet local comput static dynam graph comput local improv distribut algorithm color network decomposit problem local base graph color effici partial synchroni tr