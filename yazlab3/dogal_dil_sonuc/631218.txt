composit program abstract mobil comput abstractrec advanc wireless network technolog increas demand ubiquit mobil connect demonstr import provid reliabl system manag reconfigur disconnect compon design system requir tool techniqu appropri task mani formal model comput includ uniti adequ express reconfigur disconnect therefor inappropri vehicl investig impact mobil construct modular compos system algebra formal calculu propos model mobil paper address question whether uniti statebas formal foundat tempor logic extend address concurr mobil system process examin new abstract commun among mobil compon express reconfigur disconnect compos modular fashion b introduct uniti 1 approach concurr influenti studi distribut system larg part emphasi design aspect program process rather simpli serv tool veri ficat techniqu use deriv concurr algorithm wide rang problem specifi verifi correct even larg softwar system 2 ever essenti static structur comput express standard uniti suitabl tool address problem face design mobil comput system cellular telephon network paper address problem model dynam reconfigur distribut system extens uniti methodolog refer mobil uniti formal model capabl express reconfigur explor algebra perspect 3 denot perspect 4 5 statebas model natur express reconfigur com ponent also algebra model calculu may adequ express reconfigur clear handl issu disconnect recent work recogn import introduc locat failur concept mobil process algebra 6 7 8 author primarili concern model mobil softwar agent effect host failur system directli p mccann lucent technolog napervil illinoi email mccapresearchbelllabscom gc roman depart comput scienc washington univers st loui missouri email romancswustledu address disconnect compon continu function correctli independ addit directli model reconfigur di connect mobil uniti attempt address design issu rais mobil comput issu stem characterist wireless connect natur applic servic demand user new technolog broadli speak mobil comput lead system decoupl context depend bring new challeng implement illus locationtranspar examin trend applic servic current implement system design hope gain insight fundament new domain outlin opportun extens model comput uniti decoupl low bandwidth frequent disconnec tion high latenc wireless connect lead decoupl style system architectur disconnect may unavoid host move new locat may intent laptop power conserv batteri life system design work environ must decoupl opportuni tic decoupl mean applic must abl run disconnect weakli connect server opportunist mean interact accomplish connect avail aspect alreadi appar work system filesystem databas relax consist disconnect host continu oper 9 10 decoupl correspond issu modular system design although case mobil modular taken new extrem user demand compon must continu function even disconnect servic use also compon must readi interfac whatev servic provid current locat notion compon static compos fix set servic must abandon separ interfac compon implement long advoc program languag commun notion need revisit dynam perspect mobil comput context depend addit weakli connect mobil comput chang locat frequent lead demand context depend servic simpl exampl locat depend world wide web browser voelker et al 11 system allow user specifi locationdepend queri inform current surround servic avail gener point view evidenc 12 note applic behavior might depend ieee transact softwar engin vol xx x month 1998 taliti current context includ current locat near compon like ident nearest printer group individu present room dynam natur interact among compon bring unpreced challeng analog open softwar system compon must function correctli myriad configur might oc cur must also continu function compon reconfigur mobil uniti although interact specifi basi usual condit proxim two compon model gener express interact condit arbitrari global predic willing two compon particip interact presenc compon presenc interfer nois wireless link also given collect pairwis interact compos natur produc compound interact may span mani compon locat transpar system mobileawar requir explicit reason locat context applic natur make use locationtranspar messag exampl mobil ip 13 attempt provid context ternet illustr mobil manag issu must address design previou work 14 model mobil ip mobil uniti locat registr scheme also dealt malli exampl calculu 15 standard uniti 16 although latter work similar applic uniti mobil deal mainli part algorithm run fix network indirectli commun mobil node fix network perspect formal model locat registr provid rich sourc problem use ex ampl mobil manag algorithm show even goal transpar mobil design protocol must face issu brought mobil iti explicit reason locat locat chang requir argu given protocol properli implement locat transpar also locat registr protocol may form basi locat contextdepend servic might make use locat inform purpos rout remaind paper organ follow section ii present brief introduct standard uniti modif made express contextdepend interact last part section give proof logic accommod chang section iii make use new notat express new abstract commun call transient share section iv continu introduc formal express new commun mechan call transient synchroniza tion conclud remark present section v ii mobil uniti notat previou work 17 present notat logic interact among mobil compon pairwis limit simplifi aspect discuss instanc sideeffect assign limit compon directli interact compon contain assign howev proof logic present complex oper sometim reli sequenc oper defin precis semant paper present simpler express transient interact focus attent implic compon mobil basic atom assumpt made system model provid proof logic much concis earlier work process gener interact includ multipl particip new model develop context lowlevel wireless commun order focu essenti detail transient interact among mobil com ponent key concept introduc section reactiv statement allow modular specif farreach contextdepend side effect statement one compon may use primit other basi subsequ section present highlevel languag construct may specifi reason standard uniti recal uniti program simpli set assign statement execut atom select execut weakli fair mannerin infinit comput statement schedul execut infinit often two exampl program one call sender receiv shown figur 1 program sender start introduc variabl use declar section abstract variabl type set sequenc use freeli initi section defin allow initi condit program variabl referenc section initi valu constrain type heart uniti program assign section consist set assign statement execut program sender weaklyfair interleav two assign statement assign statement singl assign statement gener may multiplevalu assign differ righthand express sever lefthand vari abl statement could written x e x commasepar list variabl e commasepar list express righthand side express evalu current state assign variabl made execut uniti program nondeterminist fair infinit interleav assign statement produc atom transform program state infinit execut select infinit often program sender exampl take variabl bit infinit sequenc 1s 0s next valu assign bit chosen mccann roman composit program abstract mobil comput 3 program sender declar initi assign program receiv declar sequenc boolean initi assign histori fig 1 two standard uniti program nondeterminist neither valu may forev exclud program receiv two variabl one sequenc boolean valu contain one assign statement statement use notat histori delta bit denot sequenc result append bit end histori express evalu righthand side assign histori left hand side essenti grow histori sequenc one bit execut note yet introduc notion composit two program consid complet separ entiti a1 proof logic rather deal directli execut sequenc formal semant uniti given term program properti proven text fair interleav model lead natur definit safeti live properti base quantif set assign statement choos use simplifi form definit present 18 19 oper co transient oper may appli simpl nontempor state predic construct variabl name constant mathemat oper standard boolean connect exampl p q state predic safeti properti p co q mean program state satisfi p next state assign execut must satisfi q proof properti involv univers quantif statement show establish q execut state satisfi p notat fpgsfqg standard hoaretripl notat 20 addit quantif also oblig show p q effect take special statement skip noth part quantif without qualif case co would true safeti properti could violat execut action noth exampl co consid properti clearli properti hold program sender everi statement start state bit 1 0 leav bit state satisfi 1 0 properti exampl special case co left righthand side ident properti may abbrevi oper stabl stabl 1 initi condit satisfi predic ie invari written invari clear context program properti appli specifi explicitli invari progress properti express notat transient p state predic p eventu falsifi uniti weak fair assumpt defin use quantif transient denot exist statement execut state satisfi p produc state satisfi p exampl properti transient 0 proven program sender statement set bit 1 transient oper use construct live properti reader may familiar ensur oper uniti realli conjunct safeti live properti ensur q transient p q ensur oper express properti program state satisfi p remain state unless q establish addit remain forev state satisfi p q ensur express simpl progress properti establish singl comput step proof complic progress properti often requir use induct show program move whole sequenc step order achiev goal notion captur leadsto oper written 7 inform properti p 7 q mean program state satisfi p eventu state satisfi q although may happen one step properti p may falsifi meantim 4 ieee transact softwar engin vol xx x month 1998 exampl consid properti receiv 1 state receiv ever state length histori sequenc 3 eventu state length 5 meantim howev length sequenc may take valu 4 satisfi neither side relat proof leadsto properti carri induct ensur base case formal rule infer summar basi p ensur q set predic rule written hypothesisconclus form assumpt line deduct line basi rule instanc allow one conclud p 7 q p ensur q transit rule could use proof equat 1 take p formula q formula r formula 5 disjunct rule use break complic proof case proof rule introduc come standard uniti also part mobil uniti ever notion basic state transit differ two model mobil uniti express locat contextdepend state transit typifi mobil comput although mean basic hoar tripl must redefin rest uniti infer toolkit includ rule carri highlevel reason shown preserv a2 composit give new composit mechan mobil uniti first describ standard uniti mechan program composit basic composit mechan known program union use uniti union oper construct new system denot sender receiv oper new system consist union program variabl ie variabl name refer physic memori union assign statement execut fair atom interleav ing intersect initi condit commun sender receiv thu take place via share variabl bit sender write infinit sequenc 1s 0s variabl fairli inter leav receiv occasion read variabl build histori sequenc note receiv may see everi valu written sender execut fair interleav turntak also result histori gener receiv may duplic entri assign statement sender may exclud execut finit amount time anoth way compos system use superposit combin compon synchron statement rather share variabl superposit underli program f proce ad new statement variabl f new statement assign origin underli variabl f new statement synchron statement f allow 1 mainten histori variabl chang behavior underli program need certain kind proof 2 construct layer system underli layer awar higher layer variabl exampl receiv instead compos via program union could use superposit synchron assign histori assign sender updat bit thu ensur would receiv exact histori valu written bit howev superposit limit commun take place one direct also like program union essenti static form composit provid fix relationship compon also would requir singl statement program receiv broken two statement one record 1s record 0s challeng mobil comput model system modular fash ion receiv know intern work sender allow receiv temporarili decoupl sender period disconnect toward end must investig novel construct express coordin among compo nent instanc receiv get exact histori sequenc compon connect may lose inform disconnect major contribut 1 examin program deriv strategi use union superposit basic construct mechan pure theoret standpoint natur ask whether rethink two form program composit reconsid fundament program interact abstract use reason compos program b system structur two program sender receiv repres mobil compon softwar run mobil hardwar appropri repres result system static composit sender receiv mobil comput system exhibit reconfigur disconnect compon would like captur essenti new featur model composit standard uniti union would share variabl bit throughout system execut would prohibit dynam reconfigur disconnect compon section introduc syntact structur mccann roman composit program abstract mobil comput 5 make clear distinct parameter program type process compon sy tem radic departur standard uniti isol namespac individu process assum variabl associ distinct process distinct even bear name exampl variabl bit sender earlier exampl longer automat share bit receiv thought distinct variabl fulli specifi process variabl name prepend name compon appear exampl senderbit receiverbit separ namespac program serv hide variabl treat intern default instead univers visibl compon facilit modular system specif impact way program interact specifi situat program must commun figur 2 show system senderreceiv embodi concept system senderreceiv program sender program receiv compon receiv 0 sender 0 interact fig 2 exampl system notat system start declar name case senderreceiv set program given structur like standard uniti program detail elid new featur program addit program variabl stand current locat program could place declar section program vari abl promot line program name emphas import reason mobil comput precis semant locat variabl discuss section iic assum intern program given figur 1 figur 2 program realli type declar instanti compon section gener program type may paramet bound instan tiation exampl receiv could declar receiv might instanti receiver1 1 whole rang receiv could instanti way transient interact among program instanc given interact section construct use specifi interact uniqu mobil uniti introduc section iid leav detail section blank develop captur locat contextdepend aspect commun compon c locat mobil comput system must oper condit transient connect connect depend current locat compon therefor locat part model standard uniti constrain type program variabl place restrict type locat variabl may discret continu singl multidimension might correspond latitud longitud physic mobil platform may network memori address mobil agent process may explicit control locat model assign new valu variabl model locat instanc mobil receiv might contain statement newloc function newloc return new locat given current locat gener assign could comput new locat base arbitrari portion program state current locat physic move system statement would need compil physic effect like action mo tor instanc mobil code agent scenario statement would effect migrat execut program new host even process exert control locat still model movement intern assign statement occasion select execut restrict movement compon reflect statement also may still appear righthand side assign statement locationdepend behavior intern program interact disconnect compon behav ex pect mean compon must made awar program interfac sender exampl must depend presenc receiv transmit valu unrealist sender block receiv present howev constraint two program must satisfi connect wish express constraint program compos clutter individu compon way must awar depend exist program argu develop coordin languag suffici power express interact preserv modular singl program run isol see section follow composit mechan certain aspect common uniti union trait characterist superposit new construct present although 6 ieee transact softwar engin vol xx x month 1998 primarili motiv need manag contextdepend coordin compon interact section realli orthogon system structur ing one put standalon uniti program well fact formal proof logic abstract away structur convent assum flat set program variabl properli qualifi name program appear assign statement howev present construct give exampl may use interact section system senderreceiv d1 extra statement suppos sender receiv commun locat wish express fact senderbit copi receiverbit true might begin interact section receiverbit senderbit kind interact treat like extra program statement execut interleav fashion exist program statement predic follow treat like guard statement read statement written copi valu senderbit receiverbit two program locat loca tion taken mean program commun gener predic may take account arbitrari factor distanc compon presenc compon note interact alon guarante propag everi valu written sender receiv simpli anoth interleav statement fairli select execut pool statement therefor sender may write sever valu bit extra statement execut even program coloc receiv may cours move away assign new valu receiv valu copi also construct receiverhistori necessarili accur account histori bit written receiverbit execut historyrecord action complet unconstrain respect extra statement interleav fair arbitrari order d2 reaction reactiv statement provid mechan make certain everi valu written senderbit also appear receiverbit statement would appear interact section receiverbit senderbit reactsto oper reactiv statement schedul execut whenev predic follow reactsto true sens statement higher prioriti statement system gener may reactiv statement implement interact inform reactiv statement equal prioriti execut interleav fashion much like standard uniti program set reactiv statement sometim denot symbol r continu execut statement would effect execut formal known fix point r note particular statement idempot interfer reactiv statement reach fix point one execut section iie show construct captur axiomat semant propag occur everi step either compon effect present readonli share variabl abstract receiv program two compon coloc later show gener notion variabl share readwrit fashion multipl compon model gen eral reactiv statement allow model side effect given nonreact statement may execut given context particular arrang compon space d3 inhibit note even reactiv propag updat senderbit receiv still construct accur histori valu appear receiverbit nondeterminist interleav statement sever valu may written receiverbit execut statement updat receiverhistori real wireless commun system close synchron clock time consider would ensur valu read proper moment omit duplic bit sequenc inhibitor provid mechan constrain uniti nondeterminist schedul execut statement would undesir certain global context ad label statement let us express inhibit modular way without modifi origin statement exampl consid new sender program given figur 3 two statement carri program sender declar initi assign fig 3 new version program sender count bit label refer first senders0 second senders1 also updat integ counter mccann roman composit program abstract mobil comput 7 flect number bit written far counter serv abstract realtim clock virtual actual may run program sender assum statement program receiv label read exampl read histori histori delta bit might add follow set claus interact section inhibit senders0 sendercount lengthreceiverhistori sendercount lengthreceiverhistori inhibit receiverread lengthreceiverhistori sendercount net effect inhibit p strengthen guard statement conjoin p thu inhibit execut statement p true inhibit given constrain execut receiv read exactli one bit everi bit written sender note constraint appli equal well compon disconnect unrealist assum realtim clock remain roughli synchron even disconnect even though reactiv propag valu ceas reactiv statement must inhibit d4 transact reactiv propag inhibit given execut system append valu receiverhistori even two compon disconnect thu subsequ receiverhistori contain redund copi last valu written sender actual wireless transmiss system receiv indic receipt transmiss would build histori depend time constraint model might repres extra third state taken wireless transmiss medium assum bit compon therefor declar initi mean simpli transmiss current take place transmiss bit sender involv place valu commun medium return quiescent state receiv may reactiv record valu written transact provid form sequenti execut use statement sender write new valu senderbit transact consist sequenc assign state ment enclos angl bracket separ semi colon must schedul specifi order nonreact statement interleav assign statement standard uniti may view singleton transact note reactiv statement allow execut fix point semicolon end transact let us write new receiv program shown figur 4 first program receiv declar sequenc boolean initi assign flag histori reactsto bit 6 flag flag 0 reactsto bit fig 4 new version program receiv react transact reactiv statement record valu written share bit variabl flag ad make reactiv record idempot anoth reactiv statement ad reset flag commun medium return quiescent state transact may inhibit may reactiv e proof logic give logic prove properti program use construct execut model assum nonreact statement fairli select execut execut inhibit set reactiv statement denot r allow execut reach fix point next nonreact statement schedul addit r allow execut fix point substat transact reactiv augment statement thu make basic atom state transit model denot nonreact statement denot set nonreact statement includ transact n thu definit basic co transient properti becom transient even though realli possibl inhibit statement augment reaction still use hoar tripl notat fpg fqg denot execut state satisfi p termin state satisfi q hoar tripl notat appropri termin comput first deal statement inhibit follow rule hold nonreact statement whether 8 ieee transact softwar engin vol xx x month 1998 transact singleton statement fpg fqg 2 defin disjunct predic inhibit claus name statement thu first part hypothesi state inhibit state satisfi p q must true state also notat r denot statement extend execut reactiv statement set r singleton nontransact statement frg r fqg deduc frg r fqg 3 h may comput strongest postcondit r respect guess appropri take frgsfhg hypothesi standard hoar tripl nonaug statement notat fp r denot fixedpoint predic set reactiv statement determin text r must ad proof termin carri text reactiv statement ignor statement system accomplish varieti standard uniti techniqu statement consist multipl step tran action rule w may guess deriv r q appropri repres sequenti composit reactivelyaug prefix transact last subact equat 3 appli base case rule may seem complic repres standard axiomat reason ordinari sequenti pro gram substat predic transform function compos other notat proof logic present provid tool reason concurr mobil system apart redefinit basic notion atom transit keep rest uniti infer toolkit allow us deriv complex properti term primit follow section show program notat use construct system mobil compon exhibit much dynam behavior could easili express standard uniti iii transient share previou section present notat logic reason system mobil compon section section iv attempt build higher level abstract lowlevel primit contribut design system decoupl contextsensit success abstract familiar design take account realiti mobil comput implement strong underli formal foundat obviou start point commun mechan standard uniti name share variabl statement synchro nizat section examin variant share suit mobil comput system give underli semant term notat alreadi develop mobil set variabl two independ move program alway connect reflect model isol name pace case senderbit receiverbit earlier exampl howev addit reactiv propag statement interact section two variabl took qualiti share variabl two compon lo cation valu written sender immedi visibl receiv semant reactiv statement guarante propag happen atom step statement senders0 senders1 share may also appropri abstract commun coarser granular exampl one might think two mobil host commun via virtual share packet instead singl share bit realist lower level protocol exponenti backoff provid serial access commun medium even coarser abstract level might data structur replic host access serial distribut algorithm implement mutual exclus cours algorithm continu guarante mutual exclus progress presenc disconnect far inform notion transient share variabl requir consist disconnect follow packag notion coordin construct formal specifi reason run exampl consid queue document output printer assum laptop comput connect wireless commun medium wander rang printer maintain local cach queue laptop rang printer updat queue atom propag express transient share queue may denot express oper queue could includ laptop append delet item queue printer delet item head queue finish job relationship defin formal term reactiv statement propag chang share bidirect slightli complex earlier exampl singl reactiv statement could propag valu one direct present case need mechan detect chang select propag new valu therefor add mccann roman composit program abstract mobil comput 9 addit variabl program model previou state queue program laptop variabl call q printerq program printer variabl call reactiv statement detect propag chang printerq printerq laptopq laptopq printerq laptopq laptopq laptopq reactsto laptopq 6 laptopq printerq laptopq laptopq printerq printerq laptopq printerq printerq printerq reactsto printerq 6 printerq laptopq execut histori variabl differ current valu variabl track compon connect statement updat histori variabl well remot copi queue thought echo cancel remot copi kept histori vari abl revers reaction kept disabl addit add statement simpli updat histori vari abl without propag valu compon disconnect laptopq printerq laptopq reactsto laptop 6 printer printerq laptopq printerq reactsto printer 6 laptop statement reflect fact disconnect may take place moment one compon know chang actual propag remot compon local behavior updat histori variabl must exactli case although reaction given may meet inform expect share variabl connect continu subtl issu aris disconnect reconnect allow instanc disconnect take place laptop printer separ ident copi queue chang made independ instanc laptop add item printer delet item inconsist state aris may present problem upon connect semant given well defin case whichev compon make first assign reconnect queue copi propag compon may undesir document alreadi print may reinsert queue document ad laptop disconnect may lost instead wipe chang would like integr accord programmerspecifi polici inspir look filesystem databas like 9 10 oper disconnect mode program variabl would replic file record databas updat propag possibl connect avail system also provid way programm specifi reintegr polici indic valu variabl take connect reestablish period disconnect call engag valu programm may also wish specifi valu variabl upon disconnect call disengag valu exam ple print queue exampl may extend follow laptopq printerq laptop engag laptopq delta printerq disengag ffl printerq engag valu specifi upon reconnect share queue take valu construct append printerq laptopq disengag construct contain two valu first assign laptopq second assign printerq upon disconnect valu given empti laptopq leav printerq untouch justifi queue would realist resid printer period disconnect laptop would access howev document append queue laptop append print queue upon reconnect formal construct would translat reaction take place chang connect statu detect add auxiliari histori variabl time record statu connect denot statu laptopqprinterq engag add laptopq printerq statu laptopqprinterq laptopq integr valu connect statu chang disengag add laptopq printerq statu laptopqprinterq ffl printerq fals reactsto statu laptopqprinterq printer 6 laptop assign differ valu variabl connect statu chang absenc interfer statement execut disabl system like 9 10 definit notion reintegr polici like engag valu client reconnect fileserv two replica come contact specif disengag valu may less practic signific unless disconnect predict advanc although feasibl rapidli reconfigur system like mobil telephon network may fact good abstract file hoard polici 9 carri user prepar take laptop home end workday instanc predict disconnect possibl everi situa tion exampl tri model directli mobil telephon system user travel base station without warn also oper system wireless laptop may attempt hide mobil construct descript definit readonli transient share ax read ax axbi ax ax ax reactsto ax 6 axbi p axbi ax reactsto p readwrit transient share engageax p valu e engag 1 ax statu axbi e e true disengageax p valu disengag 2 ax statu axbi 1 2 fals reactsto statu axbi p transient share notat construct user written way handl sudden unpredict disconnect system would also robust network failur directli relat locat well known result imposs distribut consensu presenc failur 21 provid engag disengag semant set possibl probabilist sens may adequ consid instanc phenomenon metast state 22 almost everi comput devic use today subject probabl failur due metast probabl low almost never consid reason system similarli robust implement engag disengag may possibl howev basic semant impli distribut consensu fact implement transient share construct given relationship two variabl composit natur way instanc suppos would like distribut print job among two differ printer could accomplish simpli ad anoth share relationship form printerq printer2q true specifi queue share printer2 alway printer would atom access share queue could remov item head print reactsto statement execut fix point chang one three variabl propag two laptop coloc printer transit major factor contribut construct modular system allow statement one compon farreach implicit effect specifi explicitli program code compon summari notat develop section appear tabl also break construct two unidirect share relationship gener combin arbitrari way rememb proof correct requir proof r termin everi construct correct exampl cycl share relationship two differ variabl given cycl set distinct valu assign statement possibl prove termin analag uniti restrict statement assign uniqu valu lefthand variabl also termin r may difficult prove engag disengag valu caus predic chang valu transient share abstract present shown promis way manag complex con current mobil system base familiar program paradigm share memori provid mechan express highli decoupl contextdepend sy tem abstract appar good one lowlevel wireless commun mutual exclus protocol implement abstract coarser level granular may simpl gener exist repli cation transact consist algorithm section present formal definit concept facilit reason system make use iv transient synchron previou section present new abstract share state among mobil compon share necessarili transient locat depend compon involv execut asynchron ever synchron execut statement also central part mani model distribut system section investig new highlevel construct synchron statement system mobil compon tri gener synchron mechan exist nonmobil model exampl csp 23 provid 1 engag use without correspond disengag extra reaction must ad reset statu axbi fals p becom fals similarli disengag use without correspond en gagement extra reaction must ad set statu axbi true p becom true mccann roman composit program abstract mobil comput 11 gener model comput carri static set sequenti process commun clude pure synchron accomplish via block asymmetr synchron twoparti interact call putoutput command io automata model 24 commun via synchron name output action possibl mani input action name statement synchron also part uniti model provid methodolog prove properti system express histori variabl construct layer sy tem synchron composit also use refin process 25 although emphasi composit mobil program rather refin uniti synchron execut express via su perposit new system construct underli program collect new statement goal preserv properti underli program new system new statement must assign valu variabl underli program way execut behavior allow underli program execut isol also allow new superpos system properti underli program mention underli variabl proven text underli program preserv augment statement may use keep histori underli variabl present abstract underli system servic higher layer environ uniti superposit excel exampl synchron use part design methodolog distribut system also show import distinct notion synchron construct new atom statement two simpler atom statement execut par allel notion synchron comput system model character bound commun comput delay 26 latter import compon current understand distribut system mani circumst perhap prerequisit implement former focu rather examin mechan allow us compos program combin group statement new one parallel execut idea statement coexecut inspir uniti superposit howev superposit limit two import way first superpos system static defin synchron relationship fix throughout execut system continu theme model mobil kind transient program composit would like abil specifi dynam chang locat depend form synchron particip may enter leav synchron relationship comput evolv static form statement synchron limit discuss 27 second superposit asymmetr relationship subsum one program anoth disallow commun superpos underli program sourc strong formal result program properti restrict may appropri mobil comput domain two program may desir make use other servic carri bidirect commun make use abstract synchron inspir uniti superposit combin statement new atom action explor synchron mechan mobil comput main take form coordin construct involv statement two separ program inform idea allow programm specifi two statement combin one atom action given condit true exam ple consid two program b contain integ x b contain integ assum statement name increment program aincrement increment bincrement increment let us assum program mobil contain variabl commun coloc also assum counter repres valu must increment simultan two host togeth might use follow notat interact section specifi coordin aincrement ed bincrement note prohibit statement execut independ program co locat correct criteria state counter must remain synchron time could add follow two inhibit claus interact section inhibit aincrement inhibit bincrement distinct standard uniti superposit ed construct mechan synchron pair statement rather specifi transform underli program also interact transient locat depend instead static fix throughout system execut reason formal transient statement synchro nizat must express use lowerlevel primit basic idea statement react select execut execut atom step accomplish separ select statement actual execut assum exampl statement form asdriv phase go phase idlei asactionka f fals reactsto phase f true reactsto phase idl 5 phase auxiliari variabl hold valu set fgo idleg asact actual assign must take place note asact react valu go phase f simultan set fals action execut phase return idl flag f reset true cycl occur nonreact statement asdriv select fairli along nonreact statement asact react transact net effect asact list simpl nonreact state ment howev express statement three line give us access control key part statement select execut process im portantli provid statement synchron simpli share phase variabl two statement assum statement form given equat 5 defin ed ed bt r delta whenev one statement select execut execut asdriv btdriver correspond phase variabl propag statement reactiv execut btaction asact pro ceed also transit multiway share give us transit multiway synchron note wish disabl particip execut inhibit must sure inhibit particip level name driver transact inhibit may still fire reactiv ed use synchron statement inhibit call ed oper coselect repres simultan select statement execut use interact section sy tem embodi assumpt statement execut control phase variabl equat 6 semant equat 5 6 realli guarante simultan execut statement sens uniti k rather statement execut interleav order r mani case equival simultan execut neither statement evalu variabl assign howev may case desir statement evalu right handsid old state without use valu set statement case add anoth comput phase equat 5 model evalu righthand side separ step assign lefthand variabl asdriv phase load phase store phase idlei asloadka lf fals reactsto phase load lf asstoreka sf fals reactsto phase store sf reactsto phase idl 7 phase variabl may hold valu set fload store idleg origin asact split two statement one evalu one assign asload assum evalu righthand side asact store result intern variabl given explicitli asstor assum assign valu lefthand variabl asact way statement still synchron share phase variabl equat 6 statement evalu righthand side load phase assign lefthand variabl store phase reset two flag idl phase prevent interfer two synchron statement even two connect indirectli long chain synchron relationship even variabl assign statement share indirectli exampl return increment exampl consid follow set interact aincrement ed bincrement statement aincrement bincrement syn chroniz variabl ax indirectli share variabl via intermedi variabl cz predic r true increment statement form given equat 5 chang one variabl may inadvert use comput increment valu variabl seem violat intuit semant simultan execut con trast increment statement form given equat 7 separ load phase comput righthand side assign statement share variabl assign phase assign share variabl associ reactiv propag valu reserv store phase isol assign statement one anoth prevent unwant commun may situat howev wish two statement commun synchron exe cution strategi central model like csp io automata commun occur along synchron execut statement csp channel use commun valu singl sender singl receiv io automata pass arbitrari paramet output statement samenam input mccann roman composit program abstract mobil comput 13 statement exampl give construct express io automatastyl synchron recal automaton set input action set intern action set output action execut action may modifi state machin belong addit execut output action take place simultan execut input action name machin assum output action form similar equat 5 import addit asdriv param exp phase go phase idlei asactionka f fals reactsto phase f true reactsto phase idl 8 ad assign param exp first statement transact assign model bind output paramet list auxiliari variabl param exp assum vector express may refer program variabl exampl assum moment function aincrement statement earlier exampl increment variabl valu e function current state assum also bincrement must increment amount two coloc valu could model paramet aincrement p synchron aincrement would form given equat 8 aincrementdriv hincrement p e increment phase go increment phase idlei x increment p ka f fals reactsto phase f true reactsto phase idl bincrement could also form perhap differ express e increment valu could express share paramet interact aincrement synchron statement aincrement ed bincrement thu either statement may execut driver transact first phase assign valu paramet propag compon second phase trigger execut statement third reset flag associ statement easili make use guard statement specifi mani differ interest form synchron use appropri tailor inhibit claus exampl addit definit coselect defin equat 5 6 specifi notion coexecut ad mean coloc statement may execut guard enabl might defin coexecutea bt r phase bt phase r inhibit asdriv r asguard btguard inhibit btdriver r asguard btguard still allow statement execut isol coloc contrast might requir statement may execut isol disconnect call exclus coexecut could specifi xcoexecutea bt r phase bt phase r inhibit asdriv r asguard btguard inhibit btdriver r asguard btguard similar notion exclus coselect could defin ignor guard statement xcoselecta bt r phase bt phase r inhibit asdriv r inhibit btdriver r construct could gener pass paramet sender receiv gener driver statement form specifi equat 8 either statement may bind paramet propag long share specifi bidirect driver statement inhibit semant transact mean finish anoth allow begin ambigu statement current execut conflict assign paramet synchron execut also could use statement form equat 7 instead equat 5 provid truli simultan access instead interleav access share variabl might referenc assign variou action contrast symmetr form synchron consid far coordin action model io automata csp asymmetr model action divid input output class paramet pass output action input action two model differ number particip synchron io automata capabl express onetomani synchron style csp emphas pairwis rendezv output action input action synchron style express mobil uniti appropri use transact variabl share inhibit exampl onetomani synchron paramet pass simul 14 ieee transact softwar engin vol xx x month 1998 quantifi set oneway variabl share relationship output statement execut transact input statement simpli reactiv rendezv style synchron phase variabl must propag one input action ensur flag set first nondeterminist chosen reactiv statement prevent propag take place cours aspect csp dynam creation delet term could easili captur unitystyl model fundament differ underli approach similarli discuss io automata assum accept model whole set ioa action one parameter uniti action may appropri everi case even model basic synchron mechan two model mobil uniti use exercis point examin mani differ form synchron show versatil broad applic model field mobil comput new predict highlevel abstract becom domin gain accept research commun howev believ exampl show mobil uniti least formal direct gener mobil set exist mechan synchron statement execut model nonmobil concurr good reason believ capabl express new construct may propos futur v discuss mobil uniti notat logic present paper result care reevalu implic mobil uniti took start point notion mobil compon model program explicit addit auxiliari variabl repres locat interact compon model form dynam program composit addit coordin construct unitystyl composit includ union super posit led new set basic program construct amen dynam mobil set previou work extend uniti proof logic handl pairwis form interact paper present modular composit construct transient share synchron allow multiparti interact among compon appli construct lowlevel commun task attempt show basic notat use realist specif involv discon nection seemingli strong reactiv semant match well need express dynam chang sideeffect atom action final explor express power new notat examin new transient form share variabl synchron mostli natur extens compar nonmobil abstract interprocess communicationinde other may propos radic differ commun abstract mobil comput notat abl express formal extens consid promis use research tool investig whatev new abstract may appear plan futur work includ applic mobil uniti distribut databas consist semant capabl continu oper presenc disconnect problem recent receiv attent engin research commun formal reason import role play commun understand propos solut well assumpt made vi acknowledg paper base upon work support part nation scienc foundat unit state grant number ccr9217751 ccr9624815 opinion find conclus recommend express paper author necessarili reflect view nation scienc foundat r parallel program design foundat formal deriv concurr pro gram exampl industri calculu mobil process foundat actor semant actor model concurr comput distribut system asynchron model local fail ure process mobil distribut process locat failur experi disconnect oper mobil comput environ manag updat conflict bayou weakli connect replic storag system mobisa inform system mobil wireless comput environ contextawar comput applic ip mobil support mobil uniti coordin construct appli packet forward mobil host algebra verif mobil network specif proof algorithm locat manag mobil commun devic mobil uniti reason specif mobil comput ing logic concurr program safeti logic concurr program progress axiomat basi comput program imposs distribut consensu one faulti process anomal behavior synchron arbit circuit commun sequenti process introduct putoutput automata fundament objectori specif model collect behavior minim synchron need distribut consensu dynam synchroni among atom action tr ctr gruiacatalin roman ami l murphi rapid develop depend applic ad hoc network acm sigsoft softwar engin note v25 n1 p7778 jan 2000 gian pietro picco ami l murphi gruiacatalin roman develop mobil comput applic lime proceed 22nd intern confer softwar engin p766769 june 0411 2000 limerick ireland gruiacatalin roman christin julien jami payton model adapt behavior context uniti theoret comput scienc v376 n3 p185204 may 2007 camelia zlatea tzilla elrad design methodolog mobil distribut applic base uniti formal communicationclos layer proceed eighteenth annual acm symposium principl distribut comput p284 may 0406 1999 atlanta georgia unit state cecilia mascolo gian pietro picco gruiacatalin roman finegrain model code mobil acm sigsoft softwar engin note v24 n6 p3956 nov 1999 l murphi gc roman g varghes exercis formal reason mobil commun proceed 9th intern workshop softwar specif design p25 april 1618 1998 gian pietro picco ami l murphi gruiacatalin roman lime linda meet mobil proceed 21st intern confer softwar engin p368377 may 1622 1999 lo angel california unit state gruiacatalin roman peter j mccann notat logic mobil comput formal method system design v20 n1 p4768 januari 2002 guido menkhau architectur support multidevic clientadapt servic annal softwar engin v13 n14 p309327 june 2002 tore fjellheim stephen millin marlon duma julien vayssir processbas methodolog design eventbas mobil composit applic data knowledg engin v61 n1 p622 april 2007 cecilia mascolo gian pietro picco gruiacatalin roman codeweav explor finegrain mobil code autom softwar engin v11 n3 p207243 june 2004 k gupta p k srimani adapt core select migrat method multicast rout mobil ad hoc network ieee transact parallel distribut system v14 n1 p2738 januari gruiacatalin roman jami payton principl explor coordin model theoret comput scienc v336 n23 p367401 26 may 2005 peter j mccann gruiacatalin roman model mobil ip mobil uniti acm transact softwar engin methodolog tosem v8 n2 p115146 april 1999 ichiro satoh build select mobil agent network manag journal network system manag v14 n1 p147169 march 2006 gianluigi ferrari c montangero l semini semprini mark reason kit mobil autom softwar engin v9 n2 p137150 april 2002 michel wermeling jo luiz fiadeiro graph transform approach softwar architectur reconfigur scienc comput program v44 n2 p133155 august 2002 gian pietro picco gruiacatalin roman peter j mccann reason code mobil mobil uniti acm transact softwar engin methodolog tosem v10 n3 p338395 juli 2001 michel wermeling jo luiz fiadeiro algebra softwar architectur reconfigur acm sigsoft softwar engin note v24 n6 p393409 nov 1999 wolfgang emmerich cecilia mascolo anthoni finkelstein implement increment code migrat xml proceed 22nd intern confer softwar engin p397406 june 0411 2000 limerick ireland ami l murphi gian pietro picco gruiacatalin roman lime coordin model middlewar support mobil host agent acm transact softwar engin methodolog tosem v15 n3 p279328 juli 2006 dianxiang xu jianwen yin yi deng junhua ding formal architectur model logic agent mobil ieee transact softwar engin v29 n1 p3145 januari p ciancarini f franz c mascolo use coordin languag specifi analyz system contain mobil compon acm transact softwar engin methodolog tosem v9 n2 p167198 april 2000 gruiacatalin roman gian pietro picco ami l murphi softwar engin mobil roadmap proceed confer futur softwar engin p241258 june 0411 2000 limerick ireland