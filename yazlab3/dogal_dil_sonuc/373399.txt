hierarch gui test case gener use autom plan abstractth widespread use gui interact softwar lead construct complex gui grow complex come challeng test correct gui underli softwar present new techniqu automat gener test case gui exploit plan welldevelop use techniqu artifici intellig given set oper initi state goal state planner produc sequenc oper transform initi state goal state test case gener techniqu enabl effici applic plan first creat hierarch model gui base structur gui model consist hierarch plan oper repres possibl event gui test design defin precondit effect hierarch oper input plangener system test design also creat scenario repres typic initi goal state gui user planner gener plan repres sequenc gui interact user might employ reach goal state initi state implement test case gener system call plan assist tester graphic user interfac system path experiment evalu practic effect describ prototyp implement path report result control experi gener test case microsoft wordpad b introduct g raphic user interfac gui becom import accept way interact day softwar although make softwar easi use user perspect complic softwar develop process 1 2 particular test gui complex test convent softwar underli softwar test gui must exercis test check whether confirm gui specif even tool use gener gui automat 3 4 5 tool may contain error may manifest gener gui lead softwar failur henc test gui continu remain import aspect softwar test test correct gui difficult number reason first space possibl interact gui enorm sequenc gui command result differ state gui command may need evalu state larg number possibl state result larg number input author depart comput scienc univers pittsburgh pittsburgh pa 15260 usa second author also intellig system program email fatif pollack soffagcspittedu permut 6 requir extens test eg microsoft releas almost 400000 beta copi windows95 target find program failur 7 anoth problem relat determin coverag set test case convent softwar coverag measur use amount type underli code exercis measur work well gui test matter much code test mani differ possibl state softwar piec code test import aspect gui test verif state step test case execut incorrect gui state lead unexpect screen make execut test case useless sinc event test case may match correspond gui compon screen thu execut test case must termin soon error detect also verif check insert step may becom difficult identifi actual caus error final regress test present special challeng gui inputoutput map remain constant across success version softwar 1 regress test especi import gui sinc gui develop typic use rapid prototyp model 8 9 10 11 import compon test gener test case manual creation test case maint nanc evalu conform coverag criteria time consum thu autom necessari test gui paper present new techniqu automat gener test case gui system approach exploit plan techniqu develop use extens artifici intellig ai key idea test design like good idea possibl goal gui user simpler effect specifi goal specifi sequenc event user might employ achiev test case gener system call plan assist tester graphic user interfac system path take goal input gener sequenc event automat sequenc event plan becom test case gui path first perform autom analysi hierarch structur gui creat hierarch oper use plan gener test design describ precondit effect plan oper subsequ input planner hierarch oper enabl use effici form plan specif gener test case set initi goal state input plan system perform restrict form hierarch plan gener produc multipl hierarch plan implement path demonstr effect effici set experi import contribut method present paper includ follow ffl make innov use well known use techniqu ai shown capabl solv problem larg state space 12 combin uniqu properti gui plan abl demonstr practic automat gener test case use plan ffl techniqu exploit structur featur present gui reduc model size complex improv effici test case gener ffl exploit structur gui use hierarch plan make regress test easier chang made one part gui affect entir test suit gener test case updat make local chang ffl platform specif detail incorpor end test case gener process increas portabl test suit portabl import gui test 13 assur test case written gui system one platform also work platform ffl techniqu allow reus oper definit commonli appear across gui definit maintain librari reus gener test case subsequ gui next section give brief overview path use exampl gui section iii briefli review fundament ai plan gener section iv describ plan appli gui test case gener problem section v describ prototyp system path give time result gener test case discuss relat work autom test case gener gui section vi conclud section vii ii overview section present overview path exampl goal provid reader highlevel overview oper path highlight role test design overal test case gener process detail algorithm use path given section iv gui typic consist compon label ton menu popup list gui user interact compon turn gener event ex ampl push button prefer gener event call prefer event open window addit visibl compon screen user also gener event use devic mous keyboard purpos model gui two type window gui window object window gui window contain gui compon wherea object window contain gui compon object window use display manipul object eg window use display text ms wordpad select fig 1 exampl gui figur present small part mswordpad gui gui use load text file manipul text cut past save text anoth file highest level gui pulldown menu two option file edit gener event make compon avail exampl file event open menu new open save savea option edit event open menu cut copi past option use cut copi past object respect main screen open savea event open window sever compon open window shown savea window similar compon use travers directori hierarchi select file move one level directori hierarchi select use either enter subdirectori select file window close select either open cancel central featur path plan gener sy tem autom plan gener wide investig use within field artifici intellig input planner initi state goal state set oper appli set object oper model event usual describ term precondit effect condit must true action perform condit true action perform solut given plan problem sequenc instanti oper guarante result goal state execut initi state 1 exampl gui oper relat gui event consid figur 2a show collect file store directori hierarchi content file describ simplest case ai plan literatur includ mani techniqu extens plan uncertainti 14 consid techniqu paper text must modifi text must modifi need modifi need modifi text text b text must modifi text must modifi need modifi need modifi text text final text final text newdoc fig 2 task plan system initi state b goal state shown box directori structur shown explor window assum initi state contain descript directori structur locat file content file use file wordpad gui defin goal creat new document shown figur 2b store file newdoc rootpubl directori figur 2b show goal state contain addit old file new file store rootpubl directori note newdoc obtain numer way eg load file documentdoc delet extra text type word final load file doc2doc insert text creat document scratch type text test case gener process partit two phase setup phase plangener phase first step setup phase path creat hierarch model gui return list oper model test design use knowledg gui test design defin precondit effect oper simpl languag provid plan system second plangener phase test design describ scenario task defin set initi goal state test case gener fi nalli path gener test suit scenario test design iter plangener phase number time defin scenario generat role test design path test case gener phase step test design path hierarch gui oper precondit effect oper plan gener 3 4 gener test case iter 3 4 multipl scenario ing test case tabl summar task assign test design automat perform path exampl gui simplest approach step 1 would path identifi one oper gui event eg open file cut past name conven tion disambigu meaning prefix whenev name test design would defin precondit effect event shown figur 3a although conceptu simpl approach ineffici gener test case gui result larg number oper mani event eg file edit mere make event po sibl interact underli softwar altern model scheme one use work model domain hierarch highlevel oper decompos sequenc lower level one although highlevel oper could principl develop manual test design path avoid inconveni automat perform abstract specif path begin model process partit gui event sever class detail partit scheme discuss later section iv event class use path creat two type plan oper systeminteract oper abstract oper systeminteract oper deriv gui event gener interact underli softwar exampl path defin system interact oper edit cut cut text exampl gui window exampl system interact oper edit past file save second set oper gener path set abstract oper discuss detail section iv basic idea abstract oper repres sequenc gui event invok window monopol gui interact restrict focu user specif rang event window abstract oper encapsul event restrictedfocu window treat interact within window separ plan problem abstract oper need decompos lower level oper explicit call planner exampl gui new open save savea cut copi past openup openselect opencancel openopen plan oper filenew fileopen filesav filesavea editcut editcopi editpast b fig 3 exampl gui origin gui event b plan oper deriv path ii operatorev map exampl gui oper name oper type gui event file new sy interact file new file open abstract file open file save sy interact file save file savea abstract file savea edit cut sy interact edit cut edit copi sy interact edit copi sy interact edit past abstract oper includ file open file savea result first step setup phase systeminteract abstract oper determin return plan oper test design plan oper return exampl shown figur 3b order keep correspond origin gui event highlevel oper path also store map call operatorev map shown tabl ii oper name column 1 list oper exampl gui oper type column classifi oper either abstract system interact associ oper correspond sequenc gui event column 3 test design specifi precondit effect plan oper exampl plan oper edit cut shown figur 4 edit cut systeminteract oper oper definit contain two part precondit effect condit precondit must hold gui oper appli eg user gener cut event least one object screen select highlight effect cut event select object move clipboard remov screen languag use defin oper provid planner interfac plan system defin precondit effect difficult knowledg alreadi built gui structur exampl gui structur requir cut made activ visibl object select precis precondit defin exampl oper edit cut figur 4 definit oper pfrh 9duf8vu 9g tprrpiw 9g tryrprqpiw hr file edit cut fig 4 exampl gui plan oper repres event commonli appear across gui cut maintain librari reus subsequ similar applic test design begin gener particular test case input defin oper path identifi task one shown figur 2 defin term initi state goal state path automat gener set test case achiev goal exampl plan shown figur 5 note typeintext oper repres keyboard event plan highlevel plan must translat primit gui event translat process make use operatorev map store model process one translat shown figur 6 figur show abstract oper contain highlevel plan decompos 1 insert expans operatorev map 2 make addit call planner sinc maximum time spent gener highlevel plan desir gener famili test case singl plan goal achiev gener altern subplan lower level subplan gener much faster gener highlevel plan substitut highlevel plan obtain altern test case one altern lowlevel test case gener task shown figur 7 note use nest invoc planner abstractoper decomposit hierarch mechan aid regress test sinc chang made one compon necessarili invalid test case higher level plan still fig 5 plan consist abstract oper gui event lowlevel test case fig 6 expand higher level plan tain local chang made subplan specif chang compon gui also step test case platform independ addit level translat requir gener platformdepend test case use highlevel model gui advantag obtain platformindepend test case iii plan gener provid detail plan gener given initi state goal state set oper set object planner return set step instanti op erat achiev goal mani differ algorithm plan gener propos develop weld present introduct leastcommit plan 15 survey recent advanc plan technolog 16 formal plan problem 4tupl set oper finit set object initi state g goal state note oper definit may contain variabl paramet typic oper correspond singl execut action rather famili action one differ instanti variabl solut lowlevel test case fig 7 altern expans lead new test case plan problem plan tupl set plan step instanc oper typic defin set precondit effect set order constraint element l set causal link repres causal structur plan b set bind constraint variabl oper instanc order constraint form mean step must occur sometim step j necessarili immedi typic order constraint induc partial order step causal link tripl element c effect precondit j 2 note correspond causal link order constraint ie reason track causal link ensur step threaten requir link ie step k result c tempor interven step mention ai planner produc partiallyord plan step order respect one anoth totalord plan deriv partialord plan ad order constraint totalord plan obtain way call linear partialord plan partialord plan solut plan problem everi consist linear partialord plan meet solut condit figur 8a show partialord plan obtain realiz goal shown figur 2 use exampl gui gener c repres proposit unif effect precondit j deletetext need modifi typeintext final text fileopen sampl reportdoc filesavea public newdoc c deletetext need modifi typeintext final text fileopen sampl reportdoc filesavea public newdoc deletetext need modifi typeintext final text fileopen sampl reportdoc filesavea public newdoc l order constraint b fig 8 partialord plan b order constraint plan c two linear figur node label l plan step instanti oper edg repres causal link bind shown paramet oper figur 8b list order constraint directli induc causal link exampl gener plan may includ addit order constraint order constraint specifi deletetext typeintext action perform either order must preced file savea action must perform file open action obtain two legal order shown figur 8c thu two highlevel test case produc may decompos yield number lowlevel test case work employ recent develop plan technolog increas effici plan gener specif gener singlelevel plan use interfer progress planner ipp 17 system extend idea graphplan system 18 plan gener graphplan introduc idea perform plan gener convert represent plan problem proposit encod plan found mean search graph planner graphplan famili includ ipp shown increas plan speed sever order magnitud wide rang problem compar earlier plan system reli firstord logic represent graph search requir unif unbound variabl 18 ipp use standard represent action precondit effect parameter subsequ process perform convers proposit form 3 common plan ipp produc partialord plan ipp form plan singl level abstract techniqu develop ai plan gener plan multipl level abstract call hierarch task network htn plan 19 htn plan domain action model differ level abstract oper level n one specifi one method level n gamma 1 method singlelevel partial plan say action decompos method htn plan focus resolv conflict among altern method decomposit level gui test case gener problem unusu experi least model hierarch plan requir conflict resolut decom posit thu abl make use restrict form hierarch plan assum decomposit compat hierarch plan valuabl gui test case gener gui typic larg number compon event use hierarchi allow us conceptu decompos gui differ level abstract result greater plan effici result conceptu shift plan maintain differ abstract level subsequ modif made gui toplevel plan usual need regener scratch stead subplan lower level abstract af fect subplan regener reinsert larger plan aid regress test iv plan gui test case describ ai plan techniqu gener present detail use plan path gener test case gui develop represent gui oper develop plan system test gui first step construct oper set plan problem discuss section ii simplest approach defin one oper gui event ineffici result larg number oper exploit certain structur properti gui construct oper differ level abstract oper deriv process begin partit gui event sever class use certain structur properti gui note classif base structur properti gui thu done automat path use simpl depthfirst travers algorithm gui travers open menu window click button conveni name oper taken label buttonmenuitem repr sent note sever commerci avail tool also 3 fact ipp gener graphplan precis increas express power represent languag allow condit univers quantifi effect perform travers gui eg winrunn mercuri interact corpor classif gui event employ follow menuopen event open menu ie expand set gui event avail user definit menuopen event interact underli softwar common exampl menuopen event gener button open pulldown menu eg file edit unrestrictedfocu event open gui window restrict user focu mere expand set gui event avail user exam ple ms powerpoint softwar basic shape display unrestrictedfocu window purpos test case gener event treat exactli manner menuopen event use expand set gui event avail user restrictedfocu event open gui window special properti invok monopol gui interact restrict focu user specif rang event within window window explicitli termin prefer set exampl restrictedfocu event mani gui system user click edit prefer window open user spend time modifi prefer final explicitli termin interact either click ok cancel systeminteract event interact underli softwar perform action common exampl includ cut past text open object window classif event use creat two class plan oper systeminteract oper repres sequenc zero menuopen unrestrictedfocu event follow systeminteract event consid small part exampl gui one pulldown menu one option edit open give option ie cut past event avail user edit cut past edit menuopen event cut past system interact event use inform follow two systeminteract oper obtain exampl operatorev map relat systeminteract oper gui event operatorev map fold menu open unrestrict focu event system interact oper therebi reduc total number oper made avail planner result greater plan effici map use replac systeminteract oper correspond gui event gener final test case exampl event edit cut past hidden planner systeminteract oper name edit cut edit past made avail abstract prevent gener test case edit use isol ie model forc use edit either cut past therebi restrict attent meaning interact underli softwar 4 abstract oper creat restrictedfocu event abstract oper encapsul event underli restrictedfocu window creat new plan problem solut repres event user might gener focus interact abstract oper implicitli divid gui sever layer abstract test case gener gui level therebi result greater effici abstract oper complex structur sinc contain necessari compon plan problem includ initi goal state set object set oper prefix abstract oper sequenc menuopen unrestrict focu event lead restrictedfocu event sequenc event store operatorev map suffix abstract oper repres restrictedfocu user interact abstract oper decompos two step 1 use operatorev map obtain abstract oper prefix 2 explicitli call planner obtain abstract oper suffix prefix suffix substitut back highlevel plan exampl figur 6 abstract oper file open decompos substitut prefix use map suffix chdir select open invok planner figur 9a show small part exampl gui file menu two option name open savea either event gener result anoth gui window compon made avail compon window quit similar open user exit press open cancel savea user exit press save cancel complet set event avail open savea openselect openup opencancel openopen saveasselect saveasup saveascancel saveassav user select open focu restrict openselect openup opencancel openopen similarli user select savea focu restrict saveasselect saveasup saveascancel saveassav properti lead follow two abstract oper file file addit two operatorev map 4 test case edit stand isol creat 1 test edit separ 2 insert edit random place gener test case savea save file fileopen filesavea abstract abstract c abstract oper templat oper name fileopen initi state determin run time goal state determin run time oper list abstract oper templat oper name filesavea initi state determin run time goal state determin run time oper list b fig 9 open savea window abstract oper b abstract oper templat c decomposit abstract oper use operatorev map make separ call planner yield subplan ping abstract oper definit templat creat oper shown figur 9b templat contain essenti compon plan problem ie set oper avail restrictedfocus user inter action initi goal state determin dynam point call sinc higherlevel plan problem alreadi solv invok planner abstract opera tor precondit effect highlevel abstract oper use determin initi goal state subplan highest level abstract planner use highlevel oper ator ie file open file savea construct plan exampl figur 9c highlevel plan contain file open decompos file open requir 1 retriev correspond gui event store operatorev map file open 2 invok planner return subplan select open file open replac sequenc abstract systeminteract oper given input planner oper set return run exampl shown figur 3b initi state containsroot privat containspriv figur containspriv latex containslatex containspriv cours containspriv thesi containsroot public containspubl html containshtml gif containsfilegif doc2doc containsfilepriv documentdoc containsfilesampl reportdoc currentfonttim normal indoc2doc indoc2doc indoc2doc indoc2doc text afterthi afteri afterth text fontthi time normal 12pt fonti time normal 12pt fontth time normal 12pt fonttext time normal similar descript documentdoc reportdoc goal state containsfilepubl newdoc innewdoc innewdoc innewdoc innewdoc final innewdoc text afterthi afteri afterth final afterfin text fontthi time normal 12pt fonti time normal 12pt fontth time normal 12pt fontfin time normal fonttext time normal fig 10 initi state chang need reach goal state b model initi goal state gener test case test design begin gener particular test case identifi task consist initi goal state see figur 2 test design code initi goal state use tool automat produc code 5 code initi state chang need achiev goal state shown figur 10 task specifi system automat gener set test case achiev goal algorithm gener test case discuss next c algorithm gener test case test case gener algorithm shown figur 11 oper assum avail make call algorithm ie step 13 test case gener process shown tabl must complet make call algorithm paramet line includ compon plan problem threshold control loop algorithm loop line 812 contain explicit call planner phi return plan p record oper set planner return altern plan next iter line 11 end loop plan list contain partialord plan partialord plan linear line 1316 lead multipl linear plan initi test case highlevel linear plan 5 tool would develop enabl user visual describ gui initi goal state tool would translat visual represent code eg code shown figur 10 line algorithm gentestcas oper set fig 11 complet algorithm gener test case line 17 decomposit process lead lower level test case highlevel oper plan need expandeddecompos get lower level test case step systeminteract oper oper event map use expand line 2022 ever step abstract oper decompos lower level test case 1 obtain gui event operatorev map 2 call planner obtain subplan 3 substitut result higher level plan extract function use access plan problem compon line 2427 lowest level test case consist gui event return result algorithm line 33 note earlier one main advantag use planner applic automat gener altern plan goal gener altern plan import model variou way differ user might interact gui even tri achiev goal ai plan system typic gener singl plan assumpt made heurist search control rule ensur first plan found high qualiti plan path gener altern plan follow two way 1 gener multipl linear partialord plan recal earlier discuss order constraint induc partial order set solut linear plan step consist free choos linear order consist partial order possibl linear order partialord plan result famili test case multipl linear partialord plan shown earlier figur 8 2 repeat plan process forc planner gener differ test case iter v experi prototyp path develop sever set experi conduct ensur path practic use experi execut pentium base comput 200mb ram run linux os summari result experi given follow section gener test case multipl task path use gener test case microsoft wordpad exampl gener highlevel test case shown tabl iii total number gui event wordpad determin approxim 325 analysi path reduc set 32 systeminteract abstract oper ie roughli ratio reduct number oper impress help speed plan gener process shown section vb defin precondit effect 32 oper fairli straightforward averag oper definit requir 5 precondit effect complex oper requir 10 precondit effect sinc mous keyboard event part gui three addit oper mous keyboard event defin tabl iv present cpu time taken gener test case ms wordpad row tabl repres differ plan task first column show task second column show time need gener highestlevel plan third column show averag time spent decompos subplan fourth column show total time need gener test case ie sum two previou column result show maximum time spent gener highlevel plan column 2 highlevel plan use gener famili test case substitut altern lowlevel subplan subplan gener rel faster averag shown column 3 amort cost plan gener multipl test case plan 9 took longest time gener linear obtain 2 highlevel plan decompos give sever lowlevel test case shortest consist 25 gui event plan shown tabl iii high level ab straction mani chang made gui effect plan make regress test easier less expens exampl none plan tabl iii wordpad plan gener task figur 2 plan plan plan step action contain lowlevel physic detail gui chang made font color etc affect test suit way chang modifi function gui also readili incorpor exampl wordpad gui modifi introduc addit file open featur highlevel plan remain chang need subplan gener abstract oper fileopen henc cost initi plan amort larg number test case also implement autom test execut sy tem test case could automat execut without human intervent automat execut test case involv gener physic mousekeyboard event sinc test case repres high level abstract translat highlevel action physic event actual screen coordin button menu etc deriv layout inform b hierarch vs singlelevel test case gener second experi compar singlelevel test case gener hierarch test case gener techniqu recal singlelevel test case iv time taken gener test case wordpad task plan sub total time plan time sec time sec 3 317 000 317 9 4047 004 4051 gener techniqu plan done singl level abstract oper onetoon correspond gui event hand hierarch test case gener approach hierarch model oper use result experi summar tabl v shown cpu time 6 differ task column 1 show task show length test case gener use singlelevel approach column 3 show correspond cpu time task use gener anoth test case time use hierarch oper column 4 show length highlevel plan column 5 show time need gener highlevel plan decompos plan 1 obtain hierarch algorithm expand give plan length 18 ie exactli plan obtain run correspond singlelevel algorithm time result show hierarch approach effici singlelevel approach result smaller number oper use plan problem experi demonstr import hierarch model process key effici test case gener small number plan oper level plan gui becom com plex model algorithm abl obtain increas number level abstract perform exploratori analysi much larger gui microsoft word automat model process reduc number oper ratio 20 1 vi relat work current tool aid test design test process includ recordplayback tool 20 21 tool record user event gui screen interact session record session later play back whenev necessari recreat gui state sever attempt made autom test case gener gui one popular techniqu program test case gener 22 comprehens test ing program requir test design code compar singl level hierarch approach indic plan found 1 hour singl level hierarch task plan time plan time length sec length sec 4 26 331272 6 718 possibl decis point gui howev approach time consum suscept miss import gui decis number research effort address autom test case gener gui sever finitest machin model propos gener test case 23 24 25 26 approach softwar behavior model fsm input trigger transit fsm path fsm repres test case fsm state use verifi soft ware state test case execut approach use extens test gener test hardwar circuit 27 advantag approach fsm built test case gener process automat rel easi model gui fsm user action lead new state transit model user action howev major limit approach especi import limit gui test fsm model scale problem 28 aid scalabl techniqu variat variabl finit state machin vfsm model propos shehadi et al 28 test case also gener mimic novic user 7 approach reli expert manual gener initi sequenc gui event use genet algorithm techniqu modifi extend sequenc assumpt expert take direct path solv problem use gui wherea novic user often take longer path although use gener multipl test case techniqu reli expert gener initi sequenc final test suit depend larg path taken expert user ai plan found use gener focus test case 29 robot tape librari command languag main idea test case command languag system similar plan given initi state tape librari desir goal state planner gener plan execut softwar test case note although techniqu similar approach sever differ exist major differ 29 command languag model distinct oper approach work well system rel small command languag howev gui typic larg number possibl user action hierarch approach need vii conclus paper present new techniqu test gui softwar show potenti valu test design toolbox techniqu employ gui task consist initi goal state gener test case key idea use task guid test case gener test design like good idea possibl goal gui user simpler effect specifi goal specifi sequenc event achiev techniqu uniqu use automat plan system gener test case gui event interact use descript gui automat gener altern sequenc event pair initi goal state iter invok planner demonstr techniqu practic use gener test case popular ms wordpad softwar gui experi show plan approach success gener test case differ scenario develop techniqu decompos gui multipl level abstract techniqu make test case gener intu itiv also help scale test gener algorithm larger gui experiment show hierarch model approach necessari effici gener test case hierarch test case gener also aid perform regress test chang made one part gui invalid test case chang made lower level test case retain highlevel test case repres test case high level abstract make possibl finetun test case implement platform make test suit portabl map use translat lowlevel test case sequenc physic action platformdepend map maintain librari custom gener test case lowlevel platformspecif test case note current limit approach first test case gener larg driven choic task given planner current path task chosen manual test design poorli chosen set task yield test suit provid adequ coverag current explor develop coverag measur gui second depend heavili hierarch structur gui effici test case gener path given poorli structur gui abstract oper obtain plan depend entir primit opera tor make system ineffici third approach must use conjunct test case gener techniqu adequ test softwar gener case test case gener one task current perform test design definit precondit effect op erat definit commonli use oper maintain librari make task easier also current investig automat gener precondit effect oper gui specif viii acknowledg research partial support air forc offic scientif research f496209810436 nation scienc foundat iri9619579 atif memon partial support andrew mellon predoctor fellowship thank anonym review articl comment brian malloy valuabl sugg tion preliminari version paper appear proceed 21st intern confer softwar engin lo angel may 1999 30 r humancomput interfac difficult design implement integr mvc paradigm objectori framework acceler gui applic develop user interfac softwar tool addi tool autom design visual interfac regress test gui event interact toward automat gener novic user test script user interfac design trench tip shoot hip iter userinterfac design interact scenario develop user interfac prototyp user interfac design evalu applic rapid prototyp tool emsig role domainspecif knowledg plan satisfi framework java gui test condit nonlinear plan introduct least commit plan recent advanc ai plan ex tend plan graph adl subset fast plan plan graph analysi htn plan complex express stress test gui program int grate data captur analysi tool research test graphic user interfac black art gui test autom test gener behavior model test softwar design model finitest machin autom test gener execut report reduc test suit protocol conform test redund identifi cationremov test gener sequenti circuit use implicit state enumer method autom user interfac test use variabl finit state machin test case gener ai plan problem use goaldriven approach gener test case gui tr ctr yanhong sun edward l jone specificationdriven autom test guibas java program proceed 42nd annual southeast region confer april 0203 2004 huntsvil alabama christoph csallner yanni smaragdaki jcrasher automat robust tester java softwarepractic experi v34 n11 p10251050 septemb 2004 atif memon mari lou soffa martha e pollack coverag criteria gui test acm sigsoft softwar engin note v26 n5 sept 2001 fevzi belli christof j budnik test minim humancomput interact appli intellig v26 n2 p161174 april 2007 atif memon mari lou soffa regress test gui acm sigsoft softwar engin note v28 n5 septemb jessica chen suganthan subramaniam specificationbas test guibas applic softwar qualiti control v10 n3 p205224 novemb 2002 avik sinha carol smidt experiment evalu higherorderedtypedfunct specificationbas testgener techniqu empir softwar engin v11 n2 p173202 june 2006 annelies k amschler andrew chunhui zhu michael scheetz eric dahlman adel e howe ai planner assist test gener softwar qualiti control v10 n3 p225259 novemb 2002 modelbas test design techniqu enhanc test domainspecif applic acm transact softwar engin methodolog tosem v15 n3 p242278 juli 2006 qing xie atif memon design compar autom test oracl guibas softwar applic acm transact softwar engin methodolog tosem v16 n1 p4e februari 2007 manish gupta jicheng fu farokh b bastani latifur r khan ling yen rapid goalori autom softwar test use meagraph plan softwar qualiti control v15 n3 p241263 septemb 2007 atif memon adithya nagarajan qing xie autom regress test evolv gui softwar research articl journal softwar mainten evolut research practic v17 n1 p2764 januari 2005 atif memon adithya nagarajan qing xie autom regress test evolv gui softwar journal softwar mainten research practic v17 n1 p2764 januari 2005