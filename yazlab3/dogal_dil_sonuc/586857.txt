approxim throughput multipl machin realtim schedul consid follow fundament schedul problem input problem consist n job k machin job associ releas time deadlin weight process time machin goal find nonpreempt schedul maxim weight job meet respect deadlin give constant factor approxim algorithm four variant problem depend type machin ident vs unrel weight job ident vs arbitrari variant known nphard two variant involv unrel machin also maxsnp hard specif result obtain follow ident job weight unrel machin greedi 2approxim algorithm ident job weight k ident machin greedi algorithm achiev tight frac11kk11kk1 approxim factor arbitrari job weight singl machin lp formul achiev 2approxim polynomi bound integr input 3approxim arbitrari input unrel machin factor 3 4 respect arbitrari job weight k ident machin lpbase algorithm appli repeatedli achiev frac11kk11kk1 approxim factor polynomi bound integr input frac112kk112kk1 approxim factor arbitrari input arbitrari job weight unrel machin combinatori 32sqrt2 approx 5828approxim algorithm b introduct consid follow fundament schedul problem input problem consist n job k machin job associ releas time deadlin weight process time machin goal nd schedul maxim weight job meet deadlin schedul problem frequent refer realtim schedul problem object maxim valu complet job frequent refer throughput consid four variant problem depend type machin ident vs unrel weight job ident vs arbitrari garey johnson 13 see also 14 show even simplest decis problem correspond problem alreadi nphard strong sens decis problem input consist set n job releas time deadlin process time goal decid whether job schedul singl machin within time window show two variant involv unrel machin also maxsnp hard paper give constant factor approxim algorithm four variant problem best knowledg rst paper give approxim algorithm guarante perform approxim factor problem say algorithm approxim factor maxim problem weight solut least 1opt opt weight optim solut note dene approxim factor would alway least 1 specic result obtain list summar tabl given figur 1 weight function ident machin unrel machin ident job weight 2 18 arbitrari job weight 2 18 integr polys input arbitrari job weight 3 278 arbitrari input figur 1 entri contain approxim factor ident job weight unrel machin give greedi 2approxim algorithm ident job weight k ident machin show greedi algorithm achiev tight 11k k approxim factor arbitrari job weight round fraction solut obtain linear program relax problem distinguish case releas time deadlin process time integr polynomi bound case arbitrari former case achiev 2approxim factor singl machin 3approxim factor unrel machin latter case get 3approxim factor singl machin 4approxim factor unrel machin arbitrari job weight k ident machin achiev 11k k approxim factor polynomi bound integr input 112k k approxim factor arbitrari input note k tend inniti factor tend e 158198 e 254149 respect arbitrari job weight unrel machin also present combinatori 3 2 approxim factor 3 comput diculti problem consid due slack time avail schedul job gener time window job schedul may much larger process time interestingli special case slack time solv optim polynomi time even multipl machin 3 moreov problem solv singl machin execut window less twice length job anoth special case consid earlier literatur case job releas time equival case deadlin special case remain nphard even singl machin howev sahni 24 gave fulli polynomi approxim scheme special case problem consid mani applic hall magazin 17 consid singl machin version problem context maxim scientic militari commerci valu space mission mean select schedul advanc set project undertaken space mission individu project typic execut part mission indic 17 25 budget space mission may spent make decis hall magazin 17 present eight heurist procedur nding optim solut togeth comput experi howev provid perform guarante solut produc heurist also mention applic problem patient schedul hospit applic relat work schedul literatur see 8 11 survey 22 preemptiv version problem singl machin studi lawler 21 ident job weight lawler show appli dynam program techniqu solv problem polynomi time extend techniqu obtain pseudopolynomi algorithm arbitrari weight well 21 lawler 20 also obtain polynomi time algorithm solv problem two special case time window job schedul nest ii weight process time opposit order kise ibaraki mine 18 show solv special case releas time deadlin similarli order close relat problem consid adler et al 1 context commun linear network problem messag releas time deadlin transmit bu unit bandwidth goal maxim number messag deliv within deadlin turn approxim algorithm case arbitrari weight appli weight version unbuer case consid 1 obtain constant factor approxim algorithm approxim algorithm given 1 version onlin version problem job appear one one known advanc lipton tomkin 23 consid nonpreempt version onlin problem koren shasha 19 baruah et al 7 consid preemptiv version special case weight job proport process time consid onlin set sever paper 5 10 12 15 16 6 combinatori algorithm arbitrari weight borrow techniqu use onlin case algorithm base round fraction solut obtain linear program lp relax problem lp formul singl machin variabl everi feasibl schedul job constraint job constraint time point naiv implement approach would requir unbound number variabl constraint overcom diculti rst assum releas time deadlin process time polynomi bound integ yield polynomi number variabl constraint allow lp solv polynomi time case arbitrari input show need consid 2 variabl constraint n job yield strongli polynomi run time expens minor degrad approxim factor round lp done reduc problem graph color problem extend result singl machin multipl machin appli singl machin algorithm repeatedli machin machin give gener analysi type algorithm interestingli prove approxim factor case ident machin superior approxim factor singl machin algorithm serv start point similar phenomenon dierent context observ cornuejol fisher nemhaus 9 analysi unrel machin case similar one describ dierent context awerbuch et al 4 unlik ident machin case unrel machin case extens multipl machin degrad perform rel singl machin algorithm specic lp base algorithm appli achiev approxim algorithm schedul problem exampl consid problem comput estim complet time job optim fraction solut appli algorithm use estim complet time deadlin get schedul constant fraction job inde nish complet time observ alreadi appli wein 25 achiev constant factor approxim algorithm variou problem among minimum owtim problem denit notat let job system contain n job job j character quadrupl r g interpret job j avail time r releas time must execut time deadlin process time machin j ij w weight prot associ job note techniqu also extend gener case releas time deadlin job dier dierent machin howev simplic consid case releas time deadlin job machin hard result also prove assumpt refer case job weight unweight model case job weight arbitrari weight model unweight case goal maxim cardin set schedul job refer case process time job machin ident machin model case process time dier unrel machin model unweight job ident machin model job j character triplet r without loss gener assum earliest releas time time feasibl schedul job j machin j time r ij refer job instanc denot j ij job instanc also repres interv time line 0 1 say interv j ij belong job j gener mani interv may belong job set job instanc j 1j 1 feasibl schedul machin correspond interv independ ie overlap belong distinct job weight schedul sum weight job interv job instanc belong case multipl machin need nd feasibl schedul distinct job machin object maxim sum weight schedul distinguish case releas time process time deadlin integ bound polynomi number job case arbitrari input former case refer polynomi bound integr input latter case refer arbitrari input 3 unweight job section consid unweight model dene greedi algorithm analyz perform unrel ident model former model show 2approxim algorithm latter model show kapproxim algorithm 31 greedi algorithm greedi strategi singl machin follow time step start algorithm schedul job instanc nish rst among job schedul later note greedi algorithm take consider deadlin job except determin whether job elig schedul greedi algorithm multipl machin execut greedi algorithm singl machin machin machin dene procedur nextt j j procedur determin job instanc j ij 0 0 earliest among instanc job j start time later machin j interv exist procedur return null otherwis procedur return j ij 0 algorithm 1greedyj j nd feasibl schedul machin j among job j call procedur next repeatedli 1 rst call j 2 assum algorithm alreadi comput let current time let current set job j j n fj g 3 algorithm call nextt j j return either j h1 j h1 null 4 algorithm termin round r return null return set g algorithm kgreedyj nd k schedul job appear schedul call algorithm 1greedi machin machin time updat set j job schedul assum output 1greedyj j rst g j feasibl schedul machin j 1 j 1 algorithm call follow properti algorithm 1greedi use analysi approxim factor algorithm proposit 31 let set job found 1greedyj j job system j g let h feasibl schedul machin j among job j n g jhj jgj proof interv job instanc h exist interv g overlap termin earlier otherwis 1greedi would chosen interv proposit follow feasibl h sinc one interv h overlap end point interv g 2 32 unrel machin base proposit 31 follow theorem state perform kgreedi algorithm unweight job unrel machin model theorem 32 algorithm kgreedi achiev 2 approxim factor unweight job unrel machin model proof let output kgreedi let opt set interv schedul k machin optim solut opt note set consid job job instanc interchang let h set job schedul opt machin j kgreedi schedul machin let set job taken kgreedi opt follow opt proposit 31 impli jh j j jg j j true sinc h j feasibl schedul machin among job pick kgreedi construct schedul machin sinc set h j mutual disjoint hold set g j jhj jgkj sinc jogj jgkj get jopt kj 2jgkj theorem follow 2 33 section analyz kgreedi algorithm unweight job ident machin model show approxim factor case 95 k 1 analysi quit gener use fact algorithm appli sequenti machin machin machin ident let opt k optim schedul k ident machin let algorithm one machin dene k k known approxim factor compar opt k note comparison done algorithm use one machin optim schedul use machin let ak algorithm appli algorithm machin machin k time next theorem bound perform ak use k theorem 33 algorithm ak achiev k k approxim factor k ident machin proof let set job chosen ak ith machin suppos algorithm alreadi chosen set job consid schedul given remov opt k job also chosen optim solut clearli still feasibl schedul cardin least jopt kj therefor denit k set satis ja j 1kjopt kj rearrang term give us equat prove induct assum claim hold 1 appli induct hypothesi equat 1 get rearrang term yield induct claim set prove theorem name appli theorem algorithm kgreedi comput valu k algorithm 1greedi observ algorithm kgreedi inde appli algorithm 1greedi k time assum theorem 33 theorem 34 approxim factor kgreedi unweight job ident machin model proof recal algorithm 1greedi scan interv order end point pick rst possibl interv belong job pick suppos greedi strategi pick set g consid schedul machin number similar argument proposit 31 machin particular job h chosen must job progress g also job must nish particular job h nish thu number job h execut singl machin optim schedul jgj sinc job execut optim schedul dierent machin disjoint get jhj kjgj consequ jopt kj theorem follow set valu k theorem 33 2 34 tight bound greedi subsect construct instanc bound unweight model algorithm greedi tight rst show one machin unrel ident model coincid 2approxim tight next gener construct unrel model prove tight bound 2 k 1 machin final gener construct one machin k 1 ident machin prove tight bound k recal unweight model job character triplet r ident machin model triplet r g unrel machin model 341 singl machin singl machin system contain two job g 1greedi schedul instanc g 1 0 job g 1 schedul instanc h 1 optim solut schedul instanc h 1 0 g 1 2 clearli ratio 2 could repeat pattern time axi obtain ratio number job construct demonstr limit approach algorithm 1greedi approach ignor deadlin therefor capit urgenc schedul job h 1 order miss deadlin gener idea k machin 342 unrel machin machin job system contain 2k job g releas time job 0 deadlin gtype job 3 deadlin htype job 2 length job g machin 1 4 machin length job h machin 2 3 machin note job g h schedul machin sinc job long meet deadlin henc algorithm kgreedi consid two job construct schedul machin result kgreedi select instanc g 0 schedul machin schedul htype job hand optim solut schedul instanc h 0 g 2 machin algorithm kgreedi schedul k job optim algorithm schedul 2k job yield tight approxim factor 2 unweight job unrel machin model 343 dene job system j k given k 1 show j k perform kgreedyj k 1k optj k j 1 system one dene subsect 341 j 2 job system contain 2 set algorithm 2greedi make follow select rst machin 2greedi schedul 6 job type g 1 true sinc job length less length job type g 2 job type h last g 1 type interv termin time 60 henc room g 2 type htype interv deadlin 70 48 length 11 12 second machin 2greedi schedul 4 job type g 2 sinc shorter job type h last g 2 type job termin time 44 leav room anoth job type h job show optim solut schedul job schedul 9 job machin follow note instanc termin deadlin result get ratio readi dene j k k 1 job system contain kk job algorithm kgreedi abl schedul kk1 k k k1 exist optim solut schedul result get ratio j k system compos k job 0 set larg enough number xing forc algorithm kgreedi select machin job type g job thu kgreedi schedul htype job hand optim solut abl construct schedul k machin start schedul 1k htype job rst possibl instanc schedul turn 1k job g k g k order valu allow schedul omit detail set determin deadlin remark valid optim schedul get lower bound deadlin forc kgreedi schedul get upper bound deadlin larg enough upper bound larger lower bound could check follow valu weight job section present approxim algorithm weight job rst present algorithm singl machin unrel machin base round linear program relax problem reappli analysi theorem 33 get better approxim factor ident machin model conclud combinatori algorithm unrel machin ecient easi implement howev achiev weaker approxim guarante 41 approxim via linear program subsect describ linear program base approxim algorithm rst describ algorithm case singl machin gener case multipl machin linear program formul base discret time suppos time axi divid n time slot complex algorithm depend n howev assum n part input discret time ne enough repres feasibl schedul small shift later show get rid assumpt expens slight increas approxim factor linear program relax schedul problem follow way fraction feasibl solut one distribut process job job instanc interv belong restrict given point time sum fraction assign interv belong job exceed 1 end job interv belong ie r would conveni assum x valu 1 n linear program follow maxim subject time slot 1 job 1 n x 1 0 x 1 easi see feasibl schedul dene feasibl integr solut linear program vice versa therefor valu optim fraction solut linear program upper bound valu optim integr solut comput optim solut linear program denot valu variabl x solut q denot valu object function optim solut opt show round optim solut linear program integr solut show linear program use dene color interv collect interv belong set job j regard interv represent interv graph dene set interv independ two interv set set belong job note denit restrict regular independ relat interv graph clearli independ set interv dene feasibl schedul weight independ set p wp dene sum weight job interv belong goal color interv color class induc independ set note interv requir color interv may receiv one color suppos collect color class independ set nonneg coecient exist color class p 1 wp opt2 color class dene approxim solut approxim factor 2 remain show obtain desir color take short detour dene group constrain interv color problem let interv represent maximum number mutual overlap interv 1 suppos interv partit disjoint group group contain 2 interv legal group constrain color interv q color overlap interv allow get color ii interv belong group allow get color theorem 41 exist legal group constrain color interv q use proof use greedi algorithm obtain legal color use 1 interv q left endpoint color interv left right respect order interv consid algorithm color one free color avail time show induct algorithm consid interv alway free color true initi algorithm consid interv q color use q occupi either interv overlap q interv belong group q sinc consid interv sort left endpoint interv overlap q also overlap henc 1 1 interv 2 1 interv belong group q sinc number avail color alway free color 2 back problem color interv let n round fraction q optim solut closest fraction form 0 1 n 0 incur neglig error 1nn factor valu object function gener interv graph 0 replac interv j 2 q n 0 parallel interv dene group constrain color problem 0 group instanc job j note 0 maximum number mutual overlap interv bound n 0 maximum number interv belong group also n 0 theorem 41 exist group constrain color 0 use 2n 0 1 color attach coecient 1n 0 color class clearli sum coecient less 2 also construct sum weight interv color class multipli coecient 1n 0 opt conclud theorem 42 approxim factor algorithm round optim fraction solut 2 note techniqu round fraction solut decompos convex combin integr solut also use alber et al 2 411 strongli polynomi bound diculti linear program formul round algorithm complex algorithm depend n number time slot show choos n polynomi number job n expens lose bit approxim factor first note case releas time deadlin process time integr may assum without loss gener job schedul integr point time addit restrict integ polynomi size number variabl constraint bound polynomi turn attent case arbitrari input let pn n 2 polynomi partit job j two class big slack job j small slack job j obtain fraction solut separ big slack job small slack job rst explain obtain fraction solut big slack job big slack job j nd pn nonoverlap job instanc assign valu 1pn interv note mani nonoverlap interv found sinc r larg enough claim assign ignor comput solut via lp small slack job true point time sum fraction assign interv belong big slack job npn thu eect fraction solut neglig worst case scale fraction correspond small slack job factor 1 npn nevertheless big slack job contribut weight fraction object function restrict attent set small slack job explain comput fraction solut solv lp bound number variabl constraint lp partit time n pn slot instead variabl job instanc consid n 2 pn1 variabl job j n pn jth variabl repres job instanc j start jth time slot similarli consid n pn jth constraint cover jth time slot small slack job j along time axi point r pn dene n pn divid time slot determin adjac divid main observ small slack job j interv fulli contain time slot ie two consecut divid lp formul modi variabl constraint slightli dierent origin formul see consid feasibl schedul mention job instanc fulli contain time slot howev schedul consid may consist two instanc job one termin within time slot start within keep constraint stipul sum variabl correspond interv intersect time slot bound 1 would abl repres schedul formul overcom problem relax linear program allow everi time slot sum fraction assign interv intersect 2 relax linear program follow maxim subject time slot job 1 n x 1 0 x 1 easi see relax guarante valu object function linear program least big valu optim schedul round optim fraction solut way previou section sinc relax constraint note run group constrain interv color algorithm number mutual overlap interv twice number interv group therefor gener color class guarante yield approxim factor 3 conclud theorem 43 approxim factor strongli polynomi algorithm round fraction solut 3 412 unrel machin section consid case k unrel machin rst present linear program formul clariti give lp formul polynomi bound integr input howev construct given achiev strongli polynomi algorithm arbitrari input appli well assum n time slot job j machin j dene variabl x itj instanc maxim subject time slot machin j job 1 n j 0 x itj 1 algorithm round fraction solut machin machin let round solut round machin rst discard fraction solut interv belong job chosen denot approxim factor achiev round singl machin name input arbitrari input theorem 44 approxim factor algorithm round kmachin solut proof let f 1 k denot fraction solut machin let wf denot valu denot f 0 fraction solut machin discard interv belong job chosen know 1 k c ad inequ sinc set mutual disjoint get c recal job sum valu fraction solut assign interv belong machin exceed 1 therefor yield ws subsect appli theorem 33 case weight job ident machin distinguish case polynomi bound integr input arbitrari input theorem 45 exist algorithm weight job ident machin case achiev approxim factor polynomi bound integr input arbitrari input proof shown linear program formul valu optim solut least big valu optim schedul let n 0 chosen way discuss preced theorem 42 claim use round scheme feasibl solut dene interv graph color k1n 0 1 color integr polynomi size input 2k color arbitrari input consid rst case integr polynomi size input interv graph induc solut lp n 0 interv correspond job group kn 0 interv mutual overlap point time appli group constrain interv color get valid color k similarli arbitrari input interv graph induc solut lp n 0 interv correspond job group 2kn 0 interv mutual overlap appli group constrain interv color get valid color impli polynomi size input arbitrari input word approxim factor achiev singl machin compar optim algorithm use k ident machin set valu paradigm transform algorithm singl machin algorithm k ident machin yield claim approxim factor 2 remark note k tend inniti approxim factor e 158192 unweight job weight job integr polynomi size input arbitrari input approxim factor e 254149 set get bound coincid bound singl machin everi k 2 case bound improv upon bound unrel machin 3 4 42 combinatori algorithm section present combinatori algorithm weight machin model rst present algorithm singlemachin version show extend case k 1 machin even unrel machin model 421 singl machin algorithm inspir onlin call admiss algorithm see 12 7 scan job instanc interv one one job instanc either accept reject note reject irrevoc decis accept temporari ie accept job may still reject later point time remark case nonpreempt onlin call admiss constant competit factor achiev algorithm reason due onlin natur problem job must consid order releas time algorithm freedom order job dierent way yield constant approxim factor outlin algorithm feasibl interv job scan left right time axi sort end point algorithm maintain set current accept interv new interv consid accord sort order immedi reject belong job alreadi instanc immedi accept overlap interv case accept interv ad overlap one interv accept weight determin later time sum weight overlap interv case say preempt overlap interv add discard overlap interv process end interv scan formal descript algorithm call algorithm admiss given figur 2 main diculti implement algorithm scan innit number interv prove perform algorithm show overcom diculti inform say interv caus reject preemption anoth interv j algorithm admiss 1 let set accept job instanc initi 2 let set yet unprocess job instanc initi set feasibl job instanc 3 empti repeat follow procedur let 2 j job instanc termin earliest among instanc let w weight let w sum weight instanc h overlap n fig b j 6 reject c els fig els w w accept preempt g reject figur 2 algorithm admiss either interv directli reject preempt interv j preempt anoth interv caus reject preemption interv j note relat dene recurs interv may preempt anoth interv preempt interv turn reject interv case interv caus reject preemption interv fix interv accept algorithm consid interv chosen optim solut reject preemption caus interv prove total weight interv f time weight accept interv function f optim get 3 theorem 46 approxim factor algorithm admiss 3 2 proof let set interv chosen optim algorithm opt let set interv accept algorithm admiss denot interv 2 dene set ri interv account set consist case 2 interv reject preemption caus formal assum accept rule 3c set ri initi case 2 empti set otherwis assum accept rule 3d ri initi contain interv directli preempt union set ri 0 interv 0 preempt addit ri contain case 2 assum j 2 reject rule 3b let 2 interv caus reject j note j belong job case add j ri assum j 2 reject rule 3e let h interv overlap j time reject let w weight j let w j weight j view j h imaginari interv j weight j j w j w g note due reject rule follow weight j j time weight j hard see interv portion use rule 3e belong exactli one set ri 2 thu union set ri 2 cover x interv 2 let w weight let w sum weight interv ri dene w goal bound interv may directli reject one interv let w r weight portion interv r 2 ori directli reject exist otherwis let w observ w r w sinc otherwis r would reject let 0 2 interv belong job one belong mayb exist denit weight 0 w let w r sum weight rest interv ri dene w follow assum induct bound valid interv earlier end point end point sinc overal weight job directli preempt w get w impli 1 therefor equat minim impli 2 final sinc bound hold interv sinc union ri set cover interv taken opt get valu opt time valu henc approxim factor 3 2 2 implement observ step 3 algorithm invok statu chang ie either new job becom avail n time job schedul end n time time step 3 invok total number job instanc examin n one job implement algorithm employ prioriti queue hold interv accord endpoint point time enough hold one job instanc job prioriti queue turn total number oper retriev next instanc log n total 2 log n oper 422 unrel machin number unrel machin k 1 call algorithm admiss k time machin machin arbitrari order set job consid ith call contain job alreadi schedul machin analysi show 3 5828 bound carri case unrel machin similar analysi present proof theorem 46 main dierenc denit ri interv 2 execut machin dene set ri consist case 2 interv execut machin optim schedul ii reject preemption job caus 5 maxsnp hard show problem schedul unweight job unrel machin maxsnp hard done reduc variant max2sat variabl occur three time problem variant max2sat given collect claus consist two boolean variabl addit constraint variabl occur three time goal nd assign valu variabl would maxim number claus satis ie contain least one liter true valu problem known maxsnp hard cf 26 given instanc max2sat problem show construct instanc problem unweight job unrel machin valu max2sat problem equal valu schedul problem variabl x associ machin claus c j associ job releas time job 0 deadlin 3 job execut two machin correspond variabl claus c j contain word process time job rest machin innit suppos claus c j contain variabl x posit neg liter process time job correspond c j 3k k 2 f1 2 3g number occurr variabl x posit neg liter note case variabl x occur posit neg form occur exactli one form sinc variabl x occur three time overal follow feasibl schedul machin execut job correspond posit liter occurr job correspond neg liter occurr conclud job schedul claus satis direct hard verifi claus satis job schedul sinc max2sat restrict variabl occur three time maxsnp hard unweight job unrel machin case maxsnp hard well acknowledg indebt joel wein mani help discuss especi suggest consid gener case maxim throughput job releas time deadlin r schedul timeconstrain commun linear network minim stall time singl parallel disk system schedul job competit bandwidth alloc preemption competit onlin realtim task schedul schedul comput manufactur system locat bank account optim oat note schedul interv onlin two processor schedul start time deadlin comput intract guid theori np complet patienc virtu e maxim valu space mission solvabl case one machin schedul problem readi due date optim onlin schedul algorithm overload realtim system sequenc minim weight number tardi job dynam program algorithm preemptiv schedul singl machin minim number late job sequenc schedul ing algorithm complex onlin interv schedul algorithm schedul independ task approxim maximum sati tr ctr cash j costello christoph p diehl amit banerje heski fisher schedul activ camera observ peopl proceed acm 2nd intern workshop video surveil sensor network octob 1515 2004 new york ny usa lixin tang gongshu wang jiyin liu branchandpric algorithm solv molten iron alloc problem iron steel industri comput oper research v34 n10 p30013015 octob 2007 thoma erlebach klau jansen implement approxim algorithm weight unweight edgedisjoint path bidirect tree journal experiment algorithm jea 7 p6 2002 randeep bhatia julia chuzhoy ari freund joseph seffi naor algorithm aspect bandwidth trade acm transact algorithm talg v3 n1 februari 2007 thoma erlebach frit c r spieksma interv select applic algorithm lower bound journal algorithm v46 n1 p2753 januari laura barbulescu jeanpaul watson l darrel whitley adel e howe schedul spaceground commun air forc satellit control network journal schedul v7 n1 p734 januaryfebruari 2004 julia chuzhoy joseph seffi naor new hard result congest minim machin schedul proceed thirtysixth annual acm symposium theori comput june 1316 2004 chicago il usa julia chuzhoy rafail ostrovski yuval rabani approxim algorithm job interv select problem relat schedul problem mathemat oper research v31 n4 p730738 novemb 2006 amotz barnoy reuven baryehuda ari freund joseph seffi naor baruch schieber unifi approach approxim resourc alloc schedul journal acm jacm v48 n5 p10691090 septemb 2001 thoma erlebach klau jansen convers color algorithm maximum weight independ set algorithm discret appli mathemat v148 n1 p107125 amotz barnoy sudipto guha yoav katz joseph seffi naor baruch schieber hada shachnai throughput maxim realtim schedul batch proceed thirteenth annual acmsiam symposium discret algorithm p742751 januari 0608 2002 san francisco california julia chuzhoy joseph seffi naor new hard result congest minim machin schedul journal acm jacm v53 n5 p707721 septemb 2006 reuven baryehuda keren bendel ari freund dror rawitz local ratio unifi framework approxim algorithm memoriam shimon even 19352004 acm comput survey csur v36 n4 p422463 decemb 2004 faisal z qureshi demetri terzopoulo surveil camera schedul virtual vision approach proceed third acm intern workshop video surveil sensor network novemb 1111 2005 hilton singapor