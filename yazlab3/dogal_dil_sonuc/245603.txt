applic petri net reduct ada task deadlock analysi abstracta part continu research use petri net support autom analysi ada task behavior investig applic petri net reduct deadlock analysi although reachabl analysi import method detect deadlock gener ineffici even intract net reduct aid analysi reduc size net preserv relev properti introduc number reduct rule show appli ada net automat gener petri net model ada task defin reduct process method use descript detect deadlock state obtain reduc net inform reduct tool experiment result appli reduct process discuss b introduct one major difficulti face develop concurr distribut softwar analysi concurr base fault like deadlock techniqu analysi gener limit applic due high complex interest analysi problem exampl reif smolka 1 prove undecid npcomplet result reachabl problem variou model commun process rauchl toueg 2 provid pspacehard result deadlock detect bound commun channel model commun finit state machin regard concurr analysi model base ada task taylor 3 prove npcomplet result relat classic static deadlock detect problem work support part offic naval research onr grant number n0001490j1446 nation scienc foundat nsf grant number ccr8913580 ccr9321743 earlier version paper publish proceed 10th intern confer distribut comput system despit difficulti concurr analysi problem number techniqu propos especi static analysi ada task 416 previous defin petri net framework type analysi 6 develop toolkit support approach 10 architectur toolkit call total shown fig 11 fet frontend translat subsystem translat ada sourc ada task languag atl design descript 10 petri net format ie set appropri label place node transit node arc refer result petri net origin ada net net suitabl analysi program compos static set task bid backend inform display subsystem defin receiv user queri present task analysi result base analysi ada net 11 bid use differ support tool carri desir analysi exampl deadlock detect use method describ 9 would invok tool calcul net invari approach subject paper bid first invok net reduct tool use reachabl graph gener tool unlik pure static analysi method ignor variabl approach model boolean variabl increas accuraci analysi gener implic use static analysi discuss elsewher 410 petri netbas tool aim ada analysi propos includ one develop softwar product consortium spc primari concern work perform model 12 taylor concurr histori method 4 one earliest ada task analysi method discuss 6 definit concurr graph similar classic reachabl graph petri net goal taylor paper propos systemat method gener program concurr histori gener analysi concern method improv analysi effect specif type analysi like deadlock concern yet taylor work also simplifi model focus synchron concurr issu long clark 5 introduc task interact graph tig represent creat concurr graph smaller creat taylor method provid experiment base comparison tigbas result reductionbas result section 8 goal tig work similar although feel method advantag base model theoret matur continu wide activ studi support mani avail tool also approach distinguish methodolog first deriv semant rich model independ specif analysi issu manipul model algorithm design specif analysi issu concern recent dwyer et al present compact petri net represent concurr program base tig model 17 standard deadlock preserv petri net reduct techniqu appli net form deadlock preserv reduct applic net suggest analysi method shown particular promis handl reason larg exampl includ use binari decis diagram bdd repres symbol state space 1819 use special petri net concept stubborn set petri net transit 20 partial order petri net transit 21 net symmetri 22 bddmethod success appli hardwar system analysi yet clear directli suitabl method concurr softwar analysi method mention well defin petri net exploit particular type concurr defin ada task model work 23 explor use method ada net paper consid analysi classic case global deadlock detect ie task block context petri net approach straightforward way detect deadlock would gener ada net reachabl graph search reachabl graph state successor state easi implement toolkit system 10 comput expens sinc complex gener reachabl graph safe net exponenti number node 24 previous studi use petri net structur invari aid deadlock detect ada task 9 keep research techniqu ie seek exploit adapt exist gener petri net theori paper consid reduc comput deadlock analysi use anoth petri net techniqu net reduct model reduct method experiment result indic techniqu quit power significantli extend rang problem size handl found reduct method compar favor autom task analysi method especi also root explicit reachabl analysi addit found model reduct method facilit use state reduct method combin model reduct follow state reduct allow problem 100 task analyz experiment result problem fare well comparison result report constrain express tool 816 pal tool base use process algebra composit analysi 15 autom method know shown abl analyz ada program 100 task earli work reduct graph model express concurr report gostelow et al 25 reduct base narrow set substitut arbitrari graph model comprehens set petri net specif reduct rule later present berthelot 26 work adapt berthelot rule specif model domain ada task cast rule techniqu tool specif softwar analysi problem deadlock analysi 2 background petri net ada net net reduct paper assum reader basic understand petri net 2427 gener knowledg ada task 28 section provid background three area terminolog notat petri net theori present terminolog properti ada net introduc idea petri net reduct explain definit 21 gener petri net 5tupl pnp f w 0 p finit set place node finit set transit node f set arc flow defin f pt tp w weight function defin w initi mark state defin 0 pin n stand set posit integ set nonneg integ petri net restrict w f 1 ie arc weight alway equal one call ordinari petri net definit 22 petri net pn x xyf xy yxf xy pt x place transit x input transit place set x x output transit place set x definit 23 petri net pn mark state map pin mark state graphic repres assign token shown small black dot place notat mp denot number token place p mark definit 24 given mark petri net pn transit tt p mp wpt said enabl note ordinari net transit enabl p mp 0 definit 25 petri net pn transit enabl mark fire result new mark 1 p wtq note ordinari net fire transit result new mark 1 p definit 26 petri net pn mark said reachabl mark exist sequenc mark ji result fire enabl transit mark ji1 i12 k sequenc transit fire lead mark mark call transit fire sequenc definit 27 petri net pn set reachabl mark denot rpnm 0 mark reachabl 0 definit 28 petri net pn said safe number token everi place exceed one reachabl mark ie mrpnm 0 pp mp1 definit 29 petri net pn deadlock exist reachabl mark transit enabl petri net deriv ada task program translat scheme 610 call origin ada net origin ada net model number commun finit state machin commun base ada notion rendezv state machin repres local control flow task intertask commun repres extra node connect differ state machin control flow construct ifels case loop model structur state machin control flow construct impact choic task construct like entri call accept statement translat algorithm produc origin ada net use set petri net templat correspond ada statement detail translat given 6 simpli describ key featur ada net german upcom discuss reduct origin ada net place automat label translat program welldefin role model program behavior place label prefix keyword indic type place label also contain statement number exampl templat entri call statement shown fig 21a accept statement accept bodi shown fig 21b accept statement without accept bodi model compact way seen exampl fig 22 gener rendezv repres net structur shown fig 21c model directli synchron entri place accept place follow reason model creat automat translat sourc code chose entri call construct model make entri call separ accept construct model accept call made conveni translat algorithm also provid model distinguish task made call yet accept task readi make call explain bit upcom exampl definit 210 ada net call place label prefix string begin wait accept entryex select beginplac waitplac acceptplac entryexplac selectplac respect method construct origin ada net follow characterist 610 origin ada net ordinari safe petri net origin ada net linear number node respect statement correspond ada program place contain token initi mark repres begin task control flow beginplac defin decis statement ifels case statement local control flow repres branch net structur ie place multipl output arc everi branch net structur least one branch choic contain net structur commun statement translat algorithm ignor decis statement involv intertask commun give reader feel label convent use ada net sens net reduct use exampl program call ga station program 29 statement number part program use refer exampl 21 ga station program 1 task bodi custom 10 task bodi pump 20 task bodi oper 3 loop 12 loop 22 loop select 5 pumpstart 14 accept start 24 accept prepay 6 pumpfinish 15 accept finish 25 pumpactiv 8 end loop 17 end finish 27 9 end custom 28 accept charg origin ada net structur correspond 3task program shown standard petri net graphic form fig 22 purpos later refer token distribut shown figur 22 indic deadlock mark rather initi mark ada net give follow interpret place label appear ada net shown fig 22 note place label ackentryoperator4 abbrevi aeo4 figur ackentryoperator4 entri call line 4 made yet accept oper task entri call line 4 execut call task wait acknowledg oper task call may may accept yet rendezv progress entri execut entri call line 6 accept statement line 15 origin ada net intend serv base model gener task analysi discuss 10 deadlock analysi observ origin ada net contain atom step transit strictli necessari model task semant exampl endloop transit aid translat process part effect reduct discuss paper remov extra step hand also net structur exampl place unnecessari deadlock analysi may support form analysi exampl waitplac mark indic task made entri call wait respons distribut environ may correspond state request messag transmit state remot task perform servic state acknowledg messag sent call task determin maximum number entri call wait simultan search state contain maximum number mark wait place petri net research develop variou reduct techniqu gener petri net analysi 26 petri net reduct aim transform given petri net pn anoth petri net pn pn easier analyz algorithm typic mean pn smaller reachabl graph pn illustr show fig 23 net produc appli net reduct rule net fig 22 import observ reduc net explicitli model task interact defin sourc program ada net fig 22 instanc sourc program specifi 6 entri call 6 accept statement yet reduc net contain 4 transit definit reduct rule introduc true reduc net preserv deadlock characterist origin ada net definit 211 net deriv origin ada net number reduct step use reduct rule present paper call reduc ada net reduc ada net call fulli reduc ada net reduct rule appli ada net either origin ada net reduc ada net fulli reduc ada net fulli reduc ada net uniqu depend interplay reduct oper appli 3 gener reduct rule practic use ada net select 26 transit fusion reduct rule applic gener petri net interest fact rule preserv deadlock properti net ie deadlock state preserv new deadlock state introduc furthermor rule preserv safe net rigor proof found 26 use rule propos 26 high comput complex ie comput expens check applic rule section also introduc simpl rule 27 allow remov place transit case exist parallel redund node next section deriv reduct rule special case rule use ada net note whenev reduct rule call remov node place transit impli incid arc node also remov rule 1 postfus transit 26 nonempti subset g set transit petri net postfus anoth subset h iff exist place p follow four condit satisfi fg fp input f p pf p output f b hh ph p h p output input h c tthg p pt p disconnect transit except belong h g oper rule 1 fuse hh fg produc transit h h p delet p transit thg condit b impli hg fig 31 show postfus transit h 1 h 2 f 1 f 2 reduc net consid fire everi new transit fire sequenc h f fire number fire transit reduc net origin net rule 2 prefus transit 26 subset g set transit petri net may prefus transit ht iff exist place pp follow condit satisfi h p p h p sole output h p input h b fg p f pf transit g p input none p output c gh p pt p disconnect transit q h q 1 h share input place transit oper rule 2 fuse h fg substitut f f hp delet h p fig 32 show transit h fuse f 1 f 2 properti preserv prefus rule 1 postfus proof 26 appli rule 2 place p reduc number transit net one number place one third reduct rule special case rule 1 explicitli specifi easier appli commonli occur fig 33 illustr oper rule 3 rule 3 serialfus transit singleinputoutput place p token uniqu output place 1 uniqu input place p 2 pp 1 1 2 fuse rule 4 parallel redund node 27 two node two transit two place without token x ident input ident output possibl empti pair parallel node either one node remov xy xy either x remov obviou rule 4 preserv deadlock safe properti net 4 special case reduct ada net intuit place petri net consid redund remov alter possibl transit fire sequenc net throughout paper remov redund place p mean p ps incid arc remov benefit identifi place remov gener facilit reduct involv transit fusion clearli safe deadlock properti preserv remov redund place unfortun gener effici algorithm identifi place redund berthelot gave formal structurebas character redund place gener petri net 26 base exist place subset call iset meet certain condit interest appli concept ada net seek effici rule special case instanc berthelot character begin introduc gener character specif case redund place safe ordinari petri net first want establish fact ada net alway safe ordinari net recal origin ada net safe ordinari net construct note earlier reduct rule introduc section 3 preserv safe establish berthelot 26 rule 1 alway keep ordinari net ordinari net safe start difficult see rule 2 3 4 keep ordinari net ordinari final new rule introduc section remov node chang ordinari net one ordinari prove everi node remov new rule redund sens remov alter possibl transit fire sequenc safe properti net preserv therefor conclud ada net alway safe ordinari net import sinc want appeal gener character redund place safe ordinari net prove special case instanc redund place ada net theorem 41 case 1 place redund safe ordinari net safe ordinari petri net pn place p redund follow condit satisfi 1 exist b bp mrpnm 0 mb1 mp1 ie whenev b mark p also mark proof sinc output transit p p impact fire transit except one necessari condit enabl b mark condit 3 establish whenev b mark p also mark remov p impact fire reachabl mark mean place p redund theorem help defin narrow class redund place comparison gener character given berthelot comput expens use theorem identifi redund place due behavior condit impli condit 3 appeal theorem defin special case instanc redund place ada net rememb origin ada net place automat label translat program welldefin role term model program behavior semant net must correspond semant ada program net sound model assum case paper exploit sens semant identifi case condit 3 theorem must true thu case simpl effici reduct rule sinc goal use rule defin reduct process explain select order depend rule rule 5 redund waitplac origin ada net structur correspond entri call statement waitplac redund remov hold net obtain appli rule one time origin ada net proof fig 21a show origin ada net structur model entri call ackentri place repres call made yet accept ackaccept place repres acknowledg call entri indic rendezv termin waitack place repres caller wait termin acknowledg appeal theorem 41 see condit 1 2 theorem 41 true place p b repres place waitack ackaccept respect ada semant rendezv termin must previous initi caller origin ada net structur fig 21a easili seen rendezv initi caller waitack place becom mark remain mark ackaccept place becom mark therefor condit 3 theorem 41 also true waitplac redund sinc remov waitplac associ entri call statement alter ada net structur entri call statement appli reduct one time ie waitplac import rule 5 case rule 6 7 provid opportun reduct appli illustr let us consid exampl 41 correspond ada net shown fig 41a exampl 41 9 end t2 appli rule 5 remov immedi waitackt23 waitackt212 appli rule 3 result net fig 41b reduct process deadlock detect alway appli rule 5 first mean remov waitplac first step reduct process rule 6 redund entryexplac origin ada net structur correspond accept statement correspond entryexplac redund remov accept statement one caller hold net obtain appli rule one time origin ada net proof fig 21b show origin net structur model accept statement endaccept place repres accept task reach end accept bodi readi termin rendezv initi call entryexji place repres particular rendezv progress rendezv associ particular entri call statement particular accept statement j appeal theorem 41 see condit 1 2 theorem 41 true place p b repres place entryexji endaccept respect ada semant task reach end accept statement must correspond rendezv progress case accept statement one possibl caller one correspond entryex place shown case fig 21b contrast multipl caller case shown exampl fig 41a thu whenev endaccept place mark place mark condit 3 theorem 41 true entryexplac redund sinc remov entryex place alter net structur associ accept statement recal structur fig 2 remov place affect applic rule 6 structur appli reduct one time clear remov waitplac affect valid appli rule 6 correspond entryex place reduct process alway appli rule 6 possibl applic rule 5 could well chosen defin reduct process start applic rule 6 follow rule 5 import differ introduc second theorem gener theorem 41 appeal theorem prove two special case rule applic ada net theorem 42 case 2 place redund safe ordinari net safe ordinari petri net pn place p redund follow condit satisfi 1 r 2 everi transit ok p k1 2 r place q ok p q ok ok k1 2 r mp1 ie q ok place mark state p also mark state fig 42 contain exampl net structur correspond structur defin theorem 42 case r2 time one ignor label node defin theorem 42 proof condit 2 safe properti net impli reachabl state one q ok place mark one place could mark one associ enabl transit could fire result mark q ok place still mark place p mark would contradict condit 2 infer reachabl mark p impact fire one transit call necessari condit enabl correspond q ok mark sinc condit 2 establish whenev q ok mark p also mark remov p impact fire reachabl mark mean place p redund present two rule appeal theorem 42 identifi specif case redund place occur ada net next two rule appli time reduct process sinc rule depend ada net issu help identifi candid place label check applic rule improv effici reduct process exampl rule 7 direct attent acceptplac particular ada net indic task call two consecut entri anoth task net structur enforc call task control flow simplifi remov one acceptplac call task rule 7 redund acceptplac ada net let p acceptplac pt i1 i2 ik p o1 o2 ok 0 p0 exist anoth acceptplac q q p p q correspond two accept statement task place p remov follow condit also satisfi 1 transit ik p k 1 2 r exist correspond transit ok p ik p q ik ok p q ok pair place q ik q ok correspond statement task k kt pair transit ik ok defin condit 1 ik alway fire first ik fire twice without fire ok ok fire twice without fire ik fig 42 illustr net structur correspond rule 7 case r2 proof without loss gener refer fig 42 illustr net structur correspond rule 7 case r2 seen easili condit 1 rule 7 establish structur condit theorem 42 behavior condit specifi condit 2 theorem 42 shown true follow ik enabl mark mp0 otherwis p may contain multipl token net would safe previous establish ada net safe net thu transit ok enabl mark whenev transit ik fire p becom mark case ok fire transit ik fire otherwis net safe condit 2 ensur transit ok fire thu token place p remov transit ok fire note transit ok enabl unless place q ok mark therefor mrpnm 0 mq ok 1 k1 2 r mp1 condit theorem 42 hold exampl 42 fig 22 ga station exampl use illustr simpl case redund acceptplac defin rule 7 use notat rule 7 let accept15 correspond place p let accept14 correspond place q check figur seen q p r1 exampl task defin rule task contain two accept statement question pump task seen sourc code given section 2 consid condit 1 transit t14 correspond i1 transit t15 correspond o1 task custom correspond task 1 check condit 2 see correspond q i1 ackentrypump6 t15 correspond q o1 ada net model task custom easi confirm everi iter transit t14 fire t15 fire impli execut statement 5 must preced execut statement 6 condit 2 true thu rule 7 accept15 redund place implement rule 7 need automat check condit rule condit 1 difficult check sinc correspond place ada net statement ada program well defin base type place label use discuss earlier assum condit 1 true main difficulti check condit 2 without loss gener consid check condit 2 one call task ie r1 let us denot statement correspond place q ik s1 statement correspond place q ok s2 condit 1 s1 s2 belong task call task k mention section 2 ada net contain subnet commun finit state machin repres local control flow task subnet consist place correspond statement particular task input output transit place arc associ place transit node condit 2 check confirm follow two properti subnet correspond task k direct path start beginplac task k place q ok go place correspond statement s1 b loop subnet correspond task k contain place q ok loop must also contain place correspond statement s1 confirm properti temporarili remov everi place correspond statement s1 perform two search 1 search path start begin place task k place q ok 2 search loop start q ok lead back q ok search fail condit 2 satisfi otherwis condit 2 satisfi rule 8 redund acceptbodi place safe ordinari petri net pn place p redund follow condit satisfi 1 pp r 2 transit ik p k1 2 r exist uniqu place q ok p q ok ik q ok 1 everi transit ok p k1 2 r ok p q ok 0 pm 0 q ok 0 k1 2 r ada net structur repres acceptbodi model singl place p multipl caller good candid instanc redund condit hold place p remov proof rule 8 special case theorem 42 q ok ik clearli structur condit theorem 42 true establish condit 2 theorem 42 follow sinc q ok ik ik p q ok get mark p ii sinc p o1 o2 token p remov transit ok k1 2 r fire iii mark mq ok mp1 transit ik k1 2 r fire otherwis p one token safe properti hold thu one q ok place mark reachabl mark iv ii iii token p remov ok fire remov token p q ok simultan therefor mrpnm 0 mq ok 1 k1 2 r mp1 condit theorem 42 hold let us return fig 41b rule 8 allow us remov place endaccept8 serial fusion lead reduc ada net fig 43 final rule simpl rule appli mark place remov place transit restrict condit rule 9 redund beginplac safe ordinari net exist place bp 0 b1 b t1 b b remov dt 0 set 1 ada net beginplac initi mark input transit use candid place b proof mark everi output place remov equival fire sinc tb b mark initi fire initi sinc b fire transit fire sequenc case remov node b reassign token defin chang safe deadlock properti net note possibl rule 9 reduc net isol mark place would repres deadlock state differ reduct rule appli net rule 9 appli last sinc rule rule 1 8 assum place unmark rule 9 induc mark mark could lost reduct allow rule 9 appli 5 reduct process method deadlock identif appli reduct rule discuss previou section defin reduct process deadlock detect identif ada net process start origin ada net appli rule particular order preserv sound reduct process respect rule 5 8 follow rule order consist mention section 4 order defin follow repeatedli appli rule 5 appli sequenc rule 6 7 8 rule 3 2 1 4 repetit appli order none four rule appli final rule 9 appli deadlock identif requir abl interpret program state correspond detect deadlock mark reduc ada net difficulti aris reduct process remov place whose label help defin semant program state correspond reachabl mark fortun provid method easili construct origin ada net deadlock mark reduc net deadlock mark method base applic petri net state equat 27 0 initi mark net incid matrix 27 net v fire count vector fire count vector mvector number transit net element number time correspond transit fire 27 given 0 v equat 51 return mark net reach transit repres v fire concern obtain v term origin ada net reduct applic transit fusion rule rule 1 2 3 remov transit gener new transit transit fuse label concaten newli gener transit fusion transit label concaten kind label concaten immedi give us fire count fuse transit ignor fire order everi transit label origin ada net appear label reduc ada net rule 9 appli label easi gener fire count vector x search deadlock reachabl graph howev rule 9 appli transit label lost saw section 4 remov transit rule 9 mean transit fire thu gener anoth mvector remov fuse transit contain remov rule 9 substitut vector x forv equat 51 obtain full descript deadlock mark origin ada net incid matrix origin ada net 0 net initi mark exampl next section illustr method record state sequenc transit sequenc lead deadlock state either reachabl graph construct state net sequenc defin respect reduc ada net provid interpret state sequenc term program execut sequenc appli basic method defin interpret deadlock state would appli interpret intermedi state sinc necessari transit inform initi state well defin method still sound 6 exampl deadlock detect identif explain reduc net fig 22 initi mark beginplac mark one token fig 23 use new net detect identifi deadlock first rule 5 remov waitplac rule 6 remov entryexplac entryex244 entryex2816 entryex156 rule 7 remov accept place accept15 first appli rule 3 rule 1 2 mani group transit place accept14 remov rule 4 becom parallel place place ackentrypump5 reduc ada net shown fig 61 final appli rule 9 fulli reduc ada net shown fig 23 mark correspond deadlock state reachabl graph reduc ada net fig 23 shown fig 62 compos 4 state chain deadlock state correspond mark token place ackentrycustomer29 comparison note reachabl graph origin ada net 78 state token alloc fig 22 show deadlock mark origin net repres follow string waitackpump6 entryex156 waitackoperator16 entryex2816 ackentrycustomer29 deadlock mark easi interpret correspond program state circular deadlock task custom rendezv task pump entri finish statement 6 task pump rendezv task oper entri charg statement 16 task oper issu entri call customerchang statement 29 number mark waitplac give number task wait state use method outlin section 5 also identifi deadlock fulli reduc ada net path initi state deadlock state reachabl graph fig 62 identifi fire transit t14t6t7t15t16t28t29 thu follow fire count vector respect 31 transit posit vector correspond follow order transit t1t21 t23t26 t28t33 reason unimport paper origin ada net transit label t22 t27 applic rule 9 remov fuse transit contain t1t2t3 t11t12 t20t21 compar fig 61 fig 23 yield anoth vector defin reduct process everi place p appli equat 52 defin section 5 obtain mark vector repres state string 61 7 net reduct tool experiment evalu implement prototyp reduct tool compat current research toolkit use construct evalu ada net 10 mention section 1 toolkit autom construct ada net support variou form netbas analysi includ reductionbas analysi ada net repres textual productionrul form compat format petri net input pnut system 31 set petri net tool allow descript net well reachabl graph gener analysi simul textual represent net transit specifi product rule lefthandsid give transit label enclos colon follow name input place righthandsid give name output place net reduct tool nrt implement c run suno unix major input nrt ada net produc fet tool output nrt reduc version input ada net textual format nrt execut follow command nrt r n 1 2 3 4 5 6 r option call output report everi reduct rule attempt appli n option call output list intermedi net produc reduct process final option specifi id number use earlier section paper reduct rule attempt order consider rule 9 automat attempt last exampl 132 mean first rule 1 consid ie repetit appli reduct possibl rule rule 3 consid rule 2 consid final rule 9 consid typic use nrt provid id option case rule appli order defin reduct process discuss earlier section 5 evalu net reduct method perform number experi varieti ada task program experi provid quantit measur effect use net reduct method associ tool deadlock analysi experi particular dine philosoph exampl measur compar exist data differ task analysi approach toolset comparison intend show benefit use reduc concurr model perform deadlock analysi sinc reduc ada net intend support deadlock analysi meaning interpret compar data broader sens discuss two type experi use nrt tool first experi evalu idea net reduct use differ version two benchmark task program ga station program 1 dine philosoph program experi net reduct follow full reachabl graph gener mention give opportun see comparison effect reduct method deadlock analysi comparison anoth reachabilityori autom ada task analysi techniqu second experi evalu effect use net reduct method conjunct exist state space reduct method ie method reduc state space state space 1 sourc version use develop provid us g avrunin experiment work constrain express analysi method gener contrast reduct method perform reduct net model prior state space gener type experi observ signific benefit net reduct method net reduct exampl ada net result 95 reduct state space size compar origin net state space fulli reduc net state space analysi reduc ada net accur report exist nonexist deadlock exampl consid recal reduct gain due remov atom step transit strictli necessari model task semant discuss amount state space reduct achiev term origin vs reduc net signific measur relat result state space size comparison reduc net task model reli reachabl analysi analysi time experi run use reductionbas analysi tool sun sparcstat 2 64mb memori fulli reduc net give number uniqu state number arc reachabl graph indic number state gener time reduc net plu gener state space second measur usersystem time unix experi time reduct step small fraction time gener state space alway less one second lack space prevent us list sourc code exampl studi avail author 71 net reduct full reachabl graph gener 711 ga station exampl ga station program simul autom ga station system consist oper pump custom consid onepump twopump version system programvers deadlock case use unrol version differ custom call differ entri oper task oper task use boolean variabl keep track custom prepay ga control automat model ada net current programtonet translat yet handl gener use counter variabl reachabl graph gener tool intellig enough consid transit sequenc correspond boolean variabl evalu atom action thu state correspond interleav evalu step store correspond deadlock state issu discuss detail 23 deadlock case creat oper improperli handl flag variabl indic pump busi result custom finish pump pay oper still think pump busi allow custom get access pump experi report 23 introduc deadlock slightli differ way tabl 1 show sampl data base vari number custom number pump potenti deadlock custom pump task deadlock fulli reduc ada net reachabl graph state arc time tabl 1 experi ga station program 712 dine philosoph exampl wellknown dine philosoph problem experi differ version becom standard exampl number differ concurr analysi research project exampl especi relev paper sinc allow quantit comparison approach anoth statespac orient analysi techniqu modifi optim version task interact concurr graph ticg method 3233 assum reader familiar dine philosoph problem program simul n philosoph consist 2n ada task one philosoph one fork four version program discuss 3233 version 1 classic dine philosoph problem without deadlock avoid tabl 2 show comparison state space size fulli reduc ada net model publish data modifi ticg model 33 note fulli reduc ada net problem number state 2 p p number philosoph task modifi ticg model number state 3 p 1 rememb ticg model gener model term preserv task properti beyond deadlock potenti version 2 philosoph pick lowernumb fork first similar situat report 32 state space version 2 approxim equal size version 1 version 3 dine room butlertask ad restrict number room occup less n check valu count variabl thu deadlock happen howev deadlock superflu report version pure static analysi count variabl model although static analysi case reveal fals deadlock numer result respect state size still compar reduc ada net model modifi ticg model sinc model ignor count variabl tabl 3 show comparison state space size version 3 provid check reduct method manual ad node automat gener origin net model simul control enforc butler count variabl exampl counter could take valu 0 10 would add 11 place ada net model uniqu valu counter expect experi net show superflu deadlock suppress modifi model state space size reduc net obtain modifi net model shown rightmost column tabl 3 reachabl state phil task fulli reduc ada net state arc time modifi ticg 33 state arc time differ state approx 14 28 16384 172032 8 avail 18 36 262144 3538944 175 avail 20 40 1048576 15728640 894 avail tabl 2 dine philosoph problem version 1 reachabl state phil task fulli reduc ada net ignor variabl state arc time modifi ticg 33 ignor variabl state arc time differ fulli reduc ada net simul count state arc time 4 9 256 960 1 832 2964 3 69 175 524 1 10 21 1048576 9830400 656 avail 989527 7274662 711 tabl 3 dine philosoph problem butler version 3 young et al 32 provid anoth program version version 4 dine room butlertask simul count variabl unrol selectivewait statement idea simul variabl valu level nest selectivewait statement therebi avoid spuriou deadlock state space analysi surpris analysi tool report deadlock state version 4 number philosoph two investig realiz program error could inde deadlock sinc method unrol butler select wait provid 32 may allow n philosoph occupi room simultan 33 program correct butlertask given analysi tool properli detect deadlock correct version 4 program tabl 4 summar result use ticg data report 33 correct unrol butler task expect number fulli reduc net state use unrol butler number net state given tabl 3 net model simul butler count variabl comparison show signific advantag state space size reduc net comparison ticg model indic philosophi use specif model specif problem use strategi analysi inher complex problem see benefit use problemspecif reduc model comparison unreduc ada net model independ develop concurr analysi model number reachabl state phil task fulli reduc ada net unrol butler state arc time modifi ticg 33 state arc time differ 4 9 175 564 1 511 1543 3 66 7 15 14197 88809 7 104679 625873 1099 86 8 17 58975 427368 33 avail 1995327 165 avail 10 21 989527 9108690 910 avail tabl 4 dine philosoph problem unrol butler version 4 713 waveform gener exampl see reduct process work real world exampl obtain exampl ada program develop solv real problem design purpos test particular concurr analysi method exampl perform hand modif ada sourc order get proper net model program primarili due presenc ada specif construct like packag translat design handl waveform gener program 1200 line ada simul electr equip gener variou waveform one program use 23 experiment studi variou state space reduct method includ net reduct indic 23 two version program creat two version number state arc reachabl graph correspond origin ada net 10996 state 32332 arc 4827 state 14250 arc fulli reduc ada net correspond number state arc reduc 78 state 326 arc 31 state 242 arc state space gener time case 2 second note number state arc quot origin ada net slightli smaller full state space number given 23 due fact consid particular type origin net reduct relat selectivewait structur part net gener process part net reduct process use deadlock detect done 23 cours either way reduct process provid signific benefit reduc size state space 72 net reduct state space reduct second seri experi look effect use net reduct method support recent propos reduc state space gener method particular consid three reduc state space gener method stubborn set petri net transit 20 partial order petri net transit 21 net symmetri 22 basi experi gener origin ada net set ada program appli reduc state space gener method ada net appli net reduct origin ada net appli reduc state space gener method time reduc net exampl consid includ first experi version ga station program version dine philosoph program well version readerswrit program exampl tradit dine philosoph problem n philosoph combin net reduct stubborn set gener state combin net reduct symmetri gener n state observ case ie program reduc state space gener method signific benefit use net reduct method prior appli reduc state space gener effect reduct step increas util state gener method appli deadlock analysi ada task full detail experi use reduct reduc state space gener method found 2334 note reduct method use 34 bit less power method describ paper particular rule 6 defin paper gener rule use experi report 34 exampl state space number report dine philosoph problem better ie smaller paper comparison number report 34 use net reduct reduc state space gener appear power combin deadlock analysi ada task make follow observ base comparison experi experi report two fulli autom analysi tool also avoid full state space gener constrain express toolset 816 pal tool 15 approach shown capabl handl dine philosoph problem 100 philosoph task dine philosoph problem without butler task combin net reduct follow reduc state space gener also capabl handl problem 100 philosoph fact state one combin provid state space size grow linearli number philosoph 23 knowledg work report favor outcom analysi problem work valmari tienari 35 use semant model call chaosfre failuresdiverg cffd model approach composit way similar pal system 15 use combin composit analysi induct valmari tienari abl analyz dine philosoph system gener constant number state although work import techniqu effect exampl yet clear result cite requir manual step recogn use induct also unclear whether type induct step lead constant state space size dine philosoph exampl easili autom gener usag contrast analysi work use net reduct state space reduct fulli autom compar analysi time constrain express pal tool compar method find analysi effect effect two tool depend state space reduct method use follow net reduct time singl method establish definit superior term autom deadlock analysi continu develop compar studi clearli necessari 8 conclus commonli accept major impedi static analysi concurr program complex associ produc variou form state space represent present method deal matter optim model base two key ingredi focus deadlock specif analysi issu adapt exist modelreduct techniqu petri net reduct result part ongo research use petri net support autom analysi ada task motiv belief much gain base ada task analysi research model theoret matur also continu wide activ studi alreadi support mani avail tool combin petri net theori knowledg ada task semant deriv domain specif thu effici reduct rule petri net model ada task gener errorpron construct model optim manual program analysi critic model produc reflect program true behavior behavior programm model desir think true program question furthermor model optim benefit understand analysi issu german program compil techniqu support autom build correct model combin model build model optim add anoth dimens difficulti consid issu analyz may vari wide appli twophas methodolog fulli autom model optim first deriv semant rich model independ specif analysi issu manipul model algorithm design specif analysi issu concern observ reduc ada net model promis aid deadlock analysi concurr ada program especi use combin reduc state space gener method acknowledg thank mr goto help develop net reduct tool u buy help suggest mani aspect paper also thank young provid us copi refer 33 final thank refere valuabl comment greatli improv paper term technic content present r complex reachabl distribut commun process exposur deadlock commun process hard detect complex analyz synchron structur concurr program generalpurpos algorithm analyz concurr program task interact graph concurr analysi petri net framework autom static analysi ada task behavior describ analyz distribut softwar system design autom analysi concurr system constrain express toolset detect ada static deadlock use petri net invari design implement petri netbas toolkit ada task analysi tql task queri languag concurr program analysi tool analyz dynam properti system softwar design starvat critic race analysi ada composit reachabl analysi use process algebra control state explos reachabl analysi ident task counter variabl integ programmingbas approach verif compact petri net represent concurr program gener bdd symbol model check cc symbol model check 10 20 state beyond stubborn attack state space explos use partial order effici verif deadlock freedom safeti properti reachabl analysi petri net use symmetri applic experiment evalu state space reduct method deadlock analysi ada petri net theori model system proper termin flowof control program involv concurr process check properti net use transform petri net properti analysi applic unit state depart defens debug ada task program theori applic net reduct ada deadlock analysi interact statespac analysi concurr system integr concurr analysi softwar develop environ concurr analysi tool suit rational design preliminari experi use state space reduct method deadlock analysi ada task improv failur equival finitest system reduct algorithm tr ctr changjun jiang huaiq wang shaoyi liao behavior rel petri net journal comput scienc technolog v17 n6 p770780 novemb 2002 ravi k gedela sol shatz haip xu formal model synchron method concurr object ada 95 acm sigada ada letter vxix n3 p211220 sept 1999 georg avrunin ugo buy jame c corbett laura k dillon jack c wileden experi improv constrain express toolset proceed symposium test analysi verif p178187 octob 0810 1991 victoria british columbia canada nick savoiu sandeep shukla rajesh gupta mtp petri netbas framework analysi transform systemc design proceed 2005 workshop softwar compil embed system p99108 septemb 29octob 01 2005 dalla texa laur petrucci lar michael kristensen jonathan billington zahid h qureshi toward formal specif analysi avion mission system proceed confer applic theori petri net formal method softwar engin defenc system p95104 june 01 2002 adelaid australia juan jeffrey j p tsai tadao murata yi zhou reduct method realtim system use delay time petri net ieee transact softwar engin v27 n5 p422448 may 2001 haip xu sol shatz framework modelbas design agentori softwar ieee transact softwar engin v29 n1 p1530 januari juan jeffrey j p tsai tadao murata composit verif concurr system use petrinetbas condens rule acm transact program languag system topla v20 n5 p917979 sept 1998 jeffrey j p tsai alan liu eric juan avinash sahay knowledgebas softwar architectur acquisit specif verif ieee transact knowledg data engin v11 n1 p187201 januari 1999