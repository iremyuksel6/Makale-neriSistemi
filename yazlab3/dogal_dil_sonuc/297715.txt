random cach placement elimin conflict abstractappl regular pattern memori access experi high level cach conflict miss sharedmemori multiprocessor conflict miss increas significantli data transposit requir parallel techniqu block introduc within singl thread improv local result yet conflict miss tension minim cach conflict transform need efficientparallel lead complex optim problem parallel compil paper show introduct pseudorandom element cach index function effect elimin repetit conflict miss produc cach miss ratio depend sole work set behavior examin impact pseudorandom cach index processor cycl time present practic solut major implement issu type cach conclus support simul superscalar outoford processor execut spec95 benchmark well cach simul individu loop kernel illustr specif effect present measur instruct commit per cycl ipc compar perform differ cach architectur wholeprogram benchmark spec95 suit b introduct upward trend processor clock frequenc last ten year extrapol next ten year see clock frequenc increas factor twenti period 1 howev base current 7 per annum reduct dram access time 2 memori latenc expect reduc 50 next ten year potenti tenfold increas distanc main memori seriou implic design futur cachebas memori hierarchi well architectur memori devic block main memori place exactli one set block cach chosen set determin index function convent cach typic extract field bit address use select one block set 2 whilst easi impl ment index function robust princip weak suscept repetit conflict miss exampl c number cach set b block size address 1 2 map cach set j 1 b j c j 2 b j c 1 2 collid cach set address 1 2 k also collid cach integ k except two common case happen firstli access stream address fa collid ik may mgammak conflict miss stream secondli access element two distinct array b 0 collid b 1 j b 0 ik collid condit outlin setassoci help allevi conflict effect solut repetit regular conflict one best way control local dens matrix comput larg data structur use tile algorithm effect reorder iter space increas tempor local ever previou work shown conflict introduc tile seriou problem 3 practic meant compil tile loop nest realli ought comput maxim conflictfre tile size given valu b major array dimens n cach capac c often small make worthwhil tile loop perhap valu n known compil time gosh et al 4 present framework analyz cach miss perfectlynest loop affin refer develop gener techniqu determin optimum tile size method determin array pad size avoid conflict method requir solut set linear diophantin equat depend upon suffici inform compil time find solut tabl highlight problem conflict miss refer spec95 benchmark program compil maximum optim level instrument atom tool 5 data cach similar firstlevel cach alpha 21164 microprocessor simul 8 kb capac 32byte line writethrough write alloc benchmark simul first 2 oper nowritealloc featur tabl refer load oper tabl show miss ratio follow cach ganiz directmap twoway associ column associ 6 victim cach four victim line 7 twoway skewedassoci 8 9 scheme twoway skewedassoci cach use unconvent index scheme propos author comparison miss ratio fullyassoci cach shown penultim column miss ratio differ directmap cach fullyassoci cach shown rightmost column tabl repres directmap conflict miss ratio cmr 2 case hydro2d apsi organ exhibit lower miss ratio fullyassoci cach due suboptim lru replac fullyassoci cach particular program effect directmap conflict miss ratio repres dm 2w ca vc sa fa cmr tomcatv 538 481 470 266 221 125 413 su2cor 110 91 93 95 96 89 21 hydro2d 176 171 172 170 171 175 01 mgrid 38 36 42 37 41 35 03 applu 76 64 65 69 67 59 17 turb3d 75 65 64 70 54 28 47 apsi 155 133 134 107 115 125 30 fpppp 85 27 27 75 22 17 68 wave 318 317 307 201 168 139 179 go 134 82 86 109 75 48 86 gcc 106 72 73 86 66 53 53 compress 171 158 163 162 143 130 41 li 86 54 55 72 49 38 48 ijpeg 41 33 31 23 19 12 29 perl 107 73 75 93 69 52 55 vortex 53 27 27 38 18 14 39 ave ave int 922 644 667 767 566 442 480 averag 159 138 136 113 866 680 914 cach miss ratio directmap dm 2way setassoci 2w columnassoci ca victim cach vc 2way skew associ sa fullyassoci organ conflict miss ratio cmr also shown target reduct miss ratio hope achiev improv index scheme type miss compulsori capac remain unchang use random index scheme expect improv 2way setassoci cach directmap cach rather low columnassoci cach provid miss ratio similar twoway setassoci cach sinc former lower access time requir two cach probe satisfi hit choic two organ take account implement paramet access time miss penalti victim cach remov mani conflict miss outperform fourway setassoci cach final twoway skew associ cach offer lowest miss ratio previou work shown significantli effect fourway conventionallyindex setassoci cach 10 paper investig use altern index function reduc conflict discuss practic implement issu section ii introduc altern index function section iii evalu conflict avoid properti section iv discuss number implement issu effect novel index function cach access time section v evalu impact propos index scheme perform dynamicallyschedul processor final section vi draw conclus studi ii altern index function aim paper show altern cach organ elimin repetit conflict miss analog problem find effici hash function larg secondari tertiari cach may possibl use virtual address map adjust locat page cach suggest bershad et al 11 thu avoid conflict dynam howev small firstlevel cach effect achiev use altern cach index function field interleav memori well known bank conflict reduc use bank select function simpl modulopoweroftwo lawri vora propos scheme use primemodulu function 12 harper jump 13 sohi 14 propos skew function use xor function parallel memori system propos frailong et al 15 pseudorandom function propos raghavan hay 16 rau et al 17 18 scheme yield less uniform distribut request bank vari degre theoret predict implement cost principl scheme could use construct conflictresist cach use index function howev cach architectur two factor critic firstli chosen index function must logic simpl im plement secondli would like abl guarante good behavior regular address pattern even patholog convent index function commerci domain ibm 3033 19 amdahl 470 20 made use xormap function order index tlb first gener hp precis architectur processor 21 also use similar techniqu use pseudorandom cach index suggest author exampl smith 22 compar pseudorandom placement setassoci place ment conclud random index small advantag case advantag signific paper show certain workload cach organ advantag larg hash process id address bit order index cach evalu multiprogram environ agarw 23 result show scheme could reduc miss ratio perhap wellknown altern cach index scheme class bitwis exclusiveor function propos skew associ cach 8 bitwis xor map comput bit cach index either one bit address xor two bit two map requir differ group bit chosen xore case twoway skewedassoci cach consist two bank size access simultan two differ hash function associ help reduc conflict skew index function help prevent repetit conflict occur polynomi modulu function first appli cach index 10 best describ first consid unsign integ address term binari represent interpret polynomi defin field gf2 binari represent mbit cach index r similarli defin gf2 polynomi rx order less effect rx irreduc polynomi order p x x mod p x gener polynomi order lower polynomi fulfil previou requir call ipoli poli nomial rau show comput rx accomplish vectormatrix product address n theta matrix h singlebit coeffici deriv p x 18 gf2 product comput network xor gate hmatrix constant gate omit map requir xor gate fanin 2 n practic may reduc number input address bit polynomi map function ignor upper bit serious degrad qualiti map function ipoli map function studi previous context strideinsensit interleav memori see 17 18 certain provabl characterist signific valu cach index 24 demonstr skew ipoli cach index scheme show higher degre conflict resist exhibit convent setassoci nonipoli xorbas map function overal skewedassoci cach use ipoli map pure lru replac polici achiev miss ratio within 1 achiev fullyassoci cach given advantag ipoli function bitwis xor function result present paper use ipoli index scheme iii evalu conflict resist perform integ floatingpoint spec95 program evalu column associ twoway setassoci 2w twoway skewedassoci organ use ipoli index function case singlelevel cach assum miss ratio configur shown tabl ii given convent index function directmap dm fullyassoci organ display respect lowest highest degre conflictresist possibl cach architectur defin bound within novel index scheme evalu miss ratio shown rightmost two column tabl ii columnassoci cach accesstim characterist similar directmap cach degre pseudoassoci address map one ipoli index mod 2 k col assoc 2way skew index spl lru 2w plru lru fa dm su2cor 105 91 99 94 94 89 110 hydro2d 176 172 171 170 171 175 176 mgrid 51 42 38 45 41 35 38 applu 73 65 69 68 64 59 76 turb3d 81 60 48 45 42 28 75 apsi 122 112 114 110 106 125 155 fpppp 40 27 28 21 23 17 85 wave 146 138 142 139 137 139 318 go 96 66 86 75 67 48 134 gcc 82 63 72 67 61 53 106 compress 145 135 137 139 134 130 171 li 55 45 61 49 45 38 86 ijpeg 18 13 17 15 14 12 41 perl 85 67 88 71 64 52 107 vortex 27 17 20 18 16 14 53 ave ave int 668 522 626 555 509 442 922 ave 132 114 123 116 113 114 473 averag 877 739 799 747 714 680 159 ii miss ratio ipoli index spec95 benchmark two locat cach initi one probe column label spl repres cach swap data two locat increas percentag hit first probe also use realist pseudolru replac polici cach report column label lru swap data column use unrealist pure lru replac polici 10 expect twoway setassoci cach capabl elimin mani random conflict ever conventionallyindex setassoci cach abl elimin patholog conflict behavior limit associ naiv index function perform twoway setassoci cach improv simpli replac index function whilst retain characterist convent lru replac still use index function impact replac cach organ two program twoway ipoli cach lower miss ratio fullyassoci cach due suboptim lru replac fullyassoci cach common anomali program neglig conflict miss final cach organ shown tabl ii twoway skewedassoci cach propos origin seznec 8 origin form use two bitwis xorindex function version use ipoli index function propos 10 24 case two distinct ipoli function use construct two distinct cach indic address pure lru difficult implement skewedassoci cach present result cach use realist pseudolru polici label plru cach use unrealist pure lru polici label lru organ produc lowest conflict miss ratio 48 067 specint 1261 007 specfp strike perform improv domin three program tomcatv swim wave effect exhibit patholog conflict miss ratio convent index scheme studi olukotun et al 25 shown data cach miss ratio tomcatv wast 56 40 avail ipc 6way 2way superscalar processor respect tile often introduc extra cach conflict elimin alway possibl softwar altern index function exhibit conflict avoid properti use avoid induc conflict effect ipoli index tile loop evalu simul cach behavior varieti tile loop kernel present small sampl result illustr gener outcom figur show miss ratio observ two tile matrix multipl kernel origin matric squar dimens 171 256 respect tile size vari 2 theta 2 16 theta 16 show effect conflict occur cach directmap a1 2way setassoci a2 fullyassoci fa skew 2way ipoli hpsk tile work set divid cach capac measur fraction cach occupi singl tile cach capac 8 kbyte 32byte line dimens 171 miss ratio initi fall cach tile size increas due increas spatial local point self conflict begin occur conventionallyindex directmap twoway setassoci cach fullyassoci cach suffer selfconflict miss ratio decreas monoton less 1 50 load behavior skew 2way ipoli cach track fullyassoci cach close qualit differ ipoli cach convent twoway cach clearli visibl dimens 256 product array multiplicand array posit memori crossconflict occur addit selfconflict henc directmap 2way set associ cach experi littl spatial local howev ipoli cach abl elimin crossconflict well selfconflict track fullyassoci cach iv implement issu logic gf2 polynomi modulu oper present section ii defin class hash function comput cach placement address combin subset address bit use xor gate mean exampl bit 0 cach index may work set capac miss ratio 0 10 20 30 40 50 hpsk fig 1 miss ratio versu cach load 171 theta 171 matrix multipli work set capac miss ratio 0 10 20 30 40 50 fig 2 miss ratio versu cach load 256 theta 256 matrix multipli comput xor bit 0 11 14 19 origin address choic polynomi determin bit includ set implement function cach 8bit index would requir eight xor gate fanin 3 4 whilst appear remark simpl consid placement function firstli function use address bit beyond normal limit impos typic minimum page size restrict sec ondli use pseudorandom placement multilevel memori hierarchi implic mainten inclus 24 explain two issu depth show virtualr twolevel cach hierarchi propos wang et al 26 provid clean solut problem cach memori access convent organ normal comput effect address ad two reg ister regist plu displac ipoli index impli addit circuitri comput index effect address circuitri consist sever xor gate oper parallel therefor total delay delay one gate xor gate number input depend particular polynomi use experi report paper number input never higher 5 xor gate requir ipoli map may increas critic path length within processor pipelin howev delay short sinc bit index comput parallel moreov show later even addit delay induc full cycl penalti cach access time ipoli map provid signific overal perform improv memori address predict also use avoid penalti introduc xor delay lengthen critic path memori address shown highli predict instanc 27 shown address 75 dynam execut memori instruct spec95 suit predict simpl tabular scheme track last address produc given instruct last stride similar scheme could use give earli predict line like access given load instruct outlin processor incorpor tabl index instruct address entri store last address predict stride recent execut load struction fetch stage tabl access program counter decod stage predict address comput xor function perform comput predict cach line done one cycl sinc xor perform parallel comput mostsignific bit effeec tive address instruct subsequ issu memori unit use predict line number access cach parallel actual address line comput predict line turn incor rect cach access repeat actual address otherwis data provid specul access load destin regist number previou paper suggest address predict mean reduc memori latenc 28 29 30 execut memori instruct depend instruct specul 31 27 32 case missspecul recoveri mechan similar use branch predict scheme use squash missspecul instruct v effect ipoli index ipc order verifi impact polynomi map realist microprocessor architectur develop parametr simul fourway superscalar processor outoford execut tabl iii summar function unit latenc use experi reorder buffer contain 32 entri two separ physic regist file fp teger 64 physic regist processor lockupfre data cach 33 allow 8 outstand miss differ cach line cach capac 8 kb simul 2way associ 32byte line cach writethrough nowrit alloc cach two port twocycl time miss penalti 20 cycl connect 64bit data bu infinit leveltwo cach data depend memori specul use mechan similar arb multiscalar 34 hp pa8000 35 branch histori tabl 2k entri 2bit satur counter use branch predict function unit latenc repeat rate simpl fp 4 1 iii function unit instruct latenc memori address predict scheme implement directmap tabl 1k entri index instruct address reduc cost entri tag although increas interfer ta ble entri contain last effect address recent load instruct index tabl entri togeth last observ stride addit entri contain 2bit satur counter assign confid predict mostsignific bit counter set would predict consid correct address field updat new refer regardless predict howev stride field updat counter went two consecut mispredict tabl iv show ipc miss ratio six configur 1 ipc averag comput use equallyweight harmon mean baselin configur 8 kb cach convent index address predict np 3rd column averag ipc configur 127 averag miss ratio 1653 ipoli index averag miss ratio fall 968 xor gate critic path ipc rise 133 nx 5th column convers xor gate critic path one cycl penalti cach access time assum result ipc 129 wx 6th column ever memori address predict introduc wp 7th columnn ipc cach without xor gate critic path nx henc memori address predict scheme offset penalti introduc addit delay xor gate critic path even conserv assumpt whole cycl latenc ad load instruc tion final tabl iv also show perform setassoci cach without ipoli index 1 configur simul 10 8 instruct skip first 2 theta 10 9 2nd column notic addit ipoli index 8 kb cach yield 60 ipc increas obtain doubl cach size index ipoli index su2cor 128 124 126 124 121 125 hydro2d 114 113 115 113 111 115 mgrid 163 161 163 157 155 159 applu 151 150 153 150 146 152 turb3d 185 180 182 181 178 182 apsi 113 108 109 108 107 109 fpppp 214 200 200 198 193 194 wave 137 126 128 151 148 154 go 100 087 088 087 083 084 compress 113 112 113 111 107 110 li 140 130 132 133 126 131 ijpeg 131 128 128 129 128 130 perl 145 126 127 124 119 121 vortex 139 127 128 130 125 127 ave ave int 129 119 120 120 115 117 ave 128 111 113 146 142 149 ave 138 130 132 130 127 130 averag 136 127 128 133 129 133 iv compar ipc measur simul ipc measur exhibit small absolut differ enc benefit ipoli index perceiv small subset benchmark pro gram program spec95 exhibit low conflict miss ratio fact spec95 conflict miss ratio 8 kb 2way setassoci cach less 4 program except tomcatv swim wave5 two penultim row tabl iv show independ ipc averag benchmark high conflict miss ratio ave low conflict miss ratio ave highlight abil polynomi map reduc miss ratio significantli boost perform problem case one see polynomi map provid signific 27 improv ipc three bad program even xor gate critic path memori address predict use memori address predict ipoli index yield ipc improv 33 compar convent cach capac 16 higher convent cach twice capac notic polynomi map scheme predict even better organ without predict xor gate extend critic path due fact memori address predict scheme reduc one cycl effect cach hit time predict correct sinc address comput overlap cach access comput address use verifi predict correct howev main benefit observ come reduct conflict miss isol differ effect also simul organ memori address predict scheme convent index 8 kb cach wp column 4 compar ipc organ column 3 see benefit memori address predict scheme due sole reduct hit time almost neglig confirm improv observ ipoli index scheme address predict deriv reduct conflict miss averag fifteen program exhibit low level conflict miss show small 17 deterior averag ipc ipoli index use xor gate critic path due slight increas averag hit time rather overal increas miss ratio averag fall 2 program reduct aggreg miss penalti outweigh slight extens critic path length vi conclus paper discuss problem cach conflict miss survey option reduc elimin conflict describ pseudorandom index scheme base polynomi modulu function shown robust enough virtual elimin repetit cach conflict caus bad stride inher spec95 benchmark well elimin introduc applic tile loop nest highlight major implement issu aris use novel index scheme exampl ipoli index use address bit convent cach comput cach index also use differ index function level1 level2 cach result occasion evict level1 simpli maintain inclus explain problem solv use twolevel virtualr cach hierarchi final propos memori address predict scheme avoid penalti due small potenti delay critic path introduc pseudorandom index function detail simul outoford superscalar processor demonstr program signific number conflict miss convent 8 kb 2way skewedassoci cach perceiv ipc improv 33 address predict 27 without address predict 16 higher ipc improv obtain simpli doubl cach capac iti furthermor program analyz experi signific conflict miss averag see 17 reduct ipc ipoli index appear critic path comput effect ad dress address predict use index logic appear critic path deterior overal averag perform experienc program believ key contribut pseudorandom index result predict cach behavior experi found ipoli index reduc standard deviat miss ratio across spec95 1849 516 could benefici realtim system unpredict time caus possibl patholog miss ratio present problem conflict miss elimin miss ratio depend sole compulsori capac miss gener easier predict control conflict avoid could also benefici iterationspac tile use improv data local vii acknowledg work support part european commiss esprit project 24942 british council grant 1016 spanish ministri educ accion integrada hispanobritanica 202 cycit tic98 0511 author would like express thank jose gonzalez joan manuel parcerisa help simul softwar anonym refere help comment r nation technolog roadmap semiconductor comput architectur quantit approach cach perform optim block algorithm cach miss equat analyt represent cach miss atom system build custom program analysi tool columnassoci cach techniqu reduc miss rate directmap cach improv directmap cach perform addit small fullyassoci cach prefetch buffer case twoway skew associ cach skewedassoci cach elimi nate cach conflict miss xorbas placement func tion avoid cach conflict miss dynam larg directmap cach prime memori system array access vector access perform parallel memori logic data skew scheme interleav memori vector processor xorschem flexibl data organ parallel memori randomli interleav memo rie cydra 5 stride insensit memori system pseudorandomli interleav memori amdahl corp hardwar design first hp precis architectur comput cach memori analysi cach perform oper system multiprogram design perform conflictavoid cach case singlechip multiprocessor organ perform twolevel virtualr cach hierarchi specul execut via address predict data prefetch hardwar support hide cach latenc streamlin data cach access fast address calcul zerocycl load microarchitectur support reduc load latenc memori address predict data specul perform potenti data depend specul collaps lockupfre instruct fetchprefetch cach organi zation arb mechan dynam reorder memori refer advanc perform featur 64bit pa 8000 tr ctr bartolini c prete propos inputsensit analysi profiledriven optim embed applic acm sigarch comput architectur news v32 n3 p7077 june 2004 k patel e macii l benini poncino reduc cach miss applicationspecif reconfigur index proceed 2004 ieeeacm intern confer computeraid design p125130 novemb 0711 2004 han vandierendonck philipp manet jeandidi legat applicationspecif reconfigur xorindex elimin cach conflict miss proceed confer design autom test europ proceed march 0610 2006 munich germani han vandierendonck koen de bosscher xorbas hash function ieee transact comput v54 n7 p800812 juli 2005 mathia spjuth martin karlsson erik hagersten skew cach lowpow perspect proceed 2nd confer comput frontier may 0406 2005 ischia itali wang nelson passo improv cach hit ratio extend referenc cach line journal comput scienc colleg v18 n4 p118123 april g e suh l rudolph devada dynam partit share cach memori journal supercomput v28 n1 p726 april 2004 han vandierendonck koen de bosscher highli accur effici evalu randomis set index function journal system architectur euromicro journal v48 n1315 p429452 may g edward suh sriniva devada larri rudolph analyt cach model applic cach partit proceed 15th intern confer supercomput p112 june 2001 sorrento itali rui min yime hu improv perform larg physic index cach decoupl memori address cach address ieee transact comput v50 n11 p11911201 novemb 2001 bartolini c prete optim instruct cach perform embed system acm transact embed comput system tec v4 n4 p934965 novemb 2005