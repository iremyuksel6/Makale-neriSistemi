specif function mathemat suppli us variou oper creat function relat set known function function invers simpl exampl oper use specifi program howev mani strong constraint argument ensur result inde function exampl function biject may invert seriou impedi use specif best limit specifi express power worst impos strong proof oblig programm propos loosen definit function constraint oper invers greatli relax specif function emerg gener tradit function applic argument may yield good outcom argument applic may yield sever outcom unpredict function gener algorithm serv specif tradit function embodi program languag idea specif function new accommod gener without fall foul myriad anomali prove elus investig technic problem hinder use propos solut particular develop formal axiomat reason specif function prove consist construct model b introduct squar function integ defin sqr z tradit regard welldefin invers neither inject surject suppos howev broaden definit function invers sqr call sqrt inde function might defin sqrt thu permiss make digitalhard copi part materi without fee grant provid copi made distribut profit commerci advantag acm copyrightserv notic titl public date appear notic given copi permiss associ comput machineri inc acm copi otherwis republish post server redistribut list requir prior specif permiss andor fee morri bunkenburg use instanc call prescript express gener form 2xt j p intuit mean x type satisfi predic p x regard 2xt jp equival special express pronounc bottom mani x inform outcom actual produc exampl sqrt 4 may yield 2 gamma2 dont know care inde even determin behavior experi sqrt 4 yield 2 morn may well yield gamma2 afternoon sqrt 7 sqrtgamma4 yield anoth exampl suppos type phonebook compris relat type name type phonenumb follow function look person phone number phone book lookup lookup necessarili function tradit sens peopl list phone book sever entri would like treat elabor exampl consid function take argument function f set select element f minim exampl instanti z yield either 1 gamma1 defin leastwrt type thu illustr use make function use two lover travel citi citi comput consult function yield citi travel want togeth soon possibl assum type citi whose element citi function timec theta cityn yield least travel time minut say two citi function hersciti ffl leastwrt cciti ffl timehi c max timeh c citi need socal flat type integ structur type function type exampl specifi familiar factori function elabor exampl use choic function type let us specifi program play oneplay game rubik cube assum context provid set cube legitim state game set legalmov subset cube cube describ set legal move valu goal 2 cube describ goal game player model function f cubecub posit player move posit b player specif function delta 3 elimin player get stuck goodplay player cost total number move taken play possibl game cost program want gameplay cost goodplay sqrt lookup leastwrt gamep layer exampl function liber defin call specif function although specif function gener comput play import role specifi comput function exampl sqrt might present programm specif program implement meant produc comput function sqrt whose behavior consist sqrt consist mean sqrt appli perfect squar x yield squar root x either neg non neg otherwis behav way programm fanci exampl programm might well design sqrt graph say sqrt refin sqrt write sqrt v sqrt roughli hold express e f context possibl outcom e superset possibl outcom f slight twist refin term mathemat way say custom ask imposs better will accept whatev given reader familiar refin calculi may feel good caus w would appropri symbol refin v tradit use may help think v suggest increas inform content exampl context appli sqrt 4 outcom 2 among outcom appli sqrt 4 2 gamma2 context appli sqrt gamma2 outcom 49 accept sqrt appli gamma2 yield refin calculu essenc languag transit refin relat v term languag comput remaind avail describ desir behavior process make program consist produc sequenc languag term t0 v t1 v v tn t0 custom specif tn comput term sequenc except first construct increment predecessor say term sequenc refin predecessor program stepwis refin wirth 1973 exampl process albeit somewhat inform one term languag written partli inform pseudocod motiv studi specif function desir use part refin calculu support develop function whether function imper program unlik stepwis refin mind fulli formal mathemat system refin formal provabl deduct given axiom morri bunkenburg ff xt ffl e j yt ffl exni fresh e j xt ffl f extension skolem fig 1 axiomat properti function requir axiomat logic axiomat base type function oper axiomat function tradit function typic axiomat postul properti figur replac f subject usual caveat renam avoid variabl captur similarli predic j extension e f function type tu list properti independ one anoth one axiomat would use employ axiom specif function fall foul myriad anomali shall see shortli effect inhibit deploy serious exampl common restrict choic flat type rule exampl specif gameplay investig technic problem propos solut particular develop formal axiomat reason show see anomali 11 outlin rest paper next section introduc concept notat equival finement choic proper valu third section explain detail anomali occur function choic meet suggest way avoid fourth section axiomat languag construct pair fifth section core paper present axiomat specif function avoid discuss anomali sixth section discuss logic argu prefer logic seventh section give denot model calculu final draw conclus review relat literatur 12 contribut detail exposit six anomali occur function choic combin suggest anomali avoid axiomat specif function denot model 2 mathemat preliminari 21 equival choic refin presum avail strong equal oper j term reserv weak comput equal oper found program languag weak equal explain use equival specif function delta 5 synonym strong equal equival reflex symmetr transit congruenc replac f term without chang mean choic inher 2xt j p may unbound 2xz j true may yield integ hand may x satisfi p 2xt jfals introduc special term abbrevi 2xt jfals may seem intuit reason v f hold term f refin calculi commonli depart intuit postul v f term f adopt latter approach known exclud miracl calculu give rise arguabl easier appli practic although underli theori slightli complex choic central concern paper noth substanc follow depend note 2xt j true differ refin even nontermin express applic recurs function f f x bottom type indic subscript nearli alway omit type either signific context easili infer refin calculi partial oper 30 commonli equat similarli nontermin express also customari use dont care term custom indic interest outcom although may use context distinguish variou role program deriv similar repres error situat outcom unpredict unconstrain precis one x type satisfi predic p call k equival k one consequ specif function includ tradit total function finit choic express term binari choic e u f specifi choic among term e f use word term express interchang exampl 2 u 3 specifi 2 3 without prefer written equival 2xz j x j evid u commut associ idempot standard postul refin calculi refin equival relat e follow v reflex transit antisymmetr respect j also follow zero u reader come background formal logic might tempt view rough equival hilbert ffl oper leisenr 1969 would mistak littl connect two roughli speak ffl repres choic alreadi made everyon time wherea 2 repres choic yet made may made differ differ occas hilbert choic 2 3 alway 2 alway 3 dont know one hand 2 u 3 sometim 2 sometim 3 formal term ffl oper satisfi axiom word p true x type true fflxt j p assert hold ffl replac 2 exampl let j abbrevi fflxz j x truth j k stand 2xz j x fals ffl oper use program refin requir loos specif resolv programm way time place exampl custom ask 6 delta j morri bunkenburg error messag display file unavail without state prefer word messag would requir everi programm deliv exactli messag amusingli choic hilbert choic diner restaur would choos meal menu postul oper base type like integ strict ie zero distribut choic design decis properli reflect fact brand choic allow differ resolut differ occas exampl although 2 u would equival 0 accord hilbert brand choic admit possibl first occurr 2u3 outcom 2 second outcom 3 vice versa henc behav strictli distribut 22 proper instanti rule univers quantif assert truth term e instanti rule easili lead inconsist presenc bottom choic exampl theorem arithmet might tempt infer contradict earlier conclus similar anomali aris instanti infer two way dilemma either modifi standard law arithmet take account bottom choic modifi rule instanti easiest fix modifi instanti rule forbid instanti term involv unresolv choic call term improp term proper exampl 2u3 improp wherea proper final exampl assum distribut u intent everi express either proper bottom choic among proper requir 8xt ffl p similarli instanti proper term condit underli logic terminolog sndergaard sestoft 1992 opt strict singular semant list altern approach technic express e type proper iff 9xt ffl e j x cours ensur use definit shall axiomat type infer truth otherwis 9xt ffl e j x postul common base type z char float flat ie 8x yt ffl deduc flat type e u f proper iff e proper equival f also postul constant case integ 0 1 gamma1 2 gamma2 etc proper formal deduc say proper 2 proper differ 3 write proper e abbrevi 9xt ffl nonflat type function type consider complex flat type determin express proper need obviou shall see us came know function studi function integ real easi seduc accept properti function may hold function flat type true gener even case specif function advis reader think nonflat type whenev look specif function delta 7 intuit understand sometim misguid think term flat type purpos exampl denot two type least two proper u v u v ie u v whether type exist cours consequ design decis howev usual function type nonflat exampl might reason consid proper remaind paper use lower case letter proper ex pression upper case letter arbitrari possibl improp express 3 anomali section expos problem encount straightforward axiomat function drawn figur 1 use presenc bottom choic 31 betaequival extension specif function combin axiom fi extension lead inconsist consid xz ffl xgammax xz ffl 0 extension conclud equival sinc 8xz ffl xgammax j 0 appli function turn deduc j 0 similarli deduc appli two function 2 u 3 turn fruit attack anomali restrict extension axiom two function question simpl expect equival extension howev restrict remedi shall adopt restrict fi axiom proper argument anomali disappear sinc neither 2 u 3 proper cours left question assign mean applic improp argument choos make function applic strict distribut choic symbol e g exampl function yield appli 0 appli 2 u 3 forget function type also accommod bottom choic reason symmetri decid function applic strict distribut function well argument ie g decis arent controversi sinc reason altern lead quandari shall see first sever exampl inconsist aris naiv appli tradit law function rid requir com promis choos compromis make life pleasant possibl put tool intend use purpos chang might compromis exampl insist strict would appropri target program languag lazi function languag like eg haskel peterson hammond 1997 calculu explor bunkenburg 1997 hehner 1993 1998 decis whether function applic distribut choic left open gener must decid individu everi abstract develop write morri bunkenburg 32 distribut j follow inconsist discuss solv satisfactorili meerten 1986 use j prove equival transform one elsewher omit type inform reduc syntact clutter g f show 3 u 4 u 5 u 6 j 3 u 6 appli higherord function f g turn assum f proper 1 wherea g get 3 u definit want 3 u 4 u 5 u 6 j 3 u 6 calcul assum x ffl x u 3 proper shall see later reason jaxiom also lead us conclud tu xt ffl u equival ap strict specif function delta 9 run counter practic imper function program languag imper languag exampl bodi function f suppli argument procedur proc inspect point invok proc point invok f within bodi proc resolv dilemma restrict jaxiom proper function tu function x ffl x u x ffl improp much say proper function later 33 extension distribut postul distribut applic consequ extension equival function break presenc higherord function consid f proof equival must lead contradict h ffl previous prove equival j distribut prove equival extension extension uap choos resolv inconsist function equival requir extension gener turn case proper function extension suffici reflect restrict surpris unrestrict extension identifi function tu wish 34 monoton distribut difficult deduc function applic distribut u function applic monoton respect v follow introduc inconsist construct nonmonoton function function f twou f u recal two two proper u v u v assum condit express whose first argument proposit avail construct f thu xtwo ffl x j u 1 els 2 shall avoid anomali admit abstract xt ffl e restrict hindranc practic turn oper use program languag use specif inde monoton function f nonmonoton j nonmonoton oper trivial function flat domain monoton even bodi employ nonmonoton construct possibl set reason morri bunkenburg syntact rule form abstract guarante monoton although accept abstract might rule littl disappoint refin monoton bodi abstract retain oblig show monoton necessarili preserv refin exampl x j uthen 1u2 els 1 monoton refin x j u 2 els 1 monoton fortun exampl rare know reli use strong j v oper howev theoret surpris shall see later 35 monoton skolem skolem axiom 8xt ffl9yu fflp 9f u ffl8xt fflp ynf x promis exist certain function seem intuit reason presenc monoton requir function may promis imposs recal type two proper u v u v let p hold function f promis skolem axiom would map u 1 v 2 monoton essenc problem restrict monoton function skolem axiom promis exist monoton map everi possibl nonmonoton map promis kept shall postul skolem axiom abl deriv reason p exampl x p x drawn flat type skolem hold return point later 4 axiomat process axiomat prescript condit express also explain method axiomat type oper use pairtyp exampl serv model complex function type come 41 axiomat languag construct let e abbrevi e 6j follow postul captur intuit idea refin describ earlier conjunct e f requir distinguish 2xt ffl true antisymmetri v deduc follow determin whether given express e refin anoth express f whether e equival f need know whether e f bottom proper refin languag construct foo need abl determin foo foo v x fresh x gener strategi defin axiom simpl exampl see axiomat u figur 2 defin axiom prescript express given figur 3 axiomat prescript express make assumpt underli logic specif function delta 11 ue fig 2 axiom u fig 3 axiom prescript express differ assumpt might made would give rise similar axiomat possibl axiomat languag construct foo defin foo v e arbitrari express e determin foo instanti e determin foo v x instanti e x see exampl axiomat condit assert express figur 4 assert express form p gamma e equival e p true otherwis assert express call assumpt ward 1994 discuss eg moller 1989 increasingli becom part specif program languag eg eiffel meyer 1992 serv annot express littl knowledg use refin exampl find zero function integ might specifi f zz ffl 2xzjf wish inform implementor function ever invok monoton increas function specifi 42 axiomat type new type introduc must provid axiom describ proper case pair type proper seem perfectli straightforward proper pair form x proper constitu x everi proper x x proper pair captur first two axiom figur 5 figur 5 also give axiomat oper pair observ shape two axiom describ type constructor pair forma tion two axiom describ type destructor two project function describ left project fst right project snd simi lar third axiom state pair format strict argument fourth state refin carri componentwis formul axiom slightli clutter need state refin guarante either compon intim relationship refin choic import axiom pairform distribut choic argument axiom fst obviou final axiom fact impli fst distribut choic fig 4 axiom condit assert express morri bunkenburg fig 5 axiom pair type 5 axiomat function axiomat function type follow strategi pair keep mind desir properti function collect earlier 51 core axiom partial axiomat function given figur 6 recal use lower case letter proper uppercas letter arbitrari express cons quentli lower case variabl figur 6 univers quantifi done minim syntact clutter upper case one also omit type avoid clutter exampl first axiom full first axiom familiar jequival proper function show everi proper function written abstract take pair type model expect companion axiom determin abstract proper turn lot said without commit axiom postpon consider moment second group axiom defin abstract axiom ensur desir distinguish xt ffl met axiom v impli desir properti extension equival proper function remain axiom defin singl function destructor viz applic effect assert function applic strict distribut applic reduc substitut essenti interplay abstract applic captur axiom fij noth correspond axiom fij pair type axiom ap state three way function applic yield either function argument applic normal yield observ ap apv function applic determin consid applic e f e f proper refin e f respect even though yet fix abstract proper axiom figur 6 impli larg bodi desir theorem includ list figur 7 particular function applic strict distribut monoton either side proper function refin equival extension abstract refin refin bodi assum monoton preserv bound variabl abstract renam assum logic give renam univers quantifi variabl final move choic abstract refin equival might expect see observ xz ffl even x 2 els 3 refin xz ffl 2 u 3 wherea specif function delta 13 e e v f8x fij x ffl e j exni fig 6 core axiomat function apmon apmon g v h mon e v x ffl f ff x ffl e j ffl exni x free variabl e e u x ffl f fig 7 theorem follow axiom figur 6 refin xz ffl 2 xz ffl 3 illustr axiom prove mon axiom deduc u e v x ffl f e e axiom v transit deduc e u x ffl f u greatest lower bound respect v e x ffl e mon e properti choic axiom figur 6 resolv anomali section 3 exampl recal function f use put equival function section 3 construct difficulti j extension although remain extension equal longer equival 14 delta j morri bunkenburg 2 f g arbitrari f g u v final line gener hold seen instanti f x ffl even x x els 3 52 proper function must address question function proper first definit expect tradit function proper ie abstract xt ffl e e proper proper x second alreadi rule tu proper third consid abstract xt ffl e e valu x proper remain valu x ie tradit partial function assum moment deem improp consid extrem exampl xt ffl improp must equival choic proper refin imposs assumpt proper function proper outcom conclud must includ partial function among proper final left question whether function x ffl 2 u 3 whose bodi contain unresolv choic consid proper seem two reason view liber view accept abstract proper conserv one regard x ffl 2 u 3 improp case equival choic infinit collect proper function refin ie function whose applic argument equival either 2 3 2 u 3 includ x ffl 2 x ffl 3 x ffl even x 2 els 3 mani other accord view abstract proper iff bodi proper bottom liber view adopt postul axiom prop properxt ffl e incident axiom eras figur 6 presenc axiom sinc follow therefrom assum underli logic ensur 8xt ffl x disadvantag proper function includ rather exot element frequent exclud explicitli clutter specif hand liber view often conveni calcul particular tell appear whether function f proper henc whether f subject instanti whether fij appli f argument higher order function conserv view embodi axiom e 8xt ffl e proper e specif function delta 15 state effect proper function partial function math matic howev calcul may hard prove given abstract proper exist proper function satisfi properti stanc show x ffl e proper refin ie 9f ffl x ffl e v f show 9f ffl 8x ffl e v f x enough exhibit map x x 8x ffl e v x must find monoton map although liber conserv view seem roughli equal attract surfac conserv view reject subtl anomali consid function g els 1 would seem two refin ie g 1 g 2 els 1 howev g 2 reject monoton conclud help law 2 g j g 1 contradict assumpt g 1 proper g seem reason escap includ g among proper 2 impli g 6j g 1 g g proper refin wherea g 1 root caus anomali certain seemingli natur refin function lost monoton requir although true liber conserv view signific former view parent function retain among proper refin inform lost conclus specif function axiomat figur 6 axiom replac prop 53 total function function type bring new subtleti notion proper point properti e proper refin longer hold function type introduc exampl although function proper let us say express e type say total satisfi total e iff refin ie iff x exampl xz ffl 2 total xz ffl x0 gamma 2 flat type pair type deriv flat type total proper ident function type howev total stronger proper fact special usual sens word total obvious import concept use rescu skolem axiom shown hold specif function gener prove still remain irrit howev although skolem promis exist function f satisfi properti p guarante refin f also satisfi p restrict predic monoton sens v 0 x condit automat satisfi type flat 54 recurs function recurs defin function form f u ffl xt ffl e e type u may contain free occurr f notat allow us write recurs function without name usual recurs function simultan morri bunkenburg unfold f ffl x ffl e j x ffl efnf ffl x ffl e prefix x ffl efnf e v f fig 8 axiom recurs function describ name write f may occur e bodi recurs function must monoton f ensur fixpoint exist detail given section denot semant axiomat recurs standard way fixpoint least prefixpoint respect refin see figur 8 type omit program develop abstract refin recurs function recurs refin suppos set implement specif x ffl e via recurs modu operandi proceed seri refin begin e end term form f x ffl e x ffl e appear within f along path transmut nonalgorithm notat algorithm substitut almost conclud f ffl x ffl f f recurs function ie x ffl e v f ffl x ffl f f say almost ensur recurs wellfound program term invoc recurs function termin everi programm know although necessarili formal term ensur termin recurs function argument recurs call must less incom argument respect wellord ad requir captur formal statement recurs introduct theorem theorem fun e v f fni ffl yx gamma exni x x ffl e v wellord sourc type f proof begin e v f ffl x ffl f axm unfold e v x ffl f fnf ffl x ffl f prove 8xt ffl e v f fnf ffl x ffl f wellfound induct p x arbitrari x type specif function delta 17 assumpt theorem v transit mon express variabl f axm unfold thm ff thm mon 55 exampl construct small program decompos natur number sum two squar start specif ss proceed standard way problem choos finit search space contain j assum repeatedli test pair contain candid j test done reduc search space remov pair elimin time choos search space js lo lo hi natur initi 0 b nc respect summari ss v nn ffl ss 1 0 xip ss 1 lo let e denot bodi ss 1 difficult conclud follow fact e lo lo lo use elementari properti els infer els lo 2 els ss 1 termin argument observ first e impli lo hi second observ comparison e ss 1 lo hi absolut differ two argument ss 1 less 1 similarli ss 1 morri bunkenburg 1 practition recogn ingredi wellfound order show termin e hold omit detail e hold termin issu henc shown ss1 v f els lo 2 els 6 boolean proposit natur everi refin calculu boolean given basic type flat type although common defin boolean connect strict distribut see exampl larsen hansen 1996 leftto right evalu see exampl partsch 1990 turn serious unattract mani familiar law boolean algebra break result boolean becom awkward handl calcul turn howev boolean connect extend accommod bottom choic quit differ way almost familiar law boolean algebra continu hold main loss law exclud middl describ morri bunkenburg 1998a 1998b actual languag refin calculu use make specif superset program oper everi type rich mathemat provid particular specif languag boolean type includ arbitrari univers existenti quantif even infinit domain turn quantifi suitabl extend allow bottom choic retain law predic calculu loss instanti carri proper term see morri bunkenburg 1998b detail includ hilbertstyl axiomat present made assumpt logic reason specif theori pretti much independ choic choic unusu construct comprehens axiomat boolean includ quantifi elect avoid duplic effort adopt logic reason specif short distinguish proposit boolean mean exampl even someth exot e v f e j f boolean express henc specif advantag disadvantag one disadvantag refin equival primari sourc nonmonoton abstract advantag facilit smooth transit specif program proposit migrat effortlessli specifica tionsprogram often want formal extract program specif see morri bunkenburg 1998b exampl 7 model theori section provid denot semant languag construct given purpos ensur consist calculu underpin understand particularli recurs model parameter model base type logic specif function delta 19 theta u theta u fig 9 interpret type grammar type type given base type type interpret complet partial order element none contain extend partial order usual way give semant function program languag interpret everi express type element howev approach accommod choic accommod choic interpret everi express e subset intuit contain interpret possibl outcom e model recurs refin need order set order appropri total correct calculu ie one e u j one smyth order v 0 see plotkin 1976 smyth 1978 defin b subset inconveni v 0 antisymmetr make antisymmetr restrict upclos set upclosur subset partial order p written defin pg avoid doubl subscript abbrevi conveni upclos set v 0 ident therefor interpret everi express type upclos subset mean recurs refin use everi type denot p set fs g upclos subset abbrevi p base type b set b given order simpli equal pair type interpret product constitu type function type tu interpret function f p 1 u monoton sens u interpret base type z interpret pair functiontyp collect figur 9 0 denot left right project pair constitu construct univers domain superset everi type cleric use definit figur 9 reader familiar model untyp calculu note requir sinc deal type languag environ ae map variabl type element addit map recursiondummi f type tu element express interpret induct structur everi express e type interpret environ ae set eae element j morri bunkenburg proposit interpret ae fig 10 interpret refin equival express x type interpret xae p e els f p c fcg ape f rec dummi f ae f fig 11 interpret express constant c base type given element c everi oper symbol f base type given match function f match mean argument type f result type u f function 0 dont give model logic rather assum everi proposit p interpret environ ae element p ae assum tt interpret theorem logic ff interpret antitheorem logic twovalu logic domain proposit would ftt ffg interpret true fals give interpret proposit figur 11 give semant type express easili verifi everi express e type interpret eae set upclos respect recurs function f ffl x ffl e interpret fixpoint function f defin f act p u complet lattic order languag restrict x ffl e must refinementmonoton f ensur f monoton therefor gener limit theorem hitchcock park 1972 nelson 1989 ensur least fixpoint exist mathemat construct exclud case f empti set f specif function delta 21 set contain function map argument empti set one choos specif languag way happen fact f element p 1 final give exampl three express 2 2 u 3 z interpret f2g f2 3g f 0 g abstract xz ffl 2 interpret singleton set contain function map everi element z f2g abstract xz ffl 2 u 3 interpret set contain function map element z nonempti subset f2 3g 8 conclus relat work specif function made combin regular function choic bottom take special care accommod higherord function shown exampl use make specif extract comput function specif technic difficulti stand way establish consist set law reason well known led sever restrict use past see commentari relat work pick way around difficulti arriv axiomat treatment fall foul anomali key element approach 1 richer notion equival extension base refin 2 restrict quantif rang proper element proper care defin type 3 imposit monoton requir function clearli compromis made believ practicion could comfort live compromis arriv two standard way combin function choic move setvalu function gener function binari relat reject move setvalu function calcul lead frequent pack unpack valu set even though often set singleton set relat approach lend well calcul see eg bird de moor 1997 brink schmidt 1996 howev would like stick function captur better direct natur program inputtooutput map decis mean dont lose direct connect current program languag function relat munich cip develop method base widespectrum languag cipl comprehens account given partsch 1990 cipl similar concept choic equival strong equal refin descend bottom proper function defin possibl recurs abstract ever sever limit place function cipl importantli choic quantif function forbidden clear us restrict enforc paper bodi abstract must monoton bound variabl cipl automat sinc everi languag construct monoton anyway abstract consid proper main transform rule ff fiv call unfold theorem exnf f concis axiomat given partsch 1990 clear rule axiom theorem 22 delta j morri bunkenburg calcul function dealt thesi hoogerwoord 1989 languag underdetermin claus specifi valu assert properti enjoy close relat hilbert ffl refin pretti much imposs norvel hehner present refin calculu express norvel hehner 1993 give incomplet list axiom languag similar one discuss main differ lie treatment termin proper function calculu term bottom repres nontermin therefor partial correct calculu termin recurs program annot express abstract execut time clear refin time relat abstract x ffl e proper function terminolog element iff e proper x sinc languag bottom impli tradit function element seem intent flat type would avoid anomali subsect 34 52 howev believ system inconsist sinc abstract nonmiracul refin proper function impli function type nonflat close relat work hehner 1993 1998 halfandhalf approach distribut function choic argument describ distinguish occurr paramet bodi function distribut appropri direct substitut argument appropri occurr syntact decid cours fix function therefor abstract distribut choic argument other dont howev approach seem impos host trivial concern programm clear whether suffici compens gain ward thesi ward 1994 present function specif program languag defin semant model demon angel choic howev languag given proof theori suggest given refin law suffici practic new refin law gener prove candid sound use semant abstract proper therefor function type nonflat inconsist describ subsect 34 occur address languag vdm includ loos letexpress form let xt st p e intend mean e x bound arbitrari valu satisfi p ever axiomat prove elus bicarregui et al 1994 suggest approach taken larsen hansen 1996 larsen hansen larsen hansen 1996 present denot semant function languag underdetermin type languag extend comprehensiontyp form fe j xt ffl pg express languag extend choic underdeterminist select element type howev element chosen depend whole environ even variabl dont occur proof system base gener type infer proposit rather equival refin relat inde hard see equival refin would specif function delta 23 fit larsen hansen consid lambdaabstract proper map proper bottom proper therefor anomali subsect 34 52 could reproduc strong oper j ad languag previou work one present author morri 1997 give weakest condit semant express languag choic bottom style semant fit weakestprecondit semant imper refin calculu howev axiom logic given issu pertain function address acknowledg thank david watt richard bot review draft paper r proof vdm praction guid algebra program relat method comput scienc supplement volum express refin avoid undefin underspecif practic theori program unifi algebra induct rule termin proof design function program calcul approach semant underdetermin express mathemat logic hilbert fflsymbol eiffel languag e3 logic reason equat presenc partial undefined nondeterminaci program proof gener dijkstra calculu specif transform program powerdomain construct power domain refin calculu nondeterminist express systemat program tr themunich project cip gener dijkstra calculu specif transform program formal approach softwar develop eiffel languag nondetermin function languag practic theori program proof vdm algebra program nondeterminist express predic transform relat method comput scienc systemat program applic assert logic specif function program ctr j morri bunkenburg sourc inconsist theori nondeterminist function scienc comput program v43 n1 p7789 april 2002 joseph morri malcolm tyrrel term unbound demon angel nondeterminaci scienc comput program v65 n2 p159172 march 2007