timeconstrain code compact dsp abstract dsp algorithm case subject hard realtim constraint case programm dsp meet constraint must ensur appropri code gener techniqu processor offer instructionlevel parallel task code gener includ code compact exact time behavior dsp program known compact therefor realtim constraint taken account compact phase known dsp code gener reli rigid heurist phase paper propos novel approach local code compact base integ program model obey exact time constraint due gener problem formul model also obey encod restrict possibl sideeffect b introduct r esearch electron cad current take step toward systemlevel design autom econom reason contemporari embed vlsi system heterogen natur compris hardwar softwar compon form asic embed programm processor consequ systemlevel cad tool need provid support integr hardwar softwar synthesi softwar synthesi task extract piec function system specifi cation assign programm proce sor map piec execut processor specif machin code gener optim goal hardwaresoftwar cosynthesi embed vlsi system minim amount custom hardwar need implement system given perform constraint due fact implement softwar provid flexibl lower implement effort better opportun reus hand softwar synthesi turn bottleneck design system compris programm digit signal processor dsp dsp softwar still code assemblylanguag level 1 spite wellknown drawback lowlevel pro gram although highlevel languag compil theshelf dsp avail execut speed overhead compilergener code sever hundr percent compar handcraft code 2 mostli unaccept reason overhead compil hardli capabl exploit highli dedic irregular architectur dsp furthermor still desig author affili univers dortmund depart comput scienc 12 44221 dortmund germani email leupersjmarwedells12informatikunidortmundd nate standard program languag dsp situat even wors applicationspecif dsp asip sinc typic lowvolum productspecif design highlevel languag compil asip hardli ex ist nevertheless asip expect gain increas market share relat standard dsp 1 current research effort overcom product bottleneck dsp code gener concentr two central issu 3 code qualiti order enabl util highlevel languag compil code overhead must reduc order magnitud achiev mean new dspspecif code optim techniqu reach beyond scope classic compil construct classic optim tech niqu intend larg program generalpurpos processor primarili focu high compil speed thu limit effect constrast gener effici dsp code justifi much higher compil time therefor larg opportun new optim techniqu aim high qualiti code gener within reason amount compil time retarget order introduc highlevel languag compil code gener asip necessari ensur flexibl code gener tech niqu compil quickli retarget new processor architectur compil develop becom econom feasibl even lowvolum dsp ideal case compil support retarget read analyz extern user edit model target processor code gener way retarget would permit asip design quickli studi mutual depend hardwar architectur program execut speed alreadi processor level purpos paper present code optim techniqu aim thoroughli exploit potenti parallel dsp machin program exact local code compact although code compact welltri concept vliw machin effect compact techniqu dsp typic show rather restrict type instructionlevel parallel hardli port compact techniqu propos paper take account peculiar dsp instruct format well time constraint impos machin pro gram furthermor complet retarget within class instruct format defin later paper sinc perform exact code compact runtim significantli higher heurist approach nev ertheless demonstr compact techniqu capabl solv problem relev size within accept amount comput time whenev tight time constraint demand extrem dens code exact code compact thu feasibl altern heurist compact remaind contribut organ fol low section ii give overview record compil system employ propos code compact techniqu order compil highqual dsp code retarget manner section iii provid background local code compact outlin exist techniqu discuss limit previou work motiv extend dspspecif definit code compact problem present section iv section v specifi formal model code compact mean integ program reallif exampl experiment result given section vi section vii conclud summari result hint research ii system overview current carri univers dortmund base experi gain earlier retarget compil integr mimola hardwar design system 4 5 record retarget compil dsp main object find reason compromis antagonist goal retarget code qualiti current version record address fixedpoint dsp singlecycl instruct compil dsp algorithm written dfl languag 6 machin instruct extern specifi target processor model coars compil architectur depict figur 1 code gener process subdivid follow phase intermedi code gener sourc program analyz compil controldataflow graph cdfg represent basic cdfg entiti express tree et maximum size obtain dataflow analysi common subexpress et resolv heurist node duplic 7 instructionset extract hardwar descript languag hdl model target processor analyz convert intern graph rep resent current mimola 41 hdl 8 use processor model adapt toward vhdl subset would straightforward intern processor model instructionset extract ise perform order determin complet set regist transfer rt pattern avail target processor 9 10 addit extract rt pattern annot possibl multipl binari encod partial instruct partial instruct bitstr 2 f0 1 xg l l denot instruct wordlength x dont care valu compar relat retarget dsp compil sy tem mssq 4 chess 11 codesyn 12 concept ise uniqu featur record accept target processor model real hdl dsp sourc program dfl languag target processor model mimola languag cdfg gener instructionset extract tree parser gener code select regist alloc integr schedul spill mode regist set address assign code compact vertic code augment agu oper transform rule librari avail rt pattern version rt nop altern encod applic specif rewrit rule express tree express tree cover rt pattern vertic code targetspecif tree parser fig 1 architectur record compil provid conveni interfac cad frame work furthermor processor may model differ abstract level rang pure behavior instructionset descript rtlevel netlist consist function unit regist buss logic gate due usag binari decis diagram bdd 13 control signal analysi ise perform effici also elimin undesir effect result syntact varianc processor model way ise provid necessari link hardwareori processor model advanc code gener techniqu extract rt pattern form set tree templat repres primit singlecycl processor oper oper read valu regi ter storag input port perform comput write result regist storag cell output port tree parser gener extract rt pat tern fast processorspecif tree parser automat gener mean iburg code gener gener 14 gener tree parser comput optim implement express tree respect number select rt pattern includ bind valu specialpurpos regist well exploit chain oper multiplyaccumul advantag tree pars mean integr code select regist alloc irregular processor architectur alreadi point 15 16 ise tree parser gener perform new target processor reus differ 3sourc program code select regist alloc et intermedi format consecut map processorspecif rt tree parser high speed effici tree pars permit consider differ semant equival altern et altern et gener base useredit librari transform rule transform rule rewrit rule necessari cope unforeseen idiosyncrasi target processor also increas code qualiti exploit algebra rule simpl algebra rule commut alreadi incorpor tree parser virtual extra cost compil speed see also 17 18 set altern et one smallest number requir rt select vertic code gener code select regist alloc tree pars yield registertransf tree repres cover et processorspecif rt pattern vertic code gener registertransf tree heurist se quential minim spill requir regist file limit capac necessari spill reload code insert well addit rt adjust possibl requir mode regist state arith metic mode shift mode mode regist store control signal need chang rare area microprogram mode regist correspond concept residu control mode regist requir rt determin togeth partial instruct instructionset extract vertic code gener machin program consist set rtlevel basic block address assign gener rtl basic block augment rt ensur effect util parallel address gener unit agu memori address accomplish comput appropri memori layout program variabl 19 20 code compact address assign rt necessari implement desir program behavior gener one block time pass code compact phase subject paper code compact potenti parallel instruct level exploit obey interrt depend conflict impos binari encod rt pattern result execut processorspecif machin code iii local code compact c ode compact deal parallel set rt given depend relat constraint assign rt control step set rt assign control step form machin instruct gener optim goal minim number control step local compact start rtl basic block sequenc rt gener previou compil phase contrast global code compact permit rt move across basic block boundari paper consid local compact follow reason 1 effect global compact techniqu need employ local techniqu subroutin howev indic experiment survey 2 even local compact wellsolv problem dsp fore seem reason first studi local techniqu detail 2 popular global techniqu trace schedul 21 percol schedul 22 mutat schedul 23 shown effect mainli highli parallel regular architectur particular vliw contemporari dsp howev highli parallel tend irregular architectur 3 order preserv semant correct compact program global techniqu need insert compens code move rt across basic block compens code may lead signific increas code size contradict goal minim onchip program rom area local code compact suffici repres rt pair r tion r set read locat write read locat regist memori cell processor io port pair r rt basic block follow depend relat need obey order preserv semant correct datadepend r r dd r produc program valu consum r j outputdepend r r od gamma r j dataantidepend r r exist rt r k dd gamma r r k od depend relat impos partial order repres dag definit rtl basic block rt depend graph rdg edgelabel direct acycl graph fdddadodg hardwar model use record rt singlecycl oper regist permit one write access per cycl regist written read within cycl lead follow basic definit code compact problem parallel schedul rdg map cs ng n rt control step r dd od code compact problem construct schedul cs assoonasposs time asap r rt r defin dd od maxfg 1 critic path length l c rdg provid lower bound minimum schedul length aslateasposs time alap r rt r defin dd od dad minfg l c rt r lie critic path rdg case unlimit hardwar resourc code compact effici solv topolog sort real target architectur howev impos resourc limit may inhibit parallel execut pairwis independ rt limit captur incompat lation compris pair rt execut parallel due resourc conflict incompat impos addit constraint code compact case compact becom resourceconstrain schedul problem known nphard 24 heurist code compact techniqu becam import appear vliw machin earli eighti popular heurist includ firstcom firstserv critic path list schedul three 2 algorithm empir evalu mallett et al 25 conclud algorithm capabl produc closetooptimum result case differ speed simplic qualiti relat basic block length n nevertheless techniqu essenti develop horizont machin restrict impos instruct format ie resourc conflict mainli caus restrict datapath resourc iv compact requir dsp dsp particular standard compon show horizont strongli encod instruct format order limit silicon area requir onchip program rom instruct format strongli encod instruct wordlength small compar total number control line rtlevel processor compon consequ instruct encod prevent much potenti parallel expos pure datapath consid interrt conflict actual aris encod conflict instructionlevel parallel restrict special case assum provid highest perform gain respect dsp requir machin instruct maximum parallel typic compris one two arithmet oper data move address regist updat howev full orthogon oper type certain arithmet oper execut parallel data move certain specialpurpos regist address regist updat execut parallel data move forth thu compact algorithm dsp scan rel larg search space order detect set rt qualifi parallel special demand code compact techniqu dsp discuss follow conflict represent presenc datapath resourc encod conflict desir uniform conflict represent alreadi observ earlier mimolabas compil 5 check interrt conflict case singlecycl rt perform uniform way check conflict partial instruct associ rt two partial instruct conflict exist 2 lg approach partial instruct automat deriv extern processor model instructionset extract encod conflict obvious repres partial instruct hold datapath resourc conflict control code datapath resourc assum adjust instruct word assumpt hold two special case firstli may conflict respect requir mode regist state rt record mode regist state adjust compact insert addit rt therefor parallel schedul rt conflict mode requir prevent addit interrt depend second special case occur presenc tristat buss processor model unus bu driver need deactiv control step order avoid unpredict machin program behavior due bu content deriv necessari control code set bu driver alreadi instructionset extract possibl map bu content usual encod conflict b altern encod version gener rt r associ uniqu partial instruct set altern encod g altern encod may aris altern rout move valu datapath case altern due instruct format tms320c2x dsp 26 instanc permit execut address regist updat parallel differ arithmet data move instruct address regist updat repres differ opcod result number altern encod consid also hold oper instanc partial instruct altern encod rt name load regist memori compat rt strongli depend select encod version three may pairwis compat version schedul r parallel may imposs fore care select encod version compact outstand import dsp 25 version shuffl propos techniqu version select integr heurist algorithm whenev rt r assign control step cross product version r version rt alreadi assign check combin compat version howev version shuffl permit remov obstruct rt control step bound therefor limit optim effect c side effect side effect undesir rt may caus incorrect behavior machin program compact approach assum instruct format side effect exclud advanc howev arbitrari instruct format handl two kind side effect must consid code compact horizont side effect occur weakli enocod instruct format sever instruct bit remain dont care control step whenev dont care bit steer regist memori may contain live valu cs regist must explicitli deac tivat accomplish schedul oper nop unus regist nop special partial instruct ensur certain regist disabl load new valu certain control step partial instruct nop comput byproduct instructionset extract rt altern nop encod version present regist howev nop necessarili exist regist eg architectur extens datapath pipelin case compact must permit toler side effect regist contain live valu taken account alreadi compact code gener like fail although solut might exist second type side effect call vertic side effect occur presenc strongli encod instruct format vertic side effect expos encod version e ik rt r cover version e jk 0 anoth rt r j select e ik r impli r j execut control step happen rt readi schedul side effect exploit hand version select must discard version e ik whenev case r j might destroy live valu vertic side effect exemplifi tms320c2x instruct set partial instruct lta ltd lt shown side effect accumul regist version select complet nop pack vertic side effect prevent coincid special aspect vertic side effect multipli accumul mac dsp mac execut two oper singl cycl dsp instanc motorola dsp56xxx 27 mac datastationari ie multipl addit execut chain mode contrast tms320c2x incorpor timestationari mac case valu p buffer regist code gener point view strong differ mac type datastationari mac alreadi captur pars express tree gener timestationari mac must postpon code compact turn demand compact method capabl handl vertic side effect time constraint case dsp algorithm subject realtim constraint techniqu hardwar synthesi time constraint avail incorpor time constraint code gener hardli treat far unfortun decis code select regist alloc may impli given maximum time constraint met backtrack may necessari howev prerequisit timeconstrain code select regist alloc avail timeconstrain code compact techniqu due fact compact make critic path thu worstcas execut speed machin program exactli known therefor compact techniqu de sirabl parallel rt respect given max time constraint tmax machin cycl might case local suboptim schedul decis lead satisfact tmax rigid optim heurist fail e approach dsp code compact heurist compact algorithm adopt sever recent dsp code gener wess compil 15 use critic path algorithm achiev code size reduct compar vertic code adsp210x dsp rang possibl instruct format handl howev report codesyn compil 12 compact horizont machin describ chess compil 11 use list schedul algorithm take account encod conflict altern version vertic side effect horizont side effect bu conflict priori exclud due limit processor model languag 28 motorola 56xxx specif compact method describ howev exclud outof order execut ie schedul satisfi two rt r independ depend relat exact nonheurist compact method take account time constraint report wilson et al 29 propos integ program approach integr code select regist alloc compact ip model compris altern version vertic side effect bu conflict horizont side effect furthermor ip model least entireti turn complex realist target processor requir larg amount manual descript effort graphbas compact techniqu present timmer 30 achiev compar low runtim exact code compact time constraint prune search space advanc prune procedur base assumpt interrt conflict fix compact case rt partit maximum set pairwis conflict rt separ sequenti schedul construct ef ficient timmer techniqu produc good result famili reallif asip restrict capabl respect altern version side effect abovement assumpt impli incompat version e ik rt r e jk 0 rt r j impli pairwis incompat version r r j limit exist dsp compact techniqu motiv extend definit code compact prob lem captur altern version side effect time constraint rtl basic block r set altern encod furthermor let denot set nooper regist appear destin rt bb let fnop g set altern version nop j 2 nop parallel schedul bb sequenc r r j bb follow condit hold ffl cs 2 cs subset r ffl exist exactli one cs 2 cs contain encod version r notat csr dd gamma r j r od dd gamma r j control step contain nop version destin r ffl two encod nop version r control step cs 2 cs rtl basic block bb whose rt depend graph critic path length l c timeconstrain code compact tcc problem comput schedul cs given tmax 2 fl ng tcc decis variant optim code compact extend altern encod side effect thu npcomplet pose question problem size treat within accept amount comput time next section present solut techniqu permit compact basic block relev size retarget manner v integ program formul r ecent sever approach publish map npcomplet vlsidesign relat problem integ linear program model eg 31 32 order studi potenti gain optim solut method compar heurist ip problem comput set n integ solut variabl object function fz minim constraint integ matrix integ vector b although ip nphard thu exclud exact solut larg problem model intract problem ip promis approach follow reason ffl sinc ip base rel simpl mathemat notat easili verifi ip formul problem meet problem specif ffl ip suitabl method formal describ heterogen constrain problem constraint often straightforward represent form linear inequ solv ip mean constraint simultan taken account easili achiev problemspecif solut algorithm ffl sinc ip among import optim problem commerci tool avail ip solv ing ip solver reli theoret result oper research therefor consider fast even rel larg integ program use appropri ip formul thu often permit optim solv nphard problem practic relev approach tcc therefor larg base ip contrast wilson approach 29 ip instanc creat manual automat deriv given compact problem target processor model extern specifi time constraint furthermor focuss problem code compact extend size basic block handl practic given instanc tcc first mobil rang determin rt r tmax upper bound alap time rt solut variabl ip model encod rt version select control step depend incompat constraint repres linear inequ solut variabl defin control step number tmax constraint satisfact requir ip solut repres parallel schedul tmax control step possibl pad nop turn nonexist ip solut impli nonexist schedul meet maximum time constraint set solut variabl also account nop schedul order prevent undesir side effect permit arbi trari multiplevers instruct format meet follow assumpt exist least one nop version address storag element regist file memori howev nop set singl regist may empti a2 storag element written certain control step cs nop version schedul independ rt version assign cs assumpt satisfi realist processor permit insert nop version compact mean version shuffl mechan solut space compact affect solut variabl solut variabl subdivid two class index decis 01 variabl vvariabl tripleindex r encod version set e follow vvariabl version variabl use interpret vvariabl rt r schedul control step number version nvariabl doubleindex set nooper follow n variabl nop variabl use interpret nvariabl control step number contain nop destin regist b constraint correct condit encod ip constraint follow rt schedul exactli ensur sum vvariabl rt r equal 1 outputdepend violat r data outputdepend r j schedul control step cs r must schedul earlier control step ie interv captur follow dd od dataantidepend violat data antidepend treat similarli previou case except r may also schedul parallel r j live valu destroy side effect valu singl regist x live control step product consumpt nop must activ x control step contrast rigid handl side effect previou work 5 permit toler side effect ie nop regist activ two datadepend rt schedul consecut control step convers enforc schedul rt consec utiv nop correspond destin regist exist model follow constraint dd left hand side inequ becom 1 exactli r schedul r j schedul case nop version x must activ cs nop present regist replac zero mechan use singl regist toler side effect address storag element possibl n variabl introduc element file differ element must distinguish howev would impli intoler explos number ip solut variabl instead mention earlier assum nop present address storag element compat restrict violat two rt potenti conflict least one pair conflict version nondisjoint mobil rang neither datadepend outputdepend follow constraint en sure one two conflict version schedul control step cs c search space reduct ip model given compact problem easili construct correspond rt depend graph set partial instruct ip solut actual schedul immedi deriv vvariabl set 1 set account detail control step assign select encod version rt base schedul inform nop version pack control step mean version shuffl control step cs demand nop regist x indic set nvariabl nop version nop js 2 nop determin compat rt assign cs exist version guarante assumpt a1 a2 x address storag nop version schedul control step x written done independ set nvariabl comput time ip gener nop version shuffl neglig howev import keep number solut variabl low possibl order reduc runtim requir ip solv ing number solut variabl reduc discard redund variabl contribut solut space obvious nvariabl occur live valu constraint superflu elim inat vvariabl redund potenti increas parallel effici check advanc select encod version e im rt r control step cs use exist rt could schedul parallel ie r j meet follow condit 1 2 r 3 r j version e jm 0 compat e im r j exist variabl v imt equival term parallel suffici singl arbitrari repres advanc prune search space achiev comput tighter mobil rang applic ad hoc rule instanc two rt r dad gamma r j schedul parallel encod version r r j pairwis conflict efficaci ad hoc rule howev strongli processordepend vi exampl result tms320c25 first exampl consid code gener tms320c25 dsp also focuss interact code compact preced code gener phase tms320c25 show restrict type instructionlevel parallel make compact nontrivi task even small program demonstr exploit potenti parallel complex multipli program taken dspstone benchmark suit 2 comput product two complex number consist two line code ar br ai bi vertic code gener code select regist alloc schedul shown figur 2 real imaginari part comput sequenti employ regist tr pr accu result store memori next step insert rt memori address record make use indirect address capabl dsp base gener model address gener unit agu base variabl access sequenc basic block permut variabl memori cell comput maxim agu util form autoincrementdecr oper address regist 20 complex multipli comput ar ar br ar br ai bi ar br ai bi ar ar bi ar bi fig 2 vertic code complex multipli program address assign ar insert agu oper vertic code consist 25 rt shown figur 3 tms320c25 eight address regist turn address address regist pointer arp case address regist ar0 use optim address assign ensur address regist updat realiz autoincrementdecr oper ar0 critic path length l c impos interrt depend 15 tabl show experiment data cpu second 1 number v nvariabl ipbas compact complex multipli code tmax valu 15 21 theoret lower bound tmax 15 solut exist actual lower bound schedul construct less 1 cpu second beyond cpu time rise minut due larg search space investig ip solver infavor effect inher ipbas formul timeconstrain schedul prob lem comput time may dramat grow 1 integ program solv ibm optim subroutin librari osl v12 ibm risc system 6000 point 5 ar point 1 br point 2 ai point 3 bi point 4 cr point 5 ar point 3 bi point 2 ai point 1 br point 0 ci fig 3 vertic code complex multipli program address assign experiment result ipbas compact complex multipli tms320c25 code solut vvar nvar 22 ye 281 64 number control step even though schedul problem intuit get easier therefor favor choos rel tight time constraint ie close actual lower bound tight time constraint ipbas compact produc extrem compact code within accept amount comput time figur 4 show parallel schedul construct tms320c25specif c compil manual assembl program yield higher code qualiti dspstone project 2 b motorola dsp56k ipbas code compact specif code gener techniqu use record essenti fig 4 parallel tms320c25 code complex multipli appli piec vertic machin code processor satisfi instructionset model second exampl consid compact motorola 56000 code gener gnu c compil gcc 33 compar tms320c2x m56000 regular instruct set parallel arithmet oper data move hardli restrict encod conflict consequ number ip solut variabl requir comput time grow less strongli number control step tabl ii exemplifi rtl basic block length 23 extract mpeg audio decod program critic path length case 14 actual lower bound 19 control step experiment result three block given tabl iii indic exact compact may save signific percentag instruct compar pure vertic compilergener code note case m56000 higher exploit parallel achiev late assign variabl differ memori bank compact 28 yet includ approach c horizont instruct format permiss basic block length ipbas compact invers relat degre instruct encod weakli encod format compact constraint mainli induc interrt depend critic path length close actual lower ii compact runtim gccgener m56000 machin code relat tmax solut vvar nvar 14 028 84 38 22 ye 222 92 22 67 ye 268 104 iii experiment result compact m56000 machin code bound schedul length case runtim requir low even larger block tight time constraint chosen hand weakli encod instruct format repres worst case presenc loos time constraint due fact encod constraint permit earli prune search space explor ip solver whenev rt larg mobil rang tabl iv demonstr audio signal process asip pure horizont instruct mat experiment result given sumofproduct comput consist 45 rt includ agu opera tion critic path length 14 asip execut 4 rt per machin cycl actual lower bound meet theoret limit tmax 2 14 17 schedul comput fast beyond much higher also less predict previou experi summari result indic complex standard dsp tms320c2x m56000 repres upper bound processor complex ipbas compact reason processor block small medium size compact within amount comput time may often accept area code gener embed dsp asip lower combin delay design effort tend weakli encod instruct format also larger block compact howev higher sensit toward specif time constraint context retarget code gener limit compens high flexibl iv compact runtim asip horizont instruct format relat tmax 26 347 68 22 85 390 72 gener definit compact problem ip formul immedi appli complex dsp instruct set exact compact techniqu report far indic previou work 30 signific runtim reduct expect restrict class instruct format vii conclus f utur systemlevel cad environ need incorpor code gener tool embed processor includ dsp order support hard waresoftwar codesign vlsi system satisfactori compil avail generalpurpos processor yet case dsp partial due miss dedic dsp program languag caus mismatch highlevel languag program dsp architectur contrast generalpurpos comput compil speed longer primari goal dsp code gener therefor largest boost dsp compil technolog expect new code optim techniqu expens high compil time explor compar vast search space code gener also retarget becom increasingli import issu divers applicationspecif processor creat strong demand flexibl code gener techniqu quickli adapt new target architectur contribut motiv describ novel approach thorough exploit potenti parallel dsp program propos ip formul local code compact timeconstrain problem base problem definit design dsp remov sever limit previou work approach appli high qualiti code gener standard dsp asip capabl optim compact basic block relev size due gener problem def init peculiar altern encod version side effect captur provid retarget within larg class instruct format sinc exist solut guarante found believ exact code compact feasibl altern heurist techniqu presenc high code qualiti requir research necessari extend timeconstrain code gener toward global constraint local techniqu may serv subroutin turn demand closer coupl code compact preced code select regist alloc schedul phase also mutual depend retarget code qualiti compil speed studi detail order identifi feasibl compromis acknowledg author would like thank birger landwehr help comment integ program issu steven bashford care read manuscript work partial support european union esprit project 9138 chip r trend embed system technolog code gener embed processor verif hardwar descript retarget code gener dsp architect dfl user refer manual mimola languag v 41 instruct set extract programm structur chess retarget code gener embed dsp processor flexwar flexibl firmwar develop environ embed system symbol manipul boolean function use graphic represent effici code gener gener automat instruct code gener base trelli diagram optim code gener embed memori nonhomogen regist architectur code select regular control term rewrit optim code gener express tree storag assign decreas code size algorithm address assign dsp code gener techniqu global microcod compact develop environ horizont microcod unifi code gener approach use mutat schedul comput intract guid theori npcomplet experi local microcod compact horizont chine motorola inc memori bank regist alloc softwar synthesi asip integr approach retarget code gener conflict model instruct schedul code gener inhous dsp core optim vlsi architectur synthesi oscar optimum simultan schedul use port gnu cc v2 tr softwar schedul cosynthesi reactiv realtim system oscar conflict model instruct schedul code gener inhous dsp core instruct set definit instruct select asip integr approach retarget code gener graph base retarget microcod compil mimola design system code gener embed processor bddbase frontend retarget compil constrain softwar gener hardwaresoftwar system ctr r leuper p marwedel instruct select embed dsp complex instruct proceed confer european design autom p200205 septemb 1996 geneva switzerland ann mignott olivi peyran reduc complex ilp formul synthesi proceed 10th intern symposium system synthesi p5864 septemb 1719 1997 antwerp belgium luiz c v do santo j heijlig c j van eijk j j van eijndhoven j g jess construct method exploit code motion proceed 9th intern symposium system synthesi p51 novemb 0608 1996 rainer leuper peter marwedel retarget gener code selector hdl processor model proceed 1997 european confer design test p140 march 1720 1997 luiz c v do santo j heijlig c j van eijk j van eijnhoven j g jess codemot prune techniqu global schedul acm transact design autom electron system toda v5 n1 p138 jan 2000 peter marwedel code gener core processor proceed 34th annual confer design autom p232237 june 0913 1997 anaheim california unit state rainer leuper code gener embed processor proceed 13th intern symposium system synthesi septemb 2022 2000 madrid spain gert goossen johan van praet dirk lanneer werner geurt augusli kifli clifford liem pierr g paulin embed softwar realtim signal process system design technolog read hardwaresoftwar codesign kluwer academ publish norwel 2001