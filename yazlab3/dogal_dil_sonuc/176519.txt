precis effici ground analysi logic program show precis ground inform extract logic program idea use abstract interpret boolean function approxim ground depend variabl idea new differ class boolean function use argu howev one class posit function suitabl other posit boolean function certain properti inspir langen call condens properti allow rapid comput ground inform b introduct ground analysi arguabl import dataflow analysi logic program question given program point variabl x alway bound term contain vari abl import optim compil attempt speed unif practic everi program tool appli kind dataflow analysi reason analys independ analysi whether instanti x indirectli instanti variabl occurcheck analysi whether unif safe perform without occurcheck employ ground analysi improv accuraci exampl x ground terminolog abus consist use bound ground term x possibl share variabl use inform independ occurcheck mani dataflow analys dataflow analysi logic program differ analysi imper function program languag partli languag nondeterminist impor tantli dataflow sens bidirect owe use unif point variabl logic program languag differ variabl languag paradigm sometim refer logic variabl character constrainonli sinc execut logic program proce step continu narrow set possibl valu variabl may take characterist logic program execut make dataflow analys harder way also open new view analysi problem exampl suggest possibl propag condit invari form point variabl x ever get properti p variabl properti r note show appli ground idea let statement program variabl x ground repres proposit variabl x ground depend whenev becom ground may repres boolean function case function denot x use boolean function approxim runtim state abstract interpret give natur way specifi precis ground analysi section 2 3 idea new differ class boolean function use purpos main purpos note show exactli one class posit function use properti shall refer condens section 4 owe properti rel simpl effici implement possibl yield extrem precis analysi analysi effici partli queryindepend describ analysi section 5 give novel program transform make straightforward extract inform runtim call pattern furthermor analysi perform increment fashion without loss accuraci section 6 dataflow inform pertin modul may comput independ predic import modul class posit function condens also close existenti quantif unfortun quantifi elimin expens presenc boolean function unknown precisionpreserv extens analysi modular program may mainli theoret interest abstract interpret logic program consid idea logic program interpret answer queri return set answer constraint also thoroughli annot version program program point list constraint obtain stage evalu given queri sinc control may return program point mani time evalu annot natur possibl infinit set constraint properli formal idea lead notion collect semant semant give precis dataflow inform cours finit comput gener howev replac possibl infinit set constraint crude approxim descript set constraint may obtain dataflow analysi termin finit time idea behind abstract interpret logic program exampl 21 program queri qa x collect semant associ fl crude approxim associ set greater equal given collect semant introduc notat fug set constraint ground u associ fug fl correct approxim though precis still tell us everi spawn queri ground first argument lead view dataflow analysi approxim collect semant p r cousot 6 formal idea follow standard domain powerset constraint exampl descript domain x powerset variabl exampl complet lattic monoton give mean descript x furthermor fl x imag x fl moor famili close greatest lower bound oper exampl 21 ground everi order set variabl superset order case larger set constraint fewer variabl made ground constraint set gener order lattic descript opposit normal use denot semant higher descript appli larger set constraint less inform content higher mean less precis notion approxim made exact follow x write x syntact object program primit constraint 0 iff final extend function space follow consid defin f g iff 8 x formal semant given lay appropri semant domain specifi certain oper domain ground analysi one import oper add take term equat set constraint form possibl conjunct import featur p r cousot adjoin framework given oper standard domain least precis oper descript domain approxim descript form moor famili shall refer precis oper induc oper gener uniqu induc approxim refer induc ground analysi mean analysi obtain use induc version add 3 ground analysi use boolean function seen natur descript domain ground analysi set variabl definit ground particular program point descript introduc mellish use earli mode ground analyz 11 18 regard set fx 1 x n g repres nplace boolean function x 1 x n attach mean point program variabl x bound ground term let con set conjunct variabl con simplest use descript domain ground analysi anyth less express captur type statement requir ground analysi howev con lead precis ground analysi ignor alias depend variabl wit follow exampl label program point interest exampl 31 consid follow program queri qx ra analysi base con deduc x ground b fl fail deduc also ground fact x alias captur alias inform captur complex boolean function implic allow exampl constraint queri evalu descript x deduc inform formula say x becom ground z vice versa boolean formula call depend formula introduc dart use ground analysi deduct databas 7 8 denot set depend formula def sinc correspond boolean function written definit proposit formula program exampl 31 analyz use depend formula descript descript x descript x desir depend formula give rise precis ground analys howev even precis ground analysi possibl po set posit boolean function extend allow disjunct po suggest ground analysi marriott sndergaard 14 less suggest name prop studi cortesi et al 5 exampl 32 consid follow program queri qx pa u analysi base deduc either x ground b fl best descript produc x howev analysi use po find fl descript x conjoin inform x r find b x ground practic common program requir extra precis po nonetheless feel po better descript domain ground analysi po import properti allow effici implement somewhat surpris one would expect extra precis come cost effici reason po close disjunct condens properti discuss section 4 remaind section formal po descript domain note po largest class boolean function make sens use descript ground analysi sinc ground undecid dataflow analysi oper finit time give approxim ground inform statement produc carri modal x inevit ground reason posit boolean function use associ mean x inevit ground formula x x would mean x may alway ground contain inform exactli inform convey constant function true definit boolean function function f bool n bool call set nari boolean function bfun n let order logic consequ j function f posit iff f true denot set posit boolean function n variabl po n simplic assum fix number n variabl leav subscript phrase n variabl shall also use proposit formula represent boolean function without worri distinct thu may speak formula function case denot f remind fact proposit formula one class repres given boolean function put squar bracket around proposit formula think result class equival formula slight abus notat sometim appli logic connect class equival formula well known bfun boolean lattic fact po form boolean sublattic bfun term proposit formula meet join given conjunct disjunct respect exampl 33 boolean function x po x conveni includ nonposit boolean function fals approxim empti set constraint fact deal complet lattic order logic consequ let sub denot set substitut let eqn denot set constraint prolog set note constraint possibl existenti quantifi term equat idea gener natur constraint logic languag substitut unifi constraint e iff denot set unifi e idea use po constraint e describ oe 2 po exactli case everi unifi e truth assign correspond variabl ground satisfi oe definit substitut let ground truth assign map variabl true ground variabl fals otherwis ground defin ground var set variabl syntact object function defin thu fl map oe 2 po set constraint e properti matter becom constrain e 0 boolean function correspond e 0 still satisfi oe exampl 34 boolean function x describ constraint constraint best descript b constraint best descript x turn logic consequ x less precis approxim x exampl let approxim oe proposit 31 17 fl po moor famili let us defin con let def largest class posit boolean function whose model close intersect let con monoton function like moor famili con applic domain ground analysi well known existenti quantifi elimin boolean function 9 x perhap less obviou fact con close existenti quantif simplifi use ground analysi sinc import oper project away variabl becom uninterest project oper exactli existenti quantif condens sometim optim perform compil applic certain type queri reason dataflow analys suggest logic program queri direct comput approxim collect semant particular queri descript seen collect semant give inform program point particular give inform call predic answer predic instanc exampl 32 collect inform call rx b collect inform answer qx inform call answer may also comput queryindepend fashion case analysi perform possibl queri advantag one analysi perform even inform mani differ queri need sinc inform particular queri effici deriv result queryindepend analysi unfortun result twostep process may well less precis obtain separ querydirect analysi appar exampl 41 howev one point note case precis lost use queryindepend analysi happen domain condens name come condens procedur introduc langen 12 use jacob langen 10 work dataflow analysi logic program think querydirect dataflow analysi function take program queri possibl statement initi state variabl queri yield statement answer fix program p queri q may write function f phi phi domain descript statement avail put superscript phi remind fact dataflow analysi one induc phi precis denot definit f phi parametr phi found 17 definit descript domain phi condens iff f phi program p queri q statement oe oe 0 2 phi note particular f phi pq true mean analysi respect program p queri q need repeat sever differ oe need perform gener case true make assumpt instanti variabl whatsoev yield oe 0 requir answer oe oe 0 appli toplevel queri everi call made execut p also note definit condens consid answer queri howev shall see condens also allow us comput inform pertain arbitrari program point exampl 41 consid program p queri q exampl 32 f con f f po illustr rel accuraci three domain furthermor f con f con def condens use condens somewhat differ jacob langen notion stronger consid induc analysi f phi pq make possibl consid condens properti domain phi jacob langen allow suboptim analys idea sometim condens achiev introduc loss accuraci analysi even though notion differ follow result obtain combin theorem 14 65 67 68 langen 12 sinc oper langen use po fact induc oper case domain langen treatment theorem 41 po condens saw con condens fact sinc closur necessari condens theorem 42 po smallest extens con condens summar po condens ground analysi use po modular close form result call predic p need worri context p call comput ps result differ environ 5 effici ground analysi debray 9 shown analysi use po effect solv exptimecomplet problem complex measur term program size howev reason assumpt number variabl claus bound analysi use po ptime fact number independ implement po indic accur ground analysi perfectli practic realworld program natur represent boolean function use exampl le charlier van hentenryck 13 mean order binarydecis graph 1 le charlier van hentenryck report good result instanti gener ab stract interpret po precis ground analysi perform even effici way po condens want inform call take place topdown execut suffic comput bottomup inform give approxim answer program 16 first explain comput answer inform exampl 51 let p program first step form clark complet 2 straightforward translat yield follow recurs definit boolean function overlap member solv member first overlap use kleen iter get member 0 u member 1 u easi verifi member 1 overlap 1 make fixpoint least solut system recurs boolean equat result tell us exampl memberu call ground statement oe result oe u far overlap concern analysi say anyth ground ground depend adequ sinc overlap fact introduc ground second exampl let us comput ground inform wellknown append program naiv list revers program interest exampl requir iter step exampl 52 program correspond boolean function defin 9 equat app solv iter 9 9 least solut recurs definit boolean function app use solv least solut recurs definit rev condens also allow effici comput querydirect inform call occur runtim idea use program transform augment program predic whose answer call occur origin program given program point fl claus defin new predic q n hold call qx spawn call py immedi fl give rise recurs definit boolean function q comput illustr two exampl exampl 53 repeat part program exampl 51 conveni assum interest call member point fl context queri overlap first step construct new predic overlap overlap two claus come two origin claus respect continu get overlap solv equat get overlap overlap least fixpoint equat defin overlap fl tell us exampl fl member call ground second argument overlap call ground second argument exampl 54 assum interest call app point fl program exampl 52 context queri rev transform step give recurs predic rev rev correspond boolean function defin rev equat rev solv iter rev rev rev tell us revx call x ground call app program point first second argument ground short queryindepend analysi give inform call answer owe condens result contain suffici inform result respect specif queri deriv effici loss accuraci posit boolean function contain suffici inform ground depend handl everi possibl call context simpli conjoin function speed comput simpler gener querydirect implement po transform given gener wellknown magicset transform use comput inform call singl queri see exampl 19 codish demoen 4 independ investig queryindepend ground analysi base po consid precis codish demoen implement analysi experiment result encourag especi codishdemoen approach comput queryindepend inform call pattern requir comput fixpoint wherea approach singl conjunct requir program point 6 increment ground analysi ground analysi use po may increment dataflow inform pertin modul may comput modul independ predic import illustr basic idea two exampl exampl 61 consid definit overlap assum definit member avail howev still analyz overlap solv recurs equat kleen iter give least solut equat overlap later result member arriv plug give result overlap exampl memberu turn descript u alway ground argument descript overlapx actual know section 5 memberu approxim boolean function u substitut formula overlap obtain true expect exampl 62 consid definit ancestor relationship defin term parent relat analyz ancestor solv recurs equat kleen iter give ancestor least solut equat ancestor later result parent substi tute give result ancestor exampl parentx turn descript descript ancestorx x three observ make method illustr exampl 1 gener applic even context mutual recurs modul equat combin mutual recurs kleen iter use solv system case mutual recurs simpl substitut suffic 2 alway termin finit number iter finit approxim descript miss predic function po po close existenti quantif thu perform quantifi elimin remov local variabl leav constant true fals nonquantifi variabl 3 perform analysi increment chang result accuraci lost po condens unfortun although analysi alway termin clear implement effici practic program analyz hand result equat larg blowup caus appli quantifi elimin miss descript difficult see reduc codish et al 3 given gener framework increment analysi base unfold ing semant particular analysi sketch differ analys framework two way first use quantifi elimin need introduc star abstract analysi alway termin second perform analysi increment never lose precis po condens star abstract use gener case 3 assumpt condens made perform analysi increment may lose precis 7 conclus ground analysi import compon dataflow analys constraint logic program gener combin dataflow analys easi composit analys turn ground compon may comput separ first ground result may use analys without stage neg effect accuraci reason import ground analysi accur still effici po give rise one precis ground analys know particular achiev accuraci complex analys base reexecut propag 15 util condens possibl implement ground analysi base po effici empir support recent implement codish demoen 4 advantag po analysi may increment dataflow inform pertin modul may comput modul independ predic import loss accuraci acknowledg thank mike codish anonym refere use suggest improv paper r symbol boolean manipul order binarydecis diagram negat failur composit analysi modular logic program proposit logic program magic wand abstract domain ground analysi systemat design program analysi framework depend analysi queri interfac deduct databas deriv depend connect databas complex dataflow analysi logic program static analysi logic program independ paral lelism semanticsbas framework abstract interpret prolog advanc techniqu approxim variabl logic program ground analysi prolog implement evalu domain prop note tutori abstract interpret logic program propagationbas analysi logic program denot abstract interpret logic program global optim prolog compil abstract interpret kind magic tr deriv depend connect databas symbol boolean manipul order binarydecis diagram static analysi logic program independ parallel ground analysi prolog composit analysi modular logic program denot abstract interpret logic program analys logic program use myampersandldquopropmyampersandrdquoosit logic program magic wand abstract interpret systemat design program analysi framework complex dataflow analysi logic program advanc techniqu approxim variabl alias logic program ctr vitali lagoon peter j stuckey precis pairshar analysi logic program proceed 4th acm sigplan intern confer principl practic declar program p99108 octob 0608 2002 pittsburgh pa usa roberto giacobazzi francesco ranzato francesca scozzari make abstract domain condens acm transact comput logic tocl v6 n1 p3360 januari 2005 michael codish harald sndergaard peter j stuckey share ground depend logic program acm transact program languag system topla v21 n5 p948976 sept 1999 francesca scozzari logic optim ground analysi theoret comput scienc v277 n12 p149184 april 28 2002 andi king lunjin lu backward analysi constraint logic program theori practic logic program v2 n45 p517547 juli 2002 jacob howe andi king effici ground analysi prolog theori practic logic program v3 n1 p95124 januari saumya k debray complex dataflow analysi logic program acm transact program languag system topla v17 n2 p331365 march 1995 agostino complement abstract interpret acm transact program languag system topla v19 n1 p747 jan 1997 giorgio levi fausto spoto pairindepend freeness analysi linear refin inform comput v182 kim marriott harald sndergaard neil jone denot abstract interpret logic program acm transact program languag system topla v16 n3 p607648 may 1994 mauric bruynoogh michael codish john p gallagh samir genaim wim vanhoof termin analysi logic program combin typebas norm acm transact program languag system topla v29 n2 p10e april 2007 marc deneck mauric bruynoogh victor marek logic program revisit logic program induct definit acm transact comput logic tocl v2 n4 p623654 oct 2001 roberto giacobazzi francesca scozzari logic model relat abstract domain acm transact program languag system topla v20 n5 p10671109 sept 1998 roberto giacobazzi francesco ranzato francesca scozzari make abstract interpret complet journal acm jacm v47 n2 p361416 march 2000 roberto bagnara roberta gori patricia hill enea zaffanella finitetre analysi constraint logicbas languag inform comput v193 n2 p84116 15 septemb 2004