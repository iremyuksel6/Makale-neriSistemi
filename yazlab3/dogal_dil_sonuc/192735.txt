reduc memori traffic creg array pointer refer often ambigu compil time analysi alway determin distinct refer object ambigu alias object alloc regist convent compil due cost load store requir keep regist copi consist memori sever hardwar softwar strategi use solv ambigu alia problem implement one scheme call creg compil instruct level simul present modif brigg optimist color algorithm allow us alloc local paramet array creg creg regist file oper instruct set modif requir implement scheme discuss underli hardwar issu pipelin impact chip area briefli discuss sever benchmark compar term dynam instruct execut two creg set size measur reduct memori oper signific averag 23 benchmark shown b introduct program memori refer signific fraction total number instruct execut total run time recent studi spec benchmark suit show averag onethird dynam instruct execut load store byp91 paper show simpl hardwar scheme combin small chang current compil technolog improv perform reduc memori traffic show techniqu cleanli integr current instruct set architectur implement retain objectcod compat provid regist file alias object effici alloc ambigu alia occur two name may may refer memori locat exampl shown figur 1 relationship j known compil time vari denot j refer may depend load line 3 requir relationship j determin load load r2ai load r2ai load r2ai store ajr3 store ajr3 store ajr3 load r4ai use r2 use r3 figur 1 ambigu alia exampl elimin ai alloc regist gener ambigu alias object alloc regist file load store requir maintain correct creg hardwar scheme perform run time consist check effect address 1 manner alias detect valu propag ambigu alias object creg dic88 creg hardwar maintain address regist file compil alloc pointer valu array creg safe without fear use stale data reap benefit fast local memori object perform gain expect due associ reduct memori bandwidth creg regist addit address field use perform associ match creg capabl updat creg certain circumst datum address name figur 2 creg scope associ limit creg set size underli hardwar must capabl write valu field match creg set simultan valu differ set updat even address match alia set use group live rang alloc creg set alia set compos live rang ambigu alias point live rang asu86 assum virtual address use virtual memori support name alway alias appropri renam object never alias place differ alia set formal paramet analyz alias place alia set use algorithm develop cooper coo85 mani solut ambigu alia problem hss94 dgs93 chi91 cck90 hes90 nic89 chd89 focu creg hardwar compil techniqu paper remaind paper cover creg instruct set modif hardwar design section 2 creg compil techniqu section 3 experiment result analysi section 4 summari section 5 section explain basic creg oper propos modif typic loadstor instruct set architectur support creg addit show integr exist superscalar microprocessor design creg address match valu updat occur load store instruct primari mean maintain map memori regist nonmemori instruct clear address field destin creg address bound valu valu load store creg load store rang address match limit creg set set respons propag valu creg whose address match give color algorithm freedom allow effici alloc set larg possibl ideal size regist file call maxim creg set 21 instruct set architectur section detail chang instruct set architectur necessari support creg focu loadstor instruct set typic current risc microprocessor 211 origin instruct set origin load store instruct remain unchang except clear address field creg load store henc compil unawar creg safe use exist load store effect treat creg regist compil use instruct address match valu updat requir eg save restor regist subroutin boundari 212 creg match instruct load match address instruct ad instruct set load alias object creg calcul effect address normal load perform associ search creg address within set match found memori oper squash ie perform copi match creg made load still take time processor pipelin memori oper initi store match address instruct complement creg load calcul effect address associ search creg address find copi valu store creg unlik load store alway perform memori oper keep object memori updat current valu multipl write occur within regist file potenti creg set may need written practic rare two creg updat within set live rang defin creat new valu regist object spill ambigu alias store match follow updat memori new valu store requir keep memori consist valu current creg case ambigu alias object fit creg set two variant store match address instruct first updat match creg write address creg store compil use left hand side assign statement alias spill therefor store address written sourc regist second form store updat address creg store well valu match creg overwrit address effect alloc object creg compil use def start live rang alias object alloc creg 213 address clear instruct care must taken live rang live across subroutin boundari identifi two case first case creg contain valu one subroutin stack frame could caus inadvert squash load follow subroutin stack frame occupi memori space differ time second case involv object may involv subroutin call creg alloc anoth set use subroutin forc break live rang object clear address field isol caller calle make ambigu alias object reload first use follow subroutin call altern address valu field could save restor subroutin boundari 214 context switch aggress regist isol requir context switch except interrupt creg regist file must contain content event accomplish special store load move valu address field creg memori context switch repres data present paper howev oper system overhead system call includ 215 code size effect static code size creg often smaller gener convent regist file creg object alloc result reduct spill load howev load store requir provid isol subroutin boundari simpli creg util experi small routin larg number array refer increas amount subroutin isol code signific product compil routin could candid inlin 22 exampl figur 3 4 illustr creg oper valu creg memori refer name r5 ai address refer prefix r5 ai address field creg f4 written f4 load store involv creg updat memori oper depict figur 3 simpl code exampl copi r4 creg match ai store store r4 ai load ai alloc r4 els load r5 ak load copi r6 creg match aj creg store r6 aj store figur 4 underli oper box surround oper perform exampl j known compil time array refer ambigu alias assum live rang ai ak alloc live rang aj spill furthermor assum live rang ak start use line 4 line 2 exampl show def array element store follow def alloc ai r4 write address ai address field r4 also copi valu r4 creg set match address write valu memori load requir ai line 4 note code line 3 chang valu ai r4 would updat via creg address match load ak line 4 necessari start live rang ak may may result memori oper effect address ak match address field creg set valu copi creg instead load memori exampl k equal r4 r5 creg set valu r4 would copi r5 address match found memori read occur final store aj write new valu r6 memori creg address updat address field r6 address field r6 remain null set null add instruct line aj spill 23 creg implement section illustr creg may integr pipelin superscalar processor implement earlier studi show creg could integr simpl risc processor pipelin use cachelik circuitri small chip area increas clock cycl time impact noo92 sketch implement dec alpha 21064 deeplypipelin superscalar processor pipelin stage alpha 21064 shown figur 5 unlik risc micro processor integ pipelin divid two pipelin one dedic loadsstor integ alu oper oper pipelin stage respect fetch swap decod issu b write figur 5 alpha 21064 pipelin stage creg oper follow note fetch swap decod issu stage unchang fetch instruct cach access two instruct fetch swap two instruct inspect see requir integ floatingpoint pipelin branch predict decod instruct decod issu instruct issu operand read stage one integ comput effect address load store instruct load address written destin creg address field store address written sourc creg address field object store alloc creg 2 stage two integ read data cach tag cach data load store hardwar check address match effect address creg set match instruct load match creg read memori read perform valu sent write stage store sourc valu sent stage write write result regist file load write valu match creg load squash memori read 3 load squash store write sourc valu match creg write buffer pipelin oper unchang creg match occur dual issu possibl 21064 creg one addit dual issu restrict necessari integ creg store dualissu follow integ alu oper sinc store may write sourc regist integ alu instruct latter instruct must wait issu store instruct clock tick howev sourc regist resid creg set differ store sourc regist instruct may dualissu dual issu condit unaffect consist floatingpoint integ instruct pair regist file split addit forward logic need pipelin stage b exampl load follow store creg need load valu write memori without stall recoveri scheme reorder histori buffer smp88 modifi without undu overhead allow creg implement decis made compil choos store instruct use 3 read first level cach hit otherwis second level cach main memori creg implement requir addit hazard detect regist file read port addit creg requir address field mask field approxim doubl size regist file given increas chip size small area requir regist rel cach function unit rest data path increas chip area may problem alloc object creg graph color regist alloc use node repres live rang valu arc node specifi two live rang alloc regist node interfer graph color repres alloc live rang specif regist section describ live rang construct alia analysi compil perform build interfer graph describ chang brigg optimist color algorithm allow ambigu alias object alloc creg 31 live rang construct varieti object elig alloc creg follow simpl rule describ live rang strategi first organ local formal paramet array refer accord name array index calcul involv variabl index calcul encod valu number annot refer uniqu live rang built array element manner scalar treat uniqu index given array differ element live rang combin alia analysi describ next live rang allow color algorithm correctli alloc ambigu alias object creg global alloc prespil mean usedef spill code respons loadingstor valu live rang scalar local formal paramet creat describ brigg bri92 32 alia analysi section describ group object alia set prepar alloc creg set ambigu alias object group alia set might alloc across multipl creg set stale data could occur creg alia analysi use local variabl minim simpl asu86 object ambigu alias object b point program put b alia set anoth object c alias b later point also place alia set set impli c alias may may true conserv assum true obvious room improv construct set note howev b c must alloc creg set enhanc alia analysi may improv alloc process alia set repres interfer graph circularli link list live rang node local array alia set consist live rang element array 4 formal paramet array interprocedur alia analysi use group live rang alia set coo85 scalar null pointer alia set 4 conserv two local array live rang conflict place differ alia set two basic oper alia set find rang creg allow color select alia set member color creg set remain alia set member limit color within creg set member alia set color creg set chosen roundrobin manner first oper find color member alia set given uncolor member set find alia colornod member set color yet color creg set chosen roundrobin manner node member alia set illeg color return second basic oper use result color find first last creg correspond creg set find first lastcolor color given valid color return first last creg entir regist file target architectur support maxim creg set find first lastcolor alway return entir regist file rang 33 modif brigg optimist color algorithm section illustr chang brigg optimist color algorithm bck89 enabl color interfer graph augment alia set maxim creg set find routin describ caus alloc revert brigg origin algorithm brigg optimist algorithm delay spill decis know color avail color select phase control select color node alia set limit creg one creg set color select stage scan rang color check color node neighbor loop origin limit avail color limit base creg set node color scalar object limit remain entir regist file node color within rang color specifi spill code insert algorithm iter color select origin found sever alia set frequent one member alloc singl creg set remain member alia set often alloc creg set full find alia colornod return color creg set roundrobin manner alia set fix creg set yet allow alia set better chanc complet alloc creg set multipl alia set still alloc one creg set fit augment brigg optimist color independ cost function make compat improv bgg89 chaitinstyl alloc includ brigg heurist limit insert spill code exampl use live rang close 5 def live rang spill code insert overrid case def ambigu alias object store alway follow keep memori updat small regist file regist pressur high spill code may gener case creg differ spill decis made interfer graph node edg due array live rang heurist color algorithm may make differ decis base interfer graph topolog weight 34 depend pointer analysi creg hardwar complementari compil time techniqu reduc ambigu alias depend pointer analysi techniqu power alway succeed 5 two mention live rang close live rang goe dead cha82 disambigu relev refer static techniqu fail creg hardwar provid mechan detect alias run time retain advantag regist storag alias object studi depend pointer analysi implement maxim creg set pointer valu alloc without analysi creg divid set analysi requir group refer alia set 4 experiment result 41 test test suit consist sever float point spec 89 92 benchmark livermor loop hydrodynam code 6 benchmark shown figur 6 use compar dynam maxim creg set set size 4 benchmark subr line load store instr load store instr tomcatv 200 2106 000 711 1924 000 609 doduc debico1 220 4756 031 290 4902 038 286 doduc debico2 220 7444 012 1375 7533 012 1349 doduc dcoera 287 900 000 061 438 179 151 doduc dyeh 253 421 000 000 105 000 000 doduc yeh 372 1122 003 000 408 000 000 livermor loop 862 839 002 145 792 007 123 ppm 1096 2117 142 445 1965 157 429 figur percent reduct summari regist file size instruct count alloc object convent regist file alloc object creg regist file compil gener code convent creg regist file simul simul convent regist file creg regist file optim compil known ccc develop univers minnesota simul support convent creg regist file alpha architectur dec92 dec93 instruct level simul capabl give dynam instruct count simul processor pipelin cach give actual cycl count calcul number load reduc creg two compil simul perform set criteria test first compil target toward convent regist file simul convent architectur certain number instruct execut count categori loadsstoresal instruct baselin comparison second compil alloc object creg simul creg regist file dynam instruct count compar get reduct percentag xaxi plot number regist avail color algorithm user variabl regist file floatingpoint integ number regist simul machin integ multipl creg set size last creg set fewer 6 ppm code obtain dr paul woodward univers minnesota reduct regist dynam instruct reduct load store instr figur 7 vpenta maxim creg set reduct regist dynam instruct reduct load store instr figur 8 vpenta set size 451525 reduct regist dynam instruct reduct load store instr figur 9 tomcatv maxim creg set51525 reduct regist dynam instruct reduct load store instr figur 10 tomcatv set size 4 reduct regist dynam instruct reduct load store instr figur 11 l loop maxim creg set reduct regist dynam instruct reduct load store instr figur 12 l loop set size 4 reduct regist dynam instruct reduct load store instr figur 13 ppm maxim creg set reduct regist dynam instruct reduct load store instr figur 14 ppm set size 4 member two plot shown benchmark one maxim creg set one creg set size four 42 analysi observ follow benchmark shown ffl dynam load reduct rang 0 75 ffl averag reduct memori oper creg 2338 ffl small creg set caus slight increas memori oper compar maxim creg set ffl dynam instruct count reduct vari 06 1375 increas regist pressur present fewer opportun reduc load dynam load reduct due squash load direct remov spill load squash load memori oper occur ie count load instruct still count total instruct execut fewer load occur creg code object alloc data show maxim creg set give slightli better reduct load reduct total instruct execut slightli posit mean reduct load object alloc creg offset increas subroutin isol code data creg set size eight sixteen similar size four shown similar due low number simultan live ambigu alias object ste86 maximum number write match measur simul test case never exceed two benchmark shown theoret could larg set size regist pressur artifici increas compilersimul system reduc number regist avail effect regist pressur shown graph gener creg allow larger percentag load remov obvious effect level scalar alias object alloc figur 7 exampl program path creg perform result affect input data ran debico two differ data set result figur 6 show subroutin frequent reus array valu creg account larg load reduct data set perform improv due creg depend cach hit miss penalti cach miss rate whether memori oper remov hit miss cach squash remov load data avail earlier pipelin reduc effect access latenc creg implement execut time reduc follow reason ffl gener fewer instruct execut ffl fewer memori oper execut ffl overal data access latenc reduc sinc refer directli regist 5 summari futur work regist file compos creg one solut ambigu alia problem shown instruct level implement explain oper memori oper involv creg compil work conjunct creg hardwar produc code contain fewer load instruct squash memori refer dynam live rang construct local formal paramet array element similar scalar live rang group alia set use interprocedur alia analysi local alia inform simpl modif brigg optimist color algorithm allow interfer graph augment alia inform alloc creg chang involv limit color avail node color select phase algorithm roundrobin scheme help distribut alia set among creg set avert deadlock situat spill alia set member combin hardwar compil strategi significantli reduc dynam instruct count memori traffic becom increasingli import gap processor memori speed increas processor clock speed increas memori access complet later pipelin creg provid mechan reduc data access latenc current explor creg hardwar integr implement featur regist renam wide instruct issu vliw superscalar intend add pipelin cach behavior simul effect creg execut time may measur directli futur implement better alia analysi aggress algorithm keep alia set size small pointer valu alloc without caus signific increas spill code complex pointer analysi may limit solut architectur maxim creg set one way would add alia edg interfer graph alia edg present two node node must alloc creg creg set experi criteria brigg algorithm use choos trivial color node name degre k k number color avail creg set size c may make sens add term degre c criteria degre number neighbor node alia set zero scalar also intend improv spill code heurist remov store certain circumst member alia set alloc acknowledg would like thank john mejia help alpha simul terenc parr assist pcct compil construct tool peter bergner help graph color algorithm live rang analysi jame smith cray research feedback earli draft paper r color heurist regist allo cation spill code minim techniqu optim compil regist alloc via graph color singl instruct stream parallel greater two improv regist alloc subscript vari abl regist alloc spill via graph color unifi manag regist cach use live cach bypass integr memori manag scheme dynam alia resolut analyz alias refer formal paramet practic data flow framework array refer analysi use optim creg new kind memori referenc array pointer architectur support regist alloc presenc alias specul disambigu compil techniqu dynam memori disambigu creg implement studi base mipsx risc microprocessor implement precis interrupt pipelin processor refin c compil statu report tr compil principl techniqu tool creg new kind memori referenc array pointer spill code minim techniqu optim complier color heurist regist alloc unifi manag regist cach use live cach bypass architectur support regist alloc presenc alias integr memori manag scheme dynam alia resolut regist alloc via graph color analyz alias refer formal paramet creg implement studi base mipsx risc processor regist alloc myampersandamp spill via graph color ctr gari tyson todd austin improv accuraci perform memori commun renam proceed 30th annual acmiee intern symposium microarchitectur p218227 decemb 0103 1997 research triangl park north carolina unit state gari tyson todd austin memori renam fast earli accur process memori commun intern journal parallel program v27 n5 p357380 oct 1999 jin lin tong chen weichung hsu penchung yew specul regist promot use advanc load address tabl alat proceed intern symposium code gener optim feedbackdirect runtim optim march 2326 2003 san francisco california matthew postiff david green trevor mudg storeload address tabl specul regist promot proceed 33rd annual acmiee intern symposium microarchitectur p235244 decemb 2000 monterey california unit state