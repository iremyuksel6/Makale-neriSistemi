closur analysi constraint form flow analys untyp higherord function program past decad present ayer bondorf consel jone heintz sestoft shiver steckler wand other analys usual defin abstract interpret use rather differ task type recoveri global bindingtim analysi analys contain global closur analysi comput inform higherord controlflow sestoft prove 1989 1991 closur analysi correct respect callbynam callbyvalu semant remain open correct hold arbitrari betareductionthi articl answer question closur analysi other correct respect arbitrari betareduct also prove subjectreduct result closur inform still valid betareduct core proof techniqu defin closur analysi use constraint system constraint system equival closur analysi bondorf turn base sestoft b introduct 11 background optim higherord function languag requir power program analys tradit framework analys abstract interpret type languag suitabl abstract domain often defin induct structur type exampl function space abstract function space untyp languag calculu dynam type languag scheme abstract domain defin abstract function space function space domain use may difficult relat abstract interpret denot semant articl consid style program analysi result abstract oper semant past decad program analys untyp languag present author address comput scienc depart aarhu univers ny munkegad dk8000 aarhu c denmark email palsbergdaimiaaudk permiss copi without fee part materi grant provid copi made distribut direct commerci advantag acm copyright notic titl public date appear notic given copi permiss associ comput machineri copi otherwis republish requir fee andor specif permiss acm transact program languag system 1714762 januari 1995 also proc caap94 page 276290 c jen palsberg ayer 1992 bondorf 1991 consel 1990 jone 1981 heintz 1992 sestoft 1989 1991 shiver 1991a 1991b wand steckler 1994 other although analys use rather differ task type recoveri global bindingtim analysi base essenti key idea absenc type defin abstract domain term program point exampl consid follow term giannini rocca 1988 prove strongli normal term higherord polymorph type still program analysi might answer basic question 1 everi applic point abstract appli 2 everi abstract argument appli answer question subset program point particular term thu let us label abstract applic also variabl label variabl bound label label bind free arbitrari label introduc explicit applic symbol get follow abstract syntax term analysi might abl find matter reduct proce appli abstract label 3 appli abstract label 3 applic point dd delta k appli applic point label 12 appli abstract label 3 4 abstract cb never appli applic point abstract label 5 appli quot sentenc give intuit understand precis statement follow particular exampl label rather unnecessari name clash happen reduct k cb normal form presenc name clash reduct howev crucial use set program point abstract valu question turn paramount import mani analys untyp function program follow sestoft bondorf call analysi answer conserv closur analysi top closur analysi one build exampl type recoveri analys global analys bindingtim analys closur analysi answer question higherord control flow extens answer question one realli interest exampl type recoveri role closur analysi thu follow closur analysi constraint form delta 3 higherord closur analysi closur analysi use higherord languag gener exampl objectori languag see palsberg schwartzbach 1991 1994b also use type function languag type inform usual specif enough tell function among typecorrect one call applic point closur analysi extens defin abstract interpret differ radic tradit abstract interpret howev abstract domain defin term program analyz mean analys global abstract domain defin complet program requir moreov program take higherord input would add program point also minim function graph approach program analysi use abstract domain defin term input program contrast tradit abstract interpret analyz piec program isol refer analys base closur analysi flow analys exampl largescal implement analys found similix system bondorf bondorf 1993 bondorf danvi 1991 schism system consel 1990 system agesen et al 1993 analyz self program ungar smith 1987 last implement demonstr closur analysi handl dynam multipl inherit closur analysi extens formul use constraint other exampl heintz 1992 1994 wand steckler 1994 constraint system spirit close although technic somewhat differ key differ heintz definit heintz 1994 attempt avoid analyz code execut callbyvalu goal share analysi palsberg schwartzbach 1992a idea defin program analys use constraint set variabl call setbas analysi heintz prove closur analysi correct respect call bynam callbyvalu semant remain open correct hold arbitrari betareduct 12 result prove closur analysi correct respect arbitrari betareduct also prove subjectreduct result closur inform still valid betareduct correct result impli closur analysi correct respect reduct strategi present novel specif closur analysi allow arbitrari beta reduct take place subsum previou specif present closur analysi use constraint system constraint system character result analysi without specifi comput exampl constraint system given section 13 prove constraintbas analysi equival closur analysi bondorf 1991 turn base sestoft sestoft 1989 also jen palsberg prove analys equival novel simplif bondorf definit proof correct subjectreduct proceed consid constraintbas definit closur analysi contrast closur analys abstract interpret one use constraint system depend label distinct make possibl analyz term betareduc analyz result without relabel first abstract interpret might modifi properti also would somewhat messi indic direct proof correct modifi abstract interpret would complic proof present articl techniqu prove correct gener without problem analys base closur analysi follow two result prove articl safeti analysi palsberg schwartzbach 1992a 1992b correct respect arbitrari betareduct follow subjectreduct prop erti term stay safe betareduct bindingtim analysi palsberg schwartzbach 1994a prove correct palsberg 1993 prove correct elegantli new techniqu constraintbas definit closur analysi straightforward extend practic languag mediums exampl see palsberg schwartzbach 1994b analysi defin objectori languag 13 exampl constraint system express closur analysi term set horn claus term contain n abstract applic constraint system contain n constraint thu size constraint system worstcas quadrat size term space constraint disallow us show fullblown exampl involv name clash reduct consid instead term xxxyy abstract syntax constraint system express closur analysi term look follow 3 1 ae 3 ae 4 ae 4 ae symbol form l l metavari relat variabl label l abstract label l applic label respec tive notic assum exampl one abstract closur analysi constraint form delta 5 label l reason want closur analysi term also aris betareduct may copi term henc label left constraint indic aris first two constraint express abstract may evalu abstract label rest constraint come pair applic point abstract label l two constraint form flg metavar oper flg metavar oper constraint read first constraint oper evalu abstract label l bound variabl abstract may substitut everyth operand evalu second constraint oper evalu abstract label l everyth bodi abstract evalu also possibl result evalu whole applic solut constraint system metavari assign closur format minim solut constraint system map l exampl whole term normal evalu abstract label 2 l 4 applic point 3 appli abstract label 2 l 1 applic point 3 point abstract label 2 appli l 1 abstract appli term either normal evalu abstract label 2 l 2 one theorem say comput closur inform correct one might also tri closur analysi term use bondorf abstract interpret anoth theorem say get result contract redex term result term abstract one third theorem say map l give correct closur inform also term follow section defin three closur analys bondorf simpler abstract interpret one constraint form section 3 prove equival section 4 prove correct 2 closur analysi recal calculu barendregt 1981 definit 21 languag term abstract syntax defin grammar applic jen palsberg label variabl abstract symbol applic symbol semant impact mark program point label bound variabl bind label drawn infinit set label symbol l l label label applic symbol part concret syntax identifi term ffcongruent ffconvers chang bound variabl label assum variabl convent barendregt 1981 term occur articl bound variabl chosen differ free variabl achiev renam bound variabl occurr l xe call redex semant usual given rewritingrul scheme l xe ee 0 x l denot term e substitut free occurr x l notic variabl convent renam bound variabl necessari substitut particular write l yee 0 x l 0 l 6j x l 0 l among free variabl e 0 thu l yee 0 x l 0 write es e denot e obtain es 0 betareduct term without redex normal form abstract domain closur analysi term e call cmape defin follow definit 22 metavari one form l l set metavari denot metavar term assign metavari function var map x l l l xe l term e labe set label abstract applic occur e notic labe finit set csete powerset labe csete inclus order complet lattic set cmape consist total function metavar csete set cenv contain function cmape restrict metavari form l cmape cenv pointwis order written v complet lattic least upper bound written function hv 7 si map metavari v set map metavari empti set final defin upd 21 specif closur analysi state precis closur analysi intuit argument follow formal definit definit 211 term e everi l 2 cmape defin binari relat term follow follow four condit hold l xe ex contain l 0 ze 0 flg lvare 0 contain l xe ex contain 0such flg closur analysi constraint form delta 7 flg closur analysi e produc l 2 cmape intuit ex e get conserv inform abstract e closur analysi ex exampl first condit definit 211 illustr follow theta theta theta theta theta theta theta theta theta theta theta theta theta theta case e abstract label l thu ex evalu abstract label l first condit say case map l must satisfi flg lvarex word analysi must awar abstract possibl result evalu ex three condit definit 211 cover case abstract proper subterm e second condit cover case abstract e bodi yet anoth abstract third fourth condit cover case abstract oper operand appli cation respect illustr first three condit other similar theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta thetab theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta theta thetab z l 0 case e contain abstract label l l xe abstract turn bodi abstract label l 0 l 0 l xe second condit jen palsberg definit 211 say case must abstract ex label l 0 l 0 bound variabl may differ map l satisfi flg lvare 0 word analysi must awar abstract l 0 ze 0 ex evolv abstract bodi abstract label l notic possibl one abstract ex label l 0 thu want closur inform bodi abstract label l 0 must comput union inform bodi abstract ex label l 0 similar comment appli third fourth condit definit 211 use closur inform concern articl howev 22 bondorf definit recal closur analysi bondorf 1991 minor chang notat compar present analysi assum label distinct bondorf definit origin given subset scheme restrict calculu note bondorf definit base sestoft sestoft 1989 simplifi bondorf definit follow bondorf origin definit assign distinct metavari differ occurr variabl contrast assign metavari occurr variabl simplifi definit equival bondorf origin definit see use notat l xe subterm term analyz partial function bodi map label l e definit 221 defin upd l let c 0 vare 1 let 00 upd let ae 00 ae 0 l2c upd l 00 closur analysi e comput fstbe modifi definit differ occurr variabl assign distinct metavari obtain bondorf origin definit definit assign set metavari occurr given variabl moreov comput closur inform comput state analysi leav detail reader 23 simpler abstract interpret bondorf definit simplifi consider see consid second compon cmape theta cenv compon updat closur analysi constraint form delta 9 ae read bx l ae key observ oper done first compon instead thu omit use cenv rewrit bondorf definit accord observ arriv follow definit bondorf definit assum label distinct definit 231 defin mx l f closur analysi e comput fixm key question simpler abstract interpret equival bondorf might attempt prove use fixedpoint induct find much easier use particular constraint system step stone 24 constraint system term e constraint system finit set horn claus inclus form p p 0 p p 0 either metavari element csete solut system element cmape satisfi horn claus constraint system defin term term analyz need assum label distinct set 1 consist two element term e constraint system ce union follow set constraint everi l xe 0 e singleton constraint set consist flg l everi e everi l xe 0 e set 1 ce least solut name intersect solut closur analysi e comput solut ce canon choic solut cours least one closur analysi bondorf jrgensen 1993 understood ad two constraint 1 effect inclus chang equal thu closur analysi comput approxim inform return analysi comput almostlinear time use formul problem bondorf jrgensen 1993 wherea fastest known algorithm comput least solut ce use transit closur see palsberg schwartzbach 1992a 1994b 3 equival prove three closur analys defin section 2 equival appli term label distinct use standard jen palsberg terminolog prefix point v lemma 31 prefix point 0 everi proof induct structur e lemma 32 ce least solut fixm proof prove stronger properti solut ce exactli prefix point two inclus consid first prove everi solut ce prefix point proceed induct structur e base case consid x l clearli everi prefix point mx l induct step consid first l xe suppos solut c l xe also solut ce induct hypothesi prefix point henc get l met h l use definit prefix point sinc c l xe solut flg l consid suppos solut solut ce 1 induct hypothesi prefix point 1 henc get 1 use definit prefix point 1 ce 1 solut second prove everi prefix point solut ce proceed induct structur e base case consid x l clearli everi solut cx l induct step consid first l xe 0 suppos prefix point l xe 0 lemma 31 also prefix point 0 induct hypothesi solut ce 0 thu need prove satisfi flg l first use prefix point result follow second one consid e 0 lemma 31 also prefix point 1 use assumpt get w f varbodyli result follow consid suppos prefix point 1 lemma 31 also prefix point 1 induct hypothesi solut ce 1 thu need prove everi l xe 0 prefix point 1 f varbodyli result follow lemma 33 ce least solut fstbe proof similar proof lemma 32 theorem 34 three closur analys defin section 2 equival proof combin lemma 32 33 closur analysi constraint form delta 11 4 correct prove three closur analys defin section 2 correct key defin entail relat 0 definit 41 mean constraint constraint system 0 logic deriv central result theorem 410 ex theorem prove without consid solut involv constraint system definit 41 constraint system h horn claus judgment h entail h hold deriv use follow five rule reflex modu ponen 0 constraint system 0 8h 2 lemma 42 reflex transit solutionpreserv 0 proof last properti immedi use discharg reflex consequ last properti transit suppos 0 statement 0 h h prove induct structur proof 0 h prove 00 suppos h 2 00 0 00 get 0 h statement final get h prove solutionpreserv suppos 0 solut l need prove everi h 2 0 h solut l prove induct structur proof h follow lemma structur modu ponen use proof lemma 43 weaken use proof lemma 46 aid intuit inform read vare vare 0 assumpt term e smaller flow inform term e 0 next lemma state two specif constraint deriv constraint system redex inform first constraint say argument smaller flow inform bound variabl second constraint say bodi abstract smaller flow inform whole redex jen palsberg lemma 43 c l xe proof flg l xe result follow var l modu ponen next lemma substitut lemma inform state term get smaller flow inform subterm get substitut one smaller flow inform lemma 44 varu l vareux l vare proof induct structur e use reflex repeatedli inform next lemma state betareduct creat term smaller flow inform lemma 45 cex proof proceed induct structur ex base case consid x l conclus immedi sinc x l normal form induct step consid first l xe suppos notic use reflex get l consid final three case suppos use reflex get suppos use reflex get suppos get former lemma 44 get vare 2 x l vare use transit final conclud vare 2 x l inform next lemma state entail robust betareduct substitut lemma 46 suppos 1 proof reflex lemma 45 lemma 44 result follow use weaken follow definit need state prove lemma 49 definit 47 set w e union follow set constraint everi e everi l xe 3 everi e 0 everi l xe 3 e set 1 lemma 48 w w proof immedi closur analysi constraint form delta 13 next lemma substitut lemma like lemma 46 state entail robust substitut lemma 49 w e u varu l ceux l proof let ae denot substitut ux l proceed induct structur e base case consid x l j l 0 result follow w e u lemma 42 x l 6j l 0 result follow w e u lemma 42 induct step consid first also case result follow w e u lemma 42 x l 6j l 0 ae induct hypothesi ce 0 ae thu need show everi first follow c l 0 second consid e 1 subterm subterm u case result follow w e u lemma 46 consid final notic induct hypothesi ce 1 ae ce 2 ae thu need show everi l 0 ae notic either l 0 ye 0 subterm ye 0 subterm l 0 ye 0 subterm u case result follow w e u lemma 46 prove betareduc ex e constraint system ex entail constraint system e theorem 410 ex proof proceed induct structur ex base case x l conclus immedi sinc x l normal form induct step consid first l xe suppos induct hypothesi thu need show c l xe flg l l xe 0 c l xe first follow use discharg second four case notic discharg c l xe everi xe first case suppos also subterm l xe result follow lemma 46 second case consid subterm e 0 l xe e result follow lemma 46 third case consid l xe yet result follow lemma 46 fourth case consid subterm e 0 substitut aris contract redex lemma 43 get result follow lemma 46 consid final everi l xe xe three case suppos e 1 induct hypothesi ce 1 0 thu need show everi l xe 0 e 0 three case first case suppos l xe 0 subterm result follow lemma 46 14 delta jen palsberg second case consid subterm l xe result follow lemma 46 third case consid subterm l xe l xe substitut aris contract redex lemma 43 see ce 1 result follow lemma 46 suppos e 2 proof case similar case omit detail suppos e 1 see ce 1 see w e result follow lemma 49 theorem 411 three closur analys defin section 2 correct proof theorem 34 see three analys equival appli term label distinct thu suffici prove one defin use constraint system correct proof two step step 1 use lemma 43 44 45 prove cex ex follow properti hold contain l ye ex contain l ze 0 vare vare 0 0such step 2 suppos cex solut l suppos ex e prove induct length ex e base case immedi induct step suppos theorem 410 cex solut l induct hypothesi prove four case consid first suppos lemma 45 get cex final result follow use cex solut l suppos l xe ez contain ze 0 flg lvare 0 step 1 proof get ex contain l 0 00 cex final result follow use cex solut l last two case suppos e contain either l xe respect case similar second one omit detail final prove subjectreduct result theorem 412 ce solut l solut l proof immedi theorem 410 lemma 42 acknowledg author thank torben amtoft nil klarlund anonym refere help comment draft articl closur analysi constraint form delta 15 r type infer self analysi object dynam multipl inherit effici closur analysi reachabl lambda calculu syntax semant similix 50 manual automat autoproject higher order recurs equat automat autoproject recurs equat global variabl abstract data type effici analys realist offlin partial evalu bind time analysi higher order untyp function languag character type polymorph type di ciplin base program analysi flow analysi lambda express correct bindingtim analysi safeti analysi versu type infer safeti analysi versu type infer partial type analysi effici implement function program replac function paramet global variabl self power simplic select lightweight closur convers revis octob tr self power simplic bind time analysi high order untyp function languag objectori type infer automat autoproject recurs equat global variabl abstract data type automat autoproject higher order recurs equat safeti analysi versu type infer partial type base program analysi objectori type system select lightweight closur convers setbas analysi ml program safeti analysi versu type infer type infer self flow analysi lambda express preliminari version ctr jen palsberg patrick okeef type system equival flow analysi acm transact program languag system topla v17 n4 p576599 juli 1995 jen palsberg equalitybas flow analysi versu recurs type acm transact program languag system topla v20 n6 p12511264 nov 1998 paolo di blasio kathleen fisher carolyn talcott controlflow analysi calculu concurr object ieee transact softwar engin v26 n7 p617634 juli 2000 suresh jagannathan peter thiemann stephen week andrew wright singl love mustalia analysi higherord languag proceed 25th acm sigplansigact symposium principl program languag p329341 januari 1921 1998 san diego california unit state flem nielson hann rii nielson infinitari control flow analysi collect semant closur analysi proceed 24th acm sigplansigact symposium principl program languag p332345 januari 1517 1997 pari franc kirsten l solberg gasser flem nielson hann rii nielson systemat realis control flow analys cml acm sigplan notic v32 n8 p3851 aug 1997 flanagan matthia felleisen componenti setbas analysi acm sigplan notic v32 n5 p235248 may 1997 anindya banerje modular polyvari typebas closur analysi acm sigplan notic v32 n8 p110 aug 1997 flanagan matthia felleisen componenti setbas analysi acm transact program languag system topla v21 n2 p370416 march 1999 philipp meunier robert bruce findler paul steckler mitchel wand selector make setbas analysi hard higherord symbol comput v18 n34 p245269 decemb 2005 neal glew jen palsberg typesaf method inlin scienc comput program v52 n13 p281306 august 2004 david herman philipp meunier improv static analysi embed languag via partial evalu acm sigplan notic v39 n9 septemb 2004 christian fecht helmut seidl propag differ effici new fixpoint algorithm distribut constraint system nordic journal comput v5 n4 p304329 winter 1998 philipp meunier robert bruce findler matthia felleisen modular setbas analysi contract acm sigplan notic v41 n1 p218231 januari 2006 thoma jensen type program analysi essenc comput complex analysi transform springerverlag new york inc new york ny 2002 murali krishna ramanathan ananth grama suresh jagannathan static specif infer use predic mine acm sigplan notic v42 n6 june 2007 v krishna nandivada suresh jagannathan dynam state restor use version except higherord symbol comput v19 n1 p101124 march 2006 jen palsberg christina pavlopoul polyvari flow inform intersect union type proceed 25th acm sigplansigact symposium principl program languag p197208 januari 1921 1998 san diego california unit state andrew tolmach dino p oliva ml ada stronglytyp languag interoper via sourc translat journal function program v8 n4 p367412 juli 1998 h seidl h srensen constraint stop higherord deforest proceed 24th acm sigplansigact symposium principl program languag p400413 januari 1517 1997 pari franc andrew k wright suresh jagannathan polymorph split effect polyvari flow analysi acm transact program languag system topla v20 n1 p166207 jan 1998 anindya banerje thoma jensen modular controlflow analysi rank 2 intersect type mathemat structur comput scienc v13 n1 p87124 februari jen palsberg typebas analysi applic proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p2027 june 2001 snowbird utah unit state david schmidt tracebas abstract interpret oper semant lisp symbol comput v10 n3 p237271 may 1998