type context calculu paper develop type calculu context ie lambda term hole addit ordinari lambda term calculu contain label hole hole abstract context applic manipul firstclass context primari oper context holefil captur free variabl oper conflict substitut lambda calculu straightforward mixtur two result inconsist system solv problem defin type system precis specifi variablecaptur natur context keep track bound variabl renam mechan enabl us defin reduct system properli integratesbrgreduct holefil result calculu churchross type system subject reduct properti believ context calculu serv basi develop program languag advanc featur call manipul open term copyright 2001 elsevi scienc bv b introduct context lambda calculu term hole oper context hole context term purpos 1 author version articl appear theoret comput scienc current aliat depart inform scienc univers tokyo bunkyoku tokyo 1130033 japan 3 atsushi ohori work partli support japanes ministri educ grantinaid scientic research prioriti area 275 advanc databas parallel distribut process research consortium japan preprint submit elsevi preprint 23 januari 2001 explan section write c context contain hole indic write cm term obtain c lling hole exampl c xy 3 cxz xxzi 3 seen simpl exampl featur distinguish oper substitut lambda calculu captur free variabl exampl x x z becom bound lled context one motiv behind use context theori lambda calculu studi properti open term sinc behavior open term depend bind free variabl order analyz behavior essenti consid possibl context open term occur studi program analys base context observ equival 1311 yield import result analysi program languag usag context metalevel notion applic program languag larg limit metalevel manipul program believ program languag extend rstclass context extend languag provid variou advanc featur call manipul open term let us brie mention program environ convent program environ program must rst compil object modul must link togeth form execut program moreov execut program must close term program environ extend abil link variou softwar compon dynam exibl signicantli increas sinc mechan context advoc oer way perform link runtim would provid basi develop environ theoret sound way distribut program distribut program one often want send piec code remot site execut wit recent emerg internet program languag java 4 featur greatli enhanc express power distribut program one naiv approach send program pack necessari resourc closur send entir closur remot site obviou drawback approach ineci sinc case commun site share common resourc standard runtim librari better approach would send open term make necessari bind remot site type calculu rstclass context would provid clean type safe mechan manipul open term firstclass modul program use modul natur regard open term contain free variabl whose valu suppli modul one way model modul export set function f identi f would therefor regard context captur variabl f bind f respect use open modul correspond lling hole context variabl approach provid new foundat exibl modul system convent languag modul modula2 18 standard ml 12 rigid separ type system modul term allow oper modul rather limit signic potenti advantag modulesascontext approach modul freeli combin construct avail languag ie modul treat rstclass citizen needless say actual modul system must account variou featur type abstract type share separ compil simpl view alon immedi provid proper basi modul system nonetheless believ properli rene variou mechan modul system studi literatur approach open new possibl exibl modul system inde recent work well vestergaad 17 show connect modul languag context calculu gener motiv studi develop program languag rstclass context repres featur clean way despit potenti promis featur context languag rstclass context well investig lee friedman 10 propos calculu context lambda term two disjoint class object context regard sourc code lambda term compil code separ done assum two disjoint variabl name space one lambda term one context consequ system reduct llreduct two disjoint relat without nontrivi interact dami 2 also announc system dynam bind similar lee friedman approach would use repres sourc code data structur allow context languag treat rstclass valu insid languag kahr 9 develop combinatori term rewrit system compat context howev context holel repres term within system term talcott 16 develop algebra system manipul bind structur system includ suitabl mechan manipul context particular contain hole holel commut substitut howev metalevel system issu repres context associ holel oper insid reduct system lambda calculu address one featur context bind variabl hole sens context close relat environ abadi et al 1 develop calculu explicit substitut motiv similar spirit intern metalevel mechan lambda calculu howev address problem rstclass treatment substitu tion revis present articl author notic sato et al 14 recent develop environ calculu environ rstclass valu obtain con uent calculu also address problem variabl bind presenc rstclass environ solut problem similar although gener mechan need calculu rstclass context shall comment detail describ approach next section goal paper establish type theoret basi program languag rstclass context develop type context calculu lambda term simpli special case context particular context lambda term belong syntact categori share set variabl substitut holel dene syntact object properti essenti achiev variou featur explain observ literatur 910 howev reduct llreduct context mix well naiv integr yield inconsist system develop meaning calculu contain reduct llreduct act set term constitut nontrivi technic challeng main technic contribut establish calculu possibl prove calculu churchross type system subject reduct properti obtain con uent calculu overcom variou delic problem deal variabl introduc sever new mechan lambda calculu give technic develop next section explain problem outlin solut 2 problem solut hard extend syntax untyp lambda calculu constructor context convent studi hole context name less howev sinc goal develop calculu rstclass context abl consid context contain context requir us gener context contain multipl dierent hole one lled holel oper one way dene uniform syntax context introduc label hole 9 use upper case letter label hole incorpor oper context term lambda calculu introduc hole abstract xm abstract hole x term creat term act context whose hole x introduc context applic denot oper abstract hole 1 term 2 exampl context c x repres term context applic term denot term obtain lling hole context x call subterm form xm contract term obtain 1 lling xhole 1 2 dierent meta notat cx applic term constructor allow us exploit featur rstclass context combin lambda abstract lambda applic exampl write term like contract term goal paper develop type system reduct system lambda calculu extend three term constructor ie label hole hole abstract context applic crucial step develop proper mechan integr variablecaptur hole lling captureavoid substitut lambda calculu see problem consid term use dierent type face x x x distinguish dierent occurr variabl x pay attent term two redex one llredex intent inner x captur x lled hole x outer x free follow reduct sequenc produc intend result howev reduc redex llredex result dierent term reduc inner redex llredex bind inner x lost yield x reduc outer redex llredex outer x unintent captur depend order llredex redex avoid inconsist reden scope lambda bind ect behavior term form xm 1 2 suppos x 1 whose scope contain x sinc 2 lled x scope x also extend 2 properti impli follow two requir first redex contain hole x contract secondli substitut term contain x free variabl 2 x 1 correspond variabl 1 2 need renam avoid unwant captur exampl contract inner redex holel contract outer redex hole lling renam x x substitut situat becom subtl consid term like w zwx sinc w variabl simpl inspect term wxz longer tell variabl xz regard bound howev variablecaptur still occur hole abstract substitut w strategi solv problem dene type system tell exactli variabl consid bound introduc rene notion equival reconcil holel substitut tell variabl consid bound type hole abstract term xm context type form 1 type abstract hole 2 type term produc lling hole context term describ set variabl captur lled hole x call variabl interfac variabl exampl would type fx intg int int howev simpli list set actual bound variabl surround x xm interfac variabl type renam bound variabl sinc substitut dene renam bound variabl caus problem extend substitut hole abstract term exampl renam bound variabl x term xxx note usual bound variabl convent solv problem lambda calculu simpli assum bound variabl dierent free variabl redex possibl freeli renam bound variabl well known theori lambda calculu condit preserv substitut even start term satisfi bound variabl condit anomal term like may appear reduct avoid problem separ actual bound variabl xm correspond interfac variabl rene holel oper also perform variabl renam manipul bind structur talcott 16 develop techniqu pair hole substitut use approach annot hole x variabl renam renam interfac variabl correspond bound variabl write x hole x annot context repres type term x interfac variabl renam lled x separ bound variabl renam without chang type term allow us achiev proper integr holel substitut term form xm semant holel preserv appli renam faxg term lled x exampl follow reduct exampl yet anoth delic problem aris consid interact substitut term form mn construct may bind variabl n order determin bound variabl need annot construct set variabl n bound form term sinc set must correspond set interfac variabl context term naiv attempt would annot constructor mn set subterm exampl term might repres term xax faxg z note earlier variabl x must treat bound variabl impli combin substitut variabl need renam unfortun imposs term form w fxg renam correspond interfac variabl hole abstract term substitut later w need separ set interfac variabl type hole abstract term set variabl captur lled hole context achiev annot constructor context applic renam write n renam renam variabl n bound holel correspond interfac variabl hole abstract term eect obtain compos renam hole bound variabl n independ correspond interfac variabl perform bound variabl renam exampl correctli repres follow term b term b bound variabl renam without chang type term semant holel preserv appli composit faxg fxbg fabg renam faxg fxbg term lled x follow exampl reduct involv renam applic b 3 anoth slightli gener altern n make renam term constructor n introduc new type constructor n g constructor believ also possibl system howev shall take approach sinc elimin oper would modi version holel therefor addit exibl essenti achiev goal rstclass treatment context base strategi outlin work denit type system calculu reduct system prove type system subject reduct properti reduct system churchross work sato et al 14 typetheoret approach similar taken order identifi set free bound variabl howev system fulli address problem mix construct substitut calculu contain term constructor e 1 intuit mean evalu e 2 bind provid environ e 1 howev reduct nest applic construct restrict variabl act gener term restrict treatment subtl problem equival explain aris system care reader may notic aspect context alreadi repres lambda calculu one predetermin exact order variabl export context import term lled context one repres hole abstract context applic simpli function seen follow encod scheme holel form repres lambda term form howev encod elimin abil bind variabl name therefor signicantli reduc benet rstclass context advoc introduct rest paper organ follow section 3 dene context calculu section 4 dene reduct system prove subject reduct properti churchross properti calculu section 5 conclud paper discuss investig appendix contain proof lemma 3 calculu use follow notat function domain codomain function f written domf codf respect sometim regard function set pair write empti function let f g function write f g f g provid domf domg omit g explicitli repres set write ff g f g restrict function f domain written f j set type rang calculu given syntax b rang given set base type rang variabl type assign function nite set variabl type let x rang countabl innit set variabl let x rang countabl innit set label hole let rang variabl renam function nite set variabl variabl denot fy 1 x g let renam avoid unnecessari complic assum fy ng fx n renam chang name domain renam fresh name ident renam extend set variabl let follow identifi renam extens howev maintain domain dom renam alway mean domain origin nite function composit 1 2 two variabl renam 1 2 function set uncheck term rang calculu given syntax term xm bind hole x denit bound hole free hole given similarli usual denit bound variabl free variabl ordinari lambda calculu write fhm set fig 1 set free bound variabl free hole sinc x binder hole creat subtl problem explain variabl calculu therefor safe assum renam bound hole congruenc ordinari lambda calculu follow regard term equival class induc bound hole renam set free variabl denot fv bound variabl denot bv given figur 1 denit correctli model eect context applic term form 1 2 bind variabl dom 2 addit set free bound variabl need distinguish three class variabl let term contain hole x variabl cod call free variabl candid behav similarli free variabl abstract variabl set dom call interfac variabl candid sourc interfac variabl see last one consid term contain 1 2 variabl cod call export variabl use match variabl export context 1 bound variabl 2 formal denit set fv cm free variabl candid set iv cm interfac variabl candid given figur 2 denit set ev export variabl given figur 3 fig 2 set free variabl candid interfac variabl candid fig 3 set export variabl dene set pfv potenti free variabl posit dene type system calculu sinc term may contain free hole well free variabl type depend type variabl also type free hole hole type determin tripl consist type term lled type assign describ set interfac variabl type variabl renam use keep track correspond bound variabl interfac variabl describ set abstract variabl describ set free variabl candid abstract tripl obtain abstract x whose denit given oper extend type assign follow hole type assign rang nite function assign hole tripl describ type hole call variabl dom interfac variabl write clo hole type assign domg write hole type assign g type system calculu dene proof system deriv type form indic term type variabl type assign hole type assign set type rule given figur 4 explan order rule hole sinc x surround moment associ type assign hole type assign empti set variabl candid x speci abstract rule ab rule ab lambda abstract x discharg x type hypothesi term also extend set interfac variabl hole correspond x 0 later eect repres oper closfx g extend appear rule form term 1 fx 0x 1 x 0 xng 2 x 2 becom bound set interfac variabl hole 2 extend properti model discharg x type judgment 2 abstract 2 rule similar one closur ie term associ explicit substitut calculu 1 figur 5 show exampl type deriv ab app dom fx 0 fig 4 type system fig 5 exampl type deriv calculu free hole occur linearli welltyp term multipl occurr hole allow could dierent interfac variabl would consider complic conceptu understand context well type system linear condit ensur rule hole condit impli notat 1 2 rule app properti rule ad redund hypothesi follow lemma easili shown induct type deriv dom moreov free hole appear exactli follow standard properti also hold type system easili shown induct type deriv lemma lemma lemma 7 x fx 0 yng occur fz ng fx 0 fy 0 fy 0 0 obtain substitut x fx 0 yng wng 4 reduct system dene reduct relat need dene substitut holel oper ordinari lambda calculu substitut dene modulo congruenc allow us simpli assum unwant variabl captur happen calculu sinc yet obtain congruenc need rst dene substitut oper syntact term equival class write fm 0 xgm term obtain substitut 0 free occurr x follow lemma show substitut preserv type strong variabl hygien condit lemma proof defer appendix standard denit sub stitut follow composit lemma explain earlier holel involv applic variabl renam associ hole term lled dene holel extend variabl renam function term follow follow renam lemma whose proof defer appendix holel dene combin variabl renam substitut write 0 x term obtain syntact substitut term 0 x variabl renam associ x denit obtain simpli extend follow claus accord structur denit properti type easili seen follow lemma show holel preserv type lemma proof defer appendix follow composit lemma holel iv cx denot domain variabl renam shoulder hole x lemma 12 proof dom 1 pfv mndom 2 mthe notion congruenc calculu dene congruenc relat set well type term gener follow two axiom yng fy 1 x 62 bv follow lemma show renam preserv type prove induct deriv use lemma 10 congruenc allow us renam bound variabl whenev necessari follow assum follow variabl convent calculu bound variabl distinct set bound variabl intersect set interfac variabl candid set potenti set export variabl variabl convent reduct axiom calculu given follow axiom restrict fhm 2 need ensur linearli restrict fhm 1 need maintain bind gener x hole 1 sinc calculu context repres term free hole hole abstract term restrict rstclass treatment context onestep reduct relat n dene set well type term well type 0 obtain appli one two reduct axiom subterm write exiv transit closur reduct follow desir result theorem 14 subject reduct app fig 6 denit parallel reduct proof direct consequ lemma 78 11 13 2 theorem 15 con uenc well type term 3 1 proof use techniqu parallel reduct due tait martinlof parallel reduct relat calculu written given figur 6 denit easili seen transit closur parallel reduct coincid reduct relat calculu prove theorem therefor sucient prove diamond properti show follow takahashi 15 prove follow stronger properti lemma 16 well type term exist term lemma denot term obtain parallel reduc possibl redex whose denit given figur 7 proof lemma 16 induct deriv use follow lemma 1 lambda abstract 1 hole abstract fig 7 denit lemma term mm 0 fx proof proceed induct deriv 0 show case betr andlr case betr induct hypothesi therefor rulebetr 1 rest case lemma 9 case lred induct hypothesi therefor rulelr assum x 62 dom hygien condit lemma proof proceed induct deriv 0 show crucial case lred case lred induct hypothesi 2 x rule lred sinc fx x 0 gbv therefor fx 0 xgm 0 term mm 0 n proof proceed induct deriv 0 show case hole lred repeat applic lemma 18 case lred 6 x suppos induct hypothesi 1 therefor rulelr rest subcas 0 induct hypothesi therefor rulelr therefor lemma 12 complet proof theorem 15 conclus develop type calculu context calculu context lambda term share set variabl freeli mix far typecheck allow us treat context truli rstclass valu howev straightforward mixtur reduct llreduct result inconsist system solv problem develop type system precis speci variablecaptur natur context result type calculu enjoy subject reduct properti churchross properti believ type context calculu present serv type theoret basi develop program languag advanc featur manipul open term number interest topic merit investig brie discuss integr explicit substitut calculu contract restrict redex contain free hole restrict rstclass treatment context remov restrict make reduct system slightli gener note earlier one reason restrict contract redex contain free hole bind hole lost one way solv problem would integr calculu calculu abadi et al 1 gener variabl renam explicit substitut dowek et al 3 consid calculu contain hole graft roughli correspond holel develop techniqu mingl captureavoid substitut graft encod calculu explicit substitut use de bruijn notat although calculu contain term constructor context applic therefor techniqu directli applic calculu believ possibl extend techniqu calculu translat machineri develop calculu de bruijn notat howev translat would signicantli decreas exibl access export variabl name also note notion de bruijn index presuppos equival term therefor dene context calculu use de bruijn notat requir mechan someth similar obtain equival develop paper program languag context motiv provid basi develop program languag featur rstclass context context calculu work articl guarante type languag rstclass context order develop actual program languag howev need develop realist evalu strategi calculu preliminari investig show usual callbyvalu evalu strategi use closur extend calculu challeng topic develop polymorph type system type infer algorithm calculu enabl us develop mlstyle program languag featur context advoc one crucial issu exibl treatment context type current denit constructor fx1x 0x nx 0 n g annot variabl renam reduc exibl calculu better approach would rene type system 0 context type use whenev context type one author recent develop mlstyle languag rst class context 5 mlstyle polymorph type system callbyvalu oper semant type infer algorithm given relationship formulaastyp notion intuit clear context repres term calculu construct mean import question character intuit formal sens curryhoward isomorph 7 would lead us new form proof normal process correspond llreduct sinc context calculu church rosser possibl develop proof system conserv convent intuitionist logic support proof normal process correspond llreduct author recent notic intrigu similar proof system type context calculu joshi kulick partial proof manipul system 8 use repres linguist inform anoth relev system herbelin lambda calculu isomorph variant sequent calculu proof certain sequent interpret applic context 6 result suggest interest connect context calculu proof system acknowledg author thank pierreloui curien laurent dami yasuhiko minamid didier remi masahiko sato anonym refere care read draft paper numer use comment second author also thank shinnder lee dan friedman insight discuss context r explicit substitut lambdacalculu dynam bind feel java lambdacalculu structur isomorph sequent calculu structur formulaeastyp notion construct partial proof tree build block categor grammar context rewrit enrich lambda calculu context toward theori increment program construct fulli abstract model type lcf consid program languag explicit environ parallel reduct theori bind structur applic rewrit con uent equat reason link firstclass primit modul program modula2 tr program modula2 3rd correct ed theori bind structur applic rewrit parallel reduct myampersandlgrcalculu enrich lambda calculu context lambdacalculu dynam bind definit standard ml feel java explicit environ firstclass context ml lambdacalculu structur isomorph gentzenstyl sequent calculu structur context rewrit higherord unif via explicit substitut ctr brigitt pientka function program higherord abstract syntax explicit substitut electron note theoret comput scienc entc v174 n7 p4160 june 2007 roger keay andri rakotoniraini contextori program proceed 3rd acm intern workshop data engin wireless mobil access septemb 1919 2003 san diego ca usa yosihiro yuse atsushi igarashi modal type system multilevel gener extens persist code proceed 8th acm sigplan symposium principl practic declar program juli 1012 2006 venic itali christian urban andrew pitt murdoch j gabbay nomin unif theoret comput scienc v323 n13 p473497 14 septemb 2004 murdoch j gabbay new calculu context proceed 7th acm sigplan intern confer principl practic declar program p94105 juli 1113 2005 lisbon portug makoto hamana term rewrit variabl bind initi algebra approach proceed 5th acm sigplan intern confer principl practic declarit program p148159 august 2729 2003 uppsala sweden steven e ganz amr sabri walid taha macro multistag comput typesaf gener bind macro macroml acm sigplan notic v36 n10 octob 2001 gavin bierman michael hick peter sewel gareth stoyl keith wansbrough dynam rebind marshal updat destructtim acm sigplan notic v38 n9 p99110 septemb makoto hamana initi algebra approach term rewrit system variabl binder higherord symbol comput v19 n23 p231262 septemb 2006