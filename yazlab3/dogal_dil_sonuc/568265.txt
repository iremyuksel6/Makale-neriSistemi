primit authent process algebra extend pgrcalculu spicalculu two primit guarante authent enabl us abstract variou implementationsspecif authent obtain ideal protocol secur construct main underli idea origin propos focardi proc sixth italian conf theoret comput scienc novemb 1998 entiti authent use locat process order check send messag authent parti origin messag messag authent theori local name develop bodei et al theoret comput sci 2532 2001 155 pgrcalculu give us almost free partner authent messag authent primit b introduct authent one main issu secur differ purpos depend specif applic consid exampl entiti authent relat verif entiti claim ident 18 messag authent make possibl receiv messag ascertain origin 30 recent year formal differ aspect authent see eg 3 7 13 16 17 22 29 formal crucial proof authent properti sometim automat see eg 12 15 20 21 25 typic approach present literatur follow first protocol specifi certain formal model earlier version section 79 appear 8 work partial support murst progetto tosca progetto certificazion automatica di programmi mediant interpretazion astratta protocol shown enjoy desir properti regardless oper environ unreli even harbour hostil intrud use basic calculi model concurr mobil agent give certain kind semant offer builtin mechan guarante authent main contribut paper mechan enabl us abstract variou implementationsspecif authent obtain ideal protocol secur construct protocol rather specif seen refer prove correct real protocol essenc concurr mobil comput studi pure form use calculu 24 foundat calculu base notion name system specifi express call process obtain combin via oper parallel composit nondeterminist choic declar basic action send receiv name process along channel name repres valu messag also channel sinc process exchang name communica tion interconnect structur network vari dynam recent abadi gordon 3 defin spicalculu enrich calculu primit encrypt decrypt result calculu particularli suit secur issu among authent 6 calculu equip structur oper semant endow sequenti process p whole system local environ ie p local space name local name manag gener fresh name whenev necessari basic ingredi propos notion rel address process p respect anoth process q repres path p q abstract view network defin syntax calculu note rel address avail user calculu use abstract machin calculu defin semant propos use idea underli propos studi authent calculu spicalculu matter fact kind semant provid us two builtin authent primit key point p use address rel q uniqu reach subterm whole system repres q consequ rel address may use authent partner commun authent origin messag sake present first introduc primit partner authent calculu one messag authent spicalculu easili combin eg introduc first mechan spicalculu kind authent enforc partner authent variat semant defin 6 give us runtim mechan guarante princip engag entir run session partner play role essenti bind sensit input output commun rel address ie process p accept commun certain channel say c rel address partner equal apriori fix address loc order achiev index channel rel address obtain input action form c loc x output action form loc 0 hmi send messag semant check address sender respect receiv inde loc particular assum p explicitli wait messag process reachabl follow loc ie p perform input action c loc x possibl hostil process e rel address respect p differ loc success commun p c moreov e sniff messag sent p output action loc 0 hmi address e rel p differ loc 0 locat io primit enabl process control partner exampl defin calculu syntax protocol guarante partner authent construct put parallel follow process loc p repres address p rel q chmi stand send along c everi possibl process channel c index rel address formal empti one c loc p x input action locat loc p input match output chmi execut process reachabl q rel address loc p result commun effect bind x within residu q yield q replac x consid p q also intrud e parallel p j q j e effect guarante q commun c perform p thu q assur messag inde receiv p note need c channel privat p q although paper focu authent primit interest note locat output also guarante form secreci exampl consid follow protocol p use locat output loc q address q rel p consid p j q j e p also guarante commun c perform q ie e intercept thu remain secret channel c need privat p q separ model authent secreci public channel mechan thu concret use privat channel commun everi protocol legitim process may play differ role sender server receiv etc usual process recogn role partner play seldom know partner rel address shall also index channel variabl instanti rel address whenev process p play instanc role sender initi commun first time anoth process role eg server use channel c semant rule take care instanti address p rel commun roughli implement sort anonym commun note process could also hostil process pretend server howev point p keep commun role entir session use rel address sketch mechan guarante princip commun partner role entir session also circumv problem aris mix session particular due replay attack usual protocol use challengerespons mechan base eg nonc typic number use whose fresh protect replay attack framework fresh longer need distinguish commun one session commun anoth messag authent semant 6 extens spicalculu studi section 7 see also 5 directli allow defin anoth authent mechan provid us builtin primit enabl receiv messag ascertain origin ie process creat fact address messag rel process p uniqu identifi origin even messag malici intercept forward inde guarante integr messag receiv get origin made compound messag receiv addit ascertain origin compon write primit authent messag p process 1 intuit execut process q start check succe happen rel address p respect q coincid word q gener note check done interpret calculu ie semant rule user commun protocol guarante messag authent construct easi defin use plain handshak commun calculu spicalculu primit sketch suppos process p send messag simplic consid name along public channel c spicalculu syntax follow form oper declar fresh name differ other whole system put p q also intrud e parallel p j q j e effect guarante residu q inde q 0 mx note q guarante receiv messag directli p partner authent matter fact intrud might well intercept messag origin p forward q legal check origin p see e modifi part without chang rel address rel address manipul semant also case need c channel privat p q solut assum implement commun primit reliabl mechan control manag rel address real case possibl eg network manag system filter everi access user network happen lan virtual privat network may case mani situat howev rel address built store actual address process select secur part messag header cf ipsec 31 yet solut may help check correct differ implement eg base cryptographi briefli discuss conclus content paper section 2 survey calculu section 3 recal rel address section 4 prove version calculu 6 section 5 devot partner authent section 6 survey spicalculu section 7 enrich rel address mechan section 8 9 messag authent primit 2 calculu section briefli recal monad calculu 24 model concurr commun process base notion name present slightli differ usual one make easier introduc later spicalculu main differ standard present reli introduct new syntact categori term name variabl distinguish definit 21 syntax term denot denot built accord syntax 1 actual messag p see formal develop detail prefix mp restrict match replic may either mx input mhni output hereaft trail 0 omit often write denot tupl object instanc vector actual feel free consid oper set notat extend componentwis eg n stand n 1 final mean restrict name intuit 0 repres null process noth prefix first atom action process p perform execut process p behav like p input prefix mx bind name x prefix process follow name n receiv along link name free occurr x prefix process p substitut output prefix mhni bind name n sent along summat denot nondeterminist choic process oper j describ parallel composit process compon p 1 jp 2 may act independ also output action p 1 resp p 2 output port may synchron input action p valu sent p 1 replac relev occurr placehold x p 2 oper act static declar ie binder name process p prefix word uniqu name p differ extern name agent mp behav p except action port prohibit howev commun along link compon within p allow match ifthen oper process p activ final process p behav infinit mani copi p run parallel write fnm fnp set name free term process p respect fvm fvp set variabl free term process p respect close term process term process without free variabl 21 semant semant calculu consid late semant base reduct relat commit relat structur congruenc rule also need commit relat depend abstract concret construct abstract form xp x bind x p concret form mhmip term p process name bound p agent b abstract concret process f abstract xp c concret mhmiq f interact fc cf mp mx j q congruenc structur congruenc process defin standard way except treatment parallel composit assum neither commut associ defin least congruenc satisfi p q equival p q commut monoid mhmir j q mhmiq follow never distinguish congruent term reduct relat reduct relat least relat close process transit close context satisfi follow axiom red repl p p j p red match commit relat action name repres input conam repres output distinguish silent action note action record channel input output occur commit relat written p p close process action close agent defin rule tab 1 3 rel address composit recal idea 6 serv basi authent mechan go introduc consid binari parallel composit main oper calculu neither associ commut build abstract syntax tree process binari tree call tree sequenti process follow given process p node tree correspond occurr parallel oper p leav sequenti compon p roughli process whose toplevel oper prefix summat replic tree process depict fig 1 comm comm comm sum 1 comm sum 2 comm par 1 comm par 2 comm inter 1 comm inter 2 comm re comm red comm struct tabl 1 commit relat figur 1 tree sequenti process p assum left resp right branch tree sequenti process denot left resp right compon parallel composit label arc tag jj 0 resp jj 1 therefor sequenti compon process uniqu identifi string fjj string correspond path root toplevel j whole process leaf intuit address sequenti compon rel root binari tree consid two differ sequenti process say g r tree call path address process g rel process r rel address decompos two part accord minim common predecessor p g r tree rel address string written 0 made jj 0 jj 1 repres path p r 2 0 path p g let g r respect process p 3 p 1 fig 1 address p 3 rel p 1 jj 0 jj 1 jj 1 jj 1 jj 0 read path upward p 1 root revers downward p 3 speak rel address point back r g rel address compos order obtain new rel address instanc composit rel address jj 1 jj 0 jj fig 1 rel address p 3 wrt rel address jj 0 jj 1 jj 0 p 3 wrt p 2 recal formal definit rel address defin composit intuit full definit statement properti 6 definit 31 rel address empti string let sum modulo 2 set rel address rang l sometim omit rel address eg write n n rel address l compat l written l said use rel address encod path pair node binari tree process like one fig 1 note condit jj 0 0 explicit two compon rel address describ two distinct path go node binari tree also l refer path exchang sourc target 2 technic reason take path p r instead natur path r p address composit partial oper defin rel address inde com pose make sure alway case appli fig 2 depict case happen definit 32 address composit address composit defin follow three exhaust case 1 2 3 immedi see neutral element ie l invers element ie invers l l 1 associ ie l l g r 1 2 3 figur 2 three possibl rel placement three process g r result composit rel address wrt r g wrt repres solid arrow 4 prove semant rel address induct built deduc transit prove semant use 9 section recal 10 prove transit system calculu label transit encod portion deduct tree arrow prove transit system label action string jj use singl subprocess actual perform rule prove commit tab 2 essenti standard transit system except involv parallel oper rule comm par 1 respect comm par 2 add label conclus tag jj 0 respect jj 1 regist left respect right compon parallel composit move rule defin congruenc reduct relat inde recov standard semant calculu need eras occurr label transit note inform ad label use induct build rel address inde tag jj suffici recov parallel structur process p provid encod tree process p instanc suppos process p perform transit jj 0 know action perform sequenti process form p parallel process q inde whole system form p jq gener process r perform transit path tree process permit reach subprocess perform action technic indic subprocess r p induct select follow oper comm comm comm sum 1 comm sum 2 comm par 1 comm par 2 comm inter 1 comm inter 2 comm re comm red comm struct tabl 2 prove commit relat definit 41 local oper defin process induct follow 1 2 mp 3 4 definit help end section 5 8 back fig 1 p 3 commun p 1 whole process comput step subprocess p 3 perform output sysjj 1 jj 1 jj 0 subprocess p 1 perform input sysjj 0 jj 1 put togeth singl path obtain rel address 5 partner authent introduc first authent mechan runtim guarante princip engag entir run session partner play role heavili exploit prove semant report previou section essenti bind sensit input output commun rel address precis channel may rel address index assum form c l semant ensur p commun q c l rel address p wrt q inde l q wrt p l 1 notabl even anoth process r 6 q possess channel c l r use commun p consequ hostil process never interfer p q commun even eavesdrop exchang messag use locat channel process may control partner often process p will commun sever process usual one channel shall also index channel variabl instanti suppos process p play instanc role sender initi want commun process eg server p know rel address say l final involv channel c first commun p instanti within p l recal prove oper semant inde comput l symmetr use channel c differ variabl use c 0 sens case anonym commun note howev may well use alreadi locat channel c l 0 commun occur l point p keep commun role entir session use known rel address thu extend name occur process index locat defin either rel address variabl instanti rel address formal definit 51 let 3 countabl set address variabl let set locat channel usual empti locat rule defin congruenc reduct relat apart obviou substitut locat name name rule new commit relat tab 3 omit symmetr rule commun rule parallel composit prove style comm comm comm sum 1 comm par 1 comm inter l 1 l 0 l comm inter l comm inter 1 comm re comm red comm struct tabl 3 prove locat commit relat record compon left right process move arrow annot also locat io action rule locat channel involv record arrow preserv non commun rule discard commun locat use premis commun rule establish rel address one process respect fact first process receiv perform input second process sender perform complementari output action 0 rel address sender respect receiv jj 0 jj 1 0 addit jj 0 jj 1 record two process left right partner commun three differ rule symmetri everi commun two process say p q comment intuit relat three possibl situat p q may comm inter l 1 p want receiv process locat l q want send process locat l 0 commun happen rel address q wrt p p wrt q path establish commun coincid locat compat ie l side condit requir situat reflect fact p q know possibl previous establish connect session partner note l l 0 recov nonloc commun standard calculu comm inter want receiv process locat l q will send messag process send channel locat variabl 0 commun success l coincid path establish commun ie l coincid rel address inde process p want receiv commun 0 suitabl bound l 1 rel address p wrt q within q p q know l empti locat commun alway success 0 still replac rel address p wrt q comm inter 1 p q know will commun partner exchang rel address establish deduc premis intuit p perform initi synchron two variabl replac rel address q wrt p viceversa l l 0 respect variabl locat consequ locat channel c l commun becom free channel locat l lost index c becom otherwis get c occur process formal follow definit 52 let yp abstract l iq concret interact otherwis occur q symmetr cf use definit commun make easier use channel multiplex way suppos process p commit commun channel c l process q also assum send c l third parti r receiv c channel c use commun p q case locat l well commun r process suitabl instanti rule commit use particular kind substitut fjljg call select rout substitut use particular substitut fjljg call rout appli subprocess locat rout substitut take account parallel structur process updat rel address l travers tree process instanc substitut 0 p 0 jp 1 requir substitut jj 0 compon p definit 53 locat rout substitut fjljg defin induct follow 1 l otherwis 2 hmip 3 xp 4 5 7 case p definit ie rout substitut may appli p p reduc p jp amount say also consid process insid rout substitut fulli perform consequ target transit tab 3 may contain express form p fjljg order burden heavili notat shall still use p process abstract concret substitut yet perform use definit implement select substitut work subprocess whole term reachabl select rout substitut pfjljg defin induct fact channel index may also instanti guarante two partner establish connect remain stabl along whole session inde let note jj 0 jj 1 address r rel q immedi verifi q accept input c come r cours properti remain true input q along symmetr process exampl 55 illustr partner authent mechan simpl exampl first consid singl messag exchang alic bob b 0 two locat variabl messag exchang semant rule comm inter 1 instanti 0 0 b 0 respect address rel b ie jj 1 jj 0 b rel ie jj 0 jj 1 respect intuit instanti l repres secur declar ident process locat l manipul even malici parti see later locat action also give secur guarante subsequ messag exchang exampl contd consid follow protocol recal simpli written shall comment use channel occur locat 0 b 0 bob send messag alic recept note alic requir second messag come process sent sinc first messag exchang variabl instanti address b 0 rel 0 semant guarante authent second commun respect secur ident declar alic assur second messag sent process receiv first one order illustr import point add anoth process c tri commun channel process follow step sinc address c 0 rel 0 jj 0 jj 0 jj 1 6 jj 0 jj 1 either residu 0 receiv residu b 0 b 0 c 0 commun first case second case exampl channel use two differ way locat alic bob altern free b 0 c 0 exampl 59 shall see channel even use multiplex fashion two pair process interleav commun still present properti engag process along entir session next exampl consid situat channel locat use output messag usag channel also guarante sort secreci exampl 56 seen previou exampl messag mb intercept c 0 thu violat secreci consid follow protocol bob requir messag mb receiv user sent first messag case bob obtain form secreci assur mb read process identifi 0 ie process sent messag inde new process c read mb address c 00 rel b 00 jj seen locat input output correspond guarante authent secreci commun respect summar two concept follow messag exchang respect address l process obtain partner authent whenev receiv messag process reachabl l secreci whenev process reachabl l receiv messag state precis exploit def 41 need notion context two hole theorem 57 authent let proof inspect rule use deduc transit particular consid side condit rule comm inter l 1 theorem 58 secreci let proof analog previou proof next exampl illustr locat input output guarante perman hook two parti allow model multipl session quit easili exampl 59 consid follow process inde alic bob assur second messag also subsequ messag sent receiv locat channel sentreceiv user interact first messag exchang henc two user first commun perman hook togeth time third user inde abl take place b commun start session instead never commun first messag exchang model multipl session consid b unbound number instanc alic bob present differ fresh messag consid two instanc send first messag two instanc b ie two parallel session note first messag exchang partner session perman hook second messag alway sent correct parti one initi session consequ replay messag possibl among differ session also presenc malici parti 6 spicalculu syntax section briefli recal often also liter spicalculu 3 monad version 1 calculu extens calculu introduc descript analysi cryptograph protocol first differ calculu spicalculu summat oper also term structur pair mn successor term sucm encrypt last term repres ciphertext obtain encrypt key n use sharedkey cryptosystem de 27 definit 61 term process defin accord follow bnflike grammar name x variabl sucm successor share key encrypt prefix mp restrict match replic let p pair split case case case l fx p share key decrypt may either mx mhni 3 process construct calculu new one decompos term process let x p behav p process case 0 qnx stuck otherwis process case l fx p attempt decrypt l key n l form process behav p 1 x otherwis stuck structur congruenc oper semant commit exactli calculu given tabl 1 new reduct rule instead need red split let x red zero case 0 red suc case sucm red decrypt case fm n fx 7 name spicalculu handl local introduc second authent mechan need exploit idea contain 6 rel address introduc section 3 use handl name local sequenti process oper manner space name whole process partit local environ associ sequenti subprocess avoid global manag name solv two problem name declar local brandnew local environ furthermor name export local environ via commun appli reduct rule must guarante clash involv name around pure mechan way 6 sake simplic instead recal also mechan gener fresh name assum name fresh whenev need shall recal side condit keep name distinct consid two differ sequenti process say g r two syntact equal name say n suppos g send n r distinguish two differ instanc n local environ r name gener g receiv enrich address g rel r point back r local environ g slightli complex situat aris process receiv name send anoth process name must arriv new receiv address gener sender rel new receiv consid fig 1 p 1 send p 2 name gener p 3 rule tab commun use address composit determin address p 3 rel p 2 compos address messag record address p 3 wrt rel address p 1 wrt p 2 carri local semant calculu 6 monad spicalculu first introduc new set local name name prefix rel address although arbitrari term consid name variabl instanti name use case see 3 definit 71 let n set local name n set standard name oper languag concaten simplic assum possibl index rang n 0 n unless necessari syntact distinguish local term term ie term prefix rel address like prefix said recal mechan 6 gener fresh name whenev need simpli assum fresh howev requir restrict name alway local ie occur declar n technic achiev transform process p n new process obtain replac subprocess p form nq process nqfjnnjg substitut fjjg def 73 term export process say p anoth say q necessari compos rel address prefix rel address p wrt q composit perform term address composit extend address composit def 32 appli rel address local term return updat local term definit 72 term address composit defin say term export rel address 0 name n variabl natur number prefix rel address insensit address composit explain semant deal term first note oper consid compound term whole distribut address composit subterm consid encrypt term fmgk atom entiti handl new name local process encrypt say p two local term k frozen like encrypt time rel address chang encrypt messag sent net rel address updat sinc fmgk atom rel address say alway point process p made encrypt technic k frozen like process contain restrict name use encrypt way decrypt fmgk semant rule recov correct address k simpli compos actual address fmgk 0 1 frozen rel address k respect manag describ use successor pair first case term frozen sucm term n frozen mn also rout substitut def 53 extend deal term process spicalculu distribut subterm subprocess note term n variabl definit 73 spi rout substitut fjnxjg defin induct follow term 1 rfjnxjg 2 zfjnxjg z x 6 z 3 0fjnxjg 4 sucmfjnxjg 5 process 1 0fjnxjg 2 rhmip fjnxjg 3 ryp fjnxjg 4 5 7 let 8 case case mfjnxjg case mfjnxjg 9 case l fy p fjnxjg case lfjnxjg fx mfjnxjg p case lfjnxjg fx mfjnxjg pfjnxjg otherwis select rout substitut spicalculu exactli def 54 local congruenc rule structur congruenc requir chang accommod local name 1 2 3 4 note convers need bind occurr name r p 1 replac differ name p 1 properti address composit local reduct relat add follow reduct rule match replic red split let x red suc case 0 1 sucm red decrypt case 0 1 fy process decompos term involv subterm updat intuit decrypt rule decrypt messag fmgn use key exactli frozen key n appear receiv encrypt messag k n although start differ site refer key semant rule decrypt messag updat rel address compos 0 1 process p behav pfj 0 local commit relat eventu present tab 4 extend commit rule local commit relat written p p process action perform subprocess agent compon label need check side condit rule commun rule success complementari action refer name restrict rule necessari check clash action restrict name semant rule updat messag rel address sender respect receiv inde congruenc rule lift rel address restrict much need instanc appli restrict name r p 1 appear jj 0 r process similarli appli congruenc rule term p 0 appear final also interact updat rel address definit 74 let abstract concret local interact see local interact work consid f c restrict name known r p 1 duli updat jj 0 r parallel composit p 0 substitut p 1 messag appear p 1 export term address composit therefor appli rel address jj 1 jj 0 exampl consid process fig 1 suppos p 0 will send n process p 3 messag appear jj 0 jj 0 n replac rout substitut variabl x p 2 jp 3 jp 4 jj 1 jj 0 jj 0 n note arriv p 3 enrich rel address p 0 wrt p 3 8 messag authent intuit present authent primit akin match oper address match pass rel address two local term n coincid comm comm comm par 1 comm par 2 comm inter 1 comm inter 2 comm re comm red comm struct tabl 4 local commit relat intuit know process pack n say p also say come inde authent formal extens due new primit consist new case process new reduct rule definit 81 let mn two term def 61 l l 0 2 loc two rel address process defin follow reduct rule red address match lm note free name prefix empti rel address hereaft assum initi startup phase process exchang messag fix rel address obtain eg preliminari commun partner b restrict share channel startup phase inde abstract preliminari secur exchang secret inform eg long term key necessari everi cryptograph protocol see exampl next session initi step avoid use partner authent primit howev sake present combin two primit consid follow simpl exampl process b want authent messag even presenc intrud e protocol p e recal name appear assumpt analog n e show role local name play guarante construct b 0 execut messag bound x origin ie messag receiv channel c inde rel address jj 1 jj 0 jj 0 point b encod site host thu give ident process b expect receiv messag channel c order analyz behaviour protocol hostil environ consid gener intrud e power possibl examin follow two possibl messag exchang first messag repres correct exchang messag b second one attempt e send differ messag n b intrud e could actual follow form hother bad actionsi name n receiv b prefix rel address correspond respect origin fig 3 show two messag exchang particular see receiv b jj 1 jj 0 jj 0 n becom jj 0 jj 1 n immedi see first case b evolv bfjmxjg figur 3 process b detect messag jj 1 jj 0 jj 0 authent messag jj 0 jj 1 n come intrud e latter stop jj 1 jj 0 jj 0 match address everi attempt intrud introduc new messag c filter authent primit interest case aris intrud intercept forward b show mechan accept messag authent particular reconsid previou protocol analyz case differ intrud masquerad b written eb intercept forward b actual modifi would like accept messag b even forward e matter mani time messag forward address composit maintain integr ident gener detail eb receiv jj 1 jj 1 jj 0 e forward b messag compos address e rel b jj 0 jj 1 yield jj 0 appli rule 1 def 32 see messag receiv b jj 1 jj 0 jj 0 therefor accept authent note also b use jj 1 jj 1 jj 0 compon new messag 0 receiv r 0 get prefix rel address say r check 0 pack b 0 henc authent 0 even compon inde composit give address origin ie rel r end section follow properti c context one two hole respect pfj stand pfj theorem 82 address match let input c bind variabl x match suppos 1 l proof first commun variabl x occur match instanti l input bind x recal def 73 substitut term enrich go tree sequenti process sequenc step lead q 00 chang context c process p 1 possibl bind variabl mxjg reduct match perform l 00 toplevel c 00 l equal l 9 implement authent section show notion messag authent base locat help studi analys cryptograph protocol main idea observ specif authent protocol inde good implement authent primit ie cryptograph protocol strong detect name incorrect rel address authent primit recal spicalculu compound term encrypt consid local ie rel address say point process p made encrypt way decrypt fmgk semant rule recov correct address k simpli compos actual address fmgk 0 0 frozen rel address k respect show exampl correct run wide mouth frog key exchang protocol consid simplifi version analyz 3 two process b share key ka kb trust server order establish secur channel b send fresh key kab encrypt ka server server decrypt key forward b time encrypt kb b key kab send messag encrypt kab b protocol guarante b receiv messag inde origin protocol compos follow three messag messag messag 3 specif calculu local name mechan replac restrict name local counterpart ic ab hfmg kab xcase x fyg jj 1 ka c bs hfyg jj 1 kb xcase x fyg jj 0 jj 1 kb c ab zcase z frg surprisingli specif style 3 except local restrict name fig 4 show local name handl correct execut protocol p note ka kb assum differ rel address differ process recept messag 2 b decrypt receiv messag figur 4 correct execut wide mouth frog protocol mean comput case fyg jj 0 jj 1 kb c ab z case z frg b reduct rule decrypt appli jj 0 jj 1 variabl set jj 0 jj 1 result jj 1 jj 0 kab rule 3 def 32 inde correct refer key kab gener instal local environ last messag b receiv succe decrypt jj 1 jj 0 kab obtain jj 1 jj 0 address rel b equal inde authent character correct execut wellknown attack take place two session protocol basic occur intrud replay messag first session second one follow formal 3 attack analyz note singl session illustr problem aris instead even intrud intercept messag sent forward b inde messag receiv right one seen one alter neither rel address encrypt messag fmgkab show attack immedi detect observ compar local name eg use authent primit sake readabl call 0 b 0 two instanc b second session 0 tri send messag 0 b 0 use session key k 0 messag eavesdrop messag 2i messag 3 eavesdrop messag 3i intrud eavesdrop first session replay messag 2 3 second session messag result b 0 receiv copi instead one 0 order model two parallel session protocol consid follow specif address local name ka kb suitabl updat process b note gener kab fresh name j origin two differ messag say 0 two differ key say kab k 0 ab also modifi serv session sake simplic defin server abl handl two sequenti xcase x fyg jj 1 ka c bs hfyg jj 1 kb c zcase z fwg jj 1 ka c bs hfwg jj 1 kb specifi intrud name c ab c c bs free thu known process p 0 unlik ka kb bound observ attack sequenc fig 5 particular process b 0 decrypt messag messag origin 0 inde address 0 rel b 0 jj 1 jj 1 jj 0 jj 1 attack detect want show protocol done secur construct authent primit idea last messag accept origin correct initi order need least messag initi whose address compar last messag protocol trick add startup messag secur hook one initi one respond send fresh messag restrict channel result specif follow modif bold font restrict name local sake readabl xcase x fyg ka c bs hfyg kb c zcase z fwgka c bs hfwgkb xcase x fyg kb c ab zcase z frg r p 00 two b 00 process receiv two 00 two differ startup messag two differ ad dress thu longer possibl intrud carri replay attack fact cheat b 00 abl stop deliv messag b compar trace protocol correct construct trace previou one easi see equival potenti attack thu detect k k fmg k ab ab g ab g figur 5 attack wide mouth frog protocol jj k stand sequenc k tag jj conclus futur work defin two primit guarante partner messag authent public channel base semant featur deriv form prove transit system 9 partner authent base semant calculu name channel index expect rel address commun parti particular time two process tri commun common channel rel address check index channel use commun enabl check pass ie rel address compat index moreov channel use multiplex fashion two process say p q go exchang messag channel c interleav activ anoth pair process say r use c well never case messag p read r come unless inde intend behaviour p r p messag authent base semant spicalculu messag local via rel address l process p pack authent primit compar rel address l address l 0 process q rel receiv check succe authent messag l l 0 express inde process q pack two primit sens orthogon oper independ featur calculi con sider cours one may combin eg carri spicalculu notion locat channel introduc calculu notion authent guarante construct note partner authent primit transform public channel privat one deed partner authent clearli separ concept authent secreci importantli two process commun public channel hook imposs third process interfer commun notion messag authent need privat channel well messag may consid authent even intercept eavesdrop ie mechan guarante secreci gener pack claim entiti thu primit correspond neither privat channel basic calculu cryptograph one spi calculu appear strong messag authent alon guarante also secreci idea exploit locat analysi authent come 14 howev entiti bound physic address net approach relat abadifournetgonthi 2 princip explicit fix name see also joincalculu 19 seal 33 relax rigid fix map site introduc sort identifi site repres rel address matter fact actual placement process site recov compos local name akin environ function sequenti languag alloc tabl similar store actual 14 model wider notion authent plan investig next discuss paper primit may implement directli inde one lowlevel highli reliabl mechan manag local name unrealist mani case possibl instanc lan virtual privat network step could encrypt rel address within header messag style ipsec 31 nevertheless propos help reason authent secur abstract point view inde main aim approach present develop idea briefli describ follow first could possibl verifi correct cryptograph protocol show messag implement partner authent need exampl typic challengerespons techniqu requir send nonc random challeng expect back encrypt secret share key challengerespons prove implement locat input action suitabl condi tion proof implement satisfi specif often hard privat channel use model authent channel inde privat channel often seem far cryptograph implement propos help need privat channel moreov could verifi cryptographybas protocol ensur messag authent check version contain also primit origin formul exhibit behaviour check specif implement much style congruencebas techniqu typic process calculi see eg 3 final feel confid propos scale languag concurr reactiv system like facil 32 pict 28 cml 26 esterel 4 built top core process calculu like one use also oper semant easili turn prove one success case facil 11 esterel 23 show cours great deal work still necessari make propos applic real case r secur implement channel abstract calculu cryptograph protocol spi calculu synchron program languag esterel mathemat semant secur issu process calculi name calculu agent handl local logic authent authent via local name enhanc oper semant tool describ analys concurr system non interleav semant mobil process causal debug mobil agent compil analys cryptograph protocol use noninterfer strand space secur protocol cor rect use entiti locat analysi authent protocol use non interfer analysi secur protocol non interfer analysi cryptograph proto col uniform approach definit secur properti intern organ standard three system cryptograph protocol analysi break fix needhamschroed publickey protocol use fdr hierarchi authent specif appli techniqu asynchron concurr synchron languag calculu mobil process ii autom analysi cryptograph protocol use mur cml process algebra data encrypt standard de pict program languag base picalculu verifi authent protocol csp appli cryptographi rfc 2411 ip secur document roadmap facil antigua releas program guid seal framework secur mobil comput tr logic authent calculu mobil process cml process algebra reflex cham joincalculu verifi authent protocol csp calculu cryptograph protocol noninterleav semant mobil process secreci type secur protocol appli techniqu asynchron concurr synchron languag pict name fo myampersandpgrcalculu agent handl local compil analyz cryptograph protocol use noninterfer enhanc oper semant seal non interfer analysi cryptograph protocol break fix needhamschroed publickey protocol use fdr esterel synchron program languag mathemat semant uniform approach definit secur properti secur implement channel abstract hierarchi authent specif authent via local name autom analysi cryptograph protocol use murspl phi ctr c bodei p degano r focardi c priami authent primit secur protocol specif futur gener comput system v21 n5 p645653 may 2005 chiara bodei mikael buchholtz pierpaolo degano flem nielson hann rii nielson static valid secur protocol journal comput secur v13 n3 p347390 may 2005