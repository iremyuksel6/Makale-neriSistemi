languag specifi recurs travers object structur present domainspecif languag specifi recurs travers object structur use visitor pattern travers tradit specifi iter forc programm adopt imper style hardcod program visitor propos allow number problem best approach recurs mean tackl visitor pattern retain benefit separ travers specif b introduct visitor pattern ghjv95 allow programm write behavior travers object structur without embed assumpt structur comput code result separ navig code code perform comput version visitor pattern exact sequenc part object visit hardcod either object visitor refer sequenc object visit navig code produc travers visitor ideal object structur class graph applic object structur contain concret object class graph may contain contain abstract class interfac sinc code implement travers necessarili detail encod class graph bind visitor navig code togeth harm maintain reus altern hardcod separ navig visitor behavior visitor work partial support defens advanc project agenc darpa rome laboratori agreement number f306029620239 view conclus herein author interpret necessarili repres offici polici endors either express impli defens advanc research project agenc rome laboratori us govern research also support part nation scienc foundat grant ccr9629801 ccr9804115 appear proceed oopsla 99 whole iter ghjv95 strategi lie96 suggest purpos present object structur sequenc visit event therebi linear travers enforc imper style program visitor propos domain specif languag express recurs travers object structur linear object structur travers languag allow recurs comput express use visitor pattern rang problem succinctli solv synthes result subresult make valuepass explicit specif languag abl natur express recurs algorithm design allow object use mani differ travers travers use mani differ visitor factor behavior class graph travers visitor make program robust evolut class graph chang class graph like requir local mainten travers definit often visitor need chang featur approach 1 allow programm specifi order part object travers 2 allow current node visit sever time cours travers 3 allow travers control behavior dynam 4 provid conveni mechan valu return visit 5 provid conveni mechan iter travers collect object 6 allow travers name reus travers specif translat java class thu first class valu store variabl pass argument relat work gamma et al ghjv95 present visitor pattern propos separ behavior navig former put separ compil class latter put class diagram intend use visitor pattern creat softwar robust addit new behavior chang class structur mani case navig aspect trivial alway cover entir object graph lieberherr lie92 lie96 argu complet travers object graph often need suggest visitor pattern modifi navig aspect packag concis specif gather inform one place behavior travers visitor may conveni analyz without hunt program lieberherr propos specifi navig aspect use navig languag leav unimport detail unspecifi detail infer system compil time inform class diagram benefit lieberherr underspecifi navig languag mani chang class diagram mean infer system unchang goal none program requir modif lieberherr call system adapt program pitfal approach surpris path surpris path occur chang class diagram lead system infer path intend surpris path alter intend semant program virtu surpris difficult locat importantli leav unimport detail unspecifi navig aspect languag poor match recurs program recurs program seem requir explicit stage result propag comput obvious conflict desir leav detail unspecifi propos maintain separ navig behavior sacrific degre compact local robust mean chang program induc chang class definit local easili implement aim least surpris wherea adapt program aim least modif current implement adapt program requir class diagram recompil modif navig aspect lo97 organ also allow navig aspect ad without recompil class diagram 3 travers specif 31 exampl motiv discuss start simpl program written java exampl choos sum node tree class diagram exampl shown fig 31 java program visitor style look like abstract class tree abstract void visitallleavestreevisitor tv class node extend tree tree leftright void visitallleavestreevisitor tv rightvisitallleavestv class leaf extend tree int val void visitallleavestreevisitor tv top int tree right left tree val figur 1 class diagram simpl tree travers travers traversalnam traversalentri traversalentri traversalentri action travers partnam figur 2 skeleton travers specif gramma interfac treevisitor void visitleafleaf l class sumvisitor implement treevisitor int void visitleafleaf l acc lval class top tree tree void visitallleavestreevisitor tv int sum return vacc come section show differ version program 32 syntax wish succinctli describ travers object graph specifi list action taken enter object specifi class first ap proxim travers specif 1 grammar shown figur 2 explain semant grammar transcrib sum exampl style travers use term travers specif refer slightli differ concept top travers tree node travers left travers right leaf visit visitleaf abstract class tree class node extend tree tree left right class leaf extend tree int val class sumvisitor implement visitallleavesvisitor int void visitleafleaf l acc lval class top tree tree int sum return vacc code reorgan navig specifi travers visitallleav organ immedi improv plain java code code part behavior group togeth travers start invok static method travers class visitallleav gener system travers specif pass object travers visitor v travers travers method visitor pass first argument travers travers invok implicit travers proce inspect current object determin class list traversalentri scan find specif entri object entri found correspond list action execut order occurr action travers p invok travers recurs object op action visit v invok method v visitor current object argument gener may sever applic entri object superclass may entri call next specif entri super direct provid thu overrid extend behavior support object travers entri found action perform void result return discrimin precis entri object could done use java introspect facil state gener java code travers specif instead use inherit inform class graph gener effici java code later section use inform class graph provid type variabl travers 33 chang class diagram motiv behind suggest make recurs program less pain automat gener lot code minim function descript tree tree leaf top int val onenod twonod twonod oneor left right figur 3 class diagram complic set tree also make code robust chang class diagram illustr chang need let us modifi class diagram run exampl slightli node one child well two weve alreadi seen see figur 3 keep name meaning node becom two node new travers specif becom travers top travers tree twonod travers left travers right onenod travers leaf visit visitleaf apart global renam node twonod chang necessari obvious modif class diagram simpl modif requir often similar make claim look back program see travers specif make local assumpt class diagram specif travers assum given class abl access part traver salentri class wish travers argu correspond modif need plain java code almost painless chang travers specif java code ever requir chang separ part program travers specif organ code chang local travers specif 34 pass paramet return valu import abl pass argument return result travers visitor extend travers specif grammar figur 4 grammar visitor travers take argument return result result either bound travers variabl oppos instanc variabl current object subsequ use return caller also special variabl host bound host object travers grammar also allow type option spec ifi perform type infer mainli conveni avoid repeat type declar travers travers traversalnam traversalentri classnam return type action actionrh travers partnam argument paramet paramet paramet paramet argument argument argument argument variablenam figur 4 complet grammar deal collect instanc requir programm specifi type collect element section 36 cover collect greater detail let us rework exampl use new fea ture accumul kept travers rather visitor travers visitallleavesint top travers treeacc travers rightlacc onenod travers onlyacc leaf visit visitleafacc abstract class tree class node extend tree tree left right class leaf extend tree int val class sumvisitor implement visitallleavesvisitor void visitleafleaf l int sumsofar return class top tree tree int sum return visitallleavestraversethisnew visitor exampl intern state accumul pass return valueparamet 2 notic also pass one argument travers method travers take argument thread accumul mimic origin exampl doesnt illustr recurs style prefer would eleg comput proceed natur recurs fashion although gener visitor still state travers top travers tree node int lacc travers left int travers right visit combinelaccracc leaf visit visitleaf abstract class tree class node extend tree tree left right class leaf extend tree int val class sumvisitor implement visitallleavesvisitor void visitleafleaf l return lval int combinenod nint left int right return leftright class top tree tree int sum return visitallleavestraversethisnew sumvisitor program look much like function programm would expect result induct comput result subtre travers respons pass data visitor respons comput data two subresult combin call method visitor travers nonpart sometim desir travers object connect object structur travers exampl would travers object result previou comput one way achiev make visitor method invok travers object ar gument approach drawback hardcod name travers visitor instead extend travers direct travers travers variabl addit instanc variabl host object travers variabl shadow instanc variabl host reflect ad capabl nontermin partnam grammar chang part orvarnam languag pars unchang give exampl facil may use next section 36 special case collect collect gener use make sens deal special propos ad oper call foreach travers specif languag grammar shown figur 5 goal foreach emul fold reduct fh88 collect sinc target languag java use iter construct offer class librari enumer requir collect class method call return enumer strategi use method provid enumer access element collect perform travers element thu access combin result use method name pass foreach actionrh travers partorvarnam argument method methodnam argument foreach partorvarnam methodnam argument argument figur 5 reduc collect vector top complex num figur vector complex number collect travers partorvarnam current host indirect necessari might sever collect vector class graph need gener differ travers code depend type element contain foreach call methodnam method visitor result element collect pass two argument result travers element accumul result first argument ac cumul initi valu remain argument parenthes pass travers element result travers collect accumul result illustr let us analyz use foreach find maximum magnitud list complex number let class diagram look like figur 6 top part call num lead collect complex travers collect might write travers top doubl foreach num calcmax maxinit complex return doubl visit magnitud class maxvisitor implement foldcomplexvisitor doubl getinitvector v return 00 doubl calcmaxdoubl magn doubl maxsofar return mathmaxmagnmaxsofar doubl magnitudecomplex comp return class top vector num doubl findmax return foldcomplextraversethisnew maxvisitor foreach num calcmax maxinit invok travers current object instanc top collect travers num instanc vari abl enumer creat invok method element collect travers iter element enumer use code function equival follow snippet doubl foreach maxvisitor v enumer enum doubl initacc doubl complex doubl return acc three issu worth note 1 mention use type inform class diagram determin travers collect complex allow us perform proper cast result nextel 2 howev class diagram contain enough inform us determin type need know order produc snippet code one type type travers result assert doubl must type infer determin type discuss section 52 particular case fact maxinit doubl enough also need know result travers complex doubl code explicitli annot entri complex case might infer system 3 retriev object collect cast type know proceed travers case dont want travers entir collec tion instead subset thereof section 35 introduc concept travers variabl travers use facil creat suitabl collect travers exampl wish find maximum magnitud everi complex valu might written travers like travers top doubl foreach mynum calcmax maxinit complex return doubl visit magnitud ad follow method visitor vector makemynumstop vector new vector enumer resaddelementenextel ehasmoreel nextel return re makemynum method make collect contain everi element origin travers use foreach 37 control travers would like travers abl make decis runtim proceed exampl might search item binari tree depend valu store node need search left subtre right found valu travers done end introduc thunk direct produc thunk list action grammar figur 8 thunk refer variabl visibl declar chang valu thunk java object one method invok typic pass method also invok travers invok direct return type determin bodi thunk sinc thunk return type basi class name thunk int thunk return int invok illustr figur 7 show thunk might use binari search tree element tree either node contain two subtre leaf contain item node creat two thunk one search either subtre pass visitor visitor determin subtre search invok proper thunk use thunk wide varieti quit complex behavior program addit search binari tree provid conveni way travers cyclic object situat desir repeatedli perform travers exampl iter state oper fixpoint thunk may invok sever time row allow comput express without creat separ travers iter comput instead invok thunk immedi visitor decid store tabl invok turn result need later time small extens implement would introduc memoiz thunk cach result subsequ invoc would return cach result instead reperform travers 38 call travers abl call travers use enabl us split common abstract unit reus sever travers translat extend straightforward way travers gener interfac visitor use travers must implement visitor use sever travers visitor need implement interfac anoth use multipl travers encod state travers depend travers activ comput certain state travers mutual recurs must specifi block must type check group figur 8 show final version grammar one travers may call anoth travers specifi part use othertrav direct recurs call call travers termin call travers resum travers travers travers travers travers traversalnam traversalentri classnam return type action actionrh travers partorvarnam argument partorvarnam argument foreach partorvarnam methodnam argument argument paramet paramet paramet paramet argument argument argument argument variablenam figur 8 complet grammar person marri vector ling marri sib sibl element spous figur 9 inlaw exampl inlaw problem wer96 illustr weak visitor pattern object play differ role depend context appear give rolespecif behavior becom tediou one workaround keep state variabl visitor updat travers reflect behavior visitor approach forc behavior visitor awar navig detail contrari philosophi visitor pattern figur 9 show class diagram inlaw problem person marri notmarrri zero sibl inlaw spous sibl sibl spous start person wish appli oper inlaw visit exampl inlaw person visitor pattern difficulti express problem class person play role self sibl spous inlaw behavior visitor depend role class int tree right left tree top item els return leftinvok top travers treegoal travers rightgoal visit choosego gol gor travers itemgo travers binsearchint travers leftgoal visit atleafgo getitem class searchvisitor implement binsearchvisitor goal nkey return rightinvok item atleafleaf l int goal thunkitem get goal nkey return getinvok els return null figur 7 code search binari tree borrow solut similar problem function program solv problem encod state visitor travers name instead one travers four first travers start person whose inlaw seek travers person othertrav mysibl sibl marri visit combinespous sib notmarri super anybodi sibl may lead inlaw marri notmarri deleg travers entri superclass person marri person also inlaw via spous travers use myspous traver sal final result marri person spous sibl combin use combin visit visitor travers sibl foreach sib reduc val marri othertrav myinlaw spous notmarri visit initv list sibl dealt use foreach visitor assum visit initv return suitabl initi valu reduct reduct perform use method reduc visitor sibl marri found inlaw spous sibl notmarri initv use return suitabl result travers person othertrav myinlaw sibl similar vein sibl spous also inlaw travers sibl foreach sib reduc val person return int visit inlaw found inlaw invok inlaw visit visitor specifi return type inlaw visit give type checker type propag type checker determin entri travers mysibl myspous myinlaw return type java doesnt allow polymorph method signatur specifi least one chose annot person entri return int like sibl list inlaw reduc one valu use foreach initv inlaw visit result reduc use travers count number inlaw person class inlawscount implement myselfvisitor mysiblingvisitor myspousevisitor myinlawvisitor int initv return 0 int combinemarri h int int b return reduceab int reduceint int b return ab int inlawperson host return class person int countinlaw return myselftraversethisnew inlawscount 5 translat java follow section describ detail translat travers java translat fairli straight forward largest task translat perform type infer travers specif process type check incident also verifi travers consist class diagram code gener strategi assum class travers written beforehand recompil allow us travers object structur third parti class long abl construct class diagram subset object structur wish travers howev develop travers class travers parallel equal well support sinc travers specif translat java class compil separ togeth user class 51 class diagram order infer type travers must know structur program use class structur need typecheck insert proper cast element extract collect class diagram describ type structur program use sever graphic represent class diagram alreadi exampl figur 9 class diagram encod three differ type edg class ffl part edg relationship describ part variabl class edg travers explicitli travers direct part edg name ffl inherit edg object travers precis traversalentri class execut entri choos extend rather overrid behavior superclass invok super direct ffl collect edg implicit edg insid collect class point element edg travers foreach direct collect edg name would nice inherit edg c c 0 class c c 0 allow return type travers c 0 subtyp c unfortun java forbid overrid inherit method method differ return type constraint strengthen equal 52 type check consist input grammar type option must know type variabl return type travers order gener code result type check determin type addit need gener interfac visitor use travers must implement also requir detail inform type system class diagram travers specif specifi mani type involv specifi typic mani class travers return type specifi foreach need infer type return travers object collect sinc function type polymorph infer type simpl constraintsolv wan87 sinc constraint equival relat possibl sort type variabl equival class onffn time ff invers ackerman function realist never return valu greater 4 clr90 rule gener constraint given figur 10 take opportun check travers consist class diagram gener interfac visitor use travers travers consid consist class diagram verifi part travers mention exist travers expect find also part use foreach must collect class condit verifi side effect gener constraint constraint form t1 t2 type variabl type gener constraint solv sort type variabl equival class find possibl type error find type variabl equival java type travers polymorph type variabl sinc java yet parametr polymorph current regard type error inlaw exampl previou section specifi return type inlaw visit avoid travers becom polymorph determin valu type vari abl readi gener java code 53 gener java figur 11 12 show detail java code gener strategi gener class travers class applic method name entri classnam gener class travers entri use gener bodi method otherwis default entri deleg entri superclass use method javalangob ject empti default addit method find precis travers entri object effect simul dynam dispatch gener dispatch method name travers overload type first argument type infer know unambigu signatur visitor method order satisfi type safeti requir java output signatur java interfac traversalnam visitor requir visitor use travers implement interfac interfac allow visitor travers use compil separ gener travers code separ class abl travers class long abl produc class diagram allow us travers class abl recompil need simul dynam dispatch travers entri search invok specif travers entri object furthermor put travers code one class becom possibl use tradit techniqu subclass extend evolv exist travers discuss section 6 6 futur work conclus one use visitor pattern extend function exist class ffk98 typic visitor pattern take travers class graph given visitor alway travers entir object graph travers name classnam return type return type travers classnam vn thetatheta ar thetatheta ar thetatheta ar ar thetatheta travers part arg type travers part type travparam ar thetatheta othertrav trav part arg travers part type travparam ar thetatheta visit meth arg return type meth type host type methparam ar thetatheta method meth arg return type meth type methparam ar thetatheta varnam ar thetatheta foreach part meth initvararg abcd fresh type variabl type collect return type meth first argument meth second argument meth return type travers type travparam return vn ar thetatheta invok thunk return v figur 10 type constraint gener rule type classgraph return thunk abstract class thunk typef abstract type invok travers nameparam class name travers f name visitor thevisitor namenam visitor visitor f class classgraph subclassn immedi subclass class type traverseclass host paramlist f class instanceof subclass1 return thistraversesubclass1 hostparamlist els class instanceof subclassn return thistraversesubclassn hostparamlist els return thisentri classhostparamlist classnam return type 735 nameparam classnam host name visitor visitor param return new name traversalvisitor type entri classnameclassnam host param f aan name true figur 11 java translat travers part 1 thetatheta ar els ararnam ret type varnam thetatheta ar els ararnam ret ar thetatheta travers part arg name binder part travers variabl hostpart els part host variabl binder thistraversegetstrarg ar thetatheta othertrav travnam part arg namebind part travers variabl hostpart els part host variabl binder travnametravers getstr travnam visitor thevisitor arg ar thetatheta visit meth arg name binder ar thetatheta super arg superclass closest superclass class binder entri superclasshostarg ar thetatheta varnam ar thetatheta foreach part meth initvararg name binder travresulttyp infer type part travers variabl hostpart els part host variabl javautilenumer inittyp travresulttyp binder acc 1 g735 aan name true ar thetatheta invok thunknam figur 12 java translat travers part 2 system abl extend behavior simpli via inherit visitor system sinc separ travers specifica tion would make sens abl extend travers addit visitor travers entri class would overrid travers entri super class overridden entri still invok via java super mechan ever alreadi use keyword invok entri current object superclass allow travers specif subclass introduc second dimens overrid thu rais question overridden behavior wish invok super call combin two dimens behavior special issu studi prototyp system implement sketch detail combin travers specif demjava program environ demjava visitorpatternbas program environ extens use number medium scale program project incorpor succinct travers strategi make express recurs algorithm difficult two system complement demjava simplifi travers larg class graph travers strategi allow eleg specif recurs comput smaller subgraph howev due time constraint combin reach preliminari stage mani featur miss r introduct algorithm function program design pattern element reusabl objectori softwar compon enhanc adapt reusabl mechan group collabor class adapt objectori soft ware prevent program maintain deme terjava research demonstr simpl algorithm proof type infer person commun demet seminar tr introduct algorithm design pattern prevent program mainten demeterjava adapt objectori softwar compon enhanc synthes objectori function design promot reus ctr jeff gray use softwar compon gener construct metaweav framework proceed 23rd intern confer softwar engin p789790 may 1219 2001 toronto ontario canada jeff gray ted bapti sandeep neema jame tuck handl crosscut constraint domainspecif model commun acm v44 n10 p8793 oct 2001 ralf lmmel eelco visser joost visser strateg program meet adapt program proceed 2nd intern confer aspectori softwar develop p168177 march 1721 2003 boston massachusett joost visser visitor combin travers control acm sigplan notic v36 n11 p270282 11012001 ari van deursen joost visser sourc model analysi use jjtravel visitor combin framework softwarepractic experi v34 n14 p13451379 novemb 2004