tune strassen matrix multipl memori effici strassen algorithm matrix multipl gain lower arithmet complex expens reduc local refer make challeng implement algorithm effici modern machin hierarch memori system report implement algorithm use sever unconvent techniqu make algorithm memoryfriendli first algorithm intern use nonstandard array layout known morton order base quadtre decomposit matrix second dynam select recurs truncat point minim pad without affect perform algorithm virtu cach behavior morton order techniqu critic perform combin done code multipli effectivenessperform comparison implement compet implement show implement often outperform altern techniqu 25 howev also observ wide variabl across platform across matrix size indic time singl implement clear choic platform matrix size also note time requir convert matric tofrom morton order notic amount execut time 5 15 elimin overhead reduc execut time b introduct central role matrix multipl build block numer code gener signific amount research techniqu improv perform basic oper sever effort 3 6 12 13 14 19 focu algorithm whose arithmet complex work support part darpa grant dabt639810001 nsf grant cda972637 cda95 12356 duke univers equip donat intel corpor technolog educ 2000 program chatterje partial support nsf career award ccr9501979 lebeck partial support nsf career award mip9702547 log 2 7 instead convent 3 algorithm strassen algorithm 23 matrix multipl variant practic algorithm classic exampl theoret highperform algorithm challeng implement effici modern highend comput deep memori hierarchi strassen algorithm achiev lower complex use divideandconqu approach unfor tunat techniqu two potenti drawback first divis proce level singl matrix element recurs overhead measur instanc recurs depth addit temporari storag becom signific reduc perform overhead gener limit stop recurs earli perform convent matrix multipl submatric recurs truncat point 13 second divis step must effici handl oddsiz matric solv one sever scheme embed matrix insid larger one call static pad decompos submatric overlap singl row column call dynam overlap perform special case comput boundari case call dynam peel previou implement address two drawback independ present novel solut simultan address issu specif dynam peel introduc method avoid larg amount static pad larg amount static pad artifact use fix recurs truncat point minim pad dynam select recurs truncat point rang size howev scheme induc signific variat perform use canon storag scheme columnmajor matric use hierarch matrix storag scheme dynam select recurs truncat point within rang size ensur high stabl perform comput leaf recurs tree limit amount static pad measur execut time implement modgemm two altern im plement dgefmm use dynam peel 13 dgemmw use dynam overlap 6 dec alpha sun ultrasparc ii result show wide variabl perform three implement alpha implement modgemm rang 30 slower 20 faster dgefmm matrix size 150 1024 ultra mod gemm gener faster 25 dgefmm larg matric 500 larger dgefmm gener faster small matric 25 also determin time convert matric tofrom morton order rang 5 15 total execut time elimin convers time assum matric alreadi morton order modgemm outperform dgefmm nearli matrix size alpha ultra greater benefit ultra remaind paper organ follow section 2 review convent descript strassen algorithm section 3 discuss implement issu affect memori effici solut issu section 4 present perform result code section 5 cite relat work compar techniqu section 6 present conclus futur work background strassen origin algorithm 23 usual describ follow divideandconqu form let b two n theta n matric n even integ partit two input matric b result matrix c quadrant follow 11 12 21 22 1 symbol ffl equat 1 repres matrix multipl comput four quadrant result matrix follow 22 ffl b 21 paper discuss implement winograd variant 7 strassen algorithm use seven matrix multipl 15 matrix addit wellknown minimum number multipl addit possibl recurs matrix multipl algorithm base divis quadrant divis matric quadrant follow equat 1 comput proce follow c 22 u 6 compar origin algorithm noteworthi featur winograd variant identif reus common subexpress share comput respons reduc number addit also contribut wors local refer unless special attent given aspect comput discuss paper numer issu concern fast matrix multipl algorithm cover elsewher 10 21 interfac order stay consist previou work area permit meaning comparison implement winograd variant follow call convent dgemm subroutin level 3 bla librari 5 thu implement comput c ff scalar opa theta k real matrix opb k theta n real matrix c theta n real matrix opx either x x matric b c store columnmajor order lead dimens lda ldb ldc respect 3 memori effici issu techniqu use practic implement strassenwinograd algorithm must answer three question truncat recurs handl arbitrari rectangular matric lay array data memori promot better use cach memori question independ although past implement treat thu review implement issu identifi possibl solut strategi justifi specif choic 31 recurs truncat point seven product comput recurs invok strassen algorithm smaller sub problem switch convent algorithm matrix size call recurs truncat point 13 strassen construct longer advantag one estim run time count arithmet oper recurs truncat point would around 16 howev empir observ valu paramet least order magnitud higher discrep direct result poor algorithm local refer strassen algorithm implement strassen algorithm encount use empir chosen cutoff criterion determin matrix size termin recurs 32 handl arbitrari matric divideandconqu techniqu effect matric evenli partit recurs invoc algorithm first note rectangular matric present particular problem partit matrix dimens even troubl aris encount matric one dimens odd size sever possibl solut problem ffl simplest solut static pad pad n theta n matric addit row column contain zero pad n 0 theta n 0 matrix satisfi evendimens condit level recurs ie n recurs depth strassen origin solut solut often quot algorithm textbook howev static predetermin valu overhead static pad becom quit sever ad almost three time number origin matrix element worst case furthermor naiv implement idea arithmet done addit zero element pure overhead final base relat n 0 interfer phenomena reduc perform interfer effect mitig use nonstandard data layout discuss section 33 ffl second solut dynam peel peel extra row column level separ add contribut overal solut later fixup comput 13 elimin need extra pad reduc portion matrix strassen algorithm appli thu reduc potenti benefit recurs strategi fixup comput matrixvector oper rather matrixmatrix oper limit amount reus reduc perform ffl third solut dynam overlap finess problem subdivid matrix submatric conceptu overlap one row column comput result share row column subproblem ignor one copi interest solut complic control structur perform extra comput ideal would like avoid implement complex dynam peel dynam overlap possibl excess static pad figur 1 mortonord matrix layout small squar theta tile laid contigu columnmajor order number tile give rel posit sequenc tile 33 data layout signific fraction comput strassenwinograd algorithm occur routin multipli submatric recurs truncat perform matrix product larg determin cach behavior issu explicitli consid previou work implement fast recurs matrix multipl algorithm default columnmajor layout array data assum primari condit perform choos tile size tile fit firstlevel cach thu avoid capac miss 11 easili achiev use tile size rang shown figur 2 second achiev perform stabil vari also import tile contigu memori thu avoid selfinterfer miss 17 given hierarch natur algorithm decomposit quadrant within quadrant within hierarch layout morton order 8 natur suggest store matric oper definit morton order follow divid origin matrix four quadrant lay quadrant memori order nw ne sw se submatrix larger side laid recurs use morton order theta tile laid use columnmajor order see figur 1 secondari benefit keep tile contigu memori matrix addit oper perform singl loop rather two nest loop thu reduc loop overhead 34 connect among issu begin observ recurs truncat point determin amount pad sinc matrix must evenli divid recurs invoc algorithm also note recurs truncat point multipli theta submatric use convent algorithm care select truncat point minim amount pad requir figur 2 show effect tile size select pad four line correspond size size pad tiles best case pad tiles best case pad matrix size figur 2 effect tile size pad minim pad tile chosen rang 64 origin matrix size n pad matrix size n 0 tile size chosen minim pad pad matrix size n 0 fix tile size tile size achiev minimum pad figur demonstr abil select rang tile size dramat reduc amount extra storag make independ matrix size n contrast fix tile size requir signific pad proport matrix size worst case consid squar matrix size 513 fix tile size 32 static pad requir pad matrix size 1024 nearli twice origin matrix dimens contrast flexibl choos tile size allow us select tile size 33 requir pad 15 worst case amount extra element dimens pad matrix size 528 recurs divid four time achiev 33 theta 33 tile howev exploit flexibl tile size select ensur perform matrix multipl algorithm tile sensit choic tile size import consider sinc signific portion algorithm comput occur routin multipli tile figur 3a figur 3b show perform matrix multipl c theta b vari function relat tile size lead dimens line graph correspond differ submatrix size 24 28 32 submatric oper chosen base matrix follow noncontigu submatric creat set lead dimens submatrix lead dimens base matrix correspond xaxi contigu submatric form set lead dimens submatrix tile size correspond line graph figur 3 see contigu submatric exhibit much stabl perform noncontigu submatric expect noncontigu submatric exhibit dramat drop perform base matrix power two 256 case due selfinterfer alpha contigu submatric clearli outperform noncontigu perform differenti pronounc ultra howev instabl noncontigu matrix size500700900mflop contigu submatric noncontigu submatric matrix size500700900mflop contigu submatric noncontigu submatric dec miata b sun ultra figur 3 effect data layout matrix multipli perform submatric still exist result justifi use morton order within implement implement detail envis three differ altern storag layout input output matric assum laid morton order interfac level input output matric copi columnmajor storag morton order interfac level convers morton order done increment across level recurs first altern feasibl librari implement among two option convert matric morton order top level easier implement perform rel fast practic 5 15 total execut time see section 41 incorpor necessari matrix transposit oper convers columnmajor morton order handi requir singl core routin strassenwinograd algorithm altern solut requir multipl code version indirect use pointer handl case correctli choos tile size rang describ gener induc small constant amount pad implement explicitli pad matrix zero perform redund comput pad could afford pad guarante small altern scheme avoid overhead would creat tile uneven size requir control overhead keep track tile start offset similar piec inform handl rectangular case treat two dimens separ tile dimens chosen minim pad dimens method choos tile dimens independ work ratio column row row column within certain limit highli rectangular matric pose problem two recommend tile dimens may requir differ level recurs follow exampl illustr difficulti method matric consid highli rectangular matrix dimens 1024x256 choos tile dimens independ first consid matrix 1024 row choos number row x x x lean wide b b wide lean b figur 4 handl highli rectangular matric tile minim row pad ie number addit row case 32 chosen recurs requir unfold depth 5 next consid matrix 256 column number column tile chosen minim number column pad choos 32 recurs must unfold depth 3 clearli naiv choos two tile dimens independ work highli rectangular matric sinc unfold recurs depth 5 depth 3 overcom limit matrix divid submatric submatric requir depth recurs unfold dimens matrix product reconstruct term submatrix product given matrix ffl wide mean columnstorow ratio exce desir ratio ffl lean mean rowstocolumn ratio exce desir ratio ffl wellbehav mean columnstorow ratio rowstocolumn ratio within desir ratio sinc two input matric b one form total nine possibl combin figur 4a figur 4b show two exampl input matric b divid result c reconstruct result submatrix multipl final note 1 0 common valu ff fi paramet order avoid perform extra arithmet paramet valu core routin strassenwinograd algorithm comput ffl b set c temporari otherwis postprocess comput c ff postprocess necessari section compar perform implement modgemm strassen algorithm previou implement use dynam peel dgefmm 13 use au thor origin code previou implement use dynam overlap dgemmw 6 measur execut time variou implement 500 mhz dec alpha miata 300 mhz sun ultra 60 alpha machin 21164 processor 8kb directmap level 1 cach 96kb 3way associ level 2 cach 2mb directmap level 3 cach 512mb main memori ultra two ultrasparc ii processor level 1 cach 2mb level 2 cach 512mb main memori use one processor ultra 60 matrix size080100120140norm execut time modgemm matrix size080100120140norm execut time modgemm vs dgefmm b dgemmw vs dgefmm figur 5 perform strassen winograd implement dec miata time execut implement use unix system call getrusag matrix size rang 150 1024 dgefmm use empir determin recurs truncat point 64 matric less 500 comput averag invoc algorithm overcom limit clock resolut execut time larger matric larg enough overcom limit reduc experiment error execut experi three time matrix size use minimum valu comparison program compil vendor compil cc f77 fast option sun compil workshop compil 42 dec compil dec c v56071 digit fortran 77 v501383678f figur 5 figur 6 show result alpha ultrasparc respect report result execut time normal dynam peel implement dgefmm alpha see dgefmm gener outperform dynam overlap dgemmw see figur 5b contrast implement modgemm vari 30 slower 20 faster dgefmm also observ modgemm outperform dgefmm mostli rang matrix size 500 800 wherea dgefmm faster smaller larger matric final compar figur 5a figur 5b see modgemm gener outperform dgemmw result quit differ ultra see figur 6 strike differ perform dgemmw see figur 6b outperform modgemm dgefmm matrix size ultra anoth signific differ modgemm gener faster dgefmm larg matric 500 larger dgefmm gener faster small matric import observ result variabl perform across platform across matrix size ongo research effort target understand variat section 42 report preliminari find follow section analyz penalti convert morton order matrix size080100120140norm execut time modgemm matrix size080100120140norm execut time modgemm vs dgefmm b dgemmw vs dgefmm figur perform strassen winograd implement sun ultra matrix size50150 convers cost age execut matrix size50150 convers cost age execut dec miata b sun ultra figur 7 morton convers time percentag total execut time matrix size080100120140norm execut time modgemm matrix size080100120140norm execut time modgemm dec miata b sun ultra figur 8 perform modgemm without matrix convers 41 morton convers time import aspect implement recurs data layout provid stabl perform dynam tile size select previou perform result includ time convert two input matric columnmajor morton order convert output matrix morton order back columnmajor figur 7a figur 7b show cost convers percentag entir matrix multipli platform graph see morton convers account 15 overal execut time small matric approxim 5 larg matric result show morton convers notic fraction execut time elimin convers cost ie assum matric alreadi morton order produc commensur improv perform implement figur 8a figur 8b show without convers cost modgemm inde execut faster increas number matrix size outperform dgefmm specif alpha figur 8a modgemm superior matrix size larger 500 ultra figur 8b see matrix size dgefmm outperform modgemm furthermor without morton convers modgemm competit dgemmw outperform mani matrix size 42 cach effect initi effort gain insight perform variabl implement begin analysi cach behavior present preliminari result use atom 22 perform cach simul 16kb directmap cach block dgefmm modgemm implement figur 9 show miss ratio implement matrix size rang 500 523 first observ graph modgemm miss ratio 6 2 lower dgefmm 8 match expec tation second observ unexpect dramat drop modgemm miss ratio matrix size 513 preliminari investig use cprof 18 reveal drop due reduct conflict miss matrix size00400080miss figur 9 cach miss ratio 16kb directmap understand phenomenon consid matrix size 505 512 pad matrix size 512 recurs truncat point tile size 32 convent algorithm appli submatric 8kb size 32x32x8 correspond four quadrant 64x64 submatrix morton order quadrant alloc contigu memori quadrant separ multipl cach size 16kb conflict cach exampl sinc nw sw quadrant separ ne quadrant map locat cach ie first element nw sw quadrant separ 16kb therefor oper involv two quadrant incur signific number cach miss current examin way elimin conflict miss 5 relat work discuss three separ area relat work implement strassentyp algorithm hierarch scheme matrix storag compil technolog improv cach behavior loop nest 51 implement previou implement strassen algorithm includ bailey implement cray 2 3 dgemmw implement dougla et al 6 dgefmm implement husslederman et al13 bailey code fortran use static twolevel unfold recurs code duplic dougla et al introduc dynam overlap method handl oddsiz dimens husslederman et al introduc dynam peel method implement care limit amount temporari storag specif consid perform memori hierarchi code case cray issu aris memori system cachebas section 4 give extens perform comparison implement vs dgefmm dgemmw kreczmar 16 propos eleg memoryeffici version strassen algorithm base overwrit one input argument scheme space save directli applic two reason assum input matric overwritten scheme requir sever copi oper reduc perform 52 hierarch scheme matrix storag wise coauthor 1 24 investig algorithm advantag quadtre represent matric morton order also appear parallel comput literatur use load balanc irregular problem 20 recent fren wise 8 discuss implement recurs 3 matrix multipl algorithm use hierarch matrix layout sequenc recurs call unusu manner get better reus cach carri recurs level singl matrix element truncat recurs reach tile size fit upper level memori hierarchi 53 cach behavior sever author 17 15 4 21 discuss loop transform tile attempt reduc number cach miss incur loop nest thu improv perform loop transform specif matrix multipl convent threeloop algorithm matrix multipl fall categori code handl lam rothberg wolf 17 investig model influenc cach interfer perform tile program emphas import tile contigu memori avoid selfinterfer miss propos data copi satisfi condit toplevel convers columnmajor layout interfac level morton order use intern view logic extens propos ghosh et al 9 present analyt represent cach miss perfect loop nest use guid select code optim problem work like work cite reli linear row columnmajor storag array therefor immedi appli code 6 conclus futur work matrix multipl import comput kernel perform dictat overal perform mani applic strassen algorithm matrix multipl achiev lower arithmet complex log 2 7 convent algorithm 3 cost wors local refer furthermor sinc strassen algorithm base divideandconqu implement must handl oddsiz matric reduc recurs overhead termin recurs reach individu matrix element issu make difficult obtain effici implement strassen algorithm paper present practic implement strassen algorithm winograd vari ant exploit abil dynam select recurs truncat point base matrix size effici handl oddsiz matric achiev use nonstandard array layout call morton order convert standard layout eg columnmajor intern morton layout interfac level exploit dynam select recurs truncat point minim pad compar implement two altern implement use dynam peel dgefmm 13 dynam overlap dgemmw 6 execut time measur dec alpha sun ultrasparc ii reveal wide variabl perform three impl mentat alpha implement modgemm rang 30 slower 20 faster dgefmm matrix size 150 1024 ultra modgemm gener faster dgefmm larg matric 500 larger dgefmm gener faster small matric elimin time convert matric tofrom morton order 5 15 total execut time modgemm outperform dgefmm nearli matrix size ultra matric alpha futur work includ investig techniqu improv perform stabil strassen algorithm minim code complex also plan examin effect rectangular input matric implement support interfac level 3 bla dgemm routin 2 plan examin perform varieti input paramet r experi quadtre represent matric extra high speed matrix multipl cray2 tile size select use cach organ data layout set level 3 basic linear algebra subprogram gemmw portabl level 3 bla winograd variant strassen matrixmatrix multipli algorithm effici procedur use matrix algorithm cach miss equat analyt represent cach miss accuraci stabil numer algorithm evalu associ cpu cach tensor product formul strassen matrix multipl algorithm implement strassen algorithm matrix multipl ibm engin scientif subroutin librari guid refer memori requir strassen algorithm cach perform optim block algorithm cach profil spec benchmark case studi dynam partit nonuniform structur workload spacefil curv data transform elimin conflict miss atom system build custom program analysi tool gaussian elimin optim cost quadtre represent nondens matric tr extra high speed matrix multipl cray2 evalu associ cpu cach set level 3 basic linear algebra subprogram cach perform optim block algorithm lapack user guid atom gemmw tile size select use cach organ data layout dynam partit nonuniform structur workload spacefil curv multilevel block cach miss equat autoblock matrixmultipl track blas3 perform sourc code data transform elimin conflict miss implement strassen algorithm matrix multipl accuraci stabil numer algorithm cach profil spec benchmark effici procedur use matrix algorithm experi quadtre represent matric ctr siddhartha chatterje alvin r lebeck praveen k patnala mithuna thottethodi recurs array layout fast matrix multipl ieee transact parallel distribut system v13 n11 p11051123 novemb 2002 hossam elgindi georg ferizi improv memori access pattern execut strassen matrix multipl algorithm proceed 27th australasian confer comput scienc p109115 januari 01 2004 dunedin new zealand k fatahalian j sugerman p hanrahan understand effici gpu algorithm matrixmatrix multipl proceed acm siggrapheurograph confer graphic hardwar august 2930 2004 grenobl franc kang su gatlin larri carter architecturecogniz divid conquer algorithm proceed 1999 acmiee confer supercomput cdrom p25e novemb 1419 1999 portland oregon unit state john mellorcrummey david whalley ken kennedi improv memori hierarchi perform irregular applic proceed 13th intern confer supercomput p425433 june 2025 1999 rhode greec john mellorcrummey david whalley ken kennedi improv memori hierarchi perform irregular applic use data comput reorder intern journal parallel program v29 n3 p217247 june 2001 igor kaporin aggreg cancel techniqu practic tool faster matrix multipl theoret comput scienc v315 n23 p469510 6 may 2004 sandeep sen siddhartha chatterje toward theori cacheeffici algorithm proceed eleventh annual acmsiam symposium discret algorithm p829838 januari 0911 2000 san francisco california unit state lillian lee fast contextfre grammar pars requir fast boolean matrix multipl journal acm jacm v49 n1 p115 januari 2002 sandeep sen siddhartha chatterje neeraj dumir toward theori cacheeffici algorithm journal acm jacm v49 n6 p828858 novemb 2002 paolo dalberto alexandru nicolau adapt strassen matrix multipl proceed 21st annual intern confer supercomput june 1721 2007 seattl washington nico galoppo naga k govindaraju michael henson dinesh manocha lugpu effici algorithm solv dens linear system graphic hardwar proceed 2005 acmiee confer supercomput p3 novemb 1218 2005 siddhartha chatterje alvin r lebeck praveen k patnala mithuna thottethodi recurs array layout fast parallel matrix multipl proceed eleventh annual acm symposium parallel algorithm architectur p222231 june 2730 1999 saint malo franc moham f mokbel walid g aref ibrahim kamel analysi multidimension spacefil curv geoinformatica v7 n3 p179209 septemb chunyuan lin yehch chung jenshiuh liu effici data parallel algorithm multidimension array oper base ekmr scheme distribut memori multicomput ieee transact parallel distribut system v14 n7 p625639 juli moham f mokbel walid g aref irregular multidimension spacefil curv applic multimedia databas proceed tenth intern confer inform knowledg manag octob 0510 2001 atlanta georgia usa siddhartha chatterje vibhor v jain alvin r lebeck shyam mundhra mithuna thottethodi nonlinear array layout hierarch memori system proceed 13th intern confer supercomput p444453 june 2025 1999 rhode greec richard vuduc jame w demmel jeff bilm statist model empir searchbas perform tune intern journal high perform comput applic v18 n1 p6594 februari 2004