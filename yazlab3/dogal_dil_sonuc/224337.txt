detect coarsegrain parallel use interprocedur parallel compil paper present extens empir evalu interprocedur parallel compil develop part stanford suif compil system system incorpor comprehens integr collect analys includ privat reduct recognit array scalar variabl symbol analysi array subscript interprocedur analysi framework design provid analysi result nearli precis full inlin without associ cost experiment system show capabl detect coarser granular parallel previous possibl specif parallel loop span numer procedur hundr line code frequent requir modif array data structur privat reduct transform measur sever standard benchmark suit demonstr integr combin interprocedur analys substanti advanc capabl automat parallel technolog b introduct symmetr sharedmemori multiprocessor built latest mi croprocessor wide avail class comput pow research support part air forc materi command arpa contract f3060295c0098 arpa contract dabt6394c0054 nsf cise postdoctor fellowship jet propuls laboratori fellowship intel corpor att bell laboratori nsf young investig award er machin hardwar technolog advanc make pervas parallel comput possibl ever import tool develop simplifi parallel program parallel compil automat locat parallel comput sequenti program particularli attract program tool free programm difficult task explicitli manag parallel program unfortun today commerci avail parallel compil effect get good perform multiprocessor 3 23 parallel develop vector compil technolog tend success parallel innermost loop parallel inner loop adequ multiprocessor two reason first inner loop may make signific portion sequenti comput thu limit parallel speedup limit amount parallel second synchron processor end inner loop leav littl comput occur parallel synchron point cost frequent synchron load imbal potenti overwhelm benefit parallel multiprocessor power vector machin execut differ thread control simultan thu exploit coarser granular parallel thu parallel compil target multiprocessor effect must identifi outer paralleliz loop extract coarsegrain parallel requir two major improv standard parallel techniqu advanc array analys loop often paralleliz unless compil modifi data structur access exampl common iter loop defin use variabl compil must give processor privat copi variabl loop paralleliz anoth exampl compil parallel reduct eg comput sum product maximum data element processor comput partial reduct local updat global result end compil tradit perform privat reduct tranform scalar variabl find outer parallel loop compil must abl perform transform array variabl well 3 23 interprocedur analysi program written modular style natur coarsegrain parallel loop span multipl pro cedur reason procedur boundari must pose barrier analysi 3 one way elimin procedur boundari perform inlin substitutionreplac procedur call copi call procedureand perform program analysi usual way practic solut larg program ineffici time space interprocedur analysi appli dataflow analysi techniqu across procedur boundari much effici analyz singl copi procedur although much research devot interprocedur analysi parallel 8 12 13 15 18 adopt practic primari obstacl progress area effect interprocedur compil substanti harder build intraprocedur counterpart moreov inher tradeoff perform analysi effici obtain precis result success interprocedur compil must tackl complex compil process maintain reason effici without sacrif much precis develop automat parallel system fulli interprocedur system incorpor standard analys includ today automat parallel data depend analysi analys scalar variabl includ constant propag valu number induct variabl recognit scalar depend reduct recognit addit system employ analys array privat array reduct recognit implement techniqu extend previou work meet demand parallel real program interprocedur analysi design practic provid nearli qualiti analysi program fulli inlin paper present comprehens evalu effect system locat coarsegrain parallel comput larg collect program spec92fp na perfect benchmark suit demonstr techniqu system significantli improv perform automat parallel code increas portion program execut parallel reduc synchron overhead result parallel outer loop rather inner one remaind paper organ seven section section 2 present type advanc analys requir parallel full applic section 3 overview requir precis effici interprocedur analysi section 4 overview parallel analysi system section 5 compar work automat parallel system section 6 devot empir evalu system follow conclus parallel analysi techniqu parallel coarsegrain outer loop requir compil incorpor mani techniqu beyond standard analys current avail commerci parallel compil section briefli describ parallel analysi techniqu give exampl extract real program encount experi motiv need advanc analysi techniqu 21 analysi scalar variabl scalar parallel analysi scalar parallel analysi locat data depend scalar variabl data depend occur memori locat written one iter loop might access read written differ iter case say loop carri depend safe parallel scalar depend analysi determin whether parallel may enabl privat reduct transform scalar symbol analysi parallel compil perform data depend analysi array check loopcarri depend individu array element array data depend analysi effect subscript express affin function loop indic loop invari within domain data depend analysi shown equival integ program integ program potenti expens data depend problem found practic simpl effici algorithm develop usual solv problem exactli 7 20 reason parallel compil incorpor host scalar symbol analys put array indic affin form includ constant propag valu number induct variabl recognit analys provid integ coeffici subscript variabl deriv affin equal relationship among variabl system also propag inequ relat relat constraint integ variabl impos surround code construct if loop use array subscript 12 15 relat nonlinear variabl propag affin relat among scalar suffici parallel loop exampl scientif code often linear access conceptu multidimension array result subscript express express affin function enclos loop indic loop nest figur 1a perfect benchmark trfd illustr situat figur 1b show inform determin symbol analysi loop access array xrsij induc depend iter outer loop sinc index mrsij never valu two differ iter nonlinear induct variabl trfd b symbol inform figur 1 nonlinear analysi exampl 22 analysi array variabl scalar parallel analys describ depend privat reduct must gener appli array variabl array dataflow analysi array privat simpl exampl motiv need array privat k loop figur 2a 160line loop taken na sampl benchmark appbt concis present exampl use fortran 90 array notat place actual loop although array locat tm defin use differ iter outer loop valu flow across iter consequ safe parallel loop privat copi tm access process find privatiz array requir dataflow analysi previous perform scalar variabl appli individu array element analysi call array dataflow analysi array privat initi array privat usual appli case iter first defin valu array use howev also applic loop whose iter use valu comput outsid loop privat copi must initi valu parallel execut begin word array privat illeg iter refer valu gener preced iter loop exampl array privat initi shown figur 2b figur show portion 1002line loop perfect benchmark spec77 see section 632 part array ze second row modifi referenc remaind array modifi array privat appbt uvglob read entir kth column array ze b interprocedur array privat initi spec77 c recogn region across loop figur 2 array analysi exampl loop array ze privatiz outer loop give processor privat copi second row initi origin valu recogn complic region data flow analysi array intrins difficult analysi scalar variabl necessari keep track access individu array element case read write array may appear multipl loop read write oper may interleav compil must keep precis enough inform analysi maintain effici figur 2b also part 1002 line loop spec77 illustr complex problem statement array notat correspond doubli nest loop compil determin array w privatiz infer collect write oper w complet defin read array reduct recognit compil recogn simpl reduct accumul variabl sum figur 3a reduct array variabl also common scientif code potenti sourc signific improv parallel result spars array reduct spars comput pose usual consid insurmount problem parallel compil array part subscript express compil determin locat array read written case scalar reduct b spars reduct cgm jbeg le jend c multipl reduct statement interprocedur reduct mdljdp2 figur 3 reduct analysi exampl loop contain spars comput still parallel comput recogn reduct exampl loop figur 3b constitut main comput na sampl benchmark cgm observ access spars vector commut associ updat locat thu safe transform reduct paralleliz form figur 3c excerpt 148line loop make main comput benchmark mdljdp2 outer loop paralleliz spars reduct perform interprocedur exampl also demonstr reduct loop may consist multipl updat array 3 interprocedur analysi issu interprocedur dataflow analysi support interprocedur optim much spaceeffici manner inlin analyz singl copi procedur captur precis interprocedur inform requir flowsensit approach deriv analysi result along possibl control flow path program precis effici flowsensit interprocedur analysi difficult inform flow procedur caller repres call context procedur invok calle repres side effect invoc exampl straightforward interprocedur adapt tradit iter analysi analysi might carri program represent call supergraph 22 individu control flow graph procedur program link togeth procedur call return point iter analysi structur slow number control path inform flow larg analysi also lose precis propag inform along unrealiz path 17 analysi may propag call context inform one caller procedur return sideeffect inform differ caller regionbas flowsensit analysi system use regionbas analysi solv problem unrealiz path slow converg perform analysi effici two separ pass program proceed bottomup call graph first pass analyz procedur obtain descript sideeffect behavior form transfer function transfer function turn insert call site comput transfer function caller second topdown pass call graph dataflow inform call context appli transfer function deriv final analysi result procedur use similar approach within procedur summar code region eg loop behavior bottomup pass propag context region topdown pass select procedur clone regionbas analysi approach describ precis may still lost compar full inlin second pass deriv call context pro cedur analysi must repres conserv approxim inform contribut program path procedur approxim affect precis analysi procedur invok along path contribut differ inform avoid loss precis incorpor call context analysi techniqu call select procedur clone compil replic analysi result procedur determin dataflow inform along path program contribut significantli differ call context 5 replic done select accord uniqu dataflow inform expos manag analysi cost usual obtain precis full inlin interprocedur framework differ dataflow problem share mani common exampl support paramet pass use interprocedur framework manag complex implement allow code reus regionbas analysi select procedur clone techniqu encapsul common interprocedur framework part fiat tool develop interprocedur analysi system 11 fiat facilit ad new interprocedur analys provid parameter templat drive flowsensit analysi clone analysi problem implement instanti templat function comput solut dataflow equat interprocedur parallel system suif extend fiat significantli support array dataflow analysi flowsensit analysi parallel analysi algorithm section overview parallel analysi algorithm describ differ phase analysi fit togeth descript found elsewher 9 10 41 scalar analysi system interprocedur scalar analysi encompass scalar parallel analysi scalar symbol analysi scalar parallel analysi simpl flowinsensit analysi interprocedur analysi consid control flow within procedur provid inform locat scalar depend scalar reduct recogn privatiz scalar com plex requir bottomup flowsensit regionbas analysi find upwardsexpos read loop boundari interprocedur symbol analysi combin constant propaga tion valu number induct variabl recognit analysi perform regionbas analysi two pass call graph procedur region summar scalar valu map describ variabl valu exit arbitrari express variabl valu entri topdown pass determin symbol valu integ variabl term loop indic loop invari select clone base symbol valu use procedur analysi also provid support analyz nonlinear array subscript analysi recogn higherord induct variabl mrsij mi loop figur 1a provid approxim inform array analysi set addit linear inequ constraint simpl approach captur requir analyz mani nonlinear subscript express without need adopt sophist nonlinear depend test 4 19 separ topdown interprocedur context analysi propag contextu relat looprel term obtain symbol analysi enclos predic loop bound context relat repres set system linear equal similar array summari descriptor describ 42 array analysi summari tradit data depend analysi solv integ program problem everi pair array access loop terest 2 analysi becom prohibit expens larg loop particularli interprocedur set one way improv effici summar array access region code data depend analysi appli small number sum mari summari also provid represent use array dataflow analysi describ mani differ design summari trade effici precis 13 14 18 24 repres summari set array access list system linear inequ array indic equat affin express outer loop indic loopinvari valu constrain inequ deriv loop bound represent data access set system allow us trade precis effici necessari exampl union two summari combin two system one comput inexpens loss inform result repres multipl region array essenti captur exampl figur 2cd repres array summari convex hull would necessari precis creat summari access outsid enclos loop project away loop index variabl use fouriermotzkin project enhanc integ domain similarli transform access summari across procedur call equat array subscript variabl formal paramet subscript variabl actual paramet constrain declar type formal actual project elimin formal paramet subscript replac actual paramet subscript strategi transform summari across procedur boundari provid gener mechan analyz array reshap number size array dimens alter call similar approach array reshap also recent adopt creussilet 6 array dataflow analysi singl array dataflow analysi use determin array involv data depend locat privatiz array recogn reduct array dataflow analysi bottomup interprocedur analysi loop procedur program use regionbas analysi framework describ analysi comput follow four set summari program region array section definit written mustwrit may written write may read read may read written exposedread data depend test loop comparison read write set determin disjoint differ iter loop array involv data depend may yield privatiza tion array privat write set exposedread set differ iter disjoint array privat analysi extens tu padua approach 26 algorithm requir privatiz array read locat upwardsexpos begin loop iter approach gener captur case one figur 2c array reduct array reduct recognit perform simpl algorithm integr array dataflow analysi recogn reduct begin locat commut associ min max oper memori locat mark correspond represent access summari reduct type accord oper bottomup interprocedur propag array dataflow analysi ensur access potenti reduct array within current loop reduct oper type loop evalu whether variabl carri depend privat involv reduct comput variabl comput reduc everi region describ summari reduct type simpl algorithm suffici power recogn parallel reduct figur 3ac 43 put togeth analysi techniqu built use regionbas analysi frame work select clone figur 4 put togeth analysi phase demonstr entir analysi system could execut four pass program call graph scalar modif refer reduct perform initi flowinsensit pass analys could fold next pass flowinsensit implement perform effici 5 relat work late 1980 seri paper present result interprocedur parallel analysi 13 18 24 common approach determin section array modifi referenc procedur call enabl parallel loop contain call whenev invoc modifi array element distinct referenc modifi invoc techniqu shown effect parallel linear algebra librari 1 flowinsensit pass ffl find modifi referenc variabl ffl find scalar reduct 2 bottomup pass scalar analysi ffl find privatiz scalar ffl summar symbol behavior sideeffect 3 topdown pass scalar analysi appli call context symbol valu map symbol analysi ffl extract propag program controlflow constraint inequ iti relat ffl select clone base two analys 4 bottomup pass array analysi ffl summar mustwrit write read exposedread ffl find data depend intersect write read ffl find privatiz array intersect write exposedread ffl recogn array reduct record reduct oper type figur 4 phase interprocedur parallel analysi recent fida system develop ibm obtain precis array section partial inlin array access 14 see section 6 irigoin et al develop pip system interprocedur analysi system part environ parallel program 16 recent pip extend incorpor interprocedur array privat 15 6 pip similar work lack three import featur 1 pathspecif interprocedur inform obtain select procedur clone 2 interprocedur reduct 3 extens interprocedur scalar dataflow analysi scalar privat polari system univers illinoi also current develop advanc state art parallel technolog 2 fundament differ system polari polari perform interprocedur analysi instead reli full inlin program obtain interprocedur inform polari group demonstr good coverag result program parallel obtain automat although report full inlin feasibl eight mediums program approach difficulti parallel larg loop contain thousand line code commerci parallel compil initi interprocedur analysi system notabl convex applic compil perform flowinsensit array analysi interprocedur constant propag obtain pathspecif inform inlin procedur clone 21 appli parallel research demonstr good speedup result program present program parallel programm direct instruct compil ignor depend privat certain vari abl know commerci system current employ flowsensit array analysi particularli interprocedur array privat 6 empir evalu interprocedur parallel analysi describ previou section implement part stanford suif compil section provid empir evalu result parallel analysi collect benchmark program previou evalu interprocedur parallel system provid static measur number addit loop parallel result interprocedur analysi 13 14 18 24 compar result recent empir stud i examin spec89 perfect benchmark suit 14 consid loop contain call set 16 program suif system abl parallel greater five time loop 9 key differ two system suif contain full interprocedur array analysi includ array privat reduct recognit see section 5 static loop count howev good indic whether parallel success specif parallel one outermost loop profound impact program perform dynam measur provid much insight whether program may benefit parallel thu addit static measur benchmark suit also present seri result gather execut program parallel machin present overal speedup result well measur factor determin speedup also provid result identifi contribut analysi compon system focus advanc array analys 61 benchmark program evalu parallel analysi measur success parallel three standard benchmark suit describ tabl 1 fortran program spec92fp sampl na benchmark perfect spec92fp set 14 floatingpoint program use benchmark uniprocessor architectur compil omit four studi parallel analysi current avail tran omit alvinn ear two c program spice program mix fortran c code also omit fpppp contain type error origin fortran sourc program consid contain littl looplevel parallel program present alphabet order program name na suit eight program use benchmark parallel comput nasa provid sampl sequenti program plu applic inform intent rewritten suit differ machin use nasa sampl program except embar substitut embar version apr separ first call function initi static data call lastli perfect set origin sequenti code use benchmark parallel compil present result 12 13 program spice contain pervas type conflict paramet mismatch origin fortran sourc violat fortran77 standard interprocedur analysi flag error program consid littl looplevel parallel program parallel complet automat system without reli user direct assist paral leliz made modif origin program 1 program produc valid result execut parallel 62 suif compil system suif fulli function compil take fortran c input languag experi consid fortran program parallel code output spmd singl program multipl parallel c version program compil nativ c compil varieti architectur result c program link parallel runtim system current run sever busbas share memori architectur sgi challeng power challeng digit 8400 multiprocessor scalabl sharedmemori architectur stanford dash kendal squar ksr1 two major compon automat parallel suif first analysi compon locat avail parallel code compon encompass interprocedur parallel analys present paper addit suif 1 except correct type declar paramet pass arc2d bdna dyfesm mgrid mdg spec77 violat fortran 77 semant program length descript doduc 5334 line mont carlo simul line equat motion wave5 7628 line 2d particl simul tomcatv 195 line mesh gener ora 373 line optic ray trace line equat motion singl precis line shallow water model su2cor 2514 line quantum physic hydro2d 4461 line navierstok line nasa ame fortran kernel na appbt 4457 line block tridiagon pde applu 3285 line parabolicellipt pde appsp 3516 line scalar pentadiagon pde buk 305 line integ bucket sort cgm 855 line spars conjug gradient embar 135 line random number gener fftpde 773 line 3d fft pde mgrid 676 line multigrid solver perfect adm 6105 line pseudospectr air pollut model arc2d 3965 line 2d fluid flow solver bdna 3980 line molecular dynam dna dyfesm 7608 line structur dynam flo52 1986 line transon inviscid flow mdg 1238 line moleclar dynam water mg3d 2812 line depth migrat ocean 4343 line 2d ocean simul qcd 2327 line quantum chromodynam line spectral analysi weather simul track 3735 line missil track trfd 485 line 2electron integr transform tabl 1 benchmark program clude c pointer analysi support parallel c program outsid scope paper second major compon parallel code optim gener specif full suif system incorpor data loop transform increas granular parallel improv memori behavior program 1 27 optim elimin unnecessari synchron 25 paper howev adopt simpl parallel code gener strategi includ optim order focu effect parallel analysi compil parallel outermost loop analysi proven paralleliz compil suppress parallel array reduct overhead involv expect overwhelm benefit addit runtim system estim amount comput paralleliz loop use knowledg iter count run time run loop sequenti consid finegrain parallel benefit iter parallel loop evenli divid processor time parallel loop spawn 63 applic advanc analys experiment framework current support isol contribut interprocedur scalar analys know analys import exampl performancecrit loop program embar mdljdp2 ora spec77 would parallel without one interprocedur scalar privat scalar reduct recognit select procedur clone base interprocedur constant present static dynam measur assess impact array analysi compon defin baselin system serv basi comparison throughout section baselin refer system without advanc array analys perform intraprocedur data depend capabl privat array recogn reduct note baselin system much power exist parallel compil contain interprocedur scalar analysi discuss section 41 631 static measur tabl give count number loop suifparallel program requir particular techniqu paralleliz tabl count paralleliz loop includ nest within parallel loop would consequ execut parallel parallel strategi first column give number loop paralleliz baselin system next three column measur applic intraprocedur version advanc array analys measur effect includ reduct recognit privat reduct recognit privat respect next set four column interprocedur data depend analysi similarli sixth eighth column measur effect ad interprocedur reduct recog nition privat reduct recognit privat respect see tabl advanc array analys applic major program benchmark suit sever program take advantag interprocedur array analys although techniqu appli uniformli program frequenc applic rel small set program demonstr techniqu gener use observ mani loop requir new array techniqu howev loop parallel advanc array analys often involv comput shown make substanti differ overal perform 632 dynam measur also measur dynam impact advanc array analys contribut analysi compon measur record specif array analys appli parallel loop instrument sequenti code determin execut time loop present execut time percentag total comput time figur 5c measur taken run program singl processor 200mhz sgi challeng result report rel term applic larg class processor note even interprocedur analysi use parallel say 100 comput mean noninterprocedur parallel find parallel may parallel inner loop term overal percentag time spent parallel region parallel coverag overal observ rather good coverag 80 8 10 program spec92fp 7 8 na program 6 12 perfect benchmark third program spend 50 execut time loop requir advanc array analysi techniqu graph also demonstr import parallel singl loop requir one advanc analysi techniqu exampl program mdljdp2 contain two loop requir interprocedur reduct two loop program spend 78 time intraprocedur interprocedur array reduct p p p p array privat p p p p doduc su2cor hydro2d 147 na appbt 139 3 buk 4 fftpde mgrid 38 perfect arc2d 190 bdna 111 28 1 ocean track trfd tabl 2 static measur number loop use techniqu suifparallel loop execut long time also larg largest loop suif parallel spec77 consist 1002 line code origin loop invok procedur loop contain 60 subroutin call differ procedur within loop 48 interprocedur privatiz array 5 interprocedur reduct array 27 array access independ loop illustr advantag interprocedur analysi inlin parallel larg program instead loop fulli inlin would contain nearli 11000 line code 64 effect advanc analys section 63 establish advanc techniqu applic mani program section address effect tech niqu provid quantit data show techniqu effect previou techniqu parallel program benchmark suit 641 metric result parallel speedup measur overal effect parallel system also highli machin depend speedup depend number processor sensit mani aspect architectur cost synchron interconnect bandwidth memori subsystem furthermor speedup measur effect entir compil system parallel analysi focu paper exam ple techniqu improv data local minim synchron greatli improv speedup obtain thu precis captur well parallel analysi perform use two follow metric parallel coverag coverag introduc section 632 import metric measur effect parallel analysi amdahl law program low coverag get good parallel speedup exampl even program 80 coverag ideal speedup 25 4 processor high coverag indic compil analysi locat signific amount parallel comput granular parallel program high coverag guarante achiev parallel speedup due number factor granular parallel extract particularli import factor frequent synchron slow rather speed finegrain parallel comput quantifi 10300408004080adm qcd mdg track bdna dyfesm arc2d trfd spec77 appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp2 wave5 us us 100 us ms ms 100 ms 100 sec ocean parallel coverag granular parallel applic comput onprocessor 1 spec92fp 2 na 3 perfect adm qcd mdg track bdna dyfesm arc2d trfd spec77 appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp2 wave5 ocean adm qcd mdg track bdna dyfesm arc2d trfd spec77 appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp2 wave5 ocean data depend analysi array reduct array privat array reduct array privat procedur techniqu baselin suif intraprocedur data depend analysi array privat arrayreduct interprocedur scalar analysi interprocedur scalar analysi data depend analysi adm qcd mdg track bdna dyfesm arc2d trfd spec77 appbt applu appsp buk cgm embar fftpde mgrid tomcatv ora doduc mdljdp2 wave5 ocean figur 5 dynam measur suif baselin compil properti defin program granular averag execut time parallel region figur 5b c show comparison parallel coverag granular achiev suif baselin compil sake complet also present set speedup mea surement program benchmark suit rel short execut time well fine granular parallel shown figur 5c program util larg number processor effect experi run program 4processor 200mhz sgi challeng speedup calcul ratio execut time origin sequenti program parallel execut time result shown figur 5d 642 discuss benchmark figur 5b1 show advanc array analys dramat increas parallel coverag 3 10 program word major loop requir sophist array analys contain loop parallel use convent techniqu new parallel loop also rather coars grain observ figur 5c1 overal compil achiev good result parallel spec92fp coverag 80 8 10 program speedup achiev 8 result also show coverag necessari suffici high speedup program fine granular parallel even high coverag su2cor tomcatv nasa7 tend lower speedup anoth import factor affect speedup data local two program tomcatv nasa7 poor memori behavior perform program improv significantli via data loop transform improv cach locality1 techniqu minim synchronization25 na benchmark advanc array analys suif import success parallel na benchmark seen figur 5b2d2 compar suif baselin system observ array analys two import effect enabl compil locat significantli parallel two program cgm embar also increas granular parallel appbt appsp parallel outer loop instead inner loop nest insid observ seem like moder improv coverag appbtfrom 85 nearli 100i sig nific differ correspond chang ideal speedup 275 4 4 processor improv coverag granular na translat good speedup result six eight program yield speedup two buk low coverag surpris implement bucket sort algorithm applu although high coverag finegrain yield speedup overal advanc array analys import na half benchmark suit would speed without techniqu perfect benchmark display figur 5b3d3 advanc array analys significantli improv parallel coverag bdna qcd bdna addit parallel loop provid reason granular lead speedup granular increas spec77 trfd speedup achiev case trfd although littl parallel speedup observ spec77 improv baselin system confirm valid prefer outer loop parallel whole suif doubl number program achiev speedup 2 4 overal parallel perfect success two benchmark suit figur 5 indic two basic problem half program coverag 80 furthermor parallel found rather finegrain paralleliz loop take less 100 uniprocessor fact runtim system suppress parallel finegrain loop perfect result would much wors thu coverag low system exploit fraction parallel extract examin difficulti parallel perfect determin feasibl automat parallel identifi possibl futur research direct found program simpli paralleliz implement program contain lot input output eg mg3d spec77 speedup depend success parallel io dusti deck featur program use equival construct ocean obscur inform analysi contrast spec92fp na program cleanli implement thu amen automat parallel mani program particularli ocean adm mdg key comput loop safe parallel beyond scope techniqu implement suif ocean adm contain nonlinear array subscript involv multipl induct variabl beyond scope higherord induct variabl recognit alway extens automat parallel system improv effect program nonetheless fundament limit static parallel program parallel compiletim informa tion exampl main loop adm paralleliz problem size unknown compil time even promis solut program check loop paralleliz run time use dynam inform interprocedur analysi optim play import part approach improv effici runtim test deriv highli optim runtim test hoist less frequent execut portion program possibl even across procedur boundari interprocedur analysi system provid excel start point work area advanc analysi also form basi use interact parallel system even analys strong enough determin loop paralleliz result use isol problemat area focu user attent exampl compil find program qcd 617line interprocedur loop would paralleliz small procedur examin procedur reveal random number gener user potenti modifi run parallel request littl help user compil parallel loop perform tediou privat reduct transform automat 643 summari tabl 3 summar impact improv advanc array analys coverag granular speedup three benchmark suit first row contain number program report benchmark suit second row show mani program coverag increas 80 ad advanc array analys third row give number program increas granular similar coverag result advanc array analys fourth row show signific improv affect overal perform either improv coverag increas granular 3 2fold speedup conclus paper present extens experiment result use fulli interprocedur automat parallel system demonstr interprocedur array dataflow analysi array privat reduct recognit key technolog greatli improv success automat parallel find coarsegrain parallel perfect number program improv coverag increas granular improv speedup 20 1 4 2 tabl 3 summari experiment result compil increas parallel coverag lower synchron cost improv speedup work discov effect interprocedur parallel system depend strength individu analys abil work togeth integr fashion comprehens approach parallel analysi system much effect automat parallel previou interprocedur system commerci avail compil program analysi suffici find avail parallel program seem imposs unlik pure static analysi could discov parallelismeith correct parallel requir dynam inform avail compil time difficult analyz case benefit support runtim parallel user inter action aggress static parallel built provid good start point investig techniqu acknowledg author wish thank patrick sathyanathan alex seibulescu contribut design implement system rest suif group particularli jennif anderson chri wilson provid support infrastructur upon system built r data comput transform multiprocessor perform analysi parallel compil perfect benchmark program rang test depend test symbol methodolog procedur clone interprocedur array region analys practic depend test symbol analysi basi paral leliz interprocedur analysi parallel interprocedur analysi parallel design experi fiat framework interprocedur analysi transform interprocedur symbol analysi implement interprocedur bound regular section analysi empir studi precis interprocedur array analysi interprocedur analys program environ semant interprocedur paralleliza tion overview pip project safe approxim algorithm interprocedur pointer alias effici interprocedur analysi program restructur parallel program effici way break multiloop depend equat effici exact data depend analysi convex applic compil precis interprocedur data flow algorithm empir investig effect limit automat parallel direct parallel call statement compil optim elimin barrier synchron automat array privat improv local parallel nest loop tr direct parallel call statement effici interprocedur analysi program parallel restructur semant interprocedur parallel effici exact data depend analysi practic depend test delinear safe approxim algorithm interprocedur alias improv local parallel nest loop rang test empir studi precis interprocedur array analysi compil optim elimin barrier synchron data comput transform multiprocessor precis interprocedur data flow algorithm implement interprocedur bound regular section analysi perform analysi parallel compil perfect benchmark program fiat automat array privat polari symbol analysi interprocedur array region analys interprocedur analysi parallel ctr michael g burk ron k cytron interprocedur depend analysi parallel acm sigplan notic v39 n4 april 2004 mari w hall jennif anderson saman p amarasingh brian r murphi shihwei liao edouard bugnion monica lam maxim multiprocessor perform suif compil comput v29 n12 p8489 decemb 1996 saman p amarasingh jennif anderson christoph wilson shihwei liao brian r murphi robert french monica lam mari w hall multiprocessor softwar perspect ieee micro v16 n3 p5261 june 1996 hwansoo han chauwen tseng pete keleh elimin barrier synchron compilerparallel code softwar dsm intern journal parallel program v26 n5 p591612 octob 1998 e gutirrez plata e l zapata compil method parallel execut irregular reduct scalabl share memori multiprocessor proceed 14th intern confer supercomput p7887 may 0811 2000 santa fe new mexico unit state manish gupta rahul nim techniqu specul runtim parallel loop proceed 1998 acmiee confer supercomput cdrom p112 novemb 0713 1998 san jose ca byoungro sungdo moon mari w hall measur effect automat parallel suif proceed 12th intern confer supercomput p212219 juli 1998 melbourn australia manish gupta sayak mukhopadhyay navin sinha automat parallel recurs procedur intern journal parallel program v28 n6 p537562 decemb 2000 martin rinard pedro diniz elimin synchron bottleneck objectbas program use adapt replic proceed 13th intern confer supercomput p8392 june 2025 1999 rhode greec shihwei liao amer diwan robert p bosch jr anwar ghuloum monica lam suif explor interact interprocedur parallel acm sigplan notic v34 n8 p3748 aug 1999 radu rugina martin rinard automat parallel divid conquer algorithm acm sigplan notic v34 n8 p7283 aug 1999 heidi e ziegler mari w hall pedro c diniz compilergener commun pipelin fpga applic proceed 40th confer design autom june 0206 2003 anaheim ca usa edouard bugnion jennif anderson todd c mowri mendel rosenblum monica lam compilerdirect page color multiprocessor acm sigplan notic v31 n9 p244255 sept 1996 sungdo moon byoungro mari w hall evalu automat parallel suif ieee transact parallel distribut system v11 n1 p3649 januari 2000 shihwei liao zhaohui du gansha wu gueiyuan lueh data comput transform brook stream applic multiprocessor proceed intern symposium code gener optim p196207 march 2629 2006 pierr palatin yve lhuillier olivi temam capsul hardwareassist parallel execut componentbas program proceed 39th annual ieeeacm intern symposium microarchitectur p247258 decemb 0913 2006 yuanshin hwang parallel graph construct oper program cyclic graph parallel comput v28 n9 p13071328 septemb 2002 sungdo moon byoungro mari w hall combin compiletim runtim parallelization1 scientif program v7 n34 p247260 august 1999 yuanshin hwang joel h saltz identifi parallel program cyclic graph journal parallel distribut comput v63 n3 p337355 march martin c rinard pedro c diniz commut analysi new analysi framework parallel compil acm sigplan notic v31 n5 p5467 may 1996 silviu ru guobin christoph alia lawrenc rauchwerg region array ssa proceed 15th intern confer parallel architectur compil techniqu septemb 1620 2006 seattl washington usa yuan lin david padua compil analysi irregular memori access acm sigplan notic v35 n5 p157168 may 2000 mahmut taylan kandemir compil techniqu improv wholeprogram local acm sigplan notic v36 n3 p179192 march 2001 sungdo moon mari w hall evalu predic array dataflow analysi automat parallel acm sigplan notic v34 n8 p8495 aug 1999 kathryn mckinley compil optim algorithm sharedmemori multiprocessor ieee transact parallel distribut system v9 n8 p769787 august 1998 heidi ziegler mari hall evalu heurist automat map multiloop applic fpga proceed 2005 acmsigda 13th intern symposium fieldprogramm gate array februari 2022 2005 monterey california usa mahmut taylan kandemir improv wholeprogram local use intraprocedur interprocedur transform journal parallel distribut comput v65 n5 p564582 may 2005 martin c rinard pedro c diniz elimin synchron bottleneck use adapt replic acm transact program languag system topla v25 n3 p316359 may martin c rinard pedro c diniz commut analysi new analysi techniqu parallel compil acm transact program languag system topla v19 n6 p942991 nov 1997 g vranes michael stumm leo budin analyt predict perform cach coher protocol ieee transact comput v46 n11 p11551173 novemb 1997 michael beynon chialin chang umit catalyurek tahsin kurc alan sussman henriqu andrad renato ferreira joel saltz process largescal multidimension data parallel distribut environ parallel comput v28 n5 p827859 may 2002 radu rugina martin c rinard symbol bound analysi pointer array indic access memori region acm transact program languag system topla v27 n2 p185235 march 2005 mari w hall saman p amarasingh brian r murphi shihwei liao monica lam interprocedur parallel analysi suif acm transact program languag system topla v27 n4 p662731 juli 2005