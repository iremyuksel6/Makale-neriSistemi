objectori framework block precondit gener softwar precondit iter solut linear system greatli lag behind literatur partli specif problem specif matrix precondition data structur order solv effici ie multipl implement precondition special data structur requir articl present framework support precondit variou possibl userdefin data structur matric partit block main idea defin data structur block upper layer softwar use block transpar data structur transpar accomplish use objectori languag thu variou precondition block relax blockincomplet factor need defin work block type addit possibl transpar interchang variou approxim exact techniqu invert pivot block solv system whose coeffici matric diagon block lead rich varieti precondition select oper block perform optim librari fundament data type comparison optim fortran 77 code workstat cray supercomput show framework approach effici fortran 77 long suitabl block size block type chosen b introduct iter solut linear system precondition often use transform system one better converg properti exampl leftprecondit case gamma1 refer precondit oper matrix gener sequenc oper somehow approxim effect gamma1 vector unfortun gener softwar precondit serious lag behind method publish literatur part reason mani method gener applic robust gener problem special need specif inform eg gener direct flow fluid simul provid gener set anoth reason one deal articl specif linear system need specif matrix precondition data structur order solv effici ie need multipl implement precondition special data structur exampl finit element applic diagon block particular fix spars structur block ssor precondition need invert diagon block use algorithm suit structur block ssor code treat diagon block gener way ideal problem encount linear system differ applic need determin suitabl precondit strategi iter solut rather code precondition individu take advantag structur appli cation better framework softwar reus also wide rang precondit avail choos method match difficulti problem comput resourc avail articl present framework support precondit variou possibl userdefin data structur matric partit block main idea defin data structur call block type block upper layer softwar use block transpar data struc ture thu variou precondition block relax block incomplet need defin work block type precondition call global precondition reason soon becom appar code precondition almost readabl code pointwis counterpart new global precondition ad fashion global precondition need method call local precondition approxim exactli invert pivot block solv system whose coeffici matric diagon block exampl block store spars format might objectori block precondit delta 3 vert exactli approxim invers might comput design permit varieti invers solut techniqu defin block type transpar block type local precondition implement polymorph objectori languag framework call current implement block incomplet factor block relax global precondition dens spars block type varieti local precondition block type user bpkit either use block type avail add block type local precondition appropri applic user may also defin new global precondition take advantag exist block type local precondition thu bpkit intend complet librari softwar rather framework softwar special rel gener compon appropri make comment use block precondit mani linear system engin applic aris discret coupl partial differenti equat block system may impos order togeth equat unknown singl grid point subdomain first case block usual dens latter case usual spars experiment test suggest advantag precondit exploit block structur matrix chow saad 1997 fan et al 1996 jone plassmann 1995 kolotilina et al 1991 rel robust block precondit come partli abl solv accur strong coupl within block comput point view block matrix techniqu effici cach hierarch memori architectur better data local dens block case block matrix data structur also requir less storag block data structur also amen graphbas reorder block scale approxim also use diagon pivot block ie approxim local precondition use techniqu specif call twolevel precondition kolotilina yeremin 1986 offer middleground accuraci simpler comput begin underwood 1976 axelsson et al 1984 concu et al 1985 decad ago precondition motiv analyz case block tridiagon incomplet factor combin sever type approxim invers recent reach certain matur implement method howev flexibl often code particular block size invers techniqu almost alway code dens block softwar framework present deriv flexibl use objectori languag chose use c stroustrup 1991 real 64bit arithmet objectori languag also appropri framework comput effici sinc oper involv block perform code employ fundament type optim fortran 77 librari level 3 bla dongarra et al 1990 lapack demmel 1989 spars bla toolkit carney et al 1994 token user implement block type local precondition may practic languag long languag link c compil bpkit also interfac fortran 77 user chow heroux bpkit avail httpwwwcsumneduchowbpkithtml c effort numer solut linear equat includ lapack dongarra et al 1993 dens system diffpack bruaset langtangen 1997 isi clay 1997 sparselib iml dongarra et al 1994 spars system also possibl use objectori style languag eijkhout 1996 machiel devil 1997 smith et al 1995 section 2 discuss variou issu aris design interfac block precondit precondit iter method gener describ specif block matrix global local precondition interfac iter method fortran 77 interfac section 3 describ intern design bpkit includ polymorph oper block need global precondition section 4 present result numer test includ comparison optim fortran 77 code section 5 contain conclud remark 2 interfac block precondit attempt gener defin interfac allow extens function attempt accept preced overlap relat softwar particularli interfac iter method concret describ sever method use numer test section 2 bring light variou issu softwar design precondit iter method 21 block matric matrix partit block call block matrix although bpkit storag scheme may use store block zero locat block within block matrix must still defin block matrix class data type avail bpkit call blockmat contain pointer block block matrix pointer row block block row store contigu addit pointer first pointer block row analog compress spars row data structur saad 1990 pointwis matric pointer point block instead scalar entri global precondition bpkit assum blockmat class use possibl user design new block matrix class code new global precondition problem still use block type local precondition bpkit block matrix data structur describ bpkit provid convers routin data structur harwellbo format duff et al 1989 one convers routin block type eg one routin convert harwellbo matrix block matrix whose block dens howev routin provid illustr purpos practic user matrix alreadi block form ie nonzero entri block store contigu usual easili convert user directli blockmat form gener convers routin allow two level block mani prob lem particularli linear system aris discret coupl partial differenti equat block may impos order togeth equa objectori block precondit delta 5 tion unknown singl grid point subdomain latter block produc coarsegrain block smaller nest block call finegrain block figur 1 show block matrix dimens 24 coars block dimens 6 fine block dimens 2 fig 1 block matrix coars fine block block bpkit coars block inform fine block also provid convers routin may desir store block coars block block structur ex ampl variabl block row vbr saad 1990 storag scheme store coars block dens fine block reduc space optim matrixvector product triangular solv kernel vbr block data structur provid spars bla toolkit carney et al 1994 remington pozo 1996 local precondition block oper howev defin fine block ie two level local precondition appar use small coars block degrad comput perform due overhead procedur call larger block give better comput effici converg rate precondit iter method comput larg dens block vector articl rare need mention fine block thu refer block distinct normal mean coars block concret give exampl convers routin call block matrix defin statement blockmat bhbfile 6 dens 6 delta e chow heroux defin b squar block matrix block dimens 6 block store format indic dens c enumer type block type implement csr store block compress spars row format matrix read file hbfile must encod standard harwellbo format duff et al 1989 dimens matrix need specifi declar sinc store within file specifi variabl block partit block differ size interfac avail use vector defin coars fine partit 22 specifi precondit precondit block matrix specifi choos 1 global precondition 2 local precondition diagon pivot block exactli approxim invert block solv correspond set equat exampl fulli defin convent block jacobi precondit one must specifi global precondition block jacobi local precondition lu factor addit block size matrix role determin effect precondit one extrem block size one precondit entir determin global precondition extrem one block precondit entir determin local precondition block size parameter effect cost select local global precondition best method like somewher two extrem exampl suppos symmetr success overrelax ssor use global precondition complet lu factor use local precondi tioner linear system difficult solv ssor may use small block size challeng system larger block size may use give better approxim origin matrix extrem matrix may treat singl block method equival lu factor global precondition specifi simpl form declar case block ssor declar two function use specifi local precondition provid paramet global precondition factor block msetupb 05 3 bssoromega05 iterations3 b block matrix defin section 21 setup function provid real data precondition perform comput necessari set global precondition exampl comput lu factor case therefor localprecon must call setup setup function must call local precondition chang interfac local precondition specifi diagon block objectori block precondit delta 7 gener howev local precondition requir applic differ variabl eg veloc pressur variabl fluid simul may block togeth may make sens write special global precondition interfac allow differ local precondition specifi block 221 global precondition global precondition implement bpkit list tabl 1 along argument setup function default argument valu gener refer work describ global precondition mani local precondition describ later axelsson 1994 barrett et al 1994 saad 1995 see also bpkit refer manual chow heroux 1996 briefli specifi precondition make comment may appli tabl 1 global precondition setup argument none level btif none bjacobi bsor bssor block version diagon success overrelax ation symmetr success overrelax precondition biluk block version levelbas incomplet lu ilu factor btif incomplet factor block tridiagon matric precondition matrix often express anoth matrix somehow approxim howev need explicitli form instead oper gamma1 vector requir oper call precondit oper applic precondition iter method base biorthogon transpos precondit oper gammat also need also possibl appli precondition split fashion precondition factor form exampl factor lu precondit matrix l oper l gamma1 u gamma1 vector requir mani precondition express factor form consid split block matrix da block diagon gammal strictli lower block triangular part gammau strictli upper part block ssor precondition case one iter defin chow heroux scale factor 12gamma import iter method scale invari use precondition relax paramet usual chosen 1 sinc select valu difficult howev one iter use matrix far symmetr posit definit underrelax may necessari prevent diverg also simpler block sor precondition one iter may prefer block ssor nonsymmetr k iter block use precondition form although implement way instead precondition appli vector v perform k sor iter system start zero vector level0 block ilu precondition certain structur matric includ block 5point matric written similar form call gener block ssor form block diagon matrix result incomplet factor gener howev levelbas block ilu precondition comput perform gaussian elimin neglect element factor fall predetermin sparsiti pattern levelbas ilu precondition much accur relax precondition gener spars matric storag cost least origin matrix incomplet factor block tridiagon matric popular certain structur matric block band structur special case gener block ssor form thu sequenc diagon block need comput store block partit may along line 2d grid along plane 3d grid gener stripe partit yield block tridiagon matrix inversefre form block tridiagon factor block diagon matrix whose block defin recurr start inversefre form requir matrixvector multipl precondit oper howev block typic larg approxim invers use place exact invers equat make factor incomplet mani techniqu comput approxim invers avail chow saad 1998 222 local precondition local precondition either explicit implicit depend whether approxim invers block explicitli form exampl implicit local precondition lu factor objectori block precondit delta 9 global precondition involv incomplet factor requir invers pivot block larg block size use approxim exact dens invers usual requir larg amount storag comput thu spars approxim invers use case implicit local precondition produc invers usual dens therefor usual comput use block incomplet factor use implicit local precondition disallow within bpkit also appli rule small block size sinc dens exact invers usual effici case note explicit local precondition lp invers csr block type meant use test purpos also exact factor sought usual effici use lu factor whole matrix global precondition involv block relax may use either explicit implicit local precondition usual implicit one use explicit local precondition appropri block relax block small local precondition also differenti type block oper local precondition exist block type incomplet factor exampl meaning spars type thu local precondition must chosen match type block bpkit requir user awar restrict two paragraph select local precondition due dynam bind c virtual function violat restrict detect runtim tabl 2 list local precondition implement along localprecon argument block type whether local precondition explicit implicit contrast setup function localprecon take default argument includ explicit exact invers local precondition csr format comparison purpos would ineffici use block tridiagon incomplet factor exampl tabl 2 local precondition localprecon argument block type explimpl lp lu none dens implicit lp invers none dens explicit lp svd alpha1 alpha2 dens explicit lp lu none csr implicit lp invers none csr explicit lp ilut lfil threshold csr implicit lp apinv trunc semibw csr explicit lp apinv band semibw csr explicit lp apinv0 none csr explicit lp apinv lfil csr explicit lp diag none csr explicit lp tridiag none csr implicit iter csr implicit iter csr implicit lp gmre restart toler csr implicit lp lu lu factor pivot lp invers exact invers com chow heroux pute via lu factor pivot lp riluk levelbas relax incomplet lu factor lp ilut thresholdbas ilu control number fillin saad 1994 may better indefinit block local precondit prefix lp apinv new approxim invers techniqu see chow saad 1998 chow heroux 1996 detail lp diag diagon approxim invers use diagon origin block lp tridiag tridiagon implicit approxim ignor element outsid tridiagon band origin block lp svd use singular valu decomposit produc dens approxim invers sigma sigma singular valu threshold ff 1 constant ff 2 plu factor ff 1 largest singular valu oe 1 may produc stabl incomplet factor mani block invert close singular yeremin 1995 lp sor lp ssor lp gmre iter method use local precondition 23 interfac iter method objectori precondit iter method requir matrix precondition object defin small number oper bpkit oper defin polymorph list tabl 3 left right precondit function appli applyt may use appli precondit oper gamma1 transpos vector split also call twosid symmetr precondit use applyl applyr appli left right part split precondition respect incomplet factor lu applyl l gamma1 oper applyr anticip possibl function applyc function defin combin matrixprecondition oper use exampl implement eisenstat trick eisenstat 1981 eisenstat trick use flexibl precondit describ end section right precondition appli also need use two function list matrix member function return row column dimens matrix use iter method code help prealloc workspac need oper tabl 3 may defin matrix precondition object mani iter method requir oper gmre iter method exampl requir transpos oper relax precondition usual defin split oper case violat objectori program paradigm give parent class special children eg specif precondition may defin applyl although gener precondition seen section 32 argument list function tabl 3 use fundament data type iter method code forc adopt particular data structur vector interfac use block vector support iter method use multipl righthand side implement oper use level 3 bla whenev possibl interfac follow form void multint nr int nc const doubl u int ldu doubl v int ldv const objectori block precondit delta 11 tabl 3 oper requir iter method matrix oper mult matrixvector product tran mult transpos matrixvector product precondition oper appli appli precondition applyt appli transpos precondition applyl appli left part split precondition applyr appli right part split precondition applyc appli combin matrixprecondition oper applyct transpos nr nc row column dimens input block vector u v array contain valu input output vector respec tive ldu ldv lead dimens respect array precondition oper defin const function case precondition object need chang state iter progress spectral inform reveal exampl nonconst oper use precondit flexibl iter method fgmre saad 1993 must use bpkit aris whenev gmre use local precondition user may wish write advanc precondition work iter method chang exampl lack converg simpl way enhanc robust iter method case iter method written class function whose class also provid inform converg histori possibl approxim spectral inform wu li 1995 24 fortran 77 interfac mani scientif comput user unfamiliar c usual possibl howev provid interfac callabl languag bpkit provid objectori type fortran 77 interfac object creat pointer pass function fortran 77 integ consid follow code excerpt paramet import call blockmatrixbmat n ja ia numblockrow partit btype call preconditionerprecon bmat bjacobi 0d0 0d0 lplu 0d0 0d0 call flexgmresbmat sol rh precon 20 600 1d8 call blockmatrix creat block matrix compress spars row data structur given number argument wrapper function actual written c argument avail fortran 77 pro gram integ bmat actual pointer block matrix object c fortran 77 program meant interpret variabl pass chow heroux function precondition defin block precondition number argument flexgmr solv linear system use flexibl gmre similarli precon pointer precondition object constant paramet bjacobi lp lu use specifi block jacobi precondition use lu factor solv diagon block matrixvector product precondition oper tabl 3 also wrapper function make possibl use bpkit iter solver written fortran 77 also anoth motiv use fundament type specifi vector interfac oper mult see section 23 call fortran 77 c also possibl done bpkit call underli librari bla bpkit illustr abl mix use differ languag 3 local matrix object block matrix may contain block one type best choic type block depend mostli structur matrix may also depend propos algorithm comput architectur exampl matrix reorder diagon block diagon diagon storag scheme diagon block best invers block would automat use appropri algorithm diagon block type local precondition would ad user handl differ block type way instanc type implement c polymorph object ie set relat object whose function call without know exact type object block type deriv local matrix class call localmat class defin common interfac block type global precondition refer localmat object localmat function call appropri code execut depend actual type localmat object eg dens csr addit block type varieti local precondition explicit implicit local precondition need transpar sinc exampl either use block ssor thu type precondition deriv base class particular local precondition given block type deriv base class block type eg lp svd local precondition dens type deriv dens block type give user flexibl treat explicit local precondition regular block implicit local precondition deriv separ logic relat explicit local precondition block oper appli explicit precondition also appli local precondition howev mani oper ineffici local precondition use disallow prevent improp usag implicit precondition deriv separ explicit precondition similar point view global precondition localmat hierarchi illustr figur 2 show deriv block type subsequ deriv local precondition localmat class form kernel bpkit allow global precondition implement without knowledg type block local precondition use user may also add kernel deriv specif class objectori block precondit delta 13 csr fig 2 localmat hierarchi challeng design localmat class determin oper requir implement block precondition give oper semant allow effici implement possibl block type oper implement c virtual function follow subsect describ oper 31 alloc storag import differ dens spars block storag requir spars block alway known beforehand thu order treat dens spars block way storag alloc block requir optim known dens block use eg convers spars matrix block matrix dens block storag may alloc beforehand user function provid set data pointer block object thu possibl alloc contigu storag array dens block 32 local matrix function tabl 4 function localmat object amat amat mat addb c alpha amat mat multb c alpha beta amat amat tran vec multb c alpha beta amat vec solveb c amat tran vec solveb c 14 delta e chow heroux tabl 4 list function determin requir implement block precondition list tabl 1 function invok block object repres b c block type b c compon block vector object ff fi scalar default valu ff 1 fi 0 createempti creat empti block 0 0 dimens class function use construct block precondition without know type block use settozerodim1 dim2 set zero reset dimens necessari oper combin createempti alway necessari zero block creat zero block could rel expens block type copi argument block invok block origin data held invok block releas new block differ size alloc space resiz createinvlprecon provid common interfac creat local precondition lprecon type describ local precondition argument tabl 2 exact approxim invers explicit implicit gener createempti createinv function creat new object real data space function return pointer new object emphas point overload arithmet oper block local precondition sacrif sinc chain oper would ineffici implement sequenc elementari oper addit oper difficult implement without extra memori copi first store result temporari result copi oper function found use block precondition exampl use btif use biluk function use exampl matrixvector product triangular solv oper note particular mat tran mat mult use function defin note local precondition object also inherit function although need object implicit local precondition matrix form oper addit mat mat add make sens block local precondition creat solv system block mat vec solv allow give parent class special deriv class tabl 5 indic function allow error condit rais runtim function use incorrectli given oper onestep block sor code could implement shown ap pointer block matrix object store block structur csr format ia array store block row pointer ja array store block column indic pointer diagon element idiag invers diagon element diag comput call setup v block vector object allow block vector access individu entri rest code selfexplanatori 1 i0 iapnumrow objectori block precondit delta 15 tabl 5 type object may use function explicit implicit coars local local function block precon precon createempti matcopi mat tran mat mat add mat mat mult mat vec mult mat tran vec mult mat vec solv mat tran vec solv 2 3 jiai jidiagi j 4 5 6 7 apvaljmatvecmultvjaj vi omega 10 8 9 10 diagimatvecsolvevi vi 11 block matrix mix differ block type must use care first restrict differ block type section 222 must violat second unless defin arithmet oper block differ type incomplet factor precondition use main design altern creat block matrix class block type class would polymorph defin set common oper precondition may use manipul block signific advantag design imposs use local precondition wrong type eg use incomplet factor dens block disadvantag differ block type eg special type creat particular applic use within block matrix anoth altern implement metamatric ie block nest cursiv would complic howev user specifi type matric level local precondition could use addit littl need complex actual applic twolevel design coars fine block describ section 21 suffici 4 numer test numer test carri matric list tabl 6 sherman1 reservoir simul matrix grid one unknown per grid point simpl symmetr problem solv use partit chow heroux plane wigto966 euler equat model suppli larri wigton boe fidap019 model axisymmetr 2d develop pipe flow fullycoupl navierstok equat use twoequat kffl model turbul bartht1a bartht2a matric suppli tim barth nasa ame 2d high reynold number aerofoil problem 1equat turbul model bartht2a model solv precondition base less accur sparser bartht1a model tabl 6 test matric list dimens number nonzero matrix n nonz tabl 7 9 show result sherman1 block relax incomplet factor global precondition use variou local precondition argument given global local precondition tabl correspond display tabl 1 2 respect block size 100 use sinc matrix block tridiagon biluk btif equival tabl show number step gmre fgmre appropri requir reduc residu norm factor 10 gamma8 dagger use indic achiev 600 step right precondit 20 krylov basi vector zero initi guess use righthand side provid matrix sinc local precondition differ cost tabl 8 9 show cpu time system user time bssor13 btif test run one processor sun sparcstat 10 particular problem choic partit ilu local precondition requir least total cpu time bssor13 btif exact solv effici ie precondition exact solv tabl 7 number gmre step solv sherman1 problem block relax global precondition variou local precondition lp riluk00 93 71 53 402 48 objectori block precondit delta 17 tabl 8 number gmre step time solv sherman1 problem variou local precondition precon solv total lp ilut20 44 003 173 176 tabl 9 number gmre step time solv sherman1 problem block incomplet factor variou local precondition precon solv total tabl show number gmre step bartht2a matrix random righthand side use initi guess zero gmre toler 10 gamma8 50 krylov basi vector use tabl 10 block incomplet factor use global precondition lu factor use local precondition tabl 11 block ssor one iter use global precondition level3 ilu use local precondition tabl 10 number gmre step solv bartht2a problem biluklp lu block biluk level tabl 12 13 show result wigto996 use block incomplet factor izat righthand side vector one gmre toler paramet previou experi failur tabl 12 due inaccuraci low fill level instabl high level tabl 13 lp svd010 use local precondition gave chow heroux tabl 11 number gmre step solv bartht2a problem block gmre size step best result lp svd010 indic singular valu pivot block threshold 01 time largest singular valu tabl 12 number gmre step solv wigto966 problem biluklp invers block biluk level tabl 13 number gmre step solv wigto966 problem block biluk level show result block tridiagon incomplet factor precondition use gener spars approxim invers matrix fidap019 partit block tridiagon system use constant block size 161 last block size 91 sinc matrix aris finit element problem care select partit could yield better result row system scale 2norm column scale similarli sinc matrix contain differ equat variabl krylov subspac size 50 gmre use righthand side construct solut vector one compar result pair globalloc precondition biluk0lp svd050 use block size 5 lp svd050 gave best result sever trial tabl 14 show number gmre step converg time set precondition iter number nonzero precondition experi carri one processor sun sparcstat 10 time show combin btif global precondition apinv local precondition compar biluk0lp svd050 use much less memori sinc approxim invers pivot block need store although actual number nonzero matrix 259 879 39 355 block nonzero requir biluk therefor almost million objectori block precondit delta 19 tabl 14 test result fidap019 problem gmre cpu time step precon solv total precon entri need store apinv method produc approxim invers sparser origin pivot block see chow saad 1998 detail often heat debat use c scientif comput ideal c fortran 77 program code similarli perform similarli howev use objectori featur c make program flexibl maintain research usual encount 10 percent perform penalti jiang forsyth 1995 optim kernel bla call c perform penalti small larg problem larger fraction time spent kernel sinc c fortran 77 program usual code differ practic comparison made gener code bpkit compar special fortran 77 code compar bpkit optim block ssor precondition gmre acceler code perform block relax form ii r block row ii ith diagon block ith block column x ith block current solut r current residu vector notic updat residu vector fast store spars column block sinc bpkit store matrix block flexibl interest see perform penalti would case tabl 15 16 show time block ssor sun sparcstat 10 cray c90 supercomput wigto966 matrix case righthand side construct solut vector one paramet program optim highest optim level clock use measur cpu time user system c program etim timef use measur time fortran 77 program sun cray comput respect one step block ssor use test local precondition exact lu factor result shown larg rang block size case bpkit dens csr storag scheme block last column tabl give averag time perform one iter gmre result show special fortran 77 code better perform wide rang block size expect updat residu major comput affect block chow heroux dens block use bpkit competit cray use larg block size 128 block size contain mani zero entri treat gener nonzero entri dens storag scheme use howev vector cray make oper larg dens block much effici spars block use bpkit competit workstat moder block size 8 16 oper smaller spars block ineffici larger block impli larger lu factor local precondition comparison use block ssor dramat sinc two differ data structur use comparison levelbas block ilu c fortran 77 show small differ perform sinc data structur use similar jiang forsyth 1995 conclus type size block must chosen care bpkit attain high perform particular machin type size block also chosen conjunct requir precondit algorithm block structur matrix base experi tabl 17 give idea approxim block size use bpkit given constraint 5 conclud remark articl describ objectori framework block precondit polymorph use handl differ block type differ local precon dition block type local precondition form kernel block precondition built block precondition written syntax compar nonblock precondition work matric contain block type bpkit easili extens objectori code would al low distinguish explicit implicit local precondition deduc oper semant use polymorph manipul block time special optim fortran 77 code workstat cray supercomput show framework approach effici code long suitabl block size block type chosen believ found suitabl compromis fortran 77like perform c flexibl signific contribut bpkit collect highqual precondition common concis interfac block precondition effici robust nonblock counterpart block size parameter local global method valuabl compromis accuraci cost combin effect two method combin local global precondition lead varieti use method may applic differ circumst acknowledg wish thank yousef saad kesheng wu andrew chapman code help discuss also wish thank larri wigton tim barth provid test matric tim peck help us edit articl benefit substanti comment suggest one anonym refere grate time patienc objectori block precondit delta 21 tabl 15 time special fortran 77 program block gmre time size step precon solv total averag bpkit dens block block gmre time size step precon solv total averag 128 212 366 55905 56271 26543 bpkit spars block block gmre time size step precon solv total averag 128 212 442 16258 167 22 delta e chow heroux tabl 16 wigto966 bssor051lp lu cray c90 time special fortran 77 program block gmre time size step precon solv total averag bpkit dens block block gmre time size step precon solv total averag bpkit spars block block gmre time size step precon solv total averag 128 212 539 13292 13831 06524 tabl 17 recommend block size block type sun cray csr objectori block precondit delta 23 r iter solut method version incomplet blockmatrix factor iter method templat solut linear system build block iter method revis propos spars bla toolkit bpkit block precondit toolkit approxim invers techniqu blockpartit trice approxim invers precondition via sparsespars iter ation block precondit conjug gradient method lapack portabl linear algebra librari supercomput ieee control system societi workshop computeraid control system design decemb year1989year set level 3 basic linear algebra subprogram spars matrix librari c object orient design high perform linear algebra distribut memori architectur spars matrix test problem parpr parallel precondition packag effici implement class precondit conjug gradient method perform issu iter solver devic simul robust linear nonlinear strategi solut transon euler equat user manual scalabl librari softwar parallel solut spars linear system block ssor precon dition highord 3d fe system famili twolevel precondit incomplet block factor type fortran 90 entri objectori program solut partial differenti equat sparskit basic tool kit spars matrix comput flexibl innerout precondit gmre algorithm ilut dual threshold incomplet ilu factor iter method spars linear system petsc 20 user manual approxim factor procedur base block choleski decomposit use conjug gradient method bkat objectori block krylov acceler toolkit present cray research privat commun tr spars matrix test problem set level 3 basic linear algebra subprogram c program languag 2nd ed flexibl innerout precondit gmre algorithm iter solut method perform issu iter solver devic simul fortran 90 objectori design precondit iter method diffpack approxim invers techniqu blockpartit matric approxim invers precondition via sparsespars iter iter method spars linear system ctr michael gertz stephen j wright objectori softwar quadrat program acm transact mathemat softwar tom v29 n1 p5881 march iain duff michael heroux roldan pozo overview spars basic linear algebra subprogram new standard bla technic forum acm transact mathemat softwar tom v28 n2 p239267 june 2002 marzio sala objectori framework develop scalabl parallel multilevel precondition acm transact mathemat softwar tom v32 n3 p396416 septemb 2006 glen hansen andrew zardecki doran green randi bo finit element method unstructur grid smooth journal comput physic v194 n2 p611631 march 2004 mikel lujn l freeman john r gurd oolala object orient analysi design numer linear algebra acm sigplan notic v35 n10 p229252 oct 2000 glen hansen andrew zardecki doran green randi bo finit element method threedimension unstructur grid smooth journal comput physic v202 n1 p281297 januari 2005 michel benzi precondit techniqu larg linear system survey journal comput physic v182 n2 p418477 novemb 2002