auction algorithm shortest hyperpath problem auctionreduct algorithm strongli polynomi version auction method shortest path problem paper extend auctionreduct algorithm differ type shortest hyperpath problem direct hypergraph result preliminari comput experi show auctionreduct method compar known method specif class hypergraph b introduct shortest hyperpath problem extens direct hypergraph 11 classic shortest path problem spt direct graph though pervas spt shortest hyperpath sever relev applic particular core traffic assign algorithm transit network 13 14 18 shortest hyperpath model construct spt problem stochast timedepend network 17 product plan assembl line 12 moreov shortest hyperpath algorithm use build block enum algorithm hard combinatori problem 10 consequ grow interest effici shortest hyperpath algorithm provid motiv investig known method 11 15 theoret practic point view develop new one auction algorithm first propos bertseka 1 2 assign problem later extend gener transport problem 5 6 survey auction algorithm network optim problem contain 4 chapter 4 auction algorithm shortest path problem graph propos 3 singleorigin singledestin case method view applic auction method specif construct assign problem finit termin procedur establish furthermor algorithm dual coordin ascent method strongli polynomi version auction method propos pallottino scutella 16 defin prune procedur reduc graph shortest path tree improv method given 7 prune method strengthen structur reduc graph exploit obtain better time complex variant auction algorithm prune propos 8 paper devis auction method shortest hyperpath nonneg hyperarc weight slightli modifi spt algorithm given 7 method tailor solv sever type shortest hyperpath problem variou case provid worst case complex bound final report result preliminari comput experi section 2 give basic definit hypergraph shortest hyper path propos auction method shortest hyperpath present section 3 comput result conclus present section 4 5 respect shortest hyperpath direct hypergraph direct hypergraph h pair v e v set node e set direct hyperarc hyperarc pair tail e 2 v n e head detail introduct direct hypergraph found 11 gener definit hypergraph introduc particular class hypergraph consid paper call bgraph 11 size jej hyperarc e number node contain tail head hyperarc e arc 2 proper hyperarc jej 2 denot h number arc proper hyperarc j size h sum cardin hyperarc given node u forward star u fsu set hyperarc e backward star u bsu set hyperarc e path p st length q hypergraph e sequenc st node origin destin path p st respect say node connect node h path p st exist h 2 e 1 path p st cycl path cyclefre contain subpath cycl given hypergraph e two node 2 v hyperpath st minim hypergraph respect delet node hyperarc h 2 3 connect h cyclefre path observ exist uniqu hyperarc e 2 e predecessor hyperarc u denot e u say node hyperconnect h exist hyperpath h given hyperarc say hyperarc r contain reduct ha r note contain r strictli contain r given u 2 denot anu reduct obtain delet u say hypergraph full contain possibl reduct proper hyperarc full hypergraph repres support hypergraph h obtain delet strictli contain hyperarc convers given hypergraph h obtain correspond full hypergraph h f ad strictli contain hyperarc 21 shortest hyperpath weight hypergraph hyperarc e assign nonneg real weight weight hyperpath weight hypergraph defin sever way known definit lead intract shortest hyperpath problem 9 restrict definit known tractabl 11 weight function node function given hyperpath st assign valu w u node depend weight hyperarc valu w weight chosen weight function addit weight function satisfi properti w function predecessor e u formal addit weight function defin mean follow recurs equat f e nondecreas function weight node e clearli mani differ addit weight function defin see 11 consid first valu function obtain defin f e 1 follow minimum valu shortest hyperpath problem consist find set minimum valu hyperpath origin node node u 6 hyperconnect denot v u minimum valu hyperpath su h assum u hyperconnect distanc function obtain 1 defin f e follow minimum distanc problem ask minimum distanc hyperpath origin denot vector minimum distanc u hyperconnect sinc arc weight nonneg minimum valu minimum distanc problem solv effici procedur sbt 11 comput analysi sever variant sbt found 15 211 minimum time problem transit hypergraph problem find passeng expect travel time core sever urban transit network model problem formul term hyper path transit network 13 fgraph 11 14 introduc time weight function transit hypergraph defin particular shortest hyperpath problem though use differ slightli gener terminolog equival formul found 13 14 transit hypergraph weight support hypergraph e posit paramet oe u associ node u 2 v let h full hypergraph repres h consid e contain proper hyperarc 2 h time weight function obtain 1 defin weight function f e follow oe u practic f e weight averag weight oe valu w delta e invers sum weight oe e arc correspond arc 2 e function f e defin way give f howev case wa nonneg valu minimum time problem consist find minimum time hyperpath given origin full hypergraph h f note h f may consider larger support h practic solv minimum time problem effici requir work directli h aim follow observ denot e vector minimum time hyperconnect h f e 2 oe u consid proper hyperarc 2 e let ra set reduct denot ea reduct yield minimum time te follow relat hold 13 proposit 6 consid node increas order e ie let reduct g follow 2 ea h practic work support hypergraph requir find hyperarc ea without consid whole set reduct inde accord previou observ done process node order u comput valu ta techniqu use comput expect travel time effici 13 14 adopt auction algorithm minimum time problem 212 reduct shortest hyperpath hyperarc reduct oper proper hyperarc consist replac hyperarc r contain return reduc hypergraph clearli hypergraph weight nonneg weight wa r must assign r follow proposit show suitabl choos weight r reduct oper modifi optim solut shortest hyperpath problem proof rather straightforward omit suppos given weight hypergraph h correspond vector optim solut v valu distanc weight function given proper hyperarc u 2 consid replac r n u proposit 21 wa r vector optim valu reduc hypergraph proposit 22 du vector optim distanc reduc hypergraph suppos given transit hypergraph h correspond full hypergraph optimum time e let e proper hyperarc h f te eu u 2 e consid replac e arc e proposit 23 r vector optim time reduc full hypergraph auction algorithm shortest hyperpath section propos auction method minimum valu problem discuss adapt weight function introduc ap proach briefli recal relev featur auction algorithm spt reader refer cite literatur detail auction algorithm shortest path problem graph maintain path p candid path start origin set dual node price p satisfi follow complementari slack cs condit cost arc j algorithm consist three basic oper path extens path contract dual price rais iter candid path p possibl extend ad new node end path without violat 3 extens possibl dual price termin node p rais 6 path contract delet node singleorigin singledestin case algorithm termin destin node reach sever variant devis also multipledestin case consid case nonneg cost dual price initi set zero first scan node ie node becom last node p first time optim distanc node determin inde equal ps consequ sinc ps never decreas algorithm sequenc first scan oper rank node increas order distanc origin base properti auctionreduct method 16 introduc follow reduct oper first scan node delet arc enter except last arc p mean reduct oper graph transform shortest path tree strongli polynomi time complex obtain reduct oper includ delet node propos 7 improv complex bound follow observ core auction shortest hyperpath method observ 31 accord definit valu distanc time weight function arc fug v f word weight function defin standard spt problem hypergraph direct graph suggest follow techniqu ffl appli auctionreduct spt algorithm arc hypergraph ffl first scan node appli hyperarc reduct oper accord properti 21 23 possibl gener new arc note hypergraph modifi algorithm step appli current hypergraph return previou reduct oper practic execut proper hyperarc lay yet explor part hypergraph consid replac arc result success reduct auction algorithm minimum valu problem describ procedur minvalu remark procedur minvalu appli graph becom auction algorithm graph reduct describ 7 node predecessor predi give last arc best si path determin far notat conveni consid predi set initi label li minimum si hyperpath valu determin far becom optimum si hyperpath valu v first scan node denot fsa fsh arc proper hyperarc fsi respect thu replac hyperarc reduct ani denot note may arc last node p denot lastp execut algorithm contain graph direct graph defin node arc current hypergraph proposit 31 step algorithm node 2 va give shortest si path length current contain graph ha proof properti follow correct auction algorithm spt observ new arc j creat first scan node theorem 31 vector v determin algorithm give minimum hy perpath valu origin hypergraph proof theorem prove induct consid node order first scan increas order valu v delta claim clearli true begin node assign v assum previous assign v correct first scan node follow proposit 31 li lower bound length path ha node node j therefor current hypergraph valu hyperpath contain proper hyperarc less li impli correct consequ step 1c chang optim solut proposit 21 31 weight function auction algorithm minimum valu easili adapt minimum distanc problem aim suffic skip weight updat wa wa v step 1c follow properti 22 sinc replac node j 2 n end algorithm vector optim distanc proof correct distanc function similar one theorem 31 procedur minvalueh u 2 v predu pu 0 v u lu 1 step first scan set valu v li b delet c reduc hyperarc 2 fsh n wa wa updat label delet arc otherwis delet contract expans fsa ig go step 4 aij2fsa go step 1 step 4 expans expand p node j aij2fsa go step 1 situat slightli complex travel time recal goal work support transit hypergraph thu must deal correspond full hypergraph implicitli aim replac hyperarc reduct arc insert oper describ consid proper hyperarc support know suffic consid k reduct see section 211 first scan node u comput valu ta ta gener arc accord proposit 23 otherwis ie igamma1 reduct ea yield minimum time delet necessari remov first scan node u k conclus proper hyperarc jt aj arc gener order comput ta effici proper hyperarc support hypergraph keep two valu initi set 0 u2t u2t first scan u ta also keep counter ka visit node rewrit step 1c follow step 1c reduc hyperarc 2 fsh oea ka observ new arc ad use improv label ha case current predecessor predha delet step 1d therefor one arc gener belong contain graph end step 1 lemma 31 valu v delta assign first scan node correct valu v assign first scan node correct proof let set node current hypergraph whose first scan occur first scan node know give spt distanc contain graph moreov v lower bound spt distanc node u 62 consid proper hyperarc current support hyper graph reduct contain node alreadi consid algorithm possibl ad new arc moreov 2 v lower bound tea therefor v lower bound minimum time node u 62 current hypergraph thesi follow use lemma 31 proof correct auction algorithm minimum time induct theorem 31 32 comput complex auctionreduct algorithm present 7 solv spt problem graph e ojv j minfjej jv j log jv jg time easi see maximum number arc gener execut minvalu valu distanc weight function osizeh time function moreov total time spent first scan step 1 osizeh therefor state follow proposit proposit 32 run time auction shortest hyperpath algorithm log ng valu distanc time function osizeh two techniqu improv run time auctionreduct method present 7 path scan ant multipath restructur result complex ojv fact total comput time two success first scan oper ojv j clearli jv j first scan techniqu easili appli within shortest hyperpath algorithm next proposit follow proposit 33 auction shortest hyperpath algorithm path scan multipath restructur take osizehn 2 time valu distanc time function comput result section present preliminari comput result auction method shortest hyperpath problem main goal compar variant basic method complet experiment evalu auction shortest hyperpath method would requir much larger effort basic shortest hyperpath algorithm denot har implement procedur minvalu use last data structur 7 variant algorithm denot har2 make use second best devic 4 chapter 4 implement third version denot harn second best devic use node contract oper introduc node contract delet node k indegre outdegre equal one arc incid node k say replac arc j contract oper simplifi current graph may help keep current path shorter compar auction algorithm implement procedur sbt heap 11 denot sbth algorithm code c languag run ibm risc6000 p43 workstat 64m ram use aix oper system gener devis reason experiment setup shortest hyperpath trivial task sinc hypergraph show mani degre freedom graph see eg 15 restrict one weight function name distanc consid two differ hypergraph topolog random grid random hypergraph show special structur except origin distinguish node fss contain arc size proper hyperarc chosen randomli interv min max experi set jf defin five class random hypergraph differ valu proper hyperarc arc exit root weight gener randomli interv 0 1 remain arc weight belong 1 choic motiv attempt increas relev hyperarc result random hypergraph shown tabl 1 class valu ffi expect size fsu u 6 execut time given millisecond entri round averag 20 instanc 2n 25n 2n 25n 50n harn 176 123 135 150 277 tabl 1 random hypergraph grid hypergraph node arrang b theta h grid node identifi cohordin node x cohordin form level pair x x 0 h two vertic arc hyperarc connect node success level x exist hyperarc h h addit origin node arc 1 1 h gener three class grid hypergraph squar h long b ae h high h ae b paramet b h choosen order number node three class hyperarc weight lay interv vertic arc weight lay 1 2 weight arc leav lay 0 1 execut time report tabl 2 entri round averag 5 instanc time given second high squar long har 44 88 86 172 370 785 harn 44 85 86 176 370 783 sbt 222 385 118 206 65 115 tabl 2 grid hypergraph though clearli incomplet result allow us draw conclu sion concern random hypergraph auction algorithm compar standard labelset method effici class hypergraphs15 auction method becom competit densiti increas one case har2 give best result hand auction method seem suitabl larg grid hypergraph result match comput result auction method long grid graph surpris sinc auction algorithm must maintain long current path p order connect node last layer second best data structur give best result random hypergraph high grid suitabl squar long grid result surpris sinc grid hypergraph exist two hyperarc plu two vertic arc leav node conceiv good result high grid due save obtain scan origin node contrari node contract oper almost useless also grid hypergraph result rather disappoint sinc preliminari experi oper prove effect class grid graph possibl explan may follow node highest distanc tail hyperarc like highest distanc also tail hyperarc belong case hyperarc reduct may creat two arc leav node node contract appli observ may suggest guidelin improv algorithm conclus paper propos auction method shortest hyperpath problem adapt sever type weight function method deriv minor chang auctionreduct spt algorithm inde appeal featur approach sever techniqu origin develop graph could easili export hypergraph practic point view auction shortest hyperpath method compar known method least favour case one would expect behaviour dramat affect structur underli hy pergraph howev seem resembl close happen graph conclud auction shortest hyperpath method deserv inv tigat theoret practic side possibl direct could adapt variant propos literatur price rais techniqu devis 8 forwardrevers approach singleorigin singledestin case 4 chapter 4 r distribut algorithm assign problem auction algorithm distribut relax method assign problem auction algorithm shortest path linear network optim algorithm code auction algorithm minimum cost network flow problem auction algorithm transport problem polynomi auction algorithm shortest path modifi auction algorithm shortest path problem dynam mainten direct hypergraph max horn sat minimum cut problem direct hypergraph direct hypergraph applic hypergraph model algorithm assembl problem equilibrium traffic assign larg scale transit network implicit enumer hyperpath logit model transit network comput studi shortest hyperpath algo rithm strongli polynomi auction algorithm shortest path hypergraph model stochast time depend shortest path simplici decomposit method transit equilibrium assign problem tr