gener valid structur content parametr modul demonstr natur map xml element type ml modul express map induct definit common xml oper deriv modul express compos show deriv gener way valid function check xml document conform dtd document type definit one view valid assign ml type xml element valid procedur prerequisit type xml program ml map use parametr modul facil ml contriv way exampl valid wml wap markup languag document need use 36ari type constructor well higherord modul take mani 17 modul input one systemat model xml dtd modul level suggest mllike languag suitabl typesaf prototyp dtdawar xml applic b introduct motiv xml extens markup languag languag tag document structur content 2 xml document tag tree nest element xml extens xml document includ dtd doc ument type list tag element specifi tag constraint central concept document process valid xml document valid content tag constraint specifi submit intern confer function pro gram 2001 avail technic report trii 001005 institut inform scienc academia sinica taipei taiwan httpwwwiissinicaedutw comment suggest welcom dtd xml document wellform element enclos match starttag endtag wellform xml document necessarili valid follow xml document contain dtd defin two element type folder record document contain root folder element empti record element child valid xml document xml version10 folderfolderrecord element record empti dtd xml document model structur record must contain element folder empti contain anoth folder one may think model tidi bookmark file follow three element f3 valid item f1 f2 note record shorthand recordrecord tag sequenc recordfolderrecordfold exampl notwellformed simplifi discuss may say element type dtd specifi element content model ie tag constraint unambigu regular express element type name symbol content model element type specifi element sequenc allow children element natur code xml program one need map element type dtd correspond data type sourc program languag requir map content valid translat type correct program languag welltyp program alway produc valid xml element note goe beyond requir socal valid xml processor need report violat element content model input xml document need impos restrict output sever direct program languag support write xml applic classifi follow three categori adt wellform element abstract data type accompani librari routin design travers transform wellform xml element xml data assum valid separ phase valid separ issu may even requir exampl categori includ standard xml api c java languag eg document object model dom 1 combin approach write xml process function program 3 18 type translat dtd strongli type languag use xml program type system languag use emb dtd embed complet everi element type correspond data type embed languag sound express embed languag evalu valid xml element express welltyp languag exampl categori includ haxml 3 18 xmlambda 14 strongli type languag static type sound proof done type checker compil time henc typecorrect program produc invalid xml element one also use constraintbas languag logic program languag encod content model similar way 19 type translat approach complet satisfactori two reason one type translat may systemat tediou done manual inconveni code gener xml process oper need rewritten everi dtd translat differ type xml content valid check wellform xml document conform dtd gener oper nativ languag support dtd new languag design builtin xml support help build xmlrelat applic xduce function languag regular express type allow direct represent dtd process valid element express languag evalu valid xml element variabl must annot element type concept valid built languag type correct ness program typecheck compiletim xduce also provid regular express pattern help write concis xml program xduce howev current firstord monomorph languag lack languag featur eg modul system paper show use parametr modul mllike languag write xmlsupport program modul express gener express xml dtd construct provid parametr modul gener common oper includ valid function automat gener approach advantag type translat approach nativ dtd support approach without disadvantag need recod gener oper need design new languag 2 illustr exampl tidi bookmark exampl describ section 1 follow actual code write object caml specifi dtd produc valid function two element type dtd modul struct type x0 record x1 let map f0 modul struct modul modul modul tag bookmarktag modul modul tidysi contain two modul f0 f1 translat word word object caml modul languag xml element type declar folder record higherord modul alt seq star plu ideal would like defin two xml element type two mutual recurs ml modul t0 t1 follow modul object caml mllike languag support recurs modul instead use two place holder modul p0 p1 two paramet higherord modul alt seq etc use anoth higherord modul mu pronounc deriv two simultan fix point modul tidydtd contain ffl modul u defin type wellform element ffl modul v contain modul t0 t1 defin type valid folder record element ffl function valid forget provid map wellform element valid element also defin except invalid may rais function valid note follow equat alway hold forget valid sampl element f3 shown section 1 defin valid follow object caml code f3 u wellform f3 v addit valid element return valid function pars type sens substructur given specif type extract use ml patternmatch paper use exampl explain idea describ construct howev idea construct systemat appli dtd element type one need defin nari fix point modul mun take system n nari higherord modul f0 f1 produc simultan fix point definit mun symmetr similar mu later use wml markup languag wireless applic whose dtd defin 35 element type benchmark exampl show effect approach 3 genericprogrammingwithpara xml element type folder exampl translat object caml use seri type definit shown type b alt l r b type b list type plu one plu folder record folder record alt star seq folder folder record alt plu seq alt one abstract righthandsid type equat folder record two binari type constructor f0 f1 view folder record least fix point f0 f1 function folder record syntact sugar defin let folder ulist bookmarktagfold tidydtduup ulist let record ulist bookmarktagrecord tidydtduup ulist type b b alt plu seq alt type b folder folder record f0 record record folder record f1 one rewrit f0 f1 use two project function p0 p1 empti type constructor type b type b type abp1 abp0 abp1 alt star seq type point clear one program modul level defin f0 f1 two modul express use predefin set constant modul p0 p1 empti unari parametr modul star plu binari parametr modul alt seq shown figur 1 also defin map function induct xml element type defin use fix set parametr modul may say modul f0 f1 object functor categori object type constructor map type type function map map type function type function parametr modul like plu arrow functor categori ie natur transform view definit map function gener one map instanc induct index govern type express later show definit gener valu use definit valid function gener well 4 parametriccontentmodelsand simultan fix point figur modul f0 f1 defin binari type constructor two type constructor use togeth mutual defin type folder record code reproduc modul f0 modul f1 folder folder record f0t record record folder record f1t type constructor f0t f1t parametr content model sens map tupl type instanc content model exampl given type instanc folder record type express folder record f0t expand record folder record alt star seq modul type sig type b val map x b modul type modul type modul empti struct type b let map f g modul p0 struct type b let map f g modul plu struct type b one b ft b ft b let rec map f g match one one fmap f g v w modul struct type b let map f g u f1map f g v modul p1 modul star modul alt modul f0 modul f1 folder folder record f0t record record folder record f1t figur 1 induct definit xml element type use parametr modul note modul type annot often omit ted w take f2f part modul plu time expos implement modul plu annot ad clariti typecheck purpos folder folder record alt plu seq alt exactli xml content model element type folder main idea use type constructor parametr content model view xml element type simultan fix point set parametr content model viewpoint help us develop primit function abstract applic differ content model primit polymorph one primit simultan induct oper fold function later show valid procedur defin use fold function model two recurs defin xml element type two interdepend ml modul t0 t1 signatur follow modul t0 sig type x0 x1 cm val t0t t1t cm t0t val t0t t0t t1t cm modul t1 sig type x0 x1 cm val t0t t1t cm t1t val t1t t0t t1t cm type constructor x0 x1 cm parametr content model type element type function map element content model togeth defin equival note mutual defin signatur allow object caml mllike languag howev one use auxiliari type name addit type share constraint overcom problem defin higherord modul muvalid deriv modul t0 t1 given modul specifi correspond parametr content model tag set see figur 2 figur 2 modul f0 f0 input modul specifi parametr content model modul tag specifi tag set note modul return muvalid type valid element simpli defin disjoint sum type t0t type t1t also note simultan fold function type val fold b t0cm t0t t1t b function fold return two reduct function whose type t0t t1t b given two properli type induct function base whose type b t0cm b t1cm b similarli higherord modul muwf defin deriv modul wellform element see figur 3 modul muwf type constructor x0 x1 cm parametr content model wellform element defin list tag valu list type u type wellform element defin fix point parametr content model cm type note well type wellform element type defin disjoint sum u u repres element two distinct tag definit simultan fold function modul muvalid figur 3 sever function modul u2v v2u given type left undefin use specifi function valid forget function valid map wellform element valid ele ment forget invers function let us look function cm0 cm1 modul u2v first type follow val cm0 vt0t vt1t ucm vt0t vt1t vt0cm val cm1 vt0t vt1t ucm vt0t vt1t vt1cm function cm0 map wellform content whose constitut part valid element alreadi valid content function cm0 compos function vt0up one get function return valid element type vt0t result use function composit oper given two function induct base simultan fold function one deriv valid function element type vt0t vt1t modul type sig type x0 x1 val map x0 y0 x1 y1 modul type sig modul f0 fun modul f1 fun modul tag tag modul struct modul tag stag modul struct let let v0 modul struct let let v0 let fold f0 let rec t0down t1down figur 2 modul muvalid deriv element type simultan fix point set parametr content model modul struct modul list let map type let u let fold f0 let rec modul struct modul modul modul except invalid modul struct let cm0 vt0t vt1t ucm vt0t let cm1 vt0t vt1t ucm vt0t let t0 t1 uu vt0t uu ufold vt0up let ut modul struct let cm0 uu uu vt0cm let cm1 uu uu vt1cm let t0 t1 vt0t uu vt1t vfold uup let vt figur 3 modul muwf deriv type wellform element modul mu use simultan fold defin valid function note type annot function ad clariti purpos ufold vt0up recal type wellform element valid element defin follow valid function defin ufold vt0up shown figur 3 one defin function forget similar way remain shown function like cm0 cm1 defin content model shown next 5 gener valid content model recal figur 1 map function defin gener way modul signatur fun long modul gener predefin set parametr modul empti p0 p1 star etc vaildat forget function defin gener way well first defin valid function induct base valid function content model deriv automat modul express content built two remain detail first time build content model one access tag modul tag modul signatur tag defin variant data type tag element eg modul bookmarktag section 2 therefor valid forget function must resid higherord modul take tag modul input one need also maintain nullabl condit first set element tag content model nullabl accept empti element sequenc first set contain tag appear first posit valid sequenc use check content model ambigu eg first set two input modul alt overlap combin lookahead tag use implement nonbacktrack valid procedur well section 8 nullabl first gener valu modul signatur fun parametr content model consist follow compon modul type sig type x0 x1 val map x0 y0 x1 y1 val nullabl bool val first natsett modul content functor tag sig val valid x0 x1 tt list val forget x0 x1 x0 x1 tt list function valid take list tag valu turn valu content model follow remain list note type input x0 x1 tt list content model wellform element two share tag set figur 4 illustr construct show implement modul p0 star valid forget function wrap modul content definit content induct depend content modul input modul f see eg modul express modul star view constitut gener definit valid function instanc systemat gener modul express evid modul star adapt longest prefix match rule valid input element sequenc content model longest prefix match rule inde requir xml valid function modul ie empti p0 p1 plu seq alt similarli defin omit return figur 3 complet defint function cm0 cm1 modul u2v v2u defin follow modul struct modul let cm0 ulist match cm0valid ulist v v rais invalid modul struct modul function cm0 modul u2v need valid input sequenc tag valu content model element type vt0t use current tag set accomplish use valid function modul sysf0contentsystag differ remain nonempti sequenc valid longest prefix entir sequenc valid respect content model vt0t modul p0 struct type x0 natsetoflist 0 modul content functor tag struct let valid ulist match ulist tfold fun x x fun x success return untag valu along rema list otherwis return none let forget tx0 tag first variant type tt modul star struct type x0 ffirst modul content functor tag struct modul let rec valid ulist match ulist ulist h first match cmvalid ulist u match valid us uu els ulist let rec forget match figur 4 gener definit content valid function 6 typefulxmlprogramminginml one purpos valid assign type xml element program valid xml element program type valu use static type langaug program allow one detect type error henc express invalid element compil time gener valid procedur give type valid ele ment allow one construct xml processor type way follow illustr diagram let u ml type wellform element v v 0 ml type correspond specif xml element type u valid f forgetw may say function u u untyp may produc invalid element howev function type alway output valid element whenev one program function expect output also valid one program figur 5 show ml code fragment illustr approach code map wellform tidi bookmark wellform flat bookmark function tidy2flat u map compos type convers routin function tidy2flat v alway output valid element input element valid note type function infer ml function annot type figur 5 clariti purpos 7 comb gener poli morphism gener model xml dtd combin type polymorph better result inde use gener polymorph model xml element type declar accompani attributelist declar extend previou folder exampl requir option subject attribut folder element pair titl url attribut record element follow valid xml document newli extend dtd xml version10 folderfolderrecord element record empti subject attlist record titl modul modul struct modul modul modul tag tag modul modul modul modul modul modul let t2ffolder fun fd match fd case flat record r follow sequenc flat record folder case flat folder f follow nonempti sequenc flat record folder let t2frecord let flattenv tidyfoldert tidyrecordt tagt tagmap tidydtdvfold flatrecordup let flattenu tidydtdut flatdtdforget figur 5 exampl type xml program note type annot function ad clariti purpos url folder subjectresearch institut record titleacademia sinica urlhttpwwwsinicaedutw origin definit folder record figur 1 last two line folder folder record f0t record record folder record f1t replac follow type u v folder u v record record v u vfolder u vrecord f1t string option string attribut declar model type level lift model level need gener definit valid function modifi accordingli accommod valid check attribut format valu 8 xml content valid xml requir content model element type declar determinist bruggemannklein wood clarifi requir mean 1unambigu 7 8 regular express 1unambigu sequenc symbol recogn determinist onesymbol lookahead correspond nondeterminist finitest machin exampl content model b cb 1unambigu given initi b one know b model match without look ahead see follow b howev equival content model bcd 1unambigu 2 use nullabl predic first set check whether content model specifi modul express 1unambigu check perform modul elabor time ambigu content model detect except rais soon possibl content model may also contain epsilon ambigu allow xml demand addit work valid exampl epsilon ambigu ab empti sequenc deriv b besid element content model ie regular express element type name xml element type may use content specif exampl element type may empti specif mix content specifi cation specif impos addit difficulti definit gener valid function specif mean sequenc child element may contain element declar element type includ text order mix content specif allow text data interspers element prescrib type one may think special case mix content one view text data denot pars charact data mix content specif element enclos within pair implicit text starttag text endtag pcdata modul similar empti modul alreadi defin help induct definit mix content specif ex ampl dtd 2 element type one defin modul follow use 3ari altern modul alt3 modul 9 experi larger dtd wml markup languag wap applic dtd consist 35 element type definit appli gener approach valid wml document order need produc ml modul includ oper upon 36ari type constructor 35 element type plu 1 pcdata also need construct higherord modul take mani 17 modul input one element type definit need 17ari alt mod ule experi quit satisfactori code compil without problem object caml compil time neglig 1 min desktop workstat valid time neglig ever least smallish exampl tri around 100 element work larger dtd document collect perform data size ml sourc code quit larg howev take follow ml modul express exampl modul one need 10ari modul seq10 construct requir content model specifi sequenc 10 element differ element type code modul seq10 look like follow modul struct type x0 x1 x35 x0 x1 x35 f1t x0 x1 x35 f9t clear dtd n element type sourc modul seq code size omn worst case dtd length n code need uniqu type variabl contain type share constraint length 2 overal code size 2 sourc code necessari ml modul 35element wml dtd size 05 mb compil produc binari size 175 kb cmo file object caml interfac size 23 mb cmi file object caml ml code wap exampl access follow url httpwwwiissinicaedutwtrcxdotmlhtml one connect compon analysi dtd set element type partit disjoint subset typedepend sub set subset k element type need use kari type constructor overal code size modul use subset reduc 10 relat work conclus section 1 introduc previou work use exist new function languag model program xml dtd wealth research system work relat xml content model necessarili perspect function program languag list bruggemannklein wood address problem ambigu xml sgml content model base theori regular languag finit automata 7 8 particu lar show linear time suffic decid whether content model ambigu show regular express star normal form epsilon normal alway unambigu 9 glushkov automaton correspond regular express use check ambigu unambigu valid well murata propos data model xml document transform base forestregular languag theori 15 16 model lightweight altern xml schema provid framework schema tran format also work type model document transform structur edit system use data type 5 howev none work use specif program languag model languag xml schema matur specif languag xml content develop world wide web consortium 4 xml schema express dtd specif languag use xml syntax differ xml schema dtd seem xml schema abil deriv new type extend restrict content model exist type xml schema also provid substitut group mechan allow element substitut element investig whether mllike modul languag express enough model mechan backhous jansson jeur meerten written detail introduct gener program 6 see also introduct foldunfold meijer fokkinga paterson 13 well work use foldunfold structur reason program semant hutton 12 extens simpl fold simultan fold seem new work gener program function program research commun seem reli mechan type class deriv typespecif instanc gener function languag choic often haskel shown paper parametr modul mechan mllike languag suitabl gener program well fact think parametr modul allow one take finer control induct deriv gener valu power modul system develop allow mutual recurs modul well modul depend valu type see eg russo 17 howev show lack recurs modul need problem long mutual depend modul interdepend type definit view context work thought use ml modul facil gener determinist automata special valid element specif dtd valid automata also give type element part addit construct valid automata entir gener au tomat work also serv usag case ml parametr modul use stress test current ml implement delight see contriv code 36ari type constructor 17ari higherord modul compil execut problem object caml 11 r xml schema part 0 primer type model document transform structur edit system gener program introduct ann brugemannklein derick wood ann bruggemannklein xduce type xml process languag regular express type xml fold unfold program semant function program banana transform document schema pattern contextu condit data model document transform assembl haskel xml gener combin typebas translat proceedingsin proceed intern confer function programmingproceed logic program approach support entri xml document object databas tr function program banana lens envelop barb wire regular express finit automata oneunambigu regular languag underappreci unfold fold unfold program semant haskel xml regular express type xml recurs structur standard ml logic program approach support entri xml document object databas outofcor function program typebas primit transform document schema pattern contextu condit xduce algebra xml queri data model document transform assembl ctr tyngruey chuang janli lin modular transform structur content proceed 2004 acm symposium document engin octob 2830 2004 milwauke wisconsin usa