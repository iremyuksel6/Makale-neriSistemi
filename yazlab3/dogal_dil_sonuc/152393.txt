coordin rulebas softwar process esp esp languag model rulebas softwar process take place distribut softwar develop environ base poli abstract coordin model reli multipl tupl space ie collect tupl la linda poli extend linda aim specif coordin logic distribut system esp extend share prolog combin poli mechan deal concurr distribut logicprogram languag prolog deal rule deduct combin coordin model logic languag provid power framework experi rulebas softwar process program perform evalu b introduct introduct theme softwar process model recent address sever specif confer see instanc 12125 survey see 19 interest stem fact activ involv softwar develop complic expens errorpron seem necessari complet specifi develop process order gain control improv qualiti softwar process program formal defin activ carri develop softwar project provid guidanc agent involv control overal evolut project statu 33 paper devot attent fact softwar process take place necessarili within softwar develop environ environ support coordin interact project member allow use program tool monitor evolut project document show environ design goal explicitli model coordin process fact suggest natur way model softwar process consist introduc suitabl abstract machin defin environ softwar process develop suitabl program languag abl control process evolut guid principl order specifi softwar process must clarifi coordin model 13 use agent ie must make explicit commun mechan basi interact protocol use particip softwar project identifi coordin model abstract architectur environ support execut process main contribut paper definit abstract paradigm model coordin activ take place insid softwar develop environ paradigm call polispac poli base multipl tupl space 23 poli allow softwar process design model softwar process take place insid multius distribut develop environ model activ form softwar process approach similar use marvel 89 merlin 2434 activ take place environ prescrib process govern rule respect system put emphasi coordin mechan allow us combin rule govern softwar process declar languag allow express rule propos includ three step first defin abstract coordin model coordin model set abstract mechan express control set sequenti activ 13 approach activ express sequenti languag interact respect activ defin use coordin model coordin model poli base multipl tupl space ie collect tupl manipul oper offer linda coordin languag 22 second order abl express rulebas softwar process use logic program take advantag inferenti relat capabl introduc elsewher parallel logic languag share prolog 11 combin prolog lindalik tupl space use extens share prolog better suit distribut program ming fact extend share prolog esp short logic languag combin featur poli distribut program declar inferenti capabl prolog final weshowhowesp use model softwar process take place insid distribut softwar develop environ idea softwar process explicitli defin rule form coordin protocol govern activ insid distribut environ rule specifi goal duti constraint agent involv softwar process fulfil suggest environ impos constraint support coordin protocol among user control environ mean govern softwar process concept distribut develop environ rulebas softwar process well interplay natur model poli easili implement esp fact show esp use design simpl program environ correspond simpl softwar process power esp test use oiko rulebas develop environ abl execut softwar process model written esp 24 oiko offer number standard servic give basic facil like access databas privat workspac activ shell etc esp languag use implement desir softwar process paper organ follow section 2 introduc poli model distribut program section 3 describ extend share prolog program notat base poli section 4 show esp use design simpl softwar develop environ process section 5 summar main design principl underli oiko final section 6 contain comparison relat work model coordin intuit multius softwar develop environ seen like abstract town mani place sever agent distribut place cooper produc document either remain place sent anoth place town mani activ perform simultan mostli independ howev rule law polici constraint either physic eg avail resourc like space time abstract eg set law prohibit behavior suggest softwar process design set multius softwar develop environ design polispac ie distribut system collect name tupl space concept tupl tupl space borrow linda poli extend linda allow multipl tupl space precis poli three concept import tupl agent tupl space 21 tupl tupl sequenc variabl valu linda valu depend chosen sequenti program languag use program agent howev poli number basic valu type well list valu allow exampl instanc tupl paolo programm program program1 module1 module2 module3 use convent tupl alway parenthes identifi quot begin capit letter denot variabl identifi denot atom squar bracket denot list tupl denot simpli data object exist tupl space produc agent possibl futur consum agent scope variabl insid tupl span tupl belong mean tupl insid tupl space complet independ tupl tupl produc agent tupl space remain agent consum access tupl associ ie done content particular access mechan chosen degre freedom eg poli accommod either mechan base type pattern match linda mechan base unif logic languag 22 agent abstractli agent execut thread ie agent process execut program linda agent repres call activ tupl import differ linda poli latter agent execut program contain tupl special kind call programtupl program written sequenti program languag enrich set tupl space oper 221 tupl space oper agent use follow tupl space oper interact tupl space live ffl associ test tupl contain agent tupl space associ consumpt tupl agent tupl space asynchron creation tupl space tupl oper borrow linda two differ flavor test consumpt operationsthey either block notblock two block operatorson creation tupl one creation new tupl space block test oper linda written readtupl schemata nonblock test oper written readptupl schemata block consumpt oper written intupl schemata nonblock consumpt oper written inptupl schemata tupl schemata tupl contain formal argument ie wild card match actual argument insid tupl contain tupl space actual readp inp consid part standard definit linda maintain poli agent need maximum gener access tupl space successfailur semant readpinp use use logicbas control structur agent output either tupl tupl space ie creat new tupl space former oper written outtupl case local write outtupletuplespac case outsid write latter one written tsctuplespac target output oper alway tupl space specifi use name name specifi default tupl space agent use happen oper target extern tupl space exist poli consist linda semant nonblock oper ie agent issu wait result error code never fail commun among tupl space support meta tupl space undeliv tupl remain deposit whenev tupl space come exist undeliv tupl pop tupl space agent need certain messag gone way must explicitli use protocol instanc could send messag agent send back acknowledg final note agent test consum tupl repres agent use build agent schedul agent tupl space operand either test consum obviou semant oper copi whole tupl space delet whole tupl space necessarili manipul global state tupl space contrast asynchron natur intern activ 222 programtupl linda program invok arbitrari sequenc tupl space oper poli agent follow instead fix protocol invok tupl oper syntact program agent execut written insid programtupl head head tupl schemata test consum sequenc tupl oper wherea loc eval sequenti comput side effect tupl space agent belong agent activ tupl space contain programtupl normal tupl match head programtupl latter consum second compon programtupl also call pattern execut pattern agent follow action ffl read someth tupl space use number test oper actual test oper poli broader semant read linda number predefin test tupl space allow depend chosen type system tupl argument use predefin test relat binari predic var1 predic check argument insid tupl variabl thisplace1 predic return name tupl space agent locat ffl delet tupl use number consumpt oper ffl execut local evalu effect tupl space insofar oper tupl space allow local comput express sequenti program languag ffl output result number tupl space know output consist tupl tupl space ffl end sequenc agent die termin thread evalu howev specifi everlast agent insert among output creation copi comput model underli comput agent idea agent stateless reactiv ie comput molecul tupl built insid tupl space molecul compos programtupl normal tupl match first compon programtupl tupl consum specifi consum section programtupl agent react environ burn molecul creat new entiti specifi creat section semant studi 17 exampl everlast chemic reaction seen tupl space contain two tabl tenni player agent begin build molecul tupl ping consum tupl produc tupl pong copi turn agent b react consum tupl pong produc tupl ping copi b either forev someth outsid come alter chemic solut instanc suppos extern agent send new ping tupl tupl space soon new tupl notic agent two agent longer serial 2 remark programtupl tupl ie freeli ad remov tupl space thu provid indirect mean manipul agent exampl remot evalu agent tupl space sourc need sure output reach tupl space dest use follow protocol ie agent send messag msg repres b destin tupl space test presenc messag send back ack messag 2 223 non determinist evalu agent semant outlin simpl defin inputoutput relationship independ global environ ie tupl space agent reactiv ie react tupl space sens set test consum oper contain program thought fire pattern activ comput local evalu final modifi tupl space actual semant even simpl sinc problem specifi interest situat instanc situat imposs give agent input need start comput increas verbos program moreov mutual exclus relationship bore specifi must handl explicitli defin semaphor tupl set agent mutual exclus defin non determinist agent simpli put tupl space set programtupl whose head match exampl programtupl describ behavior agent either edit compil execut file follow editfil new outnew compilefileobject outobject execfileresult outresultssuch set compar hoar csp guard command object defin set method logic predic defin set claus yet anoth extens poli respect linda offer nondeterminist oper non determin use specifi complex task partit sever altern subtask 23 tupl space tupl space name multiset passiv activ tupl syntact write tupl space sequenc tupl curli bracket exampl describ tupl space name workspac contain three tupl write follow differ respect linda poli tupl space two attribut name set invari 231 name tupl space import featur poli tupl space name agent send tupl outsid tupl space use name anoth tupl space tupl space name freeli pass argument tupl possibl dynam build complex commun flow name system tupl space degre freedom poli like choic sequenti languag local comput type system chosen tupl mean poli offer specif name system program languag base poli choos name system tupl space name tupl space form flat structur eg pointer tupl space independ scope rule simpl tupl space name form global environ name structur tupl space structur well eg name path unixlik style tupl space form tree similar unix filesystem name system use oiko see 5 232 invari wherea agent ephemer stateless tupl space seen object persist state 41 tupl space passiv entiti mere repositori tupl channel messag way control activ take place insid tupl space fact tupl space defin one invari ie constraint must hold tupl space life span whenev invari violat tupl space stop activ termin tupl space garbag collector could claim resourc alloc tupl space invari defin insid special programtupl head substitut keyword invari test section defin condit tupl space verifi termin tupl space loc eval section use comput commun result tupl space exampl follow invari invari tupl validateddesign produc tupl space termin commun tupl startcod tupl space name manag 2 invari concept present linda poli use specifi intend semant tupl space condit specifi invari verifi result obtain pass tupl space 3 esp parallel languag combin poli prolog could accommod sequenti languag express local comput insid agent instanc clinda consid instanc poli sequenti languag c tupl built use c data type uniqu tupl space allow linda constraint use tupl oper ie use program read order howev note sequenc linda oper split number subsequ subsequ begin readin oper termin oper order explor effect use poli design rulebas softwar process environ introduc esp program languag combin poli prolog esp actual extens parallel logic languag share prolog 11 logic languag use blackboard model 31 organ interprocess commun approxim share prolog consid member linda famili physic distribut program languag 22 share prolog gain express power respect linda exploit unif backtrack agent access tupl space linda use pattern match backtrack allow esp gener share prolog multipl tupl space 31 theori esp program compos set modul call theori theori follow syntact structur theori namev head eval rule 1 rule k theori interfac prolog program theori implement theori modul identifi name zero argument v logic variabl scope rule theori interfac follow keyword eval includ number rule also call pattern separ symbol theori implement prolog program follow keyword reader familiar prolog find good introduct terminolog 37 exampl follow theori includ one rule defin agent compil file find tupl space tupl compilefil result agent activ either success tupl sent blackboard test compil fail failur messag blackboard user theori compil eval call compilerfil p rolog goal fcompiledfiletestg success fail freport errorfileuserg f ailur call compilerfil p rolog program special predic invok compil fail compil failsan esp theori includ set rule similar csp guard command one rule fire agent execut theori commit rule one rule fire one chosen non determinist esp rule claus includ est section formal goal evalu respect current content tupl space consum section describ multiset tupl consum loc eval section prolog goal evalu respect prolog program final oper make explicit fact side effect tupl space consumpt creation oper put curli bracket test combin test consum section guard guard satisfi ie test satisfi consum oper complet rule fire mean tupl consum realli delet prolog goal evalu deal possibl failur prolog goal creation oper partit two set separ keyword fail goal evalu succe success produc els failur produc exampl follow rule first line test section second line consum section rule state tupl space contain tupl filef contain tupl reservedf tupl check outpf found delet produc tupl reservedfbyp tupl space tupl filef tupl space name valu bound p filef reservedf fcheck outpfg freservedfbyp filefpgcommun agent tupl space denot simpli ad address destin tupl space tupl send destin tupl space yet creat tupl simpli wait creation consist extend linda semant oper poli framework final remark prolog program follow keyword prolog builtin use except predic alter program like assert retract guarante agent stateless requir poli semant state inform must store tupl space 32 logic tupl space esp tupl space also call blackboard name multiset logic tupl logic tupl simpli prolog term blackboard dynam creat agent simpli use activ goal form tscnamefcontentsg activ goal specifi name tupl space possibl initi content exampl goal creat three tupl space tupl space bb pm initi contain tupl develop chang testunit ftscbb ccb tscbb pmfdevelop chang testunitg tscbb ptgin gener execut anesp program build set tupl space set grow tupl space creat shrink tupl space termin ie invari fire exampl goal associ two invari tupl space bb pm tupl space termin either tupl end workid tupl abort workid found content finvariantend workidbb pt invariantabort workidbb ptg33 evalu logic agent esp tupl space seen program construct encapsul parallel evalu logic agent logic agent repres activ tupl tupl activ match head theori agent execut rule read delet tupl tupl space result evalu rule normal consist creation tupl tupl space notabl featur esp control flow test consum oper rule backtrack test consum oper either success fail failur activ backtrack preced oper exampl suppos follow subset tupl space f deliverani spec1 spec2 impl2 g agent commit rule specx fdeliverx implxg fmodxg tupl deliverx consum 2 result tupl space subset f spec1 spec2 mod2 ga formal semant behavior given 11 34 esp implement esp languag evolv extens share prolog current two distribut implement one stand alon 12 one base linda 18 first one implement part c part prolog c layer implement socketbas meta tupl space support number commun primit usabl prolog process prolog process handl either sever blackboard sever agent linda base implement meta tupl space clinda program remot fork one worker new logic tupl space repres commun via socket prolog process handl one logic tupl space detail concern esp implement see refer 341 interact user esp use parallel program like linda typic parallel applic program need massiv comput power search insid number distribut knowledg base linda cours much effici esp easili use symbol applic good exampl program coordin sever agent cooper solv code accord rule mastermind 14 benchmark show current esp distribut implement least effici parallel implement product system 18 howev real use intend esp design program coordin interact number user instanc develop program coordin four player intend play bridg network player connect differ workstat program distribut card player handl trick keep score program class develop simpl distribut agenda coordin committe meet email system financi simul user buy sell stock number simul stock market distribut applic make larg use interact capabl prolog possibl launch even remot special logic tupl space directli commun termin call shell user produc consum tupl within shell connect principl blackboard user access whole univers blackboard send messag tupl even activ tupl open new shell blackboard practic interact blackboard system constrain rule defin shell exampl follow theori defin shell enabl user put command tupl space tupl space contain tupl access grantedus command syntact correct test compil edit oe gammapsi l l l oe oe oe figur 1 polispac coordin simpl program environ theori simpl shellus eval access grantedus read commandcommand ftuplecommand simpl shelluserg fail fsimpl shelluserg read commandcommand check legal command use prolog io predicatesthi theori show user input enter polispac io model use esp base prolog io builtin predic process program esp activ program lindabas logic languag explor elsewher 161738 section show esp use languag model simpl softwar process relat develop environ 41 tini program environ simpl softwar process take place program environ includ editor compil specifi naiv softwar develop process consist edit file compil soon edit programm termin compil give error object program invok execut use test data fig1 depict environ polispac order build esp program implement polispac need three theori one edit agent actual shell user one compil agent one execut agent theori use predic call envelop 26 encapsul extern softwar tool envelop use introduc nondeclar oper insid declar framework abl call standard unix tool via system predic return logic result ie either success failur theori editoreditor tti eval call editoreditorttyfil fcompileuserfilecompileg call editoretf theori compil eval call compilerfil fcompiledfiletestg fail fdo editfileuserg call compilerfil invok envelop cc compil fail error theori testerdatafil eval test datadatafil fcompiledfileg runfiledatafileresult fail ftest errorfileg runfiledatafileresult invok prologunix envelop object file minim program environ enforc simpl editcompiletest program model user interact tupl space action tupl space coordin esp program 42 multius environ enforc access protocol softwar project compos set modul develop team programm softwar process design design softwar develop environ enforc follow polici updat public version whole project store within main databas user access main databas read mode coordin base reservedeposit access protocol main databas guarante mutual exclus consist main databas alway contain consist updat version project modifi content modul user must reserv modul gain write access obvious time modul reserv reserv modul copi user databas user modifi reserv modul edit user databas user access read mode old public version user 1 db user 2 db user 3 db main databas oe figur 2 polispac coordin multius environ modul store main databas chang modul complet test user deposit new version back main databas updat version readili access user polispac realiz environ show fig2 code theori user db manag handl user request user databas follow theori user db managerdbmain eval fcheck infil dbma fcheck infileudbdbma fcheck outfiledbma fcheck outudbfiledbma sinc user issu blackboard either checkin checkout command rule command simpli transmit tupl main databas blackboard tupl space contain two agent guarante consist main databas checkin manag checkout manag execut follow theori theori checkout manag eval filef reservedf fcheck outpfg read request file f programm p request grant filef file f exist fcheck outpfg ferrorno filefpg request grant reservedfbyop p 6 op file f reserv programm op fcheck outpfg ferrori lockedfbyoppg request grant first rule reserv request file rule handl differ error situat theori checkin manag eval filef fcheck infpg creat request file f programm p ffilefg fcreatedfpg request grant filef reservedfbyfp fcheck infpg modifi request file f programm p call file servermodifi f p fmodifiedfpg request grant filef reservedf fcheck infpg creat file f exist ferrorfil existsfpg request grant fcheck infpg file f reserv ferrori lockedfbyoppg request grant call file servermodifi f p ask file system get new file f ps workspac first rule creat new file second rule modifi file invok envelop oper system servic rule handl differ error situat 43 softwar process program fragment octob 1990 organ sixth intern softwar process workshop suggest softwar process problem workshop particip 27 problem specifi process natur languag concern develop chang test defect softwar modul process decompos number phase design code test manag chang author ccb charg project programm team pt coordin project manag pm show softwar process design could model part process esp start creat three blackboard one ccb one pm one pt follow goal set initi distribut environ process take place ftscbb ccb tscbb pmfdevelop chang testunitg tscbb ptg blackboard bb pt specifi termin condit use follow invari finvariantend workidbb ptinvariantabort workidbb ptg mean blackboard bb pt termin activ either tupl end workid tupl abort workid found follow esp theori control overal process viewpoint project manag pm theori develop chang testunit eval fschedul assign tasksunitstart workunitidbb ptg fend workidbb ptg fcancel changeidg fabort workidbb ptg theori develop chang testunit includ three rule first one describ activ process start ccb issu author tupl specif chang target unit project manag respond stimulu start schedul assign task phase defin anoth esp theori two rule state possibl termin condit process theori schedul assign tasksunit eval fchangerequirementsunitid project plansplansg fproject plansnewplan mailassignmentsbb pt changerequirementsunitidbb ptg updateplansnewplan definit new schedul task breviti give complet process program detail solut problem found 3 44 discuss exampl given section admittedli complex moreov featur also offer exist well known tool instanc someth similar first exampl difficult make tool write script sophist editor like gnu emac wherea second exampl captur basic mechan tool like scc howev exampl show esp distribut comput easi deal instanc easi specifi differ alloc polici first exampl three agent editor compil tester integr uniqu blackboard alloc one workstat els put differ blackboard aim enforc distribut protect moreov combin differ softwar process also difficult follow goal set environ combin program first exampl program second exampl ftscmaindbfcheckin managercheckout managerg tscuser1fus db managermaindb editormodule1tty1g tscuser2fus db managermaindb editormodule2tty2g tsccompilefcompilerg tsctestftesterdata1test datadata1 gg import chosen exampl order show esp possibl program control sever level coordin ffl overal structur softwar develop environ defin set name tupl space devot distinct activ ffl activ encompass sever tupl space defin commun flow tupl sent tupl space anoth ffl coordin agent insid tupl space defin multiset tupl activ tupl space ffl concurr interact among differ agent tupl space defin semant tupl oper ffl task agent perform defin rule theori execut ffl action agent perform task activ defin knowledg base theori execut believ softwar process program difficult complex undertak mainli differ coordin level taken account amalgam harmoni assembl although esp base small number languag mechan use program level coordin declar way fact esp keep logic program paradigm view comput proof search thu obtain free formal semant local ie non relat tupl space evalu agent admittedli esp move away pure logic program reli differ express framework fact esp enrich logic program set coordin mechan agent tupl space creation intertupl space commun although esp power express languag program coordin goal manag definit evolut softwar process would imposs attack without support special environ apart definit execut esp program environ allow integr softwar process tool need offer repositori servic use build block complex softwar process environ oiko oiko experiment rulebas softwar develop environ support process program written esp 2 oiko provid number predefin facil model rulebas softwar process distribut system overal approach consist offer mechan easili compos use esp use model differ softwar process oiko softwar process esp program coordin dynam collect agent cooper distribut environ model hierarchi blackboard hierarchi offer natur way structur softwar process conceptu similar contractu hierarchi istar 20 istar node tree document wherea oiko tupl space fact blackboard hierarchi use reflect decomposit softwar process subprocess accord topdown refin strategi hierarchi realli constrain commun flow among particip softwar process sinc blackboard name exchang tupl agent put tupl blackboard provid know name destin fore highli dynam commun pattern set even connect blackboard differ level hierarchi conveni give short descript current system architectur interest reader find detail 254 51 servic oiko key concept oiko servic predefin subsystem accept request client conceptu servic offer access share resourc accord given set rule share resourc includ softwar product tool process program etc formal servic defin byanesp program specifi protocol interact servic ie tupl must put blackboard submit request number standard servic oiko play role primit oper data type play program languag discuss two oiko servic databas servic db user interfac servic ui order store inform document softwar process oiko offer servic db interfac databas manag system current db salad deduct databas manag system base logic languag 15 db accept scheme definit request queri transact request also enforc access right one first duti softwar process manag set project databas defin scheme describ properti relat among differ kind document oiko provid predefin scheme reusabl document relat oiko eg contain servic specif relat tool alreadi avail start document actual store file manipul blackboard via identifi necessari oper document tool eg editor document retriv underli file system pre layout quit open bb pm interfac histori script enter clear expand precond edit hold refresh expand blackboard figur 3 esp user interfac user access oiko shell manag user interfac servic ui user see content blackboard window action must compli rule defin ui specif ui servic sever differ shell coexist shell offer flexibl way monitor softwar process sinc user activ blackboard look tupl flow even save tupl record evolut softwar process 30 fig3 show user see connect esp program environ xwindow esp program environ call expo 5 conceptu user open window see content blackboard also put remov tupl blackboard fig3 leftmost top window show current content blackboard number button allow manipul window leftmost bottom window use edit shell pattern ie rule insert evalu fli user interest event happen blackboard typic tupl appear disappear rightmost top window show histori user action rightmost bottom window show name blackboard three button use manipul window expo ffomega ffomega ffomega ffomega upsilon figur 4 oiko architectur 52 oiko implement oiko written mostli esp fig4 show architectur oiko prototyp implement univers pisa top local network sun worksta tion esp provid basic mechan physic distribut dynam activ commun process three main layer oiko architectur shown fig4 expo program environ written esp provid xwindowsbas user interfac 5 collect separ process implement distribut esp runtim system underli oper system unix hierarchi blackboard repres nest box process second layer depict circl esp process local interpret esp languag mani machin network eager interpret piec esp program detail exposit see 125 6 comparison relat work first compar esp coordin languag compar rulebas process program languag 61 compar esp coordin languag esp languag combin lindalik coordin prologlik comput extens prolog sens clinda extens c comparison linda main differ esp base multipl tupl space moreov gain express thank magic logic program howev esp mere prologlinda dialect structur claus structur ie test consumecomputeoutput make esp similar parallel logic languag like flat concurr prolog ghc 36 import differ respect languag esp tupl space state agent manipul ad delet tupl fcp ghc oper share stream monoton way ie add new data moreov esp true extens prolog wherea fcp ghc sequenti compon parallel logic languag base notion logic tupl space program notat similar esp swarm 35 specif languag base uniti introduc studi program logic underli tupl space commun esp tightli relat swarm logic program mani construct program larg current miss swarm linear object lo 7 object orient languag base concept multipl tupl space commun broadcast apart mani similar esp lo studi unifi semant framework 6 respect rule base program languag like instanc product system like ops5 esp rule merg cleanli two basic evalu mechan forward backward chain backward chain use local comput prolog goal form parallel forward chain use basic mechan activ agent logic tupl space also similar blackboard 31 fact mani esp implement issu discuss way blackboard system detail discuss esp relat implement issu contain 1218 62 compar esp rulebas process program languag well known project inspir oiko rulebas softwar develop environ marvel 89 marvel follow object orient design paradigm reli upon special rulebas languag deriv product system ai applic softwar process specifi three set specif project rule set describ develop process project type set specifi project data project tool set defin interfac extern tool exampl marvel rule 9 fcompil compil compil fcontent fobject code ferror msg g fcompil statu compil fobject time fcompil marvel rule name includ three section precondit activ part postcondit precondit condit evalu respect current statu project databas verifi activ part execut usual invok tool end tool activ postcondit specifi effect rule project databas rule could easili translat esp follow compilecc g file object code error msg timecurrenttim fc filefilecompil object filefil currenttimeg fail compilecompil file object code error msg marvel put emphasi design interact protocol use multipl user share project databas esp import put environ architectur design aim formal coordin model underli user activ key issu esp use blackboard model combin logic program blackboard model problem solv well known artifici intellig 31 wherea softwar engin exploit project instanc agora 10 use blackboard architectur interprocess commun among heterogen softwar compon recent relev exampl rebu blackboard curious call whiteboard 40 rebu process program written appla 39 extens ada softwar process model rebu whiteboard use five ad hoc primit manipul content whiteboard use coordin activ number particip softwar process experi combin blackboard model logic program provid power rulebas framework specifi prototyp distribut softwar develop environ relat softwar process use logic program techniqu tool softwar engin slowli gain popular instanc darwin project 2829 develop prologbas framework support rulebas softwar engin environ call law govern system darwin law explicit statement rule must follow agent environ environ written esp consid lawgovern system whose law state parallel languag use prolog softwar process program suggest first time 32 without introduc concurr mechan success project rulebas environ center upon prolog merlin 2434 merlin use model rulebas softwar process use extens prolog forward chain backward chain comput possibl merlin extend prolog imper construct like instanc call insert remov oper claus contain knowledg base exampl merlin rule documentmodul object name compil callcompil object name compil statu removedocumentmodul object name compil insertdocumentmodul object name compil statu rule easili translat esp follow fdocumentmodul object name compiledg ublcs938 22 conclus compilecompil object name compil statu fdocumentmodul object name compil statusg complex sequenc includ sever insert remov command arbitrari order could rephras esp use chain rule current merlin project take account concurr distribut issu believ poli coordin model would natur way extend merlin featur deal concurr parallel conclus paper introduc poli coordin model use design distribut system program notat base combin poli prolog esp use languag softwar process model esp use design implement oiko rulebas softwar develop environ distribut local network esp program environ oper three year use implement distribut multius applic like refere coordin four bridg player financi simul stock exchang simpl email system softwar process simul fulli enact like instanc softwar process defin section 43 futur plan includ develop graphic specif languag help develop softwar process success model esp definit plan tool assist user softwar process possibl chang softwar process program execut moreov feel poli whole coordin framework base multipl tupl space deserv deepli studi instanc develop program logic poli aim develop specif languag suitabl distribut applic acknowledg contribut given refere comment improv paper invalu author also grate ncarriero dgelernt yale mani discuss linda poli phd thesi supervisor umontanari suggest studi associ coordin mechan last least author thank member share prolog oiko research group pisa especi vambriola abrogi mdanelutto mgaspari cmontangero work partial support cnr progetto finalizzato sistemi informatici e calcolo parallelo italian ministri univers scientif research murst r acm ieee enact softwar process oiko softwar process specif oiko oiko age three expo framework fo process center environ interact abstract machin linear object logic process builtin inher itanc model concurr rulebas develop envi ronment scale rulebas softwar develop environ ment multilanguag parallel program heterogen chine concurr languag share prolog extend share prolog multipl tupl space logic languag coordin languag signific static analysi parallel logic languag base blackboard model ldl system prototyp blackboard program share prolog parallel logic program use linda model comput parallel program logic languag survey process model integr project support istar gener commun linda multipl tupl space linda step toward knowledgebas softwar process model multius distribut languag base environ ment imposit protocol open distribut system configur manag consensu applic lawgovern system softwar process histori oiko blackboard system blackboard model problem solv evolut blackboard architectur process program prolog softwar process softwar knowledgebas softwar develop environ support cooper work mix program metaphor share dataspac model concurr famili concurr logic languag art prolog languag construct manag chang processcent environ program softwar requirementsspecif process concept paradigm objectori program tr gener commun linda blackboard model problem solv softwar process softwar multilanguag parallel program heterogen machin famili concurr logic program languag process program prolog blackboard program share prolog mix program metaphor share dataspac model concurr configur manag consensu applic lawgovern system softwar process enact oiko languag construct manag chang processcent environ concurr languag share prolog imposit protocol open distribut system coordin languag signific process model concept paradigm objectori program ldl system prototyp model concurr rulebas develop environ softwar process technolog scale rulebas softwar develop environ oiko age three parallel logic program use linda model comput multipl tupl space linda