umlbas integr test increas number softwar develop use unifi model languag uml associ visual model tool basi design implement distribut componentbas applic time necessari test compon especi unit integr testingat siemen corpor research address issu test compon integr test gener test execut technolog commerci uml model tool ration rose goal designbas test environ order gener test case automat develop first defin dynam behavior compon via uml statechart specifi interact amongst final annot test requir test case deriv annot statechart use test gener engin execut help test execut tool latter tool develop specif interfac compon base comdcom corba middlewarein paper present approach model compon interact describ test case deriv compon model execut verifi conform behavior outlin implement strategi tnt environ use evalu approach mean simpl exampl b figur 1 altern bit protocol exampl exampl figur 1 repres altern bit commun protocol2 four separ compon timer transmitt comch commun channel receiv sever intern well extern interfac stimuli protocol unidirect reliabl commun protocol user invok transmitt compon send data messag commun channel receiv compon pass anoth user commun channel lose data messag well acknowledg reliabl data connect implement observ possibl timeout condit repeatedli send messag necessari ensur correct order messag 21 uml statechart unifi model languag uml generalpurpos visual model languag use specifi visual construct document artifact softwar system paper focu dynam view uml particular statechart diagram statechart use describ dynam behavior compon say object time model lifecycl key element describ statechart state transit event action state transit defin possibl state chang state object achiev lifetim state chang occur reaction event receiv object interfac action correspond intern extern method callsth nomenclatur paper refer uml revis 13 2 name altern bit protocol stem messag sequenc number techniqu use recogn miss redund messag keep correct order figur 2 illustr statechart transmitt object shown figur 1 compris six state start end state transit label call event descript correspond extern stimuli receiv tuser interfac intern stimuli sent timer compon via time interfac receiv comch compon via txport interfac internalextern interfac compon shown figur 1 moreov nomenclatur use label transit describ next section relat way compon interact model tusermsg txportack time canceltuserack txportdata0timingstart timingtimeout txportdata1timingstart txportack timingcanceltuserack tusermsg figur 2 statechart diagram transmitt object 22 commun statechart follow section describ develop would need model commun multipl statechart use commerci umlbas model tool present uml provid adequ mechan describ commun two compon adopt concept csp commun sequenti process 6 enhanc exist notat 221 commun semant approach want select commun semant close relat way comdcom corba compon interact current system compon allow synchron asynchron commun focu synchron mechan purpos paper addit two type synchron commun mechan first share global event model may broadcast singl event multipl compon wait receiv act upon unison second model pointtopoint block commun mechan send singl event one compon two compon synchron origin event halt execut block receiv obtain event pointtopoint model adopt close resembl commun semant comdcom corba 222 transit label order show explicit compon connect associ oper interfac event within respect statechart defin transit label convent base notat use csp commun operations3 uniqu name must assign develop connect two commun statecharts4 name use prefix trigger incom send outgo event transit label statechart would defin follow timingtimeout txportdata0 transit label interpret receiv trigger event timeout connect time follow send event data0 sent connect txport trigger also known receiv event identifi separ question mark wherea send event identifi lead caret exist uml notat separ exclam mark figur 3 two dark arrow indic time interfac two compon use send receiv event connect consid bidirect although possibl use differ connect name direct direct need emphas transit contain multipl send receiv event multipl receiv event within transit label specifi separ plu sign multipl send event differ event name specifi separ colon 223 exampl figur 3 show two commun statechart transmitt timer compon label transit statechart refer event occur via intern time interfac interfac txport comch compon two extern interfac timer tuser figur 3 commun transmitt timer compon transmitt compon start execut state idle0 wait user input messag arriv connect tuser state chang preparesend0 messag sent commun channel time timer compon receiv start event compon 3 csp oper written channel1event1 mean event1 sent via channel1 machin input oper written channel2event1 channel2 receiv event1 4 current limit tool implement state messagesent0 wait either timer compon send timeout event comch compon send messag acknowledg ack case timeout messag sent timer also start ack receiv event sent timer compon cancel timer user get acknowledg success deliveri messag step may repeat differ messag sequenc number express event data1 instead data0 addit model respect statechart defin interact develop specifi test requir direct test gener influenc size complex result test suit howev aspect shown exampl 3 establish global behavior model follow section describ step taken construct global behavior model intern tool multipl statechart defin develop use commerci umlbas model tool global behavior model signific properti behavior individu state machin preserv 31 definit subsystem prime concern respect construct global model scalabl apart util effici algorithm comput global model defin mechan wherebi develop group compon subsystem thu help reduc size given model benefit subsystem definit also reflect commonli use integr test strategi describ section 4 approach allow develop specifi subsystem compon test interfac test subsystem definit specifi develop model compon interfac consid part global model 32 compos statechart 321 finit state machin consid statechart meali finit state machin react upon input form receiv event produc output form send event state machin defin direct graph node repres state edg repres transit one initi state possibl sever final state state transit describ function commun finit state machin use compon specif defin s0 f set state uniqu state machin state mark intermedi state alphabet valid transit annot consist transit type connect name event name transit function describ transit state s0 initi state f set final state initi final state regular state initi state give start point behavior descript final state express possibl end point execut compon transit annot contain transit type well connect name event name transit type intern send receiv commun transit type send receiv extern event sent receiv extern interfac compon state machin send receiv transit defin extern behavior compon relev extern behavior observ intern transit equival transit empti transit finit state machin 7 trigger extern event observ behavior repres arbitrari intern action commun transit special type intern transit repres interact two state machin behavior extern observ compos state machin match pair send receiv transit equal connect event name merg form commun transit exampl transit highlight dark arrow figur 3 would candid definit state machin allow transit contain singl action everi action express transit annot interpret atom action compon interact occur action sever action group togeth without possibl interrupt state transit mark intermedi state intermedi state introduc logic group substructur state transit semant intermedi state provid behavior descript mechan similar microstep atom action separ multipl consecut step microstep alway execut one run microstep outgo transit intermedi state techniqu use approach part process convert uml statechart intern represent result set normal state machin idl tusermsg time preparesendcancel timingstart gotack timingtimeout txportdata0 txportack messages figur 4 normal transmitt compon figur 4 show state machin simplifi version transmitt object two addit intermedi state timeron gotack insert separ multipl event txportdata0timingstart txportacktimingcancel preparesend messages idl state shown figur 2 322 compos state machin compos state machin consid product multipl state machin state machin dynam behavior constitu would react gener output result stimul event specifi respect state machin base definit finit state machin structur compos state machin defin follow 2 s02 sf2 two state machin s1 compos state machin c ab follow formal definit connect b match event t1 t2 gener 1 2 state machin composit schema exampl global state ab defin twotupl s1 s2 s1 state s2 state b two state refer part state initi state final state ab element subset product possibl transit annot compos union t1 t2 new commun transit result match transit exclud transit describ possibl match either commun transit creat omit commun possibl 323 composit method basic approach compos two state machin gener product state machin appli gener multipl rule state transit lead larg overhead mani unreach state produc remov later step result product use resourc necessari well comput time gener minim instead approach incorpor increment composit reduct algorithm use reachabl comput global behavior model creat stepwis begin global initi state reachabl state transit comput everi state compos state machin evalu due reachabl algorithm intermedi data structur time larger result one composit step state transit within compos state machin redund term extern observ remov appli reduct algorithm use heurist rule possibl detect redund reduc size compos state machin next composit step defin subsystem process independ sequenti subsystem composit algorithm appli input composit algorithm data structur repres normal commun state machin specifi compon within current subsystem connect structur compon part data structur order composit step determin size complex result next step therefor effect whole algorithm worst case intermedi composit product composit two compon interact maximum possibl number state transit creat case resembl product two state machin therefor import select suitabl compon next composit step minim requir select compon common interfac compon mean least one connect exist exist previous calcul compos state machin better strategi respect minim size intermedi result select state machin highest rel number commun relationship interact point suitabl select norm ratio possibl commun transit transit state machin compon highest ratio expos extens interfac exist state machin select tabl comput successor state transit increment composit reduct method also specifi composit schema everi combin outgo transit part state decis tabl shown tabl 1 use comput new transit compos state machin new transit lead global state part exist structur compos state machin ad unmark list transit ad global model except exist part state mark intermedi everi reachabl global state process everi possibl new global transit insert compos state machin algorithm termin unmark state remain mean everi reachabl global state insert model later process schema use base composit schema develop sabnani et al 16 enhanc includ extens connect commun transit intermedi state assum throughout composit process individu well compos state machin determinist behavior also ensur execut order compon action sequenti import wish use global model creat test case depend certain flow event action want gener linear sequenti test case given subsystem 324 complex analysi compos product two state machin worst case complex would on2 assum n number state state machin howev approach often much better due applic heurist reduct rule help minim overal size global model composit maintain observ equival 11 typic reduct algorithm use linear complex respect number state 16 exampl report algorithm appli complex commun protocol isdn q931 shown instead gener 60000 intermedi state composit reduct algorithm kept size model approxim 1000 intermedi state similar result report use algorithm system algorithm typic result reduct number intermedi state one two order magnitud 325 exampl take normal state machin transmitt compon figur 4 timer compon figur 3 composit algorithm need perform one iter gener global behavior model figur 5 global initi state idlestop creat use initi state two state machin state ad list unmark state composit schema appli everi state within list gener new global state transit list empti reachabl algorithm creat global state machin compris six state seven transit three commun transit gener identifi hash mark transit label show commun connect event exampl show applic decis tabl first global state idlestop part state idl outgo receiv transit preparesend use extern connect part state stop also outgo receiv transit run connect compon accord decis rule 4 tabl transit extern connect insert compos state machin transit ignor new global receiv transit lead global state preparesendstop next step part state includ transit use intern connect commun via connect time event match transit accord decis rule 1 tabl commun transit includ compos state machin lead global state timeronrun rule appli repeatedli global state cover tusermsg timingcancel timingstart timeronrun timingtimeout messagesentrun txportack timerexttimeout gotackrun messagesenttimeout figur 5 global behavior model transmittertim subsystem 4 test gener execut preced section discuss approach model individu collect compon use uml statechart establish global behavior model compos statechart section show model use basi automat test gener execut unit integr test 41 unit integr test design code softwar compon develop perform unit test ensur compon correctli implement design readi integr system compon type test perform isol compon reli heavili design implement test driver test stub new test driver stub develop valid compon system unit test conclud individu compon collat integr system valid use yet anoth set test driver level test new set custom test driver requir stimul compon compon may behav correctli unit test may interact compon therefor object integr test ensur compon interact interfac correctli interfac mismatch commonli refer bottomup integr test approach aim minim test cost time effort associ initi develop custom test driver test stub test case well repeatedli adapt rerun regress test purpos level integr 42 test gener proceed descript test gener execut step would like emphas follow approach gener set conform test test case ensur complianc design specif result implement assum implement behav determinist extern control way otherwis gener test case may produc incorrect result 421 categorypartit method test gener use test develop environ tde product develop siemen corpor research 1 tde process test design written test specif languag tsl languag base categorypartit method identifi behavior equival class within structur system test categori partit defin specifi possibl data choic repres choic either data valu refer categori partit combin data valu may string liter repres fragment test script code case definit later form content test case tsl test design creat global behavior model map state transit tsl categori partit choic state equival class therefor repres partit transit state repres choic categorypartit partit use equival class definit path state machin limit certain outgo transit state would case use categori transit defin choic current state combin test data string send receiv event annot refer next state final state defin choic empti test data string 422 gener procedur recurs direct graph built tde root categorypartit contain differ path choic plain data choic graph may contain cycl depend choic definit equival graph global state machin test frame test case one instanc initi data categori partit one possibl path root leaf potenti infinit reachabl tree graph instanti categori partit random select choic possibl set choic defin categorypartit case categori choic select everi instanti test frame restrict branch possibl graph partit howev new choic select random everi new instanti allow full branch within graph significantli influenc test data gener content test case consist data valu associ edg along path graph 423 coverag requir tsl languag provid two type coverag requir gener requir control test case instanti gener test requir defin test frame creat exampl coverag statement defin categori partit choic constrain requir caus tde omit certain gener test case exampl maximum coverag definit rulebas constraint categorypartit instanti combin instanti precondit instanti depth limit test requir defin global within tsl test design attach individu categori partit choic tde creat test case order satisfi specifi coverag requir input sequenc subsystem equival path within global behavior model repres subsystem start initi state receiv transit event extern connect stimul subsystem send transit event extern connect defin result output observ test execut tool commun perform event unit test purpos default coverag criterion transit within statechart must travers least integr test transit involv compon interact exercis subsystem compon defin part model process coverag requir formul ensur interfac transit test 424 exampl figur 6 present test case deriv global behavior model shown figur 5 one test case suffici exercis interfac txport tuser timer defin compon line gener test case format repres either input event expect output event chose test case format stimul event expect respons use string send receiv respect follow connect event name current event paramet remedi futur work figur test case transmittertim subsystem sequenc diagram execut test case shown figur 7 note extern connect timer possibl event exttimeout event allow timeout trigger without real hardwar timer avail receiv user msg start data0 msg ackack data0 ackcancel success transmiss receiv user msg start data0 msg ack ack exttimeout data0 timeout data0 cancelack b time transmiss figur 7 sequenc diagram exampl 43 test execut section show gener test case map comcorba program model describ execut test driver includ stub gener test case seen earlier test case consist sequenc send receiv event follow intent send event stimul object test connect tuser map object refer store variabl tuser defin test case5 event msg map method call object referenc tuser receiv event repres respons object test receiv appropri sink object connect txport map object refer store variabl txport event data0 map callback object test fire event call back sink object identifi variabl txport sink object thu act stub object would implement txport interfac next higher layer softwar 5 current implement tnt initi code instanti transmitt object store object refer variabl tuser written manual typic reactiv softwar compon expos interfac allow interest parti subscrib event notification6 layer x1 test driver sink 1 msg txport txport layer x tuser tuser 2 data0 transmitt figur 8 interact object test interact test execut environ transmitt object shown figur 8 testdriv call method msg transmitt object referenc variabl tuser transmitt object notifi sink object via outgo txport interfac test case execut involv receiv event requir comparison outparamet return valu expect valu also evalu event pattern event pattern specifi event expect respons particular stimuli expect respond accomplish sink object associ test case need monitor see requir sink method invok 5 implement tnt tnt environ develop siemen corpor research order realiz work describ designbas test environ consist two tool exist test gener tool tde extens uml tdeuml tec test execut tool thu name tnt new environ interfac directli uml model tool rose2000 rose realtim 60 ration softwar figur 9 show test case gener initi within ration rose section briefli describ implement strategi 51 tdeuml figur depict class diagram tdeuml tdeuml access rose applic microsoft com interfac fact applic implement com server com compon wait event implement tdeuml java use microsoft visual j gener java class given com interfac class interfac rose object model thu repres java class data type convert consist rose applic export administr object well model object repres underli rose repositori rose also provid extens interfac rei integr extern tool known addin new tool tdeuml instal within rose applic addin invok via rose tool menu upon invoc current rose object model import includ necessaryin current implement tnt initi code instanti sink object regist transmitt compon written manual statechart process use techniqu describ previou section file need test gener test execut gener figur 9 gener test within ration rose figur 10 class diagram tdeuml 52 tec test environ distribut componentbas softwar tec specif address test execut test gener method describ section 42 support compon commun synchron tec alreadi support synchron asynchron communication7 test environ specif design test com corba compon unit integr test current version tec support test com compon use part tnt environ standalon tool includ follow featureswith asynchron commun compon test send respons event sink object time thread test har librari c framework provid basic infrastructur creat execut test driver test case compil use gener test case c test case definit one illustr figur 6 gener test case close cooper test har librari regular c compil use creat execut test driver gener code test har librari gener test driver com compon expos interfac defin tec environ use gener c sink class idl interfac definit file gener sink class also close cooper test har librari test provid user mean run test case interact graphic user interfac batch mode inform gener test execut written xmlbase tracefil test control center provid differ view data trace view error list execut summari view easili defin write addit xsl style sheet 6 evalu exampl section describ evalu approach use altern bit protocol exampl discuss section 2 exampl compris four compon statechart connect use interfac depict figur 1 current appli approach set product within differ siemen busi unit result experiment yet avail aim examin issu fault detect capabl approach 611 compon statist tabl 2 show number state transit four statechart import tdeuml convert normal global model composit step describ section 32 realiz size compon moder use highlight number issu exampl normal state machin compon never twice size associ uml statechart tabl compon statist 612 defin integr test import decis develop choic appropri integr test strategi assum bottomup integr test strategi use develop may wish integr transmitt timer compon first follow receiv comch compon afterward two subsystem would group togeth form complet system case interfac two subsystem txport would need test show subsystem definit chosen integr test strategi subsystem transmittertim compon transmitt subsystem comchreceiv compon comch receiv subsystem abprotocol compon transmitt timer comch interfac txport 613 appli composit reduct step time taken import four statechart well execut time composit algorithm neglig tabl 3 show number statestransit creat composit step well valu reduct step appli typic reduct algorithm appli composit step valu ital show combin compon common interfac number combin high would expect combin gener use intermedi step valu bold indic number statestransit use integr test strategi valu show number statestransit substanti reduc case four compon evalu togeth complet system tabl 3 size intermedi result exampl compos model without intermedi reduct step instead reduc last composit step number state transit reach differ howev lie size intermedi result associ higher execut time case benefit appli reduct algorithm neglig due size exampl theoret could lead signific differ execut time 614 gener execut test case time taken gener test case three subsystem exampl took less five second tdeuml gener total 7 test case three subsystem one test case subsystem transmittertim three test case subsystem comchreceiv three test case abprotocol contrast integr approach four compon test correspond interfac result total 4 test case increment integr test strategi result test case gener bigbang approach smaller integr step usual result stabl system higher percentag detect error examin gener test case show free redund multipl coverag commun transit come rel close optimum 7 relat work year numer paper dedic subject test data gener 13813171921 moreov number tool develop use within academia commerci market approach tool base differ function test concept differ input languag graphic textual natur howev receiv widespread accept softwar develop commun larg number reason first mani method tool requir steep learn curv mathemat background second model larger system beyond singl compon could support theoret practic third design notat would use basi test design often use particular applic domain exampl sdl use predominantli telecommun embed system domain howev widespread accept use uml throughout softwar develop commun well avail suitabl tool situat may chang apart approach know one effort area offutt et al 12 present approach similar gener test case uml statechart howev approach differ focu examin differ coverag requir abl gener test singl compon furthermor autom test execut step order develop automat gener execut test addit specif address problem issu associ model distribut componentbas system 8 conclus futur work paper describ approach aim minim test cost time effort associ develop custom test driver test case valid distribut componentbas system end describ realiz test gener test execut technolog integr umlbas visual model tool show approach support unit integr test phase compon develop lifecycl appli com corbabas system briefli outlin implement strategi evalu approach use given exampl follow paragraph focu issu result work softwar system especi embed one use asynchron commun mechan messag queu share global messag instead synchron commun mechan adopt approach asynchron commun complex model requir model queu messag event furthermor commun buffer must includ model compos depend implement size event queue limit mechan implement detect overflow queue gener test case asynchron commun system complex may quickli lead scalabl problem would need examin address futur work method asynchron commun system present 59 20 compon interact model approach use event messag exchang contain paramet valu futur work result model parameter commun achiev model specif must enhanc annot possibl data valu type well test requir valu tde allow test case gener use data variat sampl possibl rang paramet valu pre postcondit constrain valid data valu constraint check test execut extend error detect possibl uml allow user model statechart hierarch state machin concurr state global behavior model present paper model compon nest state hierarch state machin intern data condit state machin mean global state machin variabl influenc transit behavior support concurr state also support yet futur work hope support develop optim integr test strategi examin type extent interact compon environ could provid suggest develop order compon need integr could includ analys intermedi composit step well initi graphic depict system interfac approach could significantli influenc effect effici qualiti test design model realtim system time aspect constraint becom essenti futur work hope analyz realtim model test requir instanc test case could annot realtim constraint assert postcondit within model could also contain inform could check test execut 9 acknowledg would like thank tom murphi head softwar engin depart siemen corpor research well professor manfr broy heiko ltzbeyer technic univers munich 10 r automat gener test script formal test specif reinhold test refin refin test distribut compon system new comput model one test case gener asynchron commun state machin prentic hall introduct automata theori automat gener test data kang enterpris java bean specif commun concurr gener test case uml specif automat test case data gener unifi model languag refer manual lapon aleta trace analysi compon softwar case studi statist test reuseabl concurr object sahay p tr commun sequenti process softwar test techniqu 2nd ed objectori model design commun concurr predicatebas test gener comput program compon softwar unifi model languag refer manual comput system gener test data use domain strategi introduct automata theori languag comput case studi statist test reusabl concurr object test refin refin test ctr kansomkeat wanchai rivepiboon automatedgener test case use uml statechart diagram proceed annual research confer south african institut comput scientist inform technologist enabl technolog p296300 septemb 1719 marlon vieira johann leduc bill hasl rajesh subramanyan juergen kazmeier autom gui test use modeldriven approach proceed 2006 intern workshop autom softwar test may 2323 2006 shanghai china mass soldal lund ketil stlen deriv test uml 20 sequenc diagram neg assert proceed 2006 intern workshop autom softwar test may 2323 2006 shanghai china j jenni li david weiss howel yee codecoverag guid priorit test gener inform softwar technolog v48 n12 p11871198 decemb 2006 mauro pezz michal young test object orient softwar proceed 26th intern confer softwar engin p739740 may 2328 2004 andr l l de figueiredo wilkerson l andrad patrcia l machado gener interact test case mobil phone system use case specif acm sigsoft softwar engin note v31 n6 novemb 2006 dianxiang xu xudong gener test requir aspectu use case proceed 3rd workshop test aspectori program p1722 march 1213 2007 vancouv british columbia canada hartman k nagin agedi tool model base test acm sigsoft softwar engin note v29 n4 juli 2004 p vr murthi p c anitha mahesh rajesh subramanyan test readi uml statechart model proceed 2006 intern workshop scenario state machin model algorithm tool may 2727 2006 shanghai china g friedman hartman k nagin shiran project state machin coverag softwar test acm sigsoft softwar engin note v27 n4 juli 2002 philip samuel rajib mall pratyush kanth automat test case gener uml commun diagram inform softwar technolog v49 n2 p158171 februari 2007