reus analog compon abstractus formal specif repres softwar compon facilit determin reusabl precis character function softwar welldefin syntax make process amen autom paper present approach base formal method search retriev modif reusabl softwar compon twotier hierarchi reusabl softwar compon exist compon analog queri specif retriev hierarchi specif analog retriev compon compar queri specif determin chang need appli correspond program compon order make satisfi queri specif b introduct major object reus system classifi reusabl compon retriev exist librari modifi retriev compon satisfi queri specif 1 2 previou investig construct retriev process formal specifi implement 3 4 5 6 set reusabl softwar compon formal specifi twotier hierarchi softwar compon construct formal specif repres softwar implement verifi correct lowerlevel hierarchi creat subsumpt test algorithm determin whether one compon gener anoth level facilit applic logic reason techniqu finegrain exact determin reusabl candid higherlevel hierarchi provid coarsegrain determin reusabl candid construct appli hierarch cluster algorithm gener compon lowerlevel hierarchi hierarch structur provid mean repres store brows retriev reusabl compon furthermor formal specif provid mean verifi given softwar compon correctli satisfi current problem figur 1 show twotier hierarchi set containerbas softwar compon formal specifi rectangular node repres specif individu compon oval node repres collect specif cluster accord syntact similar reusabl compon retriev typic use directli implement queri specif numer softwar reus project explor use analog similaritybas techniqu determin softwar reus due space constraint descript project given may found 22 paper describ new approach retriev compon base analog exist queri specif paper describ new approach modifi retriev compon base analog exist queri specif analog relationship queri specif specif exist compon use guid chang program code exist specif analog reason long recogn import tool overcom search complex find solut novel problem induc gener knowledg experi 7 analog present basic challeng question two specif problem represent given purpos alik 8 develop program base seri transform extens investig 9 10 11 12 program modif differ tradit program transform program transform typic correct preserv respect figur 1 twotier hierarchi adt softwar compon origin specif program modif approach need program satisfi origin inputoutput specif along specif new program dershowitz 13 develop approach program construct modif base observ programm devot limit amount time effort newli develop code given specif programm often appli knowledg earlier program develop similar problem work focus augment dershowitz method order make amen automat applic facilit softwar reus remaind paper organ follow section 2 present formal specif notat use describ reusabl softwar compon section 3 present analog match process find set analog match exist specif queri specif section 4 describ program modif model base analog section 5 give exampl modifi analog compon base analog match exist queri specif section 6 describ relat project use analog similaritybas techniqu determin softwar reus section 7 give conclud remark briefli overview futur work formal specif softwar compon firstord predic logic fopl commonli use specifi program 14 15 16 17 order specifi reason program data type array simpl variabl sort type ad fopl obtain ordersort predic logic ospl moreov ordersort specif shown use tool describ partial defin function error handl specif abstract data type 18 19 ordersort predic logic ospl base ordersort specif use repres type knowledg hierarchi give relationship among differ type sort refer data type given system sort hierarchi begin primit data type int float addr recurs built use structur array set use ordersort predic logic specifi softwar compon relationship two compon reusabl one compon respect anoth base sort inform logic subsumpt test appli specif bodi detail regard syntax semant ospl reader refer appendix gener softwar compon consist requir design knowledg code segment test plan compon use vehicl encapsul data hide also provid basic unit reusabl defin compon explicitli userdefin type whose behavior describ formal specif skeleton compon specif shown compon compon name identifi f inherit compon name identifi method method name identifi key word inherit indic current compon inherit properti compon previous defin compon specif method section defin behavior method compon format method specif method method namev ar domainsort requir preexpress modifi variabl ensur postexpress express use specifi method given compon includ preexpress postexpress base ospl method interfac specifi domain sort rang sort requir claus describ restrict argument defin method may invok although equal defin ospl express contain equal alway transform pure ospl express 20 variabl prime latest valu given variabl interpret omit requir claus equival requir true ensur claus place constraint behavior method requir ensur claus relat two state program state method call call precondit state termin call postcondit requir claus refer valu precondit ensur claus may refer valu pre postcondit modifi claus describ variabl chang omit modifi claus equival assert modifi noth mean object allow chang valu execut method exampl method specif compon stack shown figur 2 consist function prototyp follow bodi specifi term pre postcondit compon stack f method creat modifi stack ensur method destroy stack modifi stack ensur trashedstack method requir fullstack modifi stack ensur topstacknewel method requir emptystack modifi stack ensur topstack topel method requir emptystack ensur topstacktopel figur 2 compon specif stack figur 2 assert method creat constructor compon method destroy destructor compon method push add element stack method detach delet element stack method topel return top element belong stack moreov variabl express without quantifi assum univers quantifi 3 analog match analog match defin group pair symbol term candid queri specif pair base type similar consid follow two express theori abstract data type f toppushstack match process may gener follow set analog match ftop 7 head push 7 enqu stack 7 queue ff 7 fi 7g exampl exhibit biject map term toppushstack howev featur need order increas flexibl analog match exampl ffl variabl predic function constant symbol may match differ variabl predic function constant symbol respect ffl argument predic function match may permut match process sinc argument order function predic often arbitrari obvious unreason insist match preserv argument order therefor allow permut argument order increas scope applic ffl semant inform sort hierarchi equival class incorpor analog match process ffl techniqu seek syntact similar use reduc comput complex analog match process ffl symbol term may left unmatch analog match process ie loosen restrict biject map gener univers accept recogn algorithm determin softwar reus base analog furthermor formal theori rule rigor describ process guarante gener use analog match 21 therefor analog match algorithm use heurist direct search use analog match given heurist captur systemdefin criteria constitut reason analog 31 heurist use exampl previou section match associ two term ie subset cartesian product set symbol occurr term exampl term contain 6 symbol cartesian product contain 6 theta 6 36 symbol henc 2 36 subset clearli heurist need prune search space heurist use analog reason system must determin kind inform system enhanc applic heurist contextu knowledg includ heurist order develop reus system base analog support use domainspecif knowledg domainindepend techniqu search modif process assum major domainspecif inform suppli interact user guid framework provid domainindepend techniqu associ often believ make good analogu similarli match contain high proport ident associ make good analog ident associ refer pure base syntact inform call approach ident heurist howev interest analog involv signific proport nonident associ similar incorpor determin analog match promis similar match defin distanc associ term definit distanc defin section 32 call heurist similaritybas heurist heurist alreadi incorpor system classifi set softwar compon retriev set candid compon compon librari 3 4 5 6 anoth promis analog approach consid match take account structur term call approach structurebas heurist analog reason system use form structur map find analog two problem one approach make use sort hierarchi ie primit type well type develop construct type inform make similar judgement thu earn name sortbas heurist defin two term analog common ancestor sort hierarchi analog match process favor associ two analog term heurist criteria prefer match item similar type accord equival class partit symbol predic function symbol constant call approach equivalencebas heurist requir system design defin equival class predic function symbol specifi softwar compon system 3 4 5 6 construct process assess equival class predic function construct unifi hierarchi softwar compon exampl function lengthqueu give length queue function sizestack give size stack belong equival class cardinalitycontain give cardin entiti contain analog match consid reus framework predic map predic oper match oper number argument proposit connect map proposit connect therefor analog match process begin retriev set compon type syntact similar mean filter compon consid reus base set analog sought queri specif retriev specif analog found specif use guid chang correspond sourc code 32 comput similar section simpl evalu method comput similar given set candid compon similar queri specif retriev softwar librari base degre similar exist specif queri specif paper similar quantifi nonneg magnitud valu call distanc distanc comput sever evalu function base knowledg avail sort hierarchi concept equival class conceptu distanc two term evalu distanc shortest path correspond sort sort hierarchi use turn evalu similar queri specif specif exist compon distanc two let distanc two sort 1 2 denot sort distanc sort 1 sort 2 defin distanc shortest path 1 2 sort hierarchi path exist path valu set 1 1 2 distanc zero figur 3 give simpl sort hierarchi set subsort contain partialorderset subsort set distanc sort stack sort doublelist 3 accord definit 1 ie stack contain stack set list queue partialorderset integerset doublelist singlelist figur 3 simpl sort hierarchi distanc term let distanc two term 1 2 denot refer term oper least one argument let w 1 weight associ oper w 2 weight associ argument assum 0 w 1 10 distanc two term defin follow equival class term equival class consid similar 3 either 1 2 variabl theta w 2 calcul recurs function mthetan theta w 2 weight w 1 w 2 repres distanc oper correspond argument contribut distanc term 1 2 weight provid either domain analyst compon specifi reflect design decis domainspecif inform distanc express let distanc two express ff fi denot e ff fi distanc two express defin follow pred fi equival class e ff fi j 0 pred fi e ff fi j ff fi 05 binari oper op repres predic connect implic iff comput distanc two express input express skolem henc variabl assum univers quantifi base distanc term express distanc two method defin follow definit 4 distanc two method let distanc two method 1 2 denot dm precondit 1 2 postm 1 postcondit 1 2 distanc two method follow final distanc two compon defin term distanc correspond method distanc two compon let distanc two compon c 1 c 2 denot c c 1 c 2 provid c 1 candid compon c 2 queri compon specif distanc c 1 c 2 defin min 33 topdown match approach second step analog match process assess analog relationship queri specif specif retriev base similar context recogn reusabl candid specif solv queri specif analog match process flexibl notion analogybas match rather impos design bia toward singl heurist easili tailor particular domainspecif strategi heurist mention section 31 refin specif numer metric creat measur use given analog precis definit good analog match given analog problem regard optim problem optim problem find global optimum typic feasibl therefor might want gener set local optim analog point analog match process regard recurs problem solv process initi problem match specif two term match process continu new subproblem produc recurs solv new subproblem produc two case 1 one subproblem term constant variabl 2 new analog match applic subproblem analog match process gener set analog match two input express let list term form term empti list denot similar prolog definit list list head first element l tail list l except first element head delet list defin analog pair list length analog two list differ cardin discuss later definit 6 analog pair list two list 1 follow condit hold definit say result appli analog match pair list equal union result match correspond term two input list sinc ospl use express behavior softwar compon object languag analog system base upon firstord logic sort hierarchi sort equivalencebas heurist suggest match two term analog match limit term equival class term sort explor incorpor properti commut match process unsatisfactori analog match pair term base arbitrari preserv argument order gener subproblem match process classifi two kind branch orbranch andbranch want match term contain commut oper set deriv subproblem may suggest one way solv problem therefor orcas appli current problem branch set new subproblem gener new group analog match exampl consid follow g sinc max min commut oper match process produc set partial match fmax 7 ming respect match process gener follow two orbranch subproblem hyg thu current state match pair term involv set partial match two set orbranch subproblem need solv one orbranch subproblem order proceed subsequ stage match process orbranch subproblem gener permut order argument obtain new set argument map let us consid anoth exampl f fi commut oper match process gener set partial match f7g two andbranch subproblem gener follow f fi j hi g current problem split two new set subproblem repres andbranch togeth partial match newli gener match two subproblem conflict inconsist analog match gener defin consist shortli exampl may conclud andbranch subproblem gener whenev argument match within ident argument map perform orbranch subproblem gener whenev match process encount commut term attempt perform argument match permut argument map term term latter case includ ordinari predic connect exampl accord previou discuss defin matchabl two express ie attempt answer question two express matchabl follow definit check matchabl two express recurs simplest notion matchabl two term common ancestor sort hierarchi two term equival class two express 1 2 matchabl denot matchablet 1 2 iff one follow condit hold analog ie common ancestor sort hierarchi 2 either t1 term 2 t1 pred 2 term predic equival class respect analog match process two input 1 2 1 matchabl 2 return empti set definit consist analog match defin term conflict conflict occur given term one match set match theta three separ case enumer indic simpl variabl function list express definit 8 conflict let match oe simpl identifi function list term oe 1 conflict exist set match theta denot one follow condit hold conflictff 7 gg theta therefor given match oe consist set match theta conflict within theta definit 9 consist match oe consist exist set match theta oe conflict theta denot consistentoetheta consistento theta j conflicto theta match algorithm restrict preserv argument order second requir definit 8 never applic match process score function let phi set analog match form fx 1 7 g score phi comput score function distanc function overload appli identifi function list term 34 match algorithm analog match process gener set analog match two formal specifi input express defin applic analog match process express follow given match subproblem consist pair specif ff fi well exist set match phi match algorithm attempt find new set consist match return user assum variabl pair input either skolem univers quantifi algorithm match expr match two express given figur 4 algorithm match two term match term given figur 5 algorithm base analog match approach present section 33 consid algorithm match two express input term algorithm match two term match term invok condit two term matchabl case 3 algorithm match expr give exampl gener andbranch subproblem consist analog match correspond item two input list hold case 5 6 7 algorithm match expr give exampl gener orbranch subproblem set analog match smaller score return call function let us consid algorithm match two term algorithm match term case 1 match two term either one variabl algorithm return two term new match matchabl similar case 3 algorithm 1 case 3 algorithm match expr match two list case 4 match two oper least one argument noncommut case 5 match two oper input oper commut argument case 6 match two oper differ number argument sever heurist exploit match algorithm two algorithm use topdown scheme compar two input express term predic connect two input express functor symbol two input term match argument match perform henc structurebas heurist appli howev commut argument incorpor match algorithm term commut algorithm 1 match input two sigmaexpress current partial match phi 4 sigmaexpress 1 2 sigmaterm letomega fi predic connect output new set partial match procedur begin switch case match two term returnmatch els returnphi case match two empti list case 3 e 1 match two list express returnmatch expr ail case match two express returnmatch expr case 5 e match two express match match case 6 e match express term case 7 e match term express end figur 4 match two express algorithm 2 match input two term set partial match phi output new set partial match procedur begin case 1 either 1 2 variabl g els returnphi case match two empti list case 3 match two list returnmatch case match two oper either f g noncommut consistentff 7 gg phi f term g f pred g return match els return case match two commut oper consistentff 7 gg phi f term g f pred g match match els return case 6 match two oper differ number argument returnmatch end figur 5 match two term oper sever variat term permut argument creat gener orbranch subproblem otherwis andbranch subproblem gener pair input argument score function base distanc notion use determin set match return therefor similaritybas heurist incorpor match algorithm notion equival class use determin two functor match exampl case 4 5 algorithm match term henc equivalencebas heurist appli algorithm match two term definit predic consist given definit 9 therefor implicitli exclud possibl mismatch analog match allow map one toon even though may use analog real world mismatch allow analog match algorithm consider larg amount domain knowledg would need encod system knowledg base case 6 algorithm match term deal condit argument two input term differ size 6 n case need transform rule rephras input term make argument cardin transform rule requir domain knowledg exampl suppos want match p c sinc function squareroot divis differ number argument need transform system rule 1 match easili found f 7 p 7 c 1 7 dg system rule theta 1 follow algorithm provid framework domainindepend match process domain knowledg tailor specif type inform complex algorithm increas match process encount commut oper let levelff denot depth oper ff exampl depth constant 0 depth leveloparg g pair commut oper ff fi match process gener two subproblem henc algorithm upper bound minflevelff levelfig theta 2 minflevelfflevelfig detail regard complex analysi algorithsm pleas see 22 algorithm match term case 5 alway gener two set analog match current oper abl gener orbranch subproblem commut consist two argument assum case 6 algorithm match term transform input term one pair oper number argument implement section present implement match algorithm prototyp system facilit softwar reus implement quintu prowindow languag dialect prolog support objectori organ graphic element system provid function construct hierarch librari 3 retriev exist compon logicbas gener relationship queri compon 5 assist user modif gener analog exist compon satisfi queri specif 6 let exist specif old spec specif stack class given figur 2 queri specif queri spec specif doublelist class given figur 6 addit constructor destructor oper compon defin four method addathead addattail detachathead detachattail purpos concis consid relationship two method stackpush doublelistaddattail order find analog exist compon base queri specif doublelist appli match algorithm method doublelist figur 7 show result applic match algorithm method doublelistaddattail method stackpush left part figur 7 display twotier hierarchi group compon describ formal specif comput analog window display queri exist compon method respect candid analog window display match found match expr match algorithm match help term modifi exist compon reus user may discov inher similar two compon logic relationship found autom reason given candid match user reus redesign queri compon exampl system use match expr suggest sever match may use modif process exampl result suggest order satisfi queri specif input object chang stack dbllist new element ad tail dbllist instead top stack 4 program modif model regard modif process problem solv process figur 8 contain framework modifi compon base analog found two formal specif problem process defin specif repres reusabl softwar compon solut becom execut implement correspond compon doublelist f method doublelist modifi dbllist doublelist ensur method destroy dbllist modifi dbllist ensur trasheddbllist method doublelist modifi dbllist ensur headdbllistel method doublelist modifi dbllist ensur taildbllistel method doublelist requir headdbllistel modifi dbllist ensur method doublelist requir taildbllistel modifi dbllist ensur figur 6 compon specif doublelist figur 7 implement match process specif formal specif use index mechan tradit task classif retriev search program modif amen autom reason techniqu greatli facilit scalabl compar keywordbas manual approach softwar reus object softwar develop context solv problem defin specif queri spec find appropri implement old spec refer candid specif whose implement old program known analog match process use guid modif process perform softwar develop set analog match found two specif use basi potenti chang exist specif correspond softwar compon satisfi relationship defin relationship specif implement modul given specif two method old spec queri spec assum old spec specif method given compon librari queri spec specif analog match queryprogram oldprogram queryspec oldspec satisfi satisfi program analog match modif figur 8 analog reus modif process method queri compon let old program implement satisfi old spec suggest step modifi exist program old program new implement queri program base analog match old spec queri spec given figur 9 method specif old spec exist compon analog method specif queri spec queri compon set analog match theta found analog match process present section 3 accord theta exist implement old program modifi program old program step also rewrit unexecut statement modifi program old program eg type incompat final old program queri spec suppli program synthes either semiautom program synthesi system 12 23 programm use formal approach program deriv 17 24 25 26 order obtain new implement queri program satisfi queri spec input old spec queri spec old program output queri program procedur 1 analog match find theta set analog match old spec queri spec 2 program replac refin old program old program accord theta 3 program adapt synthes new segment old program obtainder queri program satisfi queri spec figur 9 modif process base analog analog match candid queri specif found effort requir develop appropri implement queri program significantli reduc sinc need chang specif level clearli determin sourc code edit call approach modif exist program base analog match two specif analog reus modif process armp problem find promis candid specif queri specif larg knowledg base known implement specif refer base filter problem 27 reus system retriev scheme base similar among reusabl compon find set candid specif similar queri specif retriev process augment armp model form preprocess phase emphas reus finegrain compon level limit amount domain knowledg need order appli analog reason furthermor comparison current techniqu reus larg base keyword searcher specificationbas reus least effect addit amen autom reason 5 modif exampl program modif combin analog transform synthesi verif section give exampl program modif base analog show match process play import role modif process consid follow specif squar root program pre postcondit squar root program respect given two number e desir result approxim r real number squar root toler valu e assum exist program perform real divis follow begin e qs c q q od end appli match process algorithm match expr pair postcondit two program case 1 ie r 1 r j g transform rule 1 match found follow use algorithm match term case 7 c 7 match appli real divis program becom begin e od end howev 1 contain express object implement program need rewrit statement preserv semant elimin p program squar addit comparison regard elementari oper obtain follow program begin e od end algorithm result r fall rang 0s ie 0 r howev 0 r 1 never find desir answer problem solv replac initi command 1 squar root bound 1 consequ desir program becom begin e od end despit simplic exampl potenti benefit program modif appar exampl section programm save program effort reus modifi program instead program everyth scratch analog match found programm develop part program reus old one hope requir much less necessari gener entir program reus framework appli develop graphic user interfac base specif exist graphic compon 6 formal specif motif widget construct appli classif scheme organ hierarch structur user queri structur term highlevel implementationindepend specif specif level user concern set specif attribut valu given widget widget combin achiev given behavior provid mean user classifi brows retriev graphic compon base behavior function enabl user focu high level requir graphic interfac search mechan determin whether given compon modifi combin compon satisfi queri specif 6 relat work section contain descript softwar reus project use techniqu similar present paper two major categori reus techniqu describ first techniqu involv use analog discuss next techniqu calcul similar softwar compon base represent softwar describ 61 analog specif softwar reus dershowitz 28 suggest formul program use analog basic tool program abstract analog first sought specif given program process yield abstract specif may instanti given concret specif analog use basi transform exist program abstract schema help complet analog given concret specif new problem may compar abstract specif schema suggest instanti schema yield correct program rose2 project 29 base knowledgebas refin paradigm softwar develop process usersuppli requir use select custom highlevel design paradigm support knowledg base highlevel design abstract call design schema refin rule schema rule use custom user design satisfi user requir design decis bhansali 30 describ deriv concret program semiform specif problem use transform approach base set transform rule produc topdown decomposit problem statement level target languag primit topdown decomposit process combin idea research plan gener program effici reus domain specif knowledg emphas approach apu system use propos paradigm synthes unix program shell script semiform specif program maiden sutcliff 31 investig potenti specif reus analog possibl benefit requir analysi develop two realworld exampl determin potenti specif reus analog first exampl illustr analog airtraff control atc flexibl manufactur system fm second exampl identifi analog atc classroom administr system ca fm ca propos softwar engin analog model base upon three type knowledg solut knowledg domain knowledg goal knowledg lung urban 32 propos analog model softwar reus addit constraint propos maiden sutcliff ad constraint handl softwar analog analysi inform due complex softwar system propos analogybas domain analysi method support high level reus across domain purpos help user better understand domain support potenti futur reus differ domain caret analogybas retriev system appli softwar design reus design case actual design design schema templat avail reus knowledg base caret consist background knowledg design librari background knowledg contain basic object lattic data type lattic isapartof hierarchi composit type design librari consist set domain dictionari one per design famili bookkeep inform facilit retriev set design schema templat exist applic domain domainspecif design schema correspond design famili special schema correspond design subfamili caret use twophas approach retriev first descript queri design case use determin belong one design famili dictionari entri design famili provid similar design case correspond design schema search fail analogybas search pursu objecttyp datatyp lattic use establish relationship queri design design librari similar valu calcul new design case retriev design librari comput model similar develop support softwar reus base analog 33 telo languag 34 use describ similar differ artifact code design requir specif languag structur object orient data model multipl meta classif multipl gener type attribut abstract use model classif generalizationspeci attribut four basic categori telo object use calcul similar entiti token attribut token entiti class attribut class model base similar distanc function distanc calcul object class respect identif classif hierarchi gener attribut 62 similaritybas techniqu softwar reus number project use casebas reason cbrlike techniqu facilit softwar reus gener cbr five gener characterist 35 first cbr attempt recal old case help solv new problem next understand new situat term old case old case may applic problem becom better understood third cbr involv adapt old case fit new need fourth process evalu adapt old case potenti process learn solv given problem new novel way inform use futur final need abl integr new experi memori properli hierarchi case built bottomup fashion exist case order facilit recal retriev 35 case cluster gener accord set common featur type indic use case includ goal constraint featur combin describ given problem solv remaind section overview sever project use cbrlike techniqu address problem softwar reus base major characterist cbr system reus framework share similar object mean achiev goal differ major differ formal specif softwar compon use mean classif retriev adapt softwar autom reason appli logic analog relationship specif use determin set candid compon reus also relationship specif use determin type adapt need modifi exist compon satisfi requir new compon aireus system air 37 support brows softwar librari compon meet userspecifi requir represent scheme similar framebas system search mechan base similar comput much like use casebas reason system 35 compon defin set featureterm pair featur repres inform respect given classif scheme defin set relat term candid reus compon retriev base degre similar target sourc descript similar describ term distanc factor proport amount effort need compos modifi exist compon satisfi target compon effort calcul base inform obtain experienc softwar develop domain specialist prietodiaz 38 develop facet classif scheme support storag retriev reusabl softwar compon facet refer import keyword obtain program descript document approach make use facet scheme thesauru conceptu distanc graph softwar compon associ descriptor consist order term facet thesauru use help refin definit compon provid context inform conceptu distanc graph provid mean measur similar facet term use turn evalu similar requir softwar specif avail compon 37 facet approach requir domain analysi construct conceptu graph conceptu distanc assign base experi intuit common sens lassi larg softwar system inform environ 39 use semanticnet base approach provid structur represent knowledg reason respect semant inform knowledgebas use store differ type inform larg complex softwar system focus programm view semanticbas search algorithm use logic inferenc use retriev inform larg softwar compon framebas languag use repres class object action domain analysi use extract descript object action base inform gain read larg volum architectur document comment sourc code file frame definit contain superfram gener class set restrict parent frame creat special object slot use contain constraint restrict frame use type represent hierarchi frame creat inform knowledgebas applicationspecif order achiev invis across differ type softwar artifact sourc code document error report etc case assist reus object librari carol 40 support reus class descript objectori program carol comput similar exist class descript target class specif similar descript return case consist set prolog fact describ class term name attribut relationship class store case format term class name class type instanc variabl other class method classifi accord type process perform variabl method modifi instanc variabl check instanc variabl return variabl attribut orient approach use search reusabl class attribut includ class name take consider synonym posit class hierarchi attribut import base userdefin weight user specifi target class assist templat reqcol requir collector 41 tool facilit requir captur analysi process conceptu graph cg 42 use captur domain inform graph match algorithm use determin whether exist cg match cg new problem descript reqcol node either concept relat problem descript relat defin concept relat one anoth concept may either object action problem domain concept relat associ type thu respect type hierarchi defin isa relationship direct arc use connect concept relat reqcol store pattern cg specif applic domain user describ problem term cg reqcol invok match process determin whether new cg match cg store system graph match algorithm use recurs approach calcul similar pair arc subarc respect cg heurist use mean attempt reduc number comput necessari find best possibl permut arc pair case two cg number arc match algorithm constant weight factor account unmatch arc depend amount similar store cg newli usercr cg user may wish add inform new cg make close fit store cg pursu requir analysi process without use exist cg 7 conclus paper describ approach appli analog reason reus softwar compon describ formal specif studi demonstr analog match specif effect mean softwar reus investig also show support understand candid analog import factor success specificationlevel reus reus framework appli develop graphic user interfac gui exist graphic user interfac compon 6 gener armp need didact support comprehens candid specif requir explan facil help softwar develop understand target domain base specif sinc autom armp unlik achiev perfect match explan system domain expert also necessari evalu appropri target specif current investig softwar reus program adapt exist specif gener abstract queri specif 43 futur investig sophist knowledg incorpor evalu function order increas number analog candid retriev queri specif also investig specif designlevel descript system order perform coarsegrain determin reus level envis domainspecif inform incorpor determin reus order facilit construct specif reusabl compon complementari investig pursu revers engin order abstract formal specif exist softwar 44 45 46 area formal construct specif requir model 47 48 acknowledg author grate detail comment given anonym review help greatli improv present paper also author greatli appreci assist provid david leak georg spanoudaki igor jurisica r identifi qualifi reusabl softwar compon reus softwar issu research direct use formal method construct softwar compon librari formal method appli reus use autom reason determin softwar reus appli formal method softwar reus paradigm reason analog comput approach analog reason compar analysi reusabl program transform autom transform develop softwar reus softwar develop kid semiautomat program develop system evolut program axiomat basi comput program disciplin program appli formal method autom softwar develop ordersort algebra equat deduct multipl inherit overload except partial oper semant ordersort specif ordersort logic knowledg represent system autom acquisit refin reusabl softwar design compon reus analog compon synthesi procedur data abstract system softwar develop use vdm scienc program fundament deduct program synthesi mechan analog reason program abstract instanti rose2 strategi support high level softwar design reus domainbas program synthesi use plan deriv analog exploit reusabl specif analog analog approach softwar reus similar analog softwar reus comput model telo repres knowledg inform system morgan kaufman represent manag issu casebas reason system comput similar reus librari system aibas approach implement facet classif softwar reus lassi knowledgebas softwar inform system applic casebas reason cbr softwar reus match conceptu graph aid requir reus inform process mind machin formal approach reus gener compon construct formal specif program code twophas approach revers engin use formal method strongest postcondit basi revers engin graphic environ formal develop objectori softwar formal semant object model tr ctr guifa teng xiaodong liu support softwar evolut abstrat rule program knowledg pattern focu comput neurobiolog nova scienc publish inc commack ny 2004