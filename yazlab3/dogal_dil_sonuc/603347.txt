design prototyp perform tool interfac openmp paper propos perform tool interfac openmp similar spirit mpi profil interfac intent defin clear portabl api make openmp execut event visibl runtim perform tool present design use sourcelevel instrument approach base openmp direct rewrit rule instrument direct combin appli gener call interfac consist direct semant pass context inform eg sourc code locat portabl effici way propos openmp perform api allow user function arbitrari code region mark perform measur control use new openmp direct prototyp propos openmp perform interfac develop compat perform librari expert automat event trace analyz lsqb17 18rsqb tau perform analysi framework lsqb13rsqb direct instrument transform defin implement sourcetosourc translat tool call opari applic exampl present expert tau show openmp perform interfac opari instrument tool oper use togeth mpi profil interfac exampl also demonstr propos approach provid portabl robust solut perform analysi openmp mixedmod openmpmpi applic b introduct advent propos languag system express parallel oper whether true parallel languag eg zpl 6 parallel extens sequenti languag eg upc 4 parallel compil direct eg question soon aris regard perform instrument measur conduct perform data analyz map languagelevel highlevel parallel abstract sever issu make interest problem first languag system implement model parallel whose explicit parallel oper gener hidden programm parallel perform event may access directli requir instead support underli runtim softwar observ full support unavail perform must infer model properti second languag system typic transform program parallel execut form make necessari track code transform close perform data correctli map userlevel sourc complex transform difficult perform map last highlevel languag express parallel often goe handinhand interest crossplatform portabl languag system user natur desir program perform tool portabl well perform tool develop issu complic decis regard choic tool technolog implement approach paper consid problem design perform tool interfac openmp three goal perform tool interfac openmp consid expos openmp parallel execut perform system concern execut event state data observ perform measur interfac make interfac portabl across differ platform differ perform tool portabl regard requir definit interfac semant inform access allow flexibl interfac appli sinc openmp compil may implement openmp direct differ includ variat runtim librari oper perform interfac constrain use studi focus mainli instrument interfac event monitor oper state queri clearli type perform measur determin scope analys possibl ideal flexibl interfac support multipl measur capabl master slave x00000001111111000000011111110000111parallel region oper master start serial execut parallel region begin slave start team begin parallel execut team thread hit barrier slave end master exit barrier master resum serial execut figur 1 openmp parallel region oper show state event gener perform model openmp openmp parallel program languag system use express share memori parallel base model nest forkjoin parallel notion parallel region comput work share spread across multipl thread execut thread team see figur 1 languag construct provid thread synchron explicitli implicitli enforc consist oper openmp implement use commentstyl compil direct fortran pragma c c perform model openmp defin base execut event state advoc multipl perform view base hierarchi execut state level refin focu level 1 serial parallel state nest level 2 work share state per team thread level 3 synchron state peracross team thread level 4 runtim system thread state way perform observ target level interest use event specif level event defin identifi point state transit beginend enterexit allow openmp program thought multithread execut graph state node event edg perform instrument interfac would allow monitor event access state inform figur 1 show diagram openmp parallel region oper identifi serial parallel p state parallel startup startup shutdown shutdown state differ event differ level master slave thread base diagram given workabl perform instrument interfac develop measur tool captur serial parallel perform structur block call pomp parallel forkd call pomp parallel begind structur block call pomp barrier enterd call pomp barrier exitd call pomp parallel endd call pomp parallel joind loop call pomp enterd loop call pomp barrier enterd call pomp barrier exitd call pomp exitd structur block call pomp workshar enterd structur block call pomp barrier enterd call pomp barrier exitd call pomp workshar exitd call pomp barrier enterd call pomp barrier exitd structur block structur block call pomp section enterd call pomp section begind structur block call pomp section endd call pomp section begind structur block call pomp section endd call pomp barrier enterd call pomp barrier exitd call pomp section exitd structur block call pomp critic enterd call pomp critic begind structur block call pomp critic endd call pomp critic exitd structur block call pomp singl enterd call pomp singl begind structur block call pomp singl endd call pomp barrier enterd call pomp barrier exitd call pomp singl exitd atom express call pomp atom enterd atom express call pomp atom exitd structur block call pomp master begind structur block call pomp master endd tabl 1 propos openmp direct transform 3 propos openmp perform tool interfac perform interfac develop meet goal openmp although differ interfac possibl see 5 10 basic idea behind propos defin standard api perform measur librari use instrument user openmp applic program monitor openmp event instrument could done sourcetosourc translat tool prior actual compil within openmp compil system perform tool develop need implement function interfac enabl tool measur analyz openmp program differ measur mode eg profil 2 trace 5 7 10 easili accommod way henc propos perform interfac specifi measur perform form librari interfac call openmp perform api pomp api correspond perform librari pomp librari take use pmpi definit mpi profil interfac follow present variou aspect propos standard perform tool interfac use direct rewrit im plement fortran90 openmp 20 syntax use exampl tabl transform equal appli cc 31 openmp direct instrument pomp api defin respect semant openmp oper thu specifi instrument openmp direct term direct transform first allow descript independ base program languag second specif tie directli program model applic programm understand transform rule insert call pomp name type manner appropri openmp direct name replac name direct type either fork join enter exit begin end context descriptor describ section 35 fork join mark locat execut model switch sequenti parallel vice versa enter exit flag enter exit openmp construct final begin end mark start end structur block use bodi openmp direct tabl 1 show propos transform perform librari routin improv readabl option claus direct allow openmp standard shown seen type placement pomp call intend expos openmp event underli perform measur system case necessari transform direct way oper explicitli captur instanc order measur synchron time implicit barrier end section workshar singl direct use follow method shown tabl origin correspond end direct includ nowait claus nowait ad implicit barrier made explicit nowait claus origin end direct step necessari distinguish barrier userspecifi explicit barrier pomp barrier function pass context descriptor enclos construct instead descriptor explicit barrier unfortun method use measur barrier wait time end parallel direct come nowait claus therefor add explicit barrier correspond perform interfac call sourcetosourc translat tool implement propos transforma tion mean actual two barrier get call second implicit barrier execut succeed immedi thread openmp team alreadi synchron first barrier cours openmp compil insert perform interfac call directli around implicit barrier therebi avoid overhead transform rule combin parallel workshar construct parallel parallel section parallel workshar defin accordingli see tabl 2 basic combin transform correspond singl openmp construct differ claus specifi combin construct distribut singl openmp construct way compli openmp standard eg schedul order lastpriv claus specifi inner direct 32 openmp runtim librari routin instrument monitor openmp runtim librari routin call transform process replac call call perform tool interfac librari exampl openmp api call omp set lock transform call omp parallel claus loop call pomp parallel forkd omp parallel otherclaus call pomp parallel begind call pomp enterd omp scheduleclaus orderedclaus lastprivateclaus loop call pomp barrier enterd call pomp barrier exitd call pomp exitd call pomp parallel endd call pomp parallel joind claus structur block call pomp parallel forkd omp parallel otherclaus call pomp parallel begind call pomp section enterd omp section lastprivateclaus call pomp section begind structur block call pomp section endd call pomp barrier enterd call pomp barrier exitd call pomp section exitd call pomp parallel endd call pomp parallel joind claus structur block call pomp parallel forkd omp parallel claus call pomp parallel begind call pomp workshar enterd structur block call pomp barrier enterd call pomp barrier exitd call pomp workshar exitd call pomp parallel endd call pomp parallel joind tabl 2 propos openmp combin parallel workshar direct transform pomp set lock implement perform interfac function origin correspond openmp runtim librari routin must call perform data obtain current think suffici use procedur omp lock omp nest lock routin relev observ openmp perform behavior 33 perform monitor librari control addit perform librari interfac propos add new direct give programm control perform collect done omp inst init final normal openmp compil direct ignor otherwis translat call pomp init pomp final pomp pomp call perform instrument request compat exist openmp compil essenti new direct sentinel pomp could use yet anoth approach extend set openmp direct would programm add perform tool interfac call directli requir either stub routin condit compil remov instrument use perform monitor desir propos new direct approach portabl effect easier maintain parallel master singl pompparallelforkd pompparallelbegind pompparallelendd pompparalleljoind pompmasterbegind pompmasterendd pompsingleenterd pompsinglebegind pompsingleendd pompsingleexitd workshar section section pompdoenterd pompdoexitd pompforenterd pompforexitd pompworkshareenterd pompworkshareexitd pompsectionsenterd pompsectionbegind pompsectionendd pompsectionsexitd barrier critic atom pompbarrierenterd pompbarrierexitd pompcriticalenterd pompcriticalbegind pompcriticalendd pompcriticalexitd pompatomicenterd pompatomicexitd runtim librari control user code pompsetlock pompunsetlock pompsetnestlock pompunsetnestlock pompinit pompfin pompon pompoff pompbegin pompend tabl 3 pomp openmp perform api 34 user code instrument larg applic program usual suffici collect openmp relat event openmp compil also insert appropri pomp begin pomp end call begin end user function case context descriptor describ user function addit user may desir mark arbitrari nonfunct code region done direct mechan similar describ last subsect arbitrari user code direct translat pomp begin pomp end call techniqu use avoid defin new direct disadvantag describ last section furthermor transform tool compil gener context descriptor user defin region case anoth less effici mechan would use full propos openmp perform api shown tabl 3 35 context descriptor import aspect perform instrument perform tool interfac routin get access context inform order relat collect perform inform back sourc code openmp construct propos follow instrument openmp construct user function userspecifi region instrumentor gener context descriptor global static memori segment compil unit contain construct region monitor function call relat construct region pass address descriptor call tabl 1 2 propos definit context descriptor c syntax shown struct ompregdescr char name char subnam int numsect char filenam int beginline1 beginlinen int endline1 endlinen word data4 struct ompregdescr next field context descriptor follow mean name contain name openmp construct string region user function region sub name store name name critic region name user function region case section openmp direct num section provid number section otherwis set 0 next five field file name begin line1 begin linen line1 end linen describ sourc code locat openmp construct user region sourc file name first last line number open correspond end openmp direct field data use perform tool interfac function store perform data relat construct region eg counter timer final next compon allow chain context descriptor togeth runtim end program list descriptor travers collect perform data store away analyz approach mani advantag method eg use uniqu identifi 1 full context inform includ sourc code locat avail perform tool interfac function 2 runtim overhead implement approach minim one address pass argument addit provid space store perform data form data field perform tool interfac function need dynam alloc memori purpos costli 3 context data kept togeth instrument execut avoid problem locat right separ context descript file runtim 4 final allow separ compil import today larg complex applic code 36 condit compil also propos support user sourc code line compil condit pomp instrument request openmp compil pomp transform tool support macro preprocessor eg cpp c c sometim fortran must defin symbol pomp use condit compil follow openmp standard convent symbol defin decim valu yyyymm yyyi mm year month design version pomp api implement support allow user defin use applic user sitespecif extens pomp write arbitrari user code endif p sentinel use condit compil fortran compil transform system addit cp p sentinel accept instrument fortran fix sourc form pomp instrument sentinel replac three space rest line treat normal fortran line sentinel also compli specif defin section 2131 2132 openmp fortran applic program interfac version 20 novemb 2000 37 condit select transform final allow user temporarili disabl pomp instrument process specif file part file propos provid follow new direct pomp necessari disabl reenabl pomp instrument similar common exist compil direct disabl optim pomp instrument disabl omp noinstrument effect end file next omp instrument whichev come first 38 cc openmp pragma instrument transform fortran openmp direct describ tabl 1 2 appli equal cc openmp pragma main differ extent cc openmp pragma determin structur block follow explicit end pragma fortran follow consequ pragma instrument instrument close part pragma follow structur block ad nowait claus allow make implicit barrier explicit done open part pragma structur block cc openmp pragma pragma omp transform wrap pomp begind pomp endd call turn enclos block ie use chang simpl differ languag eg call keyword use pragma omp instead omp new monitor control user code instrument would appear pragma omp inst init final pragma omp inst begin arbitrari user code pragma omp inst end pragma omp noinstrument pragma omp instrument 39 implement issu clear interfac perform measur must effici must minim influenc dynam behavior user code investig design pomp librari interfac effici mind begin choos defin larger set perform monitor api function accord pattern pomp type namedescr instead use interfac like pomp eventpomp type pomp name filenam linenumb valu would much simpler implement would make necessari use costli statement insid pomp event routin result runtim overhead argument pass overhead minim still support full context inform use context descriptor alreadi discuss section 35 optim requir inlin pomp interfac call use macro would possibl cc possibl without chang propos outlin function call macro call syntax fortran openmp instrument requir gener call openmp direct transform suppress howev structur singl pomp call simpl ie function call one constant argument current compil technolog abl inlin call without manual use macro granular openmp construct much finer exampl mpi function especi true atom critic master singl openmp construct well openmp api function lock implement pomp interfac must take special care implement correspond pomp function addit propos instrument construct select disabl specifi follow command line option openmp compil pomp transform tool pompdisableconstructconstruct construct name one openmp construct list sync disabl final instrument construct critic specif part code omp noinstrument direct see section 37 use disabl select 310 open issu think propos outlin far reason complet addit issu need discuss tri briefli summar issu awar need instrument openmp order flush need instrument singl iter parallel parallel loop would potenti allow influenc openmp loop iter schedul polici measur iter suffici granular need way allow user pass addit inform pomp interfac besid use pomp condit compil see section 36 might consid extend omp inst begin end direct see section 34 option allow pass address user variabl arbitrari user code pomp begin pomp end routin would addit void type second paramet would null user specifi variabl way user could pass addit inform pomp api function would ignor gener implement could util user suppli special version also possibl allow pass user inform pomp api function requir direct pragma need addit openmp runtim level instrument enough observ openmp behavior sourc code level 4 prototyp implement integr perform tool propos openmp perform interfac two issu must address first openmp program must instrument appropri perform call second perform librari must develop implement openmp perform api particular perform tool follow describ two perform tool expert tau integr propos openmp perform interfac case openmp applic hybrid openmpmpi applic sup port latter demonstr abil combin openmp perform interfac perform interfac mechan seamless manner 41 automat instrument proof concept mean experiment implement opari openmp pragma region instrumentor sourcetosourc translat perform openmp direct api call transform describ paper includ new propos direct pomp inst altern sentinel current prototyp implement full fortran77 fortran90 openmp 20 full cc openmp 10 support instrument user function base pdt 12 way tool consist 2000 line c code sourcetosourc translat base fuzzi parser full compil opari small limit fortran omp end omp end parallel direct requir option describ openmp standard atom express control omp atom direct line structur block describ extent openmp pragma need either compound statement simpl statement addit loop support omp omp parallel pragma complex statement like ifthenels dowhil need enclos block find limit overli restrict test experi rare appli wellwritten code origin sourc code easili fix cours possibl remov limit enhanc opari pars capabl final perform measur environ support automat record user function entri exit therefor automat instrument program main function opari runtim measur librari initi omp inst init direct pragma prior openmp pragma 42 integr expert expert tool environ 17 18 aim automat uncov perform problem event trace mpi openmp hybrid applic run complex larg smp cluster work expert carri within kojak project 11 part esprit work group apart 1 expert analyz perform behavior along three dimens perform problem categori dynam call tree posit code locat analyz dimens organ hierarchi perform problem organ gener mpi relat problem specif one messag sent wrong order dynam call tree natur hierarchi show call stack relationship final locat dimens repres hierarch hardwar softwar architectur smp cluster consist level machin node process thread rang perform problem known expert hardcod tool provid collect perform properti specif make expert extens flexibl perform properti specif consist compound event ie event pattern describ natur perform problem instruct calcul socal sever properti determin influenc perform analyz applic parent perform properti instruct initi properti display collect perform data properti relat result perform properti specif abstract beyond simpl perform metric allow expert explain perform problem term underli program model specif written event trace analysi languag earl 16 extens python script languag earl provid effici access event trace level abstract parallel program model eg region stack messag queue collect oper make easi write perform properti specif expert analysi process reli event trace perform data sourc event trace preserv tempor spatial relationship among individu event necessari prove certain interest perform properti event trace record newli design epilog format contrast tradit trace data format suitabl repres execut mpi openmp hybrid parallel applic distribut across one possibl larg cluster smp node support storag necessari sourc code call site inform hardwar perform counter valu mark collect execut oper mpi openmp implement epilog thread safe necessari featur alway present tradit tool trace gener c c fortran applic link epilog trace librari intercept user function call return use intern profil interfac pgi compil suit 15 instal linux smp cluster testb captur openmp event implement pomp librari function term epilog trace call use opari instrument user applic exampl omp enter omp exit interfac implement instrument pragma omp parallel direct cc would look like follow epilog void pompforenterompregdescr r struct elgregion e void pompforexitompregdescr r import notic region descriptor util collect perform data per openmp con struct hybrid applic use openmp mpi mpispecif event also gener appropri wrapper function librari util mpi standard profil interfac 43 integr tau tau perform system 13 provid robust technolog perform instrument measur analysi complex parallel system target gener comput model consist sharedmemori node context resid provid virtual address space share multipl thread execut model gener enough appli mani highperform scalabl parallel system program paradigm tau enabl perform inform captur nodecontextthread level inform map particular parallel softwar system execut platform consider tau support flexibl instrument model allow access measur api sever stage program compil execut instrument identifi code segment provid map lowlevel execut event highlevel comput entiti work multithread messag pass parallel execut model interfac tau measur model captur data function method basic block statement execut profil trace form two measur choic tau provid perform experi compos differ measur modul includ one access hardwar perform monitor tau data analysi present util offer textbas graphic tool visual perform data well bridg thirdparti softwar vampir 14 sophist trace analysi visual expert tau implement openmp perform api librari captur openmp event use tau perform measur facil record perform data exampl pomp implement function section 42 would look like follow tau tauglobaltimertforfor enterexit openmpopenmp void pompforenterompregdescr r endif endif void pompforexitompregdescr r endif endif tau support constructbas well regionbas perform measur constructbas measur use global access timer aggreg constructspecif perform cost region case regionbas measur like expert region descriptor use select specif perform data context follow instrument approach tau function access user includ abil select profil trace enabl hardwar perform monitor add mpi instrument perform measur hybrid applic 5 exampl applic demonstr viabil robust propos interfac instrument tool develop opari tool pomp librari expert tau appli exampl mixedmod openmp applic type applic present analysi challeng perform tool need captur present perform data differ parallel mode interact figur 2 expert perform analysi openmpmpi weather forecast applic instrument opari 51 weather forecast remo weather forecast applic dkrz deutsch klima rechenzentrum germani excel testcas perform api code instrument use opari openmp event mpi profil librari mpi event measur system use epilog trace facil pomp librari call epilog trace routin describ expert system process event trace display perform analysi result expert present result also base three dimens perform problem call graph locat dimens display use weight tree weight tree tree browser label node weight expert use perform properti sever weight weight display simultan use numer valu well color code icon color allow identifi node interest easili even larg tree expand collaps three tree possibl analyz perform behavior parallel applic differ level granular see interact analysi figur 2 3 three tree view shown first view list differ perform properti number node show percentag cpu alloc time spent properti lost result properti node collaps inclus valu shown expand exclus valu color repres numer valu graphic figur 2 show 50 cpu alloc time lost result sequenti execut use idl slave thread although idl thread execut code idl time map middl call tree view ie idl slave thread consid execut code correspond master thread allow user find code region spent long time sequenti execut number middl view refer select left view 735 500 spent remoed4orgprogec4 figur 3 barrier perform analysi remo right view show distribut idl time across differ thread valu refer select left neighbor sum valu correspond 739 middl view cours slave thread idl time master thread show alway 00 figur 3 refer properti openmp barrier call tree show nearli barrier time spent implicit barrier omp ibarri belong parallel omp distribut overhead across differ thread shown right view 52 ocean circul demonstr use openmp perform tool interfac tau appli twodimension stommel ocean current applic san diego supercomput center applic code model winddriven circul homogen rectangular ocean influenc surfac wind linear bottom friction flat bottom corioli forc 5point stencil use solv partial differenti equat grid point tabl 4 show sourc code computeintens block instrument opari link tauspecif pomp librari userconfigur tau measur packag perform data openmp mpi event captur display figur present profil data stommel applic shown regionbas perform view individu parallel loop distinguish block shown tabl 4 highlight nct 000 profil display repres node 0 context 0 thread 0 seen take signific percentag time execut execut time block across thread shown locat origin code block pragma omp schedulestat reduct diff privatej firstpriv a1a2a3a4a5 forjj1jj2j code block opari instrumen line 252 stommelc pragma omp schedulestat reduct diff privatej firstpriv a1a2a3a4a5 nowait forjj1jj2j pragma omp barrier tabl 4 direct instrument stommel code profil display clearli work imbal two thread within process distribut consist across node ie process notic mpi perform data integr openmp data display also possibl tau use obtain constructbas perform data link stommel applic traceconfigur perform librari openmp mpi event display use vampir 14 visual tool figur 5 display event timelin show overlap openmp mpi event 6 relat work given interest openmp last year sever research effort address perform measur analysi openmp execut none effort consid common perform tool interfac manner propos paper ovaltin tool 2 help determin relev overhead parallel openmp program compar serial implement use polari fortran 77 parser build basic abstract syntax tree instrument counter timer determin overhead variou openmp construct code segment natur ovaltin perform measur suggest openmp perform api could appli directli gener openmp event interest allow greater rang perform tool use overhead analysi omptrac 5 dynam instrument packag use trace openmp execut sgi ibm platform provid automat captur openmp runtim system rt event intercept call rt librari user function also instrument gener trace event main advantag omptrac need recompil openmp program perform analysi essenc omptrac use rt interfac perform tool interfac reli intercept dynam link time instrument unfortun approach reli openmp compil transform turn openmp construct function call dynam share librari oper bypass restrict openmp perform interfac propos could figur 4 tau perform profil openmpmpi 2d stommel model ocean circul instrument opari provid suitabl target perform trace part omptrac compat pomp librari would need develop gener equival omptrac event hardwar counter data manner parav 7 tool analysi visual omptrac data could use without modif vgv tool combin openmp compil tool guid guideview kai vampirvampirtrac trace tool palla openmp perform analysi visual openmp instrument provid guid compil profil trace guid runtim system handl record thread event compilerbas monitor openmp perform quit detail tightli integr execut environ howev lack extern api prevent perform tool observ openmp execut event perform interfac propos could appli vgv context manner pomp call could implement librari vgv map openmp action vampir state transit call appropri point anoth approach might guid compil gener pomp instrument allow pompcompat perform interfac librari use lastli jomp 3 system sourcetosourc compil transform openmplik direct java multithread java statement implement equival openmp parallel oper similar work support perform instrument part direct transform 8 instrument gener event analysi parav 7 similar manner jomp compil could modifi gener pomp call case sinc jomp manag thread implement parallel may necessari implement runtim support pomp librari access thread inform figur 5 tau perform trace stommel applic 7 conclus futur work paper propos portabl perform interfac openmp aid integr perform tool openmp program environ defin librari api interfac expos openmp execut event interest eg sequenti parallel synchron event perform observ pass openmp context descriptor inform perform interfac librari regionspecif inform openmp use compil direct pragma express share memori parallel definit perform tool api must consist oper semant direct show accomplish describ api use rewrit openmp direct function equival sourceinstru form opari tool perform openmp direct rewrit automat insert pomp perform call appropri benefit propos perform interfac sever first give perform api target sourc tosourc instrument tool eg opari allow instrument openmp code portabl across compil machin platform second perform librari interfac provid target tool develop port perform measur system enabl multipl perform tool use openmp perform analysi show accomplish expert tau redefin pomp call third api also offer target openmp compil gener pomp call access intern compil specif perform librari extern perform packag final openmp commun could adopt openmp perform interfac one propos would significantli improv integr compat compil perform tool perhap importantli portabl perform analysi techniqu futur hope work openmp arb promot definit perform tool api offer propos consider enhanc opari sourcetosourc instrument approach support user function instrument use pdt 12 opportun also possibl integr api openmp compil use perform technolog instrument measur hope work kai palla investig use propos perform tool interfac kappro guid compil vampirtrac basi pomp perform librari implement r esprit work group apart automat perform analysi resourc tool overhead profil openmp code toward openmp java introduct upc languag specif dynam trace mechan perform analysi openmp applic case high level parallel program zpl european center parallel barcelona cepba perform analysi tool parallel java applic sharedmemori system integr perform visual mpiopenmp program kojak kit object judgment knowledgebas detect bottleneck tool framework static dynam analysi objectori softwar templat perform technolog complex parallel distribut system vampir visual analysi mpi resourc programm extens toolkit analyz event trace messag pass program automat perform analysi mpi applic base event trace automat perform analysi smp cluster applic tr perform technolog complex parallel distribut system tool framework static dynam analysi objectori softwar templat case highlevel parallel program zpl perform analysi tool parallel java applic sharedmemori system automat perform analysi mpi applic base event trace integr perform visual mpiopenmp program dynam trace mechan perform analysi openmp applic programm extens toolkit analyz event trace messag pass program ctr felix wolf bernd mohr automat perform analysi hybrid mpiopenmp applic journal system architectur euromicro journal v49 n1011 p421439 novemb sameer shend allen maloni tau parallel perform system intern journal high perform comput applic v20 n2 p287311 may 2006