schedul unrel machin random round present new class random approxim algorithm unrel parallel machin schedul problem averag weight complet time object key idea assign job randomli machin probabl deriv optim solut linear program lp relax timeindex variabl main result 2varepsilonapproxim algorithm model individu job releas date 32varepsilonapproxim algorithm job releas simultan obtain correspond bound qualiti lp relax interest implic ident parallel machin schedul job randomli assign machin machin equal like addit case algorithm run time log n perform guarante 2 moreov approxim result ident parallel machin schedul appli onlin set job arriv time well differ perform guarante b introduct wellknown random help design algorithm cf e g 27 26 one way guid random use linear program lp paper give lpbase approxim algorithm problem particularli wellknown difficulti obtain good lower bound machin processor schedul problem random choic involv algorithm rather random approxim algorithm random rapproxim algorithm polynomialtim algorithm produc feasibl solut whose expect valu within factor r optimum r also call expect perform guarante algorithm actual often compar output algorithm lower bound given optimum solut certain lp relax henc time obtain analysi qualiti respect lp offlin algorithm derandom differ perform guarante cost increas still polynomi run time consid follow model given set j n job task unrel parallel machin job j posit integr process requir depend machin job j process job j must process respect amount time one machin may assign everi machin process one job time preemptiv schedul job may repeatedli interrupt continu later anoth machin nonpreempt schedul job must process uninterrupt fashion job j integr releas date r j 0 part paper appear preliminari form 36 35 mit sloan school manag oper research center e53361 fachbereich mathematik 61 technisch universitat berlin strae de 17 juni 136 d10623 berlin germani skutellamathtu berlind process denot complet time job j schedul c c j confus possibl seek minim total weight complet time weight w associ job j goal find schedul minim j2j w j c j schedul quit conveni refer respect problem use standard classif scheme graham lawler lenstra rinnooy kan 17 nonpreempt problem r j r describ strongli nphard 23 schedul minim total weight complet time equival averag weight complet time recent achiev great deal attent partli import fundament problem schedul also new applic instanc compil optim 5 parallel comput 3 signific progress design approxim algorithm kind problem led develop first constant worstcas bound number set progress essenti follow one hand use preemptiv schedul construct nonpreempt one 31 4 7 14 16 hand one solv lp relax schedul construct list schedul natur order dictat lp solut 31 19 34 18 25 14 8 28 37 paper util differ idea random assign job machin precis exploit lp relax timeindex variabl problem r j r show certain variant random round lead eapproxim algorithm e 0 absenc nontrivi releas date perform guarante improv 32 e moment correspond lp respect e true optimum alway within factor optim valu lp relax algorithm improv upon 163approxim algorithm hall shmoy wein 19 also base timeindex variabl differ mean ever contrast approach algorithm reli shmoy tardo round techniqu gener assign problem 39 rather exploit lp interpret lp valu probabl job assign machin introduct applic random round combinatori optim problem reader refer 33 26 use differ approach second author subsequ develop slightli improv approxim result problem consider problem r give 32approxim algorithm 41 base convex quadrat program relax assign variabl inspir timeindex lp relax present paper recent approach gener problem releas date yield perform guarante 2 42 special case ident parallel machin e job j machin chakrabarti et al 4 obtain 289 eapproxim refin onlin greedi framework hall et al 19 former best known lpbase algorithm howev reli lp relax sole complet time variabl weaker one propos perform guarante 4 gamma 1m see 18 detail lp use optimum solut greedili obtain certain preemptiv schedul virtual singl machin time fast origin machin idea use preemptiv relax virtual machin employ chekuri motwani natarajan stein 7 show preemptiv schedul machin convert nonpreempt schedul ident parallel machin job j complet time nonpreempt schedul 3 gamma 1m time preemptiv complet time problem minim averag complet time refin 285approxim algorithm algorithm propos deliv time onlogn solut expect within factor 2 optimum sinc lp relax use even relax correspond preemptiv problem algorithm also 2approxim improv upon 3approxim algorithm due hall schulz shmoy wein 18 particular result impli valu optim nonpreempt schedul factor 2 valu optim preemptiv schedul problem without releas date algorithm achiev perform guarante 32 sinc optimum solut lp relax obtain greedili algorithm also work correspond onlin set job continu arriv process time must construct schedul time without knowledg job arriv afterward algorithm achiev competit ratio 2 nonpreempt preemptiv variant set recent skutella woeging 43 develop polynomialtim approxim scheme problem improv upon previous best known 1 22approxim algorithm due kawaguchi kyan 22 subsequ chekuri karger khanna skutella stein 6 gave polynomialtim approxim scheme problem preemptiv variant also correspond problem constant number unrel machin rm j r hand shown hoogeveen schuurman woeging 20 problem r j r maxsnphard therefor polynomi time approxim scheme unless pnp rest paper organ follow section 2 start discuss main result algorithm perform guarante 2 gener context unrel parallel machin schedul next section give combinatori approxim algorithm ident parallel machin schedul also show use algorithm onlin set section 4 discuss derandom previous given random algorithm final section 5 give technic detail turn pseudopolynomi algorithm section 2 polynomialtim algorithm perform guarante conclud point open problem section 6 unrel parallel machin schedul releas date section consid problem r j r 30 19 18 42 actual discuss slightli gener problem releas date everi job j may also depend machin releas date job j machin thu denot r j machinedepend releas date relev model network schedul parallel machin connect network job locat given machin time 0 start anoth machin suffici time elaps allow job transmit new machin model introduc 9 1 problem r j r wellknown strongli nphard fact alreadi p2 strongli nphard see 2 23 first nontrivi approxim algorithm problem given phillip stein wein 30 perform guarante olog 2 n subsequ hall et al 19 gave 163approxim algorithm reli timeindex lp relax whose optimum valu serv surrog true optimum estim use somewhat similar lp relax wherea hall et al invok determinist round techniqu shmoy tardo 39 construct feasibl schedul randomli round lp solut feasibl schedul time horizon introduc everi job j 2 j everi machin everi point repres time job j process machin within time interv equival one say jt p j fraction job j process machin within time interv 1 lp extens singl machin lp relax dyer wolsey 10 follow minim subject equat 1 ensur whole process requir everi job satisfi machin capac constraint 2 simpli express machin process one job time 3 consid arbitrari feasibl schedul job j continu process time c machin h express c lp 3 correspond real complet time c j j assign valu lp variabl jt defin e wise righthand side 4 equal process time p h j job j schedul therefor lower bound complet time c final constraint 5 ensur job process releas date henc lp r relax schedul problem r j r fact note even correspond mixedinteg program yvariabl forc binari relax follow algorithm take optimum lp solut construct feasibl schedul use kind random round algorithm lp round comput optimum solut lp r assign job j machinetim pair independ random probabl jt draw j chosen time interv 1 independ random uniform distribut schedul machin job assign nonpreempt earli possibl order nondecreas j last step tie broken arbitrarili occur probabl zero analysi algorithm suffici assum random decis differ job pairwis independ remark 21 reader might wonder whether seemingli artifici random choic j algorithm lp round realli necessari inde also impli could work discret probabl space follow result still true simpli set assign machinetim pair tie broken randomli even arbitrarili mainli chose present sake give differ interpret term socal apoint section 3 follow lemma illumin intuit algorithm lp round relat implic second step solut lp r analysi algorithm howev make use second part lemma first part gener result due goeman 14 singl machin case lemma 22 let optimum solut lp r first step algorithm lp round j follow hold expect valu j equal jt b expect process time job j schedul construct algorithm lp round equal proof first fix machinetim pair job j assign expect process time j condit p j moreov condit expect j equal ad condit expect machin time interv weight correspond probabl jt get claim result note lemma remain true start arbitrari necessarili optim solut lp r first step algorithm lp round also true follow result optim lp solut need get lower bound valu optim schedul lemma 23 expect complet time job j schedul construct algorithm lp round bound bound even true j set second step algorithm tie broken arbitrarili see remark 21 absenc nontrivi releas date follow stronger bound hold bound also hold j set second step algorithm tie broken uniformli random proof consid arbitrari fix job j 2 j analyz expect complet time job j first also consid fix assign j machinetim pair expect start time job j condit precis condit expect idl time plu condit expect amount process job come j machin observ idl time machin maximum releas date job machin start later j start time job j follow order job constraint 5 maximum releas date therefor idl time machin start time j bound absenc nontrivi releas date need idl time hand get follow bound condit expect process time machin start j ik ik last inequ follow machin capac constraint 2 howev j set second step algorithm tie broken arbitrarili replac et 1 righthand side get weaker bound 1 put observ togeth get upper bound 2 2 condit expect start time j absenc nontrivi releas date bound uncondit expect formula total expect togeth lemma 22 b yield result theorem 24 instanc r j r expect valu schedul construct algorithm lp round bound twice valu optim solut proof lemma 23 constraint 3 expect complet time job bound twice lp complet time c lp sinc optim lp valu lower bound valu optim schedul weight nonneg result follow linear expect note theorem 24 still hold use weaker lp relax constraint 4 miss ever true follow result theorem 25 instanc r expect valu schedul construct algorithm lp round bound 32 time valu optim solut proof result follow lemma 23 lp constraint 3 4 independ result theorem 25 also obtain fabian chudak commun us david b shmoy march 1997 read preliminari version paper hand contain bound 2 r j r theorem 24 absenc nontrivi releas date algorithm lp round improv simplifi corollari 26 instanc r approxim result theorem 25 also hold follow improv simplifi variant algorithm lp round second step assign job j independ random probabl machin last step appli smith ratio rule 44 machin e schedul job assign machin order nonincreas ratio w proof notic random assign job machin remain unchang describ variant algorithm lp round howev fix assign job machin sequenc job accord smith ratio rule machin optim particular improv upon random sequenc use final step algorithm lp round analysi algorithm lp round alway compar valu comput solut optim lp valu lower bound valu optim solut therefor state follow result qualiti lp relax corollari 27 linear program lp r 2relax r j r even without constraint 4 a2 relax r show follow section lp r without constraint 4 better 2relax even instanc p hand relax strengthen ad constraint constraint ensur time period job use capac one machin unfor tunat know use constraint get provabl stronger result qualiti lp relax better perform guarante algorithm lp round notic result theorem 24 theorem 25 directli lead approxim algorithm consid schedul problem reason solv lp r polynomi time due exponenti mani variabl howev overcom drawback introduc new variabl associ exponenti mani time interv length 1 rather polynomi number interv geometr increas size order get polynomialtim approxim algorithm way pay slightli wors perform guarante constant e 0 get approxim algorithm perform guarante 2 e 32 e schedul problem consider elabor section 5 shown 40 idea techniqu present section section 5 modifi construct approxim algorithm correspond preemptiv schedul problem notic although lp relax lp r allow preemption job relax r j r shown 40 exampl 2108 righthand side 3 fact overestim actual complet time job preemptiv schedul correspond solut lp r howev one construct lp relax preemptiv schedul problem replac 3 slightli weaker constraint lead 3 approxim algorithm r j r eapproxim algorithm r j pmtn j w j c j result slightli improv use convex quadrat program relax see 42 schedul releas date consid special case ident parallel machin process requir releas date job j longer depend machin job j process thu denot p j r j respect mention alreadi problem p2 set algorithm lp round turn pure combinatori algorithm take idea use earlier e g chekuri et al 7 reduc ident parallel machin instanc singl machin instanc howev singl machin assum time fast origin machin e virtual process time job j virtual singl machin p 0 without loss gener p j multipl weight releas date remain crucial idea algorithm assign job uniformli random machin machin sequenc assign job order random apoint respect preemptiv schedul fast singl machin 1 apoint c j job j respect given preemptiv schedul fast singl machin first point time afract job j complet e j process time unit particular c j j 0 start time job j slightli vari notion apoint consid 31 19 full potenti reveal chekuri et al 7 well goeman 14 chose paramet random follow algorithm may seen extens singl machin techniqu ident parallel machin algorithm random assign construct preemptiv schedul virtual singl machin schedul point time among avail job one largest w j p 0 ratio job j 2 j draw j independ random uniformli distribut 0 1 assign j uniformli random one machin schedul machin job assign nonpreempt earli possibl nondecreas order c notic first step whenev job releas job process preempt releas job larger ratio illustr algorithm random assign found appendix run time algorithm domin effort comput preemptiv schedul first step goeman observ done onlogn time use prioriti queue 14 follow show algorithm random assign interpret reformul algorithm lp round special case ident parallel machin one crucial insight analysi preemptiv schedul virtual singl machin correspond optimum solut lp relax equival lp r introduc variabl jt everi job j everi time period 1 set 1m job j process one machin period 0 otherwis notic contrast unrel parallel machin case need machin depend variabl sinc necess distinguish ident parallel machin express new variabl jt old variabl jt set lead follow simplifi lp ignor constraint 4 lp r minim subject jt special case introduc dyer wolsey 10 also indic follow work posner 32 program solv onlogn time goeman 13 show also case 1 preemptiv schedul construct first step algorithm random assign defin optimum solut lp p result well proof easili gener arbitrari number ident parallel machin lemma 31 instanc problem relax lp p solv onlogn time preemptiv schedul fast singl machin first step algorithm random assign correspond optimum solut theorem 32 algorithm random assign random 2approxim algorithm proof show algorithm random assign interpret special case algorithm lp round result follow polynomi run time theorem 24 lemma 31 impli first step algorithm random assign simpli comput optimum solut lp relax lp p equival lp r without constraint 4 particular correspond solut lp r symmetr regard machin therefor algorithm lp round job assign uniformli random one machin symmetri also yield job j choic j correl choic algorithm lp round easili seen probabl distribut random variabl j algorithm lp round exactli equal probabl distribut c algorithm random assign observ probabl c equal fraction jt p 0 j job j process time interv moreov sinc j uniformli distribut 01 point 1 equal like obtain c therefor random choic c algorithm random assign altern way choos j done algorithm lp round consequ two algorithm coincid ident parallel machin case particular expect complet time job bound twice lp complet time result follow linear expect point let us briefli compar approxim result section singl machin case relat result work one job instead individu independ j draw uniformli 0 1 random assign precis becom goeman random 2approxim algorithm random 1jr j j w j c j 14 goeman queyrann schulz skutella wang improv result perform guarante 16853 use jobdepend j algorithm random assign togeth nonuniform choic j 15 idea also appli parallel machin set get perform guarante better 2 algorithm random assign improv howev depend refer reader singl machin case detail comprehens treatment detail overview concept apoint machin schedul problem found 40 chapter 2 alreadi argu last section lp r thu lp p 2relax schedul problem consider corollari 33 relax lp p 2relax schedul problem bound tight even proof posit result follow corollari 27 tight consid instanc machin one job length unit weight optimum lp complet time 12 wherea optimum complet time goe infin ratio two valu converg 2 approxim result ident parallel machin schedul directli gener correspond preemptiv schedul problem preemptiv schedul job may repeatedli interrupt continu later anoth machin follow work mcnaughton 24 alreadi nphard sinc alway exist optim nonpreempt schedul correspond nonpreempt problem nphard make use follow observ lemma 34 linear program lp p also relax preemptiv problem proof sinc releas date process time integr exist optim preemptiv schedul preemption occur integr point time take optim schedul construct correspond feasibl solut lp p set process one machin within time interv 1 easi observ c lp j equal hold job j continu process time interv c thu valu construct solut lp p lower bound valu optim schedul observ lead follow result gener theorem 32 corollari 33 corollari 35 valu nonpreempt schedul construct algorithm random assign wors twice valu optimum preemptiv schedul moreov relax lp p 2 relax schedul problem bound tight 2approxim algorithm corollari 35 improv upon perform guarante 3 due hall schulz shmoy wein 18 anoth consequ consider follow result power preemption corollari 36 ident parallel machin schedul releas date minim weight sum complet time valu optim nonpreempt schedul twice larg valu optim preemptiv one moreov techniqu algorithm lp round use convert arbitrari preemptiv schedul nonpreempt one valu increas factor 2 given preemptiv schedul construct correspond solut lp p lp r respect valu feasibl solut lp relax lower bound valu given preemptiv schedul use algorithm lp round solut lp r turn nonpreempt schedul whose expect valu bound twice valu lp solut thu twice valu preemptiv schedul start improv upon bound 73 due phillip et al 29 algorithm random assign easili turn onlin algorithm sever differ onlin paradigm studi area schedul see 38 survey consid set job continu arriv time time must construct schedul time without knowledg job arriv afterward particular characterist job e process time weight becom known releas date order appli algorithm random assign onlin set note job j random variabl j drawn immedi job releas sinc interdepend decis random algorithm hold random machin assign moreov preemptiv schedul first step construct time without need knowledg job releas afterward furthermor follow analysi proof lemma 23 get perform guarante job j start time j respect c thu onlin variant algorithm random assign schedul job earli possibl order nondecreas c addit constraint job j may start time c follow result improv upon competit ratio 289 corollari 37 onlin variant algorithm random assign achiev competit ratio 2 perhap appeal aspect algorithm random assign assign job machin depend job characterist job put probabl 1m machin techniqu also prove use problem without nontrivi releas date theorem 38 assign job independ uniformli random machin appli smith ratio rule machin 32approxim algorithm p exist instanc bound asymptot tight proof first notic describ algorithm exactli coincid algorithm random assign lp round respect neg result corollari 33 deriv bound 32 compar expect valu comput solut optim valu lp p rememb use stronger relax includ constraint 4 order deriv bound unrel parallel machin set howev result lemma 23 get sinc second term righthand side 6 equal p j case ident parallel machin sinc lower bound valu optim solut result follow order show perform guarante 32 tight consid instanc ident parallel machin job unit length weight get optim schedul valu assign one job machin hand show expect complet time job schedul construct random machin assign 32 gamma 12m converg 32 increas sinc job without loss gener schedul machin job assign random order consid fix job j machin assign probabl job k 6 j assign machin 1m case k process j machin probabl 12 therefor get ec j 2m quit interestingli derandom variant algorithm precis coincid wsptrule kawaguchi kyan prove perform guarante 1 22 121 22 list job accord nonincreas ratio w j p j schedul next job whenev machin becom avail detail derandom given section 4 proof given kawaguchi kyan somewhat complic simpler random analysi yield perform guarante 32 algorithm howev weaker result also follow work eastman even isaac 11 gave combinatori lower bound coincid lower bound given lp p latter observ due uma wein 48 williamson 50 derandom present random algorithm comput feasibl schedul expect valu bound term optimum solut schedul problem consider mean algorithm perform well averag howev give firm guarante perform singl execut theoret point view perhap desir determinist algorithm obtain certain perform case one import techniqu derandom method condit probabl method implicitli contain paper erdo selfridg 12 develop gener context spencer 45 idea consid random decis random algorithm one anoth alway choos promis altern done assum remain decis made randomli thu altern said promis correspond condit expect valu solut small possibl random algorithm paper derandom method condit probabl demonstr techniqu gener problem r j r algorithm lp round make use remark 21 lemma 23 consid variant algorithm set assign machinetim pair tie broken prefer job smaller indic thu construct determinist assign job machinetim pair analysi algorithm lp round proof lemma 23 give precis express expect valu comput solut upper bound henc sake access derandom modifi algorithm lp round replac last step follow variant 3 schedul machin job assign nonpreempt nondecreas order j tie broken prefer job smaller indic start time job j amount idl time machin exactli j job j assign machin j 6 k job k schedul job j step 3 defin feasibl schedul proof lemma 23 bound idl time start job j machin j thu analysi still work modifi algorithm lp round main advantag modif step 3 give precis express expect condit expect complet time let optimum solut start first step algorithm lp round use argument proof lemma 23 get follow expect complet time job j schedul construct modifi algorithm lp round ikt moreov also interest condit expect js complet time job alreadi assign machinetim pair let k j subset job job k 2 k 01 variabl x ikt r ik indic whether k assign machinetim pair enabl us give follow express condit expect js complet time j 62 k get ikt j 2 k get machinetim pair job j assign e x 1 follow lemma import part derandom algorithm lp round lemma 41 let optimum solut start first step algorithm lp round k j x fix assign job k machinetim pair furthermor let j 2 j nk exist assign j machinetim pair e x 6 ekx proof use formula total expect condit expect righthand side 11 written convex combin condit expect e kf jgx theta possibl assign job j machinetim pair coeffici jt therefor get derandom version algorithm lp round replac second step 0 x0 j 2 j possibl assign job j machinetim pair e x theta ii determin machinetim pair minim condit expect set k kf jg x notic replac step 3 algorithm lp round 3 give access analysi derandom sinc valu schedul construct step 3 alway least good one construct step 3 follow theorem formul algorithm lp round origin step 3 theorem 42 replac step 2 algorithm lp round 2 get determinist algorithm whose perform guarante least good expect perform guarante random algorithm moreov run time algorithm polynomi bound number variabl lp relax proof result follow induct use lemma 41 comput 9 10 polynomi bound number variabl therefor run time n iter step 2 polynomi bound number derandom also work polynomi time algorithm base intervalindex lp relax describ section 5 sinc lp relax contain polynomi number variabl run time derandom algorithm also bound polynomi input size schedul problem notic contrast situat random algorithm longer give jobbyjob bound derandom algorithm interest applic method condit probabl derandom algorithm random assign absenc releas date alreadi discuss matter end section 3 essenti follow consider derandom version algorithm alway assign job machin smallest load far consid job order nonincreas thu result algorithm coincid wsptrule analyz kawaguchi kyan 22 5 intervalindex lp relax mention earlier lpbase algorithm unrel parallel machin schedul suffer exponenti number variabl correspond lp relax lp r howev overcom drawback use new variabl associ exponenti mani time interv length 1 rather polynomi number interv geometr increas size idea earlier introduc hall et al 19 show algorithm lp round turn polynomi time algorithm r j r cost increas perform guarante 2 e techniqu use deriv eapproxim algorithm r given h 0 l chosen smallest integ 1 consequ l polynomi bound input size consid schedul problem let theta 1 6 6 l let denot ji j length th interv e ji simplifi notat defin 1 h gamma1 1 follow interpret time job j process machin within time interv equival j delta ji jp j fraction job j process machin within consid follow linear program intervalindex variabl minim subject consid feasibl schedul assign valu variabl j defin solut clearli feasibl constraint 12 satisfi sinc job j consum unit process machin constraint 13 satisfi sinc total amount process machin job process within interv exceed size final job j continu process c machin h righthand side equat 14 lower bound real complet time thu lp h r relax schedul problem r j r sinc lp r polynomi size optimum solut comput polynomi time rewrit algorithm lp round new lp algorithm lp round comput optimum solut lp h assign job j machineinterv pair independ random probabl chosen time interv independ random uniform distribut machin schedul job assign order nondecreas j follow lemma reformul lemma 22 b new situat prove analog lemma 51 expect process time job j 2 j schedul construct algorithm lp round equal theorem 52 expect complet time job j schedul construct algorithm lp round 2 delta 1 h delta c lp proof argu almost exactli proof lemma 23 use lemma 51 instead lemma 22 b consid arbitrari fix job j 2 j also consid fix assign j machin time interv condit expect js start time equal expect idl time plu expect process time machin j start similar argument proof lemma 23 bound sum idl time plu process time 2 togeth lemma 51 14 yield theorem given e 0 choos eapproxim algorithm problem r j r r 6 conclud remark open problem paper develop lpbase approxim algorithm differ schedul problem also gain insight qualiti employ timeindex lp number open problem aris relat research follow wrap distinguish offlin onlin set central offlin result 2eapproxim r j r exist instanc show underli lp relax lp r without inequ 4 inde better 2relax howev open whether qualiti lp r 4 andor 7 better 2 therefor also whether use deriv approxim algorithm perform guarante strictli less 2 neg side word best known approxim algorithm r j r perform guarante 2 prove 2 e 42 get rid e use convex quadrat relax known limit approxim nonexist polynomialtim approxim scheme unless np situat r j j w j c j similar lp r 32relax qualiti lp r togeth 7 unknown 32approxim given 41 improv upon 32eapproxim section 2 best known pta unless far ident parallel machin concern one import properti 2approxim algorithm run time onlogn run time recent pta 6 import featur onlogn algorithm capabl work onlin context well bring us second set open problem job arriv time perform algorithm measur term competit optim offlin algorithm theoret utmost import distinguish determinist random algorithm ident parallel machin schedul minim total weight complet time signific gap bestknown determinist lower bound competit ratio bestknown determinist algorithm lower bound 2 follow fact onlin singl machin schedul minim total complet time determinist algorithm competit ratio less 2 21 46 4 ecompetit algorithm emerg gener framework 19 18 random algorithm understand seem slightli better bestknown random lower bound ee gamma 1 inherit singl machin case 47 49 random 2competit algorithm given paper hand acknowledg author grate chandra chekuri michel x goeman david b shmoy help comment earlier version paper 36 r competit distribut job schedul resourc schedul parallel databas scientif applic improv schedul algorithm minsum criteria approxim scheme minim averag weight complet time releas date approxim techniqu averag complet time schedul approxim algorithm precedenceconstrain schedul problem parallel machin run differ speed determinist load balanc comput network formul singl machin sequenc problem releas date mix integ program bound optim schedul n job processor supermodular relax schedul releas date singl machin schedul releas date rinnooy kan schedul minim averag complet time offlin onlin approxim algorithm schedul minim averag complet time offlin onlin algorithm optim onlin algorithm singlemachin schedul ing worst case bound lrf schedul mean weight flowtim problem rinnooy kan manag scienc random approxim algorithm combinatori opti mizat random algorithm approxim bound gener class preced constrain parallel machin schedul problem improv bound relax parallel machin schedul problem task schedul network sequenc problem releas date cluster job techniqu provabl good algorithm algorithm proof schedul minim total weight complet time perform guarante lpbase heurist lower bound new approxim lp lower bound approxim algorithm gener assign problem approxim random schedul pta minim weight sum job complet time parallel machin variou optim singlestag product ten lectur probabilist method cite person commun low cant go relationship combinatori lpbase approach nphard schedul problem phd thesi cite person commun tr ctr feng lu dan c marinescu r cmax quantum schedul algorithm quantum inform process v6 n3 p159178 june 2007 nicol megow marc uetz tjark vredeveld model algorithm stochast onlin schedul mathemat oper research v31 n3 p513525 august 2006 martin skutella convex quadrat semidefinit program relax schedul journal acm jacm v48 n2 p206242 march 2001