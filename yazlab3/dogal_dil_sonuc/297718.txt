impact exploit instructionlevel parallel sharedmemori multiprocessor abstractcurr microprocessor incorpor techniqu aggress exploit instructionlevel parallel ilp paper evalu impact processor perform sharedmemori multiprocessor without latencyhid optim softwar prefetch result show ilp techniqu substanti reduc cpu time multiprocessor less effect remov memori stall time consequ despit inher latenc toler featur ilp processor find memori system perform larger bottleneck parallel effici gener poorer ilpbas multiprocessor previou gener multiprocessor main reason defici insuffici opportun applic overlap multipl load miss increas content resourc system also find softwar prefetch chang memori bound natur applic ilp multiprocessor mainli due larg number late prefetch resourc content result suggest need addit latenc hide reduc techniqu ilp system softwar cluster load miss produceriniti commun b introduct sharedmemori multiprocessor built commod microprocessor increasingli use provid high perform varieti scientif commerci ap plicat current commod microprocessor improv perform use aggress techniqu exploit high level instructionlevel parallel ilp techniqu includ multipl instruct issu outoford dy namic schedul nonblock load specul ex ecut refer techniqu collect ilp techniqu processor exploit techniqu ilp processor previou studi sharedmemori multiproc work support part ibm partnership award intel corpor nation scienc foundat grant ccr9410457 ccr9502500 cda9502791 cda9617383 texa advanc technolog program grant 003604025 sarita adv also support alfr p sloan research fellowship vijay pai fanni john hertz foundat fellowship parthasarathi ranganathan lodieska stockbridg vaughan fellowship paper combin result two previou confer paper 11 12 use common set system paramet aggress mesi versu msi cachecoher protocol aggress compil better sparc sc 42 gcc 272 applic rather gcc 258 full simul privat memori refer sor howev assum simpl processor singl issu inord schedul block load specu lation multiprocessor architectur studi model stateoftheart ilp processor 2 7 8 9 analyz impact ilp techniqu fulli exploit recent advanc uniprocessor technolog sharedmemori multiprocessor detail analysi ilp techniqu affect perform system interact previou optim system requir paper evalu impact exploit ilp perform sharedmemori multiprocessor without latencyhid optim softwar prefetch evalu studi five applic use detail simul describ section ii section iii analyz impact ilp techniqu perform sharedmemori multiprocessor without use softwar prefetch applic see perform improv use current ilp techniqu improv vari wide partic ular ilp techniqu success consist reduc cpu compon execut time impact memori stall time lower applic depend consequ despit inher latenc toler featur integr within ilp processor find memori system perform larger bottleneck parallel effici gener poorer ilpbas multiprocessor previousgener multiproc sor defici caus insuffici opportun applic overlap multipl load miss increas content system resourc frequent memori access softwarecontrol nonbind prefetch shown effect techniqu hide memori latenc simpl processorbas share memori system 6 section iv analyz interact softwar prefetch ilp techniqu sharedmemori multiprocessor find compar previousgener system increas late prefetch increas content resourc caus softwar prefetch less effect reduc memori stall time ilpbas system thu even ad softwar prefetch applic remain larg memori bound ilpbas system result suggest compar previousgener 2sharedmemori system ilpbas system greater need addit techniqu toler reduc memori latenc specif techniqu motiv result includ cluster load miss applic increas opportun load miss overlap techniqu produceriniti commun reduc latenc make prefetch effect section v ii methodolog simul architectur determin impact ilp techniqu multiprocessor perform compar two system ilp simpl equival everi respect except processor use ilp system use stateoftheart ilp processor simpl system use simpl processor section ii a1 compar ilp simpl system suggest architectur tradeoff rather understand aggress ilp techniqu impact multiprocessor per formanc therefor two system ident clock rate includ ident aggress memori network configur suitabl ilp system section iia2 figur 1 summar system paramet a1 processor model ilp system use stateoftheart processor includ multipl issu outoford dynam schedul nonblock load specul execut simpl system use previousgener simpl processor singl issu inord static schedul block load repres commonli studi sharedmemori system sinc access compil schedul instruct inord simpl processor assum singlecycl function unit latenc also assum previou simpleprocessor base sharedmemori stud i processor model includ support softwarecontrol nonbind prefetch l1 cach a2 memori hierarchi multiprocessor configur simul hardwar cachecoher nonuniform memori access ccnuma sharedmemori multiprocessor use invalidationbas fourstat mesi directori coher protocol 4 model releas consist previou studi shown achiev best perform 9 process node connect use twodimension mesh network node includ proce sor two level cach portion global sharedmemori directori network interfac splittransact bu connect network interfac directori control rest system node cach use writealloc writeback polici cach size chosen commensur input size ap plicat follow methodolog describ woo et al 14 primari work set applic fit l1 cach secondari work set fit l2 cach cach nonblock use miss processor paramet clock rate 300 mhz fetchdecoderetir rate 4 per cycl instruct window order buffer sizememori queue size outstand branch 8 function unit 2 alu 2 fpu 2 address gener unit 1 cycl latenc memori hierarchi network paramet mshr 64byte line l2 cach 64 kb 4way associ 1 port 8 mshr 64byte line pipelin memori 4way interleav ns access time bu 100 mhz 128 bit split transact network 2d mesh 150mhz 64 bit per hop flit delay 2 network cycl node multiprocessor 8 result contentionless latenc processor cycl local memori 45 cycl remot memori 140220 cycl cachetocach transfer 170270 cycl fig 1 system paramet statu hold regist mshr 3 store inform outstand miss coalesc multipl request cach line multiprocessor result report paper use configur 8 node b simul environ use rsim rice simul ilp multipro cessor model system studi 10 rsim executiondriven simul model processor pipelin memori system interconnect network detail includ content resourc take applic execut input speed simul assum instruct hit instruct cach assumpt reason sinc applic small instruct footprint c perform metric addit compar execut time also report individu compon execut time cpu data memori stall synchron stall time character perform bottleneck system ilp processor unclear assign stall time specif instruct sinc instruct execut may overlap preced follow instruct use follow convent similar previou work eg 5 account stall cycl everi cycl calcul ratio instruct retir instruct window cycl maximum retir rate processor attribut fraction cycl busi time remain fraction cycl attribut stall time first instruct could retir cycl group busi time function unit nonmemori stall time togeth cpu time henceforth use term memori stall time denot data memori stall compon execut time first part studi key metric use applic input size lu luopt 256x256 matrix block 8 fft fftopt 65536 point mp3d 50000 particl water 512 molecul fig 2 applic input size evalu impact ilp ratio execut time simpl system rel achiev ilp system call ilp speedup detail analysi analog defin ilp speedup compon execut time applic figur 2 list applic input set use studi radix lu fft splash suit 14 water mp3d splash suit 13 five applic input size chosen ensur reason simul time sinc rsim model aggress ilp processor detail 10 time slower simpleprocessorbas sharedmemori simul luopt fftopt version lu fft includ ilpspecif optim potenti implement compil specif use function inlin loop interchang move load miss closer overlap ilp processor impact optim discuss section iii v version lu also modifi slightli use flag instead barrier better load balanc sinc sparc compil ilp system ex ist compil applic commerci sun sc 42 gcc 272 compil base better simul ilp system perform full optim turn compil defici address specif instruct group rule ilp system partli hidden outoford schedul ilp processor 2 iii impact ilp techniqu perform section analyz impact ilp techniqu multiprocessor perform compar simpl ilp system without softwar prefetch overal result figur 3 4 illustr key overal result applic figur 3 show total execut time three compon simpl ilp system normal total time simpl system ad dition bottom figur also show ilp speedup applic figur 4 show parallel effici 3 ilp simpl system express percentag figur show three key trend ffl ilp techniqu improv execut time ap plicat howev ilp speedup show wide vari 2 best knowledg key compil optim identifi paper cluster load miss implement current superscalar compil 3 parallel effici applic system n processor defin execut time uniprocessor execut time multiprocessor theta 1 ation 129 mp3d 354 luopt averag ilp speedup origin applic ie includ luopt fftopt 205 ffl memori stall compon gener larger part overal execut time ilp system simpl system ffl parallel effici ilp system less simpl system applic next investig reason trend b factor contribut ilp speedup figur 3 indic import compon execut time cpu time memori stall thu ilp speedup shape primarili cpu ilp speedup memori ilp speedup figur 5 summar speedup along total ilp speedup figur show low variabl ilp speedup applic attribut larg insuffici variabl memori ilp speedup cpu ilp speedup similar signific among applic rang 294 380 detail data show applic memori stall time domin stall due load miss l1 cach therefor focu impact ilp l1 load miss load miss ilp speedup ratio stall time due load miss simpl ilp system determin three factor describ first factor increas speedup second decreas third may either increas decreas ffl load miss overlap sinc simpl system block load entir load miss latenc expos stall time ilp load miss overlap use work reduc stall time increas ilp load miss speedup number instruct behind load miss overlap howev limit instruct window size load miss longer latenc instruct instruct window fore load miss latenc normal complet hidden behind load miss thu signific load miss ilp speedup applic multipl load cluster togeth within instruct window enabl load miss overlap content compar simpl system ilp system see longer latenc increas content due higher frequenc miss therebi neg affect load miss ilp speedup ffl chang number miss ilp system may see fewer miss simpl system specul reorder memori ac cess therebi posit neg affect load miss ilp speedup applic except lu see similar number cach miss simpl ilp case lu see 25x fewer miss ilp reorder access otherwis conflict number miss chang ilp system see 1 load miss ilp speedup load miss overlap exploit ilp outweigh addit latenc content illustr execut time ilp simpl ilp415 241x simpl ilp390 256x simpl ilp340 294x simpl ilp282 354x simpl ilp782 129x simpl ilp753 simpl ilp449 230x memori cpu speedup fft fftopt lu luopt mp3d radix water fig 3 impact ilp multiprocessor perform parallel effici 86 82 fft lu water simpl ilp fig 4 impact ilp parallel effici fig 5 ilp speedup total execut time cpu time memori stall time multiprocessor system effect load miss overlap content use two applic best character luopt radix figur 6a provid averag load miss latenc luopt radix simpl ilp system normal simpl system latenc latenc shown total miss latenc measur address gener data arriv includ overlap part ilp expos part contribut stall time differ bar length simpl ilp indic addit latenc ad due content ilp applic see signific latenc increas resourc content ilp howev luopt overlap addit latenc well larg portion base simpl latenc thu lead high memori ilp speedup hand radix overlap addit latenc thu see load miss slowdown ilp configur use data figur 6b c investig caus load miss overlap content relat latenc applic caus load miss overlap figur 6b show ilp system l1 mshr occup due load miss luopt radix curv show fraction total time least n mshr occupi load miss possibl n x axi figur show luopt achiev signific overlap load miss 8 load miss request outstand simultan variou time contrast radix almost never 1 outstand load miss time differ aris load miss cluster togeth instruct window luopt typic separ mani instruct radix caus content figur 6c extend data figur 6b display total mshr occup load store miss figur indic radix larg amount store miss overlap overlap contribut increas memori ilp speedup sinc store latenc alreadi hidden simpl ilp system due releas consist store miss overlap howev increas content memori hi erarchi result ilp memori slowdown radix luopt contentionrel latenc come primarili load miss effect mitig sinc overlap load miss contribut reduc memori stall time c memori stall compon parallel effici use analysi see ilp system gener see larger rel memori stall time compon figur gener poorer parallel effici figur simpl system sinc memori ilp speedup gener less cpu ilp speedup memori compon becom greater fraction total execut time ilp system simpl system understand reduc parallel effi cienci figur 7 provid ilp speedup uniprocessor configur refer uniprocessor also gener see lower memori ilp speedup cpu ilp speedup howev impact lower memori ilp speedup higher multiprocessor longer latenc remot miss increas content result larger rel memori compon execut time rel uniprocessor addit dichotomi local remot miss latenc multiprocessor often tend decreas memori ilp speedup rel uniprocessor load miss must overlap load miss load miss similar latenc 4 thu overal multiprocessor system less abl exploit ilp featur correspond uniprocessor system applic 4 fft fftopt see better memori ilp speedup multiprocessor uniprocessor overlap multipl load miss similar multiprocessor remot latenc section code exhibit overlap greater impact multiprocessor longer remot latenc incur section miss latenc simpl ilp simpl ilp radix2092 overlap stall util number l1 mshr number l1 mshr util number l1 mshr number l1 mshr effect ilp averag l1 miss latenc b l1 mshr occup due load c l1 mshr occup due load store fig 6 load miss overlap content ilp system fig 7 ilp speedup total execut time cpu time memori stall time uniprocessor system consequ ilp multiprocessor gener see lower parallel effici simpl multiprocessor iv interact ilp techniqu softwar prefetch previou section show ilp system see greater bottleneck memori latenc simpl system softwarecontrol nonbind prefetch shown effect hide memori latenc sharedmemori multiprocessor simpl processor section evalu softwar prefetch interact ilp techniqu sharedmemori multiprocessor follow softwar prefetch algorithm develop mowri et al6 insert prefetch applic hand one except algorithm 6 assum local maintain across synchron schedul prefetch across synchron ac cess remov restrict benefici consist comparison experi report prefetch schedul ident simpl ilp prefetch schedul least 200 dynam instruct correspond demand access impact schedul decis discuss includ impact vari prefetch distanc overal result figur graphic present key result experi fft fftopt similar perform fftopt appear figur figur show execut time compon applic simpl ilp without softwar prefetch pf indic addit softwar prefetch execut time normal time applic simpl without prefetch figur 9 summar key data softwar prefetch achiev signific reduct execut time ilp 13 43 three case lu mp3d water reduct similar greater simpl applic ever softwar prefetch less effect reduc memori stall ilp simpl averag reduct 32 ilp rang 7 72 vs averag 59 rang 21 88 simpl net effect even prefetch appli ilp averag memori stall time 39 ilp rang 11 65 vs averag 16 rang 1 29 simpl ap plicat ilp system remain larg memorybound even softwar prefetch b factor contribut effect softwar prefetch next identifi three factor make softwar prefetch less success reduc memori stall time ilp simpl two factor allow ilp addit benefit memori stall reduct avail simpl one factor either help hurt ilp focu issu specif ilp system previou work discuss nonilp specif issu 6 figur 10 summar effect exhibit applic studi neg effect first two import applic increas late prefetch last column figur 9 show number prefetch late complet hide miss latenc increas applic move simpl ilp one reason increas multipleissu outof order schedul speed comput ilp decreas comput time prefetch lap simpl also stall load miss prefetch incur late prefetch therebi allow outstand prefetch data arriv cach ilp provid similar leeway increas resourc content shown section iii ilp processor stress system resourc simpl prefetch increas demand resourc result content greater memori latenc resourc stress configur cach port mshr alu address gener unit neg interact cluster miss optim cluster load miss ilp system luopt potenti reduc effect softwar prefetch exampl addit prefetch dexecut time lu memori cpu normal execut time luopt memori cpu normal execut time fftopt memori cpu normal execut time mp3d memori cpu normal execut time radix memori cpu normal execut time water memori cpu fig 8 interact softwar prefetch ilp duce execut time lu 13 ilp system contrast luopt improv 3 simpl system lu luopt improv 10 prefetch luopt prefetch slightli better lu prefetch ilp 3 cluster optim use luopt reduc comput success miss contribut high number late prefetch increas content prefetch overlap access ilp access difficult prefetch may overlap nonblock load outoford schedul prefetch line lu luopt often suffer l1 cach conflict result line replac l2 cach use demand access l2 cach latenc result stall time simpl overlap processor ilp sinc prefetch ilp need target access alreadi overlap ilp appear effect ilp simpl fewer earli prefetch earli prefetch prefetch line either invalid replac correspond demand access earli prefetch hinder demand access invalid replac need data cach without provid benefit latenc reduct mani applic number earli prefetch drop ilp improv effect prefetch applic reduct occur ilp system allow less time prefetch subsequ demand access decreas likelihood interven invalid replac specul prefetch ilp prefetch instruct specul issu past mispredict branch specul prefetch potenti hurt perform bring unnecessari line cach bring need line cach earli specul prefetch also help perform initi prefetch need line earli enough hide latenc appli cation prefetch issu past mispredict branch line also access correct path app reduct execut time reduct memori stall time main memori stall time prefetch late ple ple ple ple mp3d 43 43 78 59 29 62 1 12 water averag 14 14 59 fig 9 detail data effect softwar prefetch averag lu luopt luopt consid sinc provid better perform lu prefetch ilp factor lu lu fft mp3d water radix opt opt late prefetch resourc content cluster load overlap earli prefetch specul prefetch fig 10 factor affect perform prefetch ilp c impact softwar prefetch execut time despit reduc effect address memori stall time softwar prefetch achiev signific execut time reduct ilp three case lu mp3d water two main reason first memori stall time contribut larger portion total execut time ilp thu even reduct small fraction memori stall time impli reduct overal execut time similar greater seen simpl second ilp system see less instruct overhead prefetch compar simpl system ilp techniqu allow overlap instruct comput allevi late prefetch content result show late prefetch resourc content two key limit effect prefetch ilp tri sever straightforward modif prefetch algorithm system address limit 12 specif doubl quadrupl prefetch distanc ie distanc prefetch correspond demand access increas number mshr howev modif trade benefit among late prefetch earli prefetch content without improv combin factor enough improv overal per formanc also tri vari prefetch distanc access accord expect latenc access versu common distanc access prefetch l2 cach modif achiev purpos provid signific perform benefit applic 12 v discuss result show sharedmemori system limit effect exploit ilp processor due limit benefit ilp techniqu memori sy tem analysi section iii impli key reason limit benefit lack opportun overlap load miss andor increas content system compil optim akin loop interchang use gener luopt fftopt may abl expos potenti load miss overlap applica tion simpl loop interchang use luopt provid 13 reduct execut time compar lu ilp multiprocessor hardwar enhanc also increas load miss overlap eg larger instruct window target content requir increas hardwar resourc latenc reduct techniqu result section iv show softwar prefetch improv memori system perform ilp processor chang memorybound natur system applic latenc long hide prefetch andor increas content result motiv prefetch algorithm sensit increas resourc usag also motiv latencyreduc rather toler techniqu produc initi commun improv effect prefetch 1 vi conclus paper evalu impact ilp techniqu support stateoftheart processor perform sharedmemori multiprocessor applic see perform improv current ilp techniqu howev ilp techniqu effect address cpu compon execut time less success improv data memori stall time applic see full benefit latencytoler featur ilp processor insuffici opportun overlap multipl load miss increas content system resourc frequent memori access thu ilpbas multiprocessor see larger bottleneck memori system perform gener poorer parallel effici previousgener multiprocessor softwarecontrol nonbind prefetch latenc hide techniqu wide recommend previousgener sharedmemori multiprocessor find softwar prefetch result substanti reduct execut time case ilp system increas late prefetch increas content resourc caus softwar prefetch less effect reduc memori stall time ilpbas system even addit softwar prefetch applic remain larg memori bound thu despit latencytoler techniqu integr within ilp processor multiprocessor built ilp processor greater need addit techniqu hide reduc memori latenc previousgener multiprocessor one ilpspecif techniqu discuss paper softwar cluster load miss addit latencyreduc techniqu produceriniti commun improv effect prefetch appear promis r evalu finegrain produc initi commun cachecoher multiprocessor adapt integr data cach prefetch sharedmemori multiprocessor sgi origin toler latenc softwarecontrol data prefetch evalu design altern multiprocessor microprocessor case singlechip multiprocessor evalu memori consist model sharedmemori system ilp processor rsim refer manual impact instruct level parallel multiprocessor perform simul methodolog interact softwar prefetch ilp processor sharedmemori system splash stanford parallel applic sharedmemori splash2 program character methodolog consider tr ctr vijay pai sarita adv code transform improv memori parallel proceed 32nd annual acmiee intern symposium microarchitectur p147155 novemb 1618 1999 haifa israel manuel e acacio jo gonzlez jo garca jo duato owner predict acceler cachetocach transfer miss ccnuma architectur proceed 2002 acmiee confer supercomput p112 novemb 16 2002 baltimor maryland christoph j hugh praful kaul sarita v adv rohit jain chanik park jayanth srinivasan variabl execut multimedia applic implic architectur acm sigarch comput architectur news v29 n2 p254265 may 2001 christoph j hugh sarita v adv memorysid prefetch link data structur processorinmemori system journal parallel distribut comput v65 n4 p448463 april 2005 xianh sun surendra byna yong chen serverbas data push architectur multiprocessor environ journal comput scienc technolog v22 n5 p641652 septemb 2007