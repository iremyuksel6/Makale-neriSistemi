preserv symmetri precondit krylov subspac method consid problem solv linear system nearli symmetr system precondit symmetr posit definit matrix symmetr case recov symmetri use minner product conjug gradient cg algorithm idea also use nonsymmetr case near symmetri preserv similarli like cg new algorithm mathemat equival split precondit requir factor better robust specif sens also observ combin truncat version iter method test show effect common practic forfeit nearsymmetri altogeth b introduct consid solut linear system precondit krylov subspac method assum first symmetr posit definit spd let spd matrix precondition matrix one possibl solv either leftprecondit system work support nsf contract nsfccr9214116 onr contract onrn0001492j1890 aro contract daal039c0047 univ tenn subcontract ora 446604 amend 1 2 depart mathemat univers california lo angel 405 hilgard avenu lo angel california 900951555 chanmathuclaedu myeungmathuclaedu z depart comput scienc minnesota supercomput institut univers minnesota 4192 eecsci bldg 200 union st se minneapoli minnesota 554550154 chowcsumnedu saadcsumnedu rightprecondit system system lost symmetri remedi exist precondition avail factor form eg incomplet choleski factor case simpl way preserv symmetri split precondition left right ie could solv involv symmetr posit definit matrix also done factor unfortun requir avail factor form often stringent howev remedi requir wellknown preserv symmetri use differ inner product specif observ gamma1 selfadjoint minner product sinc rewrit cgalgorithm new inner product denot r origin residu z residu precondit system would obtain follow algorithm see eg 4 algorithm 11 precondit conjug gradient 1 start comput 2 iter converg b x c r z note even though minner product use need multipli may avail explicitli need solv linear system matrix coeffici also seen chang variabl iter produc algorithm ident cg split precondit cg rightprecondit use gamma1 inner product three algorithm thu equival question rais follow nearli symmetr often case exist precondition spd situat use either form 2 3 unsatisfactori fulli symmetr case inde whatev degre symmetri avail entir lost although remedi base minner product alway use symmetr case rather surpris problem seldom ever mention literatur nearli symmetr case nonsymmetr case exist factor form form balanc also achiev split precondition left right howev seem much work done exploit minner product even avail factor form dichotomi treatment symmetr nonsymmetr case motiv studi ashbi et al fulli consid case use altern inner product matrix symmetr work awar consid use altern inner product nearsymmetr young jea 9 meyer 5 latter product spd use orthomin orthodir paper organ follow section 2 shown altern inner product may use preserv symmetri gmre section 3 consid use truncat iter method precondit system close symmetr hypothes mani author exampl axelsson 2 meyer 5 section 4 consid symmetr precondit bicg algorithm section 5 test algorithm numer use navierstok problem parameter reynold number thu near symmetri conclud paper section 6 precondit gmre nearli symmetr split precondit may use preserv origin degre symmetri altern leftprecondit minner product right precondit gamma1 inner product may use latter two altern develop arnoldi process use basi symmetr precondit version gmre like cg shown symmetr version mathemat equival split precondit requir precondition symmetr factor begin explor option implement issu associ left symmetr precondit 21 left symmetr precondit gmre algorithm base arnoldi process without precondit arnoldi algorithm base classic gramschmidt process follow algorithm 21 arnoldiclass gramschmidt 1 choos vector v 1 norm 1 2 3 4 comput 5 7 h 8 9 enddo consid case leftprecondit ie matrix involv algorithm replac precondition assum spd wish defin procedur implement algorithm use minner product possibl avoid addit matrixvector product eg accomplish defin correspond gmre procedur precondit case customari defin intermedi vector product precondit get reformul oper algorithm minner product comput inner product chang classic gramschmidt formul would first comput scalar h ij line 4 algorithm 21 would modifi vector z j obtain next arnoldi vector normal complet orthonorm step must normal final z j morthogon z j versu previou v observ thu desir mnorm comput accord 9 comput one potenti seriou difficulti procedur inner product comput 9 may neg presenc roundoff two remedi first comput mnorm explicitli expens addit matrixvector multipl ie point earlier undesir sinc oper often avail explicitli inde mani case precondit oper gamma1 avail sequenc oper case multigrid precondit anoth difficulti comput h ij 7 immedi amen modifi gramschmidt implement inde consid first step hypothet modifi gramschmidt step consist morthonorm z v 1 observ inner product z equal w v 1 comput need z comput modifi gramschmidt process howev vector avail comput z v classic gramschmidt altern save set vector mv comput multipli would allow us accumul inexpens vector z j vector via relat obtain 8 inner product z given form inner product guarante nonneg desir lead follow algorithm algorithm 22 arnoldiclass gramschmidt minner product 1 choos vector w 1 v mnorm 1 2 3 4 comput 5 w note algorithm requir save two set vector v j w v form need arnoldi basi w requir comput vector w j line 5 save two set vector also easili formul algorithm modifi gramschmidt version arnoldi procedur algorithm 23 arnoldimodifi gramschmidt minner product 1 choos vector w 1 v mnorm 1 2 3 4 5 7 enddo 8 9 h 11 12 enddo 22 right symmetr precondit matrix gamma1 selfadjoint gamma1 inner product situat right precondit inner product much simpler mainli gamma1 z avail z need normal gamma1 norm howev gamma1 z normal comput next iter standard arnoldi algorithm slight reorgan arnoldi modifi gramschmidt algorithm yield follow algorithm 24 arnoldimodifi gramschmidt gamma1 inner product 1 choos vector v 1 gamma1 norm 1 comput w 2 3 4 5 7 enddo 8 note precondit vector comput line 8 standard algorithm comput line 3 vs ws need save case addit storag ws howev make algorithm natur flexibl ie accommod situat vari step gamma1 v result unspecifi comput gamma1 constant oper basi rightprecondit krylov subspac construct vs alon howev vector w form basi subspac gamma1 denot precondit oper jth step use extra set vector exactli standard flexibl variant gmre implement 6 23 use minner product gmre vector v form orthonorm basi krylov subspac follow denot matrix whose column vector vector v produc arnoldimodifi gramschmidt algorithm minner product algorithm 23 similar notat use matrix wm also denot hm m1 theta upper hessenberg matrix whose nonzero entri h ij defin algorithm hm denot portion hm matric satisfi number relat similar one obtain use standard euclidean inner product proposit 21 follow properti satisfi vector v w algorithm 23 hm 2 hm 3 v 4 w 5 hermitian hm hermitian tridiagon consid implement gmre procedur base orthogon process algorithm 23 sinc use minner product abl minim mnorm residu vector vector affin subspac z first coordin vector hm therefor equal hm result equal 12 minim mnorm precondit residu vector gamma1 bgammaax simpli minim 2norm fie 1 gamma hm standard gmre algorithm algorithm 25 leftprecondit gmre minner product 1 comput 2 3 4 5 7 enddo 8 9 h 11 12 enddo 13 comput minim kfie 1 gamma 14 comput approxim solut 15 satisfi stop els set x equal similar 12 shown rightprecondit case inner product summar follow theorem state without proof theorem 21 approxim solut xm obtain leftprecondit gmre algorithm minner product minim residu mnorm km gamma1 b gamma axkm vector affin subspac x 0 km z also approxim solut xm obtain rightprecondit gmre algorithm gamma1 inner product minim residu gamma1 norm kb affin subspac 24 equival algorithm show left right symmetr precondit mathemat equival split precondit latter case must factor solv denot b precondit matrix gmre procedur appli system u variabl minim residu norm vector u space u 0 k u note variabl u x relat result procedur minim x space x 0 k x make follow observ k 0 z inde easili prove induct henc space k x ident space noth 13 note prove follow result theorem 22 let approxim solut obtain gmre appli split precondit system 14 ident obtain gmre algorithm left precondit system 2 use minner product statement made rightprecondit must notic minim 16 take place minim subspac left right split precondit option 7 sec 934 emphas particular split precondit residu minim three algorithm 3 truncat iter method truncat iter method altern restart number step requir converg larg comput storag krylov basi becom excess exactli symmetr threeterm recurr govern vector arnoldi process necessari orthogon current arnoldi vector previou two vector nearli symmetr incomplet orthogon small number previou vector may advantag restart method advantag may offset cost maintain extra set vector maintain initi degre symmetri incomplet arnoldi procedur outlin store previou k arnoldi vector orthogon new vector differ full arnoldi procedur line 4 would normal loop 1 j consid full arnoldi procedur k set infin algorithm 31 incomplet arnoldi procedur 1 choos vector v 1 norm 1 2 3 4 5 7 enddo 8 h 9 h 11 enddo truncat version gmre use incomplet arnoldi procedur call quasigmr 3 practic implement algorithm allow solut updat iter thu call direct version dqgmre 8 suggest truncat iter method may effect case near symmetri studi asymptot behavior iter dqgmre coeffici matrix vari nonsymmetri skew symmetri first decompos symmetr skew symmetr set first establish asymptot relat among variabl incomplet full arnoldi procedur appli incomplet procedur full procedur use superscript f distinguish variabl appear two procedur note sinc skew symmetr full procedur incomplet procedur k 2 moreov denot degre minim polynomi v f 1 respect h f proof follow lemma also use v j denot vector w w f obtain end line 7 incomplet complet arnoldi procedur lemma 31 assum truncat paramet k 2 v h proof proof induct index j line 5 6 arnoldi procedur h h henc lemma hold 1 assum lemma prove hypothesi prove arnoldi procedur h yield induct hypothesi therefor w w f line 3 arnoldi procedur use anoth induct index line 5 6 induct hypothesi j mean time note h last equat h induct step complet qed turn dqgmre algorithm consid linear system denot x g x q approxim solut gmre dqgmre algo rithm respect let degre minim polynomi vector b gamma sx 0 respect result lemma state follow theorem 31 given initi guess x 0 gmre dqgmre k 2 given step proof definit dqgmre gmre h h h b b lemma h therefor desir equat hold qed let xa exact solut exact solut obviou sinc hand x g immedi follow corollari corollari 31 initi guess x 0 k 2 corollari suggest may use dqgmre small k nearli symmetr nearli skew symmetr 4 symmetr precondit bicg bicg algorithm base lanczo biorthogon leftsymmetr rightsymmetr precondit rel straightforward extra vector quir refer algorithm 41 give rightprecondit bicg algorithm precondition symmetr rightprecondit bicg algorithm rightprecondit use gamma1 inner product develop immedi afterward algorithm 41 rightprecondit bicg 1 comput 0 r 2 3 converg 4 ff 5 x 6 r 7 r 8 9 11 enddo note line 7 algorithm precondit coeffici matrix dual system dual residu r residu leftprecondit version linear system develop symmetr rightprecondit bicg gamma1 inner product use algorithm 41 howev precondit coeffici matrix dual system must adjoint gamma1 gamma1 inner product gamma1 shown dual system thu involv coeffici matrix gamma1 algorithm 42 give symmetr rightprecondit bicg algorithm precondition algorithm 42 rightprecondit bicg gamma1 inner product 1 comput 0 gamma1 r 2 3 converg 4 ff 5 x 6 r 7 r 8 9 11 enddo like gmre left right symmetr precondit version bicg equival split precondit version shown chang variabl howev left right symmetr precondit version exact rather split precondit residu avail unprecondit bicg algorithm seriou breakdown spd r 0 chosen r 0 r vector ap never becom orthogon fact cosin bound reciproc condit number similarli symmetr rightprecondit version bicg spd r measur cosin rather quantiti ap r vector magnitud go 0 algorithm progress recal case lucki breakdown case regular right leftprecondit r symmetr precondit case lower bound exist algorithm liabl break nearsymmetr hypothesi probabl breakdown lower symmetr precondit case shown experi next section 5 numer experi section 51 test idea use symmetr precondit truncat iter meth od section 52 test breakdown behavior symmetr precondit bicg 51 truncat iter method test idea use symmetr precondit truncat iter method nearli symmetr system select standard fluid flow problem degre symmetri matric parameter reynold number flow problem twodimension squarelid driven caviti discret galerkin finit element method rectangular element use biquadrat basi function veloc linear discontinu basi function pressur consid segreg solut method navierstok equat veloc pressur variabl solv separ matric aris fullycoupl solut method otherwis indefinit particular consid express conserv momentum u denot vector veloc variabl p denot pressur variabl reynold number boundari condit driven caviti problem unit squar top edg squar three side corner refer pressur specifi bottomleft corner 0 matric initi jacobian newton iter assum zero pressur distribut conveni howev chose righthand side linear system vector one mesh 20 20 element use lead momentum equat matric order 3042 91204 nonzero entri node correspond boundari assembl matrix degre freedom number element element reynold number 0 matrix spd equal symmetr part matric nonzero reynold number gener matric reynold number less 10 give rise nearli symmetr case reynold number 1 degre symmetri measur valu 75102 theta 10 gamma4 measur increas linearli reynold number least re10 numer experi show number matrixvector product consum gmresk dqgmresk reduc actual residu norm less gamma6 origin residu norm zero initi guess sever valu k use dagger tabl indic converg within 500 matrixvector product incomplet choleski factor ic0 re0 problem use precondition problem comparison first show tabl 1 result use standard rightprecondit tabl 2 show result use rightprecondit gamma1 inner product equiva lentli split precondit latter case care taken assur gmre stop actual residu norm within twice toler dqgmre sinc accur residu norm estim avail within algorithm exact residu norm comput use stop criterion purpos com parison rightprecondit method slight advantag comparison mani 20 matvec sinc directli minim actual residu norm wherea symmetr precondit method minim precondit residu norm 6 214 128 73 446 361 94 97 258 197 100 94 tabl 1 matvec converg rightprecondit method tabl 2 matvec converg symmetr rightprecondit method result tabl 1 show irregular perform dqgmresk small valu k precondit system symmetr perform entir regular tabl 2 precondit system near symmetr reynold number 3 system suffici symmetr dqgmres2 behav dqgmre much larger k perform remain regular beyond reynold number 7 number step converg begin becom irregular like rightprecondit case gmre either right symmetr precondit show mark differ perform appar symmetri precondit system essenti problem howev result show dqgmresk small valu k may perform well term number step gmresk larg valu k particularli nearsymmetri preserv sinc former much effici combin preserv symmetri truncat iter method may result much econom method well regular behavior shown also perform experi orthogon project method name full orthogon method fom truncat variant direct incomplet orthogon method diom 7 result similar result shown inde develop algorithm theori ident method interest also perform test ilu0 precondition construct matrix compar right split precondit nearsymmetr system littl differ result compar use ic0 construct re0 case matric thu deterior perform reynold number increas entir due rel less accur precondition due increas nonsymmetri nonnorm matric although eigenvalu precondit matric ident eigenvector henc degre nonnorm may chang complet unfortun difficult quantit relat nonnorm converg 52 breakdown behavior bicg test breakdown behavior bicg matlab use gener random matric order 300 approxim 50 percent normal distribut nonzero entri matric adjust ie symmetr part shift lowest eigenvalu 10 gamma5 time skewsymmetr part ad back paramet alter get vari degre nonsymmetri test 100 matric gener smallest valu cosin correspond denomin algorithm record right precondit case record minimum j symmetr rightprecondit case record minimum j rel residu norm reduct 10 gamma9 iter stop initi guess 0 r set r 0 ic0 symmetr part use precondition tabl 3 show frequenc size minimum cosin rightprecondit first row pair row symmetricallyprecondit case second row pair row exampl 100 minimum cosin symmetricallyprecondit case averag number bicg step averag minimum cosin also shown last column label better show number time minimum cosin higher improv algorithm tabl show rightprecondit algorithm produc much smaller cosin indic greater probabl breakdown differ algorithm less degre nonsymmetri increas almost differ breakdown behavior algorithm tabl show number bicg step significantli reduc new algorithm averag minimum cosin modifi algorithm significantli increas probabl small cosin encount better import note behavior appli r 0 set r 0 r 0 chosen randomli gain symmetricallyprecondit algorithm shown tabl 4 tabl 5 show number step minimum cosin two algorithm appli driven caviti problem describ section 51 figur 1 show plot minimum cosin two algorithm progress note minimum cosin higher much smoother symmetricallyprecondit case 7 problem cosin still higher smooth lost 6 conclus solv linear system matric close symmetr paper shown possibl improv upon standard practic use nonsymmetr precondition matrix along left rightprecondit iter method origin degre symmetri may maintain use symmetr precondition altern inner product split precondit appropri combin idea truncat iter method solut procedur converg quickli requir less storag develop truncat method also seem becom robust truncat paramet k nearsymmetri maintain bicg algorithm also seem robust respect seriou breakdown nearsymmetri maintain step 3e6 1e5 3e5 1e4 3e4 1e3 3e3 1e2 3e2 averag better 0 3177 100 187 74 tabl 3 frequenc minimum cosin rightprecondit first row pair row symmetricallyprecondit second row pair row bicg step 3e6 1e5 3e5 1e4 3e4 1e3 3e3 1e2 3e2 averag better tabl 4 frequenc minimum cosin r chosen randomli bicg step min cosin right symm right symm 3 73 72 202e4 907e3 tabl 5 step minimum cosin driven caviti problem figur 1 minimum cosin rightprecondit bicg solid line symmetr precondit bicg dash line acknowledg first third author wish acknowledg support riac nasa ame contract na 213721 collabor origin second third author also wish acknowledg support minnesota supercomput institut r taxonomi conjug gradient method conjug gradient type method unsymmetr inconsist system linear equat iter solut method linear system coeffici matrix symmetr mmatrix concept special inner product deriv new conjug gradientlik solver nonsymmetr spars linear system flexibl innerout precondit gmre algorithm iter method spars linear system dqgmre direct quasiminim residu algorithm base incomplet orthogon gener conjugategradi acceler nonsym metriz iter method tr