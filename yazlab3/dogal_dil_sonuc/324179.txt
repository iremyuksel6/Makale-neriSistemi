linear hash function consid set h linear affin transform two vector space finit field f studi good h class hash function name consid hash set size n rang cardin n randomli chosen function h look expect size largest hash bucket h univers class hash function finit field respect measur differ field behav differentlyif finit field f n element bad set f2 size n expect maxim bucket size hn13 n perfect squar even bad set largest bucket size alway least n worst possibl sinc respect univers class hash function everi set size n expect largest bucket size n howev consid field two element get much better bound best previous known upper bound expect size largest bucket class o2 log n reduc upper bound olog n log logn note far guarante random function averag largest bucket would thgrlog n log log nin cours proof develop tool may independ interest suppos subset vector space z2 consid random linear map smaller vector space r cardin larger cegrrlogr probabl 1 egr imag cover element rang b introduct consid distribut n ball bucket randomli independ result distribut ball bucket object occup theori dep math sackler faculti exact scienc tel aviv univers tel aviv israel institut advanc studi princeton nj 08540 research support part usaisra bsf grant sloan foundat grant 9662 nec research institut grant hermann minkowski minerva center geometri tel aviv univers email nogamathtauacil fakultat fur informatik und automatisierung technisch universitat ilmenau postfach 100565 98684 ilmenau germani work done author aliat univers dortmund partial support dfg grant di 41251 email martindietzfelbingertheoinftuilmenaud z bric centr danish nation research foundat univers aarhu ny munkegad aarhu denmark support esprit long term research programm eu project number 20244 alcomit email bromillebricsdk part work done author univers toronto x ibm haifa research lab matam haifa 31905 israel email erezphaifavnetibmcom work done author visit univers toronto renyi institut hungarian academi scienc pf 127 budapest h1364 hungari partial support dimac center grant otka t020914 t030059 fkfp 06071999 email tardoscseltehu part work done author visit univers toronto institut advanc studi princeton theori algorithm complex theori often necessari use consid put ball bucket without complet independ precis follow set studi class h hash function map univers u f1 xed set u hash given adversari member h 2 h chosen uniformli random hash use h distribut multiset fhxjx 2 sg studi class h class function u f1 get classic occup problem carter wegman dene class h univers 1s remark stricter denit often use complex theori literatur univers famili follow properti well known variat use extens variou set 1 size n hash n 2 bucket probabl 12 collis occur 2 size 2n 2 hash n bucket probabl 12 everi bucket receiv element 3 size n hash n bucket expect size largest bucket less p n 1the intuit behind univers hash often lose rel littl compar use complet random map note properti 1 true strong sens even complet random expect 2 bucket suce birthday paradox noth lost use univers famili instead bound second third properti howev rather coars compar one would get complet random properti 2 complet random n log n ball would suce cover bucket good probabl coupon collector theorem ie polynomi improv n 2 properti 3 complet random expect largest bucket size log n log log n ie exponenti improv p n last case seem lose quit lot compar use complet random map better bound would seem desir howev rather easi construct unnatur exampl univers famili set hash show size n 2 necessari cover n bucket nonzero probabl bucket size gener unavoid set size n hash n bucket show abstract properti univers allow stronger statement x concret univers famili hash function ask follow question extent ner occup properti complet random map preserv provid answer question case linear map two vector space nite eld natur well known class univers sens carter wegmen hash function gener avor result larg eld bad sens bound becom worst possibl univers famili small eld good sens bound becom good almost good one independ distribut ball precis cover problem show follow easi theorem theorem 1 let f eld size n let h class linear map f 2 f subset f 2 size jf j 2 h hand prove follow harder theorem theorem 2 let subset vector space z 2 choos random linear map smaller vector space r jsj c jrj log jrj probabl least 1 imag cover entir rang r largest bucket problem let us rst introduc notat let u univers key chosen x class h function map u sg set u size n chosen adversari uniformli random pick hash function use h look size largest result hash bucket denot expect size l n formal sujsjn usual think size close n note univers class yield class h consid set linear map f f k k f nite eld class univers valu paramet expect largest bucket larg theorem 3 let f nite eld jf class h linear transform 13 furthermor jf j perfect squar h note close lower bound quadrat eld upper bound hold everi univers class also mention bad set construct theorem 8 quadrat eld good linear hash function sinc alway exist bucket size least p eld eld two element situat complet dierent markowski carter wegman mcw78 show case l mv84 improv result although implicit paper show l o2 log improv bound show theorem 4 class h linear transform two vector space z 2 furthermor also show even rang smaller jsj logarithm factor still hold theorem 5 class h linear transform two vector space z 2 log note even one use class r function one obtain slightli better result expect size largest bucket case l log l log log best possibl bound class interestingli upper bound base upper bound cover properti nontrivi lower bound l class linear map z 2 ie might good olog log log leav open question 11 motiv doubt method implement dictionari hash chain recommend textbook clr90 gby90 especi situat mani updat oper practic import scheme situat good bound cost singl oper import e g realtim applic expect maxim bucket size form key ever present dictionari time interv play crucial role result show least long size hash tabl determin right start use hash famili linear function z 2 perform well respect simpl hash class bound worst case bucket size avail even fail hold see exampl section 4 sophist hash famili s89 dm90 dgmp92 guarante small maxim bucket size consist function higher evalu time cours worst case constant time certain oper absolut necessari known twolevel hash scheme use e g fk scheme fks84 static dictionari dynam perfect hash dkmhrt94 dynam case constant time lookup expect time n updat oper realtim dictionari dm90 perform oper constant time high probabl note howev price paid guarante constant lookup time dynam scheme averag cost insert signicantli higher simpl scheme like chain hash overal storag requir higher well 12 relat work anoth direct tri show specic class good bound expect size largest bucket build class specic design good properti one immedi result obtain look class h ddegre polynomi nite eld log n log log n see eg abi86 easi see class map element domain independ rang thu bound appli class function also appli class combin follow well known construct found eg fks84 sometim call collaps univers class c size 2 log nlog log ju contain function map u g set size n randomli chosen map c onetoon probabl 1 o1n k class consist function obtain rst appli member c member h class l n log log n size 2 olog log ju jlog 2 n log log n evalu time olog n log log n reason model comput say ram unit cost oper member univers hash ecient much larger famili given siegel s89 dietzfelbing meyer auf der heid dm90 provid famili size ju j n function evalu o1 time ram l n log log n famili s89 dm90 somewhat complex implement class linear map requir basic bit oper discuss alreadi cw79 therefor desir studi class main purpos present paper 13 notat subset domain function h use hs denot sg x element rang use h 1 x denot fs 2 j xg b subset vector space v x 2 v use notat ag use z 2 denot eld 2 element logarithm paper base two 2 cover properti 21 lower bound cover larg eld prove theorem 1 take set f size ag densiti around one quarter see note x pick randomli independ f xy x 1y distribut linear see take nonzero linear note 0 2 gs 6 0 ba 2 case 62 gs 22 upper bound cover small eld existenti case start show subset vector space z 2 jaj sucient larger anoth space w exist linear transform map entir rang constant e base natur logarithm theorem 6 let nite set vector vector space v arbitrari dimens z 2 let 0 integ jaj t2 log e exist linear map onto z proof theorem need follow simpl lemma note although state lemma vector space hold nite group lemma 21 let v nite vector space v proof v u chosen uniformli independ random v event u 62 v probabl independ 2 proof theorem 6 let dimens v start choos vector choic v 1 exist lemma 21 procedur choos v 2 note one assum vector v linearli independ sinc choos vector v linearli depend vector formerli chosen make g disjoint contradict jx choos onto linear 2 kernel 1 0 equal w w 2 claim 2 bound theorem 6 asymptot tight shown follow proposit proposit 22 everi larg enough integ set least 3 log t2 vector vector space v z 2 linear map map let chosen random pick element v independ probabl set chebyshev inequ know probabl least 34 cardin least pn 2 pn use p x log e x 2 2 log 2 e one show mani claim proposit let us comput probabl exist linear map 2 map onto z 2 tt possibl map probabl 1 1 p 2 2 probabl almost 34 small still map onto z 23 choos linear map random subsect strengthen theorem 6 prove bigger requir constant factor almost choic linear transform work may seem immedi rst glanc sinc lemma 21 tell us random choic next vector good averag particular might seem random choic v 1 v 2 proof theorem 6 unfortun case exampl think linear subspac contain half v case ratio point cover 12 random vector v chosen ad vector chosen probabl 12 thu step remain 12 probabl 12 becom 0 otherwis thu expect valu 2 1 much bigger rst lemma technic natur lemma 23 let 1 k random variabl let 0 0 1 constant suppos 0 k 0 i1 condit set valu threshold 0 1 proof proof induct k base case trivial assum statement lemma k prove k 1 let log log1t may suppos c sinc otherwis bound lemma greater 1 choic 1 rest random variabl form random process length k satisfi condit lemma unless thu appli induct hypothesi get dene f interv clearli upper bound prob k1 j 1 claim interv 0 x 0 fx f 0 0 x 0 prove simpli observ f 0 xx rst increas decreas 0 1 see comput deriv 0 still increas phase suppos 0 alreadi decreas phase dene x notic assum 0 x 0 begin proof f us dene x notic x x 00 easi check x 00 must still increas phase f 0 xx thu x 00 x 1 simpli thu must fxx 1x thu prove claim case 0 x 0 claim trivial use claim nish proof write remark bound lemma achiev 0 integ 0 j k optim process theorem 7 everi 0 constant c 0 follow hold let nite set vector vector space v arbitrari dimens z 2 let 0 integ jaj c t2 uniform random linear transform b subset vector space z u 2 densiti jaj2 integ uniform random onto linear transform proof start prove part b theorem order pick onto map use follow process similar one proof theorem 6 pick vector uniformli random vector z u 2 choos random onto linear 2 constraint v ie vector v kernel note v necessarili linearli independ necessarili span kernel still transform inde distribut uniformli random amongst onto linear map z u use notat similar one use proof theorem 6 let nonneg monoton decreas equat e guarante lemma 21 sinc independ j j thu condit lemma 23 satis denit right hand side equal estim theorem final note proof theorem 2 sinc x 2 z set disjoint size 2 u 1 2 u 2 u 2u contradict thu claim upper bound probabl 6 z turn part theorem prove use part b part random linear transform necessarili onto dierenc claim prove pose less problem diculti priori bound 1 jajjv j fact ratio arbitrarili small solv choos transform two step rst step ensur densiti cover set substanti appli part b second step first pick uniformli random linear transform pick random onto linear map 2 set result uniformli chosen linear 2 true even xed onto 1 random 0 sinc valu 0 independ uniformli distribut w thu valu e also independ uniformli distribut z pair vector v 6 w 2 collid due 0 probabl probt 0 thu expect number collis jaj jw j sinc jt 0 aj jaj2 impli least jaj2 collis markov inequ give probjt 0 aj jaj2 2 jaj xed 0 part b theorem give case jt 0 aj jaj2 1 jaj2jw use monoton bound get choos c jaj c t2 impli 4 log2 impli bound equat 1 less 2 thu get probt 6 remark care analysi give c small polynomi 1 3 largest bucket 31 lower bound largest bucket larg eld start show linear hash larg nite eld bad respect expect largest bucket size measur natur exampl show univers class enough assur small bucket nite eld f prove exist bad set f 2 size expect largest bucket respect random linear big prove result theorem 3 separ quadrat nonquadrat eld start intuit descript construct linear hash plane collaps straight line random direct thu bad set plane must contain mani point least one line mani dierent direct hard come bad set contain mani point mani dierent line howev obviou construct subplan grid yield set mani popular line tend parallel thu cover direct problem solv project transform transform set mani popular line longer parallel nonquadrat case conveni explicitli use concept project plane eld f recal project plane p f dene equival relat x ane plane f 2 embed p onetoon map x 7 x 1 line p given equat project line correspond plane f 3 contain origin project line extens one new point line ane plane f 2 except ideal line given fx 0g project transform map ideal line anoth project line l map obtain quotient nonsingular linear map plane correspond ideal line plane correspond l project geometri use understand behavior linear hash function due follow fact easili veri pick random nontrivi linear map f 2 f hash function partit subset f 2 hash bucket accordingli correspond exactli pick random point p ideal line partit point accord line p observ use explicitli proof theorem 9 theorem 8 let f nite eld jf j perfect squar exist set f 2 size everi linear larg bucket ie exist valu 2 f jh 1 yj jf j proof nite eld f 0 f quadrat extens let jf arbitrari element f n f 0 dene g note also imag subplan f 2 0 project transform x 7 1 fix f consid function h dene hx must show c 2 f jh 1 c sj map element need otherwis claim c 2 f c b ac f 0 see observ g 1 g 2 two distinct member f 0 ag 1 ag 2 lie distinct addit coset f 0 f sinc otherwis dierenc ag 1 would f 0 contradict fact 62 f 0 thu rang member f 0 ag intersect distinct addit coset f 0 f henc af 0 intersect coset particular g 2 f 0 ag 2 f impli assert claim c dene follow yx 2 f 0 everi x 2 f 0 1 ax b yx show h map element theorem 9 let f nite eld exist set f 2 size half linear map larg bucket ie exist valu 2 f proof first construct set 0 f 2 js 0 j jf n distinct line plane f 2 contain least n 13 3 point 0 let us rst consid case n prime f consist integ modulo n ng consid squar grid clearli js 0 j n well known n popular line contain least n 13 3 point 0 usual prove grid euclidean plane see eg pa95 pp 178179 result impli grid f 2 let subeld f p element let x 2 f primit element everi element f uniqu express polynomi x degre k coecient f 0 let k let polynomi f coecient f 0 final take n 2 1 b 2 2 consid line l ay notic n line ay n distinct line contain point 0 n 13 claim unless k 1 mod 3 notic k 2 mod much higher n 13 bad case k 1 mod 3 appli construct instead final suppos prime k 1 mod 3 get set 0 case merg two construct let f 0 p element subeld f f 0 consist integ modulo p set pg let k let x 2 f primit element express element f uniqu polynomi x degre less k coecient f 0 set ag polynomi f coecient f 0 final set g let b polynomi coecient f 0 dega k 1 degb k 2 consid line l fg comput valu jl ab 0 j note point axi bx l ab 0 polynomi f number polynomi f exactli exactli p k1 1 jl a0b0 aaj thu know p popular line f 2 0 contain least 0 p 13 3 point conclud exist n distinct line contain least point name line l ab choic b l a0b0 popular line f 2 case construct set 0 f 2 size js 0 j n n distinct popular line contain least n 13 3 point 0 let p project plane contain f 2 n 2 n 1 point p everi popular line cover n 1 ith popular line 1 n 1 intersect earlier line thu cover least n 2 point previous uncov therefor total least n2 1 point cover popular line simpl count give exist line l p among popular line half point l cover popular line let f project transform take ideal line l l dene one linear hash function h f 2 f constant zero thu singl bucket rest point x h 2 l 0 h collaps point f 2 singl line go x h observ begin section furthermor linear nonzero map pick random point x h equal like thu statement theorem follow show least half point x h ideal line hold line x h intersect least n 13 3 1 point line x h intersect least n 13 3 1 point line fx h intersect fs least n 13 3 1 project point sucient line fx h intersect 0 least n 13 3 point 1 come possibl fx h line fx h popular sens use denit f true least half point x h ideal line done 2 32 upper bound largest bucket small eld let us recal prove main result conveni speak hash n log n key n valu also assum n power 2 theorem 5 let h class linear transform two vector space z 2 log n log log n theorem impli theorem 4 bound probabl event mani element set map singl element rang denot bad event e 1 overal idea present anoth less natur event e 2 show probabl e 2 small yet probabl e 2 given big thu probabl e 1 must small remark somewhat similar line reason use semin paper vapnik chervonenki vc71 proof x domain 2 rang bucket size let us choos arbitrari log n consid space 2 construct linear intermedi rang follow way choos uniformli random linear transform uniformli random onto linear transform note mention proof part theorem 7 yield h uniformli chosen among linear transform b let us x threshold dene two event e 1 exist bucket size least exist element 2 b go limit probabl e 1 seemingli unrel event exist element 2 b consid distribut space h 1 h 2 uniformli chosen shall show proposit 31 log log log proposit 32 c 12 2 n log2 n c 12 theorem 7a proposit 31 32 deduc probabl e 1 must small corollari 33 constant c r 4 everi power two n follow hold subset size log n vector space z 2 hash random linear transform z log n 2 probmaximum bucket size rc log n log log n 2r log r logr log r log logr log r proof given r 4 let l blog nlog log nlog r log log r 1c let log log n let log n log nlog log nlog r log log r n log n r log r 1 2 l n 2 log nlog log nlog r log log r1 log nr log r c 12 2 l n log2 l n c 12 2 log nr log r1 log log n log r log nr log r2 log log n log r log log n condit proposit 31 32 satis combin conclus get log log log event e 1 event biggest bucket bigger log log n sinc r log r statement corollari follow put let us prove proposit proof proposit 31 note rst altern way describ e 2 prove proposit 31 hold specic h 1 thu also hold randomli chosen h 1 x h 1 consid distribut h 2 chosen uniformli amongst full rank linear transform b use part b theorem 7 set n h 1 densiti clearli 1 1d thu theorem give log log nlog log1 log log log claim 2 proof proposit 32 fix h e 1 hold x full rank h 2 show probabl event e 2 least 12 even two xed thu condit probabl also least 12 sinc e 1 hold subset 0 cardin least map h singl element 2 z log n fix dene consid distribut h 1 satisfi restrict h 1 0 get distribut impli h 1 uniform choic ane linear map 0 0 show proposit 34 event e 2 hold enough 0 h 1 show h 1 0 cover point 0 probabl least 12 thu get event e 2 happen probabl 12 sinc h 2 onto ja hand 0 cardin least theorem 7 probabl set cardin map random linear transform cover rang cardin 2 n least 12 note theorem 7 part clearli appli random ane transform 2 point proven corollari 33 limit probabl larg bucket linear hash straightforward deduc theorem 5 corollari proof theorem 5 l n log n expect distribut largest bucket size corollari 33 limit probabl tail distribut thu yield desir bound expect constant c corollari 33 set log log n 4k z 4k kz2r log r logr log r log logr log r dr log log nin order paper selfcontain includ proof simpl statement random linear transform use proposit 34 let b vector space z 2 let h arbitrari linear map let arbitrari onto linear map let point b denot choos uniform linear map restrict domain 0 get uniformli chosen linear map 0 0 uniformli chosen ane map 0 0 otherwis proof consid 0 0 let us choos complement space 1 us call x uniqu vector 0 1 linear transform determin two restrict clearli uniform random choic h 1 correspond uniform independ choic h 0 h 00 restrict mean h 0 0 0 restrict h 1 thu restrict random choic h 0 h 00 still independ note restrict h 1 question exactli note restrict question h 0 time translat random valu h 00 x 2 0 2 4 remark open question discuss case small eld size 2 larg eld size n happen intermedi size eld immedi rough gener bound follow hash advers chosen subset f size randomli chosen linear map expect size largest bucket olog n log log n log jf j least bound possibl anoth question properti well known hash famili exampl famili mind includ arithmet z p cw79 fks84 h ab b mod p mod n integ multipl dhkp97 ahnr95 h boolean convolut mnt93 h project subspac exampl natur nonlinear scheme assert theorem 6 fail scheme map integ 1 p larg prime p integ 0 n 1 map x 2 z p ax two randomli chosen element z p scheme prime p choic n subset cardin log n log log log n z p map map onto 0 n 1 choic b see let p prime satisfi p 3 mod 4 consid set quadrat residu modulo p note everi nonzero element 2 z p set mod p either set quadrat residu set quadrat nonresidu modulo p main result graham ringros gr90 assert innit mani prime p smallest quadrat nonresidu modulo p least ast p log log log p result hold prime p well follow remark end gr90 sinc prime p 1 quadrat nonresidu follow choic b 2 z p set comput z p avoid interv length least ast p log log log p choos log log log p appropri small constant c dene log n log log log n map onto 0 n 1 choic b nal question whether exist class h size 2 olog log ju jlog n l n olog n log log n note linear map z 2 even combin collaps univers use olog log bit simpl scheme use higher degre polynomi use olog log log log n acknowledg thank sanjeev arora help remark r fast simpl random parallel algorithm maxim independ set problem sort linear time univers class hash function introduct algorithm reliabl random algorithm closestpair problem polynomi hash function reliabl handbook algorithm data structur lower bound least quadrat nonresidu analysi univers class hash function random determinist simul pram parallel machin restrict granular parallel memori comput complex univers hash combinatori geometri univers class fast high perform hash function uniform converg rel frequenc event probabl tr store spars tabl italic0italic1 worst case access time random determinist simul pram parallel machin restrict granular parallel memori fast simpl random parallel algorithm maxim independ set problem introduct algorithm comput complex univers hash dynam perfect hash sort linear time reliabl random algorithm closestpair problem polynomi hash function reliabl extend abstract ctr dahlia malkhi moni naor david ratajczak viceroy scalabl dynam emul butterfli proceed twentyfirst annual symposium principl distribut comput juli 2124 2002 monterey california beat bollig stephan waack philipp woelfel pariti graphdriven readonc branch program exponenti lower bound integ multipl theoret comput scienc v362 n1 p8699 11 octob 2006 beat bollig philipp woelfel readonc branch program lower bound 2n4 integ multipl use univers hash proceed thirtythird annual acm symposium theori comput p419424 juli 2001 hersonisso greec