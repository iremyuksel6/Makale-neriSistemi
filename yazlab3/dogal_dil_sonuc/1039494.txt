fast montecarlo algorithm find lowrank approxim consid problem approxim given n matrix anoth matrix specifi rank k smaller n singular valu decomposit svd use find best approxim howev take time polynomi n prohibit modern applic articl develop algorithm qualit faster provid may sampl entri matrix accord natur probabl distribut mani applic sampl done effici main result random algorithm find descript matrix rank k hold probabl least 1 verbarverbarf frobeniu norm algorithm take time polynomi k1epsi log1 independ n particular impli constant time determin given matrix arbitrari size good lowrank approxim b introduct realworld data often larg number attribut featuresdimens natur question whether fact gener small model ie much smaller number paramet number attribut one way formal question problem find lowrank approxim given n matrix find matrix rank k f small possibl matrix frobeniu norm f defin f altern view row point r n problem find kdimension linear subspac minim sum squar distanc point problem aris mani context partli matrix algorithm ecient lowrank matric also interest consid norm eg 2norm see section 6 mostli focu frobeniu norm tradit singular valu decomposit svd use solv problem time ominmn 2 nm 2 mani applic motiv inform retriev web slow one need linear sublinear algorithm speed svdbase lowrank approxim papadimitri et al 2000 suggest random project preprocess step ie project row olog ndimension subspac find svd subspac reduc worstcas complex omn log n small loss approxim qualiti still high fast problem solv first sight seem mn lower bound singl nonzero entri one examin entri find good approxim suppos sampl entri probabl proport magnitud constants sampl would suce case paper show rank k approxim found time polynomi k 1 error paramet provid sampl entri natur probabl distribut sampl assumpt made explicit shortli also discuss context applic main result follow theorem 1 given mn matrix k random algorithm find descript matrix rank k drankdk f f hold probabl least 1 algorithm take time polynomi k 1 log1 independ mn complex comput task find first k singular valu randomli chosen submatrix matrix explicitli construct descript okmn time consequ polyk 1 time determin high probabl rank k approxim error f error probabl boost standard techniqu prove theorem fix error probabl central idea approach describ follow pick p row fast lowrank approxim 3 independ random accord probabl distribut satisfi assumpt a1 see section 11 suppos row form pm matrix row scale form matrix step 1 algorithm section 4 rel easi lemma 2 show approxim equal intuit jth entri dot product ith jth column inde sinc random sampl row entri ij estim scale done make estim unbias standard linear algebra get svd spectral decomposit sd 1 therefor approxim sd repeat sd read svd turn obtain sd ss sinc ss pp matrix problem reduc comput svd constant size matrix still leav comput ss appli sampl trick second time pick sampl p column form pp matrix w step 2 algorithm ww approxim ss sd ww need svd w suce central comput task algorithm present algorithm section 4 besid lemma 2 key step analysi show go approxim left singular vector approxim right singular vector small loss key insight paper basi algorithm exist good lowrank approxim subspac span small sampl row state formal constant c defin assumpt a1 theorem 2 let n matrix sampl row distribut satisfi assumpt 1 let v vector space span probabl least 910 exist orthonorm set vector 1 2 k v drankdk f cs f 1 use note k restrict linear transform subspac span j name x subspac x x orthogon subspac elementari linear algebra matrix k row span vector 1 k therefor rank k describ 1 right singular vector precis eigenvector alan friez et al approxim suce give vector 1 k algorithm vector comput multipli submatrix set vector r p thu matrix recov set k pdimension vector set p number indic submatrix span correspond row also follow first k singular valu comput within cumul addit error f section 3 give proof exist theorem theorem directli give omnkpolyk algorithm suggest algorithm whose run time linear small polynomi k 1 algorithm develop follow paper drinea et al 2004a subsequ develop discuss section 6 throughout paper denot ith row matrix row vector j denot jth column column vector ij entri ith row jth column also posit integ r r denot set 1 2 r 11 sampl assumpt describ sampl assumpt detail assumpt 1 sampl row row chosen probabl f constant c 1 independ mn denot euclidean length known us dont need know p assumpt 2 row sampl entri j probabl q ji satisfi f q ji known us need know valu matrix known sparsiti structur might abl set sampl littl preprocess particular matrix dens ie j f constant c take gener matrix make one pass entir matrix set data structur let us sampl entri fast onward time per sampl satisfi assumpt 1 2 pass sever thing suppos j fast lowrank approxim 5 creat olog bin pass put lth bin entri j 2 l1 also keep track number entri bin treat entri bin valu sampl pick bin probabl proport total sum squar bin pick entri uniformli set entri bin pass also set similar data structur row 12 applic section discuss algorithm context applic reli lowrank approxim show sever situat satisfi sampl assumpt algorithm thu obtain svd approxim ecient applic discuss includ face recognit pictur compress 121 latent semant index gener techniqu process collect document give cursori descript broad area discuss relat main problem see berri et al 1995 deerwest et al 1990 dumai et al 1988 dumai 1991 detail empir result suppos document n term occur document term may word occur document key word occur model hypothes small number k unknown topic document topic model probabl distribut n term ie nvector nonneg real sum 1 model hand shown addit assumpt subspac span k best topic close span top k singular vector socal documentterm matrix papadimitri et al 2000 latter n matrix ij frequenc jth term ith document altern one defin ij 0 1 depend upon whether jth term occur ith document argu practic assumpt algorithm satisfi use place full svd algorithm easi see allow one pass document set data structur sampl ideal creator document could suppli vector squar term frequenc otherwis frequenc larg unreason sinc word occur often socal buzz word remov analysi need precomput length l document typic avail say file pick document probabl proport length easili seen satisfi assumpt 1 without squar ie sampl ith entri probabl l assumpt squar satisfi frequenc small assumpt 2 similarli implement given document pick word uniformli random ie q 122 web search model kleinberg kleinberg 1999 propos algorithm problem find import document set document return web search work analyz matrix entri ij equal 1 0 depend upon whether ith alan friez et al document point jth algorithm set find two unitlength mvector x x ay maxim cours problem find singular vector keyword multipl mean top singular vector larg singular valu interest interest find largest k singular vector small k worthwhil consid assumpt case assumpt 1 sucient sampl document roughli accord number hypertext link assumpt 2 sucient abl follow random link document 123 lowrank approxim regular lemma fundament regular lemma szemeredi graph theori szemeredi 1978 give partit vertex set graph pair part nearli regular give detail lemma host applic see komlo simonovit 1996 graph theori lemma nonconstruct assert exist partit give algorithm find alon duke lefmann rodl yuster final abl give algorithm find partit polynomi time alon et al 1994 friez kannan 1996 friez kannan 1999a lowrank approxim adjac matrix graph relat regular partit szemeredi lemma algorithm construct partit deriv connect directli relev result point one case lowrank approxim use direct applic eigenvector comput szemeredi partit given friez kannan 1999b 2 singular valu decomposit matrix express r u form orthonorm set column vector v also u av call singular valu decomposit r rank theorem eckart young golub van loan 1989 matrix k minim df among matric rank k less given impli f k 2 f r use notat throughout paper fast lowrank approxim 7 3 small sampl induc good approxim goal section prove theorem 2 name subspac span sampl row chosen accord assumpt 1 contain approxim nearli best possibl chanc v 1 v k belong subspac would done sinc k would provid requir approxim show vector w defin shortli subspac approxim scale version respect v let random sampl row chosen distribut satisfi assumpt 1 defin vectorvalu random variabl note gener multiset ie row might pick multipl time vector w clearli subspac gener first comput expect w view averag iid random variabl follow distribut probabl p take expect 2 ew sinc p c f sinc u ew f 2 w exactli equal v instead expect would sucient prove theorem wish carri approxim end defin 2 2 expect varianc vector valu random variabl taken separ compon alan friez et al let 1 2 n orthonorm basi r n l dimens v 1 let l ay matrix f candid approxim span bound error use f note k j l thu f ay fy f 3 also f w take expect use 2 get ea f f 4 f rank k k best rank k approxim f thu f nonneg random variabl 4 impli 3 follow f next observ good lowrank approxim respect frobeniu norm impli good lowrank approxim respect 2norm fast lowrank approxim 9 approxim sinc obtain 2norm see section 6 theorem 3 f f proof let suppos b unit eigenvector x eigenvalu f see f f 5 rank matrix k bxx k 1 f f sinc 2 f contradict 5 4 sampl algorithm section present main constanttim algorithm produc approxim theorem 1 first pick set p row distribut satisfi assumpt 1 form matrix row scale pick p column probabl distribut satisfi assumpt 2 scale column get p p matrix w find singular vector matrix show get good lowrank approxim reader might want consult discuss statement theorem 1 2 introduct intuit idea algorithm work descript paramet c one assumpt alan friez et al algorithm input matrix integ k 0 error paramet 0 set 1 sampl row independ choos row accord distribut assumpt 1 ie f let p n matrix row 1 scale amount normal row length 2 sampl column independ choos column accord distribut p f show use assumpt 2 let w p p matrix column j 3 comput svd comput top k singular vector u 1 u k column space w 8k output v low rank approxim tt next discuss implement algorithm particular carri step 2 first pick row row probabl 1p suppos chosen row ith row pick j 1 2 n probabl q ji assumpt 2 defin probabl p row f f f f fast lowrank approxim 11 last step impli next lemma lemma 1 w chosen algorithm probabl least f 1 f proof routin calcul f f next observ row f cp random variabl 2 f sum p independ random variabl therefor f f f first part lemma follow use chebychev inequ proof second part similar 5 analysi next lemma assert sampl n row matrix provid good approxim sens n n close key tool analysi lemma 2 let b matrix let probabl distribut 1 2 f 0 1 let sequenc p independ sampl chosen accord distribut q let n p b matrix 0 f alan friez et al proof f en en f f thu em f en f f f result follow markov inequ introduc notat rest analysi matrix vector x defin x x f x orthogon unit vector repres norm project onto subspac span x case fast lowrank approxim 13 thu x k top k singular vector lemma 3 let matric number column f 1 pair unit vector z z row space f set unit vector z 1 z 2 z k row space f proof first part lemma easi second use fact f matrix n see ax equal traz z z az z az z az z az z az exactli similar reason z z use first part lemma second part follow readi prove main theorem proof theorem 1 prove conclus theorem hold probabl least 34 appli lemma 2 twice row sampl induc column sampl follow lemma 2 probabl least 910 follow event hold f ss f cp 500k c 32 assum event occur throughout proof approxim constant aris somewhat crude conveni ration follow theorem 2 probabl least 910 unit vector x k row space alan friez et al appli second part lemma 3 vector x see f f use 7 singular valu exist unit vector k column space f appli theorem 2 w see probabl least 910 unit vector z k column space w f appli second part lemma 3 w vector z see f therefor vector u k comput algorithm satisfi f note highest possibl valu ax k k 2 f remain show fact w larg impli larg construct suitabl set vector algorithm sinc u k orthonorm singular vector f appli lemma 3 time w vector u follow f next crucial step switch u column space v row space achiev follow claim whose proof defer section 51 f 2 v follow lemma 3 f assum 16 thu f rearrang term get conclus theorem fast lowrank approxim 15 51 proof claim 1 2 observ first f f f consid v furthermor 2 f 10 similarli use 8 2 use bound 10 11 9 f f f f f use bound lemma 1 next vector u matrix ss u u 4 observ first part lemma 3 impli f 12 immedi ss u alan friez et al f complet proof claim 1 sinc 9k 2 2 2 16 valu p chosen satisfi 12 6 recent work sever develop problem lowrank approxim sinc preliminari version paper friez et al 1998 appear drinea et al drinea et al 2004a give algorithm whose run time omr although theoret much slower due depend practic better depend k 1 might make practic altern samplingbas algorithm given achliopta mcsherri 2001 compar bound frobeniu norm significantli better bound 2norm main idea sparsifi matrix randomli sampl entri one one comput svd spars matrix faster baryossef 2003 lower bound lowrank approxim given essenti match bound drinea et al 2004a also shown algorithm complex possibl use uniform sampl drinea et al 2004a current paper get implicitli defin lowrank approxim explicit approxim given drinea kannan 2003 show c matrix column pick sampl r n matrix row pick random cur u matrix comput c thu explicit approxim preserv sparsiti structur paper drinea kannan 2001 appli sampl idea basic problem multipli two matric b show sampl column accord probabl distribut similar paper take correspond row b product approxim whole product ab final improv analysi term number row need sampl obtain drinea et al 2004b r fast comput low rank approxim algorithm aspect regular lemma sampl lower bound via inform theori use linear algebra intellig inform retriev index latent semant analysi fast montecarlo algorithm approxim matrix multiplica tion pass ecient algorithm approxim larg matric cluster larg graph via singular valu decomposit fast mont carlo algorithm matric ii comput lowrank approxim matrix use latent semant analysi improv inform retriev improv retriev inform extern sourc regular lemma approxim scheme dens prob lem quick approxim matric applic simpl algorithm construct szemeredi regular parti tion fast montecarlo algorithm find lowrank ap proxim matrix comput authorit sourc hyperlink environ szemeredi regular lemma applic graph ori latent semant index probabilist analysi regular partit graph tr ctr petro drinea michael w mahoney muthukrishnan sampl algorithm l2 regress applic proceed seventeenth annual acmsiam symposium discret algorithm p11271136 januari 2226 2006 miami florida sariel harpel get close median shape comput geometri theori applic v36 n1 p3951 januari 2007 sariel harpel get close median shape proceed twentysecond annual symposium comput geometri june 0507 2006 sedona arizona usa dimitri achliopta frank mcsherri fast comput lowrank matrix approxim journal acm jacm v54 n2 p9e april 2007 w fernandez de la vega marek karpinski ravi kannan santosh vempala tensor decomposit approxim scheme constraint satisfact problem proceed thirtyseventh annual acm symposium theori comput may 2224 2005 baltimor md usa amit deshpand lui rademach santosh vempala grant wang matrix approxim project cluster via volum sampl proceed seventeenth annual acmsiam symposium discret algorithm p11171126 januari 2226 2006 miami florida