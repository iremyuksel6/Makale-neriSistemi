random hard studi set incompress string variou resourc bound version kolmogorov complex resourc bound version kolmogorov complex studi polynomi time cd complex defin sipser nondeterminist variant cnd due buhrman fortnow polynomi space bound kolmogorov complex cs introduc hartmani measur defin set random string mathrmrmathitcdt mathrmrmathitcndt mathrmrmathitcst set string x mathitcdtx mathitcndtx mathitcssx greater equal length x polynomi show follow mathrmma subseteq mathrmnpmathrmrmathitcdt mathrmma class merlinarthur game defin babai mathrmam subseteq mathrmnpmathrmrmathitcndt mathrmam class arthurmerlin game mathrmpspac subseteq mathrmnpmathrmcrmathitcss last item mathrmcrmathitcss set pair langl xy rangl x random given result show set random string variou resourc bound hard complex class nondeterminist reductionsthi paper contrast earlier work buhrman mayordomo show polynomi time determinist reduct set exponenti time kolmogorov random string complet exp b introduct holi grail complex theori separ complex class like p np pspace well known class possess complet set thu sucient separ show complet set one class contain therefor lot eort put studi complet set see bt98 kolmogorov lev94 howev suggest focu attent set complet intuit complet set possess lot structur hinder possibl lower bound proof suggest look set time bound kolmogorov random string paper continu line research studi variant set kolmogorov complex measur amount regular string inform kolmogorov complex string x denot cx size smallest program print x stop string x cx less equal length x addit constant string hold cx greater equal length x call incompress random simpl count argument show random string exist sixti theori kolmogorov complex develop martin mar66 show core set kolmogorov random string complet respect resourc unbound ture reduct kummer kum96 shown strengthen show set also truthtabl complet resourc bound version random string rst studi ko ko91 polynomi time bound kolmogorov complex c p x p polynomi smallest program print x pjxj step har83 ko show exist oracl set random string respect time bound kolmogorov complex complet conp strong nondeterminist polynomi time reduc tion also construct oracl set complet conp determinist polynomi time ture reduct buhrman mayordomo bm95 consid exponenti time kolmogorov random string exponenti time kolmogorov complex smallest program print x tjxj step function show set tn random string determinist polynomi time ture hard exp show class set reduc set p measur 0 henc set even weakli hard exp result paper contrast buhrman mayordomo show set random string hard variou complex class nondeterminist polynomi time reduct consid three well studi measur kolmogorov complex lie c p x c x p polynomi consid distinguish complex introduc sipser sip83 distinguish complex cd x size smallest program run time tn accept x noth els show set random string r cd xed polynomi hard nondeterminist reduct class merlin arthur game introduc babai bab85 immedi consequ obtain bpp np bpp np r cd next shift attent nondeterminist distinguish complex dene size smallest nondeterminist algorithm run time tn accept x dene r cnd xed polynomi show np r cnd class arthurmerlin game bab85 follow complement graph isomorph problem gi np r cnd polynomi r cnd sn space bound kolmogorov complex cs xji dene size smallest program print x given use sjxj tape cell har83 likewis dene cr cs sn polynomi show pspace np cr cs rst two result use oblivi sampler construct zuckerman zuc96 lemma bf97 measur size set term cd complex prove lemma show rst bit random string sens random whole string last result make use interact protocol lfkn92 sha92 qbf show optim result relativ techniqu construct oracl world rst result improv determinist reduct show oracl bpp 6 p r cd polynomi construct oracl extens techniqu develop beigel buhrman fortnow bbf98 denit notat assum reader familiar standard notion complex theori found eg bdg88 string element string integ n jsj use notat snm string consist nth mth bit use empti string also need notion oblivi sampler zuc96 denit 21 univers r oblivi sampler determinist algorithm input uniformli random rbit string output sequenc point z collect function case pr applic denit alway use singl function f fix univers ture machin u nondeterminist univers machin u n result independ particular choic univers machin denit kolmogorov complex need fact univers machin input p halt output string x denit distinguish complex need fact univers machin input p x either accept reject also need resourc bound version properti dene kolmogorov complex function cxji see lv97 xg dene uncondit kolmogorov complex hartmani dene time bound version kolmogorov complex har83 resourc bound version kolmogorov complex date back far bar68 see also lv97 sipser sip83 dene distinguish complex cd need follow version resourc bound kolmogorov complex distinguish complex use see har83 1 x accept reject run see sip83 1 u n p x accept reject run see bf97 0 1 dene follow set string maxim cd p cnd p complex note set set mention introduct case omit use r cd r cnd also dene set string maxim space bound complex cr cs c notat emphas random condit also cr cs technic set pair rather set string uncondit space bound random string would r cs g theorem concern set ccomplex string alway upperbound length plu constant depend choic univers machin cd cndcomplex string alway upperbound c complex string plu constant depend particular choic univers machin quantier use paper polynomi bound often particular polynomi import sequel clear context omit sometim need explicit bound particular bound given superscript quantier eg use 9 denot exist jyj 8 n x denot x length n class dene follow denit 22 l 2 exist jxj c time bound machin 1 x 2 l 9yprmx 2 r chosen uniformli random f0 1g jxj c exist jxj c time bound machin 1 x 2 l pr9ymx 2 r chosen uniformli random f0 1g jxj c known np bpp pspace bab85 let mx repres number accept comput nondeterminist ture machin input x languag l p exist polynomi time bound nondeterminist ture machin x let g function say advic function f gbound n hold jfnj gn paper interest function g polynomi notat sn use strong nondeterminist ture reduct dene sn distinguish complex derandom section prove hard r cd r cnd arthurmerlin merlinarthur game respect npreduct theorem 31 tn 2 n log n np r cd theorem 32 tn 2 n np r cnd proof theorem roughli follow first guess string high cd poli complex respect cnd poli complex next use nondeterminist reduct play role merlin use random string derandom arthur note straightforward might look random use arthur interact protocol use hide gener substitut comput random idea use string high cdcomplex zuckerman sampler derandom stem bf00 section 8 full version bf97 though explicitli dene set r cd use approach derandom bpp comput proof need string high cd p respect cnd p complex polynomi rst show nondeterminist extract string longer string high cd complex respect cnd complex xed tn 2 n log n lemma 33 let f fn n let 0 sucient larg cd hold cd 0 proof suppos contradict constant 0 innit mani cd hold cd 0 log jfjsjj 0 exist program p run recogn s1fjsj jp j fjsj 2 log jfjsjj 0 follow program recogn string input check rst fjsj bit equal use p assum jfjsjj store program cost log jfjsjj bit check last jsj fjsj bit equal bit also store program program run time therefor take tjsj step u sucient larg hs66 lose log n factor algorithm must run xed machin simul determinist program length jp log jfjsjj less jsj almost henc cd jsj contradict assumpt 2 corollari 34 everi polynomi n c 2 n log n sucient larg string cd c proof take 0 c appli lemma 33 2 lemma 33 corollari 34 follow nondeterminist analogon lemma 35 everi polynomi n c 2 n sucient larg string cnd c proof proof appli lemma similar lemma 33 ever nondeterminist case simul cost linear time bgw70befor proceed proof theorem also need earlier result rst need follow theorem zuckerman theorem 36 zuc96 constant c exist univers r oblivi sampler run polynomi time use bit output also need follow lemma buhrman fortnow lemma 37 bf97 let set p string x 2 n hold cd p x 2 logjja n jj olog n polynomi p note bf97 analog lemma hold cnd p np lemma 38 bf97 let set np string x 2 n hold cnd p x 2 logjja n jj olog n polynomi p result prove theorem theorem 31 want prove np machin oracl oracl r cd recogn set posit side proof easi x exist machin string 23 fraction string r length jxj c make mx accept np machin certainli guess one pair x proof x 2 neg side harder show 2 substitut r string high enough cd complex cnd complex theorem 32 make mx accept grasp intuit behind proof let us look much simpli exampl bpp machin 13 error probabl input x string r maxim unbound kolmogorov complex 2 jxj k possibl comput input x jxj k runtim suppos must accept x 13 fraction ie 2 jxj c comput reject x reject comput consist determinist part describ x set jxj c coin ip set coin ip binari string reject comput uniqu identi string length jxj c call set b would like show contradict random string member set henc random string use sequenc coin ip lead correct result string b describ x index b length log jjbjj jxj c log 3 far ground contradict sinc descript consist element length greater jxj c howev amplifi comput input x repetit take major repeat comput x time blow number incorrect comput use x c1 random bit howev larg enough x descript jxj plu minu addit constant depend denit kolmogorov complex use smaller jxj c1 thu lead contradict unfortun case situat bit complic factor 2 lemma 37 render standard amplifact random comput useless fortun theorem 36 allow dierent type amplic use much less random bit type argument use proceed show amplic given theorem 36 situat lemma 39 1 let l languag constant k constant 0 1there exist determinist polynomi time bound machin r chosen uniformli random string f0 1g 11km 2 let l languag constant k constant 0 exist determinist polynomi time bound machin x 2 l pr9ymx r chosen uniformli random string f0 1g 11km proof 1 furer et al show fraction 23 see denit 22 replac 1 fgm 89 let ml determinist polynomi time machin correspond l denit 22 adapt accept probabl 1 x 2 l assum ml run mean ml 9y 8y denit assum 9 n c 8 n c respect also random string may assum drawn uniformli random f0 1g n c obtain valu 2 km second item use theorem 36 16 given x let f xy fp function input z comput ml x use oblivi sampler get good estim ef xy feed random string length 11km oblivi sampler return sampl point z comput 1 machin comput sum input x r accept valu greater 12 x 2 l prml x matter sampl point return oblivi sampler probabl 1 sampl point return oblivi sampler 1 probabl 2 km 2 2 proof analog proof part 1 explain dierenc 1 rst item claim refer fgm 89 theorem 2ii paper part ml determinist polynomi time machin correspond amlanguag l dene function f x f0 1g 7 0 1 function input z comput 9 n c fp np comput function sampl point z z return case follow properti x 2 l matter string return z everi possibl sampl point z ml x set sampl point z sampler may return exist ml x half sampl point probabl 1 pr less 2 km let mx r determinist polynomi time machin use r gener sampl point interpret count number accept ml x accept number greater 1d get exactli desir result 2 next lemma show string high enough cd poli cnd poli use derandom protocol lemma 310 1 let l languag 0 1 exist determinist polynomi time bound machin polynomi q 0 integ k c almost n everi r 2 let l languag 0 1 exist determinist polynomi time bound machin polynomi q 0 integ k c almost n everi r proof 1 choos k 6 let determinist polynomi time bound machin correspond l k lemma 39 item 1 polynomi n c time bound machin wit l 2 lemma determin q later assum r string length 1 cd q r jrj eas notat set suppos x 2 l follow exist length 1 1 particular hold mx suppos x 62 l show case suppos true let 0 xy 0 follow xy0 2 p essenti program simul x 0 hardwir although xy0 nite therefor trivial p crucial size polynomi program roughli amplic protocol sinc r 2 xy0 follow lemma 37 polynomi p hand chose r cd q r jrj give contradict q p 2 choos k 5 let determinist polynomi time bound machin correspond l k lemma 39 item 2 n c time bound machin wit determin later assum r string length 1 c cnd q r jrj suppos x 2 l follow exist 1 particular r mx r suppos l show 8ymx true dene 1g x 2 np program x hardwir guess simul amplic protocol jja x jj 2 11km km sinc r 2 x follow lemma 38 exist polynomi p hand chose r cnd q r jrj give contradict whenev q pthe follow corollari show string high enough cd poli complex use derandom bpp machin see also theorem 82 bf00 corollari 311 let set bpp 0 exist polynomi time ture machin polynomi q cd q r jrj x length n hold x 2 proof theorem 31 let languag let q lemma 310 item 1 nondeterminist reduct behav follow input x length n first guess size check 2 r cd set accept exist mx 1 corollari 34 follow cd q r jrj2 correct reduct follow directli lemma 310 item 1 proof theorem 32 follow directli lemma 310 item 2 npalgorithm analog one corollari 312 2 n log n 1 bpp np bpp includ np r cd 2 gi 2 np r cnd follow r cnd graph isomorph problem gi np conp limit previou section show set r cd hard reduct one might wonder whether r cd also hard stronger reduct like determinist polynomi time ture reduct section show true need nonrelativ proof deriv follow theorem theorem 41 relativ world everi polynomi proof theorem given lemma 42 say statement theorem 41 true world p np poli theorem 43 precis show exist world lemma 42 oracl 0 1 hold exp np np poli p proof suppos contradict lemma true exp np nppoli exp nppoli exp ph yap83 furthermor exp np nppoli certainli exp np exppoli follow bh92 exp see bft97 denit p vv86 np bpp impli ph bpp zac88 final fact uniquesat p equival x c poli xji cd poli xji o1 shown fk96 use proof fk96 show uniquesat p also impli r cd particular univers machin note need contradict assumpt one particular type univers machin turn impli assumpt bpp henc exp np p np howev contradict hierarchi theorem relativ ture machin hs65 part proof relativ get result oracl there one caveat though r cd clearli meaning terpret talk p r cd one must cours allow p access oracl clear p ask question machin ask question random string therefor one might argu p r cd aa actual statement lemma aect proof univers machin say u follow input p x u use cooklevin reduct produc formula f jxj variabl properti x satis f p accept x u use selfreduc f assum polynomi time algorithm uniquesat make accept x uniqu rst number variabl equal jyj reject use wellknown substitut reduc algorithm sat veri assign success obtain algorithm algorithm precis accept reject algorithm accept use univers machin everi program accept one string therefor r cd via obviou predic argu give us contradict 2 proceed construct oracl theorem 43 exist oracl exp np proof proof parallel construct beigel buhrman fortnow bbf98 construct oracl p np use similar setup let nondeterminist linear time ture machin languag l dene p complet everi everi oracl let k linear time comput complet set np let n k determinist machin run time 2 n everi accept languag h complet exp np construct exist n 2 bound advic function f w condit condit 1 condit 0 guarante exp np nppoli use term 0string string form 0 w 1 jwj 2 1string string form 1 z w v string immedi put first give intuit proof linear time ture machin therefor set 1string forc set 0 string condit 0 automat fulll describ set 1string forc 0string dene condit 0 fulll condit 1 requir bit care sinc n k queri exponenti long doubl exponenti mani 0 1string consid 1string 1 z w v 01 valu variabl zwv whose valu determin whether 1 z w v construct wil forc correspond comput n k x low degre polynomi variabl valu gf 2 encod comput properli use fact function high degre assign polynomi p z gf2 0string 1string z ensur z 1 p z 2 p z first 1string z 1 z w v let p z singl variabl polynomi zwv assign polynomi 0string recurs note x queri 0string jwj jxj consid accept comput path mx assum oracl queri guess correctli let queri path b queri answer b queri guess b note let p set accept comput path mx dene polynomi p z follow p rememb work gf2 addit pariti set variabl zwv thu 1string forc valu z 0string set thing properli follow lemma straightforward lemma 44 0string 2 condit 0 satis polynomi p z degre proof simpl proof induct jxj 2 construct done stage stage n code string length n h set 1string automat 0string thu fulll condit 0 1 stage need know degre multivari multilinear polynomi repres function lemma 45 represent function oru um um multivari multilinear polynomi gf2 requir degre exactli proof everi function gf2 uniqu represent multivari multilinear polynomi note product use de morgan law write construct oracl treat string length n lexicograph order first forc phase oracl set comput n k remain xed futur extens oracl next code phase rst advic string pick comput forc code oracl way retriev np machin advic string great care cours taken two phase dont disturb disturb earlier stage construct rst describ forc phase without loss gener assum machin n queri string form q 2 k note sinc n run time 2 n may queri exponenti long string k let x 1 rst string length n examin comput nx 1 encount rst queri q 1 k tri extend oracl 0 q 1 2 k 0 extens exist may assum q 1 never k matter extend futur must howev take care disturb previou queri forc k end build set contain previous encount queri forc k extend q 2 hold q 2 k 0 call extens sconsist extens return comput nx 1 q 1 ask whether sconsist extens q 1 2 k 0 extens exist choos sconsist extens add minim number string put q 1 next continu comput answer ye otherwis continu q 1 answer next lemma show minim extens never add 2 3n string lemma 46 let q queri k suppos stage n exist sconsist extens q 2 k 0 exist one add 2 3n string proof let mk machin accept k given oracl consid comput machin l smallest set string ad sconsist extens 0 k q accept consid leftmost accept path 0 k q let q queri 0 1queri path moreov let b 1 dene q follow polynomi p ad string l p lemma 44 degre p q 2 2n henc degre p q 2 3n consid happen take number string l 0 result 00 sinc minim extens follow 00 k q reject p comput l string sinc lemma 45 degre uniqu multivari multilinear polynomi comput l variabl gf2 l follow l 2 3n 2 dealt queri encount n k continu process string length n lexicograph order note sinc extend sconsist never disturb comput n k lexicograph smaller string follow sinc queri forc ye remain ye queri could forc sconsist extens never forc 0 consist extens 0 nish process code comput n string length n easi see jjsjj 2 2n point lemma 46 2 5n string ad stage close forc phase pick advic string proceed code phase standard count argument show string z length n 2 string form 1 z w v ad string z advic string length n show code everi string x length n correctli fulll condit 1 lexicograph order suppos code string x j j correctli want code x two case case put string 1 z x thu set variabl 0 sinc chang oracl sconsist extens properli extend sconsist ad string form 1 z x follow lemma show alway done proper extens one add one string lemma 47 let jjsjj 2 2n suppos n k exist proper sconsist extens ad string form proof suppos proper sconsist extens exist consid follow polynomi q2 p q dene lemma 46 equat 2 initi q degre q x 2 5n sinc everi extens string w consist follow q x comput variabl zx w sinc 2 n 2 mani variabl lemma 45 contradict degre q x henc exist proper sconsist extens ad string form properli code 2 stage n end code string length n complet proof theorem 43 2 theorem 43 togeth proof lemma 42 also give follow corollari corollari 48 exist relativ world exp np bpp oracl also extend oracl ko ko91 cd poli complex follow corollari 49 exist oracl r cd 2 n logn 0 complet np strong nondeterminist reduct oracl theorem 43 world conp bpp poli poli xjyo1 henc follow r cd corollari 312 relativ item 1 bpp np r cd 2 byproduct oracl show follow corollari 410 9a uniquesat 2 p p np corollari indic current proof show uniqu pcan improv yield collaps p np use relativ techniqu 5 pspace cr cs section studi connect cr cs interact proof far establish string sucient high cnd poli complex use derandom ip protocol two round way role prover verier play np oracl machin see also true ip provid random string high enough space bound kolmogorov complex class quanti boolean formula qbf dene closur set boolean variabl x negat x oper 8x 9x qbf variabl quanti call close qbf call open need follow denit theorem sha92 denit 51 sha92 qbf b call simpl given syntact represent everi occurr variabl separ point quantic one univers quantier arbitrarili mani symbol technic reason also assum simpl qbf contain negat variabl negat loss gener sinc negat push way variabl denit 52 sha92 arithmet express obtain b replac everi posit occurr x variabl z everi negat occurr x 1 z everi everi everi 8x z 2f01g everi 9x z 2f01g follow arithmet simpl qbf close form integ valu wherea arithmet open qbf equival possibl multivari function denit 53 sha92 function form simpl close qbf univari function obtain remov arithmet b either z 2f01g z 2f01g least index variabl possibl simpl qbf quantier boolean formula obtain b remov quantier denot b arithmet b 0 wellknown languag true qbf complet pspace restrict true qbf simpl qbf remain complet theorem 54 sha92 languag close simpl true qbf complet pspace polynomi time manyon reduct straightforward arithmet qbf take posit valu qbf true fact also hold rel larg prime theorem 55 sha92 simpl close quanti boolean formula b true exist prime number p size polynomi jbj valu arithmet b posit modulo p moreov b fals valu arithmet b 0 modulo prime theorem 56 sha92 function form everi simpl qbf repres univari polynomi degre 3 theorem 57 sha92 everi simpl qbf exist interact protocol prover p polynomi time bound verier v 1 b true p honest v alway accept proof 2 b fals v accept proof neglig probabl proof theorem 57 essenti use theorem 56 translat simpl qbf polynomi follow way first arithmet simpl qbf b close form integ valu v posit b true bs function form f recal arithmet qbf obtain b delet rst quantier univari polynomi p 1 degre 3 properti p 1 substitut valu r 1 p 1 give new integ valu v 1 cours valu get substitut r 1 f howev f r 1 convert low degre polynomi delet rst p q sign game repeat thu obtain sequenc polynomi rst polynomi sequenc v comput last polynomi p n properti p n r thing need first sequenc polynomi q properti q 1 q r intersect point p q second calcul done modulo prime number polynomi size theorem 55 summar follow observ actual skeleton proof theorem 57 observ 58 sha92lfkn92 let b close simpl qbf wherein quantier q read left right syntact represent let arithmet let v valu exist prime number p size polynomi jbj sequenc r number taken 1p sequenc polynomi degre 3 size polynomi jbj 1 2 3 4 sequenc univari polynomi q b q c q n r n minim p intersect point p q inequ hold modulo p hold modulo prime polynomi size b fals moreov p comput space jbj b p r reformul theorem 57 obtain sequenc univari polynomi q sequenc valu r item 2 3 observ 58 hold either q 1 true valu arithmet b polynomi q sequenc r intersect point p q p observ 58 p comput quadrat space b latter case r high space bound kolmogorov complex rel b p henc r high space bound kolmogorov complex r intersect point rst case must hold ie valu comput q 1 true valu arithmet b follow lemma make precis lemma 59 assum follow b p n 1 b simpl fals close qbf n variabl 2 p prime number 2 jbj size polynomi jbj 3 sequenc polynomi degre 3 coecient 4 r number 1p 5 7 8 proof take calcul modulo p suppos q 1 follow observ 58 exist sequenc item 1 3 lemma furthermor sinc b fals prime follow must minim p 6 q r intersect point p q howev p comput space jbj b p r p q degre 3 follow cs n r bound constant contradict 2 suce main theorem section let polynomi theorem 510 pspace np cr cs proof prove lemma proof pad extend polynomi exist np oracl machin accept languag simpl close true quanti boolean formula follow input b rst check b simpl guess prime number p size polynomi b sequenc polynomi degre 3 coecient 1p final guess sequenc number size jp j check 1 2 3 4 nalli least jp j n b true lemma 58 guarante item guess test pass b fals test fail lemma 59 guarante p 1 rst check must fail 2 fact pspace close complement fact cr cs also pspace theorem 510 give cr cs complet pspace strong nondeterminist reduct lon82 corollari 511 cr cs complet pspace strong nondeterminist reduct buhrman mayordomo bm95 show set r c jxjg hard exp determinist ture reduct theorem 510 made use relativ kolmogorov complex ie cs xji use exactli proof bm95 one prove set cr c jxjg hard exp ture reduct hand proof theorem 510 also work set pspace np cr c suspect possibl extend show exp np cr c far unabl prove acknowledg thank paul vitanyi interest discuss provid titl paper also thank two anonym refere help number technic issu clear much proof point us correct refer one refere also point corollari 48 r trade group theori random complex program determin whether natur number greater n belong recurs enumer set np might easi detect uniqu solut resourc bound kolmogorov complex revisit resourc bound kolmogorov complex revisit six hypothes search theorem superpolynomi circuit excurs kolmogorov random string complet set structur subrecurs class complet sound interact proof system gener kolmogorov complex structur feasibl comput comput complex algorithm two tape simul multitap ture machin complex learn minimum timebound ture machin complex random string extend abstract person commun strong nondeterminist polynomialtim reduc complet recurs theorem e complex theoret approach random np easi detect uniqu solut consequ nonuniform condit uniform class probabilist quanti tr