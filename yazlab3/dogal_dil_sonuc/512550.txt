compil approach fast hardwar design space explor fpgabas system current practic map comput custom hardwar implement requir programm assum role hardwar design tune perform hardwar implement design manual appli loop transform loop unrol design manual appli loop transform exampl loop unrol use expos instructionlevel parallel expens hardwar resourc concurr oper evalu unrol also increas amount data comput requir much unrol lead memori bound implement resourc idl negoti inher hardwar spacetim tradeoff design must engag iter refin cycl step manual appli transform evalu impact process errorpron tediou also prohibit expens given larg search space long synthesi time paper describ autom approach hardwar design space explor collabor parallel compil technolog highlevel synthesi tool present compil algorithm automat explor larg design space result applic sever program transform commonli use applicationspecif hardwar design approach use synthesi estim techniqu quantit evalu altern design loop nest comput implement design space explor algorithm context compil synthesi system call defacto present result implement five multimedia kernel algorithm deriv implement close match perform fastest design design space among implement compar perform select smallest design search averag 03 design space technolog thu significantli rais level abstract hardwar design explor design space much larger feasibl human design b introduct extrem flexibl field programm gate array made medium choic fast hardwar prototyp popular vehicl realiz custom comput machin fpga compos thousand small programm logic cell dynam interconnect allow implement logic function tremend growth devic capac made possibl implement complex function fp ga exampl fpga implement sometim yield even faster solut convent hardwar 2 order magnitud encrypt 18 addit fpga oer much faster time market timecrit applic allow postsilicon infield modif prototyp lowvolum design applic specif integr circuit asic justifi despit grow import applicationspecif fpga design devic still dicult program make inaccess averag develop standard practic requir develop express applic hardwareori languag verilog vhdl synthes design hardwar use wide varieti synthesi tool optim perform synthesi tool limit develop must perform highlevel global optim hand exampl commerciallyavail highlevel synthesi tool handl multidimension array variabl 1 automat select loop unrol factor complex synthesi dicult predict priori perform space characterist result design reason develop engag iter refin cycl step manual appli transform synthes design examin result modifi design trade perform space throughout process call design space explor develop carri respons correct applic map believ way make program fpgabas system access oer highlevel imper program paradigm c coupl compil technolog orient toward fpga design way develop retain advantag simpl program sever claim support featur simul purpos actual hardwar synthesi model via highlevel languag reli power compil analys transform optim design well autom tediou errorpron map task make observ class fpga applic character highli parallel arraybas comput eg multimedia code mani hand optim perform develop similar transform use parallel compil exampl develop parallel comput optim extern memori access explicitli manag storag perform loop transform reason argu parallel compil technolog use optim fpga design paper describ autom approach design space explor base collabor parallel compil highlevel synthesi tool complet synthes design prohibit slow hour day compil must tri sever design arriv good solut reason exploit estim behavior synthesi determin specif hardwar paramet eg size speed compil quantit evalu applic transform deriv optim feasibl implement loop nest comput sinc hardwar implement bound term capac compil transform must also consid space constraint compil algorithm eectiv enabl develop explor potenti larg design space without autom would feasibl previou work present overview defacto system upon work base combin parallel compil technolog stanford suif compil hardwar synthesi tool 9 paper present detail algorithm design space explor result demonstr eectiv system automat synthes hardwar design c specif 24 knowledg system automat explor design space collabor behavior synthesi estim featur current infrastructur larg support direct map comput multipl fpga 26 howev work paper describ implement experiment result design map singl fpga multipl memori thu focu algorithm aspect design space explor simpler data comput partit strategi paper make follow specif contribut describ integr behavior synthesi tool parallel compil technolog map comput fpgabas architectur present compil algorithm design space explor reli behavior synthesi estim algorithm appli loop transform explor spacetim tradeo realiz hardwar design defin balanc metric guid design space explo ration suggest profit devot resourc storag comput design space explor algorithm exploit monoton properti balanc metric eectiv prune larg region search space therebi allow compil consid wider rang transform otherwis would feasibl present experiment result five multimedia ker nel algorithm deriv implement close match perform fastest design design space among implement compar perform select smallest design search averag 03 design space technolog advanc increas densiti fpga devic track moor law convent logic doubl everi month devic abl support sophist function futur trend toward onchip integr intern memori fpga specialpurpos function unit becom attract replac asic custom embed comput architec ture forese grow need combin strength highlevel program analysi techniqu complement capabl current futur synthesi tool devic consequ design becom complex demand ecient solut explor even larger design space remaind paper organ follow next section present background fpga behavior synthesi section 3 describ optim goal design space explor algorithm map loop nest comput hardwar section 4 discuss analys transform algorithm use section 5 present design space explor algorithm section 6 present experiment result applic algorithm 5 imag process comput survey relat work section 7 conclud section 8 2 background describ fpga synthesi compar optim perform parallel compil also discuss featur target applic domain 21 fieldprogrammablegatearray fpga popular vehicl rapid prototyp way implement simpl logic interfac fpga implement reprogramm seasofg distinct intern architectur exampl xilinx virtex famili devic consist 12 288 devic slice slice turn compos 2 lookup tabl lut implement arbitrari logic function 11 boolean input 6 output 15 two slice form configur logic block clb block interconnect 2 dimension mesh via programm static rout switch configur fpga design download bitstream file configur slice fpga well rout programm devic exampl apex ii devic altera hierarch rout approach connect clb fpga overal function similar 6 tradit architectur bandwidth extern memori key perform bottleneck fpga sinc possibl comput order magnitud data cycl fetch store memori howev unlik tradit architectur fpga flexibl devot intern configur resourc either storag comput 22 fpga synthesi flow synthesi flow fpga term given process translat function logic specif bitstream descript configur devic function specif done multipl level use hardwar descript languag vhdl verilog design specifi function datapath circuit eg adder multipli etc diagram design block structur specif defin inputoutput interfac block allow design describ finit state machin fsm control tempor behavior block use approach design control everi singl aspect oper datapath prefer approach maximum perform sought requir extrem high design time process take structur specif target particular architectur programm unit lut case xilinx devic call rtllevel synthesi rtllevel synthesi gener netlist represent intend design use input lowlevel synthesi step map placeandrout pr ultim gener devic bitstream configur file 23 behavior synthesi vs compil behavior specif vhdl verilog oppos lower level structur specif express comput without commit particular hardwar implement structur process take behavior specif gener hardwar implement call behavior synthesi behavior synthesi perform three core function bind oper regist specif hardwar implement eg select ripplecarri adder implement addit resourc alloc eg decid mani ripplecarri adder need schedul oper particular clock cycl gener particular implement behavior synthesi requir programm specifi target design requir term area clock rate number clock cycl number oper combin ex ampl design might request design use two multipli take 10 clock cycl behavior synthesi tool use inform gener particular implement satisfi constraint addit behavior synthesi support optimiza tion reli heavili develop direct map step exampl current behavior synthesi tool allow specif loop unrol loop unrol tool perform extens optim result inner loop bodi parallel pipelin oper minim regist oper save space howev decid unrol factor left programm behavior synthesi parallel compil optim scalar variabl optim scalar array optim insid loop bodi optim insid loop bodi across loop iter support usercontrol analys guid automat loop unrol loop transform manag regist optim memori access interoper commun evalu tradeoff differ storag offchip consid singl fpga systemlevel view multipl fpga multipl memori perform alloc bind knowledg hardwar schedul hardwar resourc implement comput tabl 1 comparison behavior synthesi parallel compil technolog similar optim perform synthesi tool parallel com piler mani way oer complementari capabl shown tabl 1 key advantag parallel compil technolog behavior synthesi abil perform data depend analysi array variabl use basi parallel loop transform optim memori access technolog permit optim design array variabl data resid ochip memori enabl reason benefit code transform loop unrol without explicitli appli addit parallel compil capabl perform global program analysi permit optim across entir system 24 target applic domain customiz fpga commonli use applic signific amount finegrain parallel possibl benefit nonstandard numer format eg reduc data width specif multimedia applic includ imag signal process 8bit 16bit data respect oer wide varieti popular applic map well fpga exampl typic imag process algorithm scan multidimension imag oper given pixel valu neighbor imag often repres multidimension array variabl comput express loop nest applic exhibit abund concurr well tempor reus data exampl comput fall categori includ imag correl laplacian imag oper erosiondil oper edg detect fortun applic good match capabl current parallel compil analys eectiv ane domain array subscript express linear function loop index variabl constant 25 paper restrict input program loop nest comput array scalar variabl pointer subscript express ane fix stride loop bound must constant 2 support loop control flow simplifi control schedul gener code alway perform condit memori access 3 optim goal balanc simpli state optim criteria map singl loop nest fpgabas system follow 1 design must exceed capac constraint sy tem 2 execut time minim 3 given level perform fpga space usag minim motiv first two criteria obviou third criterion also need sever reason first two design equival perfor manc smaller design desir free space use fpga logic map loop nest addit smaller design usual less rout complex result may achiev faster nonconst bound could potenti support algorithm gener code result fpga design would much complex exampl behavior synthesi would transform loop nonconst bound loop hardwar implement target clock rate moreov third criterion suggest strategi select among set candid design meet first two criteria respect particular set transform describ next section algorithm attempt select best design meet criteria algorithm use two metric guid select design first result estim provid space usag design relat criterion 1 anoth import metric use guid select design relat criteria 2 3 balanc defin equat f refer data fetch rate total data bit memori provid per cycl c refer data consumpt rate total data bit comput consum comput delay balanc close one memori fpga busi balanc less one design memori bound greater one comput bound design balanc metric suggest whether resourc devot improv comput time memori time borrow notion balanc previou work map array variabl scalar regist balanc float point oper memori access 5 flexibl fpga adjust time spent either comput memori access use data fetch rate data consumpt rate compar dierent optim assumpt 4 analys transform section describ high level code transform perform system illustr fir filter exampl figur 1 unrollandjam first code transform unrol andjam involv unrol one loop iter space fuse inner loop bodi togeth shown figur 1b unrol expos oper parallel highlevel synthesi exampl multipli perform parallel two addit subsequ perform parallel follow two addit unrollandjam also decreas depend distanc reus data access combin scalar replac discuss use expos opportun parallel memori access scalar replac scalar replac replac array refer access temporari scalar variabl highlevel synthesi exploit reus regist 5 approach scalar replac close match previou work elimin true depend reus carri innermost loop access ane domain consist depend ie constant depend distanc 5 howev two dierenc 1 also elimin unnecessari memori write output depend 2 exploit reus across loop nest innermost loop latter dier enc stem observ mani though algorithm map fpga sucient small loop bound small reus distanc number regist configur fpga sucient larg detail descript scalar replac regist reus analysi found 9 exampl figur 1c see result scalar replac illustr dierenc int s96 int c32 int d64 j0 j64 j origin code j0 j64 j2 b unrol j loop loop 1 unrol factor 2 jam copi loop togeth j0 j64 j2 initi regist i0 i32 i2 j0 initi c regist rotat registersc 0 0 c 0 15 rotat registersc 1 0 c 1 15 c scalar replac access c across j loop j0 j32 j initi regist i0 i16 j0 initi c regist rotat registersc 0 0 c 0 15 rotat registersc 1 0 c 1 15 final code gener fir includ loop normal data layout optim figur 1 optim exampl fir previou work access array c replac array written back memori end iter j loop redund write elimin loopindepend access array replac access array consist depend distanc reus array c carri outer loop exploit full reus data c involv introduc extra regist hold valu c across iter inner loop rotat oper shift regist rotat last one first posit oper perform parallel hardwar loop peel loopinvari code motion see figur 1c valu c regist load first iter j loop clariti shown code gener compil actual peel first iter j loop instead includ condit load iter j loop number memori load optim schedul highlevel synthesi ac cordingli although first glanc code size appear doubl peel highlevel synthesi usual reus oper peel origin loop bodi code growth correspond growth design memori access array invari respect loop move outsid loop use loopinvari code motion within main unrol loop bodi memori access array remain data layout array renam anoth code transform lay data fpga extern memori maxim memori parallel custom data layout separ two distinct phase first phase call array renam perform 1 map array access express virtual memori id custom access array accord access pattern array renam perform access array within loop nest uniformli gener two ane array refer b1 b1 bn c1 cn d1 dn constant loop index variabl uniformli gener array access uniformli gener map singl memori result array renam even distribut data across virtual memori second phase call memori map bind virtual memori id physic id take consider access array loop nest avoid schedul conflict shown figur 1d eect data layout even element c map memori 0 odd element map memori 1 access renam reflect layout similarli distribut memori 2 3 approach similar spirit modulo unrol use raw compil 3 howev compar modulo unrol loop transform assum fix data layout approach data tran format current implement support vari set custom data layout typic layout cyclic least one dimens array possibl custom data layout aris pack small data type stride access subscript express multipl induct variabl ie subscript form one nonzero full discuss data layout algorithm beyond scope paper discuss found 9 summari summar algorithm evalu focus set possibl unrol factor multipl loop loop nest data reus exploit within across loop nest result scalar replac compil elimin unnecessari memori access oper parallel expos highlevel synthesi unrol one loop nest independ oper perform parallel highlevel synthesi deem benefici thu defin set transform wide use convent comput permit us adjust parallel data reus fpgabas system collabor parallel compil technolog highlevel synthesi meet optim criteria set forth previou section reduc optim process tractabl problem select unrol factor loop nest lead highperform balanc ecient design next section present algorithm detail although algorithm focus fix set compil transform notion use balanc guid performancespac tradeo design space explor use optim well 5 optim algorithm discuss section defin term use describ design space explor algorithm algorithm present assum scalar replac exploit reus loop nest ane array access result design store reus data intern fpga feasibl mani applic short reus distanc may requir mani onchip regist gener case address problem limit number regist section 54 51 definit defin satur point vector unrol factor memori parallel reach bandwidth architectur follow properti hold result unrol loop bodi iread lnummemori width l jwrite lnummemori width l c1 c2 integ constant simplifi discuss let us assum access width match memori width simpli look unrol factor result multipl nummemori read write access smallest valu c1 c2 satur set sat determin function number read write access r w singl iter loop nest unrol factor loop nest consid read write separ schedul separ interest determin satur point scalar replac redund write elimin purpos discuss assum array access main loop bodi access uniformli gener thu custom data layout ob tain modif algorithm hold straightforward complic calcul satur point r defin number uniformli gener read set w number uniformli gener write set singl memori read singl write access set uniformli gener refer other remov scalar replac redund write elimin defin unrol factor vector u correspond unrol factor loop function 1in product unrol factor let satur set sat defin vector whose product psat u 1 array subscript express memori access vari respect loop satur point consid unrol loop introduc addit memori parallel sinc loop peel loopinvari code motion elimin memori access main loop bodi invari respect loop nest perspect memori parallel unrol factor vector equiv alent particular satur point sat refer unrol loop factor psat use unrol factor 1 loop 52 search space properti optim involv select unrol factor loop nest search guid follow observ impact unrol singl loop nest depend upon assumpt target applic section 24 observ 1 data fetch rate monoton nondecreas unrol factor increas multipl psat also nonincreas beyond satur point intuit data fetch rate increas memori access avail loop bodi schedul parallel observ requir data laid memori access schedul number independ memori access memori cycl monoton nondecreas unrol factor increas unrol factor must increas multipl psat time memori oper per form nummemori access main loop bodi avail schedul parallel true whenev data layout success map array multipl memori data layout success case access array uniformli gener steadi state map data memori guarante monoton even less nummemori parallel access ignor possibl subsequ discuss data layout map data specif memori control compil given properti array renam section 4 access data evenli distribut across virtual memori id map deriv solut absenc conflict access array expos fulli paralleliz access prevent conflict read write access map virtual memori id physic one must first consid access schedul compil compon system directli respons schedul schedul memori access well comput perform behavior synthesi tool monet schedul algorithm use monet call soon possibl first consid memori access occur parallel base compar subscript express physic memori id rule write whose result yet avail due depend 10 perform physic memori id map first consid read ac cess maxim number read oper occur parallel physic id map match read access order total number memori read loop evenli distribut across memori array ad benefit operand individu write fetch parallel physic map write oper also perform order evenli distribut write oper across memori properti data layout schedul satur point guarante choic unrol factor data fetch rate increas satur point beyond observ 2 consumpt rate monoton nondecreas unrol factor increas multipl psat even beyond satur point intuit unrol factor increas oper parallel enabl thu reduc comput time increas frequenc data con sume base observ 1 increas data fetch rate elimin idl cycl wait memori thu increas consumpt rate although parallel exploit result unrol loop may reach threshold perform continu improv slightli due simpler loop control observ 3 balanc monoton nondecreas satur point monoton nonincreas beyond satur point unrol factor increas multipl psat balanc nondecreas satur point reli observ 1 data fetch rate increas fast faster data consumpt rate memori access complet independ wherea oper parallel may restrict beyond satur point data fetch rate increas consumpt rate increas least slightli 53 algorithm descript algorithm present figur 2 given describ monoton search space loop nest start design satur point search larger unrol factor multipl psat look two point balanc cross comput bound memori bound vice versa fact ignor space constraint could search loop nest independ converg nearoptim design rapidli select unrol factor base data depend describ algorithm first select u init start point search sat select promis unrol factor base depend distanc vector depend distanc vector vector repres vector dierenc two access array term loop indic nest 25 sinc start design maxim memori parallel either design memori bound stop search comput bound continu comput bound consid unrol factor provid increas oper parallel addit memori parallel thu first look loop carri depend ie ddd unrol iter loop execut parallel loop found set unrol factor sat assum unrol factor sat loop exist instead select unrol factor favor loop largest depend distanc loop perform parallel comput depend detail algorithm select initi unrol factor case beyond scope paper key insight unrol loop nest larger unrol factor loop carri larger minimum nonzero depend distanc monoton properti also appli consid simultan unrol multipl loop long unrol factor loop either increas decreas initi design space constrain must reduc unrol factor design size less size constraint capac result suboptim design function findlargestfit simpli select largest unrol factor baselin design correspond unrol call u base u init regardless balanc maxim avail parallel assum initi design comput bound algorithm increas unrol factor reach design 1 memori bound 2 larger capac 3 repres full unrol loop nest ie function increaseuin return unrol factor vector uout remain unrol factor vector increas return uin either spaceconstrain memori bound design found algorithm select unrol factor vector last comput bound design fit current design approxim binari search follow function selectbetweenusmal u larg return unrol factor vector uout remain unrol factor vector selectbetween return usmal comput bound design 54 adjust number onchip regist design reus distanc larg mani regist requir may becom necessari reduc number data item store fpga use fewer onchip regist mean less reus exploit turn slow fetch rate lesser extent consumpt rate net eect search algorithm input code ndeep loop nest output u1 un vector unrol factor ok first deal spaceconstrain design estimatespac capac els els els b 1 memori bound els balanc solut earlier size els b 1 comput bound u seen comput bound far els balanc solut earlier size check point search return ucurr figur 2 algorithm design space explor first place design smaller like fit chip secondli space freed use increas oper parallel design comput bound adjust number onchip regist use loop tile tile loop nest local iter space within tile match desir number regist exploit full regist reus within tile 6 experiment result section present experiment result character eectiv previous describ design space explor algorithm set kernel applic describ applic experiment methodolog discuss result 61 applic kernel demonstr design explor algorithm five multimedia kernel name finit impuls respons fir filter integ multiplyaccumul consecut element 64 element array matrix multipli mm integ dens matrix multipl 32by16 matrix 16by4 matrix string pattern match pat charact match oper string length 16 input string length 64 metric area number clock cycl behavior vhdl transform suif applic ye balanc design balanc calcul monet behavior synthesi compil analys scalar replac data layout array renam data reus determin unrol factor tile unrol jam figur 3 compil synthesi flow jacobi iter jac 4point stencil averag comput element array sobel sobel edg detect see eg sobel 22 3by3 window laplacian oper integ imag applic written standard c program comput singl loop nest pragma annot languag extens describ hardwar implement 62 methodolog appli prototyp compil synthesi system analyz determin best unrol factor balanc hardwar implement figur 3 depict design flow use experi first code compil suif format along applic standard compil optim next design space explor algorithm iter determin loop loop nest unrol much make determin compil start given unrol factor appli sequenc transform describ section 4 5 next compil translat suif code result applic select set transform behavior vhdl use tool call suif2vhdl compil next invok mentor graphic monet tm behavior synthesi tool obtain space perform estim implement behavior specif process compil current fix clock period 40n monet tm synthesi estim yield amount area use implement number clock cycl requir execut complet comput behavior specif given data compil next comput balanc metric system fulli autom implement compil pass specif experi name data reus analysi scalar replac unrolljam loop peel ing custom data layout constitut approxim 14 500 line c sourc code algorithm execut less 5 minut applic fulli synthes design would requir addit coupl hour 63 result section present result five previous describ kernel figur 4 10 graph show larg number point design space substanti search algorithm highlight relationship unrol factor metric interest first set result figur 4 7 plot bal anc execut cycl design area target fpga function unrol factor inner outer loop fir mm although mm 3deep loop nest consid unrol factor two outermost loop sinc loopinvari code motion compil elimin memori access innermost loop graph first two column xaxi unrol factor inner loop curv repres specif unrol factor outer loop fir mm plot result pipelin nonpipelin memori access observ impact memori access cost balanc metric consequ select design plot squar box indic design select search algorithm pipelin memori access assum read write latenc 1 cycl nonpipelin memori access assum read latenc 7 cycl write latenc 3 cycl latenc annapoli wildstar tm 13 board target platform work practic memori latenc somewher two memori access fulli pipelin result assum 4 memori number extern memori connect fpga annapoli wildstar tm board plot design balanc unrol factor yaxi valu 10 data point yaxi valu 10 indic computebound design wherea point yaxi valu 10 indic memorybound de sign computebound design suggest resourc devot speed comput compon design typic unrol consum resourc comput memorybound design suggest less resourc devot comput function unit implement comput idl wait data design area graph repres space consum use log scale target xilinx virtex 1000 fpga unrol factor vertic line indic maximum devic capac design right side line therefor unrealiz pipelin memori access trend toward computebound design due low memori latenc without pipelin memori latenc becom bottleneck lead case fir design alway memori bound nonpipelin mm exhibit computebound balanc design second set result figur 8 10 show perform remain three applic jac pat sobel figur present balanc cycl area function unrol factor pipelin memori access due space limit make sever observ full result first see balanc follow monoton properti describ observ 3 increas reach sat inner loop unrol factor015025035bal outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design inner loop unrol factor200060001000014000execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design space logscaled10execut cycl logscal select design space balanc b execut time c area figur 4 balanc execut time area nonpipelin fir inner loop unrol factor12228bal outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design inner loop unrol factor200040006000 execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design space logscal execut cycl logscal select design space balanc b execut time c area figur 5 balanc execut cycl area pipelin fir inner loop unrol factor0406081 balanc outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design inner loop unrol factor200040006000execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design space logscaled10 execut cycl logscal select design space balanc b execut time c area figur balanc execut cycl area nonpipelin mm inner loop unrol factor123 balanc outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design inner loop unrol factor20004000execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design space logscaled10execut cycl logscal select design space balanc b execut time c area figur 7 balanc execut cycl area pipelin mm inner loop unrol factor1141822 balanc outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design inner loop unrol factor40080012001600 execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor select design space logscal 2execut cycl logscal select design space balanc b execut time c area figur 8 balanc execut time area pipelin jac inner loop unrol factor1525bal outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 3 outer loop unrol factor 4 outer loop unrol factor 6 outer loop unrol factor 8 outer loop unrol factor 12 outer loop unrol factor outer loop unrol factor 24 outer loop unrol factor 48 select design inner loop unrol factor10002000execut cycl outer loop unrol factor outer loop unrol factor outer loop unrol factor outer loop unrol factor outer loop unrol factor outer loop unrol factor outer loop unrol factor 12 outer loop unrol factor outer loop unrol factor 24 outer loop unrol factor 48 select design space logscaled1010execut cycl logscal select design space balanc b execut time c area figur 9 balanc execut cycl area pipelin pat inner loop unrol factor15171921 balanc outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design inner loop unrol factor2000400060008000 execut cycl outer loop unrol factor 1 outer loop unrol factor 2 outer loop unrol factor 4 outer loop unrol factor 8 outer loop unrol factor outer loop unrol factor outer loop unrol factor 64 select design space logscaled10 execut cycl logscal select design space balanc b execut time c area figur 10 balanc execut time area pipelin sobel urat point decreas execut time also monoton nonincreas relat observ 2 program algorithm select design close best term perform use rel small unrol factor among design compar perfor manc case algorithm select design consum smallest amount space result shown approach meet optim goal set forth section 3 case balanc design select algorithm less balanc design select either balanc design satur point nonpipelin fir larg fit fpga pipelin mm tabl 2 present speedup result select design kernel compar baselin pipelin nonpipelin design baselin loop nest unrol unrol factor 1 loop includ applic code transform describ section 4 although graph present larg number design point algorithm search tini fraction display instead algorithm use prun program nonpipelin pipelin fir 767 1726 mm 455 1336 jac 387 556 pat 753 3461 tabl 2 speedup singl fpga ing heurist base satur point balanc describ section 5 reveal eectiv algorithm find best design point explor small fraction 03 design space consist possibl unrol factor loop larger design space expect number point search rel size even smaller 64 accuraci estim speed design space explor approach reli estim behavior synthesi rather go lengthi process fulli synthes design anywher 10 10 000 time slower set design determin gap behavior synthesi estim fulli synthes design ran logic synthesi placeandrout deriv implement select design point design space applic synthes baselin design select design pipelin nonpipelin version addit unrol factor beyond select design case number clock cycl remain behavior synthesi implement design howev target clock rate degrad larger unrol factor due increas rout complex similarli space also increas slightli linearli unrol factor factor present output logic synthesi placeandrout neglig design select algorithm clock rate degrad less 10 almost select design compar baselin speedup term reduct clock cycl made case fir pipelin clock degrad 30 met target clock 40n speedup 17x perform improv still signific space increas sublinear compar unrol factor tend space constrain larg design suggest output behavior synthesi larg design appear highest perform accord behavior synthesi estim show much signific degrad clock increas space case perform would wors design smaller unrol factor approach suer potenti problem favor small unrol factor increas unrol factor signific reduct execut cycl due memori parallel instructionlevel parallel set applic estim discrepan cie neglig never influenc select de sign accuraci issu clearli orthogon design space algorithm describ paper believ estim tool improv abil deliv accur estim given grow pressur accuraci simul increasingli larger design 7 relat work section discuss relat work area automat synthesi hardwar circuit highlevel languag construct design space explor use highlevel loop transform 71 synthes highlevel construct gap hardwar descript languag vhdl verilog applic highlevel imper program languag prompt research develop hardwareori highlevel languag new languag would allow programm migrat configur architectur without learn radic new program paradigm retain level control hardwar map synthesi process one first eort direct handel parallel program languag handelc heavili influenc occam csplike parallel languag clike syntax map handelc hardwar composit construct loop directli map predefin templat hardwar structur 20 research develop approach map applic reconfigur architectur fpga eort eg rapid 7 reconfigur architectur piperench 12 develop explicitli parallel program languag andor develop compil synthesi flow tailor featur architectur cameron research project system compil program written singleassign subset c call sac dataflow graph synthesiz vhdl 23 sac languag includ reduct window oper twodimension array variabl combin doall construct explicitli expos parallel oper comput like approach sac compil includ looplevel transform loop unrol tile particularli window oper present loop howev applic transform control pragma automat cameron estim approach build intern dataflow represent use curv fit techniqu 17 sever research develop tool map comput express sequenti imper program languag c reconfigur custom comput architectur weinhardt 24 describ set program transform pipelin execut loop loopcarri depend onto custom machin use pipelin control unit approach similar also recogn benefit data reus present compil algorithm two project close relat nimbl compil 19 work babb et al 2 map applic c fpga perform design space explor also reli behavior synthesi fact compil replac function synthesi tool 72 design space explor discuss focu relat work attempt use loop transform explor wide design space work address gener issu find suitabl architectur either reconfigur particular set applic 1 context behavior vhdl 16 current tool monet tm 14 allow programm control applic loop unrol loop constant bound programm must first specifi applic behavior vhdl linear multidimension array select order loop must execut next programm must manual determin exact unrol factor loop determin unrol go aect requir bandwidth comput given eort interact transform data layout option avail approach design space explor extrem awkward errorpron research also recogn valu exploit looplevel transform map regular loop comput fpgabas architectur der rienrajopadhy 8 describ tile strategi doubli nest loop model perform analyt select tile size minim iter execut time 73 discuss research present paper dier effort mention sever respect first focu research develop algorithm explor wide number design point rather select singl implement second propos algorithm take input sequenti applic descript requir programm control compil transfor mation third propos algorithm use highlevel compil analysi estim techniqu guid applic transform well evalu variou design point algorithm support multidimension array variabl absent previou analys map loop comput fpga final use commerci avail behavior synthesi tool complement parallel compil techniqu rather creat architecturespecif synthesi flow partial replic function exist commerci tool behavior synthesi allow design space explor extract accur perform metric time area use rather reli compilerderiv perform model approach greatli expand capabl behavior synthesi tool precis program analysi 8 conclus describ compil algorithm balanc comput memori access rate guid hardwar design space explor fpgabas system experiment result five multimedia kernel reveal algorithm quickli less five minut search less 03 search space deriv design close match best perform within design space smaller design compar perform work address grow need rais level abstract hardwar design simplifi design pro cess combin strength parallel compil behavior synthesi system automat perform transform typic appli manual hardwar de signer rapidli explor larg design space technolog increas complex devic consequ design becom complex further autom design process becom crucial acknowledg research support darpa contract f306029820113 author wish thank contributor defacto project upon work base particular joonseok park heidi ziegler yoonju lee brian richard 9 r parallel applic silicon compilermanag memori system raw machin improv regist alloc subscript variabl improv ratio memori oper floatingpoint oper loop altera corp specifi compil applic rapid loop tile reconfigur acceler bridg gap compil synthesi defacto system understand behavior synthesi practic guid highlevel design evalu streamsc ctofpga compil applic perspect coprocessor stream multimedia acceler annapoli microsystem wildstar tm manual mentor graphic monet tm user manual releas r42 xilinx virtexii 15v fpga data sheet behavior synthesi fast area estim support compil optim fpgabas reconfigur system structur hardwar compil parallel program compil occam fpga digit signal process principl autom process compil dataflow graph reconfigur hardwar compil pipelin synthesi reconfigur architectur optim supercompil supercomput tr improv regist alloc subscript variabl digit signal process 3rd ed map piperench hardwaresoftwar codesign embed reconfigur architectur evalu streamsc ctofpga compil autom process compil dataflow graph reconfigur hardwar understand behavior synthesi optim supercompil supercomput loop tile reconfigur acceler specifi compil applic rapid parallel applic silicon bitseri implement intern data encrypt algorithm idea fast area estim support compil optim fpgabas reconfigur system coarsegrain pipelin multipl fpga architectur ctr rui rodrigu joao p cardoso infrastructur function test design gener compil target fpga proceed confer design autom test europ p3031 march 0711 2005 byoungro pedro c diniz mari w hall use estim behavior synthesi tool compilerdirect design space explor proceed 40th confer design autom june 0206 2003 anaheim ca usa gang quan jame p davi siddhaveerasharan devark duncan buell highlevel synthesi larg bitwidth multipli fpga case studi proceed 3rd ieeeacmifip intern confer hardwaresoftwar codesign system synthesi septemb 1921 2005 jersey citi nj usa share synthesi control data flow graph fpga proceed 40th confer design autom june 0206 2003 anaheim ca usa david andrew ron sass erik anderson jason agron wesley peck jim steven fabric baijot ed komp achiev program model abstract reconfigur comput ieee transact larg scale integr vlsi system v16 n1 p3444 januari 2008 joonseok park pedro c diniz k r shesha shaye perform area model complet fpga design presenc loop transform ieee transact comput v53 n11 p14201435 novemb 2004 heidi e ziegler mari w hall pedro c diniz compilergener commun pipelin fpga applic proceed 40th confer design autom june 0206 2003 anaheim ca usa r gonalv p mora j p cardoso f wolf fernand r f romero e marqu architectr system reconfigur robot design proceed acm symposium appli comput march 0912 2003 melbourn florida byoungro mari w hall heidi e ziegler custom data layout memori parallel proceed intern symposium code gener optim feedbackdirect runtim optim p291 march 2024 2004 palo alto california uday bondhugula j ramanujam p sadayappan automat map nest loop fpga proceed 12th acm sigplan symposium principl practic parallel program march 1417 2007 san jose california usa heidi ziegler mari hall evalu heurist automat map multiloop applic fpga proceed 2005 acmsigda 13th intern symposium fieldprogramm gate array februari 2022 2005 monterey california usa yongkang zhu grigorio magkli michael l scott chen ding david h albonesi energi impact aggress loop fusion proceed 13th intern confer parallel architectur compil techniqu p153164 septemb 29octob 03 2004 zhi guo betul buyukkurt walid najjar input data reus compil window oper onto reconfigur hardwar acm sigplan notic v39 n7 juli 2004 schedul algorithm optim earli plan highlevel synthesi acm transact design autom electron system toda v10 n1 p3357 januari 2005 charl r hardnett krishna v palem yogesh chobe compil optim embed applic adapt soc architectur proceed 2006 intern confer compil architectur synthesi embed system octob 2225 2006 seoul korea chen ding yutao zhong predict wholeprogram local reus distanc analysi acm sigplan notic v38 n5 may patrick carribault albert cohen applic storag map optim regist promot proceed 18th annual intern confer supercomput june 26juli 01 2004 malo franc