algorithm variabl length subnet address assign abstractin comput network consist subnetwork lbit address machin consist two part prefix si contain address subnetwork machin belong suffix length l si contain address particular machin within subnetwork fixedlength subnetwork address si independ wherea variablelength subnetwork address si vari one subnetwork anoth avoid ambigu decod address requir si prefix anoth sj practic problem find suitabl set si order maxim total number address machin ith subnetwork contain ni machin ni machin subnetwork need address solut ni 2lsi 2lsi machin subnetwork address none address solut assign address si subnetwork abstract problem impli formul given integ l given necessarili distinct posit integ n1 cdot nm find binari string s1 cdot sm may empti 1 nonempti string si prefix anoth string sj 2 si l bit long 3 quantiti sum nolimit skne0 min left nk 2lsk right maxim gener algorithm case ni also prioriti pi associ addit constraint involv prioriti subnetwork import other treat preferenti assign address algorithm use solv case l variabl input longer specifi l rather give target integ number address machin goal find smallest l whose correspond optim solut result least address machin b introduct introduct discuss connect comput network abstract problem algorithm subsequ given also introduc terminolog comput network consist subnetwork lbit address machin consist two part prefix contain address subnetwork machin belong suffix contain address particular machin within subnetwork case variou subnetwork contain roughli number machin fix partit l bit tbit prefix l gamma tbit suffix work well practic subnetwork contain 2 lgammat address machin contain 2 lgammat address remain one unsatisfi sens address fix length partit scheme machin unsatisfi way satisfi increas valu l howev fix length scheme wast subnetwork consist eventu consist differ number machin say machin ith subnetwork case fix scheme leav mani machin unsatisfi particular valu l even though variabl length partit scheme describ next could satisfi without increas l variabl partit scheme length prefix contain subnetwork address vari one subnetwork anoth word let prefix address ith subnetwork js j howev avoid ambigu store transmit js j requir prefix anoth j variabl length subnetwork address easili shown satisfi larger total number address machin fix length scheme exampl fix length subnetwork address satisfi address furthermor also interest case even variabl length address satisfi n machin case want use l bit avail effect possibl ie order satisfi mani machin possibl cours optim solut might leav unsatisfi machin say ith subnetwork translat empti string ie js solut therefor consist determin binari string maxim sum solut complet satisfi ith subnetwork satisfi machin subnetwork ie js machin ith subnetwork satisfi say ith network complet unsatisfi solut satisfi machin ith subnetwork subnetwork partial satisfi happen case 2 lgammaj j machin subnetwork satisfi optim solut leav subnetwork complet satisfi other complet unsatisfi other partial satisfi priorit version problem model situat subnetwork import other use follow prioriti polici prioriti polici number satisfi machin subnetwork lowerprior subnetwork exist next section prove use properti subset optim solut assum unpriorit case leav priorit case end paper proceed technic detail approach stress provid enough background motiv make paper selfcontain reader interest background provid find refer 11 8 9 10 6 4 12 specif standard subnet address relat topic gener discuss hierarch address benefit larg network variou lookup solut method eg digit tree see 7 5 final follow assum reader familiar basic techniqu terminolog text algorithm data structur literatur refer reader exampl refer 1 2 3 preliminari follow definit observ use later assum without loss gener sinc case n admit trivial solut 2 l machin satisfi subnetwork 1 assum logarithm base 2 lemma 1 let solut necessarili optim exist solut 0 satisfi number machin use set subnetwork address complet unsatisfi subnetwork k lowest k word js proof among solut satisfi number machin consid one smallest number offend pair defin pair complet unsatisfi j complet unsatisfi claim number pair zero otherwis interchang role subnetwork j solut decreas total number satisfi machin contradict sinc result solut least one fewer offend pair 2 hand necessarili exist 0 equal valu say complet satisfi subnetwork k highest n valu optim solut seek go select subnetwork decreas n valu initi encount mixtur complet satisfi partial satisfi subnetwork get complet unsatisfi one lemma remain one complet unsatisfi lemma 2 let solut necessarili optim exist solut 0 satisfi mani machin use set subnetwork address js proof among solut satisfi number machin consid one smallest number offend pair defin pair j js claim number pair zero otherwis interchang role subnetwork j solut decreas total number satisfi machin contradict sinc result solut least one fewer offend pair 2 let full binari tree height l ie 2 l leav 2 node solut one map nonempti node obviou way node v correspond subnetwork obtain start root go dictat bit string 0 mean go left child 1 mean go right child note depth v distanc root js j v ancestor anoth v j requir nonempti prefix anoth j node w use parentw denot parent w use lw denot number leav subtre w henc solut complet satisfi subnetwork iff case extend terminolog say node v complet satisfi rather accur subnetwork correspond node v complet satisfi solut satisfi lemma 1 2 solut depth v impli v 0 smaller preorder number v 0 j equival say 0 lexicograph smaller 0 obtain sequenc interchang variou subtre follow initi copi repeat follow 1 perform interchang 0 subtre root node v subtre root leftmost node 0 depth simpli new posit occupi interchang 2 delet 0 subtre root v 0 perform interchang done 0 give new v 0 desir propertyth interchang oper use prove lemma actual perform algorithm use proof lemma lemma 4 let solut necessarili optim satisfi properti lemma 1 3 exist solut 0 satisfi mani machin also satisfi properti lemma 13 v root lparentv nonempti 0 subset nonempti proof among solut satisfi number machin let one maxim integ v lemma properti ie claim 0 alreadi satisfi lemma suppos contrari k ie lparentv i1 complet satisfi sinc would impli lv i1 henc v i1 partial satisfi ie lv z parent v i1 sibl v i1 must right v i1 sinc otherwis v v lparentv contradict definit also note fact lz n i1 impli n ie number unsatisfi machin subnetwork promot v i1 move parent one level tree thu replac old i1 new shorter one obtain drop rightmost bit old i1 ii delet 0 j new i1 prefix note j remov correspond v j subtre henc remov j result ly machin becom unsatisfi compens ly machin subnetwork becom newli satisfi result v i1 promot impli new solut 00 valu less 0 howev v j delet subtre caus 00 longer satisfi properti lemma 1 surviv v right z n n j next describ modifi 00 satisfi lemma 1 rest proof 0 refer solut start v i1 move one level 00 refer solut v i1 move let v denot set delet v j ys subtre origin 0 00 00 right z henc need repair 00 restor properti lemma 1 repair need done follow simultan element sequenc v follow tree place element consid say v j place previous origin 0 occupi v jl1 v j place new solut leav complet unsatisfi 00 modifi satisfi number machin origin one still satisfi lemma 13 move v i1 one level tree repeat v i1 high enough contradict definit integ henc must case 0 lemma 5 exist optim solut satisfi properti lemma 4 everi subnetwork length equal either proof let optim solut satisfi lemma 4 first claim everi satisfi js suppos contrari length less move v current posit say node descend whose depth equal e would leav subnetwork complet satisfi without affect subnetwork repeat give solut everi length cours move v say ys left subtre leav hole ys right subtre sens right subtre unulitil new solut result might mani unutil subtre easi move right lie right util subtre detail easi omit henc assum js note introduc violat properti lemma 4 complet proof must show js impli take logarithm side give complet proof 2 observ made far enough easili solv om log time follow easier version problem either complet satisfi subnetwork report possibl clearli suffic find v subnetwork sinc v uniqu determin done om log time follow greedi algorithm oper portion v 1 sort n decreas order say n log log factor goe away n sort linear time eg integ smaller o1 2 n comput depth v 3 repeat follow leftmost node depth none v node exist stop output solut exist time om implement step construct simultan ousli preorder travers relev portion call start root stop first preorder node depth 1 label v 1 consid leaf 0 resum preorder travers reach anoth node depth 2 label v 2 consid anoth leaf 0 etc note end leav 0 v left right order theorem 1 algorithm greedi solv problem find assign address complet satisfi subnetwork assign exist time complex om given sort order om log sort n proof time complex argu exposit algorithm correct algorithm follow immedi lemma 15 2 theorem 2 assign complet satisfi subnetwork exist proof observ algorithm greedi succe satisfi subnetwork inequ satisfi 2 corollari 1 whether assign complet satisfi subnetwork determin om time even n given sort order proof righthand side inequ previou theorem comput om time 2 would greedi algorithm solv problem satisfi largest number machin satisfi assign v node step 3 instead say solut exist accur claim solut produc far optim answer seen simpl exampl exampl greedi algorithm satisfi 5 machin wherea possibl satisfi 7 machin howev follow hold observ 1 solut return greedi algorithm satisfi number machin less half number satisfi optim solut number subnetwork complet satisfi greedi observ sinc would put v greater depth current posit therefor optim solut could compar greedi satisfi addit machin less number satisfi greedyhowev need resort approxim optim solut sinc next section give algorithm find optim solut 3 algorithm unpriorit case assum throughout section greedi algorithm describ earlier fail satisfi machin goal satisfi mani machin possibl call level 2 node whose depth distanc root number node level follow 1 kth leftmost node level lemma 5 say v either depth limit number choic place v 2 choic depth 2 1 choic depth 1 everi maximum number machin subnetwork satisfi use portion preorder number preorder number j subject constraint v place node defin analog play role play definit ci j ci js c 0 js play import role algorithm clearli quantiti could easili obtain number machin satisfi optim solut simpli choos maximum among anoth notion use algorithm predecessor node v integ greater vs depth node level immedi left ancestor v level node exist v predecessor word w ancestor v level possibl predecessor v rightmost node left w level algorithm implicitli make use fact predecessor given node v obtain constant time v repres pair b vs depth b lefttoright rank b depth ie v bth leftmost node depth predecessor b c follow algorithm preliminari later modifi better algorithm input algorithm l n output placement v recal equival comput easili obtain v fact obtain v constant time point later assum preprocess step alreadi comput use pred v pred b interchang denot predecessor node v b convent pred b gamma1 gamma1 undefin ie b predecessor 1 turn follow convent 0 node give ci b valu maxim fi b predd predd b convent 0 node give c 0 b valu maxim f predd predd 2 find largest b ci bs c 0 bs comput previou step suppos ck b respect c 0 k b ck b respect c 0 k b maximum possibl number machin satisfi optim solut v gener set assign correspond optim solut rather valu use f f 0 function obtain previou step start node respect trace back output node optim solut go along order v k v detail trace back follow k largest ci bs c 0 bs comput previou step repeat follow b output v equal either fi fi case f 0 fi case note output string correspond v node rather describ v modifi step 2b follow v b binari string consist rightmost digit binari represent integ 2 breadthfirst number node b empti string correspond root sinc 2 0 impli comput pair b constant time correct algorithm preliminari follow lemma 1 5 time complex preliminari unsatisfactori depend size well make worst case take om2 l time howev follow simpl modif result om 2 step 1a respect 1b replac iter bound b remain unchang 2 1a 2 1 1b argu correct modifi algorithm observ time complex om 2 sinc iter 2 distinct note relev ci bs need explicitli initi implicitli assum zero initi work particular order step 1 comput correct follow claim prove next optim solut 2 node level use leftmost node level let optim solut smallest possibl number call violat claim ie smallest number node b b 2 gamma v b prove contradict suppos 0 let smallest depth claim violat let b node level violat claim place b optim solut sinc node right v level valu would sure decreas modifi reposit v subtre rightmost node level without chang depth modif howev would decreas contradict definit henc must zero claim hold follow summar result section theorem 3 unpriorit case solv om 2 time 4 algorithm priorit case let prioriti prioriti subnetwork k rest section assum l larg enough complet satisfi subnetwork case l larg enough prioriti play role theorem use greedi altern corollari 1 binari search largest call subnetwork k complet satisfi comparison binari search correspond call greedi altern corollari 1 cours ignor prioriti subnetwork k take total time om log even though may use greedi logarithm number time sort decreas n j make subsequ execut greedi cost om time rather om log let solut return greedi subnetwork complet satisfi definit imposs complet satisfi subnetwork task modifi satisfi mani machin subnetwork k possibl without violat prioriti polici henc keep subnetwork complet satisfi done follow 1 set depth k 1 dlog n k e 2 use greedi log log n k j time binari search smallest depth call v k j place without result infeas test greedi place subnetwork k previous fix depth ii place k j depth log n k j possibl valu impli log log n k j iter binari search exist ie placement k j prevent requir placement proceed step 3 binari search find fix depth v j stay futur iter set 2 3 solut describ current depth k fix depth use preorder travers part posit v k 1 algorithm respect prioriti polici follow way fix depth subnetwork lower prioriti interfer consid later iter time complex easili seen om 2 log l sinc n k follow summar result section theorem 4 priorit case solv om 2 log l time 5 remark l variabl consid situat instead specifi l input specifi target integ fl number address machin goal find smallest l capabl satisfi least fl machin algorithm gave earlier assum fix l use subroutin forward binari search optim ie smallest valu l call l satisfi least fl machin use log time forward binari search l look like extra multipl log l variabl seek minim oppos version problem fix l ahead time howev theorem 2 impli log import case seek smallest l satisfi machin version problem solv fast one l fix seek check whether complet satisfi subnetwork acknowledg author grate three anonym refere help comment earlier version paper r combinatori algorithm word introduct algorithm algorithm class subnet experi parallel search techniqu rout tabl lookup class subnet experi result recommend fast rout tabl lookup use cam internet standard subnet procedur broadcast internet datagram presenc subnet internet subnet variabl length subnet tabl ipv4 assign subnet number tr