asynchron parallel prefix comput abstractth prefix problem comput product x1 otim x2 otim cdot otim xk 1 kn otim associ binari oper start asynchron circuit solv problem olog n latenc log n circuit size otimesrm oper circuit contribut 1 modif circuit improv averagecas latenc olog n olog log n time 2 modif allow circuit run fullthroughput ie constant respons time construct use obtain asynchron adder olog n worstcas latenc olog log n averagecas latenc b introduct renew interest design asynchron circuit motiv potenti benefit design circuit asynchron fashion asynchron circuit exhibit averag case behavior therefor optim datadepend fashion present asynchron solut parallel prefix problem exploit advantag asynchron circuit synchron counterpart reduc averag case latenc prefix comput letomega associ oper prefix problem comput given x result prefix problem use solv number problem effici ladner fisher show prefix problem use parallel comput arbitrari meali machin 6 leighton discuss number differ problem solv use prefix comput 7 concret applic use method present paper construct asynchron adder averagecas latenc olog log n step varieti synchron solut prefix problem discuss leighton latenc olog n step 7 winograd shown lower bound worstcas time complex binari addit olog n n number bit input 10 therefor olog n lower bound latenc synchron adder gemmel harchol construct circuit binari addit add correctli probabl latenc log logn ffl step construct asynchron adder alway add correctli averagecas latenc olog n step 3 begin asynchron solut similar synchron counterpart improv perform solut introduct pipelin use two compet method solv prefix problem pick answer arriv earliest produc output solut present log n hardwar complex worstcas olog n time complex support advanc research project agenc offic armi research part nation semiconductor corpor graduat fellowship use chp commun hardwar process variant csp 4 give highlevel descript circuit use circuit mean asynchron circuit paper brief descript chp provid appendix 2 prefix problem formul prefix problem term asynchron chp program assum input arriv input channel respect output produc output channel respect problem restat term read valu x input channel comput valu send valu appropri output channel term chp immedi solut leap mind follow program deltaomega program ineffici number reason obviou 2 oper correspond 2 circuit element serv specif problem purpos paper assum operationomega ident e mere aid clarityit detract construct way assum method construct circuit comput 1omega dn2e could use circuit comput x deltaomega x n ad singl process read output two stage perform singleomega oper sinc oper associ process would read two input channel b produc desir output channel c written valu x deltaomega x n comput use tree process shown fig 1 u r u u subtre prefix right subtre prefix left subtre prefix fig 1 tree process input x k need prefix x deltaomega comput output k observ input particular node tree prefix input leav left right subtre node prefix requir first leftmost node right subtre comput prefix requir first node left subtre known assum prefix obtain anoth input channel v process augment send appropri subtre prefix back tree modifi process notic ld rd channel provid exactli input need v channel children particular process collect process inde solv prefix problem remain provid input root prefix comput tree read input produc final output v channel root tree requir null prefix ident e output root use process simplifi root process e ident ofomega leav prefix comput tree read input prefix tree produc appropri output leaf process written complet solut problem shown fig 2 sinc node tree contain constant number ofomega comput sinc node tree node bound fanin onomega comput circuit solut tree depth olog n therefor time complex solut olog n ld rd ld rd r root u fig 2 solut prefix problem observ sequenc u xomega v p enforc environ process therefor split process two part execut parallel howev obviou split would caus variabl x share two process introduc local channel c use copi valu x new process two process ident therefor write use similar techniqu rewrit leaf process compil process tree use standard techniqu introduc martin 9 begin rewrit process use handshak expans transform elimin commun channel replac handshak protocol implement synchron data commun 8 circuit quasidelayinsensit must function correctli even input circuit arriv time therefor input must encod use delayinsensit unord code code valu input chang neutral valu valid valu without intermedi valu valid neutral 9 differ valid valu use encod differ input use function vdelta ndelta denot valid neutral code c concurr assign bit c result appropri valid valu without intermedi valu valid neutral c concurr assign bit c result neutral valu without intermedi valu neutral valid exact natur oper depend encod scheme operationomega prefix comput initi environ set input valid valu environ wait output becom valid input reset neutral valu next input suppli output reset neutral valu handshak expans process compris prefix comput handshak expans given compil quasidelayinsensit asynchron circuit techniqu outlin martin 9 result circuit similar shown 6 use synchron implement well program present use binari tree prefix comput method present easili extend tree kari 3 pipelin solut present drawback tree perform one prefix comput time permit tree oper simultan multipl input pipelin prefix comput observ sinc must wait output becom valid reset input protocol chosen earlier pipelin circumv problem introduc addit acknowledg signal input output environ permit reset input receiv acknowledg circuit send next input acknowledg signal reset small modif handshak expans stage written signal end acknowledg signal variou channel downgo phase upgo phase fig 3 pipelin prefix comput consid singl node prefix comput tree pipelin stage two halv process howev downgo phase comput begin valu receiv channel v valu comput circuit pipelin stage proport depth node tree therefor even though olog n pipelin stage olog n comput perform tree permit must introduc buffer channel connect two halv leaf buffer proport depth node tree logic simpler visual comput unfold tree two partsth upgo phase downgo phasea shown fig 3 vertic arrow intern channel c clear one must add stage buffer intern channel c shown vertic arrow fig 3 node step away root circuit pipelin manner permit 2 log prefix oper perform fig 4 show tree appropri buffer introduc throughput number oper perform per second pipelin prefix comput buffer depend number input time take perform theomega oper latenc time output produc pipelin empti comput block proport number stage therefor 2 log without buffer circuit log n compon bound fanin fanout circuit perform aomega comput downgo phase upgo phase fig 4 pipelin prefix comput buffer 4 improv averag case latenc pipelin prefix comput buffer use prefix comput repeatedli perform howev prefix comput use often ad buffer comput tree improv perform prefix comput howev may still interest minim latenc prefix comput tree begin consid simpl solut prefix comput problem simplest way perform prefix comput bitseri fashion howev sinc differ input channel use n process one input channel stage connect linearli shown fig 5 r fig 5 serial prefix comput stage x k receiv k gamma1 channel l previou stage x k channel x k produc k channel k well channel r connect next stage chp intermedi stage solut given howev know input channel x arriv much sooner input channel l given inform possibl produc output r receiv input l suppos know prefix comput operatoromega particular suppos valu x input channel x equal produc output r read valu l rewrit serial process follow time taken solut produc output datadepend best case time receiv input produc output constantmuch better prefix comput tree worst case time taken onmuch wors prefix comput tree take olog n time solut adopt combin prefix comput tree serial comput singl comput two comput compet one anoth pick solut arriv first techniqu worstcas latenc olog n bestcas latenc o1 modifi leaf process includ serial comput origin leaf process use prefix comput tree add serial comput phase add channel l r process note valu receiv along channel v valu receiv along channel l combin two channel extern use merg process follow use process new leaf process final modifi merg pick first input produc output compil serial depend structur ofomega compil procedur pick first input given circuit effici implement know valu receiv l v final use similar transform replac process prefix comput tree one also ripplecarri prefix comput result comput ripplecarri stage everi level prefix comput tree prefix comput given run full throughput o1 buffer stage serial part comput improv throughput prefix comput introduc 2d gamma 1 buffer stage prefix comput depth tree buffer implement use fold fifo o1 latenc 5 analysi averag case latenc prefix comput datadepend therefor need inform input distribut determin averagecas latenc consid process serial shown part prefix comput x 6 output r depend input c call propag case sinc output process depend input c let probabl particular input p let distribut independ across n input let ln latenc prefix comput n input assum prefix comput use kari tree purpos analysi write ms length longest sequenc propag input delay singl stage serial propag chain leav tree h addit delay introduc ad one level tree ie h delay go upward downward one stage tree first part formula come rippl comput latter tree comput expand l n observ next stage tree replac mk input next stage tree construct group input block size k result propag sequenc occur block size k longest sequenc length mk appli expans recurs obtain ms particular choos log averag latenc bound log k hlog mi comput expect valu log observ reason expect valu logarithm random variabl log geometr mean variabl sinc arithmet mean alway least geometr mean log increas alway nonneg inequ follow bound hlni determin hmi know hmi log 2 n cf 1 simpl extens proof show ne proof given appendix therefor averag latenc prefix comput bound log k log dlog 11gammap ne olog log n establish averagecas latenc prefix comput olog log n prefix comput oper fullthroughput valu given function n sinc add 2d gamma 1 stage buffer depth tree serial comput part well implement use cach buffer fold fifo valu bound function o1 therefor fullthroughput modif increas order averagecas latenc 6 applic binari addit prefix comput use construct binari kpgadder 6 perform binari addit bit posit k carryin bitposit must known carryin comput formul prefix comput follow suppos bit k two input zero matter carryin carryout stage zeroa kill k similarli two input one carryout alway onea gener g otherwis stage propag p carryin determin carryout two adjac stage one use oper vertic column repres kpg code least signific bit tabl 1 prefix oper addit observ kpg code desir properti outlin preced section name valu x therefor use techniqu previou section reduc latenc binari addit previou section observ averag latenc adder olog log n 32bit pipelin adder base section 3 pa132 32bit 64bit pipelin adder olog log n averagecas latenc section 4 pa232 pa264 simul variou input valu use gatelevel simul well hspice consid gate circuit directli implement cmo nand celement fanin fanout restrict ensur gate delay 01n 02n hp 06m cmo technolog use branch factor prefix comput tree except would violat gate delay restrict use case quasidelayinsensit asynchron circuit obtain result compil handshak expans correspond close precharg quasistat domino logic kinniment compar latenc 32bit ripplecarri asynchron adder asy32 synchron ripplecarri adder spa32 32bit synchron carri select adder csa32 5 abl compar result report 5 normal gate delay one gate delay delay twoinput nand gate assumpt made 5 extrapol delay 64bit synchron carri select adder csa64 use express delay given paper two input distribut random number use uniform distribut b distribut correspond realist workload 32bit adder 2 result simul shown tabl 2 tabl includ best delay variou adder implement describ 5 well throughput circuit pa132 pa232 pa264 one transfer everi 163 gate delay adder type worst delay averag delay averag delay b gate gate gate csa32 113 asy32 401 172 192 pa232 142 104 112 tabl 2 delay asynchron synchron adder uniform b workload differ averagecas worstcas delay pa132 due variat number seri transistor switch logic term delay csa32 better simpl prefix comput adder pa132 howev pa232 perform better pa132 csa32 random input well realist workload pa264 perform significantli better csa64 random input howev pa2 adder slightli higher worstcas delay compar pa1 adder increas fanout intern signal expect differ pa2n csan adder increas n increas howev perform csan small n suggest better asynchron adder could construct use combin carri select prefix comput techniqu pa132 pa232 larger area csa32 due pipelin overhead overhead introduc circuitri gener acknowledg signal 7 variant prefix problem prefix comput use determin locat lead one binari string oper use binari multipl divisionpreshift input reduc number stage requir comput desir product quotient given nbit input prefix comput produc nbit output bit input know whether posit lead one prefix comput number requir shift 0 n bit posit move lead one fix bit posit howev input typic variabl length shifter encod binari form produc prefix comput observ sequenc decis made node along path taken lead one downgo phase prefix comput binari encod bitposit lead one assum prefix comput tree balanc number input power 2 tree balanc use dummi process therefor augment node tree produc bit produc appropri input shifter part prefix comput done introduc bu level downgo phase prefix comput tree addit note output buse produc one anoth signific bit first therefor use pipelin logarithm shifter shift complet overlap downgo phase prefix comput 8 conclus paper present number asynchron solut prefix problem first solut olog n latenc 1 log n throughput use circuit size pipelin prefix solut olog n latenc o1 throughput circuit size increas log n although still contain onomega comput block latenc prefix comput block improv use two compet prefix comput pick result arriv first circuit 1 log n throughput circuit size circuit datadepend latenc worstcas latenc olog n bestcas latenc o1 gener assumpt averagecas latenc prefix comput shown olog log n appendix a1 notat notat use base hoar csp 4 full descript notat semant found 8 follow short inform descript notat use ffl assign b statement mean assign valu b also write true fals boolean express guard si program part execut command correspond wait one guard true execut one statement true guard notat g shorthand g skip denot wait predic g becom true guard mutual exclus use vertic bar instead sn execut command correspond choos one true guard execut correspond statement repeat guard evalu fals notat shorthand true mean send valu e channel x receiv v mean receiv valu channel store variabl v ffl probe boolean express x true iff commun channel x complet without suspend ffl sequenti composit ffl parallel composit k a2 averag case analysi given ninput prefix comput let c n length longest sequenc propag input would like determin expect valu c n assum n input independ ident distribut random variabl probabl input propag type use simpl gener reason present burk et al 1 clearli expect valu c n given prc n k probabl length longest sequenc propag input least k probabl prc consist two part probabl first n gamma 1 input sequenc propag input least k b probabl first sequenc ad nth input produc sequenc length k therefor write second term correspond part b obtain observ n input last k input type propag input posit n gamma k type propag also need take account fact first posit propag sequenc length least k repeatedli expand first term obtain complet proof note prc n k 1 split rang summat two part pick k nq k 1 ie pick ne obtain ne r preliminari discuss logic design electron comput instrument cmo vlsi implement asynchron alu tight bound expect time add correctli add mostli correctli commun sequenti process parallel prefix comput introduct parallel algorithm architectur array compil commun process delayinsensit vlsi circuit asynchron datapath design asynchron adder time requir perform addit tr ctr yenchun lin yaohsien hsu chunkeng liu construct h4 fast depthsiz optim parallel prefix circuit journal supercomput v24 n3 p279304 march yenchun lin jiannan chen z4 new depthsiz optim parallel prefix circuit small depth neural parallel scientif comput v11 n3 p221236 septemb yenchun lin junwei hsiao new approach construct optim parallel prefix circuit small depth journal parallel distribut comput v64 n1 p97107 januari 2004 yenchun lin chinyu su faster optim parallel prefix circuit new algorithm construct journal parallel distribut comput v65 n12 p15851595 decemb 2005