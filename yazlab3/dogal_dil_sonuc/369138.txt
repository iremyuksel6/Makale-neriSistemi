slice softwar model construct appli finitest verif techniqu eg model check softwar requir program sourc code translat finitest transit system safe model program behavior automat check transit system correct properti typic costli thu necessari reduc size transit system much possibl fact often case much program sourc code irrelev verifi given correct propertyin paper appli program slice techniqu remov automat irrelev code thu reduc size correspond transit system model give simpl extens classic slice definit prove safeti respect model check linear tempor logic ltl formula discuss slice strategi fit gener methodolog deriv effect softwar model use abstractionbas program special b introduct modern softwar system highli complex yet must extrem reliabl correct recent year finitest verif techniqu includ model check tech niqu receiv much attent softwar valid method techniqu effect valid crucial properti concurr softwar system varieti domain includ network protocol 23 railway interlock system 5 industri control system 3 despit success high cost automat check given correct properti softwar system typic enorm state space cast doubt whether broad applic finitest verif softwar system costeffect research agre best way attack stateexplos problem construct finitest transit system safe abstract softwar semant 7 10 26 transit system small enough make automat check tractabl yet larg support part nsf darpa grant ccr 9633388 ccr9703094 ccr9708184 nasa award nag 21209 support part nsf grant ccr9701418 nasa award nag 21209 enough captur inform relev properti check one primari difficulti determin part program relev properti check paper show slice automat throw away irrelev portion softwar code henc safe reduc size transit system approxim softwar behavior envis slice one collect tool translat program sourc code model suitabl verif previous illustr techniqu abstract interpret partial evalu integr appli help autom construct abstract transit system 11 20 21 appli techniqu sever realist softwar system 12 13 reveal interest interact slice abstract build peopl current perform slicinglik oper manual determin portion code relev verifi given properti thu preprocess softwar use slice appli partialevalu base abstract techniqu provid safe approxim relev portion code ii enabl scale current manual techniqu significantli larger complex system iii reduc number compon abstract must select help guid se lection iv reduc size program treat abstractionbas partial evalu tool work part larger project engin highassur softwar system build set tool implement transit system construct methodolog ada java paper use simpl flowchart languag order formal investig fundament issu implement prototyp slice system paper base scale techniqu refer reader project websit httpwwwcisksuedusantosbandera extend version paper contain exam ple technic extens proof prototyp applic abstract techniqu concurr ada system next section describ flowchart languag use throughout paper present section 3 definit slice languag discuss specif finitest verif techniqu ltl model check approach construct safe abstract transit system sourc code section 4 section 5 describ slice appli prephas transit system construct section 6 sketch sever method deriv slice criteria tempor logic specif base shape commonlyus formula pat tern section 7 discuss relat work slice section 8 summar conclud descript futur work 2 flowchart languag fcl 21 syntax take sourc languag simpl flowchart languag fcl gomard jone 18 25 19 figur 1 present fcl program comput power func tion input paramet program n variabl referenc assign throughout program variabl result introduc time initi valu variabl 0 output program execut state memori return construct execut figur 2 present syntax fcl fcl program essenti list basic block initi basic block execut specifi immedi paramet list power program initi block specifi line init basic block consist label follow po sibli empti list assign write delta empti list elid list nonempti block conclud jump transfer control block anoth one instead includ boolean valu nonzero valu repres true zero repres fals test condit present slice need reason node statementlevel controlflow graph cfg ie graph separ node assign jump given program p assum statement uniqu index within block node uniqu identifi pair li l block label index valu figur 1 statement indic given annot bracket delta exam ple second assign loop block uniqu identifi node number loop2 follow definit introduc notion relat statementlevel controlflow graph ffl flow graph e consist set n statement node set e direct controlflow edg uniqu start node uniqu end node e ffl invers g gamma1 flowgraph n e e flowgraph edg revers startend state swap ffl node n domin node g written domn everi path start node pass n note make domin relat reflex postdomin node n g written postdomm n everi path node end node e pass n equival domn g gamma1 ffl node n controldepend intuit follow definit 1 exist nontrivi path p n everi node 0 ng postdomin n 2 postdomin n 33 write cdn set node n controldepend control depend play import role rest paper note node n controldepend must least two exit edg must two path connect e one contain n exampl power program figur 1 loop1 loop2 loop3 controldepend test1 end1 sinc postdomin test1 ie path test1 halt go extract cfg fcl program p straight forward possibl hitch program satisfi uniqu end node properti requir definit exampl program may multipl return work around problem assum extract cfg program p insert addit node label halt successor predecessor return node p 22 semant semant fcl program p express transit program state ln oe l label block p n index statement block l oe store map variabl valu seri transit give execut trace program statementlevel control flow graph exampl figur 3 give trace power program comput 5 2 formal trace finit nonempti sequenc state written suffix start ie 1 omit formal definit transit relat fcl program sinc intuit clear formal found 19 20 slice 31 program slice program slice consist part program p potenti affect variabl valu flow program point interest 31 slice criterion specifi program point n node ps cfg set variabl v interest exampl slice power program respect slice criterion yield program figur 4 note assign variabl result declar input paramet slice away sinc affect valu n line loop2 addit block init trivial remov eg postprocess phase slice program p yield program ps trace ps project correspond trace p exampl follow trace ps project trace 1 consid finit trace correspond termin execut extend version paper treat infinit execut best express use coinduct reason n init init result 1 1 loop result result 1 goto test 2 n n 1 2 goto test 3 end els loop end return 1 figur 1 fcl program comput n domain l 2 blocklabelsfcl 2 assignmentsfcl al 2 assignmentlistsfcl grammar al al j delta x figur 2 syntax flowchart languag fcl figur 3 trace power program init init goto test 2 loop n n 1 2 goto test 3 end els loop end return 1 figur 4 slice power respect criterion figur 3 intuit trace 2 project trace 1 sequenc program state 2 embed sequenc state 1 formal let oe j v denot restrict domain oe variabl v definit project follow program project function ptrace determin ffl set node ps cfg ffl function map node set variabl v defin induct length trace follow ae classic definit 31 32 slice criterion one specifi exactli one point node interest cfg along set variabl interest node case exampl slice power program applic may interest multipl program point gener notion slice criterion follow definit 3 slice criterion slice criterion c program p nonempti set pair n node ps statement flowgraph v subset possibl empti variabl p node requir pairwis distinct note criterion c view function variablesfcl case write domainc denot nkg thu slice criterion c determin project function domainc c abbrevi c formal notion program slice definit 4 program slice given program p associ cfg let c slice criterion p program ps also call residu program slice p respect c p execut trace execut trace ps run initi state s0 exampl let execut trace power program figur 1 slice power program figur 4 respect 32 comput slice given program p slice criterion c definit 4 admit mani program ps slice p fact p trivial slice p weiser note problem find statement minim slice p incomput 32 give minor adapt weiser algorithm comput conserv slice ie slice may contain statement necessari 2 321 initi approxim slice comput slice involv among thing identifi assign affect valu variabl given slice criterion one comput inform similar reach definit requir keep track variabl referenc variabl defin node cfg definit 5 definit refer ffl let defn set variabl defin ie assign node n alway singleton empti set ffl let refn set variabl referenc node n figur 5 show def ref set power program figur 1 next node cfg comput set relev variabl relev variabl variabl whose valu must known comput valu variabl slice criterion definit 6 initi relev variabl slice criterion c n set variabl v either 1 2 n immedi predecessor node c intuit variabl v relev node n 1 line slice criterion slice v 2 immedi preced node v use defin variabl x relev ie valu x depend v b v relev kill definit line n figur 5 present initi set relev variabl set power program figur 1 slice criterion n relev along path lead node loop2 end block n dead variabl thu longer relev classic definit slice requir node mention slice criterion occur comput slice forc node occur defin set obligatori node node must occur slice even fail defin variabl eventu deem relev definit 7 obligatori node set oc obligatori node defin follow 2 algorithm give actual base tip correct version weiser algorithm 31 fng fng ftest1g fng fng figur 5 result slice algorithm power program slice criteria initi slice set 0 c set node defin variabl relev successor definit 8 initi slice set initi slice set 0 c defin follow figur 5 present initi slice set 0 c power program figur 1 node loop2 node 0 c sinc node defin variabl relev successor note 0 c includ condit sinc condit make definit tell condit ad intuit condit node n ad 2 0 c oc controldepend n set condit b 0 c call branch set definit 9 branch set initi branch set b 0 c defin follow figur 5 present controldepend inform initi branch set b 0 c power program figur 1 explain section 21 loop1 loop2 loop3 controldepend test1 sinc loop2 0 oc controldepend dictat test1 includ b 0 c 33 iter construct keep iter process add condit influenc node alreadi slice must add slice node need comput express test condit fix point reach ffl relev variabl branch criterion relev variabl node n relev previou iter plu need decid condit control definit previou slice set find node branch b equival slice program criterion fb refbg ffl slice set slice set contain condit control node previou slice set node defin relev variabl ffl branch set condit requir control node current slice set obligatori node figur 5 present set r 1 c c result second iter algorithm next iter fix point reach sinc n variabl requir comput condit test test1 alreadi relev test1 iter size r c n node n c increas sinc r c n bound number variabl program c bound number node cfg iter eventu reach fix point r c n c 34 construct residu program given rc c follow definit inform summar residu program construct intuit assign c must appear residu program assign c oc assign must irrelev variabl sinc node must appear residu program assign replac skip goto return jump must appear residu program howev c relev assign obligatori node control depend upon therefor doesnt matter take true branch fals branch case simpli jump point two branch merg definit 11 residu program construct given program slice criterion c let rc oc set construct process residu program ps construct follow ffl paramet x p x paramet ps l label initi block p ffl label initi block ps label initi block p ffl block b p form residu block bs follow assign line identifi li assign appear residu program identifi li otherwis assign becom skip identifi li residu program otherwis node left residu program jump j b j jump bs otherwis must li 2 c j jump bs otherwis jump bs goto l 0 identifi li l 0 label nearest postdomin block l 1 l 2 final postprocess remov block target jump ps becom unreach 4 finitest verif note introduct varieti finitest verif techniqu use verifi properti soft ware make present concret consid singl finitest verif techniqu model check specif written linear tempor logic ltl ltl model check use reason properti wide rang real softwar system use exampl valid properti program framework provid parallel schedul varieti system eg parallel implement finiteel comput fluid dynam program flow analysi problem 16 15 41 linear tempor logic linear tempor logic 27 rich formal specifi state action sequenc properti system ltl specif describ intend behavior system possibl execut syntax ltl includ primit proposit p usual proposit connect three tempor oper proposit connect tempor oper specifi properti softwar system one typic use ltl formula reason execut particular program point eg enter exit procedur well valu particular program variabl captur essenc fcl use follow primit proposit ffl intuit li hold execut reach node block label l ffl intuit x rop c hold valu variabl x current node relat c relat oper rop eg x0 rop formal semant primit proposit defin respect state ae true fals otherwis ae true oex fals otherwis semant formula defin respect trace tempor oper 2 requir argument true current state onward 3 oper requir argument becom true point futur u oper requir first argument true point second argument becom true formal 24 let exist simpl specif use logic eventu block l5 execut whenev block l2 execut block l3 alway subsequ execut whenev block l5 execut x nonzero x alway less 10 42 softwar model construct appli finitest verif softwar system one must construct finitest transit system safe abstract softwar semant transit system small enough make automat check tractabl yet larg enough captur inform relev properti check relev inform extract appropri abstract interpret ai 9 approach 12 20 user declar program variabl abstract domain use interpret oper variabl use process combin abstract interpret partial evalu call abstractionbas program special abp residu program creat propag abstract valu special program point respect abstract valu 20 21 residu program concret constant replac abstract constant residu program safe approxim finitest program fix number variabl defin finit abstract domain program submit toolset 8 14 gener input exist model check tool smv 28 spin 23 approach appli verifi correct properti sever softwar system written ada 12 13 step describ user main task pick appropri ai ie ai extract relev infor mation throw away irrelev inform gener idea behind methodolog chose ai start simpl use ai throw inform dataflow away increment refin ai base inform specif verifi program 1 start point ai initi variabl model point ai ie domain singl valu oper return effect throw away inform variabl valu 2 semant featur specif specif formula check includ form proposit differ semant featur program eg valuat specif program vari abl featur must model precis ai hope check properti exampl formula includ proposit x0 instead use point ai x one must use eg ai domain fzero po g refer zeropo ai 3 select control variabl addit variabl mention explicitli specif must also use refin ai variabl specif variabl control depend predic control condit suggest semant featur model ai exampl specif variabl x controldepend upon condit use evenodd ai 4 select variabl broadest impact confront multipl control variabl model select one appear often condit illustr methodolog figur 6 present fcl render ada process control reader writer common resourc 8 ada system server process run concurr client process request startread stopread entri point ren dezvouz point control process fcl code figur 6 request given program paramet req list valu subrang 14 figur 7 present blocklevel controlflow graph fcl program assum interest reason invari properti key featur mention explicitli specif valu variabl writerpres execut startread block point ai provid enough precis determin state writerpres valu zero effect ai writerpres must abl distinguish zero valu posit valu choos zeropo ai point could gener abstract model check properti consid addit refin model choos latter illustr exam ple determin variabl upon node startread1 node assign writerpres control depend exampl three variabl writerpres activeread req alreadi model writerpres req use model extern choic interact control program via input could choos bind activeread refin ai point given condit express involv variabl activereaders0 activereaders0 might also choos zeropo ai thu errorflag abstract use point ai point would gener abstract model check properti true result obtain sure properti hold program even though finitest system model two variabl precis fals result obtain must examin counterexampl produc model checker may reveal true defect program may reveal infeas path model latter case identifi variabl condit along counterexampl path candid bind precis ai methodolog essenti heurist search find variabl program influenc execut behavior program rel properti proposi tion variabl determin potenti influ abstract refin strengthen result system model absenc determin variabl model point abstract essenti ignor effect may although futur may determin influenc case abstract refin reduc model use slice illustr pick appropri abstract nontrivi could benefit greatli form autom assist key aspect methodolog pick abstract includ 1 pick initi set relev variabl v relev statement ie cfg node n mention ltl specif init activeread 0 2 raiseerror writerpres 0 3 errorflag goto checkreq 5 checkreq end null req 1 return 1 end els nextreq nextreq req cdr req 2 goto attemptstartread 3 attemptstartread startread req1 writerpresent0 1 activeread activereaders1 1 startread goto checkreq 2 els attemptstopread attemptstopread stopread req2 activereaders0 1 activeread activereaders1 1 stopread writerpresent1 2 els attemptstartwrit raiseerror els attemptstopwrit attemptstartwrit startwrit req3 activereaders0 1 writerpres writerpresent0 goto checkreq 2 startwrit els attemptstopwrit attemptstopwrit stopwrit req4 writerpresent1 1 writerpres 0 1 stopwrit els checkreq activereaders0 2 raiseerror els checkreq figur readwrit control exampl fcl 2 identifi appropri ai variabl v 3 use control depend inform pick addit set variabl w indirectli influenc v n 4 identifi appropri ai variabl w intuit variabl v w irrelev abstract point ai clearli item 1 autom simpl pass ltl specif moreov inform item 3 exactli inform would produc slice program p base criterion gener inform 1 thu preprocess program verifi use slice provid autom support methodolog specif slice identifi relev variabl requir ai point ai ii elimin irrelev program variabl consider abstract select process present residu program ps yield slice iii reduc size softwar thu size transit system analyz form support need item 2 4 approach given program p specif desir criterion extract function extract extract appropri slice criterion c slice p respect c yield smaller residu program ps preserv reflect satisfact b littl irrelev inform possibl follow requir express condit requir 1 ltlpreserv extract given program p specif let ps result slice p respect c p execut trace raiseerror init attemptstopwrit attemptstartwrit attemptstopread attemptstartread nextreq checkreq stopwrit startwrit stopread startread figur 7 readwrit control flowchart execut trace ps run initi state s1 51 propositionbas slice criterion consid technic point guid us defin appropri extract function state want preserv satisfact formula yet remov much irrelev inform origin trace possibl alreadi discuss situat certain variabl valu elimin state trace influenc satifac tion formula import use pure syntact inform set variabl mention reduc state space let explain reduct gener term consid trace assum state transit influenc statisfact formal compress trace transit compress anoth view chang action ff caus chang igamma1 action ff 0 caus chang i1 combin action ff 00 move igamma1 i1 intuit formula doesnt need know intermedi state exampl irrelev transit might assign irrelev variabl transit node li li 1 mention technic justif identifi compress transit use pure syntact examin proposit formula answer lie fact tempor oper treat state transit dont chang satisf primit proposit formula influenc satisfact mean justifi mani trace compress reason singl transit satisfact primit proposit see properti hold one includ tempor oper next state oper ffi formal notion follow definit give notion proposit invari respect particular transit definit 12 pstutter transit let p primit proposit let transit said p stutter p set primit proposit proposit transit said pstutter follow lemma state satisfact formula contain primit proposit p invari respect expans compress pstutter step lemma 1 let formula let p set primit proposit appear trace lemma fail one includ next state oper 23 follow semant exampl consid trace let p proposit l3 note stutter p fals state compress transit obtain preserv satif formula ie 6j intuit next state oper allow one count state thu attempt optim compress transit set problemat reason system like spin 23 guarante semant ffi preserv eg partialord reduct optim given formula p set proposit want defin extract function guarante transit pstutter preserv residu program trace ffl variabl proposit observ definit variabl x may caus variabl chang valu ie caus transit non p stutter suggest proposit x rop c given specif assign x includ residu program x consid relev ffl proposit enter leav cfg node li caus proposit chang valu ie caus transit nonp stutter one might imagin need slice includ statement li proposit mula howev possibl compress might remov intermedi node two occur node li well similar situat preserv state chang associ enter exit node therefor addit node li must ensur immedi successor immedi predecessor li includ slice base argument defin extract function follow propositionbas extract given program p specif let v set program variabl occur let set node contain assign variabl v union set np node appear node proposit togeth successor predecessor node np extract g 1 extract function extract satisfi requir 1 exampl yield follow criterion first three line criterion startread1 node mention formula along predecessor successor last three line node writerpres assign valu figur 8 present result slice slice ident origin program except variabl errorflag block raiseerror disappear program thu slice automat detect abstract methodolog yield previou section given specif errorflag irrelev previou condit jump stopread stopwrit raiseerror replac uncondit jump checkreq case slice algorithm detect node raiseerror block irrelev condit jump replac uncondit jump node true fals path lead condit meet second exampl consid specif 3checkreqs1 checkreqs1 eventu execut case extract yield criterion c2 line criterion checkreqs1 node mention formula along predecessor successor sinc variabl proposit specif variabl specifi relev criterion figur 9 present result slice obviou residu program suffici verifi reachabl checkreq1 given specif variabl elimin except req appear test checkreqs1 even though strictli necessari verifi properti condit retain slice algorithm sinc controldepend upon addit slice criterion dictat node nextreq1 slice howev sinc assign node assign relev variabl assign replac skip final jump checkreq node nextreq3 residu program result chain seri trivial goto postprocess 6 futur work previou criteria consid individu proposi tion mani properti specif howev describ state use multipl proposit state relationship state character differ proposit section give inform suggest structur complex specif may exploit produc refin slice criterion init activeread 0 2 writerpres 0 3 goto checkreq 5 checkreq end null req 1 return 1 end els nextreq nextreq req cdr req 2 goto attemptstartread 3 attemptstartread startread req1 writerpresent0 1 activeread activereaders1 1 startread goto checkreq 2 els attemptstopread attemptstopread stopread req2 activereaders0 1 activeread activereaders1 1 stopread goto checkreq 2 els attemptstartwrit attemptstartwrit startwrit req3 activereaders0 1 writerpres writerpresent0 goto checkreq 2 startwrit els attemptstopwrit attemptstopwrit stopwrit req4 writerpresent1 1 writerpres 0 1 stopwrit els checkreq goto checkreq 2 figur 8 slice readwrit control program respect c1 init goto checkreq 5 checkreq end null req 1 return 1 end els nextreq nextreq req cdr req 2 goto checkreq 3 figur 9 slice readwrit control program respect c2 includ slice includ slice figur 10 slice abstract program consid simpl conjunct proposit appear eventu specif rather slice proposit separ use semant refin slice criterion properti interest assign x influenc valu l1 thu slice criterion would extract xg approach gener set program point proposit occur posit number variabl proposit conjunct thu far consid slice prelud abp applic abp howev reveal semant inform variabl valu statement syntax therebi make avail use slice figur illustr sequenc assign x left abstract sequenc assign middl result bind classic sign ai 1 x abp situat determin transit valu proposit relat x eg syntact consid respons properti 15 form proposit slice criterion would base sole 1 2 conjunct observ two fact structur formula exploit 1 within 2 implic thu need reason statement caus valu 1 becom true sinc fals valu guarante entir formula true 2 sinc righthand side 3 need reason first statement sequenc statement caus 2 becom true right column figur 10 illustr effect appli observ 1 elimin assign caus posit transit slice program note proposit involv x appear 2 slice criterion may expand includ addit statement addit program point 1 hold postdomin point 2 hold need consid purpos check respons sinc exist relationship impli respons hold occurr 1 observ 2 exploit use postdomin inform program point 2 hold post domin anoth point 2 hold need includ slice one program point 2 hold requir path 3 formula becom true thu postdomin 2 node may elimin refin slice criteria defin requir use auxiliari inform postdomin infor mation need avail prior slice cost gather inform process comput slice criteria may nontrivi domin high cost perform model check slice system case cost reduc size system present model checker offset reduc model check time discuss two refin criteria base structur properti formula check similar refin defin number class specif includ preced chain properti 15 refin use essenti inform describ respons properti preced properti requir domin rather postdomin inform note refin respons criteria applic properti check specif even slight variat structur formula may render slice program unsaf recent survey properti specif finitest verif show respons preced properti form describ occur quit frequent practic 16 48 realworld specif fell two categori reason believ effort defin seri special case extract criteria base formula structur justifi despit appar narrow 7 relat work program slice develop techniqu simplifi program debug identifi part program execut parallel 32 sinc develop concept slice appli wide varieti problem includ program understand de bug differenc integr test 31 applic crucial slice preserv exact execut semant origin program respect slice criterion work interest preserv abil success model check properti correct weaken allow refin slice criteria base properti check slice gener softwar artifact 30 includ attribut grammar requir model 22 formal specif 4 cimitil et al 6 use z specif defin slice criteria identifi reusabl code legaci system work use combin symbol execut theorem prove process specif deriv slice criteria con trast identifi necessari condit subformula commonli occur pattern specif use condit guid safe refin basic proposit slice criteria work touch relationship program special slice use slice prelud special suggest abstractionbas special may reveal semant featur residu program syntax could use refin slice criteria rep turnidg 29 studi relationship differ perspect show similar techniqu equival slice transform achiev special vice versa slice view statespac reduct techniqu number import theoret practic differ reduct techniqu appear literatur statespac reduct 17 preserv correct respect specif class correct properti contrast approach slice base criteria extract formula yield compress trace contain state chang relev proposit contain tempor logic formula approach yield program remain sound complet respect properti check sharp contrast mani abstract techniqu develop literatur eg7 sacrific complet tractabl final even though signific progress made develop algorithm data structur reduc model check time obdd 2 techniqu seen complement slice slice remov variabl system influenc behavior check model checker run faster regardless particular implement techniqu employ 8 conclus present variat program slice simpl imper languag shown slice criteria defin guarante preserv model check semant ltl specif slice program implement prototyp tool perform slice experi number exampl base work scale prototyp handl significantli complex featur program includ structur data treatment procedur multithread program commun share data extens nontrivi build solid base laid work report paper acknowledg thank jame corbett michael huth david schmidt sever illumin discuss thank also hongjun zheng help comment earlier draft r abstract interpret declar languag symbol model check 10 20 state beyond process control design use spin model check safeti critic softwar spin applic railway interlock system reusabl function use specif driven program slice case studi model check abstract evalu deadlock detect method concurr softwar abstract interpret unifi lattic model static analysi program construct approxim fixpoint abstract interpret reactiv system use partial evalu enabl verif concurr softwar model check gener contain implement translat ada program model check properti specif pattern finitest verif pattern properti specif finitest verif use partial order effici verif deadlock freedom safeti properti compil gener partial evalu introduct partial evalu use simpl flowchart languag stage static analysi use abstractionbas program special special configur system finitest verif reduct slice hierarch state machin model checker spin logic comput scienc model reason system partial evalu automat program gener tempor logic reactiv concurr system specif symbol model check program special via program slice beyond tradit program slice survey program slice techniqu program slice supercompil parallel vector comput tr adequaci program depend graph repres program formal model program depend implic softwar test debug mainten tempor logic reactiv concurr system partial evalu automat program gener increment program test use program depend graph static slice presenc goto statement model check abstract design pattern properti preserv abstract verif concurr system beyond tradit program slice abstract interpret reactiv system model checker spin reduct slice hierarch state machin filterbas model check partial system use partial evalu enabl verif concurr softwar pattern properti specif finitest verif logic comput scienc bandera abstract interpret symbol model check evalu deadlock detect method concurr softwar stage static analys use abstractionbas program special semant program slice program integr program slice hardwar descript languag slice program arbitrari controlflow formal studi slice multithread program jvm concurr primit program special via program slice program analysi model check abstract interpret use partial order effici verif deadlock freedom safeti properti reusabl function use specif driven program slice ctr heik wehrheim slice techniqu verif reus theoret comput scienc v343 n3 p509528 17 octob 2005 matthew b dwyer john hatcliff robi joehan shawn laubach corina psreanu hongjun zheng willem visser toolsupport program abstract finitest verif proceed 23rd intern confer softwar engin p177187 may 1219 2001 toronto ontario canada jame c corbett matthew b dwyer john hatcliff shawn laubach corina psreanu robbi hongjun zheng bandera extract finitest model java sourc code proceed 22nd intern confer softwar engin p439448 june 0411 2000 limerick ireland yunja choi nusmv spin experi model check flight guidanc system formal method system design v30 n3 p199216 june 2007 mariek huisman kerri trentelman factoris tempor specif proceed 2005 australasian symposium theori comput p8796 januari 01 2005 newcastl australia xianghua deng matthew b dwyer john hatcliff masaaki mizuno invariantbas specif synthesi verif synchron concurr program proceed 24th intern confer softwar engin may 1925 2002 orlando florida g j holzmann h smith autom verif method distribut system softwar base model extract ieee transact softwar engin v28 n4 p364377 april 2002 oksana tkachuk sreeranga p rajan applic autom environ gener commerci softwar proceed 2006 intern symposium softwar test analysi juli 1720 2006 portland main usa antonella santon gigliola vaglini local approach tempor model check java bytecod journal comput system scienc v70 n2 p258281 march 2005 yunja choi sanjai rayadurgam mat pe heimdahl automat abstract model check softwar system interrel numer constraint acm sigsoft softwar engin note v26 n5 sept 2001 matthew b dwyer john hatcliff robbi venkatesh prasad ranganath exploit object escap lock inform partialord reduct concurr objectori program formal method system design v25 n23 p199240 septembernovemb 2004 ingo brckner bjrn metzler heik wehrheim optim slice formal specif deduct verif nordic journal comput v13 n1 p2245 june 2006 tool support verifi uml activ diagram ieee transact softwar engin v30 n7 p437447 juli 2004 radu iosif matthew b dwyer john hatcliff translat java multipl model checker bandera backend formal method system design v26 n2 p137180 march 2005 baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v30 n2 march 2005