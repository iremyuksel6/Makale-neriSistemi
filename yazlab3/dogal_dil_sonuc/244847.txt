latch optim circuit gener highlevel descript gatelevel descript finit state machin fsm tradeoff number latch size logic implement nextstat output function typic initi implement gener via explicit state assign translat highlevel languag tradeoff subsequ lightli explor effici explor good latchlog tradeoff larg design gener highlevel specif reduc number latch control logic size demonstr efficaci techniqu larg industri exampl b introduct gatelevel descript nite state machin fsm tradeoo number latch size logic implement nextstat logic tradeoo exploit two level gener initi implement subsequ logic optim step 11 background state assign gener state encod initi latchlog implement higher level design process date primarili two approach use explicit state assign begin explicit state transit graph choos minimum latch encod minim size combin logic dbsv85 vsv90 har61 state assign highlevel languag choos encod accord delay statement specic reli logic synthesi later optim gatelevel implement bt93 explicit state assign impract larg design despit sophist techniqu determin optim assign produc result far wors handcod implement furthermor explicit state assign program target greaterthanminimumlatch impl mentat current technolog eg fpga longer necessari minim number latch often produc prohibit larg combin logic onehot encod also appli explicit state graph one latch use state result logic small fast sinc state need encod decod howev number latch huge onehot implement dioecult start place logic synthesi automat techniqu reduc number latch onehot implement produc good tradeoo resoundingli success state assign highlevel languag typic done statementbystat transla tion result natur insert regist delay statement descript good start point logic synthesi result far latch requir implement design bt93 even number latch import nal implement mani drastic reduc eoecienc mani synthesi optim algorithm eg symbol state travers state assign latchlog tradeoo explor via logic optim standard techniqu eg extract common factor function simplic retim may result latchlog rearrang larg state assign xed optim improv implement given assign goal retim resynthesi msbsv91 jointli optim latch posit combin logic optim potenti limit initi state assign rr nsigma2943 4 ellen sentovich horia toma grard berri remov redund latch done ubiquit term iredund latchesj use ubiquit varieti mean latch fanout primari output latch constant entir state space latch constant reachabl state space latch equival latch sophist denit consid simpl redund latch remov latch fanout latch constant result straightforward equival state variabl ident remov done part sever work eg ssm current bdd symbol travers techniqu also simpl oper robust algorithm singl latch remov publish ln91 directli relev singl latch remov algorithm describ section 31 treat thoroughli section exact precis replac singl latch logic far expens number latch exce minimum log 2 reachabl gamma state even small circuit qcc 95 gener techniqu reencod nite state machin given work relev eg control size encodingdecod logic target quit dioeerent goal reencod tri match encod two dioeerent similar machin order speed symbol travers 12 approach complet explor latchlog tradeoo certainli feasibl necessari nonetheless suoecient rich choic solut avail especi varieti implement found today technolog exampl ffl one may target implement hardwar softwar ffl hardwar implement may target nal custom design fpga board emul ffl current specic may preliminari one intend implement use veric function properti three case optim criteria quit dioeerent focu eoecient explor latchlog tradeoo design gener highlevel specic particular begin design gener esterel descript initi encod gener esterel compil natur one respect behavior design contain mani redund regist develop algorithm remov redund regist target algorithm work well larg design remov regist cheapli possibl ie easili discov redund regist abl easili replac minimum amount addit logic gener optim solut consid nal implement cost andor eoecaci intermedi represent key result includ follow ffl algorithm eoecient enough provid signic choic implement regard latchlog tradeoo larg circuit result direct publish thu far awar ffl appli simpl easi comput heurist latch reduct get close minimum number latch possibl given reachabl state set almost exampl obtain nal number latch less equal log 2 jrj set reachabl state ffl work increment initi implement taken highlevel languag strive preserv given structur size result logic remain tractabl even approach minimum number latch inria latch optim circuit gener highlevel descript 5 ffl result maximum latch remov term area result logic compar favor obtain tradit irobustj techniqu extract state transit graph run explicit state encod program perform logic optim result usual obtain smaller implement much less time furthermor observ blowup area initi implement state assign result long logic optim runtim experi increment techniqu could make comparison rel small exampl explicit state transit graph expens comput ffl runtim latch remov algorithm insignic reachabl state set comput initi subsequ latch redund determin compar trivial amount time set 2 overview techniqu appli heurist techniqu success remov redund latch control size combin logic complet latch remov techniqu could implement extract explicit state transit graph perform exact state minim run state assign program gener minimumlatch encod far expens yield insight latchlog tradeoo instead success remov latch use subset inform use aforement complet scheme exampl consid reachabl state equival state realm gener heurist procedur might 1 comput bdd latch output auxiliari function eg equival state reachabl state controllabilityobserv inform environ 2 appli algorithm remov latch sequenti behavior unchang respect environ describ auxiliari function 3 iter remov mani latch possibl mani latch desir given constraint size combin logic 21 gener algorithm nd scheme still expens industri applic robust necessari demonstr experiment choos simpler scheme 1 comput reachabl state machin 2 determin set latch may easili remov preserv reachabl state set 3 among choos set latch remov base cost estim remov latch add logic optim 4 iter remov mani latch possibl mani latch desir given constraint size combin logic import note onelatchremov step propos algorithm reencod state consid state pair easili merg gener reencod pair reachabl state unreach state give pair singl new encod pairmerg oper done way ffl comput easi determin pair rr nsigma2943 6 ellen sentovich horia toma grard berri figur 1 gener circuit transform ffl inexpens bdd size logic size perform merg updat reachabl state ffl exist logic preserv much possibl contain valuabl inform structur circuit way comput requir remain tractabl larg circuit result addit combin logic usual limit factor increment reencod algorithm control import note transform proven preserv behavior reachabl state set remain correct everi overapproxim reachabl state set therefor could use conjunct eoecient techniqu approxim reachabl analysi chm 22 circuit transform transform illustr figur 1 origin fsm transform one 0 call ng set latch transform remov latch indic set conveni keep indic remain latch ig assum l 0 latch next state vector l gener c call 0 encod function e type given vector function decod function type given vector set reachabl state resp 0 denot characterist function r resp r 0 thu r 2 r impli let r 0 r 0 0 denot initi state 0 context say equival 0 r properti transform satisfi function repres polynomi bdd input variabl consist call k l k r l 0 k r 0 f denot polynomi bdd set variabl x anoth set variabl denot f yx result substitut x k k f x result substitut x k complement k respect denot f x f x posit neg cofactor f respect x algorithm section sever algorithm latch remov describ summari 1 singlelatch remov determin latch remov individu replac combin function latch inria latch optim circuit gener highlevel descript 7 2 determin pair latch remov replac singl latch whose input combin function latch 3 onehot3by2 search onehot encod replac everi three latch two latch combin function 4 replac n latch latch new combin function latch follow section speci precis accord ffl condit latch remov ffl logic transform requir circuit ie specic e figur 1 note mani choic function implement chosen describ one algorithm reason choic subsequ eoeect optim describ section 4 ffl proof transform valid note new initi state trivial comput encod function e henc discuss ffl brief descript algorithm note everi case r increment eoecient updat comput iter 31 transform singlelatch singl latch remov nd replac latch substitut combin function latch condit singl latch l replac combin function other r l condit origin given bcm90 satisfact impli l distinguish reachabl state reencod coupl reachabl state form l 1 l unreach state l 1 l produc state l 0 n similarli 10 gener subset latch satisfi condit singl latch remov remain subset remov latch may chang appli heurist techniqu describ algorithm determin latch remov ln91 exact branchandbound algorithm use determin maximum number singl latch remov paper indic bound heurist power exact result obtain reason amount time experi perform small exampl largest reduct number latch 5 largest total number latch 21 design 10 100 latch mani redund latch exact algorithm far expens empir observ result nearli match singlelatch algorithm furthermor reduc number latch even algorithm describ sequel transform latch l remov logic function e ad e dene e k set k l 0 rr nsigma2943 8 ellen sentovich horia toma grard berri singlelatch1m r removedlist find remov latch 1 bestlatchcost foreach latch l c l bestlatchcost bestlatchcost j 1 break removedlist removedlist removedlist j oe return comput modifi foreach l 2 removedlist foreach l removelatchm l rnew 9 l r rnew figur 2 transform let l impli r l two algorithm implement singl latch remov pseudocod given figur 2 3 inria latch optim circuit gener highlevel descript 9 singlelatch2m r bound 1 removablelist removedlist foreach latch l transform 2 removablelist removablelist l removablelist j oe return foreach latch l 2 removablelist stillcanberemovedremovedlist l removelatchm l removedlist removedlist figur 3 transform algorithm 1 greedili select remov one latch time base cost function relat potenti remov latch use branch heurist ln91 computecost set c l j jrj onset size bdd r absolut valu term highest latch potenti distinguish state select latch lowest c l leav latch highest potenti thu heurist maxim chanc remov latch furthermor heurist impli minimum number minterm chang encod space observ help control size overal logic select latch r updat though latch alreadi remov process iter set latch remov simultan comput remov replac combin logic depend remain latch algorithm comput maxim remov set henc iter necessari note upon remov latch output variabl implement input latch set 0 result simplic combin logic c addit comput directli initi r smooth variabl remov l 1 simultan remov thermor oper perform order sinc 9 commut 9 cofactor commut altern r could updat variabl remov next comput updat r latter techniqu requir less comput remov creat function depend upon variabl eventu remov henc increas level logic strive control size depth logic comput time signic prefer former method algorithm 2 select set latch accord cost bound base bdd size computecost return number support variabl bdd estim bdd size manipul nal implement size result logic cours number bdd support variabl tight measur implement size nonetheless rr nsigma2943 ellen sentovich horia toma grard berri foreach latch l foreach latch l j j isremovabl l l j transform 4 5 removelatchm l r l figur 4 transform 2by1 algorithm correl level dioecult estim implement size without synthes design sinc set latch select accord individu remov condit r guarante remov simultan condit check latch remov second part algorithm must recomput well ensur depend remain latch entir process iter increas cost bound 32 transform 2by1 condit two latch l l j replac singl latch l 0 satisfact condit impli valid pair reachabl state unreach state reencod coupl reachabl state l 1 l unreach state l 1 l produc l 0 n l l 11 replac l replac l transform l l j satisfi condit one remov l set ae 4 proof let l 2 r k 6 k 6 j k let l l sinc 1 rst term condit 3 impli r l l j l j similarli l l j 2 f01 10 11g thu l reachabl state l 2 inria latch optim circuit gener highlevel descript 11 algorithm pseudocod algorithm shown figur 4 latch pair examin replac singl latch possibl note case input remov latch l set 0 e j depend therefor subsequ logic reduct c 33 transform onehot3by2 transform specic onehot encod design note singl latch remov algorithm appli onehotencod design one latch remov even exact algorithm appli even though design jlj latch minimum log 2 jlj algorithm rst search part encod space onehot encod replac everi three latch two part encod condit condit latch onehotencod given r l transform group three latch l l i1 l i2 replac deltal 0 l proof algorithm omit proof breviti describ algorithm detail special heurist straightforward implement 34 transform nbyn1 nbyn1 algorithm consid entir encod space search statepair merg rather restrict merg across plane small cube case singl 2by1 algorithm two part first encod modi without remov latch cluster exist encod toward all0 encod call migratest next result encod check see reachabl state pair mirror state variabl complement 341 transform migratest condit condit encod shift toward origin given regist remov step reachabl state l deltar l reencod l deltar l 6 r transform safe map state reachabl set unus encod unreach set transform given l satis 6 machin reencod follow r l rr nsigma2943 12 ellen sentovich horia toma grard berri let l 1 shannon cofactor l final l r l algorithm greedili move encod toward origin boolean space algorithm implement simpli iter latch check condit perform transform possibl motiv subsequ foldstat oper perform reachabl state ham distanc ne gamma 1 origin 1 could choos point boolean space around cluster encod all0 encod good choic esterel circuit believ other gener highlevel descript reason initi encod onehot close onehot igrouphotj contain mani 0s migratest add exorbit amount logic rather iter complet check foldstat condit iter stop satis reachabl state updat latch visit follow 342 transform foldstat reencod done choos latch l state encod l l l encod unchang l state variabl invert latch l remov exampl condit satis choos rst bit remov latch l new encod r condit condit state merg given transform transform remov regist l set ae proof let l 2 r let l l shannon expans rl fact sinc condit r l final l j 6 similarli l algorithm implement directli 10 11 reachabl state updat follow 1 suoecient necessari condit inria latch optim circuit gener highlevel descript 13 35 comment algorithm must emphas select algorithm heurist focu primarili tradit logic optim metric goal explor latchlog tradeoo instead ffl maintain initi exist logic structur extent possibl reaeect structur given highlevel descript ffl use metric relat perform algorithm size e logic control tri overli pessim logic synthesi ffl leav logic optim exist tool special purpos heurist import heurist describ relat dont care condit select e case actual set combin function use singl one set aris use unreach state dont care condit indic choic descript e function exampl singlelatch algorithm function satis r l would correct experi dioeerent choic found function small enough degre aeexibl use level furthermor sinc aris sole reachabl state set inform use instead subsequ logic optim mani heurist employ select latch minim bdd minim implement optim algorithm perform etc focu nding good implement explor reason subset latchlog tradeoo given avail tool stateoftheart bdd technolog logic optim etc design domain rather attempt implement exact algorithm thoroughli test larg set heurist whose nal valu dioecult measur test number heurist especi select e choic function implement reaeect result experi similar algorithm note 2by1 gener singl latch remov algorithm gener replac 3 regist 2 etc found success gener improv result suoecient justifi rapidli increas cost note nbyn1 algorithm describ gener 2by1 complet singlelatch algorithm complet nish singl latch remov maintain reachabl state set l claim made remov sever latch criteria transform 2by1 complet may possibl two latch replac one latch addit combin logic replac algorithm similarli nbyn1 algorithm complet 4 implement result experi shown nding good latch encod perform optim dioecult problem yet import one encod strongli eoeect subsequ optim know log 2 jrj encod usual impli exorbit combin logic given particular encod predict size combin logic intuit appli tradeoo number latch perform veric algorithm rr nsigma2943 14 ellen sentovich horia toma grard berri aim implement develop tool allow us make estim start point combin optim hardwar softwar design veric two dioeerent metric impli need dioeerent strategi combin latch remov logic optim 41 implement implement program remlatch use tiger librari cmt93 contain bdd packag reachabl state comput implement latch remov algorithm berkeley si environ ssl 92 perform combin logic optim use mainli two script logic optim si fast less robust one combopt expens one includ eg fullsimplifi blifopt actual logic cost estim liter count si comput cost regist term liter vari depend target implement found reason measur hardwar softwar produc implement optim rst strategi orient hardwar softwar implement basi latch remov case singlelatch2 cost function bound size support bdd logic replac latch transit bdd logic costli found bdd support size best measur control blowup oppos guess base liter count recal singlelatch algorithm actual reduc size c overal logic cost use postsynthesi measur liter count vari littl see section 42 experi observ attract congur discov even circuit larg intermedi bdd gener case subsequ logic optim success reduc implement size reason iter singlelatch2 relax cost condit continu 2by1 foldstat algorithm expens term addit logic 2by1 necess perform migrateto0 add signic logic prohibit use nbyn1 hardwar softwar implement 412 strategi 2 veric optim second strategi orient improv time taken vericationbas algorithm experi demonstr reduc number latch posit eoeect perform veric techniqu bdd reachabl state decreas size size combin logic grow slowli reason primarili number latch strong eoeect bdd size two bdd variabl per latch fsm veric thu strategi use singlelatch1 heurist maxim number remov latch follow iter 2by1 complet latter appli altern logic optim ensur success nite state machin reason size result phase encourag mainli suoecient control addit logic use blifopt script largest circuit cours possibl use combopt script logic grew quickli consequ restrict number latch remov nonetheless abl reduc latch improv veric time abl perform optim previous explor topic handl larg circuit section 5 413 strategi 3 explor goal third strategi minim number latch studi behavior algorithm properti nal circuit interestingli abl almost case reduc inria latch optim circuit gener highlevel descript 15 circuit state reg exact single1 minimum s400 8865 21 s526 8868 21 19 19 14 tabl 1 singlelatch1 vs exact singl remov number latch log 2 jrj 1 give indic power algorithm addit found larg exampl remain reasonablys even number latch decreas dramat report extens maximum latch remov compar strategi section 42 414 control logic size alreadi tailor algorithm nd state pair easi merg reencod therebi minim modifi reach state set function determin necessari comput implement logic start bdd new logic must transform logicg represent two place control size introduc logic rst keep bdd size small goal use algorithm tiger bdd packag creat logic bdd linear number bdd node second use formula e logic directli implement function logic gate comput function bdd substitut bdd result creat logic gate techniqu increas number level circuit must use caution 42 result rst set test iscas89 sequenti test benchmark use comparison exact singl latch algorithm ln91 result shown tabl 1 s444 result exact algorithm better runtim comparison would fair implement exact algorithm author algorithm ran second isca benchmark compar favor result ln91 implement exact algorithm ran hour smallest esterel exampl benchmark use synthes esterel v5 compil simpli test program other larg industri design tcint renault snecma sequenceur trapp particularli larg interest exampl two possibl start point design gener directli esterel compil manag initi implement term encod logic far mani redund regist case aris exampl initi combin cycl design causal causal analysi program sbt96 gener initi acycl implement directli bdd thu huge term logic eg trapp tabl 2 initi circuit compar minimumlatch remlatch result optim combopt obtain close minimum number latch exampl logic increas remain reason mani case decreas due remov mani simpli redund latch gate fact sequenceur tcintnocount trapp report minimum number latch logic increas exorbit eg tcintnocount obtain 9latch version 11826 liter sequenceur 59latch version 600000 liter cpu time report tabl 3 experi run dec alpha 200233 station rr nsigma2943 ellen sentovich horia toma grard berri initi remlatch circuit state min reg lit reg lit abc 4 12 renault runner 6 5 5182 13 sequenceur tcintnocount 19 20 310 9 90 1036 26 328 trapp 53 154 135718 tabl 2 initi version vs minimumlatch version circuit reachablest singl 2by1 merg fold abc 03 07 09 11 13 abcdef 12 33 35 37 39 control 09 14 16 18 20 controlecount 45 58 64 68 71 renault 65 122 146 156 169 runner 546 620 683 755 761 sequenceur 12706 26789 34027 36307 snecma 453 672 697 705 712 tcint 1336 2381 2500 2505 2528 tcintnocount 196 761 819 829 841 trapp 2459 4064 5711 7335 8961 tabl 3 cpu second dec alpha remlatch novasi circuit reg liter reg liter state abc 4 111 4 197 control 5 626 5 172 23 controlecount tcintnocount 26 313 8 7692 231 traoec 5 tabl 4 remlatch minimumlatch vs novasi time cpu second tabl show seri cumul time run algorithm success begin reachabl state comput progress add time algorithm runtim remain order magnitud initi reachabl state comput note tcint mergest condit satis immedi run quickli tabl 4 report minimumlatchblifopt result versu obtain combin stategraph extract exact state minim state assign nova logic optim si si rug script blifopt tcint exampl actual run latch remov optim obtain implement could extract state transit graph still except control circuit novasi combin perform much wors case abcdef initi nova circuit larg run optim even though circuit gener esterel one case equival state found aoeect minimum number latch give indic lose much explicitli consid equival state strategi inria latch optim circuit gener highlevel descript 17 blifopt bestremlatch circuit reg lit reg lit renault 23 166 37 507 28 497 runner 6 5 29 198 15 198 tcint 19 20 50 241 38 237 tcintnocount 19 20 47 197 38 194 sequenceur trapp 53 154 20 1193 tabl 5 blifopt vs bestremlatch2503504508 singledat sissingledat figur 5 graph 1 latch vs liter tabl 5 compar best logic optim result obtain appli blifopt initi circuit best remlatch result obtain combin latch remov optim small exampl abl reduc number latch minimum thorough explor possibl tri mani combin latch remov optim algorithm strategi discuss section 3 41 reaeect experi larger le couldnt obtain minimum due size encod logic theoret limit algorithm instead use strategi similar success small exampl number liter compar despit fact remlatch must add encod decod logic furthermor number latch much lower sequenceur trapp signic logic optim done without rst remov latch present novel result exampl graph figur 5 show evolut latchliter tradeoo one exampl applic standard strategi exampl behav similarli observ rst number liter remain almost constant singl latch remov recal c actual rr nsigma2943 ellen sentovich horia toma grard berry579111315 figur graph 2 veric time vs number latch reduc case 2by1 algorithm logic tend increas quickli still success reduc logic continu 2by1 except sequenceur logic size must alway care monitor similar phenomenon observ applic migrat fold graph figur 6 show evolut cpu time selfver one exampl number latch decreas best point 15 latch obtain singl 2by1 without iter 2by1 complet exampl behav similarli 5 futur work rst goal use result work preprocessor improv logic optim critic point sinc circuit produc causal analysi larg dioecult cope experiment work indic partit beyond e improv result stage next step exploit particular properti esterel program includ esterel relat form dont care condit circuit structur particular esterelgener implement cost function base structur analysi could improv veric time also allow good tradeoo logic optim import larg design exploit given natur circuit structur hardwar implement use fpga explor increas number latch via retim improv critic path fact retimingbas techniqu could use direct stage ie reduc number latch reduc critic path increas new latch acknowledg work support part nation scienc foundat grant int9505943 french geni mesr inria project inria latch optim circuit gener highlevel descript 19 r new idea symbol manipul finit state machin optim control synthesi use esterel structur approach state space decomposit approxim reachabl analysi optim state assign finit state machin state assign problem sequenti machin exact redund state regist remov base binari decis diagram retim resyn thesi optim sequenti network combin techniqu increment fsm reencod simplifi veric symbol travers construct analysi cyclic circuit si system sequenti circuit synthesi sequenti circuit design use synthesi optim detect equival state variabl finit state machin veric nova state assign finit state machin optim twolevel logic implement tr sequenti circuit design use synthesi optim structur approach state space decomposit approxim reachabl analysi construct analysi cyclic circuit ctr ellen sentovich horia toma gard berri effici latch optim use exclus set proceed 34th annual confer design autom p811 june 0913 1997 anaheim california unit state andrew seawright wolfgang meyer partit optim control synthes hierarch highlevel descript proceed 35th annual confer design autom p770775 june 1519 1998 san francisco california unit state yunjian jiang robert k brayton softwar synthesi synchron specif use logic simul techniqu proceed 39th confer design autom june 1014 2002 new orlean louisiana usa priyank kalla maciej j ciesielski perform driven resynthesi exploit retiminginduc state regist equival proceed confer design autom test europ p125e januari 1999 munich germani hahnsang kim thierri turletti amar bouali epspectra formal toolkit develop dsp softwar applic theori practic logic program v6 n4 p451481 juli 2006 stefano quer gianpiero cabodi paolo camurati luciano lavagno ellen sentovich robert k brayton verif similar fsm mix increment reencod reachabl analysi combin check formal method system design v17 n2 p107134 oct 2000 klau winkelmann formal method design embed systemsth sacr experi formal method system design v19 n1 p81110 juli 2001