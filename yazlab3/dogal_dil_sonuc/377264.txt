local encod transform optim obddrepresent finit state machin order binari decis diagram stateoftheart represent switch function order keep size obdd tractabl heurist dynam reorder algorithm appli optim underli variabl order finit state machin repres obdd state encod use addit optim paramet paper analyz local encod transform appli dynam first investig potenti reencod techniqu propos use xortransform show transform suitabl among set encod transform present theoret framework establish new optim techniqu obdd b introduct order binari decis diagram obdd introduc bryant bry86 provid effici graphbas data structur switch function main optim paramet obdd underli variabl order order find good order two techniqu appli far use heurist tri exploit structur circuit represent see eg mwbs88 dynam reorder techniqu rud93 unfortun mani applic particular field sequenti analysi two optim techniqu obdd reach limit henc one essenti problem logic synthesi verif find new techniqu minim obdd applic obdd use repres finit state machin obddsiz depend variabl order also state encod fix state encod mani finit state machin whose obddrepresent larg wrt variabl order atb94 therefor relationship obddsiz state encod becom increas interest see eg qcc import relationship underlin recent idea appli heurist state reencod techniqu speed verif process similarstructur finit state machin qcc underli gener problem effort follow given obdd nextstat output function finit state machin one interest inputoutput behavior machin far intern state encod exploit minim obddsiz approach target appli local encod tran format ie transform involv limit number encod bit proceed fmcad96 lnc support dfggraduiertenkolleg mathematisch optimierung transform interpret reencod symbol state aim minim obddsiz iter applic local transform advantag approach cost appli transform still manag paper structur follow begin recal import definit point principl potenti state reencod wrt obddsiz section 4 analyz advantag local encod transform section 5 propos applic xortransform show transform promis among set encod transform end paper describ implement transform give first experiment result illustr posit impact present idea preliminari 21 finit state machin finit state machin q set state input alphabet output alphabet output function q 0 set initi state usual compon state machin assum binari encod let p number input bit n number state bit number output bit particular function ib n theta ib p ib n function ib n theta ib p ib q 0 subset ib n 22 binari decis diagram order binari decis diagram obdd bry86 root direct acycl graph repres switch function obdd two sink node label 1 0 intern node label input variabl x two outgo edg label 1 0 diagram 1edg indic solid line 0edg dot line linear variabl order place input variabl variabl occurr obddpath consist order obdd comput switch function f ib n ib natur manner assign input variabl x defin uniqu path graph root sink label sink defin valu function input obdd call reduc contain vertex v 0edg 1edg v lead node contain distinct vertic v v 0 subgraph root v v 0 isomorph wellknown reduc obdd uniqu represent switch function f respect given variabl order bry86 size obdd number node sever function repres multiroot graph call share obdd follow nextstat output function repres share obdd 23 transit relat finit state machin characterist function transit relat defin 1in henc function comput valu 1 tripl x state machin state x input e enter state variabl x call currentst variabl variabl call nextstat variabl 3 motiv potenti reencod order demonstr much size obddrepresent depend choic state encod let us consid autonom counter finit state machin simpl structur exampl 1 autonom counter see exampl gdn92 2 n state q autonom ie inputindepend finit state machin ffiq figur 1 autonom counter ae oe ae oe ae oe ae oe ae oe transit inputoutput follow theorem show almost encod autonom counter lead exponentials obdd even optim variabl order theorem 1 let en denot number nbit encod autonom counter 2 n state lead share obdd size 2 n n wrt optim variabl order let denot number possibl counter encod ratio enan converg zero n tend infin proof theorem found appendix base idea ll92 classic count result shannon sha49 analog result establish characterist function transit relat obddsiz definit 2 encod transform shortli call reencod biject transform given state encod new encod exampl see figur 2 state encod bitstr c 2 ib n new encod aec figur 2 encod transform aec origin new state encod encod q3 10 10 10 new 11 modif intern state encod modifi inputoutput behavior state machin machin new encod denot encod nextstat function output function set initi state comput follow transit relat reencod machin 0 obtain transit relat follow lemma 3 let x characterist function transit relat characterist function 0 x transit relat 0 ae therefor obtain x substitut proof lemma consequ follow equival ae exampl 1 ctd larg potenti reencod techniqu demonstr exampl autonom counter exist encod transit relat autonom counter 2 n state n encod bit 5n gamma 1 node tm96 even variabl order fix x henc given encod finit state machin exist reencod lead obdd linear size accord theorem 1 encod lead obdd exponenti size gain origin obdd obdd suitabl reencod exponenti case aim find suit reencod lead small obddsiz previou section shown reencod may larg impact obddsiz possibl obdd becom much smaller case badli chosen reencod obdd could even becom much larger situat compar problem find good variabl order obdd chang variabl order obdd graph may becom much smaller best case much larger worst case sensit main reason hard find good reencod good variabl order effect construct good variabl order turn effici strategi base local exchang variabl present best strategi find good variabl order dynam base sift algorithm rudel rud93 ps95 main principl algorithm base subroutin find optimum posit one variabl variabl remain fix subroutin repeat variabl two main reason strategi work effici bound size alter one variabl x move anoth posit obdd size obdd chang arbitrarili much particular explod blw95 shown follow theorem theorem 4 let p obdd variabl x move later posit variabl order size result obdd p 0 satisfi variabl x move earlier posit variabl order size result obdd p 0 even satisfi relat practic studi shown case result size even far worstcas estim henc applic mention subroutin keep size obdd manag howev bound size alter subroutin mean optim potenti limit iter subroutin allow minim obdd effect continu procedur move variabl x differ posit order work continu process variabl origin new posit x involv node label remain variabl remain untouch particular time complex oper small x move adjac posit increas number variabl origin new posit x variabl order case reencod situat analog seem hard find right global reencod wherea promis combin iter oper restrict local effect approach construct local reencod ae ib n ib n keep bit fix ie ae vari small number bit particular vari 2 bit speak twobit reencod case follow worstcas bound synthesi substitut obdd obdd remain polynomi exampl 2 exchang variabl reencod ae follow follow definit show case j case j defin obvious exchang variabl reencod effect nextstat function exchang state variabl x x j variabl order 2 n possibl encod transform n gener iter applic transform type invers map ae gamma1 equat 1 affect size result obdd map caus renam two function note transform exchang encod two fix state may seen local oper although transform seem simpl 5 xortransform propos xortransform transform local reencod oper two bit definit 5 xortransform ae ij 1 short exampl see figur 3 figur 3 xortransform q 1 7 q 1 phi q 2 origin new encod encod q1 q2 q new inde xortransform provid solid basi design effect reencod due follow fact 1 number possibl reencod gener iter applic xor transform much larger number possibl variabl order thu xortransform consider enlarg optim space hand number reencod much smaller number reencod make possibl keep search space manag 2 size influenc transform bound reason way like case local chang variabl order 3 precis analysi even show xortransform contain asymmetri movement one variabl variabl order name bound effect transform x 7 x phi x j depend posit x x j variabl order 4 xortransform fact new possibl reencod two variabl 5 xortransform implement effici like exchang two variabl order follow subsect prove statement 51 enumer result follow combinatori statement character size optim space provid use xortransform lemma 6 1 let tn number possibl encod transform gener iter applic xortransform hold 2 quotient tn number possibl encod transform converg zero n tend infin 3 let vn 2n denot number possibl variabl order transit relat autonom finit state machin n state bit fraction vntn converg zero n tend infin statement 3 say case autonom state machin much encod transform gener xortransform variabl order transit relat relat also hold number input bit fix number state bit becom larg proof 1 obvious xortransform regular linear variabl transform field zz 2 moreov xortransform provid gener system regular linear variabl transform therefor state encod obtain iter xortransform 11correspond regular n theta nmatric zz 2 number matric comput follow first row vector b 1 chosen arbitrarili zz n ith row vector b 2 n chosen arbitrarili 2 possibl vector b prove claim number 2 statement follow relat 3 hold 1in particular number possibl encod transform gener iter applic xortransform smaller 2 exactli number n theta nmatric zz 2 follow previou proof exchang two state variabl simul iter applic xortransform 52 bound size alter let ae xortransform q 7 q phi q j invers transform defin ie effect aeffia gamma1 delta equat 1 split two part 1 substitut currentst variabl x x phi x j 2 replac function ffi matter two step execut first lemma 7 let p obdd n obdd applic xortransform q 7 q phi q j follow hold upper bound immedi follow fact substitut obdd p 2 one variabl obdd p 1 lead obdd size osizep 1 oper p 1 phi p 2 lead obdd size osizep 1 lower bound suffic observ case transit relat currentst variabl nextstat variabl substitut lead result p p 0 origin reencod obdd transit relat respect 53 stronger bound refin analysi xortransform use follow theorem sw93 particular refin analysi substitut variabl x obdd theorem 8 reduc obdd repres f variabl order x contain mani x node differ function f ae depend essenti x ie f otherwis 2 let k number node label x k obdd p k number node label x k obdd p 0 result transform theorem 9 size obdd wrt variabl order x applic substitut x 7 x phi x j bound proof theorem found appendix appli idea blw95 local chang variabl order analyz corollari 10 let p obdd p 0 result obdd substitut x 7 analog behavior xortransform local chang variabl order recommend use xortransform optim obdd size xortransform x 7 x phi x j visual shown figur 4 let b two subobdd whose root children consid path x j x path contain 0edg x j subgraph root x remain unchang instead path contain 1edg x j 0 1successor x node exchang modif prevent subgraph isomorph new subobdd root x k node figur 4 mutat x 7 x phi x j x path along 0edg x j remain unchang b path along 1edg x j 54 gener twobit reencod effect twobit reencod split twopart substitut two variabl x x j function replac two function function variabl substitut impact function depend essenti x x j wherea function replac affect function ffi next tabl show reencod induc biject obtain combin maxim one xor transform exchang variabl transform ident henc besid exchang variabl transform mere xortransform need produc twobit reencod write twobit reencod induc f ae f 22 substitut x 7 x affect size obdd x phi x 24 transform effect wrt obddsiz combin exchang variabl transform xortransform ident oper moreov 24 transform combin two basi transform suffic implement aspect section describ implement xorsubstitut x 7 x phi x j effici start point consider local chang variabl order order modifi variabl order obdd iter exchang variabl adjac level sinc exchang adjac variabl local oper consist relink node two level done effici shown figur 5 order move variabl x behind arbitrari variabl x j order exchang adjac variabl iter figur 5 exchang two neighbor variabl level exchang case xoroper adjac variabl x x j proceed analog level exchang figur 6 show case x j direct successor x order case x direct successor x j order work analog x x j adjac would cours help could simul substitut sequenc like x 7 x phi x straightforward idea work would requir oper intermedi step influenc two adjac level figur perform x 7 x phi x j two neighbor variabl x x j r h g method work slightli expens exchang two nonadjac variabl follow first shift variabl x new posit order adjac x j perform xoroper shift variabl x back old posit techniqu retain local oper node label x k influenc whose posit order x x j 6 fsmdescript profit xorreencod principl applic xortransform restrict use obdd underli data structur also appli data structur boolean function howev strong relationship xortransform local chang variabl order like case obdd alway transfer represent demonstr effect ofdd order function decis diagram ofdd ksr92 modif obdd seem compact arithmet function node v label x obdd repres shannon decomposit wherea node v label x ofdd repres reedmul decomposit decomposit function g h independ x function repres subgraph root two successor node v shown blw95 local chang variabl order effect ofdd like obdd particular exchang two variabl x x j order affect node obdd resp ofdd label variabl whose posit order x x j observ justifi notion local chang proof theorem 9 follow xortransform obdd also pleasant local properti howev spite fact reedmul decomposit seem oper well xortransform substitut local properti like case obdd figur 7 ofdd x1 prove statement consid ofdd figur 7 repres function function independ x function f 0 henc must exist node ofdd f 0 repres function h phi r phi h r arbitrari function substitut oper x 7 x phi x j local properti howev phioper polynomi oper ofdd result substitut remain polynomi tight relationship reencod techniqu specif obddvari follow gener set concept domain transform propos manipul switch function bms95 fkb95 correspond variant obdd call tbdd follow show encod transform also interpret tbddtransform ib switch function let ib n ib n biject map tbddrepresent f obddrepresent f ffi ffi denot composit function turn everi reencod function ae defin transform within tbdd concept howev obdd nextstat function reencod machin reencod function ae isomorph aetbdd obdd reencod machin transform ae gamma1 also involv see equat 1 section 3 7 experiment result section present first experiment result extend optim techniqu obdd built routin top obddpackag long use iscas89 benchmark circuit s1423 s5378 s9234 larg number state bit also form set exampl rs95 optim run consist three phase first appli rudel sift algorithm rud93 find good variabl order minim base xortransform perform final sift appli reestablish suitabl variabl order tabl show obtain share obddsiz nextstat function comparison size obtain without minim xortransform without circuit state bit xor xor minim base xortransform work follow preprocess step comput promis pair j xortransform heurist criteria consid pair j promis 1 nextstat function nearli equal support 2 variabl x x j appear nearli function long improv possibl best xortransform among pair appli order avoid expens comput step variabl substitut x 7 x phi x j yield good intermedi result must admit experi run time significantli higher run time pure sift due nonoptim implement xortransform due larg number perform xortransform howev think intens studi differ strategi analog intens final quit success studi variabl order abl improv result far henc think experiment result underlin optim potenti xortransform effici implement xortransform construct effect minim strategi progress 8 conclus futur work propos analyz new reencod techniqu minim obdd particular propos xortransform shown transform fact new transform two state variabl transform certain case significantli enrich set basic oper optim obdd futur propos studi heurist choos right transform pair effici combin variabl reorder techniqu new propos tran format furthermor dynam applic new reencod techniqu travers finit state machin seem promis help reduc obddsiz set reach state also reduc effort imag comput 9 acknowledg wish thank stefan krischer jan romann anna slobodova fabio somenzi interest discuss mani valuabl comment r bdd variabl order interact finit state machin simul anneal improv variabl order obdd bdd minim truth tabl permut sequenti logic test verifi cation multilevel logic synthesi base function decis diagram obddrepresent gener boolean function logic verif use binari decis diagram logic synthesi environ variabl neighborhood increment fsm reencod simplifi verif symbol travers dynam variabl order order binari decis diagram synthesi twotermin switch circuit state encod obddsiz tr graphbas algorithm boolean function manipul sequenti logic test verif obddrepresent gener boolean function bdd variabl order interact finit state machin effici obddbas boolean manipul cad beyond current limit variabl neighborhood dynam variabl order order binari decis diagram linear sift decis diagram algorithm data structur vlsi design influenc state encod obddrepresent finit state machin ctr carla piazza alberto policr ackermann encod bisimul obdd theori practic logic program v4 n56 p695718 septemb 2004