normal form algorithm extend contextfre grammar investig complex varieti normalform transform extend contextfre grammar extend mean set righthand side nontermin grammar regular set studi motiv implement project grama provid c toolkit symbol manipul contextfre object grail regular object result gener known complex bound contextfre grammar nontrivi way specif introduc new represent scheme extend contextfre grammar symbolthread express forest new normal form grammar dot normal form new regular express algorithm copyright 2001 elsevi scienc bv b introduct 1960 extend contextfre grammar introduc base backusnaur form use abbreviatori notat made contextfre grammar easier write recent standard gener markup languag sgml 16 use similar abbrevia tori notat defin extend contextfre grammar document current extens markup languag xml 6 simplifi version sgml promot markup languag web instead html specif grammar document type definit dtd specifi use sgml develop led investig notion applic contextfre grammar could carri extend contextfre grammar appear consolid effort studi extend contextfre grammar right begin investig basic research support grant research grant council hong kong sar carri first second author visit hkust lerhstuhl fur informatik ii universitat wurzburg hubland d97074 wurzburg germani email albertinformatikuniwuerzburgd z dipartimento di matematica applicata e informatica universita ca foscari di venezia via torino 155 30173 venezia mestr itali email doradsiuniveit x depart comput scienc hong kong univers scienc technolog clear water bay kowloon hong kong sar email dwoodcsusthk problem extend contextfre grammar reduct normalform transform relat work directli motiv sgml issu see proof decid structur equival extend contextfre grammar 4 demonstr sgml except add express power extend contextfre grammar 17 current design manipul system toolkit grama extend contextfre grammar pushdown machin contextfre express extens grail 20 19 similar toolkit regular express finitest machin sult need choos appropri represent grammar machin admit effici transform algorithm well algorithm interest earlier result contextfre grammar obtain harrison yehudai 12 13 26 hunt et al 15 among other harrison chapter normal form transform 12 provid excel survey earli result cohen gotlieb 5 suggest specif represent contextfre grammar demonstr aid program variou oper first defin extend contextfre grammar use notion product schema base regular express separ paper 9 discuss algorithm impact base schema finitest machin sinc finitest machin regular express firstclass object grail use interchang expect grama next describ algorithm fundament normalform transform section 3 propos represent extend contextfre grammar regular express forest symbol thread discuss algorithm problem regular express tackl variou normal form close present section 4 brief discuss ongo investig notat terminolog treat extend contextfre grammar contextfre grammar righthand side product regular express let v alphabet defin regular express v languag usual way 1 25 kleen plu addit oper symbol denot null string extend contextfre grammar g specifi tupl n sigma sigma disjoint finit alphabet nontermin symbol termin symbol spectiv p finit set product schema nontermin sentenc symbol product schema form aea nontermin ea regular express contain emptyset symbol string fi 1 fffi 2 deriv string fi denot fact write fifi 1 fffi 2 languag lg extend contextfre grammar g set termin string deriv sentenc symbol g formal denot transit closur deriv relat even though product schema may correspond infinit number ordinari contextfre product known extend standard contextfre grammar describ exactli languag exampl see text salomaa 23 wood 25 denot size regular express e jej defin number symbol oper e denot size set also jaj measur complex grammat transform need defin size grammar two tradit measur size contextfre grammar gener extend contextfre grammar follow given extend contextfre grammar defin size jgj g x defin norm k g k g clearli norm realist measur grammar size take account size encod symbol grammar use size measur howev sinc extens result norm measur straightforward 3 normalform transform introduc notion express forest treebas represent set regular express appear righthand side product schema product schema righthand side repres express tree usual way intern node label oper extern node label symbol addit repres nontermin lefthand side product schema singl node label nontermin node also refer root express tree correspond righthand side fig 3 give exampl forest two regular express sinc extend contextfre grammar number product schema regular express repres grammar express forest tree forest correspond one product schema tree name correspond nontermin name avoid tree repetit problem add thread thread symbol x connect appear symbol x express forest 31 reachabl use recal symbol x reachabl appear string deriv sentenc symbol deriv ffxfi ff fi possibl null string standard contextfre grammar reachabl symbol easili identifi mean digraph travers precis construct digraph whose vertic symbol n sigma edg b b label extern node express tree name assum product schema contain theta theta aa theta theta theta theta theta theta omega omega omega omega j jj theta theta theta theta figur 1 express forest extend contextfre grammar product schema omit symbol thread clariti emptyset symbol depthfirst travers digraph start give reachabl symbol grammar time taken digraph construct travers linear size grammar nontermin symbol use deriv ff termin string set use symbol comput recurs follow comput b leb contain string termin symbol possibl null string use symbol symbol use lea contain string termin current detect reachabl symbol newli use symbol identifi formal induct process mark algorithm describ wood 24 contextfre grammar major differ previou work approach taken want obtain effici algorithm yehudai 26 design effici algorithm determin use contextfre grammar approach view gener algorithm explain mark algorithm assum one bit avail node express forest indic mark initi bit preorder travers forest follow bit node set zero unmark except node label kleen star symbol termin symbol nullstr symbolth bit node set one mark algorithm whenev node u mark use satisfi condit languag subtre root u contain string complet mark kleenestar node mark sinc subtre languag contain null string kleenestar node alway use complet initi mark bubbl mark tree propag phase follow repeatedli examin newli mark node follow newli mark node obtain newli mark node u pu us parent u root perform one follow action pu plu node pu mark mark pu pu dot node pu mark us sibl mark mark pu pu kleeneplu node mark pu pu kleenestar node alreadi mark u root node express tree nontermin symbol mark mark express tree nontermin symbol newli mark nontermin initi round mark appear express forest repeat propag phase bubbl mark newli mark symbol tree newli mark nontermin algorithm termin algorithm therefor number round begin round mark appear newli discov use nontermin discov previou round bubbl newli mark nontermin tree long round mark new node propag process repeat implement process effici construct begin round queue newli mark node note queue caten appear list first round algorithm repeatedli delet newli mark node queue use preced propag rule may also add newli mark node queue round termin queue empti observ node express forest visit twice dot node visit twice thu mark algorithm run ojgj time space recal grammar g reduc symbol use reachabl standard contextfre grammar reduc grammar first identifi use symbol select togeth correspond schema also reachabl formal identifi useless nontermin termin alway use first remov product schema g second remov product schema contain useless nontermin righthand side step ensur thread maintain correctli first step need remov product schema also reconnect thread symbol appear remov use travers schema identifi symbol remov appear appropri thread second step use thread useless symbol remov correspond product simpli replac useless symbol emptyset symbol remov thread appli emptyset remov algorithm regular express product schema thu obtain equival grammar next identifi unreach symbol g remov product schema unreach nontermin maintain thread correctli observ unreach termin symbol appear product schema unreach nontermin reachabl symbol appear product schema reachabl nontermin thu obtain g 0 g linear time summar result section follow theorem 1 let extend contextfre grammar repres express forest equival reduc extend contextfre grammar g construct g time ojgj jg repres express forest 32 nullfre form given reduc extend contextfre grammar determin nullabl nontermin one deriv null string use similar algorithm one use use section 31 algorithm take ojgj time given nullabl inform make given grammar null free two step first replac appear nullabl symbol regular express step take time proport total number appear nullabl symbol gwe use symbol thread fast access second transform product schema aea nullabl nullfre product schema 62 le 0 unfortun step take time o2 jgj worst case use typic textbook algorithm product schema nest dot subexpress operand dot produc null string replac dot subexpress f delta g transform version f produc null string note least doubl length dot subexpress similar doubl occur subexpress f g subexpress obtain exponenti worstcas bound note case occur standard contextfre grammar everi nontermin nullabl want howev obtain linear blowup size result grammar sinc nest dot express caus nonlinear modifi grammar remov nest dot express approach first suggest yehudai 13 26 standard contextfre grammarsh convert given grammar chomski normal form avoid dot problem take similar approach remov nest dot kleeneplu kleenestar subexpress product schema remov gener new nontermin product schema howev size result grammar linearli larger origin grammar replac dot kleeneplu kleenestar node express tree dot kleeneplu kleenestar ancestor new nontermin add new product schema grammar repeat local modif nest node exist exampl given product schema replac new product schema repeat transform b obtain repeat transform obtain ad say result grammar dot normal form size order origin size number nontermin increas size origin grammar reduc extend contextfre grammar repres express forest equival reduc extend contextfre grammar g dot normal form construct g time ojgj jg 0 j ojgj jn 0 j ojgj jp 0 j ojgj moreov g 0 also repres express forest appli simpl nullremov construct grammar g dot normal form produc new grammar size ojgj algorithm run time ojgj theorem 3 let reduc extend contextfre grammar dot normal form repres express forest equival reduc nullfre extend contextfre dot normal form construct g time ojgj jg 0 j ojgj jn 0 j ojn j jp 0 j ojp j moreov g 0 also repres express forest 33 unitfre form unit product product form ab transform extend contextfre grammar unitfre form three step first identifi instanc unit product second remov unitproduct instanc schema third last modifi schema add unitfre schema unitproduct instanc modifi schema discuss three step detail assum reduc null free extend contextfre grammar g also dot normal form identifi instanc unit product observ schema ea roottofronti path contain one dot kleeneplu node kleenestar node assum unitproduct instanc b ea ab aea immedi none bs ancestor dot node ancestor plu node one ancestor kleeneplu node identifi unit product carri preorder travers ea identifi roottofronti path satisfi necessari condit unitproduct instanc also nontermin frontier node step take ojea whenev travers meet kleeneplu node plu node continu travers correspond subtre meet dot node termin part travers eventu travers reach node label nontermin b occurr b correspond unit product overal run time first step ojgj second remov instanc unit product schema transform product schema aea product schema ae 0 defin new thread refer unit thread connect occurr nontermin correspond unit product schema thread construct identif step use second step furthermor identifi unit product determin nontermin set ua nontermin unit reachabl note ua may contain use set modifi product schema third step travers express tree frontier root particular follow path start node label nontermin correspond unit product access follow unit thread assum remov instanc b ancestor plu node possibl except one ancestor kleeneplu node remov unit appear kleeneplu subtre global transform kleen plu subexpress form f express forest idea behind global transform separ unit appear f nonunit appear symbol f sinc unit appear occur first f nonunit appear symbol appear subexpress node u kleeneplu node express tree make two copi us subtre r call ensur maintain thread except unit thread remov kleeneplu node reconnect r r remov unit appear nontermin b straightforward arriv node label b follow unit thread replac b bs parent bs sibl termin process occurr b case cover ab product case b parent therefor left temporarili empti express tree note b 6 sinc use time complex second step first step third last modifi product schema nontermin nontermin symbol unit reachabl includ new product schema result grammar size ojgj 2 quadrat blow sinc must make copi subtre give express tree algorithm take therefor ojgj 2 time theorem 4 let reduc nullfre extend contextfre grammar dot normal form repres express forest equival reduc dotnormalform nullfre unitfre extend contextfre grammar g construct g time ojgj 2 jg 0 j ojgj 2 ojgj moreov g 0 also repres express forest note ensur blow linear make multipl copi variou subtre mere provid link one copi distinct subtre approach take ojn space grammar g 34 greibach form normal form result contextfre grammar establish sheila greibach 10 1960 key result use multiplepath syntact analyz develop harvard univers time extend contextfre grammar greibach normal form product follow form termin symbol ff possibl empti string nontermin symbol transform extend contextfre grammar greibach normal form requir two giant step leftrecurs remov back left substitut recal grammar left recurs nontermin grammar string ff consid second step first assum given extend contextfre grammar factor nontermin string x lea either complet nontermin singl termin symbol straightforward factor grammar make grammar null free avoid possibl introduct unit product addit second step also assum grammar nonleft recurs sinc grammar nonleft recurs partial order nontermin left reachabl defin b leftmost deriv usual consid nontermin enumer whenev j j observ n alreadi greibach normal form sinc product form n 2 sigma convert nontermin one time ngamma1 1 convers conceptu simpl yet comput expens convert replac nontermin appear first posit string lea schema thu result schema e 0 greibach normal form abl carri substitut effici first convert schema ea first normal form express schema sum regular express begin uniqu symbol precis let use notat e instead ea simplic replac defin follow nm delta nm convers must equival regular express greibach normal form need replac first k term k k grammar left recurs first need make nonleft recurs use techniqu introduc greibach 11 investig detail hotz cowork 14 21 22 rediscov other 7 involv produc nontermin distinct subgrammar g left linear henc convert equival right linear grammar convers chang left recurs right recurs introduc new left recurs detail see wood text 25 import properti leftlinear subgrammar everi sententi leftmost deriv sequenc g mimick sequenc leftmost deriv sequenc sententi leftmost deriv sequenc one leftlinear subgrammar convert leftlinear grammar rightlinear grammar properti weaken mimic origin deriv sequenc sequenc sententi rightmost deriv sequenc rightlinear grammar new grammar equival g collect distinct rightlinear grammar one nontermin g modifi grammar longer left recurs appli back left substitut obtain final grammar greibach normal form well algorithm perform left recurs remov caus blow jn jjgj worst convert product schema first normal form caus addit blow jn jjgj use deriv de dx regular express e symbol x give new express f lf le deriv regular express introduc brzozowski 3 defin induct given schema ea obtain deriv symbol x 2 n sigma caten x deriv obtain one term first normal form sinc g null free deriv caus exponenti blow df dx dx transform g kleeneplu subexpress nest within kleen plu expressiona similar transform one use convers dot normal form modif ensur exponenti blow occur back left substitut caus worst case addit blow jn jjgj size greibach normal form grammar three oper take time proport size output grammar essenti transform greibach normal form take ojn worst case reason jn j 5 term first remov left recurs increas size grammar also squar number nontermin jn j number nontermin crucial size bound grammar obtain first normal form convers back left substitut howev reduc worstcas time space use indirect unitproduct remov rather perform back left substitut specif nontermin use refer schema techniqu give blowup jgjjn j 2 thu reduc complet convers time size ojn j 3 jgj worst case may also appli techniqu koch blum 18 suggest name leav unit product remov obtain greibachlik normal form moreov transform extend contextfre grammar dot normal form appear use techniqu avoid undesir blow grammar size current investig approach result present truli gener similar result contextfre grammar time space bound similar relativ grammar size novelti algorithm fourfold first introduc regular express forest symbol thread effici data represent contextfre grammar extend contextfre grammar believ represent new previous document represent cohen gotlieb 5 barn 2 simplist second demonstr indirect use referenc save time space nullproduct remov back left substitut algorithm although use techniqu novel context well known techniqu applic applic lazi evalu evalu demand third introduc dot normal form extend contextfre grammar play role similar normal form standard contextfre grammar fourth gener leftlinear rightlinear grammat convers extend grammar current investig whether obtain greibach normal form effici whether improv perform unitproduct remov would like mention applic regular express forest thread first reduc use determin nullabl determin given extend contextfre grammar replac everi appear everi termin symbol null string give g nontermin g use nullabl g 0 second use algorithm determin length shortest termin string gener nontermin symbol idea replac appear termin symbol integ 1 appear null string 0 repeatedli replac node label two integ children minimum two integ node label delta two integ children sum two integ node label 0 root valu requir length use gener algorithm comput smallest termin alphabet termin string deriv nontermin ll1 first follow set last care reader observ spaceeffici algorithm unit freeness greibach normal form produc output grammar repres express foreststhey repres set express dag direct acycl graph dag mani root nontermin surprisingli roottofronti travers yield tree sinc reduc space share common subtre among tree underli express forest clearli may also share common subtre within origin tree express forest although know practic comput would benefit share current investig complex transform discuss given collect express dag represent extend grammar although collect dag dag dag deal three properti first travers root node yield tree correspond product schema second mani root nontermin third dag thread reason call collect express dag dagwood 1 r theori pars exploratori step toward grammat manipul packag grampa deriv regular express structur equival extend contextfre extend e0l grammar list structur form grammar syntact analysi w3c web page xml easi proof greibach normal form system manipul polynomi given straightlin program transit diagram system normal form tran format new normal form theorem contextfre phrase structur grammar simpl proof standardform theorem contextfre grammar introduct formal languag theori elimin null rule linear time iso 8879 inform processingtext offic systemsstandard gener markup languag sgml sgml except greibach normal form transform revisit grail engin automata c grammar transform base regular decomposit contextfre deriv gener greibach normal form transforma tion formal languag theori comput theori comput complex grammar languag problem tr easi proof greibach normal form formal languag italicgrailital c librari automata express dagwood deriv regular express new normalform theorem contextfre phrase structur grammar list structur form grammar syntact analysi theori comput introduct formal languag theori theori pars translat compil sgml except greibach normal form transform revisit complex grammar languag problem grammar transform base regular decomposit contextfre deriv ctr marcelo arena leonid libkin normal form xml document proceed twentyfirst acm sigmodsigactsigart symposium principl databas system june 0305 2002 madison wisconsin frank neven attribut grammar unrank tree queri languag structur document journal comput system scienc v70 n2 p221257 march 2005 marcelo arena leonid libkin normal form xml document acm transact databas system tod v29 n1 p195232 march 2004