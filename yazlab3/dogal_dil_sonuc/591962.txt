search global search algorithm report case studi assess use advanc knowledgebas softwar design techniqu programm particip techniqu develop use kid approach algorithm design construct two global search algorithm rout baggag transport net construct second algorithm involv extend kid knowledg base experi case studi lead us integr approach spiral prototyp model softwar engin discuss way deal incomplet design knowledg b introduct advanc techniqu support softwar construct wide accept practition success use softwar engin involv develop get onsit train inventor experi gain knowledgebas method integr practic softwar engin process report experi made applic approach algorithm design underli kestrel interact develop system kid 14 construct control softwar simplifi baggag transport system airport paper use term kid approach denot concept implement system kid approach appli number case studi kestrel institut par ticular use design transport schedul algorithm impress perform 15 16 wish find abl use method base avail publi use implement system kid case studi cation produc satisfactori result reason effort second goal work studi knowledgebas approach integr overal softwar engin process case studi chose nontrivi abstract practic relev problem make experi transfer realist applic follow elabor two issu process model found use support applic kid approach merit shortcom encount explor altern solut transport schedul problem integr spiral prototyp model softwar engin 2 kid approach develop first formal specif prototyp implement parallel prototyp serv valid specif improv understand problem domain kid approach global search algorithm construct special global search theori abstractli describ shape search tree set algorithm case studi wish explor two altern search idea found theori suitabl first one literatur second one could realiz document design knowledg lead us develop new global search theori need slightli modifi special procedur section 2 introduc baggag transport problem section 3 provid brief review global search theori kid approach present integr process model section 4 design two transport schedul describ section 5 optim sketch section 6 also discuss result algo rithm summar experi approach section 7 baggag transport schedul wish develop control transport baggag airport piec baggag transport checkin counter gate gate gate gate baggag deliveri point control must schedul baggag network way piec arriv destin due time simplifi problem consid onlin schedul continu flow baggag fed system checkin counter schedul baggag checkedin particular point time 21 domain model model transport net direct graph shown figur 1 checkin counter baggag deliveri counter gate switch repres node classifi three kind input node transport node output node checkin counter correspond input node switch transport node baggag deliveri counter output node sinc gate serv load unload airplan repres input output node edg graph model conveyor belt capac belt maximum amount baggag total weight carri time veloc time take carri piec start node gate g2 gate g1 gate g3 gate g4 deliveri d1 deliveri d2 checkin c1 checkin c2 ceckin c3 checkin c4 checkin c5 figur 1 transport network piec baggag describ weight sourc destin node due time sourc destin input output node respect weight due time posit natur number due time specifi rel begin transport process 22 problem specif task assign piec baggag rout network lead sourc destin node due time keep thing sim ple requir acycl network without depot function transport plan g graph acyclicg return domqfeas pathg b sndqbg figur 2 problem specif transport node thu way resolv schedul conflict aris capac conveyor belt exceed delay baggag sourc node rout therefor pair delay path network plan map piec baggag rout attempt find plan particular set baggag make sens exist feasibl path piec path p network g lead sourc destin node piec baggag b feasibl pathg b p pathg p 1 note requir punctual schedul exist wish find plan everi case punctual without delay baggag input node possibl thu defin cost function base criteria baggag deliv time baggag delay input node cost baggag time delay 1 ye ye 3 exampl imagin suitcas b 1 gate anoth one b 2 c 4 figur 1 weight 1 check flight start gate g 2 let transport time belt one time unit capac also one unit avoid exceed capac belt lead g 2 solut delay b 1 one time unit give us transport plan set problem specif shown figur 2 acycl graph g set baggag bs feasibl path graph interest plan q baggag schedul domq total amount baggag belt time exceed capac capac bound assign path feasi ble set select plan p minim cost 3 design global search algorithm basic idea algorithm design kid approach 12 14 repres design knowledg design theori theori logic character problem solv algorithm paradigm like divid conquer global search algorithm design consist show given problem instanc design theori follow briefli summar global search algorithm develop kid approach full account refer reader 13 14 31 design theori problem specif quadrupl hd r oi input domain r output rang function f synthes predic bool describ admiss input describ inputoutput behavior f henc f r solut p design theori extend problem specif addit function state properti function suffici formul schemat algorithm correctli solv problem global search theori figur 3 describ search optim solut respect cost function c basic idea split search space contain candid solut smaller one solut directli extract r type search space descriptor defin legal descriptor input x r 0 split describ search tree solut z ox z root r 0 x initi search space descend relat node given split direct subspac r input x solut obtain look singl node r search tree describ extractz r axiom gs3 satisfiesz r describ solut z contain search space r found finit effort must exist finit path search tree r search space z extract split defin sinc wish find global optim solut gs2 requir feasibl solut contain sort dr oper r satisfi r theta extract axiom gsc total order c function ix return function return figur 3 global search theori algorithm schema initi search space axiom gs0 gs1 ensur consid search space legal program shown bottom figur 3 provid schemat algorithm consist global search theori function f comput optim solut z given input x initi global search initi search space x actual search algorithm implement f gs minim solut directli extract input search space r one found recurs search space obtain split r necessari filter provid basi optim code gain instanti algorithm schema necessari filter phi use prune branch search tree contain solut satisfi implic r 2 32 algorithm design find global search algorithm given problem specif find search space descript r oper extract global search axiom ful fill kid approach done refer knowledg search strategi concret data structur formal librari gener global search theori 2 exampl theori enumer sequenc finit set enumer map finit set global search theori given problem construct special theori librari problem theori special problem theori construct verifi existenti quantifi 3 give us systemat way find global search theori problem hand way structur search tree express adapt b give us algorithm b instanc algorithm schema figur 3 gener algorithm ineffici high potenti optim exploit deriv necessari filter program transform data structur refin 4 process model present applic domain theori problem specif section 2 describ final result specif effort develop domain theori one major task complex time consum one kid approach much complex stem two requir demand domain theori must make precis inform usual incomplet sometim inconsist idea natur context problem must also formul aid imped subsequ design process consequ unlik satisfi domain theori built scratch observ led us integr kid approach prototyp spiral model softwar engin 2 one cycl develop sketch figur 4 three phase first concern establish enhanc domain theori second produc code third phase code theori test valid found use build first draft domain theori parallel prototyp earli phase shade gray figur 4 domain theori rich enough appli algorithm design knowledg design theori build prototyp enabl us get deeper understand problem use appendix 13 code prototyp valid test domain theori algorithm design optim specif valid theori valid domain applic test figur 4 process model essenti properti applic area help us build complet domain theori avoid deadend develop way domain model express data structur use properti state much influenc eas algorithm design carri thu seem one cycl design figur 4 may practic requir sever round refin domain theori formal notion smoothli fit design theori wish use one exampl baggag transport case studi way model delay rout cf section 22 earli version domain theori describ repetit input node path occurr input node denot delay one time unit forc us introduc predic character legal rout could use acycl graph model decid reformul theori make delay explicit theori becam much eleg design much easier process theori refin perpetu deriv filter optim code valid test phase also serv us valid code respect properti captur design knowledg put dispos kid approach 5 two way find transport plan look sort transport plan nat theta seqvertex suggest two strategi search solut schedul problem 1 domain extens start initi empti map success extend assign possibl delay feasibl path baggag 2 imag modif start map assign sourc node delay bag success modifi assign rout extend path increas delay strategi enumer feasibl transport plan kid approach search strategi provid librari gener global search ori algorithm design proce special one problem hand first condit 3 rb ra suggest match output domain problem specif one librari theori find candid special began algorithm design transport problem initi idea use imag modif strategi gener global search theori document kid librari 13 model imag modif instead found theori describ domain extens motiv us explor approach 51 domain extens global search theori gs finit map enumer map finit set u finit set f 7 gs finit map r 7 mapff fi 7 hu v iju 7 hu v r 7 setff theta setff theta mapff fi 7 hu v satisfi 7 extract 7 search space describ partit u two set map v complet map u v assign element v element split perform one assign pick arbitrari element b v respect extend 7 b find instanti type variabl gs finit map unifi output domain one transport plan ff 7 baggag rout special gs finit map transport plan construct verifi 3 theori ie must find express bs u v prove dommfeas pathg b sndmb predic map defin compar right hand side definit definit 1 feasibl path suggest use set u 7 bs special gs finit map use upper bound mdg bs delay make set rout finit thu ensur termin algorithm discuss termin section 7 sinc feasibl path baggag bs cf precondit transport plan figur 2 assign mdg bs sum time need travers feasibl path piec baggag appli substitut ff fi u v gs finit map give us global search theori transport plan r 7 setbaggag theta setbaggag theta plan 7hg satisfi 7 extract 7 result search strategi assign complet rout one piec baggag anoth without optim split assign arbitrari rout piec baggag complet plan extract test whether assign rout feasibl obviou way prevent infeas assign first place develop necessari filter instanti 2 fact capac bound monoton domain extens give us 52 imag modif global search theori document 11 13 14 support search map imag modif develop new theori purpos abstract concret schedul problem imag modif strategi sketch follow imag given map initi sched ule increas along variou degre freedom given rang type map suitabl successor relat element rang type use describ direct increas imag map idea formal gs parallel map 3 f 7 gs parallel map 7 mapff fi theta setfi theta fi r 7 mapff fi 7hmsi 7hmsi n r 7 mapff fi theta setfi theta fi satisfi 7 n hmsi8x 2 dommmx nx extract 7 n input map successor relat search enumer map domain imag extend along ie reflex transit closur domain must finit must nondens ensur gs3 hold relat antireflex ensur progress search note search space sort r contain map built far also relat necessari describ satisfi solut contain search space 521 data type driven special captur search idea gs parallel map want special theori transport plan problem turn correspond instanc 3 help much systemat find refer structur 3 x notat hx yi 2s rang type fi gs parallel map still desir develop global search theori specif structur rang type transport schedul newli develop theori suffici abstract applic broad rang problem solv dilemma propos special gs parallel map two step first step determin suitabl successor relat second step find substitut determin first find substitut type variabl ff fi transport problem get ff 7 baggag analyz rang type nat theta seqvertex find canon successor relat element base basic type compos know usual successor function natur number canon way extend sequenc append element analog lexicograph order pair construct successor relat extend either element pair thu defin hn substitut 5 3 simplif get capac section 51 easili determin substitut get map assign b bs nondelay path consist sourc node b like algorithm section 51 one work imag modif high potenti optim develop proce filter construct optim 6 optim result algorithm result instanti scheme figur 3 ineffici optim absolut necessari effici result code heavili depend adequ choic filter program transform import optim result algorithm introduct prioriti queue search space simplif often use predic capac bound also elimin common subexpress introduc analysi transport net respect input baggag elimin vertic lie feasibl path order search space use prioriti queue encod heurist determin node search tree consid next use one base cost total delay length path plan test run algorithm show despit optim perform still poor also reveal algorithm base imag modif factor two faster one base domain extens size theori program summar tabl 1 document line librari specif 490 domain theori 240 algorithm theori 350 implement 920 tabl 1 size theori program specif written specif languag spectrum 3 use exist librari basic spectrum specif natur number set sequenc direct graph other base modul domain theori compris 240 line algorithm extend domain theori 110 line schedul implement function languag opal 10 translat specif execut code optim produc 920 line code opal program code wellstructur highli reusabl implement share code facilit explor altern case studi requir effort approxim 9 person month spent one third time learn kid approach approxim 75 remain time devot build domain theori exist number approach algorithm design program synthesi eg 1 4 8 9 chosen kid approach case studi provid design step reflect signific design decis programm describ precis logic theori way good refer point softwar engin wish learn use howev use kid system want full control design process adapt need necessari transport schedul case studi relat research design transport schedul kestrel 15 16 studi schedul assign trip resourc like plane ship truck meet movement requir set trip fulli occupi resourc interv time ie load resourc extend trip furthermor trip chang avail sourc destin one trip becom sourc next one baggag transport ever load resourc continu chang baggag flow net sourc destin point resourc remain fix time anoth differ lie focu work sever year highli special theori transport schedul develop kestrel aim produc extrem effici schedul recent even led refin abstract global search theori 16 purpos case studi contrast studi far kid approach document literatur support programm particular experi approach design algorithm nontrivi problem process model step design global search algorithm special theori deriv fil ter appli optim program transforma tion provid clear separ concern design special determin basic structur search necessari filter exploit properti applic domain final program transform data type refin elimin redund code fuse filter basic search structur gain effici task correspond one cycl process model introduc section 4 thu model help programm focu activ particular task avoid introduc certain design idea wrong time develop earli attempt design algorithm section 52 tri introduc optim earli tri gener delay rout necessari total mess design first phase develop suffici complet applic domain theori avail abl complex part process found prototyp use understand problem domain techniqu guid theori develop remain establish domain theori hand kid approach well suit construct prototyp littl time support explor altern design termin global search theori use issu termin construct algorithm address lead us somewhat unnatur introduct upper bound mdg bs delay cf section 5 termin global search algorithm spoil two way may branch search tree infinit length may node infinit mani children 14 wellfound order introduc abstract global search theori prevent infinit chain splitoper kreitz 7 formal global search nuprl type theori 4 prevent infinit branch search tree use finit set maliz introduc wffilter prune infinit branch propos provid collect wf filter theori methodolog reason requir termin global search theori theori use section 5 enumer infinit number map still would appreci systemat way reliev programm deal termin onthefli deal incomplet design knowledg seen section 52 unlik knowledg express design theori fail support particular design idea although awar systemat support construct new theori kid still worthwhil stick approach develop new design theori describ desir search strategi abstract way 5 decid construct problem specif algorithm theori section 52 one step manual verifi abstract global search theori decis mainli due lack experi increas complex task consider led less effici algorithm seem unlik find practic com plete knowledg base softwar construct sy tem system design eas routin extens knowledg base 6 gener system architectur base notion strategi propos strategi modul clearli defin interfac system kernel new one integr system routin way system specwar 17 develop kestrel also seem allow modular easili extend knowledg base construct new global search theori nontrivi task deserv support approach shall appli routin start point may observ search strategi often seem deriv structur output domain r acknowledg would like thank david basin maritta heisel burkhart wolff fruit discuss klau didrich maritta provid comment draft paper r artifici intellig spiral model softwar develop enhanc requir design specif languag spectrum implement mathemat nuprl proof develop system ein fallstudi zur entwicklung korrek ter softwar steuerung einer gepackforderanlag tool support formal softwar develop gener ar chitectur deriv program develop program autom softwar design deduct approach program synthesi program languag opal kestrel interact develop system algorithm theori design tactic structur design global search al gorithm kid semiautomat program develop system transform approach transport schedul synthesi highperform transport schedul specwar formal support compos softwar tr