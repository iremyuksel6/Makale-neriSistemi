improv minmax aggreg spatial object examin problem comput minmax aggreg collect spatial object spatial object associ weight valu exampl averag temperatur rainfal area cover object given queri rectangl minmax problem comput minimummaximum weight among object intersect queri rectangl tradit queri perform rang search queri assum object index spatial access method minmax comput object retriev requir effort proport number object intersect queri interv may larg better approach maintain aggreg inform among index node spatial access method variou index path elimin rang search paper propos four optim improv perform minmax queri experi show propos optim offer drastic perform improv previou approach moreov byproduct work present optim version msbtree index propos minmax comput 1dimension interv object b introduct comput aggreg object nonzero extent receiv lot attent recent yw01 zmt01 pkz01 ztg01 formal gener boxaggreg problem dene given n weight rectangular object queri rectangl r ddimension space nd aggreg weight object intersect r paper examin problem comput min max aggreg boxmax spatial object object repres minimum bound rectangl mbr associ weight valu want aggreg rectangl also call box thu name boxaggreg sinc comput min symmetr follow discuss focu max aggreg moreov assum object index spatial access method sam like rtree variant comput scienc depart univers california riversid ca 92521 donghuicsucredu comput scienc depart univers california riversid ca 92521 tsotrascsucredu work ben support nsf grant iis9907477 eia9983445 depart defens gut84 bks90 srf87 boxmax problem mani reallif applic exampl consid databas keep track rainfal geograph area area repres 2dimension rectangl queri nd max precipit lo angel district databas may also keep track time interv rainfal case store 3dimension rectangl one dimens repres rainfal durat boxmax queri nd max precipit lo angel district interv 19992000 three approach toward solv boxaggreg queri straightforward approach simpli perform rang search sam index object comput aggreg object retriev readili avail solut requir eort proport number object intersect queri rectangl larg perform improv sam maintain addit aggreg inform jl98 lm01 pkz01 exampl aggreg rtree artre pkz01 rtree store aggreg valu subtre index record point subtre travers index aggreg inform elimin variou search path thu improv queri perform third approach use special aggreg index built explicitli comput aggreg question yw01 zmt01 ztg01 index maintain aggreg increment addit index usual rather compact sinc index actual data practic much smaller repres set provid best queri perform main contribut paper propos four optim improv minmax aggreg one optim kmax attempt elimin path index travers aggreg comput use either sam index object special aggreg index optim union boxelimin areareduct elimin resiz object mbr aect minmax comput thu appli special minmax aggreg indic present special aggreg index minmax rtree mrtree use four optim present experiment comparison among plain rtree ar tree artre kmax optim mrtree experi show drastic improv propos optim use byproduct research discuss special aggreg index msb tree yw00 optim appli boxelimin optim msbtree ecient solv minmax problem special case onedimension interv object origin version need frequent reconstruct rest paper organ follow section 2 discuss relat previou work section 3 identi special characterist boxmax problem present optim tech niqu section 4 summar mrtree section 5 present result experiment comparison section 6 appli one propos optim techniqu msbtree final section 7 provid conclus problem research relat work two variat boxaggreg problem depend whether object zero extent point object aggreg point object special case orthogon rang search receiv vast attent past 20 year eld comput geometri detail refer survey meh84 ps85 mat94 ae98 solut util variat rangetre ben80 follow multidimension divid andconqu techniqu databas eld jl98 propos r tree store aggreg result index aok99 propos select travers multidimension index problem select estim correspond count aggreg lm01 propos multiresolut aggreg tree mratre augment index record rtree aggreg inform point record subtre mratre also use select travers provid estim aggreg result result progress rene jl99 propos perform model estim perform index structur without aggreg data special case point aggreg problem work data cube aggreg olap applic data cube gbl96 thought multidimension array rkr97 propos cubetre storag abstract cube realiz use pack rtree ecient support cube groupbi aggreg ham97 address boxmax boxsum sum count avg queri data cube solut boxmax queri base store precomput max valu balanc hierarch structur solut improv ham97b solut boxsum queri base precomput prex sum aggreg rang cover smallest cell array solut improv gae99 ci99 gae00 specic gae00 propos dynam data cube best updat cost recent ccl01 propos dynam updat cube improv updat cost olog k u k u number chang array cell aggreg object nonzero extent yw01 present sbtree solv boxsum queri special case onedimension time interv sbtree extend multivers sbtree mvsbtree zmt01 ecient support tempor boxsum aggreg queri keyrang predic ztg01 address boxsum aggreg spatiotempor object furthermor yw00 present msbtree boxmax queri onedimension interv object artre pkz01 origin propos index spatial dimens spatial data warehous environ use solv boxsum boxmax queri spatial data nonzero extent artre rtree store index record aggreg valu object subtre sinc artre built support boxsum boxmax queri fulli optim toward boxmax queri artre use start point optim includ experiment comparison purpos also relat as90 answer window queri top pyramid data structur aggreg use existencenonexist imag featur visibl terrain data last spatialtempor data warehous environ pkz01b propos aggreg rbtree arbtre use rtree index spatial dimens record r rtree pointer btree keep histor data r 3 propos optim paper focu discuss max aggreg discuss min aggreg symmetr omit goal solv boxmax problem set object box valu given queri box q want nd maximum valu object intersect q assum object index treelik structur eg rtree object store leaf node mbr intern node contain mbr children use index boxmax queri answer perform rang search section propos four optim improv perform rst introduc notat indexleaf record entri internalleaf node tree given leaf record r let rbox rvalu denot mbr valu record respect given index record r let rbox denot mbr rvalu denot maximum valu record subtreer rchild denot child page point r 31 kmax optim artre rtree index record store maximum valu leaf record subtre queri box contain mbr index record valu store record contribut queri answer examin subtre omit howev note higher level artre index record larg mbr boxmax queri like stop higher level artre kmax optim extens keep constant number leaf object along index record even queri box contain mbr index record examin subtre may omit kmax optim along index record r store k object small constant subtreer largest valu among object subtre examin record r boxmax queri queri box intersect k maxvalu object r examin subtreer omit clearli kmax optim allow path omit index travers howev benet kmax queri perform provid free overal space increas sinc node store inform well updat time eort need maintain k object henc practic constant k kept small experi found larg improv queri time even small point next three optim appli index explicitli maintain minmax aggreg avoid confus call explicit index minmax index sinc minmax problem increment maintain tupl delet databas yw01 follow discuss assum appendonli databas ie spatial object insert databas never delet spatial object mbr obox valu ovalu insert databas obox accompani ovalu insert leaf record minmax index well howev describ insert may appli minmax index may caus exist mbr delet alter minmax index use r tree implement minmax index result appli four optim mrtree 32 boxelimin optim consid two leaf record need maintain minmax index sinc contribut max queri thu say becom obsolet due boxelimin optim insert object leaf index record r found obox contain rbox ovalu rvalu remov r minmax index r index record remov subtreer well optim reduc size minmax index sinc subtre may remov insert tradeo time updat minmax index overal space occupi index newli insert object may make obsolet one exist record dierent path root leav minmax index made compact obsolet record subtre remov howev may result expens updat process updat kept fast choos remov obsolet record met along insert path singl path sinc use r tree implement minmax index complex insert algorithm remain olog n n number mbr minmax index practic much smaller total number spatial object collect anoth choic choos c path remov obsolet record met along path c constant space occupi obsolet subtre reus 33 union optim boxelimin optim focus make obsolet exist record index union optim focus make obsolet object insert minmax tree first note mbr object insert minmax index exist leaf object index whose mbr contain larger valu insert safe ignor purpos minmax comput fulli implement test path may contain object check worst may check leaf object minmax tree better heurist use k maxvalu mbr new object contain k maxvalu mbr found along index node insert path smaller valu need perform insert moreov observ even mbr object insert fulli contain exist leaf object still might safe ignor case new object mbr contain union mbr sever exist object illustr gure 1 shadow box repres new object insert two rectangl repres two object alreadi minmax index sinc new object contain union two exist object smaller valu insert safe ignored7 figur 1 new object becom obsolet union two exist object implement techniqu index record r minmax index store 1 union denot runion mbr leaf object subtreer 2 minimum valu denot rlow object subtreer overal optim describ union optim insert object indexleaf record r found obox cover runionrbox ovalu rlowrvalu insert ignor moreov check whether maxvalu object store r cover obox valu smaller ovalu also make remain question optim store union leaf object index record worst union may need space proport number leaf object creat given index record limit space store approxim union particular store good approxim repres box mbr small constant import approxim aect queri time correct queri result approxim union cover area cover actual union may erron make obsolet new object approxim union complet cover actual union formal state problem follow denit 1 given constant set n box cover tunion dene set box 1 maxim ie exist anoth set box fa 0 satisfi rst condit cover larger space nd exact answer exhaust search algorithm twodimension case take 8t time clearli unaccept need nd ecient algorithm comput good approxim cover tunion order boxmax queri give correct result requir approxim cover tunion complet cover origin n box herebi propos log n algorithm algorithm coveredunionbox src1n number n given set n box src return approxim cover tunion src note algorithm use small constant c max tri 1 seed c box src whose area largest 2 initi set destin box dest empti 3 everi dimens 4 project src box dimens sort project end point array projd 12n 5 endfor 6 1 7 pick box b seed largest area cover union box dest 8 loop max tri time 9 dimens 11 tryextend b fals 12 endfor 13 b enlarg extend direct break 14 els b extend box largest area 15 endloop 16 add b set 17 endfor 18 return dest algorithm tryextendbox b dimens boolean posit given box b dimens boolean variabl posit denot whether b extend posit neg direct along dimens tri extend b return 1 posit true tri extend posit direct 2 find smallest number w projd larger project b dimens 3 tri extend b w dimens shrink dimens need make sure b cover union src box extens success area b grow 4 els 5 tri extend neg direct similar omit 6 endif 7 return b idea algorithm coveredunion pick box origin n box tri expand one much possibl choos th box 1 choos one largest area cover 1 box comput far expand chosen box tri expand along direct parallel axe trivial analysi show complex algorithm log n follow discuss term union mean approxim cover tunion 34 areareduct optim last optim propos dynam reduc box area object insert areareduct optim insert object index record r found runion intersect obox rlow ovalu reduc size obox subtract area cover runion insert lower level insert reach leaf object intersect new object equal larger valu area new object reduc accordingli box new object similarli reduc maxvalu object store index record r exist whose box intersect obox whose valu smaller ovalu optim reduc mbr object reduc part cover exist record tree larger equal valu henc correct minmax aggreg aect one benet optim overlap among sibl record tree reduc figur 2 show exampl two larg box repres two index record r 1 r 2 assum r 1 union equal mbr r 1 combin lightshadow dark shadow box repres object insert valu 8 object recurs insert subtreer 2 without appli areareduct optim r 2 box would need expand fulli contain new object hand appli optim lightshadow area subtract thu insert subtreer 2 much smaller box darkshadow area fulli contain r 2 box thu expans r 2 neededr2 min7 figur 2 areareduct optim help reduc overlap anoth benet areareduct optim help make new record obsolet exampl consid gure 2 possibl lower level subtreer 2 darkshadow area found obsolet sinc lightshadow area alreadi made obsolet r 1 due optim there need insert record note result box area subtract may set box rather singl box object insert may fragment sever smaller box optim one choic handl follow r tree srf87 approach ie insert everi small box separ copi choic increas space overhead anoth choic maintain list small box execut insert algorithm go tree small box may becom smaller obsolet eventu leaf level mbr smaller box insert note mbr larg origin box insert mani case much smaller 4 minmax r tree mrtree dynam diskbas heightbalanc tree structur two type page leaf page index page page size sinc mrtree base r tree page except root record least record leaf record form hbox v 1 v 1 valu record index record form lowi box child usual mean list b k maxvalu leaf object subtre index record sort decreas order valu b stand mbr v valu leaf object th largest valu union store box approxim tunion leaf mbr low minimum valu leaf object subtre algorithm boxmaxpag n box b valu v given tree node n queri box b run valu v algorithm return boxmax queri result subtre root n 1 everi record r n rbox intersect b 2 rv1 v 3 n leaf 4 5 els exist 1 k rb intersect b 6 let smallest one satisfi condit 7 rv v set 8 els 9 v boxmaxpagerchild b v 10 endif 11 endif 12 endfor 13 return v boxmax straightforward recurs algorithm nd boxmax box b call boxmaxroot page b 1 main dierenc algorithm rang queri algorithm rtree step 57 correspond kmax optim index record r algorithm check k maxvalu object store r intersect b need examin subtreer algorithm inserttre box b valu v given tree index box b valu v algorithm insert object b v 1 2 n root page 3 n leaf 4 everi record r n rbox intersect b 5 rbox contain b rv1 v 6 remov subtreer 7 els 8 everi rv v 9 modifi box subtract rb 10 endfor 11 rlow v modifi everi box subtract runion 12 endif 13 endfor 14 n zero record goto step 19 15 empti goto step 20 17 endwhil 18 optim leaf page similar step 4 13 omit 19 empti insert hmbr vi n 20 n root 21 n ow 22 splitn 23 els n ow 24 remov n reinsert record n tree n level 25 endif 26 adjust entri parentn point n 27 set n parentn 28 endwhil 29 n ow 30 split old root creat new root 31 els n one record n leaf 32 remov n set n child new root 33 endif gener insert algorithm follow singl path root leaf reorgan may follow path back root optim appli go tree step 5 6 correspond boxelimin optim remov subtre newli insert object larger valu spatial contain subtre step 8 11 correspond areareduct optim tri reduc size box insert step 14 deal rare case subtre index page n becom obsolet due insert object may occur n root page sinc otherwis index record point n parent page would obsolet n chanc examin case algorithm result tree singl page singl record step 15 mean object insert obsolet recurs insert lower level need step 16 choos child page recurs insert use algorithm rtree choosechild procedur discuss detail step 20 28 path page examin backward way split owe page reinsert entri owe page ident approach rtree plu mainten addit inform kept along index record step 29 33 handl owund ow root page consequ tree height may increasedecreas perform compar perform propos mrtree plain r tree artre artre kmax optim denot artre kmax algorithm implement c use gnu compil program run sun enterpris 250 server machin two 300mhz ultrasparcii processor use solari 28 page size 4kb space limit report perform mrtree number maxvalu object kept index record number box use repres union similarli ar kmax use 3 index util lru buer path buer buer recent access path total memori buer use program 256 page present result two dataset contain 5 million squar object randomli select twodimension space space dimens 1 1 million rst data set use test perform presenc small object size object randomli chosen 10 1000 second data set contain medium size object size object randomli chosen 10 10000 r ar kar mr2575125queri rectangl area queri time sec index size b queri perform figur 3 compar perform small object dataset figur 3 compar perform small object dataset gure use r ar kar mr repres rtree artre artre kmax propos mrtree respect mrtree use 25 less space gure 3a method obsolet record remov index artre kmax occupi space sinc compar rtree artre store inform index record evalu queri perform queri rectangl area vari 00001 50 whole space queri rectangl size randomli gener 100 squar queri measur total run time run time obtain multipli number io averag disk page read access time 10m ad measur cpu time cpu time measur ad time spent user system mode return getrusag system call figur 3b show averag time per queri variou queri size method compar small queri rectangl sinc object satisfi queri anyway mrtree clearli best queri rectangl size increas note queri time scale logarithm actual dierenc queri speed drastic exampl queri size 1 mrtree 20 time faster artre reason larg queri rectangl minmax queri chanc stop higher level mrtree particular artre decid omit examin subtre queri rectangl contain box whole subtre hand mrtree search may omit travers subtre even queri rectangl partli intersect use kmax optim seen compar ar tree kmax plain artre mrtree perform better artre kmax two reason first due addit optim mrtree store fewer object second object mrtree smaller area area reduct optim thu achiev better cluster r ar kar mr2575125queri rectangl area queri time sec index size b queri perform figur 4 compar perform medium object mediums object perform improv mrtree structur even better gure 4 reason larger object chanc contain object thu make obsolet result mrtree becom compact trend continu dataset larger object result shown breviti also compar index gener time small object gure 5a mrtree need cpu time gener 25 time littl less io time expect although mrtree occupi less space gener need cpu time maintain extra inform store index record medium object gure 5b mrtree take r ar kar mr2575125io cpu creation time kilo sec r ar kar mr2575125 io cpu creation time kilo sec small object b medium object figur 5 compar index creation time cpu time less io time compar structur sinc much smaller 6 optim msbtree rst review msbtree propos yw00 answer boxmax queri 1 dimension interv data show use one propos optim techniqu improv 61 msbtree msbtree tree structur record r tree node interv ri valu rv interv record tree node intersect union interv index record point node object insert also interv oi valu ov index record r extra valu ru explain shortli focu discuss max aggreg initi one node leaf node insert object leaf node l everi record r l ri intersect oi examin ov rv insert eect otherwis oi contain ri set otherwis split r two three record one correspond intersect ri oi other correspond rest ri leaf node l ow split two page record evenli distribut two page base interv posit perform boxmax queri leaf page easi locat record intersect queri interv return maximum valu record besid interv valu v pointer child child page index record also valu u mean u v index record r follow subtreer standalon tree rv would lower bound boxmax queri ru would upper bound sinc queri subtreer may standalon tree need maintain run valu correspond boxmax get far examin path root page point r nal queri result larger valu run valu boxmax queri result subtreer thu perform boxmax queri interv qi index page run valu current check record r intersect qi ru current noth done otherwis qi contain ri set current ru otherwis set current queri result subtreer discuss insert object index page everi record r ri intersect oi examin first ru ov need set keep ru upper bound next check ov rv ov rv noth need done otherwis oi contain ri simpli set otherwis recurs insert note given level l msbtree given interv two record level l intersect insert algorithm queri algorithm examin two path tree thu complex olog b b page capac number record number leaf record sinc insert split two leaf record number updat ever perform much smaller n observ consid insert object whole space ov larger exist valu tree obvious insert although n arbitrarili larg compact tree one leaf record ie msbtree call compact number leaf record minimum msbtree updat algorithm ensur compact tree sinc ideal maintain small yw00 propos period reconstruct msbtree reconstruct whole tree brows depthrst manner report everi interv togeth aggreg valu interv interv thu report continu one anoth adjac interv valu merg interv insert second initi empti msbtree eventu replac origin tree 62 optim msbtree reconstruct phase msbtree olin ie new insert made discuss appli boxelimin optim propos section 3 msbtree get rel much smaller tree remain onlin idea whenev u v valu index record r becom equal insert process remov whole subtreer implement modi insert algorithm insert object index page add follow step origin insert algorithm record r oi contain ri ru ov remov subtreer mark r obsolet ie point obsolet page combin adjac obsolet record propag obsolet record leaf page remain discuss propag obsolet index record r leaf level r record page merg page sibl page otherwis exist sibl record obsolet without lose gener suppos si right ri merg r extend si contain ri also rst record everi node leftmost path start schild need extend well let analyz complex modi algorithm level tree algorithm examin two page page ob obsolet record record need follow singl path page contain record leaf thu worst case updat complex ob log b number leaf record note discuss count cost free space occupi subtre point obsolet record fact sinc subtre need updat queri perform later garbag collect perform background process compar origin msbtree updat algorithm modi updat algorithm littl expens worst case howev happen often sinc time modi algorithm spend time updat tree shrink major benet optim algorithm origin one optim one result much smaller tree without period reconstruct exampl consid previou exampl insert object oi whole space ov larger everi exist record origin algorithm simpli updat u v valu rootlevel record thu number leaf record chang hand optim algorithm immedi decid whole tree obsolet thu result compact tree tree one leaf record conclus examin problem comput minmax aggreg queri spatial object nonzero extent propos four optim techniqu improv queri perform introduc mrtree new index explicitli design mainten minmax aggreg mrtree combin propos optim experiment comparison show approach provid drastic improv especi queri size increas product show one optim appli exist aggreg index msbtree acknowledg would like thank gunopulo mani help discuss also thank papadia provid us valuabl input relat work includ final grate b seeger r tree code r comput geometri introduct tr comput geometri introduct rtree effici robust access method point rectangl geometr rang search rang queri olap data cube cubetre effici process window queri pyramid data structur multidimension divideandconqu effici comput tempor aggreg rang predic progress approxim aggreg queri multiresolut tree structur rtree dynam data cube data cube increment comput mainten tempor aggreg hierarch prefix cube rangesum queri rtree dynam updat cube rangesum queri effici olap oper spatial data warehous rtree pisa avoid build databladesr know valu everyth cost noth rel prefix sum ctr jie zhang michael gertz demet aksoy spatiotempor aggreg raster imag data proceed 12th annual acm intern workshop geograph inform system novemb 1213 2004 washington dc usa zhang j tsotra optim spatial minmax aggreg vldb journal intern journal larg data base v14 n2 p170181 april 2005 ine fernando vega lopez richard snodgrass bongki moon spatiotempor aggreg comput survey ieee transact knowledg data engin v17 n2 p271286 februari 2005