compil conceptu graph abstractthi paper address problem conceptu graph implement subsumpt classif taxonomi conceptu graph typic store use direct acycl graph data structur base partial order conceptu graphsw give improv algorithm classifi conceptu graph hierarchi prune search space databas use inform gather searchingw show conceptu graph hierarchi compil instruct repres special case canon format rule compil subsumpt conceptu graph compress knowledg knowledg base conceptu graph compil differ adjac graph hierarchi differ repres rule use deriv graph adjac graph illustr method compress knowledg base experimentscompil effect three way remov redund data use simpl instruct ignor redund check perform match share common process graph b introduct central element mani natur languag process inform retriev knowledg base system larg collect inform inform may view larg set sentenc paper concentr problem answer queri set sentenc queri sentenc question whether sentenc impli set sentenc sentenc impli queri sentenc may extract answer paper discuss method seek answer explicit sentenc collect rather answer deduc one sentenc collect method design intent extend handl latter case futur exampl queri person eat pie set sentenc may extract answer girl eat pie fast girl sue eat pie kitchen exampl illustr type inform embed sentenc search sentenc impli someth peopl sentenc contain inform subtyp girl consid research g elli support univers queensland postgradu scholarship enrol phd programm key centr softwar technolog univers queensland qld 4072 australia current dept comput scienc royal melbourn univers technolog victoria 3001 australia work also support baskin center univers california santa cruz usa visit paper concern natur languag frontend system rather concentr work intern level sentenc encod conceptu graph knowledg represent 14 knowledg base set conceptu graph graph repres sentenc queri conceptu graph check subsumpt graph knowledg base method outlin construct direct acycl graph repres partial order conceptu graph node hierarchi conceptu graph queri set graph achiev select path hierarchi use order inform hierarchi mani graph knowledg base elimin consider search hierarchi content address memori content queri determin posit hierarchi solut order subhierarchi immedi special queri levinson 5 develop method chemic graph method paper base recent work 6 levinson adapt method conceptu graph develop hybrid index mechan garner tsui 4 ad idea store graph differ adjac graph hierarchi potenti save store method describ take differ idea 4 graph reconstruct differ travers hierarchi graph compar queri use gener subsumpt algorithm method differ number way use differ differ rather incid arc label differ label node repres conceptu graph differ graph adjac graph rather singl adjac graph method especi suit topolog search method propos levinson 6 anoth differ interpret differ differ graph repres instruct special case canon format rule conceptu graph theori instruct perform part match databas graph queri graph canon format rule basi partial order defin conceptu graph rather reconstruct graph differ appli queri graph use map adjac graph queri graph mani case adjac graph alreadi compar queri differ need map queri graph implement comparison method achiev compil conceptu graph three way remov redund data use simpl instruct ignor redund check perform match share common process graph section ii introduc basic conceptu graph theori section iii outlin algorithm data structur use store retriev conceptu graph section iv explain mean compil conceptu graph gener hierarchi section v give descript instruct special case canon format rule small exampl databas compil queri compil databas examin section vi detail experi compress knowledg base discuss ramif compil ii conceptu graph conceptu graph 14 system logic base charl sander peirc existenti graph 12 conceptu graph full power firstord logic repres modal higherord logic simpl eleg infer rule conceptu graph also direct translat natur languag follow short introduct basic formal reader advis read 14 thorough understand conceptu graph finit connect bipartit graph two kind node concept conceptu rela tion everi conceptu relat one arc must link concept singl concept may form conceptu graph everi conceptu relat must link concept function type map concept set whose element type label function refer map concept set f1 2 individu marker gener marker individu marker surrog individu real world perceiv world hypothet world label concept c labc referentc r concept may display linear form exampl concept person simpli person repres unspecifi person may read person box replac squar bracket graphic form partial order type label known type hierarchi form lattic call type lat tice type hierarchi make analyt statement type must true intens statement person true properti person also associ girl minim common supertyp pair type label written maxim common subtyp two primit type label univers type absurd type type label minim common supertyp cat dog could possibl carnivor depend hierarchi maxim common subtyp pet cat petcat maxim common subtyp cat dog absurd mean logic imposs entiti dog cat denot type written ffi set entiti instanc concept type extens union set cat dog world noth els intension type label cat dog minim common supertyp car nivor also subtyp bear weasel skunk etc type lattic repres categori thought lattic set subset repres collect exist thing two lattic isomorph denot oper map one neither onetoon onto function type also map conceptu relat type label relat r may written linear form ellips replac parenthesi graphic form two relat type must number arc concept conceptu relat type common conform relat relat type label individu marker true said conform type conform relat obey follow condit ffl refer concept must conform type label c concept typec referentc exampl concept integ 1 wellform integ 314 ffl individu marker conform type must also conform supertyp exampl number 3 conform type prime prime3 henc also conform supertyp integ integer3 ffl individu marker conform type must also conform maxim common subtyp exampl sinc 3 conform type odd prime odd3 prime3 3 also conform maxim common subtyp oddprim oddprime3 ffl everi individu marker conform univers type individu marker conform absurd type ffl gener marker conform type label type label oper oe map conceptu graph formula first order predic calculu conceptu graph translat gener concept map variabl individu concept map constant altern conceptu graph could also map modern type logic c girl agent eat manner fast person sue agent eat object pie fig 1 two canon graph canon graph distinguish meaning graph repres real possibl situat extern world certain graph declar canon one sourc deriv new canon graph canon graph format rule five canon format rule deriv conceptu graph w conceptu graph u v 1411 copyu w exact copi u ffl restrictu c l concept c u typec may replac subtyp c gener refer may chang individu marker chang permit referentc conform typec chang relat r graph u duplic one may delet u togeth arc ffl joinu c concept c u ident concept u joinu c graph obtain delet link c arc conceptu relat link ffl fuseu v c let u v two disjoint conceptu graph concept c u ident concept v fuseu v c graph obtain delet link c arc conceptu relat link illustr format rule fig 1 show two canon graph concept relat identifi ci rj respect graph also label refer text graph b may read girl eat fast graph c person sue eat pie formal translat graph inform verbal discuss graph graph fig 2 show result restrict concept c3 girl graph b fig 1 girl sue graph e result restrict type person concept c7 graph c type girl restrict conform relat must check ensur girl sue true ident concept c3 c7 girl sue e fig 2 fuse togeth form singl graph x9 fig 3 ident concept c1 c5 eat x9 join togeth produc x10 fig 3 graph x10 simplifi remov one duplic relat r2 r4 agent result graph f fig 4 two conceptu relat type duplic ith arc one link girl sue girl sue e agent eat object pie fast manner eat agent fig 2 restrict two graph fig 1 girl sue girl sue agent eat manner fast agent eat object pie agent eat manner fast pie object agent fig 3 join two graph fig 2 concept ith arc graph f may read girl sue eat pie fast simplif rule correspond rule logic rx rx equival rx format rule kind graph grammar canon graph besid defin syntax also enforc certain semant constraint format rule make guarante truth falsiti howev format rule refut rule assert graph fals person eat pie use format rule show fals sue eat pie graph deriv fals graph must turn fals format rule falsiti preserv canon contain inform necessari deriv set canon graph four compon type hierarchi broken concept hierarchi c relat hierarchi r set individu marker conform relat relat label marker f girl sue agent eat manner fast pie object fig 4 simplif fig 3 place locat act entiti act object event act physicalobject anim entiti give anim pie girl person attribut eat fast place kitchen food girlsu manner agent object locat act act agent manner attribut anim fig 5 sampl canon finit set conceptu graph b call canon basi type label refer either marker canon graph closur b canon format rule fig 5 show canon use paper b relationship canon format rule subsumpt conceptu graph conceptu graph u canon deriv conceptu graph v possibl join conceptu wn u call special v written u v v call gener u gener defin partial order conceptu graph call gener hierarchi order reflex transit antisymmetr conceptu graph u v follow properti true ffl subgraph v subgraph u u v ffl subtyp u ident v except one type label v restrict subtyp u ffl individu u ident v except one gener concept v restrict individu concept type u v ffl top graph gener conceptu graph graph fig 1 2 3 gener graph fig 4 call graph defin far atom conceptu graph acg contain logic connect henc neither quantif default existenti quantif consid definit concept relat subsumpt test acg implement subgraph morphism modulo subtyp individu gener hierarchi partial order conceptu graph state 14 rather partial order equival class conceptu graph consid graph graph v proper subgraph u graph u deriv v join copi v concept eat girl sue agent eat manner fast object pie q3 d3 d1 q1 d4 q2 d2 queri u fig queri graph u thu u v howev v deriv u join two ident concept person simplifi duplic agent relat thu v u henc accord gener hierarchi properti gener hierarchi also note independ 15 u v canon deriv u v correspond revers proof formula oev formula conceptu graph u v u v oeu oe oev result two graph given paragraph equival surpris consid translat sort logic subtl point doesnt affect subsequ theori conceptu graph practic graph redund branch alway simplifi deriv smallest one equival class conceptu graph assum minim element class conceptu graph u v u v must exist map subgraph u call project v u project oper follow properti ffl concept c v c concept v referentc ffl conceptu relat r v r conceptu relat v ith arc r link concept c v ith arc r must link c v exampl project graph c fig 1 graph u fig 6 person girl act eat graph v repres set instanc canon format rule use construct graph v graph w wn test graph v subsum graph u rule instanc appli project u w wn rule instanc succeed v subsum u use techniqu compil conceptu graph data structur repres gener hierarchi partial order theori atom conceptu graph consid store larg set conceptu graph retriev conceptu graph store anim act agent act object entiti manner act attribut girl sue eat manner fast agentb manner fast girl eat agent eat object pie girl sue manner fast eat pie object eat object pie girl sue agent c c3 r2 c4 e agent person sue agent f fig 7 gener hierarchi graph fig iii store retriev conceptu graph common data structur use store conceptu graph hierarchi direct acycl graph repres nontransit link partial order gener hierarchi conceptu graph 10623 levin son earlier work use similar data structur organ chemic graph 5 taxonomi klone concept descript 13 hierarchi gener hierarchi data structur store conceptu graph node gener hierarchi conceptu graph arc repres nontransit order graph fig 7 hierarchi given graph previou section canon basi exampl consist set graph g arc b indic follow 1 girl sue eat fast canon deriv girl eat fast 2 girl sue eat fast impli girl eat fast 3 girl eat fast gener girl sue eat fast 4 girl sue eat fast special girl eat fast follow section examin use hierarchi search set conceptu graph construct hierarchi b search conceptu graph gener hierarchi gener hierarchi index knowledg base appli conceptu graph queri u knowledg base search u hierarchi hierarchi content address memori fig 8 illustr search space queri u hierarchi atom primit graph closest object unifi u coatom bottom object atom primit top object object gener u object specif u object nonunifi u fig 8 search space graph u gener hierarchi concept deriv graph coatom leaf node knowledg base gener space contain gener u hierarchi special space solut space contain special u hierar chi immedi gener parent immedi special children u adjac gener special u respect fig 8 u explicitli store hierarchi ever mani case u store hierarchi explicitli search u proceed two direct topdown graph u bottomup coatom u method examin search topdown consid depthfirst search gener space path gener space taken lead u hierarchi consid search queri u girl sueagenteatobjectfast girl sue eat fast hierarchi fig 7 queri u match graph hierarchi search start graph find graph search children gener u children v set immedi special v children b1 b2 b3 b c e f fb1 b2 b3g fbg fb cg fcg fdg feg ffg ffg fg respect depthfirst search could select first graph children gener queri u continu path u basi graph b1 gener first children set select b2 b3 could equal chosen one child b1 b also gener select search children b gener graph child gener u fact isomorph u queri graph match search termin success case two solut fd fg english answer question agent eat person eat object pie locat kitchen agent eat person object food object locat kitchen agent eat girl sue pie object agent eat pie girl manner fast f e c fig 9 gener hierarchi girl sue eat fast ye f ye sue eat pie fast search necessarili start graph index techniqu use start gener space ultim goal index techniqu index directli top special space includ u see 8 index techniqu c insert conceptu graph gener hierarchi classif insert graph u hierarchi need comput set immedi gener set immedi special u hierarchi inform give us virtual locat insert u consid insert graph read person eat pie hierarchi fig 9 immedi gener case b person eat c pie eaten immedi special f girl sue eat pie kitchen e girl eat pie fast notic person eat food kitchen u incompar insert u remov arc b e c e c f add b u c u u f u e get new hierarchi fig 10 search gener space wood 16 describ standard two phase breadthfirst search use classif klone like term taxonomi first phase calcul set immedi predecessor ip gener queri breadthfirst search gener space second phase breadthfirst search subhierarchi immedi predecessor calcul first phase first special encount hierarchi immedi successor queri wood 16 summar research classif say sophist algorithm devel ope agent eat person eat object pie locat kitchen agent eat person object food object locat kitchen agent eat girl sue pie object agent eat pie girl manner fast agent eat person object pie e c fig 10 gener hierarchi fig 9 insert 6 levinson describ algorithm show deeper insight problem subsumpt gener expens oper henc method classif avoid mani subsumpt test possibl de sirabl algorithm given insert object hierarchi improv implement levinson method number graph comparison phase procedur insertu begin ip immedi predecessorsu ip 6 fug begin immedi successorsip u insertu ip fig 11 insert u partial order consid algorithm insert fig 11 first phase comput immedi predecessor ip done function immedi predecessorsu fig 13 u alreadi store hierarchi u return rather us immedi predecessor second phase avoid otherwis subhierarchi member ip search use immedi successorsip u fig 14 set ip found procedur insertu ip fig 12 necessari housekeep link u immedi predecessor immedi successor procedur also maintain level graph hierarchi inform use travers hierarchi topolog order levinson 6 prune search space use fact graph gener space gener queri u immedi predecessor also gener space levinson sort hierarchi size graph travers hierarchi order size necessari requir procedur insertu ip begin v 2 ip w 2 remov v w present v 2 ip add v u w 2 add u w ulevel propag leve fig 12 insert u partial order given neighbourhood order kind graph levinson work howev conceptu graph size necessari requir topolog order level order hierarchi reflect node distanc node top exampl fig 9 graph level 0 graph b c level 1 graph e level 2 graph f level 3 see topolog order effici search method depthfirst breadthfirst search term avoid compar object hierarchi consid hierarchi fig 9 rememb immedi predecessor graph must compar graph immedi predecessor graph must gener queri graph also gener assum queri u fig 10 henc gener u b c breadthfirst travers hierarchi fig 9 read right left c b e f would compar f depthfirst travers right left would fa c e f b dg also compar f topolog travers also read right left c b e f would compar f sinc encount beforehand note incompar u topolog search ensur predecessor element v seen v algorithm fig 13 level inform associ graph hierarchi use travers hierarchi topolog order queue use modifi breadthfirst search minimum prioriti queue prioriti given element smallest level num ber use array fifo queue enqueu dequeu prioriti queue constant time enqueu weight element u involv ad u front ith queue dequeu involv remov first element current minimum weight queue whenev current minimum queue j becom empti weight index increment travers hierarchi level order maintain properti j fifo necessarili nonempti point set ip v isv correspond store set immedi predecessor v immedi successor v respect v alreadi store hierar function immedi predecessorsu begin qenqueuelevel qempti begin predecessor matchv u v begin w 2 ip v ip ip w 2 isv return ip fig 13 find immedi predecessor u chi algorithm call subsumpt u v guard test predecessor matchv topolog travers guarante vs predecessor seen v predic predecessor matchv true vs predecessor predecessor queri u depthfirst search object v compar v immedi predecessor predecessor queri u breadthfirst search object v compar u one necessarili vs immedi predecessor predecessor u thu precondit check v predecessor queri u stronger topolog search v predecessor add set ip remov vs immedi predecessor ip search successor v closer predecessor queri e search special solut space second phase wood 16 search one subhierarchi immedi predecessor first phase one hierarchi need travers sinc special queri must also special gener queri special found ad set subhierarchi remov consider howev graph incompar subhierarchi must travers levinson 6 devis method avoid mani comparison inher travers particular subhierarchi second phase notic wood method use inform member ip levinson 6 note second phase databas graph successor queri graph must intersect subhierarchi immedi predecessor first phase subsumpt test rel expens compar pointer travers involv walk subhierarchi particularli use intersect comput travers subhierarchi increment counter graph graph intersect must count equal number element ip intersect travers breadthfirst manner use wood algorithm immedi successor fig 14 avoid multipl travers comput intersect increment one constrain topolog search algorithm use insight graph intersect subhierarchi ip graph must path element ip element set ip repres bit immedi successor element ip path element determin ore bit string immedi predecessor propag inform restrict subsumpt test graph bit set intersect space algorithm also reli level topolog travers implement minimum prioriti queue predic ip reachablev or bit string vs immedi predecessor true bit set function immedi successorsip u begin v 2 ip begin w 2 isv qempti begin seenv begin ip reachablev v u begin see successorsv els w 2 isv return fig 14 find immedi successor u given immedi predecessor notic insert seen inform must reinitialis would mean algorithm would perform linearli size databas everi case avoid use token queri graph seen must token current queri consid queri graph u classif problem queri databas graph hi erarchi solut queri would everyth impli queri special space solut list walk subhierarchi element support algorithm use insert find immedi predecessor immedi successor also use queri worst case algorithm perform better comparison queri graph databas method suit databas littl order inform total der hierarchi chain method suit wide shallow hierarchi data believ mani domain conceptu graph intend use properti wood 16 argu typicalcas complex logarithm size databas levinson 6 give empir evid support argument levinson prove topolog method less comparison graph previou known method 6 levinson 6 also describ index scheme hybrid method method particularli use graph high degre symmetri also see 8 applic conceptu graph shown prune search within databas gener special space follow section show share match inform gain subsumpt test relat graph iv compil conceptu graph gener hierarchi effici queri databas im prove previou section saw method minim number databas graph compar queri graph follow section look minim cost comparison examin repres conceptu graph gener hierarchi improv individu subsumpt test wood 16 state algorithm deep insight exploit gain effici exampl cla sific advantag taken might learn cours one subsumpt test might redund part anoth subsumpt test garner tsui 4 propos repres graph differ adjac graph gener hier archi fig 15 illustr store graph girl sue eat pie fast differ adjac gener girl eat food differ mean replac refer concept c1 u sue differ c2 mannerfast mean connect new binari relat manner concept c1 u new concept fast differ mean replac type concept c3 u type pie differ garner tsui method girl eat object agent fast eat manner object girl sue pie agent girl eat object agent food c3 pie food transform fig 15 repres graph differ gener method outlin former method place differ adjac graph incid arc wherea latter place differ graph immedi gener node repres graph graph differ garner tsui method node arc restrict special gener graph differ treat data reconstruct graph travers arc henc ad graph differ reconstruct graph compar queri use gener match algorithm method compil graph match instruct share common comput queri store graph differ fulfil aim remov redund data databas anoth aim method share common comput achiev store map adjac graph conjunct differ see map store explicitli com pose allow us fulfil anoth aim repres differ way may use instruct futur conceptu graph unif machin graph may compar queri use map gener queri instruct perform small part gener match oper rel map follow detail altern garner tsui method consid queri u fig 6 gener hierarchi fig 7 discuss notat vu repres map graph let us assum subgraph morphism bu graph b fig 7 found queri u search solut queri u search method outlin previou section take path gener hierarchi contain special gener queri step graph choic path b travers path must compar u see gener u full subsumpt test avoid notic differ b concept c3 type girl restrict gener form individu sue comput match map du must com pute assum map bd store databas gener b map queri u bu everi concept relat x x b x du otherwis find match x u violat rest match insert map du equal map bu sinc map bd ident map differ could repres refer du sue gener u gener possibl symmetri graph involv uniqu map graph involv case differ must appli possibl map mani domain conceptu graph use graph contain uniqu morphism thu differ graph use map adjac graph bd previou ex ampl current gener b queri u kept necessari store map adjac graph explicitli map compos travers gener hierarchi canon format rule construct map construct graph copi rule set map whole graph copi restrict rule affect map join rule comput union map two graph join map one ident concept simplifi rule map duplic relat onto anoth conceptu graph gener hierarchi replac set applic canon format rule instanc rule appli immedi gener graph repres fig illustr method gener hierarchi fig 7 method potenti reduc cost graph comparison share comput alreadi done map adjac conceptu graph also potenti save space store conceptu graph v instruct examin use canon format rule differ adjac graph gener hierarchi concentr first phase topolog search search gener space follow discuss assum graph canon form compar store restrictb3 c5 eat act manner attribut restrictb1 c1 eat restrictx1 c2 fast restrictx2 c4 eat fusex5 x6 c1 c4 restrictrefb c3 sue anim act object entiti restrictb2 c3 girl x3 c3 r2 c4 agent act copyb2 c8 c7 r4 restrictx4 c6 pie restrictb2 c7 person restrictx3 c8 eat c e x9 fuse e c3 c7 joinx9 c1 c5 simplifyx10 r2 r4 restrictc c7 girl fusex7 x8 c5 c8 fig 16 encod conceptu graph gener hierarchi canon format instruct first phase aim find subgraph morphism databas graph queri second phase aim find subgraph morphism queri databas graph first phase databas graph could thought read queri graph second phase databas graph write queri graph construct special solut mode correspond mode read write prolog compil unif instruct 1 give special interpret canon format rule base mode oper read write examin read mode graph reconstruct instruct howev show oper construct map databas graph queri q ffl copyu w find subgraph morphism wq w exact copi u recon struct gener matcher use find wq ffl restrictu c w type uq c wq databas graph w gener queri graph q q must subtyp type correspond concept u ffl restrictrefu c instruct handl restrict individu marker rather complex refer nest graph set q u true queri must individu marker one correspond concept databas graph u join concept c databas graph u v respect read mode mean c must alreadi point concept queri graph q ffl simplifyu simplifi two duplic relat databas graph read mode mean two relat must map relat queri sinc queri graph contain duplic minim graph instruct separ special case exampl input output graph new map construct rather modif particular entri map made fig 16 conceptu graph replac instruct compar represent gener hierarchi fig 7 fig 6 contain queri graph u gener hierarchi fig 7 contain solut f let us consid happen stage topolog search gener hierarchi queri u examin process middl search subgraph morphism b c u found q1g look b cs adjac graph gener u adjac graph e graph repres restrictrefb c3 sue instruct translat refer bu sue gener u du bu graph e repres restrictc c7 girl e instruct implement type cu c7 girl girl e gener u eu cu examin adjac graph e one case f graph f repres three instruct first instruct fuse e c3 c7 x9 mean du calcul q1g second instruct joinx9 c1 c5 x10 sinc third instruct f simplifyx10 r2 r4 f sinc q3g thu f gener u u compar result graph u f fig 6 fig 7 respect fig 17 show altern compil base canon deriv appli singl parent join simpl basi relat approach follow new formal conceptu graph theori mugnier chein 11 approach similar garner tsui method represent differ 4 vi experi compil method still design phase examin use method conceptu graph databas wrote program anim f x3 c3 r2 r3 c6 e c act manner attribut agent act act object entiti restrictx3 c7 girl restrictb2 c3 person sue restrictx5 c4 eat fusex6 b3 c4 c5 c5 c8 restrictx7 c8 pie restrictc c3 girl fuse b3 c5 c5 c8 restrictx4 c8 pie restrictb c7 sue fusex2 b2 c1 c4 c4 c7 restrictb1 c1 eat restrictx1 c2 fast fig 17 linear deriv graph hierarchi fig 7 anim act agent act object entiti manner act attribut manner fast girl eat agent eat object pie c3 girl sue girl sue eat pie object c c3 r2 c4 agent person sue f e fig 18 gener hierarchi fig7 compress use differ largest parent anim act agent act object entiti manner act attribut manner fast girl eat agent eat object pie girl sue c3 girl sue c c3 r2 c4 agent person sue e f fig 19 gener hierarchi fig7 compress use differ parent origin file compress largest parent parent parent parent compress parent databas basis18245220854918644189369374412901247493477971882616823 1222111923a basi fig 20 result compress chess file piec piec piec piec piec piec piec piec piec piec piec piec fig 21 schema morph chess seed databas compress conceptu graph databas repres graph u differ u us largest parent ii us parent method shall call largest parent method best case garner tsui method method ii correspond compil method shown fig 16 call parent method main problem parent method join parent may need store test store join file test fig 20 morph adapt chess play system 9 file b seed databas 3104 pattern form shown schema fig 21 piec could whitepawn black arc concept repres support attack depend colour piec file b contain 1778 chess pattern learnt morph similar fig 22 file basi b basi includ 42 basi graph addit graph file b respect column databas fig 20 list name file column origin file list size ascii file contain conceptu graph conceptu graph linear notat 14 column lempel ziv com press column give size file compress use unix compress util column largest whiterookrank0 file0 whitepawnrank1 file1 fig 22 conceptu graph chess pattern parent show size file compress use largest parent method repres conceptu graph column parent show size file compress use parent method repres conceptu graph column parent without parent store differ parent method leav list parent differ refer column lempel ziv compress parent show size file gener parent method compress use unix compress util main column compar largest parent parent parent method result smaller file even though parent refer cost refer parent differ par ent parent without parent column ex ampl databas list parent cost 30534 byte case parent method result smaller file file use largest parent method parent method result compress ratio 2561 3841 four knowledg base test potenti similar reduct could also achiev inform retriev time vii summari compil conceptu graph achiev store deriv immedi gener direct acycl graph repres gener hierarchi partial order conceptu graph graph insert gener hierarchi comput immedi neighbourhood hierarchi attach newli insert graph graph neigh bourhood neighbourhood comput two phase topolog search canon format rule distinguish conceptu graph semant network formal enforc semant constraint canon graph algorithm process must develop conceptu graph compil instruct special case format rule instruct oper immedi gener construct map immedi gener graph henc queri graph search common comput involv match databas graph queri graph share map potenti store save store dif ferenc compress knowledg use differ illustr sampl databas compil effect three way remov redund data use simpl instruct ignor redund check perform match share common process graph futur work examin method handl complex conceptu graph use domain chem istri levinson 7 recent develop new tupl skeletonbas compress techniqu call ud ud base new compact represent conceptu graph make storag retriev effici ud extend process hierarch search share earli work suggest store possibl map matrix form parent children databas combin map parent queri children use matrix multipl get first approxim specif match queri may adequ propag bind inform gather search within conceptu graph databas acknowledg thank supervisor peter robinson robert levin son thank fritz lehmann guy mineau john stapl comment earlier draft paper fritz lehmann inspir revis earlier version paper r compil conceptu graph sort conceptu graph selforgan dictionari conceptu structur pattern associ retriev semant network ud univers data structur multilevel hierarch trieval adapt pattern orient chess induct conceptu graph find common gener compat project character algorithm recognit canon conceptu graph existenti graph charl classif klone knowledg represent system conceptu structur inform process mind machin knowledg graph versu conceptu graph understand subsumpt taxonomi framework progress tr ctr ahmad kay robert colomb extract ontolog concept tender conceptu structur data knowledg engin v40 n1 p7189 januari 2002 vila wuwongs ekawit nantajeewarawat declar program implicit implic ieee transact knowledg data engin v14 n4 p836849 juli 2002 gian piero zarri ontolog reason techniqu legal intellig inform retriev system artifici intellig law v15 n3 p251279 septemb 2007 ahmad kay robert colomb use bww model evalu build ontolog cg formal inform system v30 n5 p379398 juli 2005