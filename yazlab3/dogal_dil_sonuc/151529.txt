fast algorithm gener discret random variat chang distribut one fundament oper simul stochast discreteev dynam system gener nonuniform discret random variat simplest form oper state follow gener random variabl x distribut integ 12n fix nonneg number wellknown alia algorithm avail accomplish task o1 time difficult problem gener variat x ai chang time present three rejectionbas algorithm task algorithm character perform term accept probabl expect effort gener variat show fairli unrestrict condit longrun expect effort o1 applic markovian queu network discuss also compar three algorithm compet scheme appear literatur b introduct problem gener nonuniform discret random variat fundament simul discret event stochast system simplest version problem gener variat random variabl x p given p chang time wellknown alia algorithm eg see 2 pp 158160 take preprocess time gener variat o1 time paper interest develop effici algorithm case chang time procedur desir simul multidimension markov process use model queue telephon network definit problem follow suppos given n nonneg number 1 sequenc independ random variabl problem gener variat xs realiz fxsg refer integ ng outcom x call rate outcom time static version problem rate chang time dynam version zero ss chang time increment discret event simul number ss chang time increment typic small algorithm develop paper attempt exploit special properti section 2 first show reject algorithm employ gener variat chang distribut perform algorithm character accept probabl develop two addit algorithm expens addit memori improv significantli accept probabl section 3 suppos rate random determin discret state space markov process typic case applic explicitli character longrun accept probabl longrun expect effort three algorithm term steadi state rate underli markov process section 4 sever class queue network consid class character longrun perform algorithm term defin paramet network section 5 compar algorithm paper eventlist approach assum event list organ heap algorithm transit propos fox 8 section 6 discuss sever method improv perform three algorithm discuss paper three algorithm follow assumpt forc throughout paper a1 exist finit exist finit b 0 refer 1 major nvector three algorithm present paper reject base reject algorithm oper respect major nvector run o1 averag time provid accept probabl bound away zero n increas tradit correctli howev major theme literatur reject algorithm make implicit constant depend reciproc accept probabl small quantifi constant term particular quantifi constant product form instanc queue network model term traffic condit clearli though heavier traffic node smaller constant essenti network call three algorithm generate1 generate2 generate3 generate1 implement discret version standard reject use dynam rate vector respect uniform major nvector erate3 implement discret version standard reject use dynam rate vector respect nonuniform major nvector erate1 generate3 base assign singl bucket event generate2 combin principl generate1 assign possibl one bucket outcom bucket scheme consid literatur appar link directli reject algorithm 21 algorithm generate1 present first algorithm gener variat chang distribut algorithm make use n bucket ie array b size n bucket capac 1 bucket initi set bi 0a complet preprocess clearli process complet time notic initi content bucket exceed uniti algorithm gener variat x0 hereaft let u stand uniform random variabl interv 0 1 algorithm generate1 step 1 gener u comput dnue step 2 let step 3 r bi accept output quit els go step 1 observ generate1 pick bucket random uniformli bucket chosen output probabl bi notic r uniform variabl interv 0 1 independ algorithm generate1 reject algorithm eg see 2 pp 151152 gener discret random variat fix distribut reject algorithm typic discuss context continu random variabl follow output algorithm generate1 distribut x0 key observ make generate1 also use gener variat chang distribut inde suppos generate1 use gener variat xs thu sa time simpli reset 1a procedur valid sinc assumpt a1 content bucket never exce uniti order character perform generate1 let accept time event r bi first time step 3 invok gener variat xs refer p accept time accept probabl time note expect number uniform random variat u need gener variat xs algorithm generate1 equal reciproc accept probabl theorem 21 accept probabl time generate1 given p accept time na proof p accept time r bi r bi establish result 2 theorem 21 know perform generate1 poor time averag ss significantli less uniform upper bound particular generate1 exploit fact may mani outcom often case applic algorithm discuss generate2 generate3 take advantag special structur 22 algorithm generate2 generate1 one bucket assign outcom n idea behind generate2 assign one bucket outcom number bucket assign proport upper bound ith rate specif let fix posit number let number bucket assign outcom denot l given also let total number bucket note follow bound total number bucket thu generate2 number bucket assign held fix even ss chang chosen random one l bucket bucket assign output certain probabl probabl howev chang ss chang precis make use two array c b size l n respect b set set cj equal outcom assign bucket j 1 preprocess step 1 outcom comput l step 2 comput prefix sum l sum step 3 initi c follow fill cell 1 1 1 cell step 4 set next present procedur gener variat x0 algorithm generate2 step 1 gener u comput step 2 let step 3 let cj r bi output quit els go step 1 generate1 algorithm also use gener variat xs gener variat xs time simpli reset note sinc never exce uniti also note alway set case generate2 reduc generate1 manner entir analog generate1 defin event accept time algorithm generate2 theorem 22 time output generate2 distribut xs moreov generate2 p accept time proof p accept time l l 2 follow also note accept time l bi combin two express give p ijaccept time complet proof 2 theorem 22 directli give follow result corollari 21 follow bound accept probabl generate2 p accept time furthermor divisor accept time sinc significantli less na algorithm generate2 give much higher accept probabl compar generate1 23 algorithm generate3 last algorithm similar spirit generate2 advantag alway achiev upper bound corollari 21 accept probabl disadvantag effort requir pass one iter algorithm somewhat greater requir generate2 generate3 make use alia algorithm data structur also make use array b size n initi set preprocess includ requir alia algorithm equival version algorithm independ discov fishman 5 algorithm generate3 step 1 use alia algorithm gener variat distribut step 2 gener uniform variat u step 3 u bi accept output quit els go step 1 leav reader establish follow analog theorem 22 theorem 23 time output generate3 distribut xs moreov generate3 p accept time give brief comparison three algorithm throughout comparison suppos generate2 henc corollari 21 know accept probabl generate2 greater 12 accept probabl generate3 chart give comparison memori requir oper count three algorithm assum worst case memori count generate2 oper count assum follow oper count 1 multipl subtract upper floor oper tabl look comparison uniform variat gener defin oper count maximum number oper perform one pass step algorithm memori oper count 2n integ generate3 integ particular accept probabl generate2 close generate3 may conclud chart generate2 prefer generate3 also mention divisor rate rate chang time generate2 streamlin streamlin version generate2 run faster alia algorithm streamlin algorithm similar ident algorithm develop fox see 2 pp 157158 fox algorithm flexibl due choic paramet 24 perform measur random algorithm theorem 23 know expect number u need gener variat xs greater b howev theorem 23 exclud possibl number u need gener xs exce probabl analog statement made theorem 21 theorem 22 order studi question let independ ident distribut geometr random variabl paramet p v thought number time coin flip head appear mth time p probabl head appear singl flip chernoff bound see eg 11 pp 388393 use obtain tight bound probabl tail end v particular show follow fix 0 ffl 1 see 15 make use bound analysi like function use specifi asymptot resourc bound determinist algorithm e use specifi resourc like time space etc bound random algorithm e defin follow definit 15 say function f e og exist constant c n 0 input size n n 0 ff 0 say function f g lim n1 theorem 24 let h lower bound accept probabl three algorithm algorithm call time total number us gener algorithm 1 probabl fix proof follow chernoff bound observ number u gener three algorithm obtain variat x upper bound geometr random variabl paramet h 2 corollari 22 n number us gener 1 probabl constant 0 ffl 1 fix ff 1 thu number us gener e 3 random rate discret event simul rate typic evolv random manner context shall write ith rate time order emphas fact rate random also write context random rate longer requir variabl xs independ requir howev independ given easili seen generate1 generate2 generate3 satisfi requir assumpt a1 a2 translat directli current context replac accept probabl theorem 21 22 23 analog context random rate replac ea applic see section 4 underli discret state space markov process defin rate 1 case total jump rate markov process sth jump conveni make follow assumpt a3 underli markov process irreduc aperiod posit recurr assumpt a3 forc converg distribut random variabl total rate process jump steadi state let z total rate process arbitrari time instant steadi state also well defin due assumpt a3 random variabl z take discret valu typic differ distribut fact follow theorem 2106 walrand 16 follow theorem enabl us character longrun perform algorithm term steadyst behavior underli markov process cours simul steadi state three algorithm let v number random variabl u call order gener variat xs shall refer v effort requir gener variat xs theorem 31 assumpt a1a3 generate1 follow longrun accept probabl longrun expect effort lim p accept time lim proof theorem 21 p accept time na take expect appli assumpt a3 equal give lim p accept time na lim na 4 ey combin 5 6 give desir result 2 proof follow two theorem entir analog proof theorem 31 theorem 32 assumpt a1a3 generate2 follow longrun accept probabl longrun expect effort lim p accept time ezd lim theorem 33 assumpt a1a3 generate3 follow longrun accept probabl longrun expect effort lim p accept time lim 4 applic queue network section give exampl possibl explicitli calcul moment appear theorem section 3 although exampl better studi analyt method simul result give insight run time gener algorithm queue network use extens model analysi comput system network eg see 12 illustr idea variat gener consid open jackson network eg see 16 one fundament queue network n singleserv queue custom arriv outsid accord poisson process rate rout queue probabl r 0i servic time queue exponenti distribut paramet custom complet servic queue rout queue j probabl r ij leav network probabl r i0 servic time assum independ arriv process assum exist nonneg solut traffic equa ae assumpt assur underli markov process irreduc aperiod posit recurr consid simul markov process associ queue network note rate associ queue either 0 depend whether queue occupi empti note rate associ extern arriv 0 given current rate 0 elaps time interev time next arriv servicecomplet event exponenti distribut paramet event servic complet queue probabl sy arriv probabl 0 sy determin elaps time event type alia algorithm use determin o1 time queue custom rout includ possibl rout outsid new iter begin ie increment determin next interev time next eventtyp next queue custom rout note two rate chang iter iter consid central compon simul procedur determin event type accord probabl sy one three algorithm appli character perform generate3 simpl exercis reader generate1 generate2 note applic theorem 41 longrun accept probabl generate3 jackson network given lim p accept time longrun expect effort generate3 jackson network given lim proof let l denot random variabl number custom present queue steadi state well known sinc follow 7 combin last two express ez varz theorem 33 complet proof 2 see theorem 41 time averag util ae queue least 12 case applic practic interest longrun accept probabl greater 12 theorem 41 also tell us particularli desir high valu ae queue high servic rate let us attempt character perform queue network first consid jackson network describ server queue suppos ae condit associ markov process irreduc posit recurr aperiod case 0 valu 0 follow proof theorem 41 shown longrun expect effort generate3 given lim leav reader deriv correspond express longrun accept probabl easili shown 8 lim generate3 consid sequenc queue network nth network sequenc n station network sequenc satisfi 9 ffl 0 longrun averag expect effort o1 second consid case multipl class class c exogen arriv rate c rout probabl r c suppos one server queue servic rate given depend class also suppos servic disciplin queue firstcomefirstserv fcf c set traffic equat suppos equat nonneg solut c suppos modifi definit assumpt well known 7 continu hold true multiclass network henc theorem 41 hold unchang third consid multiclass network singl server node discuss suppos network close ie custom neither enter leav network popul size fix class finit state markov process associ network irreduc aperiod lim l number custom present node steadi state quantiti express term defin paramet normal constant network discuss productform queue network let us consid nonproductform network particular consid close multiclass singleserv network discuss paragraph suppos servic rate class c custom queue c ie servic rate depend class well queue thu take valu 0 1 n maximum servic rate queue given cg let classc custom serv queue steadi state lim unfortun current tool queue theori offer mean express fl c term defin paramet nonproductform network numer techniqu avail approxim quantiti eg see 12 compet method compar algorithm sever compet scheme carri comparison two context multiserv queue network system similar 51 multiserv queue network consid network n queue seri queue equip server server oper rate arriv outsid arriv rate custom travers n queue sequenc assum larg say greater 100 shall assum traffic moder heavi ie 5 9 must stress complex bound given section deriv specif exampl necessarili extrapol exampl first compet method discuss make use list futur event assum reader familiar standard approach simul discret event system method data structur contain time next extern arriv time servic complet custom current network thu data structur contain least 1 nm event assum data structur organ heap method requir onm memori olog n log worstcas effort gener event assum traffic condit effort close worst case second compet method also employ list futur event instead implement across server futur event list implement across queue case data structur contain time next arriv nonempti queue time next servic complet assum heap employ method requir memori olog n worstcas effort note complex bound heap hold traffic condit case moder heavi traffic third compet scheme algorithm transit propos fox 8 employ fox notat fi vector take form fi number busi server queue time memori requir approach shown longrun expect effort transit inde employ notat fox choic fi 0 js j typic close n w typic close zero follow averag complex typic situat howev transit modifi run time olog n shown 9 though high implicit constant paper 8 9 discuss transit context implement across queue discuss paragraph howev analog first compet method transit also implement across server 10 fourth compet scheme therefor transit implement server refer tran sittailor case fi vector take form fi depend whether jth server time busi assum nm server number also suppos fi 0 set maximum rate ie fi 0 transit simplifi algorithm transittailor step 1 use alia algorithm gener variat j distribut step 2 fi j 0 accept output j quit els go step 1 algorithm transittailor independ discov fox 10 7 note transittailor transit respect major vector clearli transittailor implement standard reject respect nonuniform nvector remark t10 t11 9 case transit mention howev implement across server except network singleserv queue note independ paper note 7 note case transittailor generate3 ident analog fashion defin tailor algorithm generate2 generate3 easili seen generate3tailor equival transittailor wherea generate2tailor differ mimick analysi section 4 see transittailor longrun expect effort given lim n v interpret number time step 1 invok tran sittailor gener event time follow 10 longrun expect effort transittailor o1 sequenc model howev memori requir omn therefor arriv follow tabl memori longrun expect effort futur olog n transit olog n transit omn o1 generate2 o1 generate3 therefor clear traffic condit larg n futur event list transit competit must stress complex chart implicit constant factor depend reciproc accept probabl constant algorithm chart compar except effort transit whose constant substanti larger let us compar constant transittailor generate3 first observ accept probabl two algorithm ident ever transittailor requir one less oper generate3 pass step algorithm therefor run time two algorithm go close transittailor slightli faster accept probabl generate3 transittailor greater generate2 never twice much base observ discuss end section 2 make follow conclus first suppos memori issu transittailor give slightli better perform generate3 compar generate2 tran sittailor requir oper per pass step higher accept probabl howev accept probabl generate2 made arbitrarili close accept probabl transittailor decreas henc suffici small generate2 slightli faster transittailor let us suppos memori issu generate2 suppos memori requir generate2 generate3 roughli transittailor requir approxim time memori requir generate2 generate3 100 elimin competit mention end section 2 tradeoff oper per pass accept probabl compar generate2 generate3 although accept probabl generate2 greater one half generate3 recommend user perform pilot run choos two algorithm exampl assum server custom homogen case eg variou server variou phase phdistribut keep track individu server need inhomogen case either heap implement across server ie first compet scheme one tailor algorithm would implement 52 system similar definit similar pleas refer 8 9 similar gener version transit o1 complex even implement across queue queue network set andor similar respect nvector major dynam rate vector howev similar transittailor generate1 generate2 generate3 perform badli queue network node light traffic common reliabl model mention 8 later arguabl accept probabl generate1 generate2 generate3 bound away zero n increas unless growth repair rate decreas failur rate unnatur restrict point gener version transit similar impli refer vector global major 6 improv perform although algorithm generate2 generate3 use mani applic situat perform less satisfactori particular unsatisfactori perform occur expect rate typic far respect upper bound ie section discuss three modif generate2 design allevi even overcom prob lem paper 14 discuss modif employ effici simul largescal telephon network throughout section shall simplifi notat suppress refer time variabl discuss modif benefici introduc yet anoth algorithm gener variat chang distribut algorithm also independ discov fishman yarberri 6 equival version found devroy 4 similar algorithm also given 13 ex 427 page 422 differ context inform descript algorithm follow sake conveni suppos log 2 n integ discuss algorithm base binari tree 1 level n leaf node bottom level valu associ ith leaf node valu associ node sum valu associ two son node thu valu node root binari tree 1 note preprocess time need set binari tree gener variat x first gener uniform number call z 0 compar number valu associ left child root less know variat f1 proceed algorithm left side binari tree proceed right side tree valu z minu valu store left child note number comparison need gener variat x log 2 n chang gener variat x updat binari tree olog n oper follow first reset valu associ leaf node 0 move path node root reset sum accordingli summari binarytre algorithm requir preprocess time olog n time per variat gener variat x chang distribut advantag algorithm compar generate2 perform depend close upper bound disadvantag take significantli time gener variat x n larg accept probabl generate2 small 61 method partit subset suppos exist partit 1 ng follow properti vicin larger condit follow scheme make sens first draw uniform random variat u u declar variat x belong 1 use generate2 across 1 determin u 1 1 declar variat x belong 2 use binarytre method across 2 find cours order util method need get handl ea n perhap done analyt analysi pilot run context queue network method may suitabl fraction queue heavi traffic remain queue light traffic mention anoth partit scheme note 7 62 method ii pseudo upper bound indic ea replac smaller valu perhap ea longrun standard deviat cours assum one get handl well ea may indic occur algorithm generate2 longer correct sinc may bi 1 order rectifi algorithm keep track set counter ffi maxfa phig phi empti set step 3 generate2 replac test r bi test r biffi leav reader verifi correct procedur necessari updat phi ffi much effort requir updat suppos chang 0 necessari perform updat follow circumst order minim effort updat phi ffi phi implement prioriti queue data structur one four event occur olog jphij oper suffici updat pseudo upper bound chosen larg enough jphij ffi typic small howev chosen small accept probabl becom undesir low 63 method iii global updat method ii may possibl determin priori good pseudo upper bound may case appropri choic pseudo upper bound chang evolut underli process simul case may want consid occasion global updat pseudo upper bound reiniti array c b reiniti make sure entri b close 1 cours process global updat costli requir time done rare may advantag compar n may worthwhil perform global updat detect given time low small mani entri array b much less 1 make use follow sampl process pick say 10 log n random outcom major fraction outcom entri much less say 12 b array perform global updat use chernoff bound show major fraction sampl low b valu major fraction b valu low high probabl also perform check everi 20 log n sampl thu make sure total addit cost per sampl due check fraction similar reiniti mention 8 conclus paper present three simpl algorithm gener nonuniform discret random variat chang distribut fairli unrestrict assumpt algorithm expect o1 run time simul result 14 confirm competit algorithm relat futur event schedul algorithm wide use though algorithm use mani applic import open problem follow exist constant time algorithm discret random variat gener make assumpt way rate xs chang algorithm posit step direct acknowledg grate professor georg fishman professor bennet fox professor kurt mehlhorn dr marti reimann valuabl comment r fast probabilist algorithm hamiltonian circuit match journal comput system scienc 182 guid simul measur asymptot effici test hypothesi base sum observ annal mathemat statist 23 nonuniform random variat gener springer exploit special structur improv futur event set manag simul technic report shorten futur event list appear orsa j gener markovchain transit quickli oper research societi america journal comput gener markovchain transit quickli ii oper research societi america journal comput queue system comput perform evalu methodol ogi ieee transact comput 33 introduct algorithm creativ approach effici simul largescal loss network technic report mscis9162 deriv random sort select algo rithm technic report introduct queue network tr guid simul 2nd ed introduct algorithm ctr paul b callahan outputsensit gener random event proceed ninth annual acmsiam symposium discret algorithm p374383 januari 2527 1998 san francisco california unit state keith w ross danni h k tsang jie wang mont carlo summat integr appli multiclass queu network journal acm jacm v41 n6 p11101135 nov 1994