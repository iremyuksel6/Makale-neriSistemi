lazi sweep ray cast algorithm render irregular grid abstractlazi sweep ray cast fast algorithm render gener irregular grid base sweepplan paradigm abl acceler ray cast render irregular grid includ disconnect nonconvex even hole unstructur irregular grid render cost decreas disconnected decreas algorithm care tailor exploit spatial coher even imag resolut differ substanti object space resolutionlazi sweep ray cast sever desir properti includ gener depthsort accuraci low memori consumpt speed simplic implement portabl eg hardwar dependenciesw establish practic method experiment result base implement shown substanti faster two order magnitud algorithm implement softwarew also provid theoret result lower upper bound complex ray cast irregular grid b introduct visual threedimension data whether scalar vector direct volum render emerg lead often prefer method surfac render method partial support sandia nation lab nation scienc foundat nsf grant cda9626370 part work conduct c silva partial support cnpqbrazil phd fellowship partial support grant nsf ccr9504192 hugh aircraft boe sun microsystem appli visual volumetr data requir extract structur isosurfac streamlin may bia result visual render volumetr data directli treat space compos semitranspar materi emit transmit absorb light therebi allow one see see insid data 43 22 21 volum render also allow one render surfac fact chang properti light emiss absorpt differ light effect achiev 18 common input data type regular cartesian grid voxel given gener scalar field 3 one use regular grid voxel repres field regularli sampl function grid point j k integ j k scale factor 2 therebi creat regular grid voxel howev seriou drawback approach aris scalar field dispar nonuniform resolut larg region space littl field variat small region space high field variat case often aris comput fluid dynam partial differenti equat solver use regular grid infeas sinc voxel size must small enough model smallest featur field instead irregular grid mesh cell necessarili uniform cube propos effect mean repres dispar field data irregular grid data come sever differ format 37 41 one common format curvilinear grid structur grid comput space warp physic space preserv topolog structur connect regular grid howev introduct new method gener higher qualiti adapt mesh becom increasingli common consid gener unstructur noncurvilinear irregular grid implicit connect inform furthermor applic disconnect grid aris render irregular grid identifi especi import research area visual 17 basic problem consist evalu volum render equat 21 pixel imag screen necessari line sight ray imag pixel sort order cell mesh along ray inform use evalu overal integr render equat paper present analyz lazi sweep ray cast algorithm new method render gener mesh includ unstructur possibl disconnect irregular grid primari contribut lazi sweep ray cast lsrc algorithm new method accur calcul depthsort order lsrc base ray cast employ sweepplan ap proach propos giertsen 15 introduc sever new idea permit faster execut theori practic paper built upon paper silva mitchel kaufman 36 fundament method develop month sinc write 36 made sever improv extens report latest result compar result earlier work 36 definit terminolog polyhedron close subset 3 whose boundari consist finit collect convex polygon 2face facet whose union connect 2manifold edg 1face vertic 0face polyhedron simpli edg vertic polygon facet convex polyhedron call polytop polytop exactli four vertic four triangular call simplex tetrahedron finit set polyhedra form mesh unstructur irregular grid intersect two polyhedra either empti singl common edg singl common vertex singl common facet two polyhedra set said form cell complex polyhedra mesh refer cell 3face boundari mesh also boundari convex hull call convex mesh otherwis call nonconvex mesh cell simplic say mesh simplici given mesh let c denot number connect compon say mesh connect otherwis mesh disconnect let n denot total number edg polyhedr cell mesh vertic edg facet cell theoret discuss assum input mesh given standard data structur cell complex eg facetedg data structur 10 cell pointer neighbor cell basic travers facet also possibl follow pointer raw data topolog inform alreadi encod obtain preprocess step use basic hash method implement lsrc algorithm reli simpl econom structur input data particular store vertex v use set see 32 simpli list cell mesh use v v vertex cell note requir storag sinc total size use set bound sum size cell imag space consist screen nbyn pixel let ae ij denot ray eye camera center pixel index j let k ij denot number facet intersect ae ij final let total complex ray cast imag refer k output complex clearli omegagamma k lower bound complex ray cast mesh note sinc n 2 ray intersect facet relat work simpl approach handl irregular grid resampl therebi creat regular grid approxim render convent method 28 42 order achiev high accuraci may necessari sampl high rate requir substanti comput time may well make result grid far larg storag visual purpos sever render method optim case curvilinear grid partic ular fruhauf 12 develop method ray bent match grid deform also exploit simpl structur curvilinear grid mao et al 20 shown grid effici resampl sphere ellipsoid presort along three major direct use splat direct approach render irregular grid comput depth sort cell mesh along ray eman screen pixel irregular grid especi disconnect grid nontrivi comput effici one alway take naiv approach n 2 ray comput intersect cell boundari facet time cross point log n time howev result overal time 2 n log n take advantag coher data sort order cell cross one ray use way assist process nearbi ray garriti 14 propos preprocess step identifi boundari facet mesh process ray pass interior cell mesh connect inform use move cell cell constant time assum cell convex constant complex everi time ray exit mesh boundari facet necessari perform firstcel oper identifi point ray first reenter mesh garriti use simpl spatial index scheme base lay regular grid voxel cube top space record facet voxel intersect cast ray regular grid one search intersect among facet store voxel stab ray firstcel oper fact ray shoot queri field comput geometri provid data structur one either answer queri time olog n cost preprocess storag 2 4 8 27 answer queri worstcas time 34 use data structur essenti linear n 3 33 term worstcas complex reason believ tradeoff queri time storag space essenti best possibl unfortun algorithm rather complic high constant yet implement shown practic certainli data structur superlinear storag cost practic volum render motiv mitchel mount suri 23 devis method ray shoot queri sensit worstcas complex answer queri depend notion local combinatori complex associ reason estim difficulti queri easi queri take provabl less time hard queri data structur base octre 31 extra care need keep space complex low achiev provabl good queri time uselton 39 propos use zbuffer speed firstcel ramamoorthi wilhelm 30 point approach effect 95 time also point 35 time spent check exit cell 10 entri cell 19 describ parallel garriti method one disadvantag ray cast approach exploit coher nearbi ray may cross set cell anoth approach render irregular grid use project feedforward method 22 45 34 38 cell project onto screen onebyon visibl increment accumul contribut final imag one advantag method abil use graphic hardwar comput volumetr light model order speed render anoth advantag approach work object space allow coher exploit directli project cell onto imag plane may end larg region pixel correspond ray depth order discov without explicitli cast ray howev order project possibl depth order cell comput cours alway possibl even set three triangl cyclic overlap comput verifi depth order possibl 43ffl time 1 7 9 ffl 0 arbitrarili small posit constant case depth order exist import problem find small number cut break object way depth order exist see 7 5 bsp tree use obtain decomposit result quadrat number piec 13 26 howev import class mesh eg rectilinear mesh delaunay mesh 11 known depth order alway ex ist respect viewpoint structur exploit max et al 22 william 45 obtain lineartim algorithm visibl order convex connect acycl mesh whose union convex cell convex assum visibl order exist william also suggest heurist appli case visibl order case nonconvex mesh eg tetrahedr nonconvex unfortun may result quadrat number cell 40 techniqu present depth order strictli necessari case calcul approxim fast render achiev use graphic hardwar project partial sort face recent scanlin techniqu handl multipl overlap grid present 44 process set polygon facet cell first bucket accord scanlin contain topmost vertex maintain yactiv list polygon present scanlin sweep top bottom scanlin scan x bucket polygon accord left extent maintain via merg zsort list polygon scan left right method parallel use within multiresolut hierarchi base kd tree two import refer render irregular grid yet discuss giertsen 15 yagel et al 47 elabor next section close relat method summari project method potenti faster ray cast method sinc exploit spatial coher howev project method give inaccur render visibl order method break cycl either heurist natur potenti costli term space time standard algorithm paradigm comput geometri sweep paradigm 29 com monli sweeplin swept across plane sweepplan swept across 3space data structur call sweep structur statu maintain simul continu sweep certain discret event eg sweeplin hit one discret set point sweep structur updat reflect chang idea local problem solv solv within lower dimension space sweeplin sweepplan process problem accord systemat sweep space sweep algorithm sweep plane intersect sweep plane z axi view plane axi scanlin x axi figur 1 sweepplan perpendicular yaxi use sweep 3space abl exploit spatial coher data giertsen method giertsen pioneer work 15 first step optim ray cast make use coher order speed render perform sweep mesh 3space use sweepplan parallel xz plane view coordin system view plane xy plane view direct z direct see figur 1 algorithm consist follow step 1 transform vertic view coordin system 2 sort transform vertic ycoordin put order vertic well ycoordin scanlin view imag event prioriti queue implement case array 3 initi activ cell list acl empti acl repres sweep statu maintain list cell current intersect sweepplan 4 empti pop event queue event correspond vertex v go b otherwis go c b updat acl insertdelet appropri cell incid v giertsen assum cell disjoint v belong singl cell c render current scanlin giertsen use memori hash buffer base regular grid squar sweepplan allow straightforward cast ray lie current scanlin sweep 3space giertsen reduc ray cast problem 3space 2dimension cell sort problem giertsen method sever advantag previou ray cast scheme first need maintain connect inform cell mesh fact assum cell disjoint second comput expens ray shoot 3space replac simpl walk regular grid cell plane final method abl take advantag coher one scanlin next howev drawback method includ 1 origin data coarsen finit resolut buffer memori hash buffer render basic limit resolut render possibl creat alias effect one could simpli increas size buffer approach impract larg dataset cell size variat order 1100000 giertsen mention cell get map locat consid degener case later cell ignor howev resolut might lead tempor alias calcul multipl imag 2 anoth disadvantag compar ray cast techniqu need two copi dataset transform sort cell must done sweep start note also featur cell project method one keep retransform singl copi sinc float point error could accumul yagel et al method 46 47 yagel et al propos method use sweepplan parallel view plane posit sweepplan plane intersect grid result twodimension slice whose cell scanconvert use graphic hardwar order obtain imag slice composit previous accumul imag result sweep far sever optim possibl exampl instead perform full sort along zdirect bucket techniqu use also intersect mesh edg slice acceler store increment step size deltax deltay correspond interslic distanc deltaz howev speedup requir consider memori furthermor storag polygon given slice requir signific amount memori eg 134 mb blunt fin 47 method handl gener polyhedr grid without comput adjac informa tion conceptu gener high qualiti imag expens slice oversampl simplic method make attract implement use ideal user access highperform graphic hardwar abund memori 3 lazi sweep ray cast algorithm design new method base two main goal 1 depth order cell correct along ray correspond everi pixel 2 algorithm effici possibl take advantag structur coher data first goal mind chose develop new ray cast algorithm order abl handl cycl among cell case caus difficulti project method address second goal use sweep approach giertsen order exploit interscanlin interray coher algorithm follow advantag giertsen 1 avoid explicit transform sort phase therebi avoid storag extra copi vertic 2 make requir assumpt level connect convex among cell mesh howev take advantag structur mesh run faster case involv mesh convex cell convex compon 3 avoid use hash buffer plane therebi allow accur render even mesh whose cell greatli vari size 4 abl handl parallel perspect project within framework without explicit transform 31 perform sweep sweep method like giertsen sweep space sweepplan orthogon view plane xy plane parallel scanlin ie parallel xz plane event occur sweepplan hit vertic mesh rather sort vertic advanc place auxiliari data structur therebi least doubl storag requir maintain event queue prioriti queue appropri small subset mesh vertic simpl lineartim preprocess pass data readili identifi set vertic boundari mesh initi event queue boundari vertic priorit accord magnitud inner product dot product vector repres yaxi view coordin system ie accord ycoordin explicitli transform coordin furthermor given instant event queue store set boundari vertic yet swept plu vertic upper endpoint edg current intersect sweepplan practic event queue rel small usual account small percentag total data size sweep take place new vertic nonboundari one insert delet event queue time sweepplan hit vertex sweep algorithm proce maintain sweep statu data structur record necessari inform current slice activ edg list see section 5 sweepplan encount vertex event determin event queue sweep statu event queue data structur must updat main loop sweep algorithm pop event queue obtain next vertex v hit check whether sweepplan encount v reach ycoordin next scanlin hit v first perform appropri insertionsdelet event queue sweep statu structur easili determin local test check sign dot product neighborhood v otherwis sweepplan encount scanlin point stop sweep drop twodimension ray cast procedur also base sweep describ algorithm termin last scanlin process 32 process scanlin sweepplan encount scanlin current 3d sweep statu data structur give us slice mesh must solv twodimension ray cast problem let denot polygon planar subdivis current scanlin ie subdivis obtain intersect sweepplan mesh time linear size subdivis recov geometri topolog step sweep statu structur util local topolog cell slice sweep statu give us set edg intersect sweep plane edg defin vertic edg obtain search set triangular facet incid edg implement howev construct explicitli given implicitli sweep statu data structur list activ edg local reconstruct need twodimension sweep describ detail implement nontrivi present section 5 twodimension ray cast problem also solv use sweep algorithm sweep plane sweeplin parallel z axi case perspect project sweep ray emin viewer eye event correspond vertic planar subdivis occur intersect point activ edg 3d sweep statu current sweepplan event point process xorder thu begin sort altern approach mention section 4 proceed 3d first identifi sort local extrem vertic maintain event queue sweep sinc singl slice rel event point compar size opt implement simpli sort outright sweeplin statu order list segment cross sweeplin sweeplin statu initi empti pass sweeplin updat sweeplin statu event point make local insert delet necessari analog bentleyottmann sweep use comput line segment intersect plane 29 also stop sweep xcoordin correspond ray cast ie pixel coordin along current scanlin output render model sort order depth order given current sweeplin statu analysi upper lower bound proceed give theoret analysi time requir render irregular grid begin neg result establish lower bound worstcas run time theorem 1 lower bound let mesh c connect compon n edg even cell log n lower bound worstcas complex ray cast cell convex connect compon union cell compon convex log c lower bound k total number facet cross n 2 ray cast mesh one per pixel imag plane proof clear lower bound sinc k size output ray cast let us start case c convex compon mesh made set convex cell assum one ray trace lie exactli along zaxi fact assum one pixel origin imag plane ray cast one along zaxi k simpli measur mani cell intersect show lower bound log c simpli note ray trace algorithm output intersect cell order along ray use sort c number z construct oc time tini disjoint tetrahedr cell one center z consid case connect mesh whose cell convex assum local connect cell part input mesh data structur claim theorem even inform still must effect perform sort claim cast singl ray along zaxi requir effect sort n number z take unsort number z construct mesh follow take unit cube center origin subtract cylind center zaxi cross section shape regular 2ngon radiu less 12 remov half polyhedr solid lie xz plane polyhedron p genu 0 construct time refer n skinni rectangular facet bound concav wall point 0 0 z creat thin wedg contain 0 0 z point 0 0 z j j 6 wedg attach wall touch wall refer figur 2 polyhedron p still genu 0 size polyhedron easili decompos time convex polytop zaxi intersect pierc n wedg order given sort order z thu output ray trace algorithm one ray along zaxi must give us sort order n wedg henc n number log n bound follow ut remark may tempt think one given convex mesh eg connect tetrahedr cell inform use sort vertic mesh eg x coordin linear time therebi use topolog inform make sweep algorithm effici howev easi show even 2 dimens given triangul complet topolog inform still requir log n sort n vertic xcoordin proof base reduct sort left reader upper bound previou theorem establish lower bound show worst case ray cast method complex superlinear problem size essenti forc figur 2 lower bound construct sort howev patholog situat lower bound construct unlik aris practic examin upper bound run time sweep algorithm propos discuss complex written term paramet captur problem instanc complex first give worstcas upper bound sweep 3space vertex event plu n presort event stop sweep process 2dimension slice correspond scanlin oper insertiondelet prioriti queue requir time olog maximum size event queue worst case order n get worstcas total log n time perform sweep 3space scanlin slice must perform sweep well subdivis worstcas size event sweep algorithm includ vertic subdivis intersect slice plane edg mesh well n presort event stop sweeplin discret pixel valu x order output order size k ij ith pixel jth scanlin along sweeplin pass render modul thu worst case sweep 2space requir time log n slice j overal cost n slice p product term nn bound ok log n due fact n slice might complex roughli n howev pessimist bound practic situat instead let n denot total sum complex n slice practic expect n much smaller nn potenti n consider smaller n exampl mesh uniform may expect slice complex n 23 case n 13 byn 13 byn 13 grid give rise n write complex term n get worstcas run time ok note worst case may everi one n 2 ray cross upper bound ok n contrast bound 2 n log n obtain naiv method ray cast comput intersect n 2 ray facet sort intersect along ray omegagamma n facet mesh thu output size k could end domin term complex algorithm note even best case sinc n 2 ray log n term upper bound come sweep 3space worst case may forc effect sort vertic via insertionsdelet event queue discuss analyz complex term number n c critic vertic approach use 2dimension triangul algorithm hertel mehlhorn 16 consid sweep 3space sweepplan say vertex v critic small neighborhood v number connect compon slice chang sweepplan pass v thu vertic local min max critic also saddl point may critic let n c denot number critic vertic note lower bound construct show worst case must resort sort quit contriv particular n c omegagamma n one would expect practic n c small say order c number connect compon mesh conduct sweep 3space care get away sort critic vertic result total time construct n slice similarli hertel mehlhorn 16 abl triangul polygon region plane time compar previou bound log n base plane sweep main idea exploit topolog coher slice note number connect compon chang critic vertic ycoordin sort along n scanlin particular use depthfirst search construct connect compon within slice given start seed point compon seed point obtain seed point previou slice simpli walk along edg grid direct increas ycoordin one seed next slice total time walk chang occur critic vertic local point process time linear degre critic vertic overal sweep 3space give us slice process alreadi describ note extrem vertic within slice discov construct slice vertic need sort put initi event queue sweep slice summari theorem 2 upper bound ray cast irregular grid n edg perform n size output total number facet cross cast ray n total complex slice n number critic vertic remark upper bound show linear depend n lower bound theorem show omegagamma n log n lower bound contradict sinc proof lower bound construct n critic vertic agreement upper bound figur 3 illustr sweep one slice anoth potenti save particularli imag resolut low compar mesh resolut jump one slice next without use sweep discov one slice evolv next instead construct next slice scratch use depthfirst search mesh use seed point found intersect new slice plane critic subgraph mesh edg connect critic vertic mesh cours know priori better sweep slice slice construct slice scratch thu perform method parallel two processor use result obtain first processor complet task altern achiev effect use singl processor perform lock step algorithm step altern two method result asymptot complex minimum complex two method scheme appli sweep 3space also sweep slice illustr method quit use consid situat figur 3 drawn 2 dimens depict case 3space well sweep line 2 line 3 huge complex must swept may costli compar rebuild scratch slice along line 3 hand sweep line 5 line 6 quit cheap essenti chang geometri topolog construct slice along line 6 scratch would quit costli perform two method parallel lock step take advantag best method result algorithm exploit coher data run time sensit sens complex visual task note practic imag resolut low one would probabl prefer oversampl filter rather use method jump slice slice ray ray 5 implement detail implement version main lsrc algorithm simplif discuss detail implement concentr relev issu uniqu implement lsrc tri present enough detail experienc graphic programm reproduc result minim guess work current implement handl gener disconnect grid howev also assum simplic cell mesh tetrahedra simplic extens complex convex even nonconvex cell conceptu straightforward detail somewhat tediou contribut basic understand algorithm way implement algorithm differ method discuss previous section upper bound two reason simplic code effici practic term run time term memori discuss point implement algorithm differ 3d sweep insert heap boundari vertic grid rather critic vertic 2d sweep maintain sweeplin statu implement entireti consist less 5000 line c code yet attempt optim code expect improv major modul program includ 3d sweep sweep input mesh plane orthogon view plane maintain activ edg list aedg mark tetrahedra swept 2d sweep sweep slice produc sort intersect cell along ray scanlin also graphic modul handl comput coordin respect view coordin frame manag modul comput transfer function optic integr simpl shade speak x zcoordin calcul use simpl dot product defin unit vector view frame result full coordin transform seek avoid major data structur due larg size irregular grid effici data structur substanti influenc perform memori requir implement basic two big data structur vertex list contain vertex posit field valu use set list tetrahedra contain coupl util data field eg generalpurpos flag tetrahedron list contain tetrahedron pointer four vertic one flag data field use indic sweepplan reach yet 3d sweep experi two main data structur typic occupi 95 overal space use algorithm organ data memori effici allow necessari connect inform recov quickli within algorithm sinc tetrahedron contain 4 vertic total amount memori requir use set bound 4 theta number tetrahedra clearli extend cell complex compos cell bound complex collect vertic boundari mesh list sweep preinsert prioriti queue import note point boundari need insert 3d sweep sweepplan orthogon yaxi move top bottom direct decreas sweep progress need abl detect next event correspond closest vertex direct 3d sweep yaxi done maintain prioriti queue contain vertic sort along yaxi particular prioriti queue contain vertic yet encount sweepplan bottom endpoint activ edg intersect sweepplan prioriti queue implement heap 3dheap vertic insert discov neighbor vertex encount sweepplan delet swept sweep statu data structur explicitli keep list activ tetrahedra necessari keep list aedg edg current activ aedg activ edg list central data structur implement aedg element contain data field use sever differ phase algorithm yet attempt optim storag space associ aedg list typic contain particularli larg number element sinc repres cross section dataset size cross section typic n 23 eg regular mbymbym mesh cross section complex om 2 activ edg entri aedg contain pointer endpoint record intersect current posit sweepplan pointer top segment bottom segment defin detail 2d sweep data field use bookkeep addit insert delet aedg list must support endpoint queri given pair vertic v w determin entri aedg pair endpoint implement simplemind hashbas dictionari data structur experi use data structur keep aedg binari tree overhead keep complex data structur seem outweigh advantag b c figur 4 process cell c 3d sweep sweepplan hit topmost vertex c three incid edg ad aedg b sweepplan hit intermedi vertex c one edg remov aedg two edg ad c sweepplan hit anoth intermedi vertex c two edg remov aedg one edg ad sweep plane hit bottommost vertex c three edg remov aedg 2d sweep also use segment data structur store pair activ edg belong facet cell pair activ edg determin line segment current slice segment object also two pointer field allow construct doublelink list segment object correspond sweeplin statu data structur depthsort segment along ray 3d sweep 3d sweep event determin sweepplan hit vertex arriv scanlin sinc ycoordin scanlin predetermin sort concern ycoordin vertic sinc tri lazi sweep interest avoid creat singl sort list vertic proceed follow first singl preprocess pass vertex list identifi vertic lie boundari grid typic set vertic tini fraction total set given view frame insert boundari vertic 3dheap base ycoordin key valu current implement take advantag fact restrict attent critic vertic discuss section 4 boundari vertic identifi preprocess step oppos critic vertic defin respect viewdepend yaxi still small superset critic vertic aspect algorithm allow us exploit nice structur may present input grid connect compon compon wellshap rel boundari vertic allow 3d sweep algorithm run faster nonlinear time compon algorithm sensit number vertic boundari grid next begin sweep use 3dheap identifi vertex event sweep progress process vertex event natur way make insert delet 3dheap aedg list accordingli base use set vertex determin local geometri therebi decid insertionsdelet make see figur 4 vertex event process proce follow 3dheap empti 1 remov 3dheap vertex v smallest key valu ycoordin 2 cell c contain v v topmost vertex c insert vertic c 3dheap add incid edg aedg list mark c vertic visit b v bottommost vertex c remov incid edg aedg list c otherwis make insert delet aedg list accord edg incid v 3d sweep stop time sweepplan arriv scanlin point 2d sweep occur correspond slice rather explicitli construct slice eg build wingededg data structur 2dimension subdivis use aedg list repres implicitli structur refer line segment edg subdivis segment rather edg order distinguish edg 3dimension mesh element aedg sinc segment determin pair edg bound common face segment data type simpli store pair endpoint segment determin intersect edg pair sweepplan 2d sweep maintain order segment intersect line parallel zaxi swept across slice data structur sweeplin statu typic sweeplin algorithm util form balanc binari tree order effect effici logarithm insert delet lookup sweeplin statu structur inde first implement 2d sweep use binari tree store sort order segment cross see 36 howev experiment determin differ simpler approach work faster practic even though guarante logarithm worstcas perform thu describ current method maintain sweeplin statu structur 2d sweep begin comput intersect activ edg aedg sweepplan cach sort x place event prioriti queue implement heap 2dheap sinc singl slice rel small size go ahead case full sort simplic implement sweeplin statu structur implement doubli link list segment object repres sort list segment intersect current sweeplin sweeplin hit activ edg ie hit point p slice activ edg intersect slice process event make updat sweeplin statu structur 2dheap necessari overal sweep algorithm proce follow 2dheap empti 1 remov 2dheap activ edg v smallest key valu xcoordin let v 0 vertex current slice 2 cell c use set v 0 c use set v 1 done consid c sinc v edg c otherwis proceed b b vertic c exactli two case tetrahedr cell determin form activ edg queri aedg list one v 0 instanti segment correspond edg v segment object insert explain doubli link sort list correspond sweeplin statu structur step 2b discov segment incid event point p intersect activ edg v sweepplan updat sweeplin statu structur done manner exploit topolog structur mesh see figur 5 particular point p encount leftward segment incid p identifi use top bottom pointer describ delet doublylink list time insert rightward segment incid p sort angl use dot product comput p use insert point posit list leftward segment way need search sort list segment except case leftward segment incid p case naiv lineartim search link list could search insert effici worstcas logarithm time found overhead associ data structur pay practic vast major case linear search sinc event point one leftward segment inde event point leftward segment critic sens describ earlier hertel mehlhorn 16 specif maintain activ edg pointer two addit segment object top segment bottom segment repres topmost bottommost respect among leftward segment incid correspond cross point p pointer initi null maintain pointer time new segment ad discov left endpoint point check right endpoint potenti updat topbottom segment pointer correspond activ edg activ edg correspond event point p nonnul top bottom pointer know add new segment right p without search whole sweeplin statu structur pointer null must linear search locat p link list sinc case p leftward segment sever advantag new approach compar former binarytre approach notic insert edg share endpoint allow much simpler robust order function implement use 2d determin method requir 4 subtract two multipl one comparison gener case plu two extra comparison handl degeneraci determin correct order two segment share endpoint perform insert sweeplin statu still care handl degeneraci like 36 case analysi much simpler figur 5 illustr action 2d sweep solid thick edg repres element segment data structur current sweeplin dash element touch sweeplin yet sweeplin encount event point p discov edg p q therefor updat bottom segment q b q p q top segment q q remain unchang final render issu issu handl degeneraci event point happen coincid ycoordin scanlin xcoordin pixel within scanlin thu 3d sweep must care process event vertic ycoordin start process 2d slice similarli sweep slice perform render along ray event point may xcoordin ray process interpol origin scalar field provid origin vertic render need abl evalu field given point form interpol necessari nontrivi step gener consider research devot topic refer reader 24 25 current implement tetrahedr cell approach straightforward comput valu scalar field point r ray cross segment p q 2d slice first use linear interpol along activ edg aedg defin p q comput valu p q third interpol along p q determin valu r light model stab order cell along ray comput singl scatter light model appli see 21 survey implement simpl light model propos uselton 39 cell size taken consider assumpt cell import cell abl gener good pictur method tend overemphas portion volum particularli high cell densiti 6 experiment result dataset code current handl dataset compos tetrahedr grid possibl disconnect nonconvex boundari input format similar geomview file format simpli number vertic tetrahedra follow list vertic list tetrahedra specifi use vertex locat file index format compact handl gener disconnect grid fairli simpl fast recov topolog inform maintain explicit topolog inform input file would wast much space test run use tetrahedr version 4 differ dataset origin nasa plot3d format dataset broke hexahedr cell 5 tetrahedra inform dataset summar tabl 1 see volumerend imag figur 811 besid test lsrc sever artifici dataset debug purpos particular gener simpl dataset disconnect compon name dimens vertic cell blunt fin 40 theta 32 theta 32 40960 187395 liquid oxygen post 38 theta 76 theta 38 109744 513375 wing 56 theta 54 theta 70 211680 1005675 combust chamber 57 theta 33 theta 25 47025 215040 tabl 1 list dataset use test dimens origin nasa plot3d size vertic cell actual size use lsrc render memori requir lsrc memori effici see section 5 detail data structur besid input dataset memori consumpt prioriti queue aedg segment data structur small practic low storag requir due increment comput touch cross section dataset time see tabl 2 detail overal memori consumpt render dataset number independ screen size render although depend view given differ cross section dataset might lead differ memori usag pattern data structur blunt fin liquid oxygen post delta wing combust chamber dataset size 78mb 213mb 418mb 9mb aedg 390kb 675kb 214mb 375kb segment 8kb 8kb 20kb 4kb tabl 2 memori consumpt render dataset size includ memori necessari keep vertic includ use set tetrahedra aedg row give space use store list activ edg cut current sweepplan segment row give storag requir sweeplin statu repres stab order cell along ray perform analysi primari system measur silicon graphic power challeng equip processor r10000 195mhz 3gb ram use one processor experi disk io number reflect read local disk present render figur tetrahedr version dataset describ tabl 1 expect render time consider less work directli hexahedr cell without first tetrah draliz howev current implement assum tetrahedr cell lsrc code compil nativ sgi compil irix 62 optim level o3 time report second repres measur wallclock time tabl 3 present time read preprocess dataset input file current ascii requir amount pars upon read thu read time domin pars time disk access time use binari file would like improv effici use ascii file simplifi manual creation test sampl oper blunt fin liquid oxygen post delta wing combust chamber read 386 1048 2069 451 connect 347 962 1898 402 boundari vertic 6760 13840 20736 7810 tabl 3 time spent read preprocess data read account time spent read pars dataset disk connect repres time spent recov adjac boundari inform boundari vertic row give number vertic classifi boundari dataset tabl 4 present render time differ dataset dataset render differ resolut primarili would make sens present squar imag sinc project cover squar region also present pixel coverag number full pixel imag render time 34 time faster one present earlier 36 36 blunt fin liquid oxygen post use report took 70 second render blunt fin new result report obtain time 22 second improv factor 31 post dataset improv 145 second 37 second factor 39 blunt fin liquid oxygen post delta wing combust chamber imag size 530 theta 230 300 theta 300 300 theta 300 300 theta 200 render time 22 37 64 19 full pixel 83264 70503 48009 33947 tabl 4 render result four dataset also test algorithm scale imag size render liquid oxygen post 3 differ resolut 300 theta 300 70503 full pixel 600 theta 600 282086 pixel 900 theta 900 634709 pixel render time 37 second 82 second 136 second respect indic cost per pixel actual decreas imag size increas match intuit larger imag less useless sort per scanlin 2dsweep basic get sort inform continuum along scanlin use inform along pixel actual render imag size get larger less sort work 2dsweep per pixel render larg imag shade cost domin point sort becom essenti free constant cost given dataset view far shown new method 3 time fast one present 36 import understand speedup achiev order abl analyz differ recalcul figur 5 6 36 use new method use dataset eg blunt fin order make direct perform comparison possibl figur 6 illustr number activ edg vari 3d sweep figur correspond figur 5 36 figur 7 illustr render time break task function scanlin blunt fin dataset compar earlier result present 36 render scanlin involv comput intersect point sort along direct scanlin perform 1d sweep sort along ray increment basic involv process event final shade intergr time two compon present figur 7 correspond 85 overal time spent render event handl time approxim 50 time integr time 30 result figur 7 compar figur 6 36 improv 2d sweep explain previou section result sever chang first process scanlin 3 time fast second event handl time much lower previous account 80 render time lower cost handl event clearli see rel increas cost shade phase event handl cost domin process time neglig appear clearli graph perform number indic 1 time process given scanlin directli correl number activ edg corr 0number activ edg scanlin number activ edg figur size aedg list function scanlin ycoordinate0050150250350 20 40 time scanlin number total time event handl time integr time figur 7 illustr breakdown total render time per scanlin total time repres actual time scanlin requir render order avoid clutter plot two major compon render time shown event handl time time process activ edg enter exist sweeplin statu integr time time necessari shade calcul spond slice 2 cost per scanlin vari depend complex slice render 3 event handl time still domin total time spent per scanlin 36 event handl time clearli bottleneck render speed still account 50 overal render time futur improv may possibl base reus intersweep plane sort inform use form jump complex pixel lockstep idea propos perform comparison recent report irregular grid ray caster 19 octob 1995 use intel paragon superscalar 50mhz intel i860xp report render time two dataset artifici gener cube dataset 130000 tetrahedra flow dataset 45500 tetrahedra report time singl cpu run experi use two process node cube report take 2415 second 2234 second ray cast rest parallel overhead 480by480 imag approxim 230000 pixel total cost 105 millisecond per pixel cost per tetrahedron 185 1718 millisecond flow dataset report 1593 1585 millisecond imag size cost 69 68 millisecond per pixel 3501 348 millisecond per tetrahedron giertsen 15 report run time 38 second 3681 cell 1032 millisecond per cell dataset small uniform allow direct meaning comparison howev implement handl cell complex 100 time number cell use fraction cost per cell yagel et al 47 report render blunt fin use sgi realiti engin 2 9 second use total 21mb ram use 50 slice plane 100 plane report render time 1317 second render time depend number slice plane cours affect accuraci pictur gener 50slice render liquid oxygen post take 20 second use 57mb ram take almost 43 second use 1117mb ram order facilit comparison tabl 5 summar perform result avail data report algorithm compar number tabl 4 see lsrc much faster ray cast algorithm furthermor compar perform yagel et al method 100slice render use less half memori use techniqu look increas render time dataset get larger see larger dataset advantag use lsrc techniqu 7 algorithm extens section mention possibl extens work dataset cell ren time pixel cell imag size memori algorithm blunt fin 187395 22 180 117 530 theta 230 8mb lsrc post 513375 37 411 72 300 theta 300 22mb lsrc post 513375 82 227 159 600 theta 600 22mb lsrc post 513375 136 167 264 900 theta 900 22mb lsrc wing 1005675 64 711 63 300 theta 300 44mb lsrc chamber 215040 19 316 88 300 theta 200 9mb lsrc blunt fin 187395 70 373 664 527 theta 200 8mb 36 post 513375 145 1611 282 300 theta 300 22mb 36 cube 130000 2415 10500 18500 480 theta 480 na flow 45500 1593 6900 35010 480 theta 480 na blunt fin 187395 911 na 48 na 21mb yagel blunt fin 187395 13s17 na 6991 na 21mb yagel post 513375 2045 na 40 na 57mb yagel wing 1005675 4297 na 42 na 112mb yagel na 3681 38 144 10320 512 theta 512 27mb giertsen tabl 5 perform summari sever algorithm indic last column lsrc result lazi sweep ray cast algorithm propos paper 36 result obtain previou work yagel result report 47 result report 19 giertsen result report 15 tabl includ column indic dataset use size possibl cost per pixel per cell memori usag algorithm yagel et al 50plane render time report except row mark repres render time use 100 plane 1 current implement assum tetrahedr cell conceptu simpl extend arbitrari cell method appli gener 2 straightforward gener method case multipl grid simpli perform sweep independ sever grid merg sort result along ray render 3 investig possibl method improv algorithm exploit coher scanlin slice reason expect us abl reus much slice inform one scanlin next particular order event point nearli two consecut slice improv could help address current bottleneck code interest possibl extens work investig applic outofcor case dataset larg fit main memori must care control number page oper disk spatial local memori access indic abl employ prefetch techniqu achiev fast render irregular grid much larger memori final method natur candid parallel see silva 35 chapter 5 discuss parallel issu conclus paper propos fast new algorithm term lazi sweep ray cast lsrc algorithm render irregular grid base sweepplan approach method similar ray cast method need transform grid instead use project method adjac inform avail determin order attempt optim render interest featur algorithm run time memori requir sensit complex render task furthermor unlik method giertsen 15 conduct ray cast within slice sweepplan sweeplin method whose accuraci depend uniform featur size slice method abl handl gener type grid without explicit transform sort use method therebi save memori comput time perform accur ray cast dataset establish practic method experiment result base implement also discuss theoret lower upper bound complex ray cast irregular grid report time result show method compar favor ray cast scheme mani instanc two order magnitud faster publish ray cast result anoth advantag method memori effici make suitabl use larg dataset difficult give direct comparison method hardwarebas techniqu eg 47 yield impress speedup pure softwarebas algorithm hand softwarebas solut broaden rang machin code run eg much code develop small laptop 16mb ram acknowledg indebt ari kaufman extens discuss encourag research well contribut paper precursor 36 paper prepar jointli kaufman also thank center visual comput kaufman director use comput resourc experi thank dirk bartz pat crossno georg davidson juliana freir dino pavlako ashish tiwari brian wyli use critic help work blunt fin liquid oxygen post delta wing dataset courtesi nasa combust chamber dataset vtk 32 r comput rang search semialgebra set applic new partit scheme count cut cycl line rod space introduct algorithm lectur note comput scienc effici comput verifi primit manipul threedimension subdi vision acycl theorem cell complex dimens raycast nonregularli structur volum data visibl surfac gener priori tree structur raytrac irregular volum data volum visual spars irregular mesh fast triangul plane respect simpl polygon research issu volum visual display surfac volum data parallel volum render unstructuredgrid data distribut memori machin splat curvilinear grid optic model direct volum render area volum coher effici visual 3d scalar function querysensit scatter data model visual model scatter multivari data effici binari space partit hiddensurfac remov solid model ray shoot triangl 3space parallel voxel algorithm volum render unstructur grid comput geometri introduct analysi approach raytrac curvilinear grid design analysi spatial data structur visual toolkit polygon approxim direct scalar volum render parallel volum render irregular grid fast render irregular grid volum probe interact data explor arbitrari grid sort hardwar assist render volum visual volum render comput fluid dynam initi result rapid explor curvilinear grid use direct volum render pursu interact visual irregular grid direct volum render curvilinear volum coher project approach direct volum render ing hierarch paralleliz direct volum render irregular multipl grid visibl order mesh polyhedra volum render polyhedr grid increment slice hardwar assist volum render unstructur grid increment slice tr ctr yang tulika mitra tzicker chiueh onthefli render losslessli compress irregular volum data proceed confer visual 00 p101108 octob 2000 salt lake citi utah unit state lichan hong ari kaufman acceler raycast curvilinear volum proceed confer visual 98 p247253 octob 1823 1998 research triangl park north carolina unit state stefan guth stefan roettger andrea schieber wolfgang strasser thoma ertl highqual unstructur volum render pc platform proceed acm siggrapheurograph confer graphic hardwar septemb 0102 2002 saarbrucken germani bruno lvi guillaum caumon stphane conreaux xavier cavin circular incid edg list data structur render complex unstructur grid proceed confer visual 01 octob 2126 2001 san diego california ricardo faria joseph b mitchel cludio silva zsweep effici exact project algorithm unstructur volum render proceed 2000 ieee symposium volum visual p9199 octob 0910 2000 salt lake citi utah unit state ricardo faria cludio silva outofcor render larg unstructur grid ieee comput graphic applic v21 n4 p4250 juli 2001 lichan hong ari e kaufman fast projectionbas raycast algorithm render curvilinear volum ieee transact visual comput graphic v5 n4 p322332 octob 1999 rdiger westermann thoma ertl effici use graphic hardwar volum render applic proceed 25th annual confer comput graphic interact techniqu p169177 juli 1998 stefan rttger martin krau thoma ertl hardwareacceler volum isosurfac render base cellproject proceed confer visual 00 p109116 octob 2000 salt lake citi utah unit state j schroeder berk geveci mathieu malaterr compat triangul spatial decomposit proceed confer visual 04 p211218 octob 1015 2004 peter l william nelson l max clifford stein high accuraci volum render unstructur data ieee transact visual comput graphic v4 n1 p3754 januari 1998 silva joseph b mitchel peter l william exact interact time visibl order algorithm polyhedr cell complex proceed 1998 ieee symposium volum visual p8794 octob 1920 1998 research triangl park north carolina unit state cevdet aykanat b barla cambazoglu ferit findik tahsin kurc adapt decomposit remap algorithm objectspaceparallel direct volum render unstructur grid journal parallel distribut comput v67 n1 p7799 januari 2007 yijen chiang ricardo faria cludio silva bin wei unifi infrastructur parallel outofcor isosurfac extract volum render unstructur grid proceed ieee 2001 symposium parallel largedata visual graphic octob 2223 2001 san diego california