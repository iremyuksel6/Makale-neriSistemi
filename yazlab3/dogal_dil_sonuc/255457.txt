exactli learn automata small cover time present algorithm exactli learn unknown environ describ determinist finit automata learner perform walk target automaton step observ output state choos label edg travers next state learner mean reset access teacher answer equival queri give learner counterexampl hypothes present two algorithm first case output observ learner alway correct second case output might corrupt random nois run time algorithm polynomi cover time underli graph target automaton b introduct paper studi problem activ learn environ describ determinist finit state automaton dfa learner view robot perform walk target automaton begin start state step observ output state choos label edg travers next state learner mean reset return start state particular investig exact learn algorithm access teacher answer equival queri give learner counterexampl hypothes also studi case environ noisi sens fix probabl j learner observ incorrect output state angluin 2 shown gener problem exactli learn finit automata perform walk target automaton without access equival oracl hard inform theoret sens even learner mean reset due exist subclass automata often refer combinationlock automata 1 central properti combin lock automata use angluin hard result hardtoreach state particular singl accept state reachabl learner perform particular walk length n call combin n number state automaton walk result zero sequenc output therefor everi exact learn algorithm combin lock automaton algorithm requir exponenti time algorithm random requir exponenti expect time thu natur question aris whether exact learn automata remain hard assum underli graph target automaton certain combinatori properti small cover time cover time defin smallest integ everi state q random walk length start q visit everi state probabl least 12 automaton low cover time hardtoreach state sinc random walk whose length order cover time like reach state known graph polynomi cover time exactli probabl assign stationari distribut edg 2 least invers polynomi size graph infer result describ 21 sever natur class direct graph known properti one import class class graph indegre node equal outdegre 1 class includ underli graph permut automata automata simul undirect environ replac undirect edg state q q 0 two opposit direct edg q q 0 q 0 q label direct edg arbitrari necessari learn algorithm given upper bound cover time target automaton turn bound number state imposs learn algorithm even approxim cover time unknown automaton effici automata n state output label q output label qn 1 start state q1 q one outgo edg label 0 one label 1 one outgo edg goe q1 goe q i1 state qn outgo edg direct q1 anoth direct sequenc input caus automaton travers state sequenc q1 order call combin singl accept state reachabl learner perform walk correspond combin walk result zero sequenc output refer stationari distribut determin markov chain correspond graph state outgo edg assign equal probabl manner due difficulti distinguish combin lock automaton exponenti cover time one state automaton selfloop cover time 1 paper show automata polynomi cover time exactli learn polynomi time noisefre noisi set describ previous present probabilist learn algorithm follow hold high probabl perform singl walk target automaton algorithm construct hypothesi automaton use correctli predict output state path start state hypothesi complet algorithm run time polynomi cover time noisi set allow run time algorithm depend polynomi 1ff ff lower bound 12 gamma j restrict attent case edg label either 0 1 output state either 0 1 result easili extend larger alphabet algorithm appli idea noreset learn algorithm rivest schapir 22 turn use angluin algorithm 3 subroutin angluin algorithm algorithm exactli learn automata teacher answer membership queri equival queri note teacher answer membership queri equival mean reset use subroutin algorithm variant angluin algorithm similar one describ 2 procedur learn mean reset lie first key overcom need teacher answer equival queri start procedur learner perform singl random walk whose length order cover time target automaton proce perform addit walk start start state determin initi random walk use simpl argument similar argument use 2 show need procedur termin polynomi time hypothesi automaton equival target automaton state target automaton pass initi walk 22 use home sequenc overcom absenc reset inform home sequenc sequenc whenev execut correspond output sequenc observ uniqu determin final state reach shown 22 home sequenc known learn algorithm use reset easili convert learn algorithm use reset idea home sequenc execut two differ stage algorithm use reset two possibl differ unknown state output sequenc observ know stage reach state thu execut home sequenc essenti play role perform reset problem remain construct home sequenc sequenc known abl construct home sequenc without aid teacher rivest schapir learner need teacher answer equival queri order construct home sequenc rough idea perform random walk whose length bound cover time prior execut current candid home sequenc repeat step subroutin learn reset enough time discov current candid true home sequenc improv thu pay absenc teacher give algorithm whose run time depend cover time henc algorithm effici cover time polynomi number state noisi set learn problem becom harder sinc output observ may erron learner mean reset problem easili solv 26 run noisefre algorithm repeat walk larg enough number time major output observ correct output howev learner mean reset encount sever difficulti one major difficulti clear learner orient sinc execut home sequenc high probabl observ correct output sequenc order overcom difficulti adapt loop idea present dean et al 9 dean et al studi similar set nois rate fix function current state present learn algorithm problem howev assum algorithm either given distinguish sequenc target automaton gener one effici high probabl 3 known simpl exampl illustr automata distinguish sequenc remain true restrict attent automata small cover time natur question aris whether result improv requir learner learn target automaton approxim learner mean reset may natur assum allow learner activ explor environ goal perform well respect underli distribut walk start start state model equival pac learn membership queri sinc angluin algorithm 3 modifi pac learn algorithm membership queri dfa effici learnabl model howev learner mean reset thu perform singl walk know natur notion approxim correct learn recent work freund et al 13 result improv follow freund et al consid problem learn probabilist output automata finit automata whose transit function determinist whose output function probabilist name given string whenev perform walk correspond string certain state reach state howev similarli model studi dean et al 9 output observ time determin probabilist process flip coin bia depend state reach case bias state either j 1 gamma j essenti problem learn determinist automata presenc nois give algorithm paper 13 learn algorithm given run time polynomi cover time target automaton restrict bias state repeat game comput bound oppon anoth motiv work game theoret problem find optim strategi play repeat game comput bound oppon scenario two player refer one player second oppon step player oppon choos action predefin set action accord strategi strategi possibl probabilist map histori play next action player receiv payoff determin pair action play use fix game matrix goal player maxim averag expect payoff particular interest find good strategi play player oppon strategi comput comput bound machin dfa name start start state oppon output action label state action play player determin oppon next state 4 3 distinguish sequenc sequenc input symbol follow properti automaton unknown start state given sequenc input output sequenc observ determin unknown start state 4 slight differ learn scenario game play scenario sinc latter player see action chosen oppon choos action howev algorithm easili known 15 exist optim strategi player simpli forc oppon dfa follow cycl along node underli graph known player hard prove player find optim cycl strategi effici use dynam program howev known player fortnow whang 11 show use combinationlock automata argument angluin 2 hard find optim strategi case gener game 5 clearli class automata learn exactli effici without reset optim cycl strategi found effici howev import learn algorithm use addit sourc inform regard target automaton counterexampl hypothes otherwis learn algorithm use game play scenario relat work sever research consid problem learn dfa limit set learner present infinit sequenc exampl label accord unknown dfa requir output hypothes converg limit number exampl target dfa refer reader survey angluin smith 6 briefli survey known effici learn algorithm dfa start problem exactli learn dfa addit work angluin 2 3 rivest schapir 22 discuss previous follow also known rivest schapir 23 show permut automata exactli learn effici without mean reset without make equival queri sinc permut automata properti indegre outdegre node equal underli automata small cover time thu result view gener angluin 4 prove problem exactli learn dfa equival queri alon hard ibarra jiang 17 show subclass kbound regular languag exactli learn polynomi number equival queri bender slonim 7 studi relat problem exactli learn direct graph output associ node show task perform effici two cooper robot robot perform singl walk target graph contrast show task perform effici one robot perform singl walk even robot may use constant number pebbl mark state pass also show algorithm modifi made effici graph high conduct 28 conduct measur expans properti graph bergando varricchio 8 show automata multipl exactli learn multipl equival queri particular impli learnabl probabilist automata input string may correspond mani path assign probabl product probabl edg path automata exactli learn given access equival oracl oracl given string return probabl string reach accept state nonexact approxim learn without aid queri kearn valiant 18 show certain number theoret assumpt problem pac learn dfa modifi adapt differ 5 certain game penni match player get posit payoff match oppon action combinationlock argument appli underli game penni match fortnow whang 11 describ algorithm find optim strategi effici use idea rivest schapir 22 learn algorithm without actual learn automaton hard given access random exampl learn algorithm sever special class automata studi set li vazirani 20 give sever exampl regular languag learn effici includ 1letter languag 10 learn algorithm given languag accept width2 branch program readonc level special case dfa schapir warmuth 27 shown see also 10 problem learn width3 readonc level branch program hard learn dnf also observ learn width5 readonc level branch program hard certain number theoret assumpt 14 shown learn typic automata automata underli graph arbitrari acceptreject label state chosen randomli passiv learn edg travers robot chosen randomli type mistak bound model addit work dean et al 9 previous mention follow work consid case label exampl assum noisi 25 algorithm given paclearn dfa membership queri presenc persist nois 12 algorithm given learn dfa blurri concept preliminari 21 basic definit let determinist finit state automaton dfa would like learn 4tupl finit set n state transit function q start state output function transit function extend defin q theta f0 1g usual manner output state q flq output associ string u 2 f0 1g defin output state reach u ie output q 0 u denot mu unless state otherwis string refer alphabet f0 1g cover time denot cm defin follow everi state q 2 q probabl least 12 random walk length cm underli graph start q pass everi state two string 1 2 let 1 delta 2 denot concaten 1 2 string integ let denot concaten two set string 1 2 let g let empti string denot set string said prefix close everi string 2 prefix includ suffix close set string defin similarli string length prefix length 0 prefix defin 22 learn model 221 nois free model problem studi exactli learn determinist finit state automaton learn algorithm mean reset automaton learn algorithm view perform walk automaton start q 0 step algorithm state q observ qs output algorithm choos symbol oe 2 f0 1g upon move state q oe cours walk construct hypothesi dfa algorithm exactli learn target dfa hypothesi use correctli predict sequenc output correspond given walk target dfa start current state learn algorithm exact learn algorithm everi given ffi 0 probabl least 1 gamma ffi exactli learn target dfa exact learn algorithm effici run time polynomi n log1ffi assum algorithm given upper bound cover time also assum without loss gener irreduc name everi pair state q q 0 q distinguish string output state reach execut start q differ output state reach perform walk start q 0 also consid easier set learn algorithm mean reset machin perform new walk start start state requir given perform polynomi n log1ffi number walk polynomi length output hypothesi c equival ie everi string c 222 noisi model assumpt nois follow classif nois model introduc angluin laird 5 assum fix nois rate j 12 step probabl algorithm observ correct output state reach probabl j observ incorrect output observ output state q reach algorithm thu independ random variabl flq probabl assum j known assum lower bound ff 12 gamma j known algorithm nois free model algorithm perform singl walk target dfa requir exactli learn defin predict base final hypothesi must agre correct output sinc task learn becom harder j approach 12 ff approach 0 allow run algorithm depend polynomi 1ff well n log1ffi 3 exact learn reset section describ simpl variant angluin algorithm 3 learn determinist finit automata algorithm work set learner mean reset analysi similar 2 show target automaton cover time cm high probabl algorithm exactli learn target automaton perform oncm walk length ocm name algorithm exactlearnwithreset use subroutin learn algorithm mean reset describ section 4 algorithm describ follow section assum simplic algorithm actual know cm n upper bound c b cm n b n known algorithm simpli use bound instead exact valu run time result algorithm bound run time origin algorithm know cm n occurr cm replac c b occurr n n b follow angluin algorithm construct observ tabl observ tabl tabl whose row label prefix close set string r whose column label suffix close set string entri tabl correspond row label string algorithm exactlearnwithresetffi 1 let r random string length 2 let r 1 set prefix 3 initi tabl string r ffi fill 4 consist ffl exist r row let k 2 r new entri tabl perform correspond walk ffl els tabl consist 5 exist r 2 r 2 r j 2 r 1 row r close return 1 rerun algorithm though assum high probabl event tabl close occur add last statement complet could cours solv situat angluin algorithm choos solut sake breviti figur 1 algorithm exactlearnwithreset r column label string j mr delta j also refer mr delta j behavior r j observ tabl induc partit string r accord behavior suffix string reach state equival class partit aim refin partit string reach state equival class case show set r certain properti construct automaton base partit equival target automaton formal observ tabl string r 2 r let row r denot row label r name say two string r belong equival class accord row r given observ tabl say consist follow condit hold everi pair string r r r r j equival class r deltao r j deltao 2 r oe 2 f0 1g r delta oe r j delta oe belong equival class well say close everi string r 2 r oe 2 f0 1g r 2 r exist string r j 2 r r r j belong equival class accord everi oe 2 f0 1g given close consist tabl defin follow automaton equival class correspond state hard verifi see 3 consist sens everi r 2 r everi idea algorithm follow first use random walk construct set r 1 string high probabl reach everi state name r 1 everi state q exist string r 1 take walk correspond start q 0 end state q given r 1 extend set r string travers everi edg show use r construct observ tabl equival class state let r 2 f0 1g random string length cm log1ffi ffi confid paramet given algorithm let r prefix rg r learn algorithm initi includ empti string fill singl column tabl perform walk correspond string r let us first observ definit cm probabl random walk length cm log1ffi pass state q 12 therefor probabl least everi state q 2 q exist string r 2 r 1 q assum fact case directli follow alway close henc learn algorithm must ensur consist done follow exist pair string r r row r string oe delta k ad k 2 r new entri fill pseudocod algorithm appear figur 1 clear inconsist resolv process stage 4 algorithm given figur 1 end step true sinc everi string ad refin partit induc hand number equival class exceed n sinc everi pair string r r row r reach two differ state henc ad oncm log1ffi entri tabl correspond string length ocm log1ffi n algorithm construct consist tabl make follow claim lemma 31 everi state q 2 q exist string r 2 r 1 q proof order prove j show exist map oe follow properti 1 2 8q 2 q 8oe 2 f0 1g oe q 3 8q 2 q sinc assum without loss gener irreduc oe output preserv clearli exist function suffic prove equival sinc properti everi 2 f0 1g let oe defin follow q 2 q q assumpt statement lemma everi state q 2 q exist string r 2 r 1 q definit determinist finit automata r 6 r j r q necessarili r follow oe well defin next show oe satisfi three properti defin oe first properti sinc q oe third properti sinc remain prove second properti let r 2 r 1 q assumpt statement lemma know exist string thu q definit oe oe q thu follow theorem theorem 1 everi target automaton probabl least withreset output hypothesi dfa equival furthermor run time algorithm 4 exact learn without reset section describ effici exact learn algorithm defin subsect 22 automata whose cover time polynomi size algorithm close follow rivest schapir learn algorithm 22 howev use new techniqu exploit small cover time automaton place reli teacher suppli us counterexampl incorrect hypothes name algorithm exactlearn pseudocod appear figur 3 main problem encount learner mean reset simpli orient whenev need return start state thu need altern way learner orient 22 overcom absenc reset use home sequenc home sequenc sequenc whenev execut correspond output sequenc observ uniqu determin final state reach formal definit 41 state q sequenc home sequenc h 2 f0 1g sequenc symbol everi pair state hard verifi cf 19 everi dfa home sequenc length quadrat size moreov given dfa home sequenc found effici 41 learn home sequenc known assum home sequenc h length n 2 target dfa remov assumpt shortli could run algorithm exactlearngivenhomingsequ whose pseudocod appear figur 2 algorithm creat n copi algorithm exactlearnwithreset correspond differ output sequenc may observ h execut stage algorithm walk accord h observ output sequenc perform next walk elr would perform start q 0 current state reach sinc h home sequenc given output sequenc whenev h execut observ reach state refer state effect start state elr thu copi elr construct observ tabl entri fill perform walk start effect start state elr algorithm termin one copi complet complet copi hypothesi automaton use predict correctli outcom walk describ pseudocod exactlearngivenhomingsequ see figur 2 run copi exactlearnwithreset confid paramet ffi n theorem 1 fact n copi exactlearnwithreset probabl least hypothesi complet copi correct run time algorithm exactlearn givenhomingsequ bound run time copi multipli number copi execut length home sequenc thu algorithm exactlearngivenhomingsequenceffi ffl copi exactlearnwithreset complet 1 perform walk correspond h let correspond output sequenc 2 exist copi elr exactlearnwithresetffin creat new copi 3 simul next step elr fill entri perform correspond walk start current state 4 observ tabl elr consist close elr complet 5 consist close discard elr figur 2 algorithm exactlearngivenhomingsequ 42 learn home sequenc unknown home sequenc unknown consid case guess sequenc h home sequenc run algorithm exactlearngivenhomingsequ h instead true home sequenc sinc h home sequenc exist least two state q 1 6 q 2 pair state q 0 2 walk start q 0 reach q 1 upon execut h walk start q 0reach q 2 upon execut h output sequenc case let output sequenc henc elr one effect start state simul elr walk perform fill entri might perform start q 1 might perform start q 2 first two possibl consequ event observ tabl becom consist close hypothesi incorrect name exist walk start current state whose outcom predict incorrectli second possibl consequ grow without becom consist number equival class partit induc becom larger n follow describ modifi exactlearngivenhomingsequ home sequenc detect copi one effect start state thu avoid two consequ furthermor procedur detect help us improv h extend extens becom home sequenc initi set effect start state name q 2 q hold everi state q 0 q exist row label string reach q 0 start q follow true time add column pair state q 1 q 2 q must exist least one entri distinguish two state true sinc otherwis follow lemma 31 q 1 q 2 would equival contradict assumpt irreduc discov one entri evid elr one effect start state therefor h home sequenc moreov concaten string correspond entri h restart algorithm extend h 6 n gamma 1 extens h must becom home sequenc algorithm exactlearnffi 1 n 2cm 2 h 3 copi exactlearnwithresetr complet choos uniformli length perform random walk length b perform walk correspond h let correspond output sequenc c exist copi elrr exactlearnwithresetrnffi2n 2 creat new copi simul next step elrr fill entri perform correspond walk w start current state first execut w fill correspond entri final output observ f els output state reach differ output previou state reach perform w ii discard exist copi exactlearnwithresetr go 3 restart algorithm extend h g observ tabl elrr consist close elrr complet consist close discard elrr figur 3 algorithm exactlearn algorithm exactlearnwithresetr variant exactlearnwithreset given integ n walk fill entri tabl repeat n time singl output observ output enter 6 22 actual need discard copi restart algorithm may discard copi disagr found construct adapt home sequenc result effici algorithm sake simplic present continu use preset home sequenc 421 detect distinguish entri next show detect entri distinguish two effect start state let exactlearnwithresetr variant exactlearnwithreset walk fill entri tabl repeat n consecut time given n n walk give output entri fill output otherwis found distinguish entri thu algorithm exactlearn instead simul copi elr exactlearnwithreset exactlearngivenhomingsequ simul copi elrr exactlearnwithresetr paramet n set subsequ confid ffi copi find observ tabl includ distinguish entri describ previous extend h string correspond entri restart algorithm new h continu way one copi termin order ensur never fill distinguish entri without identifi one need ensur everi entri r need fill r distinguish entri follow hold pair effect start state distinguish r least one n execut r delta j start 1 least one start q 2 end follow time execut h randomli choos length perform random walk length idea behind random walk everi state nonneglig probabl reach upon perform random walk precis distinguish entri r consid n execut h whose outcom follow perform walk correspond r delta j state set state q reach upon execut h ie given q 2 q probabl reach q one n execut h observ equal probabl follow preced random walk reach state bq probabl bound follow assum instead choos random length perform random walk length first randomli choos string length cm choos random length final perform walk correspond length prefix clearli distribut state reach end walk equival distribut state reach origin random procedur random string probabl pass state bq least 12 given pass state bq probabl randomli chosen prefix end state least 1cm togeth probabl reach given state bq least 12cm thu given state q 2 q probabl q reach correspond n execut h bound 422 bound error run time algorithm remain set n total error probabl exactlearn ffi bound algorithm run time two type event want avoid ensur algorithm construct correct hypothesi shall bound probabl type event occur ffi2 first type event copi elrr one effect start state q exist state q 0 q row label string reach q 0 start q cours algorithm h take n valu valu n effect start state exist copi elrr even though singl state may effect start state copi sinc simul copi error paramet ffi2n 2 probabl least 1 gamma ffi 2 type event occur case follow lemma 31 h final turn home sequenc n gamma 1 extens tabl becom consist correct hypothesi second type bad event fill entri tabl detect distinguish entri valu h consid first entri fill tabl distinguish entri sinc h take n valu n first entri 7 entri exist least one pair effect start state di tinguish let equat 2 given distinguish entri probabl reach state pair effect start state distinguish ffi2n follow probabl least 1 gamma ffi 2 first distinguish entri perform walk correspond entri start two effect start state distinguish therefor probabl detect first distinguish entri everi valu h thu output hypothesi copi elrr correspond one effect start state run time algorithm bound product number phase algorithm one valu h n run time phase run time phase product ffl number copi exactlearnwithresetr phase n ffl number entri ad tabl oncm log2n 2 ffi ffl number time walk correspond entri repeat ffl sum maximum length walk fill entri ocm log2n 2 ffi maximum length h 2 cm log2n 2 ffi maximum length random walk perform prior execut h cm total run time henc thu proven theorem 2 algorithm exactlearn exact learn algorithm dfa run time mention previous rivest schapir 22 give exact learn algorithm run time polynomi n log1ffi depend paramet relat 7 note entri uniqu determin current h initi random walk label row correspond tabl random walk execut prior execut h target automaton howev reli teacher give learner counterexampl incorrect hypothes output learner interest note tempt idea simpli run rivest schapir algorithm instead make equival queri tri randomli guess counterexampl whenev learner hypothesi work even case automata small cover time rivest zuckerman 24 construct pair automata small cover time probabl randomli guess sequenc distinguish automata exponenti small automata describ appendix 5 exact learn presenc nois section describ modifi learn algorithm describ section 4 order overcom noisi environ name new algorithm exactnoisylearn pseudocod appear figur 6 start show comput good estim nois rate show use estim learn target dfa home sequenc known final describ learn algorithm given home sequenc 51 estim nois rate accord learn model algorithm given upper bound 12 gamma ff nois rate j sinc need good approxim j j first show j effici approxim high probabl within small addit error done run procedur estimatenoiser whose pseudocod appear figur 4 analyz follow lemma similar procedur describ 25 lemma 51 given ffi 0 0 0 time polynomi log1ffi 0 1 n 1ff procedur estimatenoiser output approxim j j probabl least proof go detail procedur describ idea base consid pair state q 1 q 2 string z 2 f0 1g let observ behavior q z output observ learner execut walk correspond z start q let actual behavior q z correct output state reach q everi string z q z thu observ differ behavior q 1 q 2 set string entir due nois process q 1 6 q 2 differ observ behavior set string z due differ actual behavior z well nois thu order estim nois rate look string seem reach state deduc nois rate differ observ behavior precis done follow let arbitrari string length l l set subsequ suppos execut n1 time state reach perform exactli time let l sequenc output correspond th execut clearli pair indic 6 j q everi k thu ij fraction indic sequenc differ equival fraction string among prefix observ differ behavior q q j key observ q expect valu ij least larg precis fraction prefix procedur 1 2 let arbitrari string length l 3 perform walk correspond n1 4 let l sequenc output correspond th execut ie complet output sequenc correspond n1 5 7 dmin 12 goto 8 let j solut 9 return j figur 4 procedur estimatenoiser q q j actual differ oe expect observ differ behavior state therefor defin min minimum valu ij let solut quadrat equat sinc less n 2 pair hoeffd inequ 16 probabl least everi pair directli follow see 25 thu assum good approxim j j particular assum j ff8cm away j 52 learn home sequenc known nois free case first assum algorithm mean reset assumpt defin slight modif exactlearnwithreset name exactnoisylearn withreset given larg enough integ n procedur simpli repeat walk fill entri tabl n time fill correspond entri major observ label thu high probabl appropri choic n major observ label fact correct label state reach next assum algorithm mean reset instead home sequenc h clearli singl execut h high probabl output sequenc erron thu adapt techniqu use 9 idea construct new robust home sequenc h see mani sampl bit output h thu infer correct output h major vote assum execut h consecut time set subsequ order gain intuit consid first direct graph h whose set vertic q edg q 1 q 2 q 2 reach q 1 upon execut h execut h correspond walk length h clearli n n step walk start follow simpl cycl h return execut h pass state cycl h henc follow cycl underli graph note jhj 1 cycl may simpl show use exist cycl order estim output sequenc correspond last th execut h let state start th execut h denot q idea sinc execut h follow cycl assum larg enough h execut start q mani time assum abl identifi occurr q equival find length simpl cycl h could use execut whose output noisi infer major vote high probabl correct output sequenc correspond execut h start q reach current state formal state reach th execut h let jhj noisi output sequenc correspond execut possibl length exist minim period p 1 p n everi 1 k b p word everi p execut h execut start q p simpli length simpl cycl h thu know p comput high probabl correct output sequenc correspond last execut h start q consid previou execut start q everi 1 j jhj follow high probabl appropri choic sequenc correct output sequenc correspond last execut h case could proceed exactlearngivenhomingsequ simul copi exactnoisylearnwithreset instead copi exactlearnwithreset find period p let q j state reach execut h follow length j prefix h definit p everi k k 0 everi j q mgammakp state reach step number differ multipl p let v jhj dimension vector defin follow b v defin equat 4 hold everi k output gener state sinc nois ad independ appropri choic n high probabl everi j p j either within ffl 1 gamma j within ffl j small addit error ffl particular shall choos ensur ffl ff2n assumpt either v 6 p two possibl j everi k k 0 flq mgammakv might differ q mgammak 0 v follow still true defin j 1 v j greater 12 0 12 high probabl jhj correct output sequenc correspond last execut h case v effect behav period otherwis let j index hold let k claim least 1p least 1n true sinc v delta p must period well henc everi k k 0 multipl p q mgammakv let e v e v written two equival form e v e v sinc fi 1n equat 9 e v hand sinc impli 1 gamma fi 1n equat 10 e v 2ff sinc assum thu v j ff2n away expect valu everi j sinc shown see equat 6 7 high probabl p j within ffn either j j abl detect whether v minim period p least effect behav consequ comput correct output sequenc correspond home sequenc h pseudocod procedur describ appear figur 5 note actual use fact h home sequenc henc procedur use comput correct output sequenc correspond given sequenc 53 learn home sequenc unknown remain treat case home sequenc known similarli nois free case correct output sequenc correspond candid home sequenc h let q state q 2 q reach state follow execut h procedur executehomingsequenceh 1 100 nff 2 logncm ffi 2 choos uniformli length perform random walk length 3 perform walk correspond h 1 output sequenc correspond th execut h 4 length 1 5 let v everi j either j v v return 1 7 return figur 5 procedur executehomingsequ correspond output exist state q 0 2 q q state q 2 q let bq set state q 00 q 00 entri tabl correspond exist argu nois free case entri possibl output sequenc h home sequenc let let q defin analog nois free case walk correspond given entri repeat n time random walk length chosen uniformli rang perform prior execut h let fi 1 fraction time state q 2 q 1 reach let fi 0 defin analog argument use nois free case discuss preced equat 2 appli chernoff bound 2 f0 1g pr let fw defin exactnoisylearn fw fraction 1s observ among n repetit walk execut fill distinguish entri similarli calcul perform equat 8 14 hand distinguish entri efw equal either j 1 gamma j henc within ff8cm either j 1 gamma j choos n ensur high probabl determin entri distinguish entri extend h string correspond entri algorithm exactnoisylearnffi 1 n 100 ff log 2 ncm ffi 2 3 h 4 copi exactnoisylearnwithreset complet executehomingsequenceh b copi enlr exactnoisylearnwithresetn exist creat new copi c simul next step enlr perform correspond walk w let w output state reach number time w execut ii discard exist copi exactnoisylearnwithreset go 4 restart algorithm extend h otherwis valu entri set major observ label enlr observ tabl enlr consist close output enlr complet consist close discard enlr figur algorithm exactnoisylearn algorithm exactnoisylearnwithreset variant exactlearnwithreset given integ n walk fill entri tabl repeat n time major valu enter 531 bound error run time algorithm start bound error algorithm follow 5 type event need prevent occur shall bound probabl type occur ffi5 whenev bound probabl bad event occur assum bad event occur previous 1 estim j j good enough call procedur estimatenoiser confid paramet estim paramet know lemma 4 probabl least 1 gamma ffi5 2 copi enlr one effect start state q exist state q 0 q row label string reach q 0 start q noisefre case cours algorithm h take n valu valu n effect start state exist copi enlr sinc simul copi paramet ffi5n 2 probabl least 1 gamma ffi5 type event occur 3 candid home sequenc h first distinguish entri fill detect order ensur event occur probabl larger ffi 5 follow first ensur probabl least entri pair effect start state distinguish entri fraction time execut correspond walk start state least 14cm ensur probabl least fraction 1s observ differ expect ff8cm argu open subsect case distinguish entri alway detect start former requir equat 15 n omega cm lognffi probabl given distinguish entri detect ffi10n probabl event occur h ffi10 second requir hoeffd inequ suffic ff lognffi 4 tabl nondistinguish entri tabl major observ output incorrect entri thought distinguish avoid latter type error also mean avoid former need ensur entri tabl fraction 1s observ fill entri differ ff8cm expect valu either j 1 gamma j construct n 2 tabl size oncm log5n 2 ffi thu simpli need set n larger previou bound factor ofomegagamma161 ncmffi order ensur type event occur probabl greater ffi5 thu requir ff log 2 ncmffi 5 execut candid sequenc h execut actual denot consecut execut h output comput h incorrect maximum length h 2 cm log5n 2 ffi number valu taken v comput v j n h take n valu valu h execut njt jn time denot maximum size tabl oncm log5n 2 ffi hoeffd inequ ff log ncmn lognffi probabl least 1 gamma ffi 5 everi v j ff2n away expect valu discuss follow equat 13 suffic correct comput output sequenc correspond h run time algorithm bound sum 1 run time procedur estimatenoiser 2 number phase algorithm one valu h n multipli run time phase run time procedur estimatenoiser oln 2 l defin figur 4 run time phase product ffl number copi exactnoisylearnwithreset phase n ffl number entri ad tabl ncm log5n 2 ffi ffl number time walk correspond entri repeat ff log 2 ncmffi ffl sum maximum length walk fill entri cm log5n 2 ffi maximum length h n 2 cm log5n 2 ffi time maximum length random walk perform prior execut h cm thu proven follow theorem theorem 3 algorithm exactnoisylearn exact learn algorithm presenc nois dfa run time acknowledg wish thank michael kearn rob schapir convers stimul line research dana ron would like thank eshkol fellowship support part work done author visit att bell laboratori r charl rack note number queri need identifi regular languag learn regular set queri counterexampl neg result equival queri learn noisi exampl induct infer theori method power team explor two robot learn unlabel direct graph learn behavior automata multipl equiv alnec queri infer finit automata stochast output function applic map learn learn boundedwidth branch program optim domin repeat game bound player learn consist ignor teacher effici algorithm learn play repeat game comput bound adversari effici learn typic finit automata random walk bound versu unbound ration tyranni weak probabl inequ sum bound random variabl learn regular languaag counterexampl cryptograph limit learn boolean formula finit automata switch finit automata theori learnabl finit automata random algorithm infer finit automata use home sequenc privat commun learn fallibl finit state automata learn queri couterexampl presenc nois present colt90 rump session approxim count tr learn regular set queri counterexampl approxim count uniform gener rapidli mix markov chain neg result equival queri learnabl finit automata learn regular languag counterexampl learn queri counterexampl presenc nois effici learn typic finit automata random walk cryptograph limit learn boolean formula finit automata diversitybas infer finit automata infer finit automata use home sequenc learn consist ignor teacher learn behavior automata multipl equival queri optim domin repeat game bound player learn fallibl determinist finit automata random algorithm infer finit automata stochast output function applic map learn learn boundedwidth branch program induct infer theori method learn noisi exampl effici algorithm learn play repeat game comput bound adversari ctr michael bender antonio fernndez dana ron amit sahai salil vadhan power pebbl explor map direct graph proceed thirtieth annual acm symposium theori comput p269278 may 2426 1998 dalla texa unit state ivan gabrijel andrej dobnikar onlin identif reconstruct finit automata gener recurr neural network neural network v16 n1 p101120 januari michael bender antonio fernndez dana ron amit sahai salil vadhan power pebbl explor map direct graph inform comput v176 n1 p121 juli 2002