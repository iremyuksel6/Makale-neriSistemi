plug haskel extens languag enabl user expand function applic without touch sourc code commonli languag dynam type languag lisp python domainspecif languag support runtim plugin via dynam load compon show haskel comfort use static type extens languag haskel foreignlanguag applic support haskel ffi perform typesaf dynam load plugin use dynam type moreov discuss plugin support especi use applic haskel use embed domainspecif languag edsl explain realis typesaf plugin use dynam type runtim compil dynam link exploit infrastructur provid glasgow haskel compil demonstr practic approach sever applic serv run exampl b introduct success applic emac command shell web browser microsoft word excel gimp signific degre due provid user extens languag extens languagewheth gener purpos eg emacss lisp permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee septemb 22 2004 snowbird utah usa applic specif eg word macrosen user add new function applic without understand recompil sourc code inde extens languag advoc altern write applic singl languag 25 conveni applic notabl emac 32 consist small core almost higherlevel function implement extens lan guag code compon written extens languag usual load runtim applic extend dynam compon often call plugin paper discuss use haskel type extens languag outlin approach dynam load haskel plugin base dynam type 1 2 4 22 37 illustr broad scope applic haskel plugin argu plugin view step develop embed domainspecif languag edslsthat domainspecif languag dsl embed host languag haskel instead implement scratch particular dsl use extens languag implement dsl edsl get plugin support free use framework discuss paper implement librari call hsplugin capabl dynam compil load haskel code run ap plicat address space utilis object load capabl glasgow haskel compil runtim system 30 33 function provid plugin transpar avail applic appear standard haskel valu addit plugin librari track modul depend enabl manipul plugin sourc abstract syntax support differ level trust applic plugin author respect type safeti plugin applic written foreign languag may use plugin librari c languag bind enabl applic interfac c easili support haskel extens languag summari main contribut follow describ architectur typesaf plugin haskel use dynam type integr extens languag edsl introduc haskel plugin foreign languag lightweight parser userfriendli edsl paper consist two main part first section 2 3 4 illustr use haskel plugin increasingli challeng applic scenario second section 5 6 7 discuss principl behind implement plugin haskel plugin haskel conveni way extend applic dynam way plugin ie softwar compon applic load link alreadi run plugin present two distinct chal leng 1 interfac commun protocol host applic plugin must defin 2 plug in object code need integr run applic dynam link loader remaind section outlin architectur address challeng case haskel program extend plugin also written haskel run simpl exampl 21 defin interfac mani extens languag eg lisp python lack strong static type plugin interfac characteris two set symbol name plugin access host applic host applic expect defin plugin moreov inform agreement data structur pass host applic plugin haskel need ensur host applic plugin agre type data structur function share moreov want applic ensur violat type either side detect report system defer detail guarante type safeti section 5 closer look specif interfac avoid arbitrari depend plugin code applic inter nal applic programm defin plugin interfac extra modul collect interfac function data structur call interfac exampl mere contain singl string process function name stringprocessor complex plugin might modul stringprocapi interfac plugin data interfac interfac stringprocessor string string plugin interfac addit defin interfac signatur api modul provid default implement name plugin default implement provid sensibl valu absenc dynam load plugin use mani context provid default runtim behaviour user may option overrid via plugin 22 implement interfac compil applic stringprocapi plugin must also import implement interfac type declar modul addit applic expect plugin bind implement interfac specif identifi name resourc exampl follow plugin implement defin stringprocessor function revers input string wrap plugin resourc interfac modul stringprocplugin resourc import stringprocapi plugin src api make load object valu pass haskel valu applic figur 1 compil load plugin 23 use plugin discuss plugin use applic gener three step involv 1 compil plugin sourc code 2 load plugin resolv symbol 3 call plugin function plugin may compil plugin author host ap plicat choic influenc amount trust applic put type safeti plugin see section 5 simpl applic use stringprocplugin might read string user line line output result appli stringprocessor string exampl let us assum plugin sourc compil function name make result plugin object code load function name load applic could use plugin follow obj make stringprocpluginh mod rsrc load obj resourc code fragment first compil plugin sourc use make yield locat object file obj load object obtain handl plugin symbol name resourc precis obtain handl mod haskel modul contain obj well valu bound resourc modul call rsrc note function take extra paramet use detail concern signatur function plugin librari appendix process object code gener load illustr figur 1 two function make load invok two differ subsystem plugin infrastructur call compil manag dynam loader respect compil manag check whether plugin sourc need recompil call haskel compil appropri flag dynam loader bring plugin object code applic address space load necessari depend resolv symbol return valu export plugin normal haskel valu use host applic discuss subsystem detail section 6 7 stringprocessor rsrc simpli appli string eg stringprocessor rsrc hello world rsrc type stringprocapiinterfac applic free load plugin time startup may even reload plugin chang program execut exam ple might allow string processor chang one line user input next follow function appli plugin stringprocessor function user input reload plugin thu give differ behaviour sourc code chang loop mod rsrc str getlin reload mod resourc els return rsrc putstrln stringprocessor rsrc str loop mod rsrc session applic chang plugin sourc execut may look like follow verbos messag includ clariti compil stringprocplugin done load packag base link done load object stringprocapi stringprocplugin done 4321hgfedcba chang revers chartoupp plugin sourc compil stringprocplugin done reload object stringprocplugin done first string revers wherea second convert upper case 3 beyond plugin abil load reload plugin execut program enabl applic go beyond standard idea program extend plugin exampl program load plugin gener runtim program illustr idea exampl interact haskel shell 31 haskel evalu use dynam reload plugin present applic name plug plugin user ghci system interact haskel shell reminisc hi hmake interact 35 ghci user enter string haskel express prompt plug immedi evalu print screen achiev dump express togeth wrapper plugin modul compil load execut un load process closer hmake interact ghci code compil interpret exampl session display list 1 system work follow togeth import declar correspond inscop modul dump user input haskel sourc file constitut plugin exampl user type sort 738642019 plugin essenti contain modul usercodeplugin resourc import usercodeapi plugin import datalist show sort 738642019 type help load packag base link done case 7 8 x x list 1 haskel interpret plug exampl session actual gener plugin slightli complex contain line number hint sourc code enabl compil manag produc inform error messag case malform user input system proce compil load execut plugin use make load function plugin librari entir system 70 line haskel core plug line long sourc writeout userstr objerr make sourc null err mapm putstrln err els mv load obj symbol v exceptionevalu code v putstrln v writeout function gener plugin user input exceptionevalu part ghc except librari handl runtim except benefit use dynam load plugin implement plug clear reus exist haskel compil runtim system add interact haskel environ applic requir line code compar hmake inter activ plug omit link phase lead significantli faster turnaround time factor two moreov small step plug embedd haskel engin provid applic haskel script capabl plug simpl haskel environ doesnt provid full featur set exampl ghci howev reason featur ad plug desir simplic also virtu plug easi modifi extend exampl recent embed modifi version plug irc bot provid haskel interpret irc userswhich would far difficult task ghci 32 plug haskel c objectivec sinc haskel standardis foreign function interfac 3 use plugin infrastructur languag support ffi includ directli support languag c also languag interoper c c objectivec use plugin function make load c function paramet result must marshal languag anyth conveni haskel extens languag python tcl lua haskel ffi emphasis data marshal haskel side result less marshal code written c host applic marshal common data type c char haskel even perform automat plugin infra tructur describ section 63 addit complement basic make load api foreign function enabl host applic c commun haskel plugin symbol level exampl plugin librari implement hs eval function resembl script languag eval oper evalu haskel express store c string io monad similar code gener strategi use plug previou subsect c string use dynam gener plugin load back applic result haskel valu return caller variant hs eval provid basic haskel type allow plugin result type check us age present c program load haskel plugin evalu fold includ stdioh includ runhaskellh int mainint argc char argv int p printfdn p execut c program call haskel runtim system arrang haskel plugin librari compil load execut c string pass hs eval return pointer integ result caller dynam type haskel side check compil haskel valu match type expect c program yield error indic null pointer c program expect wrong type haskel string languag haskel bind possibl go via common interfac c take advantag plugin dynam load haskel code runtim exampl consid objectivec program evalu express enter user gui implement objectivec express evalu haskel sourc plugin user choos alter run applic figur 2 show screenshot applic run arithmet express evalu plugin left side keyvalu parser plugin right side entir applic plugin code combin 100 line 4 extens languag edsl plugin extend host applic predefin point extens framework call hook case symbol base applic load plugin hook redefin extens code written haskel independ whether base applic written haskel anoth languag use haskel plugin via ffi extens languag gener simplifi applic extens virtu two properti 1 extens well defin place base well defin api conceptu simpler arbitrari addit ap figur 2 use haskel plugin pars express applic plicat sourc also robust respect chang applic base 2 extens languag often higherlevel languag applic base implement eg lisp emac whose core written c variant second properti extens languag gener purpos languag domain specif one tailor applic domain simplifi complex extens level implement nonprogramm recent work demonstr haskel excel host languag embed domain specif languag dsl implement domain specif languag librari generalpurpos host languag save overhead implement new languag ground 6 10 16 17 24 29 36 domain specif languag implement fashion call embed domain specif languag edsl context haskel use extens languag seem particularli desir provid plugin author domainspecif notat word haskel plugin make edsl applic turn make haskel especi attract extens languag 41 type applic configur file first simpl exampl applicationspecif edsl consid textual applic configur file commonli call resourc rc file unixlik system egbashrc vimrc muttrc applic becom complex languag featur ad configur file usual adhoc manner result applic configur dsl typic lack type safeti express coher syntax haskel plugin allow much principl approach demonstr exampl simpl type edsl configur mail user agent first applic describ paramet avail user configur along interfac instanc default valu modul mailconfigapi data interfac interfac editor io string attribut string string headercolor color color string includesourc bool data black cyan yellow magenta mail interfac attribut structur clearli follow plugin api modul consid sinc configur api written applic programm usual complex howev configur file implement normal user may program background henc imper avoid clutter possibl help goal plugin framework offer merg facil combin two haskel sourc file plugin partit configur inform provid applic user applicationsuppli stub file extra syntax contain modul name export list import declar user configur file stub merg togeth compil manag creat actual plugin sourc mail configur exampl stub may modul mailconfig resourc import mailconfigapi resourc interfac user configur file might import systemdirectori attribut doesfileexist usrbinemac return b emac els vi compil manag merg configur file stub declar configur file replac name stub exampl two use effect 1 configur file empti default configur 2 type signatur stub file use ensur resourc right type context userfriendli edsl problem achiev clear error messag aris standard problem edsl claim found new solut howev applic inspect modifi error messag due make invoc forward user exact merg process type check make describ detail section 7 overal configur file compil load applic startup enabl userdefin behaviour base valu plugin resourc data structur exampl show applic author reus languag infrastructur ap plicat configur system without resort adhoc languag implement gain addit featur type check often omit dsl 42 pantheon pantheon 29 implement elliott languag pan continu imageanim synthesi 10 11 consist librari implement edsl pan client capabl display imag anim inbetween librari client effect plugin use edsl describ imag anim client display pan edsl model imag function continu cartesian coordin colour anim model function continu time imag interact effect defin use user interfac monad ui enabl user attach gui widget radio box slider variabl affect appear effect eg circl radiu amount stretch imag horizont simpl exampl consid follow plugin whose effect declar implement blue circl white background whose radiu adjust slider widget circl frac imagec circl circlereg frac imag bool circlereg r effect ui animc liftm circleanim v get detail pan circlereg creat black white imag region cover circl radiu r function circl turn blue white imag circleanim make radiu variabl timeresult anim anim hook slider effect pantheon client expect type ui animc pantheon configur exampl previou sub section error messag plugin compil provid user remain challeng make clear edsl user pantheon benefit enorm plugin librari begin one design goal effect describ interact although goal satisfi part ui monad abil user interact view effect make minor alter load new version within singl runtim session much conveni forc recompil pantheon client everi time effect chang addit multipl effect open display simultan ousli implement multipl plugin 43 lightweight parser primari attract edsl lie reus host languag featureshowev one pay price inherit haskel facil syntact control preced fixiti control degre perfect mix fix syntax defin exampl could one defin notat without form preprocess specifi extens haskel syntax despit fact mere syntact sugar addit possibl redefin syntax even though may desir dsl context one attract featur dsl easier nonprogramm use target audienc alreadi familiar notat domain ensur syntax match domain mere conveni crucial success languag provid dsl semant embed haskel plugin architectur runtim compil provid solut lightweight parser written perform dsltohaskel syntax transform parser call host applic transform dsl code suitabl compil make result haskel plugin compil dynam load applic word lightweight parser essenti preprocessor edsl code vanilla haskel also produc syntax error form easi understand end user oppos haskel centric error messag make produc situat error relat static semant comprehens error check lightweight parser make parser significantli less lightweight although benefici usabl defin syntax dsl pure frontend exist compil infrastructur away compil modul normal need write dsl abstract syntax definit name suppli symbol tabl util compil infrastructur cheapli avail use plugin one could also plug dsl parser differ syntax could provid differ parser plugin user could choos whichev syntax prefer write clearli context extens languag pluginbas architectur afford extra flexibl edsl make even attract implement techniqu 5 type safeti oper system dynam loader eg dlopen unix loadlibrari window inher unsaf find valu function load object dynam loader search symbol name return refer valu associ symbol unsaf user may gener plugin correct symbol name wrong type likelihood lead crash lack safeti oper system loader impli safeti guarante provid higherlevel softwar unfortun ghc dynam loader although perform extra check also unsaf moreov typesaf altern dlopen librari base type assembl languag 15 feasibl use ghc ghc load object compil via standard c compil dont want simpli trust author plugin code provid valu correct type consid two techniqu ensur type safeti framework ultim employ unsaf dynam loader gori lowlevel work first discuss use dynam type check plugin valu load second discuss use full type checker runtim provid form stage type infer overcom limit first techniqu 51 dynam check plugin plugin compil separ host applic must import implement applic plugin api see section 22 ever due separ compil plugin guarante plugin import correct api provid symbol correct type henc need abl annot compil object code type inform plugin infrastructur perform type check load plugin haskel provid suitabl dynam type 1 4 22 37 standard librari dynam encapsul valu represent type check usag runtim dynam type thu enabl type check delay runtim plugin infrastructur requir plugin wrap interfac dynam valu host applic use fromdynam function coerc cast dynam type interfac expect type return error valu cast fail thu complement dynam linker load function dynload function dynload perform convent load also unwrap dynam type valu perform type check follow exampl applic expect plugin export valu type apiinterfac wrap dynam type ever plugin author instead provid someth dynam type int dynload function catch type error load object file display appropri error messag load packag base link done load object api plugin done fail type doesnt match apiinterfac approach give us much type safeti underli dynam implement permit howev dynam type object code defenc malici code check whether type correct way check whether valu associ type valid rea son howev dynam type check replac altern implement rigor object code check ing dynload effect provid hook ad verif underli unsaf dynam loader applic may even abl choos number trust verif hook depend need 52 dynam type dynam load dynam haskel standard librari provid runtim type check way follow function typeabl dynam mayb word fromdynam expect appli valu type dynam unfortun lead weak dynload neither oper system ghc dynam loader guarante symbol obtain separ compil load plugin type dynam plugin provid correct symbol name bound nondynam valu fromdynam simpli crash form dynam type check safe presenc separ compil need abl differenti dynam valu other plugin object code design check ongo work standard dynam librari also fail deduc type equal correctli presenc dynam load use integ key repres type fast comparison howev separ com pilat key creat plugin type gener applic version type due implement hash standard librari luckili readili remedi provid altern dynam implement plugin infrastructur librari use string comparison canon name type rather hash key type represent anoth problem standard dynam librari requir valu instanc typeabl restrict dynam type monomorph valu mechan deal type quantif consequ deal form polymorph fortun work around extent use ghc rankn polymorph eg data type declar data interfac interfac rsrc foral eq bool enabl us wrap polymorph valu data type name interfac remain typeabl mean use dynam type techniqu work well plugin interfac sinc advoc use singl type repres plugin api store polymorph valu wrap insid api type addit restrict howev need wrap unwrap polymorph valu anoth type tediou context eg haskel interpret plug gener plugin express enter plug promptmay polymorph 53 dynam check plugin improv number research propos form dynam support polymorph valu form runtim type unif 2 22 26 27 present altern approach lower implement cost stay within limit haskel type system nevertheless dynam check plugin valu without place artifici limit plugin interfac type remain safe static link code load plugin need check valu retriev object compat type api ie need type pluginresourc compat apiinterfac case follow modul type check modul apitypeconstraint import qualifi api import qualifi plugin apiinterfac instead use form dynam type check type run time simpli invok standard type checker modul unlik idea stage type infer 31 approach advantag entir independ extens type system support underli im plement requir extens also inhibit use featur type system plugin api particular type involv type variabl pose addit difficultiesmuch contrast dynam type howev invok full type infer machineri runtim may sound expens quantifi cost plugin librari gener temporari modul correspond apitypeconstraint check conform plugin code plugin api function pdynload p polymorph use load plugin ghc type checker accept apitypeconstraint modul safe load plu gin precis pdynload implement follow pdynload obj inc pkg ty tmp newtyconstraint ty symbol err typecheck tmp null err v load obj inc pkg symbol return v els mapm putstrln err return noth function pdynload close relat fromdynam arm typecas express predic type equal iti check valu export plugin refer symbol type determin ty two step first newtyconstraint gener temporari modul similar apitypeconstraint second typecheck invok ghc type checker temporari modul test suc cess safe load plugin otherwis return error lead question type inform propag api plugin sourc apitypeconstraint modul implement type constraint luckili mechan need ghc standard support separ compil suffici particular ghc gener interfac hi file type inform compil modul export valu type inform suffici purpos check plu gin valu interest must alreadi export list henc stage type infer restrict case plugin easili implement gener case exampl consid follow plugin sourc modul plugin resourc num modul well type howev lead type error compil apitypeconstraint modul resourc clearli type apiinterfac sinc resourc export type plugin interfac file whichin case ghcha follow form interfac plugin resourc foral ghcnumnum contrast interfac file gener applic api modul might follow interfac api data interfac interfac ghcbasestr ghcbasestr plugin interfac given two interfac file type checker reject express pluginresourc apiinterfac check apitypeconstraint modul follow error messag indic num class restrict plugin valu compat api type load dynload load tabl 1 cost check runtim load rel uncheck load check type done 14 instanc num apiinterfac aris use pluginresourc 1418 express pluginresourc apiinterfac note none requir access plugin sourc requir plugin object file accompani interfac file compil gener automat creat object file 531 type check perform question remain whether invok full haskel type checkerin case actual invok ghci suffici fast fact overhead less might imagin code gener requir tabl 1 show compar perform variou load strategi use runtim load plugin without type check refer valu name load tabl runtim type check use dynam type standard librari 7 slower dynload tabl con trast invok ghc add 22 base load time anoth 24 use type check apitypeconstraint modul pdynload tabl overal stage type infer plugin use pdynload provid maximum flexibl 46 expens uncheck load ratio averag sever differ architectur run differ version com piler differ oper system believ addit overhead pdynload versu uncheck load signific issu two reason first plugin typic load cost amortis run time applic second plenti room optimis perform problem exampl shield sheard peyton jone 31 discuss sever mechan limit amount type infer need perform run time might adapt framework addit alli specul link type checker static applicationrath invok ghc extern process greatli reduc type check time could base ghc recent support link compil compon librari 54 type safeti sourc code plugin despit pdynload overcom limit runtim type check dynam type remain vulner attack sinc type checker trust type inform contain interfac file user provid malici interfac file noth short proofcarri code 5 give full type safeti dynam loadabl object howev need trust interfac file access sourc code plugin case gener object code match interfac file use plugin librari compil manag make combin dynam loader pdynload process success applic sure plugin intern load dynload pdynload safe object code sourc code full type full avail intern variabl free safeti interfac tabl 2 type safeti plugin use differ approach welltyp also match interfac still need trust full compil differ plugin static link applic 55 type safeti summari consid two fundament differ mechan typesaf plugin 1 limit runtim type check use dynam type 2 full runtim type check via compil overcom limit first approach demonstr ad flexibl latter impli roughli 50 penalti respect time need load plugin independ mechan use check plugin interfac may compil plugin sourc load time ensur intern typesaf tabl 2 summaris differ level type safeti achiev either object code avail sourc code compil load time 6 dynam loader dynam loader purpos load object code applica tion address space arrang code avail applic achiev need interact haskel runtim system typic use oper system dynam loader dynam loader also requir highlevel mechan resolv depend plugin librari depend librari modul must load prior load plugin runtim system chase depend find librari make signific proport dynam loader code 61 runtim load object load facil ghc runtim system implement c provid singl modul load search appropri symbol reloc resolut without depend chase object load compris part linker creat haskel execut platform 30 use ghci load haskel librari interpret session follow ghci approach plugin librari implement foreign function interfac object loader linker runtim system make avail haskel extend lowlevel function provid full librari modul depend search load much requir ghci problem depend chase object file contain inform necessari determin object file given plugin depend upon ghc problem solv store modul librari depend inform object correspond interfac hi file plugin compil ghc hi file alway creat object abl use purpos interfac file store compress binari format make quit difficult pars extract ghc binari hi file parser librari modul applic make call load object file first pars interfac file associ object extract modul librari depend load depend depend order final load plugin resolv symbol return request valu applic unfortun exist anoth problem depend haskel librari depend note interfac file canon name librari exampl librari usrlocallibghc621hsunixo store interfac file simpl string unix complic librari depend librari includ c librari addit depend appear interfac file fortun necessari inform requir find full path depend inform librari store ghc librari configur file packageconf access pars inform implement packageconf packag file parser enabl us reconstruct inform requir find load librari interfac file read packag inform resolv final abl find load plugin depend librari modul maintain mutabl state dynam loader keep track librari modul load skip load compon need peatedli also use state store map librari canon name full path intern state lock use mvar concurr access synchronis safe 62 standalon typecheck dynam type check mechan provid pdynload requir call compil runtim type check code fragment current achiev write code fragment temporari file invok compil appropri flag stop compil type check henc prevent code gen erat treat compil simpli type check function error produc return caller without code gener type check rel fast could improv link compil directli applic librari facil alreadi exist ghc 63 proxi object one usual think dynam loader tool inject new code program address space runtim howev dynam loader also thought intermediari plugin instead directli expos plugin function host applica tion dynam loader mediat commun host applic plugin enabl complet separ plugin implement locat host applica tion exampl dynam loader search userextens plugin repositori match plugin satisfi interfac need applic transpar marshal data provid haskel esdl host applic written c give dynam loader power featur surrog object corba interceptor fulfil proxi mediat adapt design pattern 12 featur particularli use haskel sinc dynam loader maintain local state separ applic contain inform load plugin depen denci plugin requir local state dynam loader suppli state instead host applic save host applic carri around plugin state data structur requir addit code simpli support extran state plugin may make use 7 compil manag next dynam loader compil manag second major compon plugin librari infrastructur arrang sourc code condit compil determin whether chang sinc previou compil also implement merg extra code plugin abstract syntax compil time allow compulsori definit includ automat 71 invok compil plugin librari make function accept path haskel sourc file argument invok ghc compil sourc object file whose output path control host applic dynam load import perform plugin reload call make unnecessarili recompil sourc code invok ghc extern process add signific overhead even ghc detect sourc chang detect modif time sourc call ghc make reload cheap opera tion invok ghc recompil plugin compil actual requir 72 merg syntax one featur govern compil manag addit syntax plugin sourc code facilit simplifi edsl plugin achiev applic author write stub haskel sourc file contain declar applic requir plugin applic exampl specifi modul name export list stub use prefer plugin ensur compil plugin correct modul name plugin librari use haskel parser construct abstract syntax tree two sourc type inform plugin tree eras type inform modul importex port declar stub tree merg ast plugin result ast contain union type inform provid applic author declar plugin author ast written haskel sourc file compil via make compil error occur return host applic display user exist haskel parser librari languagehaskel limit pars haskel 98 extens edsl file syntax merg turn limit haskel 98 futur intend remov restrict link ghc parser librari full haskel parser 8 relat work dynam loader describ paper strongli relat glasgow haskel compil dynam loader use extens ghcith compil interact environmentto enabl mix compil interpret code reus ghc dynam loader extens fashion enabl use haskel code bind haskel via ffi 3 also implement depend resolut similarli ghci use interfac file gener ghc compil reus interfac packag parser ghci howev use techniqu propos ensur type safeti object load ghci emerg hep 30 project whose full goal yet realis sens ad miss element hep mani function program languag less support dynam type dynam load particular clean 28 good support polymorph dynam type use varieti scenario includ typesaf distribut commun 14 interact clean interpret 34 similar spirit plug ghci particular describ safe file io system store arbitrari object includ function disk system requir form dynam link combin polymorph dynam type 26 27 use dynam similar concentr topic extens languag plugin infrastructur rather use dynam howev would wise research clean dynam type dynam load work lowerlevel overcom dynam implement problem discuss section 52 ad dynam type dynam load ml famili languag also receiv signific amount attent 9 13 18 22 particular leroy mauni describ eval syntax function abstract syntax dynam type valu briefli discuss function may use emb caml within program object caml provid dynlink librari 21 support dynam load link bytecod object type safeti ensur check object compil interfac applic java virtual machin jvm support dynam load via class loader 23 sinc jvm bytecod type languag class loader abl perform typesaf dynam load jvm contain verifi ensur type safeti dynam load code due popular java jvm like wide use implement typesaf dynam loader 9 futur work work highlight need safer form dynam type haskel particular need abl gener except valu retriev load object dynam type current valu unsaf coerc dynam result crash unless handl situat grace use dynam type objectcod plugin remain unsaf use envisag least two approach solv problem 1 introduc simpl type system object file understood runtim system 2 provid checksum type represent store dynam valu simpl type system altern 1 would distinguish two type name whether valu type dynam type inform suffici prevent unsaf coercion valu type dynam checksum altern 2 use similar way recomput checksum inspect valu approach would make use dynam type safe checksum use accept amount safeti mani applic use existenti type 20 support mani exist haskel implement includ ghc hug nhc98 existenti type commonli associ dynam type 7 8 previous use provid dynam dispatch haskel 19 inde sinc plugin often use dynam dispatch function research need possibl interact existenti type plugin current use plugin infrastructur librari produc rather larg binari size due static link larg part ghc mani haskel librari result applic modifi plugin infrastructureand thu ghc runtim system linkerto use oper system nativ share librari mechan ieso dll dylib file would produc much smaller applic binari size especi import embed haskel support applic written languag larger binari size may barrier use haskel extens languag eventu hope produc execut size compar applic embed support languag perl python whose support librari runtim system usual store share librari one caveat use pdynload type check objectcod plugin discuss section 53 plugin interfac hi file must accompani object file directori henc plugin consist two file rather one make bit unwieldi futur hope add support ghc store interfac inform compil object file share librari allevi need extra file moreov plan link part ghc type checker host applic save overhead fork extern process end plan exploit ghc recent support make compon compil librari paper introduc gener framework plugin haskel discuss framework enabl haskel use strongli static type extens languag use modifi add applic function runtim without modifi applic sourc code discuss relationship edsl extens languag advoc use haskel edsl dynam script languag possibl due plugin frastructur languag ffi bind haskel immedi inherit benefit enabl use haskel extens languag rather design adhoc languag plugin infrastructur librari current use extend pan theon imag manipul framework use pan edsl extens languag describ interact haskel environ evalu haskel code string compil load string plugin show runtim compil use via ffi enabl use dynam gener haskel plugin within c objectivec program sourc code exampl paper well plugin librari hsplugin avail view download httpwwwcseunsweduaudonshspluginspap acknowledg grate kai engelhardt mark wotton simon winwood rest irc channel slashnetorgmaya feedback draft moreov thank anonym review construct critic r dynam type static type languag dynam type polymorph languag primit foreign function interfac lightweight implement gener dynam autom techniqu provabl safe mobil code yampa ar cade dynam type existenti type dynam type distribut program polymorph languag function imag synthesi compil embed languag design pattern element reusabl objectori softwar dynam ml without dynam type distribut comput base clean dynam safe flexibl dynam link nativ code build domainspecif embed languag haskor music notat algebra music alic land oz interoper base implement function languag top relat languag combin type class existenti type type class existenti type object caml system 308 dynam ml dynam class load java virtual machin function automat differenti dirac impuls higher level program 21st centuri first class file io dynam type type depend function concurr clean languag report version 21 optimis embed dsl use templat haskel architectur haskel execut platform hep dynam type stage type infer emac extens ghc team type safe interact interpret function languag use compil code draft haskel xml gener combin typebas translat proceedingsin proceed fourth acm sigplan intern confer function program icfp99proceed tr dynam type static type languag dynam ml design pattern build domainspecif embed languag dynam type stage type infer dynam class load java virtual machin dynam type distribut program polymorph languag haskel xml typesaf cast lightweight implement gener dynam typesaf link recurs dll share librari script autom techniqu provabl safe mobil code safe flexibl dynam link nativ code first class file io dynam type type depend function emac extens customiz selfdocu display editor yampa arcad function automat differenti dirac impuls compil embed languag ctr bjrn bringert ander hckersten conni andersson martin andersson mari bergman victor blomqvist torbjrn martin student paper haskelldb improv proceed 2004 acm sigplan workshop haskel p108115 septemb 2222 2004 snowbird utah usa nikla broberg haskel server page dynam load proceed 2005 acm sigplan workshop haskel p3948 septemb 3030 2005 tallinn estonia stewart manuel chakravarti dynam applic ground proceed 2005 acm sigplan workshop haskel p2738 septemb 3030 2005 tallinn estonia