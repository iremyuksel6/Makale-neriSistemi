checkpoint distribut share memori distribut share memori dsm promis program model exploit parallel distribut memori system provid higher level abstract simpl messag pass although node standard distribut system exhibit high crash rate dsm environ kind support faulttolerancein articl present checkpoint mechan dsm system effici portabl offer portabl built top mpi use servic offer mpi posix compliant local file systema far know first real implement scheme dsm along descript algorithm present experiment result obtain cluster workstat hope research show effici transpar portabl checkpoint viabl dsm system b introduct distribut share memori dsm system provid share memori program model top distribut memori system ie distribut memori multiprocessor network workstat dsm appeal combin perform scalabl distribut memori system eas program sharedmemori machin distribut share memori receiv much attent past decad sever dsm system present literatur eskicioglu95raina92nitzberg91 howev exist promin implement dsm system provid support faulttoler carter91 keleher94 li89 johnson95 limit want overcom dsm system use parallel machin andor workstat cluster user awar likelihood processor failur increas number processor failur one processor lead crash hangup whole applic distribut system repres costeffect solut run scientif comput time vulner occurr failur studi present long95 show expect averag failur everi 8 hour typic distribut system compos 40 workstat machin exhibit mtbf 13 day program run system take 8 hour execut would difficult finish execut unless fault toler support assur continu applic parallel machin consider stabl even present rel low mtbf instanc mtbf larg parallel machin like intel paragon xp 150 1024 processor oak ridg nation laboratori order 20 hour ornl95 case longrun scientif applic essenti checkpoint mechan would assur continu applic despit occurr failur without mechan applic would restart scratch costli applic paper present checkpoint scheme dsm system despit transpar applic quit gener portabl effici scheme quit gener depend specif featur dsm system fact system implement sever protocol consist model consist checkpoint scheme made independ protocol scheme also quit portabl sinc implement top mpi noth chang insid mpi layer call dsmpi silva97 scheme requir posix compliant file system make use likckpt tool plank95 take local checkpoint process tool work standard unix machin final dsmpi effici implement checkpoint usual effici depend write latenc stabl storag also characterist checkpoint protocol first featur mainli depend underli system second one control implement nonblock coordin checkpoint algorithm freez whole applic checkpoint oper done block algorithm problem nonblock algorithm block one need record stabl storag intransit messag cross checkpoint line howev exploit semant dsm messag achiev import optim intransit messag log stabl storag result taken use distribut stabl storag observ maximum overhead 6 extrem short interv checkpoint 2 minut realist interv order ten minut even hour overhead would fall insignific valu rest paper organ follow section 2 describ gener organ dsmpi protocol section 3 present transpar scheme base nonblock coordin checkpoint algorithm section 4 compar algorithm scheme section 5 present perform result final section 6 conclud paper 2 overview dsmpi section give brief descript dsmpi silva97 21 main featur dsmpi parallel librari implement top mpi mpi94 provid abstract global access share memori user specifi datastructur variabl share share data read andor written process mpi applic import guidelin took account design dsmpi 1 assur full portabl dsmpi program 2 provid easytous flexibl program interfac 3 support heterogen comput platform 4 optim dsm implement allow execut effici 5 provid support checkpoint sake portabl dsmpi use memorymanag facil oper system neither requir use special compil linker share data readwrit oper declar explicitli applic programm share unit program variabl data structur dsmpi classifi structurebas dsm oppos pagebas dsm system like ivi li89 incur problem fals share unit share data complet relat exist object data structur applic allow use heterogen comput platform sinc librari know exact format share data object dsm system limit homogen platform dsmpi allow coexist program model messag pass share data within mpi applic consid promis solut parallel program kranz93 concern absolut perform expect applic use dsm perform wors messag pass counterpart howev alway true realli depend memoryaccess pattern applic way dsm system manag consist replic data tri optim access share data introduc three differ protocol data replic three differ model consist adapt particular applic order exploit semant facil expect dsm program competit mpi program term perform perform result collect far corrobor expect silva97 22 intern structur dsmpi two kind process applic process daemon process latter one respons manag replic data protocol consist sinc current implement mpi threadsaf implement dsmpi daemon separ process limit current version dsmpi relax soon threadsaf implement mpi commun daemon applic process done messag pass applic process access local cach locat address space keep copi replic data object daemon process maintain master copi share object dsmpi maintain twolevel memori hierarchi local cach remot share memori locat manag daemon ownership data object implement static distribut scheme 23 dsm protocol provid flexibl access share data introduc three differ protocol data replic three differ model consist adapt particular applic order exploit semant share object classifi two main class singlecopi multicopi multicopi class replic object among process perform read request order assur consist replic data system use writeinvalid protocol writeupd protocol stumm90a paramet tune applic programm order exploit execut effici also implement three differ model consist 1 sequenti consist sc propos ivi system li89 2 releas consist rc implement protocol dash multiprocessor 3 lazi releas consist lrc implement similar protocol propos treadmark system keleher94 shown lrc protocol abl introduc signific improv two model flexibl provid dsmpi term differ model protocol import contribut overal perform dsmpi 24 program interfac librari provid c interfac programm call dsmpi function way call mpi routin complet interfac compos routin includ routin initi clean termin object creation declar read write oper routin synchron like semaphor lock barrier full interfac describ silva97 3 transpar checkpoint algorithm devis transpar checkpoint algorithm dsm system tri achiev object like transpar portabl low perform overhead low memori overhead abil toler partial total failur system satisfi previou guidelin easi task possibl propos exist checkpoint scheme dsm mainli concern transpar transpar recoveri implement oper system level dsm layer attract idea howev scheme involv signific modif system make difficult port system sake portabl checkpoint made independ underli system much possibl 31 motiv checkpoint scheme meant quit gener depend specif featur dsm system system implement sever protocol consist model consist checkpoint scheme made independ protocol scheme offer degre portabl implement top mpi per se alreadi provid highlevel portabl sinc accept standard messagepass noth chang insid mpi layer scheme requir posix compliant file system make use libckpt tool plank95 take local checkpoint process tool work standard unix machin take transpar checkpoint mean possibl assur checkpoint migrat machin differ architectur howev checkpoint mechan port dsm environ 32 coordin checkpoint guidelin adapt checkpoint techniqu use messag pass system sinc checkpoint mechan wide studi messagepass environ two method take checkpoint commonli use coordin checkpoint independ checkpoint first method process coordin ensur local checkpoint form consist system state independ checkpoint requir coordin process result rollback propag avoid domino effect reduc rollback propag messag log use togeth independ checkpoint independ checkpoint messag log encourag option dsm system gener messag messagepass program thu chosen coordin checkpoint strategi dsmpi reason manifold minim overhead failurefre oper sinc need log messag limit rollback previou checkpoint avoid dominoeffect use less space stabl storag requir complex garbagecollect algorithm discard obsolet checkpoint final suitabl solut support jobswap shown elnozahi92plank94 coordin checkpoint effect solut messagepass system experiment result shown overhead synchron local checkpoint neglig compar overhead write checkpoint disk implement checkpoint algorithm underneath dsm layer transpar way layer possibl altern provid faulttoler suggest carter93 howev would simplist approach sinc dsm system exchang sever messag relat applic approach would result extra overhead would exploit characterist dsm system 33 system model assum dsm system use messag pass implement protocol notion global time guarante processor clock synchron way processor assum failstop provis detect toler kind malici failur processor fail stop send messag respond part system processor failur detect underli commun system mpi use timeout one process fail mpi layer send sigkil process applic daemon termin complet applic mpi make extens use static group fact whole set process belong begin mpiworldcomm group process fail collect oper involv particip process certainli hangup applic thu make sens failur one process result rollback entir applic commun failur also dealt commun system mpi underli messagepass system provid reliabl fifo pointtopoint commun servic stabl storag implement share disk assum reliabl disk attach central file server checkpoint becom avail work processor system stabl storag implement local disk everi processor assum host disk applic recov fail host also abl recov 34 checkpoint content checkpoint dsm system includ dsm data eg pagesobject dsm directori privat data applic scheme save privat data process thu abl recov whole state comput stumm90b leav applic programm respons save comput state assur continu applic scheme assum sake simplic privat data share data alloc dsm kermarrec95 depart assumpt consid privat data alloc dsm system besid privat data like processor regist program counter process stack certainli part dsm data scheme checkpoint applic process well dsm daemon sinc maintain dsm relev data dsm daemon save share object associ dsm directori save directori reflect locat default current owner share object optim made system readonli object checkpoint replic share object checkpoint one daemon one maintain ownership process applic daemon save checkpoint separ file global checkpoint compos n differ checkpoint file statusfil keep statu checkpoint protocol execut file maintain checkpoint coordin use phase recoveri determin last commit checkpoint well ensur atom oper write global checkpoint checkpoint algorithm sinc checkpoint scheme messag pass system well stabil decid adopt one use techniqu implement nonblock global checkpoint elnozahy92silva92 main difficulti implement nonblock coordin checkpoint guarante global save state consist messag intransit time global checkpoint main concern save consist snapshot distribut applic instanc messag sent checkpoint process sender receiv checkpoint receiv call orphan messag silva92 sort messag violat consist global checkpoint thu avoid algorithm messag sent checkpoint sender receiv checkpoint destin process call miss messag usual algorithm keep track occurr replay recoveri oper howev consid featur dsm system import implement algorithm name interact process done explicit messag object invoc rpclike interact share replic data dsm system exchang addit messag relat dsm protocol affect applic directli final dsm directori maintain throughout system featur taken account exploit introduc optim result scheme present novel import featur nonblock algorithm orient messagepass need record cross checkpoint messag stabl storag oper checkpoint trigger period timer mechan one daemon act like coordin master daemon respons initi global checkpoint coordin step protocol one process given right initi checkpoint session order avoid multipl session uncontrol highfrequ checkpoint oper sinc alway one dsmpi daemon elect master startup phase guarante daemon checkpoint coordin checkpoint adequ space time global checkpoint identifi monoton increas number checkpoint number cn first phase protocol coordin daemon increment cn broadcast takechkp messag daemon applic process upon receiv messag process take tent checkpoint increment local cn send messag tookchkp coordin take tent checkpoint everi process allow continu comput applic need frozen execut checkpoint protocol import featur avoid interfer applic reduc checkpoint overhead second phase protocol daemon broadcast commit messag receiv respons ie tookchkp particip upon receiv commit messag tent checkpoint transform perman checkpoint previou checkpoint file delet phase record statusfil master daemon usual broadcast messag takechkp receiv process order preserv causal howev due asynchroni system possibl situat may violat causal consist import aspect everi share object tag local cn valu everi messag sent dsm system tag cn sender cn valu piggyback dsm messag prevent occurr orphan messag daemon receiv messag higher cn local one take tent checkpoint consum messag chang intern state later receiv takechkp messag tag equal cn discard messag sinc correspond tent checkpoint alreadi taken cn valu also help identifi miss messag incom messag carri cn valu lower current local one mean sent previou checkpoint interv potenti miss messag checkpoint algorithm distinguish messag use readwrit oper messag use dsm protocol use semant dsm protocol avoid unnecessari log potenti miss messag daemon process run cycl receiv takechkp messag take local snapshot intern state includ dsm directori applic process get takechkp order execut dsmpi routin whenev read local cach perform remot object invoc access synchron variabl invoc share object synchron variabl involv twoway interact invoc respons period process wait respons remain block thu chang intern state interact fit structur messag relat dsm protocol usual messag origin daemon process requir rpclike interact sake clariti let us distinguish three differ case case 1 messag processtodaemon interact start applic process want perform readwrit oper share object gain access synchron variabl process maintain directori locat owner object lock semaphor barrier want access send invoc messag respect daemon block wait respons let us consid two differ scenario handl algorithm 11 process p run checkpoint interv n daemon k still run previou checkpoint interv ie 12 process p cn equal n1 daemon alreadi taken n th tent checkpoint cnn exampl first scenario illustr figur 1 process p alreadi took n th checkpoint perform read access remot object own daemon k yet receiv correspond takechkp messag read messag carri cn equal n daemon check take local checkpoint consum messag instead read oper write lock unlock wait signal barrier invoc oper associ acknowledg repli messag figur 1 forc checkpoint dsm daemon figur 2 repres second scenario daemon alreadi taken n th checkpoint process start read transact previou checkpoint interv receiv readrepli process realiz take local checkpoint increment local cn consum messag continu comput figur 2 forc checkpoint applic process howev oper enough sinc checkpoint cpin record read invoc messag recoveri process repeat read transact checkpoint routin record read invoc messag content checkpoint sens say logic checkpoint immedi send read messag repres figur 3 time checkpoint invoc messag belong address space process therefor alreadi includ checkpoint concern redirect start point recoveri point code immedi send messag purpos label includ everi dsmpi routin return forc checkpoint restart oper control flow jump label invoc messag resent thu assur read transact repeat begin figur 3 notion logic checkpoint case 2 messag daemontoprocess messag start daemon process relat dsm protocol usual invalid updat messag depend replic protocol messag follow rpclike structur thu block send daemon applic process consum sort messag execut cach refresh procedur also identifi two differ scenario 21 protocol messag potenti orphan messag 22 protocol messag potenti miss messag first situat repres figur 4 process p receiv messag carri higher cn local one forc take checkpoint proceed figur 4 potenti orphan messag second scenario illustr figur 5 invalid updat messag sent previou checkpoint interv receiv applic process take local checkpoint theoret exampl miss messag normal case would record stabl storag order replay case recoveri howev need log miss invalidateupd messag absolut problem messag replay case rollback reason simpl recoveri procedur everi applic process clean local cach logic checkpoint process access share object perform remot oper owner daemon get uptod version object figur 5 exampl miss messag case 3 messag daemontodaemon use static distribut ownership scheme daemon commun startup phase creation new object also happen startup phase dynam ownership scheme messag daemon sent time sinc ownership object move daemon daemon current version dsmpi follow static distribut scheme next version provid dynam distribut scheme well consid dynam distribut ownership scheme similar one present li89 share data object associ owner chang data migrat throughout system process want write migratori object system chang locat daemon associ process object locat chang frequent program execut everi process daemon maintain guess probabl owner share object process need copi data send request probabl owner daemon data object return data otherwis forward request new owner forward go current owner found chain probabl owner current owner send repli ask process receiv data updat valu probabl owner repli receiv expect daemon sometim scheme ineffici sinc request may forward mani time reach current owner ineffici reduc daemon involv forward request given ident current owner consid optim involv send ownership updat messag current owner daemon belong forward chain let us see implic forwardbas scheme checkpoint algorithm messag exchang daemon divid three differ class 31 forward messag sent behalf readwrit transact 32 ownerupd messag announc current owner object 33 transfer object current owner next owner first kind messag follow rule state case 1 ie transact start process rule explain help figur 1 2 3 differ daemon process involv forward chain appli rule case ownerupd messag treat similar way case 2 ownerupd messag carri cn higher cn destin daemon messag potenti orphan messag forc checkpoint destin proceed rule case 21 explain figur 4 appli case ownerupd messag carri lower cn destin daemon correspond potenti miss messag like figur 5 normal case log replay case recoveri howev realiz problem log messag system still abl ensur consist recoveri applic recoveri procedur distribut directori reconstruct use broadcast updat current ownership object mean ownerupd messag lost recoveri object directori updat case transfer data one daemon new owner includ forward protocol repli sent current owner origin process copi data also sent first sent daemon associ process daemon new owner rule state previous also use case sinc object ownership chang frequent execut checkpoint protocol necessari take care avoid share object checkpoint solv problem simpl way current owner respons checkpoint share object transfer object anoth daemon take checkpoint object checkpoint cn valu tag object use prevent migratori object checkpoint summar checkpoint algorithm follow nonblock coordin strategi avoid occurr orphan messag detect potenti miss messag log miss messag stabl storag system still ensur consist recoveri applic achiev optim exploit characterist dsm protocol scheme work sequenti consist relax consist model also independ replic protocol writeupd writeinvalid fact allow wide applic algorithm differ dsm system 36 recoveri procedur case applic recoveri involv roll back process previou checkpoint see drawback rather imposit underli commun system mpi nevertheless suit well goal use checkpoint jobswap well toler number failur thu recoveri procedur quit simpl process roll back previous commit checkpoint determin last commit checkpoint obtain statusfil restor local checkpoint process still perform action restart execut object locat directori construct updat process case static distribut oper bypass ii everi share object defin multicopi owner daemon reset associ copyset list iii applic process clean local privat cach updat object locat directori necessari step process allow resum comput clean privat cach process recoveri introduc visibl overhead allow simpler oper checkpoint oper sinc potenti miss messag exchang behalf dsm protocol need log 4 comparison scheme coordin checkpoint algorithm propos literatur algorithm present janakiraman94 extend checkpointrollback oper process commun directli indirectli process initi algorithm use 2phase commit protocol process particip checkpoint session suspend comput messag intransit flush destin algorithm wait complet ongo readwrit oper proceed checkpoint protocol pend readwrit oper termin processor begin send checkpoint stabl storag may result higher checkpoint latenc perform overhead sinc use block strategi cabillic95 present implement consist checkpoint dsm system approach reli integr global checkpoint synchron barrier applic scheme implement top intel paragon sever optim includ like increment nonblock preflush checkpoint techniqu shown copyonwrit checkpoint import optim reduc checkpoint overhead recoveri oper scheme process forc roll back last checkpoint case limit scheme work applic barrier within applic system never abl checkpoint costa96 also present similar checkpoint scheme reli garbag collector mechan achiev global consist state system base fullblock checkpoint approach kaashoek92 present global consist checkpoint mechan orca parallel languag easi implement dsm implement base totalord broadcast commun process receiv broadcast messag order assur consist updat replic object checkpoint messag also broadcast insert total order messag ensur consist global checkpoint unfortun mpi characterist choy95 present definit consist global state sequenti consist share memori system also present lazi checkpoint protocol assur global consist howev lazi checkpoint scheme may result high checkpoint latenc desir job swap purpos differ recoveri scheme base coordin checkpoint also present literatur wu89janssens93 base commun induc checkpoint everi process allow take checkpoint independ commun anoth one forc checkpoint order avoid rollback propag inconsist communicationinduc checkpoint sensit frequenc interprocess commun synchron applic may introduc high perform overhead uncontrol checkpoint frequenc anoth solut recoveri base independ checkpoint messag log richard93 howev find option encourag dsm system gener messag messag pass program even consid possibl optim suri95 messag log would incur signific addit perform memori overhead consider set propos wilkinson93neves94stumm90bbrown94 kermarrec95 abl toler singl processor failur system goal meaning distribut system expect machin failur uncorrel true parallel machin total multipl failur like partial failur requir checkpoint mechan abl toler number failur although differ approach could interest system find suitabl system decid adopt coordin checkpoint strategi 5 perform result section present result perform memori overhead transpar checkpoint scheme result collect distribut system compos 4 sun sparc4 workstat connect 10 mb ethernet 51 parallel applic conduct evalu algorithm use follow six typic parallel applic tsp solv travel salesman problem use branchandbound algorithm nqueen solv placement problem nqueen nsize chessboard sor solv laplac equat regular grid use iter method gauss solv system linear equat use method gausselimin asp solv allpair shortest path problem use floyd algorithm nbodi program simul evolut system mani bodi influenc gravit forc 1 lack space refer interest reader silva97 detail applic 52 perform overhead made experi transpar checkpoint algorithm dedic network sun sparc workstat everi processor local disk access central file server ethernet network take local checkpoint process use libckpt tool fulli transpar mode plank95 none optim tool use two level stabl storag use first level use local disk processor second level use central server access processor nf protocol write checkpoint local disk expect much faster write remot central disk howev first scheme stabl storag abl recov transient processor failur processor fail perman way abl restart checkpoint access processor network recoveri becom imposs central disk problem assum disk reliabl consid stabl storag implement central file server tabl 1 show time commit correspond overhead per checkpoint applic usual time take commit global checkpoint higher overhead produc algorithm follow nonblock approach applic process need wait complet protocol algorithm base block approach overhead per checkpoint would roughli equal whole time take commit tabl observ overal nonblock natur algorithm allow reduct checkpoint overhead applic size chkp kbyte time commit gauss 1024 8500 130763 128832 tabl 1 time commit overhead per checkpoint use central disk time take checkpoint depend basic four factor size checkpoint ii access time stabl storag iii synchron structur applic iv granular task checkpoint oper perform insid dsmpi routin mean applic asynchron coarsegrain take time perform global checkpoint compar synchron applic factor import practic domin factor actual oper write checkpoint file stabl storag reduc size checkpoint promis solut attenu perform overhead anoth way use stabl storag faster access tabl 2 show overhead per checkpoint consid two differ level stabl storag seen differ figur consider case one order magnitud use ethernet nf central file server realli bottleneck checkpoint oper nevertheless ensur global access stabl storag devic checkpoint made avail even occurr perman failur processor applic size chkp kbyte sec local sec central gauss 1024 8500 1186 128832 gauss 2048 35495 4284 1127654 tabl 2 overhead per checkpoint local vs central disk tabl 3 show differ overal perform overhead consid two level stabl storag differ interv checkpoint present result sor applic execut averag time 4 hour applic interv chkp tabl 3 total perform overhead local vs central disk averag overhead checkpoint tune chang checkpoint interv tabl 3 see maximum overhead observ use local disk 64 correspond overhead central file server 332 show consid distribut stabl storag scheme perform becom interest nevertheless two minut conserv interv checkpoint longrun applic need checkpoint often 20 minut accept interv case perform overhead use local disk 06 small valu interv central disk stabl storag present overhead 307 interest strategi would integr stabl storag level applic checkpoint period central server meantim also checkpoint local disk processor applic fail due transient perturb processor abl restart recov checkpoint save local disk one correspond last commit checkpoint processor affect perman outag applic restart last checkpoint locat central disk possibl solut make distribut stabl storag scheme resili perman failur one processor implement sort logic ring processor copi local checkpoint file next processor disk done global checkpoint commit concurr way lazi updat scheme would introduc delay commit oper addit traffic network regul use tokenbas polici perform remot checkpoint file copi sequenti way obvious want toler n perman processor failur replic checkpoint file n1 local disk network measur perform overhead use level stabl storag result present figur 6 checkpoint central disk perform k checkpoint local disk factor k chang 0 10 figur 6 show overhead reduct sor applic 512x512 grid points515253545 factor k figur twolevel stabl storag sor 512 instanc user want overhead lower 5 factor k 9 3 1 0 use checkpoint interv 2 5 10 20 minut respect perman failur occur one processor system worst case applic loos approxim 20 minut comput four previou case advantag still goe interv 2 minut k equal 9 sinc occurr transient failur lose less comput figur 7 show correspond valu sor applic 1024x1024 factor k figur 7 twolevel stabl storag sor 1024 analysi done consid watermark 10 perform overhead checkpoint applic interv 2 5 10 20 minut factor k 11 4 1 0 respect user requir overhead lower 5 k 8 4 1 interv 510 20 minut respect 6 conclus far know first implement nonblock coordin algorithm real dsm system dsmpi provid differ protocol model consist algorithm work checkpoint scheme generalpurpos adapt dsm system use protocol replic model consist result taken consid distribut stabl storag scheme observ maximum overhead 6 interv checkpoint 2 minut checkpoint interv 20 minut perform overhead 06 interv stabl storag implement central nfsfile server present overhead 307 algorithm herein present offer interest level portabl effici though plan enhanc featur dsmpi next releas implement mpi2 look forward threadsaf version mpi order redesign dsmpi daemon implement optim techniqu propos cabillic95 hope line research would give contribut standard flexibl checkpoint tool use real product code acknowledg work herein present conduct first author visitor epcc edinburgh parallel comput centr visit made possibl due trac programm first author support jnict behalf programa cincia bd208392ia 7 r dynam snoop faulttoler distribut share memori perform consist checkpoint distribut share memori system implement perform munin network multicomput use recover distribut share memori distribut object checkpoint recoveri lightweight log lazi releas consist consist distribut share memori perform consist checkpoint comprehens bibliographi distribut share memori coordin checkpointingrollback error recoveri distribut share memori multicomput relax consist recover distribut share memori crl highperform allsoftwar distribut share memori transpar faulttoler parallel orca program treadmark distribut share memori standard workstat oper system recover distribut share memori integr coher recover integr messagepass share memori earli experi directorybas cach coher protocol dash multiprocessor memori coher share virtual memori system longitudin survey internet host reliabl messag pass interfac standard checkpoint protocol entri consist share memori system distribut share memori survey issu algorithm data avail httpwww perform result ickp consist checkpoint ipsc860 libckpt transpar checkpoint unix virtual share memori survey techniqu system use log asynchron checkpoint implement recover distribut share memori global checkpoint distribut program implement perform dsmpi algorithm implement distribut share memori faulttoler distribut share memori algorithm reduc overhead log rollback recoveri distribut share memori implement faulttoler 64bit distribut oper system recover distribut share virtual memori memori coher storag structur tr memori coher share virtual memori system algorithm implement distribut share memori distribut share memori implement perform munin transpar faulttoler parallel orca program integr messagepass sharedmemori checkpoint protocol entri consist share memori system crl distribut object checkpoint recoveri lightweight log lazi releas consist distribut share memori directorybas cach coher protocol dash multiprocessor perform consist checkpoint distribut share memori system longitudin survey internet host reliabl recover distribut share memori integr coher recover reduc overhead log rollback recoveri distribut share memori virtual share memori survey techniqu system