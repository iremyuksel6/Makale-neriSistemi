multiplerank modif spars choleski factor given spars symmetr posit definit matrix mathbfaatr associ spars choleski factor mathbfldltr mathbflltr develop spars techniqu updat factor either ad collect column delet collect column techniqu base analysi manipul underli graph structur use framework develop earlier paper rank1 modif davi w w hager siam j matrix anal appl 20 1999 pp 606627 comput multiplerank updat better memori traffic execut much faster equival seri rank1 updat sinc multiplerank updat make one pass l comput new entri seri rank1 updat requir multipl pass l b introduct paper present method evalu multipl rank updat downdat spars choleski factor ldl matrix aa n precis given r matrix w evalu choleski factor aa either 1 correspond updat w arbitrari 1 correspond downdat w consist column aa aa ww must posit denit follow case updat n r case downdat one approach multipl rank updat express seri rank1 updat use theori develop 10 updat spars factor rank1 chang approach howev requir multipl pass l updat rank1 chang paper develop spars factor algorithm make one pass l dens choleski factor onepass algorithm updat factor obtain method c1 18 make chang associ one column l move next column done follow algorithm overwrit l new factor aa perform oatingpoint oper algorithm 1 dens rankr updatedownd r end r work support nation scienc foundat davisciseu edudavi po box 116120 depart comput inform scienc engin univers florida gainesvil fl 326116120 phone 352 3921481 fax 352 3921220 tr99006 june 1999 revis sept 2000 z hagermathu eduhag po box 118105 depart math matic univers florida gainesvil fl 326118105 phone 352 3920281 fax 352 3928357 davi william w hager end r l end end end develop spars version algorithm access modi entri l chang theori rank1 paper 10 show column chang correspond node elimin tree path start node k associ rst nonzero element w k1 w r 1 show column l chang correspond node subtre elimin tree express subtre modic elimin tree aa also show reorder column w arrang inner loop element row p w updat element chang adjac spars techniqu develop lead sequenti access matrix element ecient comput memori trac techniqu modifi spars factor mani applic includ linear program dual activ set algorithm leastsquar problem statist analysi electr circuit power system structur mechan sensit analysi linear program boundari condit chang partial dierenti equat domain decomposit method boundari element method see 19 section 2 describ notat section 3 present algorithm comput symbol factor aa use multiset determin locat nonzero entri l section 4 5 describ multipl rank symbol updat downdat algorithm nding nonzero pattern new factor section 6 describ algorithm comput new numer valu l either updat downdat experiment result present section 7 2 notat background given locat nonzero element aa perform symbol factor terminolog introduc georg liu 15 matrix predict locat nonzero element choleski factor l actual predict nonzero may zero due numer cancel factor process statement mean l ij symbol nonzero main diagon l alway nonzero sinc matric factor posit denit see 26 p 253 nonzero pattern column j l denot l denot collect pattern similarli j denot nonzero pattern column j collect pattern elimin tree dene term parent map see 22 node j j row index rst nonzero element column j l beneath diagon element min x denot smallest element convent min empti set zero note j j except case diagon element column j nonzero element children node j set node whose parent j ancestor node j denot pj set success parent j ancestor sequenc nite sequenc node j j j form pj call path j associ tree root nal node path collect path lead root form elimin tree set tree elimin forest typic singl tree whose root howev column j l one nonzero element diagon element j root separ tree number element size set x denot jx j jaj jlj denot sum size set contain 3 symbol factor matrix form aa pattern l j column j union pattern column l whose parent j column whose smallest row index nonzero entri j see 16 22 min akj modifi 31 updat downdat without recomput scratch need keep track entri enter l j 10 exampl c chang may need remov term l c n fcg simpli perform set subtract sinc may remov entri appear term keep track entri enter leav set l j maintain multiset associ column j form 4 timothi davi william w hager multipl mi j number children j contain row index pattern plu number column whose smallest entri j contain row index equival 6 j increment equat one ensur diagon entri never disappear downdat set l j obtain l remov multipl dene addit multiset x set follow way similarli subtract set multiset x dene multiset subtract x undo prior addit multiset x set contrast x n equal x x disjoint set use multiset addit instead set union 31 lead follow algorithm comput symbol factor aa algorithm 2 symbol factor aa use multiset c end k min end end 4 multipl rank symbol updat consid pattern l chang aa replac aa ww sinc essenc augment w order evalu new pattern column l accord 31 new pattern l j column j l updat min akj w pattern column w throughout put bar matrix set denot new valu updat downdat follow theorem consid column j matrix l pattern modi set w let l j denot multiset column j rankr updat downdat appli theorem 41 comput new multiset l j perform follow modic case pattern column case b c c child j old new elimin tree case c c c child j new tree old one case c c child j old tree new one proof case ad account adjust need make l j order obtain l j adjust deduc comparison 31 41 case simpli add w multiset 41 appear 31 case b node c child node j updat case must adjust deviat l c l c 10 prop 32 rank1 updat l c l c w denot ith column w henc updat aa ww equival r success rank1 updat aa repeat applic 10 prop 32 l c l c rankr updat aa 6 timothi davi william w hager follow l c l c deviat set l c n l c consequ case b simpli add l c n l c case c node c child j new elimin tree old tree case need add entir set l c n fcg sinc correspond term appear 31 similarli case node c child j old elimin tree new tree case entir set l c nfcg delet case c child j either old new elimin tree result adjust sinc correspond l c term absent 31 41 algorithm updat choleski factor base theorem would visit node j 1 consid possibl children c j hand node j 1 need consid sinc column l chang aa modi 10 thm 41 show node whose pattern chang contain pk 1 dene rankr updat let p ancestor map associ elimin tree choleski factor matrix 10 thm 41 node whose pattern chang rankr updat contain union pattern although could evalu dicult ecient sinc need perform seri rank1 updat evalu ancestor map hand 10 prop 31 10 prop 32 p j p i1 j j follow p consequ node whose pattern chang rankr updat contain set 1ir theorem 42 show node also contain one set p k follow node precis node entri associ column l chang rankr updat present theorem illustr simpl exampl shown figur 41 left figur 41 show sparsiti pattern origin matrix aa choleski factor l correspond elimin tree nonzero pattern rst column w 2g perform singl rank1 updat caus modic column 1 2 6 8 l correspond node origin tree encircl node form path p 1 8g node 1 root node 8 second tree middl figur 41 show matrix rank1 updat factor elimin tree entri second 1 dier origin matrix aa shown small pluse second column w nonzero pattern w 7g rank1 updat aect column p 2 l column form singl path nal elimin tree shown right gure rst rank1 updat set column actual chang p 1 8g subset path nal tree use p1 guid work associ column 1 w visit column second updat first updat elimin tree elimin tree first updat elimin tree origin factor l factor second updat factor first updat origin matrix second update1 t6743 origin fig 41 exampl rank2 updat need modi plu column 7 node 7 set node p3 aect second rank1 updat howev shown follow theorem theorem 42 path contain convers contain p proof theorem observ path contain suppos node j lie tree need prove contain p largest integ pk contain j let c child j c lie path pk j lie path pk sinc j parent c sinc j lie path pk follow c lie path pk appli argument recurs conclud none node subtre root j lie path pk let j denot subtre root j sinc contain pk none node j lie path thm 41 pattern node outsid path unchang let l c pattern column c choleski factor 42 sinc node c contain j lie 8 timothi davi william w hager dc e f c fig 42 exampl rank8 symbol updat subtre path c l sinc k node j path p must includ j figur 42 depict subtre exampl rank8 updat subtre consist node edg one path pk 1 path form subtre gener graph sinc path initi node root elimin tree matrix l subtre might actual forest l elimin forest rather elimin tree rst nonzero posit w 1 w 8 correspond node k 1 k 8 exampl node k 4 happen lie path p 1 k 1 node path rst intersect shown smaller circl label f node along path shown curv arrow denot singl subpath exampl arrow node b e denot subpath b e pb subpath denot pb e figur 42 follow algorithm comput rankr symbol updat keep track array pathqueu one column l queue contain set pathmark rang 1 r denot path pk 1 next two path merg one path need consid arbitrarili select highernumb path repres merg path set pathqueu requir om remov insert pathmark pathqueu take o1 time output algorithm new pattern l elimin tree name l j column aect rankr updat dene l node j case c occur c j prior visit column c sinc thu place c lostchildqueu column c encount case c node c j algorithm visit node c lostchildqueu contain node case hold set lostchildqueu set pathqueu although exactli one lostchildqueu one pathqueu column j l algorithm 3 symbol rankr updat add new matrix w find start node path r place pathmark pathqueu column k end consid column correspond node path pk 1 pathqueu column j nonempti pathmark pathqueu column j let c prior column path case j rst node path pk prior c els case b c old child j possibl chang els case c c new child j lost child c place c lostchildqueu column c endif end case consid lost child j c lostchildqueu column j end move one step path let largest pathmark pathqueu column j place pathmark pathqueu column j pathqueu column j nonempti end optim time gener rankr updat davi william w hager actual time taken algorithm 3 slightli higher name om bookkeep requir pathqueu practic case om term domin term run time algorithm 3 use comput entir symbol factor start factor ident matrix ii ldl iii case j initi elimin tree forest node edg determin symbol factor aa use rankr updat algorithm matrix ident symbol factor aa case appli column correspond min akj term 31 sinc c 0 c case b appli column j case c appli children elimin tree correspond term 31 sinc duplic path discard merg modifi column j child c elimin tree work perform symbol factor algorithm algorithm 2 ojlj henc algorithm 3 equival algorithm 2 appli updat aa run time optim case 5 multipl rank symbol downdat downdat algorithm analog downdat matrix aa ww w subset column downdat pk pk thu rather follow path pk follow path pk entri drop downdat thu l j l j j j start l j make follow chang case pattern w remov column j case b c child j old new tree need remov l entri old pattern l c new pattern l c case c node c c child j old elimin tree new tree comput multiplerank modif 11 case node c c child j new tree old one comput case c occur c j prior visit column c sinc thu place c newchildqueu c encount case c node c j algorithm visit node c newchildqueu contain node case hold algorithm 4 symbol rankr downdat remov matrix w find start node path r place pathmark pathqueu column k end consid column correspond node path pk 1 pathqueu column j nonempti pathmark pathqueu column j let c prior column path case j rst node path pk prior c els case b c old child j possibl chang els case c c lost child j new child c place c newchildqueu column c endif end case consid new child j c newchildqueu j end move one step path let largest pathmark pathqueu column j place pathmark pathqueu column j pathqueu column j nonempti end davi william w hager time taken algorithm 4 slightli higher optim time practic case om term asymptot run time algorithm 4 domin term 6 multipl rank numer updat downdat follow numer rankr updatedownd algorithm algorithm 5 overwrit l updat downdat factor algorithm base algorithm 1 onepass version method c1 18 present section 1 algorithm use symbol updat algorithm algorithm 3 found subtre correspond node whose pattern chang symbol downdat algorithm algorithm 4 found sinc column matrix w reorder without aect product ww reorder column w use depthrst search 6 march tree consecut column w util comput reorder improv numer datedownd algorithm place column w aect given subpath next elimin index oper reorder column spars matrix prior choleski factor common 3 22 23 25 improv data local simpli algorithm reorder w multipl rank updatedownd depth rst order tree chang elimin tree chang column w must order updat downdat illustr reorder consid subtre figur 42 rank8 updat depthrstsearch algorithm visit child subtre left right result reorder shown figur 61 subpath figur 61 label rang column w aect subpath order subpath process algorithm 5 consid path node c e figur 42 column l correspond node subpath updat column 2 8 3 5 w order reorder subtre figur 61 column subpath updat column 5 8 reorder w algorithm 5 spars numer rankr modic add ww column w reorder r end subpath depthrstsearch order let c 1 c 2 column w aect subpath column j subpath e f c 13th 2nd 1st 6th 3rd 4th 7th 8th 9th 10th 11th 12th 3 47885th fig 61 exampl rank8 updat depthrstsearch reorder end l end end end end time taken r rank1 updat 10 r l j pattern column j ith rank1 updat time asymptot optim singl rankr updat determin path use pk instead thu time taken algorithm 5 rankr updat r slightli higher 61 14 timothi davi william w hager tabl dens matrix perform 64by64 matric 64by1 vector oper op dgemm matrixmatrix multipli 1716 dgemv matrixvector multipli 1300 dtrsv solv daxpi vector comput ddot dot product ith column w necessarili aect column path pk w aect column j w ji zero inner loop algorithm 5 exampl occur figur 41 column 1 w aect column 7 l could check condit reduc asymptot run time r practic howev found path dier much includ test improv overal perform algorithm time taken algorithm 5 rankr downdat similar name r numer algorithm updat downdat essenti ldl 4 24 dierenc diagon scale either ldl symbol algorithm ident 7 experiment result test method select experi earlier paper singlerank updat downdat 10 mimic behavior linear program dual activ set algorithm 20 rst consist 5446 column larger 6071 aris airlin schedul problem dfl001 13 5446 column correspond optim solut linear program problem start initi ldl factor matrix ad column b correspond updat obtain factor 10 6 bb remov column rstinrstout order correspond downdat obtain origin factor lp dasa algorithm would perform much work 6784 updat 6784 date solv linear program problem experi took place sun ultra enterpris run solari 26 oper system eight 248 mhz ultrasparcii processor one processor use 2gb main memori dens matrix perform million oatingpoint oper per second op bla 12 shown tabl 71 result present code except colmmd spool bla written c program languag use doubl precis oat point arithmet rst permut row b preserv sparsiti choleski factor bb done ecient colamd 7 8 9 21 base tabl averag updat downdat perform result op r second updat downdat updat downdat 9 14 approxim minimum degre order algorithm 1 howev keep result consist prior rank1 updatedownd paper 10 use permut experi colmmd 17 colamd matlab colmmd comput order without form bb explicitli symbol factor bb nd nonzero count column factor step take amount space proport number nonzero entri b give us size static data structur hold factor updat downdat process numer factor bb requir second symbol factor nd rst nonzero pattern l initi numer factor comput rst factor l use nonsupernod factor code similar sparspak 5 15 sinc updatedownd algorithm use supernod supernod factor code spool 3 multifront method 2 14 get better perform factor method use impact perform updat downdat algorithm ran dierent experi one use dierent rankr updat downdat r vari 1 16 rankr updat solv spars linear system ldl use dens righthand side b compar perform rank1 updat rankr updat r 1 divid run time rankr updat r give us normal time singl rank1 updat averag time op rate normal rank1 updat downdat entir experi shown tabl 72 time updat downdat solv increas factor becom denser perform term op fairli constant three oper rst rank16 updat factor l sparsest take 047 second 00294 second normal run 655 op compar 651 op tabl 72 averag speed rank16 updat perform step summar tabl 73 rank5 updat take time use updat factor solv spars linear system even though rank5 updat perform 26 time work work term oatingpoint oper vari slightli r chang rank1 updat total work updat 17293 billion davi william w hager tabl dens matrix perform 64by64 matric 64by1 vector oper time sec op note colamd order 045 symbol factor bb symbol factor rst l 046 831 thousand nonzero numer factor rst l code 2007 240 numer factor rst l spool 1810 266 numer factor bb code 6104 185 requir numer factor bb spool 1780 633 requir averag rank16 updat 063 651 compar rank1 averag rank5 updat 025 510 compar solv step averag rank1 updat 0084 303 averag solv ldl point oper 255 million per rank1 updat rank16 updat worst case total work increas 17318 billion oatingpoint oper downdat take total 17679 billion oatingpoint oper 261 million per rank1 downdat rank16 downdat take total 17691 billion oper conrm nearoptim oper count multipl rank updatedownd compar optim rank1 updatedownd solv l spars b dens comput spars ldl factor use nonsupernod method give rather poor comput tomemoryrefer ratio 23 tri loop unrol techniqu use updatedownd code spars solv spars ldl factor code result improv perform spars rankr updat downdat implement onepass algorithm much better memori trac seri r rank1 modic numer experiment dfl001 linear program test problem rankr modic twice fast r rank1 modic r 11 superior perform multipl rank algorithm explain use computationtomemoryrefer ratio c algorithm 5 subpath aect one column w shown ratio 45 l j larg ratio c aect 16 column w 6435 l j larg henc go rank1 rank16 updat improv computationtomemoryrefer ratio factor 23 column j l mani nonzero comparison level1 bla routin dens matrix comput vector comput daxpi ddot 11 computationtomemoryrefer ratio 23 1 level2 bla dgemv dtrsv exampl ratio 2 8 summari improv memori local multiplerank spars updatedownd method twice fast prior rank1 updatedownd method perform new method 651 op spars rank16 updat compar favor dens matrix perform 815 op solv dens system spars matrix perform 180 op solv spars system observ peak numer factor 633 op spool comput use experi although strictli optim multiplerank updatedownd method nearli oper count rank1 updatedownd method optim oper count multiplerank modif 17 r approxim minimum degre order algorithm vector multiprocessor multifront code spool objectori spars matrix librari choleski downdat algorithm systol simd architectur sparspak waterloo spars matrix packag introduct algorithm column approxim minimum degre order algorithm column approxim minimum degre order algorithm modifi spars choleski factor philadelphia siam public set level3 basic linear algebra subprogram distribut mathemat softwar via electron mail multifront solut ind comput solut larg spars posit de data structur spars qr lu factor spars matric matlab design implement method modifi matrix factor updat invers matrix approxim minimum degre column order algorithm role elimin tree spars factor supernod choleski factor algorithm sharedmemori multiprocessor new york tr ctr w hager dual activ set algorithm applic linear program comput optim applic v21 n3 p263275 march 2002 ove edlund softwar packag spars orthogon factor updat acm transact mathemat softwar tom v28 n4 p448482 decemb 2002 matin bergounioux karl kunisch primaldu strategi stateconstrain optim control problem comput optim applic v22 n2 p193224 juli 2002 nichola gould jennif scott yifan hu numer evalu spars direct solver solut larg spars symmetr linear system equat acm transact mathemat softwar tom v33 n2 p10e june 2007