rel debug applic develop larg numer model larg scientif code rare static object develop often face tediou task account discrep new old version paper describ new techniqu call rel debug address problem autom process compar modifi code correct refer code examin util rel debug techniqu appli rel debugg call guard rang debug problem larg atmospher circul model experi confirm effect approach use guard abl valid new sequenti version atmospher model identifi sourc signific discrep parallel version short period time b introduct larg scientif code constantli evolv refin understand physic phenomena result chang physic improv numer method result chang solut techniqu develop comput architectur result new algorithm unfortun evolutionari process often introduc subtl error extrem difficult find consequ scientif programm spend mani hour day week labori compar execut two almost ident code seek identifi sourc small discrep debugg assist locat program error tool allow user investig execut state applic program exampl examin state program variabl 11 12 13 17 signific recent extens includ graphic user interfac improv eas use data visual facil aid interpret larg complex data structur concept process group aid manag mani independ thread parallel machin support parallel distribut debug 2 8 9 11 14 tradit debugg prove invalu develop new program howev directli address problem maintain extend exist comput program convert softwar one machin languag anoth programm want examin new version exist program isol instead want compar execut execut old refer program assum correct act refer work version assist locat section code modifi program introduc incorrect valu exist techniqu compar execut two program version tediou error prone limit scope exampl programm may invok two program separ debugg manual set breakpoint run program visual compar result program state advanc approach insert output statement program compar output use file comparison program 6 approach also limit requir huge amount disk storag program output involv modif program easili extend take account data type exampl float point number compar program compar file charact charact may suffici flexibl paper describ new debug paradigm call rel debug address difficulti key idea rel debug error new version program locat autom runtim comparison intern state new refer version support appropri tool approach requir modif user program perform comparison fli without requir disk storag comparison take account differ data represent two pro gram make possibl new refer version run differ machin written differ languag latter featur particularli import supercomput applic exampl port vector code parallel comput addit introduc rel debug paper describ particular instanti paradigmth rel debugg guardand present result experiment studi guard appli larg scientif code guard use machin independ debug interfac support rel debug heterogen multilanguag environ experiment studi involv mesoscal atmospher circul model call mm5 demonstr power guard use exist sequenti version account subtl numer differencess parallel version rel debug tradit debugg allow user control program examin state point execut user set breakpoint code interact examin program variabl verifi variabl expect valu erron valu trace erron code use inform program data flow rel debug differ tradit debug two import respect first program variabl compar user expect variabl anoth refer program known correct second refer program avail comput correct valu comparison process autom henc rel debug process proce follow user first formul set assert key data structur refer develop version assert specifi locat data structur ident violat assert indic error rel debugg respons manag execut two program version valid suppli assert compar data structur report differ differ report user proce isol erron code repeatedli refin assert reinvok rel debugg erron region small enough tradit debug techniqu use correct develop version thu rel debugg provid quick effect way locat problem develop version rel debugg provid function tradit debugg includ command program control state access breakpoint howev heart rel debugg set new command avail convent debugg command support rel debug paradigm introduc briefli describ rel debugg refer program develop program comput comput c figur 1 rel debug detail next section discuss guard refer develop version program execut concurr rel debugg must capabl handl two program time figur 1 use rel debugg support debug program written differ program languag execut differ comput heterogen network make possibl use rel debugg port program one languag comput anoth rel debugg check usersuppli assert compar data structur refer develop version perform necessari transform differ intern data represent differ comput differ languag perform com parison debugg must take account differ data type allow issu inexact equal float point number differ dynam pointer valu violat assert report user number approach possibl report differ data structur rang text advanc data visual techniqu differ numer valu differ print differ numer visual techniqu requir present meaning way 3 guard rel debugg guard rel debugg provid standard debug command start process execu tion set breakpoint examin process state main power novelti guard howev come special command support rel debug command broadli broken two group process control data comparison 31 process control guard command use symbol name refer process name assign guard launch new process attach exist one guard handl arbitrari number process concurr limit oper system restrict launch use invok command follow syntax invok processnam command machinenam usernam process name guard variabl use identifi process command specifi command line program option machin name user name make possibl run code remot system anoth user case guard creat attach remot process anoth comput system abil execut refer develop version program differ system elimin error introduc move refer code target system process creat invok remain suspend execut resum verifi command take list process name argument execut continu process termin encount breakpoint assert 32 data comparison guard support two differ approach comparison program execut procedur approach declar approach describ procedur approach first basic command procedur rel debug compar follow syntax compar process1variable1 process2variable2 command travers two name data structur variabl 1 variabl 2 two name process compar correspond data element take account data type user specifi toler valu comparison case differ report two correspond valu differ toler array comparison compar interpret array indic accord sourc languag enabl comparison multidimension array process whose sourc languag use differ layout row column fortran c current guard support comparison elementari variabl array support complic data structur record dynam data structur plan futur use compar user must set breakpoint process run program issu compar command program reach breakpoint procedur tediou error prone especi compar valu within loop elimin labori procedur guard provid declar rel debug assert assert simplifi debug process autom set breakpoint comparison data structur assert specifi assert command follow syntax assert ep type valu file filenam command contain two tupl process identifi variabl name sourc file name line number guard plant breakpoint two process specifi line number store assert inform intern tabl breakpoint encount tabl search match assert two data structur retriev compar differ execut resum differ detect guard return command line enabl use command print compar etc examin process state option field assert make possibl set toler comparison structur individu assert ep paramet specifi file output differ file paramet data produc latter option use input visual program detail explor differ also possibl set global valu toler output file overridden use ep file paramet particular assert 321 subarray express index permut default guard compar element array data structur howev mani case desir consid subsect array exampl compar sequenti refer code parallel implement often case addit array row column ad parallel code facilit commun boundari valu guard provid subarray express allow user make assert rectangular subarray follow exampl compar one array subarray size larger data structur guard also support permut array indic featur cater case data structur compar equival order indic differ follow syntax specifi second array use index order invert rel first array featur prove valuabl compar version code optim vector architectur optim risc one case inner vector loop often move outer loop improv cach perform 322 visual differ guard support three approach report differ text bitmap advanc visual techniqu text output simplest actual valu differ print standard output second approach suit array comparison text output may exc sive case two valu print maximum differ correspond array element total cumul differ element inform report rectangular bitmap display screen bitmap white pixel denot valu black pixel denot valu differ simpl array visual particularli use detect erron loop bound address express type error tend gener regular pattern display array two indic fold onto two dimens use number standard techniqu power techniqu support guard involv use commerci data explor visual softwar ibm data explor dx complet set differ save file use paramet assert command valu file display use dx use advanc visual techniqu well suit display differ array two dimens anim use convey develop differ two program execut 33 underli guard technolog space permit detail descript guard implement howev provid relev detail guard implement platform call dynascop provid interfac build debugg 16 interfac contain oper process control state access breakpoint handl dynascop henc guard machin independ debug interfac provid debug server 15 debug server associ execut program server execut separ process part program respons receiv execut debug request guard commun server guard perform tcpip guard implement term dynascop mechan guard port without modif comput platform support dynascop current debug server implement sun silicon graphic ibm rs6000 next com puter implement addit architectur progress addit support remot debug allow guard compar program execut differ machin exampl success run guard across internet guard execut silicon graphic comput australia two program compar run sun comput europ next comput usa 4 mm5 mesoscal weather model section describ mesoscal model call mm5 use experi mm5 origin develop nation center atmospher research sinc modifi port parallel platform argonn nation laboratori parallel version code call mpmm written use portabl parallel librari whilst similar mm5 function much structur alter allow parallel comput perform key data structur alter allow data decomposit distribut memori machin 41 structur mm5 penn statencar mesoscal model limitedarea primit equat model design simul mesoalpha scale 2002000 km mesobeta scale 20200 km atmospher circul system 1 7 model may run resolut low 1 km domain uniform rectangular grid repres threedimension region atmospher horizont coordin system equal space geograph model use arakawa grid scheme vertic coordin system oe surfac layer distribut close nearer surfac 23 layer current model use version nonhydrostat atmospher dynam 4 fourthord finit differ scheme 3 split semiimplicit scheme use resolv acoust wave physic includ blackadar highresolut planetari boundari layer scheme grell cumulu scheme explicit moistur treatment mixedphas process ice shallow convect dri convect adjust dudhia long shortwav radiat scheme 7 mm5 tradit vector code written almost entir standard fortran 77 howev pointer use keep track differ version model data structur correspond differ nest level logic code thought invok physic routin set independ vertic column nevertheless maximum vector code structur longitud loop innermost 42 structur mpmm mpmm version mm5 design exploit scalabl parallel comput 5 10 intend function ident mm5 yield result structur quit differ order execut effici parallel comput two signific concern aris move vector code mm5 scalabl parallel comput singl processor perform load balanc mpmm structur address issu mm5 code restructur obtain columncal form permit model call vertic model column portabl runtim system librari rsl use invok columncal model column approach facilit load balanc easi move individu column processor respons chang load distribut figur 2 also result better cach util column process physic processor boundari figur 2 load balanc mpmm figur show situat column migrat compens load imbal line indic data depend column figur 3 illustr mpmm code structur notic call rsl routin use perform comput exchang data requir finit differ stencil commun nest subdomain result code perform well scalabl parallel comput achiev exampl 115 gflop 64processor ibm sp2 power 1 processor 91 91 23 domain summari mm5 mpmm two complex numer code function equival differ structur toplevel code structur loop nest array structur quit differ differ render comparison two model nontrivi exercis 5 debug experi section describ experi perform use guard mm5 first describ experi guard use determin two sequenti version mm5 thought implement differ dynam fact provid ident result second report experi guard use investig account discrep correct sequenti version mm5 singl process parallel version task particularli challeng differ data code structur c comput coars domain call rslexchstencil domain1 stena call rslcomputecel domain1 solvea call rslexchstencil domain1 stenb call rslcomputecel domain1 solveb c forc nest boundari call rslexchstencil domain1 steninterp call rslbcast domain1 domain2 mask c comput nest domain call rslexchstencil domain2 stena call rslcomputecel domain2 solvea etc c forc cd nest call rslmerg domain1 domain2 mask comput domain broadcast cd associ cell nest merg nest back onto associ cell cd top level parallel model use rsl figur 3 top level parallel driver mm5 time step nest interact 51 compar sequenti code first attempt use guard identifi previous unsolv problem compar two version sequenti mm5 code first version unix code produc argonn origin ncar cray code second code produc ncar incorpor refin version number dynam physic routin two code suppos function equival expect bitforbit correspond task quantifi discrep two model isol sourc discrep proceed follow guard configur compar number princip mm5 data array initi ran model step small toler valu error report error zero indic code produc exactli result surpris guard indic two model provid bitforbit ident result although simpl experi provid encourag inform regard guard capabl first confirm guard abil deal larg complex code mm5 30000 line length data structur oper also larg second eas could perform comparison look tolerancebas differ nonident valu impress third comput overhead use guard prove expect minim rel execut time numer model examin final experi perform one author prior figur 4 lowest layer temperatur tendenc field comput hirpbl left right modifi hirpbl appli 13 iter column knowledg structur oper mm5 requir 1 hour time initi examin code specif assert result deliv 52 compar parallel sequenti code second experi report paper use guard compar sequenti mm5 singleprocess implement parallel mpmm preced case start assumpt code incorrect challeng valid assumpt determin sourc discrep preliminari set assert appli major data structur show number dif ferenc differ initi small grew slowli visual show signific spatial structur suggest due sole float point round incorpor assert allow us identifi planetari boundari layer scheme subroutin hirpbl sourc least one error assert appli input argument routin show minor differ concentr around boundari grid assert appli output argument show larger widespread differ figur 4 local error hirpbl routin switch manual code inspect soon identifi sourc discrep briefli problem turn differ way serial parallel model determin number minor loop iter requir vertic column air grid point given point number iter vari minimum 2 maximum 13 problem differ subject terrain condit atmospher maximum vector sequenti code first determin maximum number minor iter entir northsouth strip perform number iter column strip appli strategi parallel code would introduc unnecessari commun determin maximum number iter work henc parallel code perform requir number iter column suspect differ behavior sourc problem modifi sequenti parallel code perform 13 iter column comparison modifi code use guard show discrep interior grid disappear figur 4 result led us conclud observ discrep reflect error parallel code rather consequ known allow differ model code modif hirpbl remov differ two model diverg remain almost exclus around second row column boundari also small secondari discrep near northern boundari time progress influenc diverg spread predict fashion magnitud remain small believ diverg reflect two addit error yet unaccount summari experi guard allow us first account one signific discrep sequenti parallel code second identifi two differ locat investig 53 guard extens second experi also serv motiv futur extens guard debugg note mm5 mpmm differ code data structur guard abl deal differ data layout quit natur use array index permut subarray express howev one aspect code caus difficulti mm5 tend appli code block entir row data grid proceed next code block contrast mpmm tend invok much larger code block one grid point time consequ differ structur becom difficult compar array valu arbitrari point time follow simplifi exampl show mm5 mpmm 1 compar x i1nlon i1nlon enddo 2 compar x i1nlon i1nlon enddo enddo 3 compar x code fragment left mm5like structur simplic code block singl assign code right mpmmlike structur code block case consist three assign observ array x incorrect execut code want determin two assign x introduc error case first assign turn culprit henc want compar valu x code fragment assign three comparison point mark first third comparison perform easili second mpmmlike structur first assign singl element alway follow second assign element entir array x never state first assign appli element second current mpmm program code modifi store intermedi valu temporari array use comparison end first loop mm5 extens guard automat handl temporari array plan futur 6 conclus rel debug new debug paradigm applic undergo evolutionari chang guard debugg support paradigm key idea provid support automat comparison program state state refer program known correct rel debug appear particularli use scientif comput context complex scientif model frequent need adapt exist model incorpor new physic algorithm comput techniqu appli guard larg scientif code mm5 mesoscal atmospher model obtain satisfactori result abl use guard verifi two version sequenti mm5 function equival isol discrep sequenti parallel version mm5 current work number extens guard one import direct significantli increas util support debug parallel program anoth direct motiv mm5 experi describ paper provid support flexibl comparison code differ control structur acknowledg develop mpmm support part usaf epa grate bill kuo jimi dudhia georg grell make mm5 avail us experiment studi perform ibm sp2 argonn nation laboratori ibm sp2 queensland parallel supercomput facil also express gratitud andrew lewi assist data visual develop guard support part australian research council ibm australia paper report collabor project griffith univers argonn nation laboratori guard develop griffith univers 1994 exper report paper mostli perform argonn march 1995 work allow us demonstr util guard larg scientif code motiv numer enhanc guard r summari workshop ncar commun climateforecast model effici debug primit multiprocessor econom timedifferenc system numer weather predict nonhydrostat version penn statencar mesoscal model valid test simul atlant cyclon cold front mpmm massiv parallel mesoscal model descript fifth gener penn statencar mesoscal model mm5 debugg parallel process debug concurr program parallel implemen tation provid process visual debug environ dataflow approach eventbas debug ging debug tool high level languag design implement dynascop procedur interfac program direct interact sourcelevel debug optim program tr debugg parallel process effici debug primit multiprocessor debug concurr program dataflow approach eventbas debug applicationsdriven parallel io procedur interfac program direct linkedlist visual debug ctr david abramson greg watson debug scientif applic net framework futur gener comput system v19 n5 p665678 juli