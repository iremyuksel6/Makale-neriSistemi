control applic grain size network workstat import challeng area distribut comput autom select paramet control distribut comput performancecrit paramet grain size comput ie interv success synchron point applic paramet hard select sinc depend compil time loop structur data depend comput complex run time compon speed comput node network network workstat share user runtim paramet chang time result also necessari consid interact dynam load balanc need achiev good perform environ paper present method automat select grain size comput consist nest loop method base close cooper compil runtim system evalu method use simul measur implement nectar multicomput b introduct high avail rel low cost network workstat often consid platform applic use releg dedic multiprocessor parallel languag parallel compil simplifi program share distribut memori multiprocessor howev modif tool need target network workstat independ natur machin higher variabl cost commun network research investig issu context parallel compil gener parallel compil assum specif homogen target system dedic applic alloc amount work processor network worksta tion processor may heterogen may perform vari run time due compet user differ type network differ load may encount result static equal distribut work result good util avail resourc address problem design system support dynam load balanc parallel code period adjust amount work alloc processor run time 11 12 load balanc point system attempt alloc work unit number proport rel process capabl processor grain size applicationth amount comput success synchron pointsi import perform paramet parallel applic affect commun cost load balanc effect commun cost load balanc depend configur dynam aspect system appropri grain size select use compiletim inform cooper compil runtim system necessari select control grain size applic distribut network paper investig impact grain size parallel commun cost load balanc network workstat present method select control grain size nest loop next section outlin parallel compil model section 3 describ paramet must consid select appropri grain size loop transform use control grain size section 4 5 describ appropri grain size determin possibl control differ type synchron analysi simul use predict perform differ grain size use simplifi model estim comput commun cost summar section 6 parallel model compil model comput parallel distribut loop iter slice aggreg data structur use owner comput rule data slice modifi iter assign processor iter compil modifi loop bound sequenti program processor execut iter assign aggreg data structur may distribut along one dimens although paper discuss applic distribut singl dimens load balanc perform adjust number iter data slice alloc processor goal parallel minim execut time elaps parallel applic minimum execut time attain applic use comput resourc avail product dedic homogen set processor use tradit effici measur 8 9 evalu product use resourc product avail speedup sequenti elaps 1 p number processor sequenti time sequenti measur dedic processor paper experi perform assum homogen set pro cessor case compet process use process resourc experi compet load modifi effici formul account resourc use compet process product avail sequenti 2 compet amount resourc ie cpu time use compet process processor 3 grain size section discuss factor influenc grain size grain size control grain size determin frequent execut synchron applic natur synchron determin easili grain size control 31 compil time control grain size synchron parallel applic result commun requir turn determin distribut loop iter depend loop structur origin sequenti code case amount comput synchron ie grain size chang control modifi loop structur parallel code greatest interest loop restructur transform strip mine 7 allow grain size parameter continuum grain size choic transform loop interchang 1 10 17 19 loop skew 16 19 also use modifi grain size applic difficult pa rameter basic techniqu manipul commun code loop split 7 messag aggreg 3 5 6 13 14 also necessari techniqu effect given applic commun pattern parallel code determin transform use control grain size dynam natur comput commun cost network workstat actual select paramet transform requir runtim inform 32 applic requir commun simplest loop nest parallel requir com munic matrix multipl applic interact processor grain size issu dedic machin howev load balanc ad applic commun need load balanc determin grain size ie load balanc frequenc determin frequenc commun select load balanc frequenc base sever factor includ overhead interact applic process load balanc overhead work movement latter typic limit load balanc frequenc practic commun infrequ grain size perform con cern load balanc frequenc select describ detail siegel 11 33 applic commun applic commun distinguish two type synchron commun result pipelin doacross loop caus unidirect synchron processor commun outsid distribut loop may caus bidirect synchron processor comput commun comput unidirect synchron bidirect synchron figur 1 commun pattern observ one slave processor commun pattern determin synchron type model applic altern comput com municationsynchron phase case unidirect synchron pipelin applic data commun one direct processor commun phase applic commun enforc partial order comput processor earlier pipelin must gener data later processor proceed processor earli pipelin work ahead processor later pipelin much buffer intermedi data processor allow often allow comput occur parallel commun take advantag flexibl partial order control grain size bidirect case commun phase end messag base data sent phase receiv figur 1b permit much overlap comput commun processor involv communica tion processor involv synchron ie none processor exit synchron point processor reach bidirect synchron barrier synchron barrier synchron impos total order comput phase make control grain size difficult dynam load balanc even singl assign statement involv distribut data element result barrier synchron global commun may need identifi processor own sourc destin element analysi treat bidirect synchron barrier synchron even involv subset processor unidirect synchron applic loop carri depend ie doacross loop parallel obtain pipelin multipl instanc distribut loop two main factor influenc effici parallel pipelin time spent commun intermedi valu due loop carri depend time spent fill drain pipelin given applic minimum execut time attain grain size compromis commun overhead degre paral lelism begin section discuss grain size control applic doacross loop discuss appropri grain size select 41 control grain size run time applic doacross loop grain size parameter use techniqu strip mine 7 strip mine replac singl loop two nest loop commun move inner loop messag aggreg 3 5 6 13 14 use combin messag common destin number iter result inner loop block size comput figur 2 demonstr use techniqu success overrelax sor exampl control grain size run time compil strip mine loop block size variabl eg blocksiz figur 2c set run time grain block size relat follow iter iter longest execut time local portion distribut doacross loop processor loop tile 14 15 18 complic approach combin strip mine loop interchang usual local memori refer result inner loop loop tile also use control grain size commun overhead manner similar strip mine 14 howev compar strip mine tile significantli complic data manag system load balanc address paper 42 grain size select figur 3 outlin model pipelin comput distribut loop n iter distribut across p processor distribut sequenti code pid pid pcount1 receiveright blastcol0 n pid pid pcount1 sendright blastcol1i 1 pipelin pid pid pcount1 receiveright blastcol0 n pid pid pcount1 sendright blastcol1i0blocks blocksiz c block pipelin figur 2 parallel option sor simplifi version error comput shown code portion affect strip mine messag aggreg shade strip mine loop total iter divid block size block block size b pipelin allow block differ processor execut parallel stagger fashion due depend applic processor block commun phase drain phase fill phase figur 3 pipelin execut distribut loop show paramet model execut time distribut loop n iter pipelin loop enclos distribut loop iter pipelin applic tradeoff parallel commun cost must consid select appropri block size strip mine loop commun cost minim block size made larg possibl howev due time requir fill drain pipelin increas block size reduc parallel applic eg compar figur 4b versu 4a sor exampl figur 2 two conflict effect model estim total comput time applic use model select block size strip mine loop maxim perform fill drain fill drain p1222222222 pipelin b block pipelin figur 4 pipelin execut singl relax phase sor exampl figur 2 421 pipelin fill drain time figur 3 observ elaps time applic ignor commun cost time time execut one block block given upper bound effici homogen environ ignor commun cost 422 commun cost commun boundari valu occur pipelin phase sinc comput phase phase thu total commun cost shift cost singl commun phase commun phase model follow incr theta element fix fix overhead send messag pro cessor incr cost per data element sent element number data element must sent commun point equal block size b fix incr estim measur commun costsbi measur time pass messag processorswhen applic start 11 measur repeat period eg execut pipelin loop take account chang condit network 423 select optim block size model total execut time creat combin equat 5 8 shift replac use equat 9 block replac use equat 6 sequenti estim extrapol measur startup time sever iter copi loop bodi result represent total one unknown number block sequenti wish select minim total execut time valu minim total comput set deriv total respect equal zero dt total solv shortest execut time highest effici attain fix known block size optim grain size calcul use equat 4 optim comput applic startup time use known valu p estim sequenti fix incr determin measur execut time copi small portion comput code collect measur gener compil ie without intervent programm initi measur typic take sever hundr millisecond throughout execut estim updat use new measur time thu allow applic adjust chang processor network updat estim take less time make initi estim measur actual comput use 424 relat work fortran compil perform similar analysi select appropri block size pipelin comput 6 ap proach optim block size determin set deriv model execut time applic equal zero howev unlik approach estim comput commun time program determin static perform estim run train set kernel routin character cost system 4 static perform estim match comput given applic kernel train set approach requir separ character machin configur might use run applic approach flexibl sinc reli runtim measur automat adjust specif applic natur comput input size machin configur commun cost number processor processor speed howev delay character cost run time add character time cost execut applic 43 evalu implement sor exampl figur 2c nectar system 2 highspe fiber optic network develop carnegi mellon univers connect sever sun workstat use implement evalu accuraci model effect grain size adjust system applic characterist 431 model evalu figur 5 compar effici parallel sor exampl predict model measur effici nectar 4 slave processor use differ block size graph peak effici predict modelth optim block sizei mark vertic version sequenti fix incr ad delay 8479 sec 1716 msec 48sec ad delay 8497 sec 1663 msec 48sec c 50 msec ad delay 8500 sec 1524 msec 48sec tabl 1 measur valu use calcul optim grain size figur 5 line tabl 1 show measur time use comput optim block size figur 5 time use comput effici includ time spent character system comput optim block size see figur 5 close match model measur valu two curv reach maximum block size ie model fairli accur predict optim block size show execut model respond differ commun cost experi artifici delay ad commun function result shown figur 5b 5c observ good fit model measur valu ie model adjust well differ network chang network condit sinc valu sequenti fix incr estim import question sensit result error estim curv figur 5 rel flat around maxi mum indic chang optim block size much factor two either direct reduc effici much addit given shape curv better select block size high low estim sequenti base measur sever iter pipelin loop consist sever measur eg measur present tabl 1 quit close measur actual execut time one dedic processor ie estim sequenti accur implemen tation estim sequenti dedic system take smallest sever measur execut time iter loop actual execut compet load one processor actual grain size distribut applic larger expect base estim gener expect grain size variat small enough eg within factor two effici remain near maximum valu addit take account chang load strip mine loop execut multipl time estim sequenti updat execut loop base measur includ effect compet load commun cost variabl difficult measur predict effici comput optim block size use conserv estim commun cost 0103050709effici blocksiz iter measur predict upper bound ad delays0103050709effici blocksiz iter measur predict upper bound millisecond delay ad message0103050709effici blocksiz iter measur predict upper bound c 50 millisecond delay ad messag figur 5 effici pipelin loop sor exampl 1000x1000 function block size time start first commun end last commun commun phase estim tend increas fix reduc incr increas optim grain size predict although cost estim may includ time spent comput less conserv estim measur commun time point view singl processor could result shift optim grain size predict left slope effici curv much greater 432 optim grain size vs fix grain size show effect consid commun overhead parallel select grain size compar perform version sor fix grain size 150 millisecond perform version automat select optim grain size select use method describ previou section figur 6 show effici measur taken nectar system homogen dedic processor two differ problem size effici fix grain size approxim automat select grain size number processor small number processor increas total execut time problem decreas increas effect fill drain pipelin automat select grain size take commun cost parallel account result higher efficiency0103050709effici processor sequenti automat select fix 15 quanta0103050709effici processor sequenti automat select fix 15 quanta 1000 theta 1000 40 iter b 2000 theta 2000 10 iter figur parallel version sor without load balanc dedic homogen environ fix grain size vs automat select grain size 44 effect compet load compet load ad one processor execut pipelin applic intermedi result delay processor follow processor pipelin bubbl inact idl wait pass pipelin time compet load given cpu figur 7a dynam load balanc keep load balanc period redistribut work proport process capabl processor siegel 11 exam ple use measur comput rate specif applic loop iter comput per unit timeto character avail capabl processor load balanc processor compet load alloc less work alloc cpu gener enough data keep processor follow busi compet load control cpu figur 7b commun requir applic align processor effici affect advers compet load pipelin execut continu without stall true grain size long enough buffer space store intermedi data confirm grain size littl effect effici pipelin applic load balanc environ compet load simul interact schedul process oper system commun slave processor model system assum oper system alloc equal portion cpu time run process roundrobin fashion fix time quantum 100 millisecond simul consid commun cost model time spent fill drain pipelin figur 8 show parallel effici result simul differ grain size differ condit environ simul effici stay close predict upper bound solid line comput use equat 7 regardless grain size system compet load effici sometim exce predict upper bound length block vari pipelin stage phase differ start compet load start pipelin stage chang may slight degrad effici notic figur 8d due time spent slave align earli stage pipelin real system process schedul complic roundrobin compet load vari cours applic slave may realign ever natur tendenc commun align processor prevent effici affect advers time msec cpu alloc compet process cpu alloc applic process applic process wait data commun point equal distribut b load balanc figur 7 pipelin execut compet load first processor grain size equal distribut 70 millisecond round robin schedul 100 millisecond time quantum ignor commun cost 5 bidirect barrier synchron barrier synchron may caus reduct oper distribut loop shift data processor assign statement involv data multipl processor bidirect synchron grain size chang use transform loop split 7 loop interchang 1 5 10 17 19 loop skew 16 19 transform difficult parameter continuum grain size case effici grain size quanta upper bound simulated0103050709effici grain size quanta upper bound simul compet load p0 b 2 compet load p00103050709effici grain size quanta upper bound simulated0103050709effici grain size quanta upper bound simul c 3 compet load p0 compet load 1 p0 2 p1 3 p2 4 p3 figur 8 parallel effici determin simul pipelin execut 4 processor system upper bound includ graph sequenti execut time simul problem 200 time quanta unidirect synchron possibl possibl gener sever version code select appropri run time 17 provid limit runtim control grain size limit investig option modifi grain size problem bidirect synchroniza tion analyz overhead bidirect synchron examin effect bidirect synchron program perform presenc compet load 51 synchron overhead figur 9 show basic structur parallel code barrier synchron barrier synchron critic path applic impos total order processor thu commun cost synchron add parallel overhead program also load imbal synchron processor finish comput first remain idl processor finish reduc parallel effici homogen system model total execut time program follow theta iter theta n total number iter distribut loop number time distribut loop execut sequenti version program execut time approxim iter theta thu effici parallel dedic homogen system sequenti iter theta iter theta iter iter effici formul show parallel overhead due barrier ie p theta barrier term denomin effici determin cost barrier rel amount comput barrier effici improv reduc cost barrier compil programm restructur program model differ 52 effect compet load multipl processor compet load schedul process differ processor may synchron applic may inact differ processor differ time barrier synchron elaps time worst time processor barrier caus comput iter end global synchron end figur 9 parallel version doall loop follow global oper skew execut time accumul increas total execut time even work alloc processor proport avail resourc system compet load applic may abl use share process resourc product due interact grain size schedul process oper system effect util resourc comput assign processor period barrier synchron must correspond amount cpu alloc processor period section identifi grain size make match like 521 model evalu effect barrier synchron perform presenc compet load model schedul process use roundrobin schedul model describ section 44 barrier work follow applic process enter barrier complet comput phase none process may exit barrier process enter process must activ ie control cpu enter leav barrier process must activ time model appli system commun buffer figur 11 show time line four processor system singl compet load one processor differ work assign grain size time line identifi differ cpu state work wait inact respect load balanc ap plicat show interact barrier synchron figur thick horizont line indic time applic process enter barrier synchron arrow indic time process exit barrier figur 10 grain size case without load balanc figur 10a 07 time quanta load balanc figur 10b grain size load processor p0 04 quanta dedic processor p1 p2 p3 grain size 08 quanta load balanc still quit bit time spent wait synchron point execut time reduc much rel case without load balanc load balanc increas effici 609 765 howev grain size balanc closer multipl time quantum result higher util avail cpu time occasion small correct ie small wait period need keep synchron schedul phase figur 11 grain size load balanc closer multipl time quantum 08 quanta p0 16 processor time reduct load balanc much greater figur 10 grain size 04 time quanta processor 0 effici increas 589 without load balanc 946 load balanc better cpu util also result increas grain size schedul compet process caus variat execut time consecut comput phase caus temporari skew processor result idl time variat increas load processor signific variat decreas grain size increas grain size control grain size larg possibleat least one time quantum load processor balancingshould select minim effect variat 11 522 simul show effect vari grain size perform simul interact differ grain size schedul process oper system simul model interact grain size schedul manner use figur 10 11 run 1000 synchron figur show parallel effici attain differ grain size differ load condit simul result confirm hypothes effici increas grain size monoton peak 100 effici occur grain size schedul phase eg grain size multipl 175 quanta figur 12a 25 12b 325 12c 1925 12d 11 simul result also show sensit effici fluctuat grain size decreas grain size increas actual system schedul algorithm complic roundrobin use normal system activ may caus variat schedul practic control grain size accur desir rang grain size effici fluctuat greatli fore grain size larg possibl applic barrier synchron achiev higher effici less sensit chang compet load time cpu alloc compet process cpu alloc applic process applic process wait data commun point equal distribut b load balanc figur 10 applic bidirect synchron execut compet load first processor grain size equal distribut case 70 millisecond round robin schedul 100 millisecond time quantum ignor commun cost 6 conclus select optim grain size applic distribut network workstat requir compiletim runtim inform present evalu method automat select grain size method base close cooper compil runtim system applic unidirect synchron ie doacross loop show grain size con time cpu alloc compet process cpu alloc applic process applic process wait data commun point equal distribut b load balanc figur 11 applic bidirect synchron execut compet load first processor grain size equal distribut case 140 millisecond roundrobin schedul 100 millisecond time quantum ignor commun cost troll show select optim grain size consid commun overhead parallel simul measur verifi effect method select optim grain size simul show applic unidirect synchron interact grain size schedul oper system significantli affect perform therefor interact need consid 0103050709effici grain size quanta0103050709effici grain size quanta compet load p0 b 2 compet load p00103050709effici grain size quanta0103050709effici grain size quanta c 3 compet load p0 compet load 1 p0 2 p1 3 p2 4 p3 figur 12 parallel effici vari grain size 4 processor system simul result roundrobin schedul 100 millisecond time quantum ignor commun cost select grain size applic bidirect synchron grain size difficult control simul show reduc undesir interact bidirect synchron schedul oper system grain size made larg possibl r automat loop interchang design nec tar network backplan heterogen multicomput compil program distributedmemori multiprocessor overview fortran program system compil fortran mimd distributedmemori machin evalu compil optim fortran mimd distributedmemori machin program improv sourcetosourc transform dynam schedul method irregular parallel program advanc compil optim supercomput automat gener parallel program dynam load balanc network workstat automat gener parallel program dynam load balanc techniqu design effici parallel pro gram reduc data commun overhead doacross loop nest loop transform theori algorithm maxim parallel loop skew wavefront method revi ite vector optim vs vector iter space tile massiv parallel program restruc ture tr advanc compil optim supercomput loop skew wavefront method revisit vector optim vs vector design nectar network backplan heterogen multicomput compil fortran mimd distributedmemori machin dynam schedul method irregular parallel program evalu compil optim fortran mimd distribut memori machin reduc data commun overhead doacross loop nest automat gener parallel program dynam load balanc network workstat program improv sourcetosourc transform automat loop interchang loop transform theori algorithm maxim parallel overview fortran program system ctr peter steenkist networkbas multicomput practic supercomput architectur ieee transact parallel distribut system v7 n8 p861875 august 1996