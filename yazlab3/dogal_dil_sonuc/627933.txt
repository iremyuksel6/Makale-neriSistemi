declust loadbalanc method parallel geograph inform system abstractdeclust loadbalanc import issu design highperform geograph inform system hpgi central compon mani interact applicationssuch realtim terrain visual current literatur provid effici method declust spatial pointdata howev littl work toward develop effici declust method collect extend object like chain lineseg polygon paper focu datapartit approach parallel gi oper provid framework declust collect extend spatial object identifi follow key issu 1 workload metric 2 spatialext workload 3 distribut workload spatialext 4 declust method identifi experiment evalu altern issu addit also provid framework dynam balanc load differ processor experiment evalu propos declust loadbalanc method distribut memori mimd machin cray t3d experiment result show spatialext workload metric import issu develop declust method experi also show replic data usual need facilit dynam loadbalanc sinc cost local process often less cost data transfer extend spatial object addit also show effect dynam loadbalanc techniqu improv use declust method determin subset spatial object transfer runtim b introduct high perform geograph inform system hpgi central compon mani interact applic like realtim terrain visual situat assess spatial decis make geograph inform system gi often contain larg amount geometr featur data eg locat elev soil type etc repres larg set point chain lineseg polygon data often access via rang queri mapoverlay queri exist sequenti method support gi oper meet realtim requir impos mani interact applic henc parallel gi essenti meet high perform requir sever realtim applic gi oper parallel either functionpartit 2 3 5 30 data partit 4 8 13 17 19 25 32 33 functionpartit use special data structur eg distribut data structur algorithm may differ sequenti counterpart datapartit techniqu divid data among differ processor independ execut sequenti algorithm processor datapartit turn achiev declust 11 27 spatial data static declust method fail equal distribut load among differ processor loadbal may improv redistribut part data idl processor use dynam loadbalanc dlb techniqu paper focu parallel rangequeri oper gi data use datapartit approach 11 applic domain realtim terrain visual realtim terrainvisu system environ let user navig interact threedimension comput gener geograph environ realtim like virtual environ 16 visual system 28 distribut interact simul system 1 type system three major compon interact 3d graphic gi figur 1 show differ compon terrain visual system typic flight simul hpgi compon system contain secondari storag unit store entir geograph databas main memori store data relat current locat simul graphic engin receiv spatial data hpgi compon transform data 3d object sent display unit user move terrain part map visibl user chang time graphic engin fed visibl subset spatial object given locat user viewport graphic engin transform user viewport rang queri send hpgi unit exampl figur 2 show polygon map rang queri polygon map shown dot line rang queri repres rectangl result rang queri shown solid line hpgi unit retriev visibl subset spatial data main memori comput geometr intersect current viewport user send result back graphic engin frequenc oper depend speed user move terrain exampl terrain visual flight simul new rang queri may gener twice second leav less half second intersect comput typic map use applic contain ten thousand polygon ie million edg rangequeri size 2030 total map requir million intersectionpoint comput less half second order meet responsetim constraint hpgi often cach subset spatial data main memori mainmemori databas may turn queri secondarystorag databas get subset data cach frequenc oper small cach effect secondari storag main memori graphic analysi display 30sec feed back view rangequeri 2sec 8kmx8km set polygon secondari storag rang queri set polygon engin high perform gi compon databas databas figur 1 compon terrainvisu system figur 2 sampl polygon map rangequeri 12 problem formul rangequeri problem gi state follow given rectangular queri box b set sp extend spatial object eg polygon chain line segment result rang queri sp given set whereomega give geometr intersect two extend object call problem gisrangequeri problem gisrangequeri problem three main compon approxim filter polygon level ii intersect comput iii polygon result see 29 detail discuss sequenti algorithm note problem differ tradit rang queri object given rang retriev secondari memori disk main memori without clip object similar polygonclip problem 26 comput graphic exist sequenti solut 6 15 31 rangequeri problem alway directli use solut gisrangequeri problem due high perform requir mani applic exampl limit respons time ie half second shown figur 1 solv gisrangequeri problem allow process map 1500 polygon 100000 edg mani latest processor avail today like ibm rs6000590 dec alpha 150hz processor howev map use mani hpgi applic least order magnitud larger simpl map henc need consid parallel process deliv requir perform paper focu parallel gisrangequeri problem set processor meet high perform requir impos typic hpgi applic goal parallel achiev minimum possibl respons time set rang queri use data partit declust dynam loadbalanc parallel sequenti algorithm gisrangequeri problem figur 3 describ step scheme bound box initi broadcast processor processor execut sequenti gisrangequeri algorithm local set polygon process local data processor check load imbal seek work anoth processor yet finish work dlb method use transfer work processor runtim partit apprx filter comput apprx filter comput polygon result polygon result intersect comput intersect comput get next bbox figur 3 differ modul parallel formul 13 relat work contribut declust loadbalanc import issu parallel typic hpgi oper like rangequeri mapoverlay oper sever research use declust loadbalanc toward parallel tradit rangequeri problem kamel faloutso 22 use local loadbalancingbas data declust maxim throughput rang queri dataset consist twodimension rectangl zhou et al 33 describ mappingfunctionbas declust method parallel grid file context tradit rang queri brunetti et al 8 use rowwis divis twodimension regular grid parallel algorithm character terrain data armstrong et al 4 use rowwis partit 2d grid parallel algorithm determin spatial associ measur point data shown custom declust techniqu base spacedivis map function 9 33 proximitybas local loadbal 17 19 22 27 similar graphpartit 27 need effect partit spatial data case uniformli distribut point data shown static declust often adequ achiev good loadbal formal method 33 well experiment studi 4 8 33 howev effect declust set extend object receiv adequ attent literatur case extend spatial object staticdeclust method alon might enough achiev good loadbal case static partit dlb techniqu use wang 32 use dynam alloc work differ level eg polygon edg mapoverlay comput addit sever dynam loadbalanc method develop 12 20 23 25 loadbalanc differ applic datapartit mapoverlay 32 spatialjoin access method 18 19 relat work present paper declust dynam loadbalanc extend spatialdata receiv adequ attent literatur paper focu static datadeclust dynam loadbalanc method parallel gisrangequeri problem set extend object like lineseg polygon provid framework declust collect extend spatial object identifi follow issu workload metric ii spatial extent object workload iii distribut workload spatial extent object iv declust method addit also provid framework dynam loadbalanc gi oper identifi issu work transfer method ii identifi donor processor iii granular work transfer identifi experiment evalu altern issu rang queri oper use vector data killeen texa experi carri cray t3d distribut memori mimd machin consist decalpha 150hz processor interconnect 3d toru network show tradit declust method 27 multidimension point data need signific extens applic extend spatial data also show neither declust dynam loadbalanc alon suffici achiev good speedup beyond 8 proce sor static declust extend spatial data hard due highli nonuniform data distribut well great variat size extent spatial data experi show spatialext workload metric import measur develop declust method show data replic often need dynam loadbalanc cost local process usual less cost data transfer extend object addit experiment result also show effect dynam loadbalanc techniqu improv use declust method determin subset spatial object transfer runtim 14 scope outlin paper figur 1 show two type queri first queri retriev data secondari storag main memori second queri 8kmx8km retriev data main memori graphic engin paper focu latter type rangequeri data assum main memori sever techniqu like preprocess spatial data use reduc sequenti cost gisrangequeri problem cost rangequeri process also reduc note consecut rangequeri may spatial overlap previou rangequeri case new rang queri consid increment previou rang queri henc increment rang queri method use solv problem increment rangequeri express combin one smaller rangequeri gisrangequeri problem also solv use precomput result fine grid laid top data intersect spatial object grid cell comput store main memori sinc everi rangequeri combin grid cell intersect result gridcel make rangequeri retriev sent graphic engin hand case datapartit approach larg object may decompos smaller object improv loadbal among differ processor thu increas effici solut two approach result increas total work graphic engin process object amount time cost render graphic engin also increas increas number polygon addit decomposit object requir memori store object hand smaller piec merg singl object rangequeri oper merg result increas total work hpgi compon merg smaller object increas total work exampl figur 4 show differ combin partit polygon data smaller set combin group four type type divis data type ii divid set polygon subset polygon howev polygon treat atom unit subdivis polygon level allow contrast type iii divid area individu polygonsboundingbox among differ processor type iv scheme divid area edg individu polygon bound box potenti advantag type iii iv scheme type ii scheme possibl better loadbal less processor idl result reduc parallel comput time 32 howev note type iii iv scheme result either increas total work increas work polygon result option divid bound subset subset divis divid divid edg ivd iiia iiid ive ivc small box polygon small polygon subset edg ii iva iiic iiib ivb ivf option divid polygon data figur 4 altern polygonboundingbox divis among processor let tcomm responsetim overhead due addit commun cost increas cost polygon result polygon type iii iv scheme gain parallel comput time due improv loadbalanc bound differ ideal valu seq p actual tp valu achiev type ii scheme net gain respons time type iii iv scheme type ii scheme bound p scheme ii tseq gain posit polygons distribut extrem skew lead high load imbal type ii scheme even though techniqu potenti increas loadbal respons time gisrangequeri consid techniqu paper rest paper focu type ii scheme rest paper organ follow section 2 discuss issu declust extend spatial data section 3 present experiment result differ issu declust spatial data section 4 discuss dynam loadbalanc issu gi section 5 present experiment result dlb issu gi final section 6 present conclus futur work declust spatial data goal declust method partit data partit impos exactli load rang queri intuit polygon close scatter among differ processor rang queri everi processor equal amount work exampl consid raster represent set spatial vector object 2d plane suppos point raster represent associ workload vector object pass point consid distribut workload associ point exampl distribut might look like surfac shown figur 5 consid anoth distribut dp scale version distribut factor p suppos set declust p subset subset assign differ processor p subset workload distribut dp workload impos queri equal processor henc datapartit achiev goal optim declust p subset distribut d515 0102050150250distribut dp figur 5 exampl workload distribut p2 optim declust achiev case due nonuniform distribut variabl size polygon chain lineseg addit load impos polygon chain queri oper function size locat queri sinc locat queri known priori hard develop strategi optim queri gener exist algorithm achiev ideal declust 2d rangequeri 5 processor 33 even case possibl achiev ideal declust hard determin partit sinc declust problem nphard shown definit 1 optim version gisdeclust problem given set extend object p processor set n rangequeri partit set among p processor load processor balanc q q load object x 2 given rangequeri q given function f set nonneg integ definit 2 decis version gisdeclust problem given set extend object p processor set n queri partit set p subset theorem gisdeclust problem nphard proof reduc partit problem 14 gisdeclust problem instanc partit problem defin follow given finit set size sa 2 subset 0 sa 2 problem transform polynomi time instanc decis version gisdeclust problem henc conclud gisdeclust problem nphard 2 sinc declust problem nphard heurist method use practic declust extend spatial data section identifi issu declust set extend spatial object develop heurist method declust map extend object 21 issu declust spatialdata three major issu declust set extend spatial object workload metric spatialext workload loaddens spatialext workload metric load impos spatial object function shape extent object case point data load may uniform ie spatial point case chain lineseg load may function number edg case polygon load may function number edg andor area polygon exampl number edg increas work rang queri also increas due increas intersect point comput increas size result similarli increas area polygon number edg fix result rang queri intersect polygon case extend spatial object either area number edg actual intersect point queri boundari use estim workload denot loada note extend spatial data accur method estim amount work actual solv problem number edgespoint spatial object may accur reflect amount work requir object particular rang queri get rough estim work workload metric spatial extent workload spatial extent workload defin region ra space affect object ie queri q overlap ra work requir process q influenc object usual ra depend space occupi object howev often expens use exact geometri spatial object estim extent object thu approxim geometri consid estim spatial extent spatialext ra often approxim approxim point approxim box approxim n box exampl bba smallest rectangular box enclos object repres two corner function may defin figur 6 show exampl polygon differ approxim extent workload figur also show sampl rang queri dot line polygon approxim point shown middl polygon main drawback point approxim even though object region interest eg q 1 might still consid outsid point lie outsid region shown case polygon altern bound box approxim use shown figur 6 polygon b c e drawback approxim even though polygon region interest bound box might still region interest shown polygon e altern multipl bound box may use repres polygon shown polygon note even though greater number bound box give better represent spatial extent work also expens construct kind represent c queri q1 figur exampl approxim extent workload load densiti spatial extent case extend object distribut densiti workload spatial extent affect declust decis expens determin actual workload distribut approxim distribut uniform distribut may use instead actual distribut approxim distribut work determin consid multipl bound box divid region small cell count work cell exampl case polygon b shown figur 6 clip load denot clip loadb correspond queri q 1 shown dot line estim differ way assum workload distribut polygon uniform bound box polygon b comput clip load clip loadb areabbb theta loadb 4 note work estim may inaccur case exampl edgebas workload metric coupl assum uniform workload distribut overestim work requir polygon c rangequeri q 1 areabas workload metric coupl uniform workload distribut overestim work requir polygon e rangequeri q 1 22 declust method sinc declust problem nphard heurist method use declust spatial data describ three heurist method base idea spacepartit map local loadbal similaritygraph addit propos new popul distributionbas declust method declust spatial data simplic describ method polygon data appli extend spatial object well 221 spacepartit map function spacepartit mappingfunctionbas method provid map function domain data item set processor id exampl map function base hilbert spacefil curv 7 21 see 10 survey map function hilbert curv give total order point 2dimension space polygon declust use hilbert method follow let l set input object let l p order list polygon correspond hilbert order set let n number polygon list polygon list assign processor cyclic manner polygon list l p indic assign ith processor 222 local loadbal llb method local loadbalanc method 22 consid sampl window space base frequent rang queri tri equal distribut load window processor local loadbal method paramet window w follow step set polygon assign first p polygon p processor ii next polygon list consid load correspond window w processor select processor minimum load iii assign next polygon processor repeat step ii iii polygon assign step ii method processor minimum load select follow let clip loadp j w p j processor select processor k weightw minimum 223 similaritygraph method similaritygraph declust method 27 shown outperform method declust nonuniformli distribut data heurist method base maxcut graphpartit weight similaritygraph wsg wsg model data properti queri case llb method rectangular window w use sampl queri effici wsg construct wrt window w assign clip loadv w tv object v input experiment studi use increment maxcut partit 27 approach declust spatial data see appendix detail similaritygraph declust method appli extend spatialdata 224 popul distributionbas pdb method goal populationdistributionbas declust method achiev ident load distribut partit data discuss exampl populationdistributionbas method declust polygon data basic idea behind method partit data set group similar workload distribut entir space shown figur 5 workload distribut group entir space compar alloc new object group new object alloc group statist differ differ group minim howev track compar two distribut statist differ expens econom less accur method use approxim distribut instead actual workload distribut use pair discret 1d distribut approxim actual 2d distribut method use actual intersect point polygon grid consist vertic horizont scanlin impos top polygon data shown figur 7 assum scanlin parallel xaxi scanlin parallel yaxi let fx number intersect point line polygon input similarli let n number intersect point line without loss gener let polygon input distribut polygon among processor alloc first p polygon p processor polygon p assign ith processor next polygon pw determin distribut intersect point assign polygon plu current polygon scale distribut p let distribut basedistribut base distribut f w similar fx gy figur 7 distributionbas method base distribut contain intersect point polygon differ assign polygon pw p processor estim total popul mismatch due assign total popul mismatch assign estim sum squar differ distribut processor basedistribut select processor correspond minimum popul mismatch processor assign current polygon minim function assign polygon pw given min current polygon pw temporarili assign lth processor iter minim function f g distribut function correspond f g respect ith processor note f g contain intersect point polygon assign ith processor complex pdb method alloc 1 polygon innermost sum equat 5 take thetanm time sinc sum comput processor take thetap n doubl summat sinc p iter doubl sum ie p iter minim function take total thetap 2 n time brute forc implement method note two iter minim function four term innermost summat chang processor henc need comput entir sum iter minim function reus rest term previou iter henc first iter minim function iter take constant amount time reduc overal complex pdb method 3 experiment evalu declust issu compar perform differ altern issu declust extend spatial object rang map size differ number processor via experi carri cray t3d parallel comput use spatial vector data killeen texa experiment studi data divid seven theme repres attribut slope veget surfac materi hydrolog etc use slope attributedata map 729 polygon 41162 edg base map experi denot 1x map studi effect increas map size deriv new map base map use follow method scale base map along xaxi two combin two scaleddown map translat one scaleddown map along xaxi result map 1458 polygon 82324 edg 2x map similar techniqu use altern scale along yaxi xaxi get map differ size also use chain data fort sill 9667 creek 188678 edg shown figur 8 tabl 1 show detail map rang queri figur 8 creek data map sampl rang queri tabl 1 map rang queri use experi map object edg rangequeri size number polygon 41162 25 75 polygon 82324 25 75 polygon 164648 25 75 8x 5832 polygon 329296 25 75 creek 9667 chain 188678 20 75 31 experiment methodolog issu declust studi compar perform differ method set rang queri sequenc 75 rang queri construct sequenc center point rang queri repres random walk data set postprocess done sequenc ensur rang queri uniqu rangequeri lie complet within map size rang queri approxim 25 total area map measur obtain run time program 75 queri report observ mean 75 valu figur 9 show experiment methodolog number differ option tri paramet shown parenthes number possibl combin modul also shown figur restrict experi due memori limit individu node cray t3d 64 mbyte main memori limit size map 4x sequenti runtim measur directli map 4x adequ work processor beyond p16 evid absolut runtim 005 sec shown tabl 2 5 gener workload g spatialext bboxpoint map gener size sampl window 30100 loaddens uniform apprx rang queri rangequeri desir size rangequeri declust workload edg area 124 size map 1x2x 4x8x base declusteringmethod option measur analysi data collection5 map figur 9 experiment method evalu declust method experi measur analyz cost per rangequeri exclud preprocess cost preprocess cost includ cost load data main memori cost declust data among differ processor note preprocess cost paid data set correspond current window interest queri rang move current window new data fetch disk discard data old window sinc next locat window often predetermin preprocess new data need affect perform rest system moreov new data set load main memori would activ sever minut window move current rang thu would leav sever minut preprocess next data set henc studi interest measur perform algorithm term variabl cost per rang queri preprocess data 32 experiment result conduct experi studi altern follow issu workload metric spatial extent workload load densiti spatial extent addit compar differ declust method local loadbal similaritygraph pdb experi data initi distribut among differ processor processor act leader processor respons broadcast rang queri rest processor receiv rangequeri inform processor work local data local data exhaust local data process processor wait next rang queri process lead processor wait processor finish work broadcast next rang queri note commun requir bound box broadcast paramet rang queri 321 comparison altern workload metric compar area number edg altern workload metric case polygon data spatial extent workload base boundingbox approxim load densiti spatial extent assum uniform thu clip loadpolygonp windoww estim use equat 4 use llb method sampl window 30 declust metric number processor p vari 2 16 4x map use data set result experi shown figur 10a xaxi give number processor yaxi give averag speedup 75 rang queri main trend observ graph number edg workload metric result better speedup henc appear accur workload metric 4 differ two workload metric neglig 322 comparison altern spatialext workload compar point boundingbox approxim altern spatialext workload case polygon data workload metric fix number edg load densiti spatial extent assum uniform use llb method sampl window number processor llbedgebox llbareabox2468 number processor llbedgebox llbedgepoint b figur 10 speedup llb method 4x map 30 declust method number processor p rang 2 16 4x map use data set result experi shown figur 10b xaxi give number processor yaxi give averag speedup 75 rangequeri main trend observ graph boundingbox approxim spatial extent result better speedup henc appear accur estim 4 differ two estim neglig 323 comparison differ declust method compar perform differ declust method hilbert llb similaritygraph pdb addit compar effect size sampl window perform similaritygraph llb method simplic workload metric fix number edg spatial extent assum point loaddens spatial extent assum uniform case llb similaritygraph method figur 11 give result show effect sampl window size llb similaritygraph method xaxi give number processor yaxi give averag speedup 75 rangequeri figur 11 llb30 sim30 refer llb similaritygraph method sampl window 30 total area map similar notat use 100 window method main trend observ graph increas window size give increas speedup ii llb method increas speedup 30 window 100 window neglig figur 12 13 show comparison differ declust method polygon chain data respect figur xaxi give number processor yaxi give speedup number proceccor sim100 llb100 llb30 sim3024681012 number proceccor sim100 lldb100 lldb30 sim30 b figur 11 speedup llb similaritygraph method differ window size speedup map 2x 4x given b respect valu main trend observ graph bigger map lead better speedup scheme probabl due improv loadbal ii similaritygraph pdb method give best speedup among differ method iii speedup better chain data polygon data may due less varianc workload line data compar polygon data iv mappingfunctionbas method like hilbert provid inferior speedup beyond 8 processor v even best declust method provid good speedup 8 processor map use experi 33 comparison static loadbalanc effect declust method achiev loadbal shown tabl 2 data shown tabl 2 repres mean sigma sd 75 rang queri use experi column avg static give averag static execut time 16 processor 75 rang queri column max static give maximum static execut time 16 processor averag 75 rang queri experi observ static declust alon achiev good loadbal static method need augment dynam loadbalanc tabl 2 perform evalu slb method avg static max static speedup sim 00454 sigma 0003 00621 sigma 0004 1170 pdb 00454 sigma 0003 00626 sigma 0004 1160 llb 00454 sigma 0003 00660 sigma 0003 1100 speedup number proceccor hilbert sim100 llb100 number proceccor hilbert sim100 llb100 pdb b figur 12 speedup differ staticdeclust method speedup map 2x 4x given b respect 4 dynam loadbalanc dlb techniqu static declust method fail equal distribut load among differ processor loadbal may improv transfer spatial object idl processor use dynam loadbalanc techniqu 41 dlb issu gi typic dynam loadbalanc techniqu address three issu method good transfer work spatial object two processor ii much work idl processor fetch iii processor idl processor ask work 411 method transfer work extend spatial object larg eg 50 edg averag map killeen texa size requir special data structur solv rangequeri problem henc sometim may expens send complet object data correspond data structur anoth processor solv problem local compar rel cost local process data transfer develop cost model two oper cost comput intersect rang queri q polygon depend whether intersect q exampl complet insid q detect constant amount time hand intersect q cost intersect comput polygon depend number intersect point size result let p 0 probabl speedup number proceccor hilbert sim llb pdb figur 13 speedup differ staticdeclust method line data polygon intersect least one edg rang queri let x number edg sequenti cost given ff 0 fraction edg actual intersect q c cost one step com putat simplic assum cost intersect comput polygon result linear function ff 0 p 0 x constant c 2 account check boundingbox polygon complet insid complet outsid queri box q sinc test perform use 8 comparison c typic data use experi similarli transfer cost model linear function number edg x constant c 3 includ account transfer pack unpack datastructur data associ typic c 3 2 assum cost local process cost gisrangequeri comput valu x small close 1 impli even small object transfer cost local process cost note even 0 relat remain drawback may overcom select duplic data differ processor exchang object id sinc object id word data result minimum commun overhead data transfer note replic data differ processor result memori overhead 412 partit method granular transfer granular work divis determin much work transfer donor processor idl processor granular may depend size remain work number processor cost work transfer accuraci estim remain work sever strategi like selfschedul 12 factor schedul 20 chunk schedul 23 exist determin amount work transfer also simplest case transfer one piec work time also consid case commun cost neglig small compar averag cost solv rangequeri problem set object chunk singl object may yield best possibl load balanc hand chunk one object suitabl commun cost compar averag cost solv rangequeri problem set object true distribut memori system case chunk one object desir keep compar amount work chunk loadimbal kept low note problem divid work chunk equal work similar static declust problem even though tradit dlb method use simpl method like random partit round robin etc hypothes loadbal dlb method improv use systemat declust method divid work chunk sinc declust oper expens chunk done static also note simplic consid dynam variabl size chunk paper 413 processor idl processor ask work method decid processor idl processor ask work discuss analyz 24 25 method divid two categori 1 poolbas method pbm fix processor avail work idl processor ask fix processor work 2 peerbas method work initi distribut among differ processor idl processor select peer processor work donor use random poll nearest neighbor global round robin grr asynchron local round robin arr poolbas method structur gisrangequeri problem impos limit amount work kept share pool work initi singl processor approxim filter comput rang queri parallel result nonparalleliz work rest processor wait singl processor finish filter comput fetch object intersect comput processor idl avoid initi partit data two part static pool initi static part data declust p set ith processor pool part data assign leader processor processor 1 rang queri processor leader processor start work local data correspond static part leader processor first complet filter pool start work local data correspond static part situat shown figur 14 process s2 dlb process sp dlb process s2 process sp dlb apprxfilpool process s1 dlb apprxfilpool process s1 dlb small pool larg pool b figur 14 small pool may result high static load imbal larg pool may result processor idl processor finish work local data filter step pool part finish processor would wait lead processor finish filter work pool part data shown figur 14b idl turn result increas run time decreas perform algorithm henc enough work processor filter step pool complet without lead processor idl hand static work processor much static loadimbal high high static loadimbal also result processor idl shown figur 14a let w total work requir solv rangequeri problem let j fraction total time spent approxim filter ie stage rangequeri comput also let load imbal due static declust data total work w declust among p processor maximum time taken processor w 1 minimum time taken w assum p overhead incur due parallel increas total runtim due commun overhead processor idl suppos x fraction total work taken pool data p ool larg enough overcom static load imbal incur due static part data figur 14a also filter cost jxw p ool less maximum time correspond static work figur 14b combin equat 7 8 get lower upper bound pool size tabl 3 give sampl upper lower bound x estim use equat 9 parallel overhead assum zero j assum 005 tabl 3 estim lower upper bound pool size lowerbound upperbound 080 078 066 063 048 046 peerbas method peerbas method data divid among processor common pool idl processor ask anoth peerprocessor work paper evalu global round robin grr asynchron round robin arr method gisrangequeri problem see 24 complet discuss two algorithm grr singl processor act schedul respons send id next avail processor work request idl processor idl processor request work processor work main drawback scheme schedul processor may becom bottleneck number processor increas experiment studi bottleneck signific number processor rel small ie less 32 arr everi processor maintain local target pointer whenev processor run work use target pointer label donor processor send work request target valu increment modulo p time work request sent processor receiv request work send work request processor otherwis request processor send anoth request next processor given target pointer work receiv donor processor note two method arr method singl processor bottleneck case grr arr method need extra work check termin detect sinc singl sourc inform remain work rang queri henc advantag method grr may offset due terminationdetect overhead gisrangequeri problem perform two method may compar 16 processor 42 framework parallel formul approach use declust static dynam loadbalanc level present gener framework method use declust dlb method discuss far twophas scheme sinc use initi static declust data use addit loadbalanc run time pseudocod gener method given figur 15 follow discuss let p number processor use system initi data declust two set b set use static data object set alloc processor processor alon respons process object object set never transfer processor dlb phase similarli set b use dynam data object set transfer processor dlb phase call set b share pool data sinc object set share processor dlb phase initi declust data two set done depend desir size share pool polygon number processor follow section experiment show variat size across differ number processor data static declust p set processor p assign set 1 choic declust method determin number processor type data data distribut data b also static declust x bucket replic processor note staticdeclust method discuss far use static declust purpos valu x depend size b number processor commun cost henc paramet tune depend data bound box next rang queri receiv design lead processor exampl processor broadcast boundingbox paramet processor group receiv boundingbox paramet processor p perform approxim polygonlevel filter retriev candid polygon local data set place result set l addit processor perform approxim filter data set b keep result object id dynam set set object id x bucket separ bin processor p independ work data set l object left set processor p finish work data l goe dlb mode mode data dynam set use dynam loadbalanc work transfer transfer bin object id processor algorithm termin dlb method termin var local data array pidset object mapi processor use declust correspond data var global data array pidset object mapi processor use declust correspond data b begin one broadcast0 pidset bbox phase parallel forpid pidset sequenti algorithmloc datapid goto dlb phase parallel work object nextobject id next unprocess bucket id sequenti algorithmobject id end figur 15 pseudocod parallel formul 5 experiment evalu dlb method compar differ dlb method appli rangequeri problem set extend spatial object use framework given figur 15 implement parallel rangequeri algorithm experi carri cray t3d parallel comput use polygon data describ tabl 1 altern dlb issu evalu compar averag perform set 75 rang queri experi similaritygraph method 100 window use static declust method unless mention otherwis simplic number edg use workload metric static declust data similarli spatial extent assum point loaddens assum uniform figur 16 show experiment methodolog evalu dlb issu number differ option tri paramet shown parenthes number possibl combin modul also shown figur messag startup time cray t3d 100 nano second ie 01 micro second studi effect parallel formul differ commun network simul differ network increas valu 01 101 1001 sec 51 evalu worktransf strategi worktransf strategi compar basi follow two paramet averag cost transfer complet object data includ data structur one processor anoth processor ii averag cost solv gisrangequeri polygonlevel filter singl processor includ cost pack unpack data structur relat polygon filter cost send pack data one processor anoth processor tabl 4 show actual experiment valu 5 randomli chosen rang queri analysi data collect map gener map base size 4 map rang queri size rangequeri measur declust pool size 124 method grrarrpbm option partitioningdeclust method parallel hpgi gener workload rangequeri desired75 figur experiment method evalu dlb method parallel gisrangequeri polygon data 2x map tabl also show averag valu rangequeri 2x map shown equat 7 note consist case gap parallel comput cm5 ibm sp2 substanti higher machin result consist analysi shown equat 7 conclud desir transfer complet polygon data processor run time instead polygon id transfer run time facilit select duplic polygon data processor rest experi work transfer alway done transfer object id unless otherwis state tabl 4 cost transfer vs cost solv problem singl processor cost second time sec avg 75 queri 52 declust dlb method experi effect chunk base systemat declust compar random declust dlb method use grr dlb method compar random similar graph llb method declust dynam data declust polygon per chunk figur 17 show experiment result second xaxi give number processor yaxi give averag speedup 75 queri data clear random declust data effect systemat declust achiev good loadbal gisrangequeri problem moreov order method remain static case show systemat declust data improv loadbal also loadbal improv use inform number processor ts0 sim llb number processor ts100 sim llb rand b figur 17 speedup differ declust method grr method map4x declust phase 53 evalu granular workalloc dlb compar effect differ chunk size number polygon chunk rang 1 30 use grr dlb method similaritygraph100 declust method addit compar effect increas valu decreas size chunk ie increas number chunk experi conduct use 4x map replic data 40 total data chunk singl polygon usual result best possibl loadbal also result maximum overhead due increas number chunk figur 18 show graph experi valu low chunk singl polygon result best possibl speedup valu increas maximum speedup achiev chunk size singl polygon chunk due increas commun overhead increas number chunk requir exchang messag processor note 100 second typic valu seen mimd messag pass comput like ibm sp2 54 effect pool size evalu effect pool size use poolbas method vari number processor vari data file number processor vari 4 16 data file vari 1x map 4x map pool size vari 0 100 total data note 0 polygon per chunk ts01 ts101 ts1001 figur 18 granular worktransf pool refer static declust dlb work transfer done transfer polygon id use one polygon per chunk481216 speedup map4x p4 p8 speedup p16 map1x map2x map4x b figur 19 speedup differ pool size poolbas method figur 19 show result experi xaxi give size pool percentag total data yaxi give averag speedup 75 rang queri expect speedup increas increas pool size point start decreas initi increas speedup may due increas loadbal decreas speedup achiev maximum valu due nonparalleliz overhead approxim filter shown equat 8 note decreas greater p increas due increas non paralleliz overhead increas p maximum speedup occur differ pool size differ number processor differ data set also note maximum speedup occur rang predict tabl 3 55 comparison dlb method compar perform three dlb method grr arr pbm 1001 number processor vari 4 16 4x map use input data number polygon per chunk 1 1001 work transfer transfer polygon id similaritygraph100 use declust data481216 number processor pbm arr number processor pbm arr grr figur 20 speedup differ dlb method figur 20 show speedup three method xaxi give number processor yaxi give averag speedup 75 rang queri grr arr compar perform pbm perform better two method shown figur 20a howev grr inferior speedup rel method shown figur 20b may attribut central overhead maintain list possibl donor processor grr 56 effectiv dynam loadbalanc effect dlb method achiev good loadbal shown tabl 5 data collect 40 pool pbm 40 replic data grr arr similaritygraph100 use declust method one polygon per chunk share data work transfer done transfer polygon id data shown tabl 5 repres mean sigma sd 75 rang queri use experi column avg static give static execut time averag 16 processor 75 rang queri column max static give maximum static execut time 16 processor averag 75 rang queri similarli avg otal time averag total time 16 processor 75 queri otal total parallel run time averag 75 rang queri experi observ dlb method achiev good loadbal ie percentag differ avg total even though high loadimbal static part tabl 5 perform evalu dlb method avg static max static avg total max total speedup pbm 00307 sigma 0004 00492 sigma 0007 00484 sigma 0006 00518 sigma 0007 1404 sigma 069 grr 00329 sigma 0004 00518 sigma 0008 00543 sigma 0008 00557 sigma 0008 1307 sigma 064 arr 00241 sigma 0003 00422 sigma 0006 00508 sigma 0006 00556 sigma 0006 1303 sigma 059 6 conclus futur work datapartit effect approach toward achiev high perform gi parallel gisrangequeri problem use data partit dynam loadbalanc techniqu partit extend spatialdata map difficult due vari size extent polygon difficulti estim work load henc special techniqu need parallel gisrang queri problem identifi main issu declust collect extend spatial object like chain lineseg polygon experiment evalu sever altern issu distribut memori mimd machin rangequeri oper experiment result show number edg better load estim area object bound box approxim spatial extent object give inform point estim go higher order estim like multipl bound box practic estim expens obtain expens use declust extend spatial data result also show among static declust method similaritygraph distribut base method outperform static declust method also show perform dlb method improv use declust method determin subset polygon transfer runtim propos approach use idea declust hierarch fashion increas load balanc pure static method decreas commun cost pure dynam method futur work plan scale method larger number processor larger map queri also plan extend work mapoverlay problem comput intens hpgi oper anoth major effort would focu high perform techniqu secondari tertiarystorag terrain map effect io eg swap index method final would like evalu techniqu workstat cluster common mani gi applic acknowledg work sponsor armi high perform comput research center auspic depart armi armi research laboratori cooper agreement number daah04 9520003contract number daah0495c0008 aro contract number dadaah049510538 content necessarili reflect posit polici govern offici endors infer work also support feder highway author minnesota depart transport would like thank ahpcrc univers minnesota pittsburgh super comput center provid us access cray t3d would also like thank minesh amin christian mccarthi improv readabl technic accuraci paper r page httpdi parallel comput geometri parallel comput geometri experi measur spatial associ use parallel supercomput effici plane sweep parallel algorithm report count geometr intersect parallel process spatial data terrain character disk alloc product file multipl disk system alloc method use error correct code idea declust applic dynam processor selfschedul gener parallel nest loop uniform grid techniqu intersect detect serial parallel machin comput intract guid theori npcomplet dynam index structur spatial search visual larg data set earth scienc data parallel rtree algorithm data parallel spatial join algorithm perform dataparallel spatial oper linear cluster object multipl attribut parallel rtree alloc independ subtask parallel processor introduct parallel comput design analysi algorithm scalabl load balanc techniqu parallel comput analysi algorithm polygon clip similar graphbas approach declust problem applic rang search parallel use distribut data structur gener solut polygon clip parallel intersect algorithm vector polygon overlay alloc method parallel grid file tr ctr shashi shekhar sivakumar ravada vipin kumar dougla chubb greg turner parallel gi share address space architectur comput v29 n12 p4248 decemb 1996 mehmet koyutrk cevdet aykanat iterativeimprovementbas declust heurist multidisk databas inform system v30 n1 p4770 march 2005 thu nguyen john zahorjan schedul polici support distribut 3d multimedia applic acm sigmetr perform evalu review v26 n1 p244253 june 1998 jignesh patel david j dewitt clone join shadow join two parallel spatial join algorithm proceed 8th acm intern symposium advanc geograph inform system p5461 novemb 0611 2000 washington dc unit state n r lu l qian sivasubramaniam keef store spatial data network workstat cluster comput v2 n4 p259270 1999 hakan ferhatosmanoglu aravind ramachandran divyak agraw amr el abbadi data space map effici io larg multidimension databas inform system v32 n1 p83103 march 2007 hakan ferhatosmanoglu ali aman tosun guadalup canahu aravind ramachandran effici parallel process rang queri replic declust distribut parallel databas v20 n2 p117147 septemb 2006