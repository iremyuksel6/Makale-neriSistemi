breadthfirst rollback spatial explicit simul effici parallel discret event simul use optimist protocol strongli depend overhead incur rollback paper introduc novel approach rollback process limit number event roll back result straggler antimessag method call breadthfirst rollback bfr suitabl spatial explicit problem space discret distribut among process simul object move freeli space bfr use increment state save allow recoveri causal relationship event rollback relationship use determin event need roll back result demonstr almost linear speedupa dramat improv tradit approach rollback process b introduct one major challeng parallel discret event simul pde achiev good perfor manc goal difficult attain natur discret event simul organ event prioriti queue base timestamp event process order port simul parallel platform prioriti queue distribut among logic process lp correspond physic process mod ele lp interact send event messag costli maintain causal event two basic protocol develop ensur causal constraint satisfi 9 conserv 5 optimist time warp tw 11 best known optimist protocol causal error allow occur error detect erron comput roll back research describ paper util optimist protocol focus optim rollback process method rollback process present applic simul consist space object move freeli space discret multidimension lattic divid among lp make use increment state save techniqu 18 detect depend event typic implement rollback set use previou implement 7 roll back entir area assign lp paper present novel approach term breadthfirst rollback bfr rollback contain area directli affect straggler event messag timestamp smaller current simul time antimessag cancel event also present improv simul speedup perform result use approach applic motiv work lyme diseas simul twodimension space discret twodimension lattic import characterist simul mobil object move freeli space mice stationari object present lattic node tick two main group event local node tick bite mous death etc ii nonloc mous move one node anothermov event simul current run ibm sp2 show result 16 processor model design object orient fashion implement c commun process use mpi 10 messag pass librari relat work two interrel issu arisen optim optimist protocol pde one need reduc overhead rollback limit administr overhead partit problem mani small lp happen exampl digit logic simul address issu cluster lp often use lazi reevalu 9 use determin straggler antimessag effect state simul process straggler cancel event state simul remain need reexecut event time rollback current time problem approach hard compar state vector order determin state chang also applic protocol use increment state save local time warp ltw 15 approach combin two simul protocol use optimist protocol lp belong cluster maintain conserv protocol cluster ltw minim impact rollback lp given cluster cluster time warp ctw 1 2 take opposit view use conserv synchron within cluster optimist protocol reason given choic sinc lp cluster share memori space tight synchron perform effici two algorithm rollback present cluster lo cal first case rollback reach cluster lp cluster roll back way memori usag effici event present input queue schedul time rollback remov local algorithm affect lp roll back restrict rollback speed comput increas size memori need entir input queue kept multiclust simul 16 digit circuit model take bit differ look cluster first cluster compos set lp rather consist one lp compos set logic gate lp cluster assign simul process case spatial explicit problem issu partit space lp also import discret space result multidimension lattic follow question aris one lp assign lattic node result high simul overhead lattic node cluster result cluster assign lp first implement lyme diseas use latter approach assign spatial close node singl lp tw use lp similar ctw except implement multipl lp within cluster simul space effici unfortun approach perform well hope especi problem size grew larger rollback occur cluster entir cluster roll back improv perform node lattic belong lp cluster allow progress independ simul time howev node cluster supervis one lp rollback occur lpcluster affect lattic node roll back thank breadthfirst rollback strategi explain section 3 approach classifi interclust intraclust time warp tw main innov bfr futur inform global inform past distribut among node spatial lattic futur inform central facilit schedul event past inform distribut limit effect rollback one could say point view futur treat partit singl lp wherea point view past treat partit set lp one lp per lattic node perform new method yield speedup close linear breadthfirst rollback approach breadthfirst rollback design spatial ex plicit optimist pde space discret divid among lp lp respons set interconnect lattic node speed simul dictat effici two step forward event rollback process forward comput facilit event queue global execut lp choic next event quick impact rollback reduc depth rollback kept min imum rollback reach past necessari number event affect given time minim latter reli properti spatial explicit prob lem two event locat suffici far apart space one affect certain valu current logic virtual time lvt lp time rollback one event need roll back causal error occur event classifi local nonloc local event affect state one lattic node nonloc event exampl move event move object one locat next affect least two node lattic local event easi roll back assum local event e locat origin impact point rollback potenti 1st2nd 3rd wave rollback locat x figur 1 wave rollback x time trigger event e 1 time 1 locat x definit local event rollback occur impact event e state locat x restor time prior time restor state e 1 automat undon howev trigger event e nonloc trigger event e 1 locat restor state locat x sufficientit also necessari restor state locat x 1 prior occurr event e 1 regardless whether event local nonloc state inform restor nodebi node basi show impact rollback lp consid straggler antimessag arriv locat x mark darkest shade figur 1 rollback proceed follow event x roll back time r time straggler antimessag sinc increment state save use event undon decreas time order enabl recoveri state inform rollback involv undo event happen x event e process node examin determin e caus anoth event let call e 1 occur differ locat x 1 6 x nonloc event case locat x 1 roll back time prior occurr e 1 e undon breathfirst wave gave name new approach simul object move one lattic node neighbor one rollback spread one site neighbor time rollback new site must strictli greater one site x nonzero delay causallydepend event gen eral breadth rollback bound speed simul object move around space figur show potenti wave rollback initi impact point three layer process practic size affect area usual smaller shade area figur 1 event one site like affect neighbor node obvious event locat x trigger event neighbor lp antimessag sent interest note locat belong given lp differ logic time fact necessarili process event given lp increasingtimestamp order two event independ event higher timestamp process ahead event lower timestamp similar type process mention briefli 17 coop conservativeoptimist process justif requir process event timestamp order necessari provabl correct simul requir event simul object process correct time order due type process process event forward execut check logic time node event schedul logic time greater time event node roll back 4 comparison tradit approach demonstr improv perform present model use initi simula tion use bfr method space previous mention discret twodimension lattic similar discret use exampl person commun servic 4 space discret repres network hexagon squar cell simula tion cell model lp research develop simul system spatial explicit problem particular applic describ paper simul spread lyme diseas lyme diseas simul would prohibit expens assign one lp lattic node cluster lattic node singl lp current space divid stripwis among avail processor cours spatial decomposit use achiev better perform space also divid lp avail processor 8 lp simul call space man ager respons event happen given region space space speedup processor figur 2 speedup small data set 2400 node manag determin object move local space anoth partit object futur event sent appropri space manag previous mention optimist approach use allow concurr process event happen time differ locat state inform larg use increment state save inform necessari rollback event process state inform chang place local data structur event place process event list event move object one lp anoth also place messag list pointer event actual place list result duplic costli speed send antimessag object move anoth lp send lp save object correspond event ghost list abl restor inform upon rollback rollback occur messag messag list remov correspond antimessag sent use aggress cancel event process event list remov undon undo event involv send object anoth process entail restor object ghost list restor futur event object event queue event part state chang event restor fossil collect obsolet inform remov discard three list process event list messag list ghost list initi result obtain smallsiz simul encourag figur 2 howev speedup number processor figur 3 speedup larg data set 32000 run time second number processor run time multipl logic process figur 4 run time larg data set multipl lp per processor1525352 4 speedup number processor figur 5 speedup larg data set 16lp impress larger simul figur 3 perform degrad caus larg space alloc individu process result increas problem size rollback occur entir space alloc lp roll back minim impact rollback divid space lp keep number processor figur 4 show runtim improv achiev approach given problem size ultim number lp ure 5 best effici achiev 8 processor 5 challeng new approach order implement bfr chang made simul engin also model major chang made move event question aros object move locat x locat object place process place locat x locat roll back would way find event affect locat place locat locat x roll back similar difficulti aris place move event process list also good solut one case object move locat case move locat dilemma motiv us split move event two moveout movein event henc object move locat x locat moveout place process event list x movein locat x 1 except locat belong anoth lp case movein place process event list locat x place top correspond moveout event indic messag sent upon rollback movein anoth lp en counter antimessag sent result treatment antimessag coupl breadthfirst process rollback give us effect lazi cancel 12 antimessag sent togeth locat x origin messag ad dress avoid search lattic node inform sinc movein event indic messag sent messag list necessari anoth affect structur ghost list origin ap proach object event place list order object left partit time order preserv object place list timestamp order node lattic differ time nonord aspect ghost list pose problem fossil collect list mere truncat remov obsolet object solut distribut list among node use load balanc describ final section ever ghost list rel small compar process event list might necessari distribut list load balanc perform suffici maintain order list base virtual time object remov simul addit event trigger inform must preserv origin implement event creat ident event caus save one tag trigger new event event undon depend futur event remov trigger tag event queue bfr possibl futur event alreadi process assign locat roll back yet prohibit expens travers futur event list process event list neighborhood search event whose trigger match given event tag solut creat depend pointer trigger event newli creat event way depend event easili access locat resid roll back pointer tack previous implement share memori 9 decid whether event cancel approach also need know depend event process order abl quickli locat either event queue process event list one chang requir random number gener origin simul singl random number stream use lp number use exampl calcul time occurr new event sinc sequenc event execut singl lp differ run run random number sequenc yield two differ result obvious result repeat import chose distribut random number sequenc among node lattic initi singl random number sequenc use seed sequenc node node gener new sequenc 6 exampl demonstr behavior bfr algorithm let consid exampl figur 6 figur show process list three differ lattic node 0001 02 event mo moveout mi mi could event mo moveout mi movein event causal relat recent past mi mo mo mi relat past figur view process list three node lattic event mi movein event x local event rollback locat 01 time 0 follow happen first mi 3 undon place event queue done x 2 mo 2 consid depend mi 4 detect rollback locat 02 time 2 perform result x 3 undon mi 4 undon place event queue next mo 2 undon caus mi 4 remov event queue mo 1 exam ine 00 roll back time 1 mi 2 undon place event queue mo 1 undon mi 1 remov event queue rollback occur locat 00 time three recent event locat 00 undon place event queue locat affect rollback possibl locat affect simul progress forward exam ple event mo z schedul time 2 00 trigger event mi z 01 time 3 locat 01 would roll back time 3 interest asid locat xy simul time next event futur list schedul time 1 locat cess event come anoth process necessarili incur rollback event occur locat xy rollback happen howev destin locat local rollback occur result compar timestamp incom event uninfect larval tick infect nymphal tick unifect mous mous infect tick bite infect tick bite infect figur 7 cycl lyme diseas local virtual time enough determin rollback necessari 7 applic descript present result obtain bfr import sketch applicationth simul lyme diseas diseas preval northeastern unit state 3 13 peopl acquir diseas come contact tick infect spirochet may transfer human blood caus infect sinc tick practic immobil spread diseas driven tick mobil host mice deer even though visibl case lyme diseas involv human main infect cycl consist tick mice fig 7 infect tick bite mous anim becom infect diseas also transmit infect mous uninfect feed tick season cycl diseas durat simul 180 day start late spring6 time activ tick mice mice time look nest site may carri tick consider distanc 14 mice model individu tick sheer number mani 1200 larvae400m 2 14 treat background space discret node size 20x20m 2 repres size home rang mous node may contain number tick variou stage develop variou infect statu mice move around space search empti nest site initi search describ dispers event move move event mice die kill event find nest site natur caus old age attack run time sec number processor comparison run time approach breadthfirst old approach figur 8 result comparison run bfr tradit approach predat diseas mice bitten tick tick bite tick drop tick drop list event move event nonloc figur 8 show perform bfr illustr almost linear speedup run time bfr consider shorter tradit approach look new algorithm observ sever benefit import benefit rollback occur need roll back event belong given lp necessari event undon tradit ap proach number event need roll back ultim proport number lattic node assign given lp rollback occur event happen space undon hand rollback occur bfr version number event affect rollback proport length edg space interfac lp case space divid strip number event affect given rollback proport length two commun edg fore size space assign given lp increas number lp given problem size decreas number event affect rollback case bfr remain roughli con stant tradit approach number increas proport increas length noncommun edg consequ observ number event roll back use bfr order magnitud smaller tradit speedup number processor comparison speedup balanc unbalanc comput balanc load uneven load figur 9 speedup balanc unbalanc comput also get fewer antimessag sent result automat lazi cancel gener one lp per processor elimin onprocessor commun delay cours drawback new method fossil collect much expens list distribut therefor done global virtual time increas certain amount last fossil collect harder maintain depend pointer trigger event un done pointer reset pointer maintain event creat delet undon wherea trigger set must code deal multipl depend aggress cancel seen result seem advers impact perform 9 conclus futur work describ new algorithm rollback process spatial explicit problem algorithm base optimist protocol reli space partit multidimension lattic rollback minim examin process event list lattic node roll back search causal depend event span lattic node rollback impact minimum number site make simul effici result almost linear speedup achiev obvious perform attain thank larg amount parallel exist applic address issu load distribut simul load per lp uneven exampl odd lp load even one perform degrad shown figur 9 anoth advantag bfr lend well load balanc sinc local node level histori track facilit load balanc ing overload lp shed layer space order balanc load noth special need happen receiv side messag sent space arriv simpli discard sender space reconstruct ghost list receiv assum load exchang neighbor pro cess send side howev prioriti queue filter order extract futur event area sent new process order decid need migrat load event queue scan determin event densiti sinc larg number event queue given time quantiti might prove good measur load densiti high process space sent neighbor process acknowledg work support nation scienc foundat grant bir9320264 ccr 9527151 content paper necessarili reflect posit polici us governmentno offici endors infer impli r dynam load balanc cluster time warp logic sim ulat time warp logic simul biolog social phenomenon lyme diseas case studi simul pc network use time warp distribut simu lation case studi design verif distribut program parallel discret event simul lyme diseas continu monitor global virtual time parallel discret event simul simul lyme diseas use parallel discret event simul parallel discret event simula tion anthoni skjel lum virtual time studi time warp rollback mechan epidemiolog lyme diseas unit state 19871998 tempor spatial dynam ixod scapu lari acari ixodida rural landscap local time warp approach parallel simul dynam load balanc multiclust simul network workstat speed unifi approach parallel simul increment state save speed use c tr ctr jing lei zhang carl tropper depend list time warp proceed fifteenth workshop parallel distribut simul p3545 may 1518 2001 lake arrowhead california unit state malolan chetlur philip wilsey causal represent cancel mechan time warp simul proceed fifteenth workshop parallel distribut simul p165172 may 1518 2001 lake arrowhead california unit state ewa deelman boleslaw k szymanski dynam load balanc parallel discret event simul spatial explicit problem acm sigsim simul digest v28 n1 p4653 juli 1998 rao philip wilsey acceler spatial explicit simul spread lyme diseas proceed 38th annual symposium simul p251258 april 0406 2005 boleslaw k szymanski gilbert chen simul use softwar agent link spatial explicit parallel continu discret model proceed 32nd confer winter simul decemb 1013 2000 orlando florida christoph caroth david bauer shawn pearc ross highperform low memori modular time warp system proceed fourteenth workshop parallel distribut simul p5360 may 2831 2000 bologna itali maniatti moham j zaki system support scalabl data mine acm sigkdd explor newslett v2 n2 p5665 dec 2000