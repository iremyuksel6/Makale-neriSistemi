stochast schedul variabl profil preced constraint paper consid stochast profil schedul problem partial order set task uniform processor set avail processor vari time run time task independ random variabl exponenti distribut obtain suffici condit list polici stochast minim makespan within class preemptiv polici result allow us obtain simpl optim polici partial order interv order inforest outforest b introduct consid follow schedul problem given set task run system consist uniform processor ie processor differ speed execut task must satisfi preced constraint describ direct acycl graph refer task graph process requir task independ random variabl common exponenti distribut set processor avail task vari time avail processor refer profil arbitrari goal find preemptiv schedul stochast minim makespan studi schedul variabl profil motiv situat processor subject failur repair failur repair time arbitrari anoth motiv schedul multiprogram system system execut task program may preempt task higherprior program task graph inforest profil constant set two processor chandi reynold 2 prove highest level first hlf polici minim expect makespan level task simpli distanc root tree appear bruno 1 subsequ show hlf stochast minim makespan system two ident parallel processor pinedo weiss 14 extend last result case task differ level may differ expect task run time frostig 7 gener result pinedo weiss includ increas likelihood ratio distribut task run time recent kulkari chimento 9 extend result 1 case variabl profil two ident parallel processor number ident parallel processor system arbitrarili fix task run time common exponenti distribut papadimitri tsitsikli 12 prove hlf asymptot optim number task tend infin coffman liu 3 investig stochast schedul outforest ident parallel processor constant profil uniform outforest subtre order embed relat see definit section 43 show intuit prioriti schedul polici induc embed relat refer successor ms polici paper stochast minim makespan two processor addit outforest satisfi uniform rootembed constraint greedi polici stochast minim makespan arbitrari number processor papadimitri yannakaki 13 studi determinist schedul intervalord task assumpt unitexecutiontim constant profil show arbitrari number ident processor simpl list schedul induc interv order still refer ms polici paper minim makespan notion profil schedul first introduc ullman 16 later garey et al 8 complex analysi determinist schedul algorithm dolev warmuth 4 5 6 carri variou studi determinist nonpreempt profil schedul parallel ident processor case profil simpli number avail processor time task unitexecutiontim dolev warmuth obtain polynomi algorithm specif profil eg zigzag profil bound profil etc specif task graph eg inforest outforest oppos forest flat graph etc result extend determinist preemptiv profil schedul liu sanlavil 11 paper investig profil schedul stochast set uniform processor schedul allow preemptiv profil arbitrari may unknown priori obtain suffici condit list schedul polici optim among preemptiv polici makespan stochast minim result allow us prove optim ms polici task graph interv order structur inforest structur uniform outforest structur result concern intervalord task new even constant profil parallel ident processor optim ms polici extend result 9 inforest uniform processor result 3 outforest variabl profil uniform processor paper organ follow section 2 schedul problem describ detail preliminari present section 3 suffici condit list schedul polici stochast minim makespan establish section 4 result appli ms polici stochast minim makespan intervalord task graph forest uniform outforest conclud remark provid section 5 problem descript preliminari task graph e direct acycl graph set vertic repres task set edg repres preced constraint impli task must complet execut task j start denot pi si set immedi predecessor successor task without predecessor call initi task let si set necessarili immedi successor necessari notat sg use indic si defin respect graph g particular attent paid follow three class c io c c task graph interv order g 2 c io vertex correspond interv b real line inforest vertex one immedi successor jsij 1 vertex call leaf inforest g call root inforest g outforest vertex one immedi predecessor jpij 1 vertex call leaf outforest g call root outforest g four graph belong class illustr figur 1 graph 1 interv order graph associ collect real interv besid graph 2 inforest graph 3 4 outforest note class graph follow closur properti c 2 fc fvg graph obtain delet vertex v adjac edg closur properti delet use establish result process requir task independ ident distribut iid random variabl common exponenti distribut constant paramet say 1 run time task process requir task divid speed processor task run k 1 uniform processor index k speed processor k denot ff k run time task processor k thu iid random variabl exponenti distribut paramet ff k assum convent ff 1 ff 2 delta delta delta ff k figur 1 exampl task graph set processor avail task vari time due eg failur processor execut higherprior task avail processor refer profil specifi sequenc fa random variabl time epoch profil chang n 1 random set whose element indic processor avail time interv n n1 profil fa n1 assum independ run time task without loss gener assum n 1 n 6 also assum profil chang infinit often finit time interv finit n 1 n x profil said bound schedul polici decid enabl task ie unfinish task whose predecessor finish assign avail processor time task assign one processor processor execut one task throughout paper assum schedul polici preemptiv assum schedul inform sampl remain process requir task let psi denot class polici 2 psi denot g makespan partial order set task g ie maximum complet time task g goal paper find polici psi stochast minim makespan g polici said optim within class c polici 2 psi st g g 2 c symbol st refer standard stochast inequ random variabl stochast smaller random variabl 2 ir denot x st increas function f ir inequ efx efi hold provid expect exist proof main result use coupl argument base follow wellknown result due strassen st denot equal distribut lemma 21 strassen two random variabl xy 2 ir satisfi x st exist two random variabl defin common probabl space st x st almost sure order simplifi proof main result paper make restrict class polici psi observ first due memoryless properti exponenti distribut time distribut remain run time task assign processor k still exponenti paramet ff k 1 k k repres state system set avail processor remain task graph distribut remain run time task state chang instant task complet profil modif therefor without loss gener confin class polici preemption new task assign occur instant task complet profil modif instant refer decis epoch henc assum polici psi make schedul decis time instant polici idl allow processor remain idl initi task wait execut easi see optim polici never idl sinc distribut task run time infinit support preemption allow furthermor optim polici alway use fastest avail processor see 10 complet proof basic properti throughout paper assum polici psi nonidl use fastest avail processor decis epoch 3 optim list schedul polici pay particular attent class simpl schedul polici refer list schedul polici call list schedul task graph list defin set task mean task v higher prioriti v j list decis time epoch polici assign enabl task highest prioriti fastest avail processor clearli list schedul class psi satisfi properti mention end last section note prioriti list chang dynam ie given polici rel prioriti order two task chang task remov graph let c class graph close delet class c said pmonoton list schedul p 2 g 2 c initi task impli profil bound p st recal g denot makespan g schedul observ accord definit c pmonoton p gamma 1monoton trivial class graph 1monoton list schedul howev seen next section class 2monoton list schedul theorem 31 let c class graph close delet pmonoton list schedul p 2 g 2 c polici stochast minim makespan g profil fa n1 bound p st g 1 proof theorem need follow lemma lemma 31 let c class graph close delet pmonoton list schedul p 2 let g 2 c task graph ae 2 psi two polici g follow prioriti list time except first decis epoch first decis epoch polici assign task k avail processor q respect assumpt wherea polici ae assign task k processor q 1 q 2 respect permut st g proof ident assert trivial hold assum integ 1 q q j let 1 permut defin follow polici follow prioriti list time except first decis epoch first decis epoch polici ae 1 assign task k processor respect show st g 2 coupl run time processor q way polici ae 1 run time processor q n start time 0 n 1 n k coupl model second decis epoch occur time polici let time epoch fix refer 2 decis epoch correspond profil modif ie st g assum second decis epoch correspond task complet easi see increas function f c pmonoton st thu fact q q j ff q impli henc increas function f impli st uncondit 2 relat yield 2 consid polici ae 1 done otherwis integ 1 permut f1 2 defin follow polici follow prioriti list time except first decis epoch first decis epoch polici ae 2 assign task k processor respect show st ae 1 g repeat procedur kk gamma 12 time yield final polici ae st st ae 2 g st ae 1 g st g proof theorem 31 prove induct n g v e 2 c st g 5 hold profil g singleton ie jv 5 trivial polici assign task fastest avail processor assum n 1 relat 5 hold g jv j n consid task graph g 2 c jv fix task graph g 2 c profil fa n1 polici 2 psi denot n1 sequenc decis epoch finish task g loss gener assum 2 correspond task complet case analyz similarli sinc polici psi nonidl use fastest avail processor number task assign execut first decis epoch polici first decis epoch polici assign initi task k avail processor respect wherea polici assign initi task processor q 1 q 2 respect permut f1 2 construct intermedi polici ae follow prioriti list time except first decis epoch first decis epoch polici ae assign task processor q accord lemma 31 g st aeg show st g 6 complet proof assumpt 2 correspond task complet increas definit list schedul impli understood antisymmetr therefor pmonoton g impli st togeth induct assumpt impli st st therefor cf 7 8 e f readili impli 6 4 optim mostsuccessor polici class intuit good list schedul mostsuccessor ms polici prioriti task defin number necessarili immedi successor ie jsuj jsvj impli u oe ms v differ ms polici way tie broken way assign prioriti task number successor section show polici optim special class task graph ie intervalord graph inforest uniform outforest order prove optim properti need compar task graph done use follow major let g two task graph vertic order accord number successor say g 1 major g 2 denot g 1 oe g 2 proof follow equival definit also use let v 1 v 2 partit set 1 2 word j k set vertic k successor graph g j exampl intervalord graph figur 1 6g graph inforest k set vertic level k equival definit given follow graph g 1 major g 2 41 stochast profil schedul intervalord graph e 2 c io intervalord graph note except possibl set isol vertic ie vertic without predecessor without successor intervalord graph connect equival definit interv order graph cf 13 immedi consequ definit jsij jsjj si sj consequ subset contain vertic whose set successor ident cardin k theorem 41 profil fa n1 set intervalord task g 2 c io st g proof view theorem 31 need show c io mspmonoton posit integ p ie two initi task u v g jsuj jsvj st fvg show common probabl space appli strassen theorem cf lemma 21 yield 10 owe memoryless properti exponenti distribut consid coupl process model processor avail continu execut task complet occur task assign processor correspond complet fictiti task task assign processor assign run time equal remaind run time alreadi underway processor thu task u assign processor time remain run time denot fc n g 1 n1 increas sequenc complet time task g 1 g 2 avail processor ms polici let fd n g 1 n1 superposit sequenc decis epoch ms g 1 g 2 probabl space specif n1 superposit sequenc profil modif time fa n g 1 n1 task complet time fc n g 1 n1 clearli remain graph g j time n ms coupl model let g n 1 show n 1 immedi impli 11 relat 12 prove induct n trivial assum 12 hold n 1 let avail processor time without loss gener assum processor avail recal convent processor order speed ff 1 ff 2 ms polici initi task largest set successor assign fastest processor let u task g 1 n assign processor respect ms polici similarli let m2 task g 2 n assign processor respect ms polici definit g 1 n empti 12 trivial hold n 1 time epoch n1 correspond profil modif relat 12 hold n 1 assum g 1 n empti n1 correspond complet processor say processor h 1 h maxm belong 1 n v h belong 2 b n task u h andor v h finish time n1 three case investig case task u h finish easi see relat 12 hold case 2 h minm case task u h v h finish two subcas case 21 b simpl therefor relat 12 hold case 22 b observ first examin case integ defin follow note 1 2 uniqu defin induct assumpt one note 1 accord definit n k j number noniniti task j k n g j n g h gamma 1 initi task n thu hand v impli h initi task 2 henc two inequ togeth fact n k 1 impli therefor complet proof 12 case 22 case 3 case task v h finish clear b task g 1 n assign avail processor obtain b hand v impli h initi task 2 henc b inequ 13 14 impli therefor b 12 hold case 3 therefor induct relat 12 hold n 1 consequ msg 1 probabl space 42 stochast profil schedul inforest e 2 c inforest task inforest g initi task leaf g task number successor equal level inforest ie distanc root tree appear level root zero convent thu ms polici coincid hlf polici theorem 42 profil fa n1 bound 2 inforest g 2 c st g 15 proof theorem similar theorem 41 use fact c ms2 monoton omit reader refer 10 detail proof note theorem gener result kulkari chimento 9 uniform processor differ scheme proof note also result hold 2 simpl counterexampl found three processor see 2 43 stochast profil schedul outforest e 2 c outforest task outforest g initi task root g vertex v 2 v successor subtre g denot tg v simpli v ambigu gener ms polici optim within class outforest c counterexampl provid 3 howev show within class uniform runiform outforest introduc coffman liu 3 polici optim ms two outtre outtre 2 said emb outtre 1 1 embed isomorph subgraph exist inject function f 1 2 sfu function f call embed function let r 1 r 2 root outtre 1 2 respect 2 e 1 embed function f fr 1 rootembed function outforest g 2 c said uniform respect runiform subtre order embed respect rootembed relat class uniform respect runiform outforest denot c uof respect c rof clear c rof ae c uof ae c figur 1 graph 3 uniform outforest rootuniform outforest graph 4 rootuniform outforest embed relat extend uniform outforest follow let g two uniform outforest denot tg v subtre outforest g compos v successor v g assum vertic g 1 g 2 index way outforest g 1 embed g 2 refer g 1 oe e g 2 similarli g 1 oe r g 2 show ms polici optim uniform outforest profil bound 2 well runiform outforest arbitrari profil order establish optim properti first prove c uof resp c rof ms2monoton resp mspmonoton posit integ p observ two root u v uniform outforest g 2 c uof resp runiform forest jsuj jsvj thu two subgraph g 1 g 2 g obtain delet initi task g g 1 oe e g 2 g 1 oe g 2 last properti allow us use argument coffman liu 3 establish follow msmonoton lemma 41 let g 2 c rof arbitrari runiform forest u v two root g jsuj jsvj profil fa n1 bound 2 st msg gamma fvg proof lemma analog proof theorem 1 coffman liu 3 although proof theorem 1 3 given constant profil parallel ident processor fact graph g gamma fug g gamma fvg schedul ms polici allow us use argument detail proof left interest reader lemma 42 let g 2 c rof arbitrari runiform forest u v two root g jsuj jsvj profil fa st msg gamma fvg assert lemma shown mimick proof theorem 2 coffman liu 3 detail proof omit appli theorem 31 yield theorem 43 profil fa n1 bound 2 uniform outforest g 2 st g 16 theorem 44 profil fa runiform outforest g 2 c rof st g 17 conclud remak consid schedul problem stochast minim makespan task graph variabl profil assumpt task run time independ random variabl exponenti distribut establish gener condit list schedul polici stochast minim makespan result allow us show optim ms polici partial order interv order inforest outforest show except degener case singl avail processor time ms optim polici stochast minim makespan reader refer 10 detail result paper hold speed processor well avail allow vari task assign chang whenev speed ratio two processor revers extens allow one analyz system processor share among differ job ie set task acknowledg would like thank refere variou construct comment help improv content present paper r schedul task exponenti servic time intre preced constraint schedul partial order task probabilist execut time optim stochast schedul outforest schedul preced graph bound height schedul flat graph profil schedul oppos forest level order stochast schedul problem intre preced constraint schedul opposit forest optim schedul exponenti task intre preced constraint two parallel processor subject failur repair stochast schedul variabl profil preced con straint stochast schedul intre preced constraint schedul intervalord task schedul job exponenti distribut process time intre preced constraint two parallel machin exist probabl measur given margin npcomplet schedul problem tr