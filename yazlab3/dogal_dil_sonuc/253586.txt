parallel algorithm adapt mesh refin comput method base use adapt construct nonuniform mesh reduc amount comput storag necessari perform mani scientif calcul adapt construct nonuniform mesh import part method paper present parallel algorithm adapt mesh refin suitabl implement distributedmemori parallel comput experiment result obtain intel present demonstr scientif comput involv finit element method algorithm exhibit scalabl perform small run time comparison aspect scientif comput examin also shown algorithm fast expect run time parallel random access machin pram comput model b introduct adapt mesh refin techniqu shown success reduc comput storag requir solv mani partial differenti equat 10 rather use uniform mesh grid point evenli space domain adapt mesh refin techniqu place grid point area local error solut larg mesh adapt refin andor unrefin comput accord local error estim domain techniqu much effici use uniform mesh solut chang much rapidli area other adapt construct nonuniform mesh crucial part adapt mesh solut method examin mani research exampl 3 10 11 12 13 14 15 16 18 typic one begin initi mesh conform particular geometri mesh select refin base local error estim construct mesh satisfi certain error toler research focus mesh compos simplici ele ment line segment one dimens triangl two dimens tetrahedra three dimens paper focus primarili twodimension simplici mesh howev algorithm analys present applic dimens nonsimplici mesh paper present new parallel algorithm adapt construct nonuniform mesh algorithm well suit implement mediumgrain distributedmemori parallel comput intel delta algorithm base simplici bisect algorithm given rivara 15 algorithm scalabl expect run time slowli grow function triangl mesh work support part offic scientif comput us depart energi contract w31109eng38 address first author comput scienc depart univers tennesse knoxvil tn 37996 address second author mathemat comput scienc divis argonn nation laboratori 9700 south cass avenu argonn il 60439 demonstr perform algorithm present experiment result obtain intel delta result demonstr practic scientif calcul algorithm exhibit scalabl perform run time much smaller comput necessari entir solut method paper organ follow x2 review method adapt mesh refin x3 present algorithm analyz expect run time pram comput model mediumgrain distributedmemori version algorithm detail x4 discuss experiment result intel x5 final x6 summar research discuss possibl futur work 2 adapt refin method finit element method proven extrem effect comput approxim solut partial differenti equat pde focu adapt local refin strategi gener finit element mesh approach obtain much accur solut problem uniform mesh number element comput approxim solut pde consist three main task 1 construct finit element mesh 2 assembl spars linear system 3 solut linear system although explicitli discuss last two task must kept mind particular method local error estim requir approxim solut given element mesh parallel implement must rememb essenti adapt mesh algorithm integr parallel algorithm matrix assembl solut result linear system addit adapt strategi assign partit element vertic processor must updat modif mesh ensur continu effici execut matrix assembl linear system solut solv pde k estim error triangl maximum error triangl larger given toler base error estim determin set triangl k refin divid triangl k triangl necessari form k1 solv pde k1 estim error triangl endwhil fig 1 framework adapt solut pde consid gener adapt mesh algorithm 10 shown figur 1 begin assum initi element mesh given triangul consist geometri problem domain attent focus step algorithm current mesh k adapt refin step denot figur 1 suppos arbitrari subset triangl k k mark refin ment develop implement parallel algorithm construct new mesh k1 satisfi requir chang mesh keep present clear brief assum set k contain triangl mark refin unrefin howev softwar abl unrefin triangl previous refin refin mesh must maintain sever import properti given finit element approxim use first requir mesh k conform compat intersect two triangl k singl vertex line segment connect two vertic empti set side triangl call nonconform 0 vertic two endpoint triangl call compat none side 1 nonconform exampl conform nonconform mesh given figur 2 mesh conform one basic type finit element necessari otherwis sever special element type requir andor complic matrix assembl note howev use triangl restrict one linear finit element one use higherord basi function triangul fig 2 left conform mesh right nonconform mesh second requir mesh k grade smooth adjac triangl differ dramat area nonsmooth mesh could result finit element approxim far continu solut final requir angl mesh bound away 0 latter condit necessari discret error finit element approxim shown grow maximum angl approach 1 would like avoid small angl condit number matric aris mesh element shown grow 1 min smallest angl mesh 4 21 relat work number mesh refin algorithm shown maintain mesh properti given section briefli review three wide use refin method begin note two method use subdivid triangl bisect regular refin bisect vertex triangl connect midpoint opposit side triangl figur 3 form two triangl equal area regular refin midpoint side triangl connect figur 3 form four similar triangl fig 3 left triangl divid bisect right triangl divid use regular refin regular refin algorithm bank sherman weiser 3 use success softwar packag pltmg 2 triangl divid use regular refin temporari bisect select triangl make mesh conform bisect triangl merg mesh refin merg bisect triangl level method guarante triangl k1 either similar triangl 0 bisect triangl similar triangl 0 clearli angl k1 bound away 0 mesh refin algorithm 56 rivara 15 use bisect triangl across largest edg divid largest angl select divis across smaller edg approach shown yield triangul k whose smallest angl bound worst onehalf smallest angl 0 17 detail discuss algorithm given follow subsect newestnod algorithm sewel also base bisect without restrict bisect longest edg 10 algorithm triangl alway bisect use newest node propag inher bisect regular refin algorithm avoid refin triangl pair howev pair restrict possibl triangl may never abl refin experi run mitchel 10 difficulti aris mitchel compar three method seri numer experi found difficult choos consist superior algorithm 10 addit found three method superior use uniform refin except smooth problem given similar perform three method choos discuss bisect algorithm detail paper three reason 1 simpler implement standpoint regular refin algorithm 2 manifest propag inher bisect regular refin algorithm therefor demonstr abil algorithm handl propag 3 potenti unrefin node newestnod algorithm note ever algorithm applic three algorithm addit simpl modif parallel implement requir implement newestnod algorithm note william 19 develop voxel databas approach parallel mesh refin problem approach present follow section differ approach explicit parallel runtim bound addit design approach yield data structur suitabl assembl spars linear system aris mesh well solut spars linear system sophist iter direct spars factor method denot triangl yet refinedg children refin trianglesg bisect triangl q across longest edg bisect triangl r across nonconform edg incompat triangl embed place r i1 incompat triangl place q endwhil fig 4 bisect algorithm 22 bisect algorithm figur 4 present bisect algo rithm algorithm slightli alter eas present algorithm 56 present rivara 15 howev modifi algorithm yield final mesh origin algorithm present rivara fig 5 process bisect algorithm shown left right initi mesh shade triangl refin subsequ shade triangl refin compat illustr bisect algorithm give exampl propag figur 5 note refin could propag unmark triangl adjac mark triangl finish rivara howev shown loop termin finit number iter denot number iter l p gener l p depend characterist mesh refin rivara also shown triangl k emb 1 2 3 4 triangl result compat mesh k1 show possibl 2 3 4 result triangl figur 6 formal follow use result 15 theorem 21 execut bisect algorithm side triangl may divid fig 6 possibl divis singl triangl bisect algorithm proof vertic may creat triangl member q bisect longest edgeand vertex alreadi exist locat triangl q children exclud qm step thu may creat vertic therefor triangl contain edg e creat vertex e step vertic creat triangl children given creation vertex triangl b adjac share e would creat anoth vertex e member q addit children b creat vertic thu one vertex may insert edg refin 2 3 parallel adapt refin section present parallel algorithm adapt refin correctli implement bisect method illustr key aspect algorithm synchron necessari correct parallel execut bisect algorithm final give analysi algorithm pram comput model first need follow definit let ng set vertic mesh mg set polygon assum final mesh consist triangl ie conform mesh howev intermedi mesh nonconform henc allow nonconform element definit let e graph associ mesh edg g let dual graph associ mesh g refin algorithm formul within context dual graph begin pram analysi assum given time mani processor triangl triangl assign processor p analysi follow specif pram comput variant make differ one may assum crew pram model use synchron must manag execut algorithm maintain correct neighbor inform graph g dual graph modifi thu processor p must keep track current neighbor note correct neighbor inform g construct straightforward way illustr synchron requir correct execut parallel algorithm note two way neighbor inform corrupt u fig 7 left two processor creat vertex locat right possibl corrupt neighbor inform first two differ processor must creat vertic locat bisect triangl two vertic creat locat postprocess step must includ merg vertic elimin need postprocess proper synchron figur 7 see exampl two processor p 1 p 2 creat two vertic locat second must ensur outdat neighbor inform propag exam ple figur see triangl u 1 may believ triangl w neighbor rather triangl w 1 triangl u w refin simultan key observ synchron problem avoid triangl independ set refin simultan independ set subset triangl two triangl adjac triangl refin neighbor triangl notifi anoth independ set chosen refin base correctli updat neighbor inform follow subsect consid two possibl approach comput independ set parallel 31 two method comput independ set parallel purpos run time analysi refin algorithm review two approach comput independ set approach requir graph bound degreewhich true problem consid first approach use assign random number vertic graph obtain sequenc independ set slowli grow function size graph second approach comput graph color use color gener independ set advantag color approach guarante number color thu number independ set independ size graph bound degre graph howev comput color requir use first random number approach therefor color use use enough time justifi initi expens first consid use independ random number gener independ set suppos wish comput sequenc independ set set triangl 0 subset correspond subgraph 0 triangl 0 assign distinct independ random number aet choos independ set 0 accord follow rule 2 neighbor b either b aet aet b updat set triangl consider delet independ free gener next independ set sequenc use rule process continu 0 empti set expect number independ set given follow lemma lemma 31 let 0 bound degre undirect graph n vertic suppos vertex 0 assign uniqu independ random number aet consid sequenc independ set gener rule expect number independ set bound eolog nlog log n proof bound consequ corollari 35 7 2 consid second approach obtain sequenc independ set first note valid color graph use gener requir independ set recal function oe scolor oet thu sequenc independ set gener scolor assign triangl color one set effici comput color use parallel greedi heurist present 7 outlin heurist present figur 8 independ set requir heurist gener use random number method describ greedi step heurist color assign smallest consist color smallest color assign neighbor 0 choos independ set 0 color parallel choos smallest consist color oet 2 fig 8 outlin parallel greedi color heurist advantag use color gener independ set bound degre graph maximum number color independ size graph includ wellknown result follow lemma lemma 32 consid bound degre graph maximum degre delta parallel greedi color heurist comput scolor proof everi vertex color greedi heurist assign smallest consist color sinc worst everi neighbor differ color maximum color assign requir degre plu one thu maximum color assign greedi heurist vertex delta sum avail two method gener sequenc independ set requir parallel refin algorithm follow pram run time analysi turn best run time bound obtain maintain color dual graph compris triangl fine howev practic overhead associ maintain color advantag henc first approach use practic algorithm present x4 32 pram adapt refin algorithm figur 9 present pram algorithm avoid synchron problem discuss simultan refin triangl independ set note independ set use refin also use updat color updat requir dual graph modifi bisect triangl remaind section show algorithm avoid two possibl synchron problem fast run time base local error estim set triangl q 0 mark refin triangl j q 0 assign random number aet j subgraph dq 0 color parallel greedi color heurist finner loopg choos independ set q simultan bisect triangl embed across longest edg simultan bisect triangl embed r across nonconform edg new triangl j assign smallest consist new processor processor own bisect triangl updat inform processor own adjac triangl endwhil incompat triangl embed incompat triangl endwhil fig 9 parallel algorithm refin assum initi dual graph bound degre fact triangul surfac primari interest assum triangl edg share two triangl initi triangul case maximum degre initi conform mesh three fact bound degre use follow runtim proof also use practic design data structur softwar simplifi maximum number neighbor graph bound small constant show degre intermedi nonconform dual graph bound twice initi maximum degre lemma 33 dual graph bound degre time execut algorithm fact degre vertex never exce six result maximum number color requir time execut algorithm color seven less proof theorem 21 triangl edg divid therefor triangl doubl number neighbor lemma 32 maximum degre dual six seven color requir execut refin algorithm 2 degre dual graph remain bound note work assign processor one pass inner loop algorithm done constant time pram comput model show two possibl corrupt problem discuss occur lemma 34 neighbor inform dual graph correctli updat execut refin algorithm proof proof induct assum initi neighbor inform correct neighbor inform correct follow step refin step properti independ set none neighbor refin triangl 1 2 result bisect correct inform neighbor former neighbor therefor notifi refin given correct inform new neighbor thu follow step refin algorithm modifi neighborhood inform correct 2 vertic creat posit execut refin algorithm proof proof induct assum vertic uniqu initi follow step 1 vertex creat posit step two differ processor one two situat must occur 1 two processor must simultan refin edg 2 processor must refin previous refin edg notifi vertex creat edg first condit prevent definit independ setno adjac triangl refin simultan second condit prevent correct notif neighbor inform ensur lemma 34 2 final give bound expect run time refin algorithm theorem 36 recal l p number loop iter serial bisect algorithm figur 4 algorithm given figur 9 termin finit number step expect run time pram comput model eo logjq 0 j log logjq 0 j proof first consid expect run time comput initi color dq 0 lemma 31 time eo logjq 0 j log logjq 0 j next consid run time inner loop refin algorithm step defin graph set triangl refin step set f subset edg b f b 2 lemma 33 know alway bound degre graph also lemma 33 number color requir thu number independ set bound constant henc work assign processor inner loop bisect triangl updat color neighbor notif take time bound constant independ mesh size final must show take l p iter outer loop form conform mesh clearli everi triangl becom incompat step refin step sequenti algorithm figur 4 thu number iter outer loop algorithm ident l p henc total expect run time entir algorithm bound log logjq 0 j close section sever note run time analysi first sinc typic context initi mesh refin obtain previou level refin initi color step would requir instead color mesh could maintain level refin use inform pram run time algorithm would ol p fig 10 left shade triangl mark refin right result conform mesh refin note refin propag everi triangl mesh one final close analysi comment l p length propag point easi construct worst case exampl j exampl figur 10 give exampl gener illustr worst case behavior howev anoth way look exampl assum particular mesh gener previou refin start singl triangl case averag length propag l p level refin actual constant furthermor note experiment result present x5 averag number independ set requir obtain conform mesh appear bound small constant independ size mesh thu believ possibl worst case behavior l p omin problem appear could practic implement 4 distributedmemori implement use practic parallel comput must modifi pram algorithm analyz preced section rather assign singl triangl vertex processor assign set vertic triangl processor vertic v partit disjoint subset own subset v j choos partit vertic rather triangl found make finit element evalu mesh refin spars matrix assembl solut necessari straightforward effici base partit v determin partit disjoint subset processor j own subset j practic one assum least one vertex triangl j set v j commun purpos processor j store set triangl set triangl adjac triangl j dual graph set triangl contain vertex v j addit processor j store set vertic set vertic contain triangl given set processor j inform necessari evalu finit element vertic v j assembl complet row andor column spars matrix associ vertex v j perform parallel refin algorithm yet specifi triangl j illustr set processor j figur 11 figur partit vertic geometr cut repres orthogon dash line vertic interior four dash line assign processor jthe set v j shown fill vertic set set unfil fill vertic j set shade triangl set unshad shade triangl fig 11 illustr set maintain processor j set vertic assign processor j v j shown set fill vertic set shade triangl set j union set shade unshad triangl union set fill unfil vertic figur 12 present practic version pram algorithm given figur 9 algorithm ensur vertic creat locat set j processor j correct note modifi algorithm triangl vertex creat processor j processor j owner inner outer loop pram algorithm combin singl loop greater effici separ loop allow clearer present runtim bound necessari section base local error estim initi set triangl q mark refin triangl 2 q assign random number aet q r 6 choos independ set triangl q r processor j bisect triangl j embed q across longest edg processor j bisect triangl j embed r across nonconform edg new triangl b new random number aet b chosen new triangl b creat processor j ad j new vertex v k creat processor j ad v j triangl 2 j notif bisect sent processor l adj processor receiv notif updat set incompat triangl embed w incompat triangl r endwhil fig 12 practic parallel algorithm refin algorithm independ set chosen accord slightli differ rule rule use pram algorithm triangl j neighbor b one follow hold c aet aet b modif allow two triangl processor refin step comput independ set requir commun processor necessari inform comput commun random number necessari seed given pseudorandom number gener use determin aet base sole thu commun necessari algorithm notif bisect global reduct requir determin whether effici notif messag pack processor receiv one messag anoth processor time loop modifi algorithm figur 12 use essenti synchron scheme present x3 collis avoid neighbor separ processor simultan bisect thu follow theorem theorem 41 chang made processor trianglesvertic set v j processor j receiv set kept updat throughout algorithm figur 12 proof set j v j updat correctli processor j bisect triangl set creat new vertic set chang triangl vertic attribut chang triangl vertic directli commun algorithm remain portion attribut v j account bisect anoth processor notif bisect sent receiv final show vertex neighbor inform correct note neighbor inform correct subgraph induc neighbor inform contain subgraph g induc must also correct 5 experiment result section comput result present demonstr parallel refin algorithm scalabl execut time neglig compar comput requir solv pde parallel refin algorithm implement subroutin librari call applic program chameleon 5 use achiev portabl across sever architectur includ intel delta focu section note addit refin algorithm subroutin librari also includ similarli construct parallel unrefin algorithm unrefin algorithm necessari mani applic includ one use perform similar refin algorithm result includ well result present parallel refin algorithm two differ twodimension pde poisson equat equat linear elast problem solv two differ geometri 51 test problem first set test problem model poisson equa tion squar domain linear finit element approxim use function fx gaussian charg distribut center point x domain mesh select refin accord energi norm 10 estim local error triangl less specifi toler point x move sever time new solutionmesh found old solutionmesh movement requir signific mesh refin around new charg posit defin around old posit remaind mesh remain rel constant parallel conjug gradient method precondit incomplet factor use solv spars linear system aris 6 second problem consid linear elast equat plane stress problem given without inclus load xy xy u v x displac respect equat solv rectangular region central hole one side region constrain zero displac constant traction appli opposit side linear finit element use approxim equat mesh select refin accord energi norm local error estim triangl less specifi toler linear system solv use code use poisson problem problem set initi coars mesh approxim 200 node except run 128 256 node case initi coars mesh approxim 2 4 time larger respect problem care choos maximum toler local error estim one determin maximum number vertic solut mesh follow two problem set construct final solut mesh success problem roughli twice mani verticestriangl previou problem inform two problem sequenc given tabl 1 2 tabl sequenc test problem base poisson problem maximum number maximum number ratio area vertic triangl largest triangl name adapt mesh adapt mesh smallest triangl poisson1 2673 5268 256 poisson2 5176 10260 512 poisson3 10238 20330 512 poisson4 20296 40412 1024 poisson6 80116 159872 2048 poisson7 159758 318948 2048 sequenc test problem base linear elast equat plane stress problem maximum number maximum number ratio area vertic triangl largest triangl name adapt mesh adapt mesh smallest triangl tabl 3 4 give number refin step requir problem solut process refin step consist find approxim solut pde current mesh k solv spars linear system aris finit element model comput estim local error triangl refin k accord estim obtain conform mesh k1 one observ unexpectedli take mesh refin step construct larger mesh addit number iter loop algorithm figur 12 given number iter least l p perhap slowli grow function mesh size use random number rule gener independ set one note number loop iter need slowli grow function number processor problem size result indic one gener achiev scalabl perform may expect theorem 36 poisson problem set charg locat move twice movement meant two solut step mesh refin around charg also unrefin around old charg posit howev still refin operationsstep unrefin oper unrefin necessari elast problem set load function unchang good partit vertic problem necessari new algorithm perform effici mani good partit method avail geometr partit algorithm 8 chosen work figur 13 show averag number partit adjac given partit inform give sens number processor processor share triangl must therefor exchang inform figur 14 show percentag total triangl edg endpoint two differ processor data give sens number triangl number refin step loop iter sequenc poisson test problem number number averag number name processor refin step loop iter poisson5 poisson6 poisson8 128 24 246 tabl number refin step loop iter sequenc linear elast test problem number number averag number name processor refin step loop iter processor must coordin anoth processor note valu initi rise rapidli one would expect approxim processor use larger number processor valu increas slowli 52 experi experi run 256 node intel delta parallel comput meshconnect 16 theta 32 array intel i860 microprocessor 1 experi report time given second oper rate indic number bisect vertex delet note vertex delet correspond unrefin constitut small percentag total per second 1 note constraint amount time avail us delta 512processor case run believ howev result convincingli demonstr effect parallel refin algorithm poisson number neighbors6numb processor fig 13 averag number partit partit adjac final mesh poisson 100 2003number processor percentag crossedg fig 14 percentag crossedg final mesh demonstr scalabl new algorithm implement design problem test set nearli equal number vertic final mesh assign processor fact seen tabl 1 2 show mani processor problem run size final mesh test problem refin local region mesh therefor processor refin work other load imbal reflect tabl 5 6 give averag number oper per processor per step averag maximum number oper singl processor per step averag number oper fall number processor increas decreas result refin step taken achiev number vertic per processor final mesh averag maximum number oper increas mesh size increas refin concentr size area limit number processor work recal entir mesh repartit refin step thu concentr new element continu redistribut processor fewer element howev even given handicap result demonstr algorithm perform quit well figur 15 show averag number refin oper per second per processor function number processor number refin oper poisson problem sequenc averag number averag number oper per maximum number name processor processor oper per processor poisson5 poisson6 poisson8 128 111 573 poisson 100 200 number processors300700 number triangl per second fig 15 averag number triangl refin per processor per second refin occur uniformli processor one could expect rate nearli constant howev test problem practic problem case figur 16 show interest rate maximum number refin oper per second individu processor one would expect rate remain constant nearli algorithm perfectli scalabl poisson problem set one see littl degrad maximum refin rate one might expect degrad result increas number neighbor processor must exchang inform number processor increas howev possion problem set increas number neighbor offset rapidli increas maximum number oper per processor given tabl 5 elast problem set one observ expect degrad maximum number oper per processor increas moder prior reach processor maximum rate refin rapidli chang number refin oper linear elast problem sequenc averag number averag number oper per maximum number name processor processor oper per processor poisson 100 200 number processors300700 number triangl per second fig 16 maximum number triangl refin per second individu processor increas commun requir number processor neighbor percentag crossedg increas reach 16 processor number processor neighbor percentag crossedg stabil one see approxim 20 degrad rate refin 16 256 processor result given figur 17 demonstr reason complex set problem time solv linear system domin time refin mesh number processor fact total refin time alway less 4 percent total execut time note linear system solv level refin exampl total execut time shown 128 processor figur 17 includ assembl solut 13 spars linear system time repres white region bar graph compos almost entir sum time requir repartit mesh level refin partit time includ time number processor time sec execut total matrix solut time refin time partit etc fig 17 comparison refin time time requir aspect problem solut linear elast problem sequenc move vertic triangl data associ processor note implement partit heurist preliminari believ time significantli reduc examin total run time detail consid one problem elastic9 run 256 processor figur show time requir solv linear system number nonzero assembl matrix function refin level initi matrix size doubl everi level refin sinc triangl bisect refin step howev last sever refin level small area mesh refin result interpol solut previou mesh excel initi guess solut refin mesh small number conjug gradient iter requir obtain solut satisfi specifi toler rel residu problem elastic9 run 256 processor show figur 19 time requir refin mesh function refin level figur show number vertic ad mesh level refin note refin time continu increas number vertic reach maximum effect explain note area comput domain refin occur becom confin fewer processor mesh refin recal figur 16 maximum rate refin processor constant thu refin occur smaller number processor averag rate refin wors higher level refin behavior explain linear system solut time solut time matrix million refin level fig 18 time requir solv linear system number nonzero assembl linear system level refin problem elastic9 run 256 processor intel vertic addedsec total thousand creat vertic refin refin level fig 19 refin time number vertic ad level refin problem elastic9 run 256 processor intel decreas averag rate refin function number processor shown figur 15 6 conclud remark describ parallel algorithm adapt refin mesh algorithm shown run provabl fast time pram model comput addit describ effici method implement algorithm practic distributedmemori parallel comput gave result two problem demonstr scalabl natur algorithm result given paper twodimension triangular mesh use independ set parallel synchron howev gener threedimension case well refin algorithm next logic step work develop theoret result threedimension tetrahedr well practic parallel implement three dimens addit note use higherord basi function straightforward methodolog fact includ function current parallel implement 9 r pltmg softwar packag solv ellipt partial differenti equa tion refin algorithm data structur regular local mesh refin condit finit element matric gener nonuniform mesh user manual chameleon parallel program tool comparison adapt refin techniqu ellipt problem algorithm adapt refin triangular element mesh data structur adapt finit element mesh refin algorithm refin triangular grid suitabl adapt multigrid techniqu lower bound angl triangl construct bisect longest side finit element program automat usercontrol mesh grade dynam solutionadapt unstructur parallel solver tr ctr j p surez p abad plaza padrn comput aspect refin 3d complex mesh proceed intern confer comput method scienc engin p615618 septemb 1216 2003 kastoria greec jorn behren adapt atmospher model scientif comput best comput scienc engin v7 n4 p7683 juli 2005 miguel padrn jo p surez ngel plaza adapt techniqu unstructur nest mesh appli numer mathemat v51 n4 p565579 decemb 2004