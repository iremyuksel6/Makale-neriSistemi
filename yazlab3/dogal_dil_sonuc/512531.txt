flowsensit type qualifi present system extend standard type system flowsensit type qualifi user annot program type qualifi infer check annot correct system type qualifi model flowsensitivelyth underli standard type unchang allow us obtain effici constraintbas infer algorithm integr flowinsensit alia analysi effect infer idea linear type system support strong updat demonstr use flowsensit type qualifi find number new lock bug linux kernel b introduct standard type system flowinsensit mean valu type everywher howev mani import program properti flowsensit check properti requir associ dierent fact valu dierent program point paper show extend standard type system userspecifi flowsensit type qualifi atom properti refin standard type system user annot program type qualifi infer check annot correct critic featur approach flowsensit restrict type qualifi decor typesth underli standard type unchangedwhich allow us obtain ecient type infer algorithm type qualifi captur natur class flowsensit properti ecient infer type qualifi allow us appli implement larg code base user annot exampl type qualifi consid type file use io oper file system file oper use certain way file must open read read must open write written close file access express rule flowsensit type qualifi introduc qualifi open read write readwrit close type open file describ file open unknown mode type read file respect write file file open read respect write type readwrit file file open read write type close file close file qualifi captur inher flowsensit properti exampl close function take open file argument chang file state close file five qualifi natur subtyp relat readwrit read open readwrit write open qualifi close incompar qualifi file may close open qualifi introduc subtyp common framework support subtyp directli addit set qualifi user defin partial order qualifi result build recent advanc flowsensit type system 5 7 25 well previou work flowinsensit type qualifi 16 24 main contribut work practic flowsensit type infer al gorithm contrast type check system 5 7 flowsensit type infer algorithm made practic solv constraint lazili flowsensit analysi explicitli form model store everi program point prohibit expens larg code base gener constraint system linear size typeannot program solv portion constraint need check qualifi annot algorithm abl scale larg exampl final system design sound aim prove absenc bug heurist good find bug exampl believ system could integr java sound manner shown sound restrict section 4 key new construct system see technic report 15 sinc remaind system view simplif 25 believ straightforward prove sound full type system use techniqu section 5 report experi two applica tion analyz lock behavior linux kernel analyz c stream librari usag applic code system found number new lock bug includ extend across multipl function even one case across multipl file 11 system architectur flowsensit qualifi infer algorithm sever interlock compon first give overview major piec fit togeth expect programm interact type sy tem ad qualifi annot review result infer thu seek system support ecient infer straightforward programm understand use type infer system integr alia analysi eect infer idea linear type system use flowinsensit alia analysi construct model store alia analysi infer abstract locat result program express express evalu abstract locat may alias use eect infer 20 calcul set abstract locat express e might use es evalu eect use analyz function call restrict see eect infer done simultan alia analysi model state program point abstract store map abstract locat type use abstract locat flowinsensit alia analysi allow type qualifi underli standard type chang execut repres abstract store use constraint formal store constructor model alloc updat function call store constraint c1 c2 model branch program point repres store c1 program point repres store c2 comput linear 25 abstract locat program point inform abstract locat linear type system prove correspond singl concret locat everi execut otherwis nonlinear perform strong updat 4 locat linear weak updat locat nonlinear strong updat chang qualifi locat type arbitrarili weak updat chang qualifi comput linear import interest flowsensit properti requir strong updat system describ far seriou practic weak type infer may fail locat strong updat need may infer nonlinear address new annot restrict express restrictx e e introduc new name x bound valu e name x given fresh abstract locat among alias e x valu deriv x may use within e thu locat x may linear henc may strongli updat even locat e nonlinear use eect enforc correct restrict expressionssound requir locat e appear eect e use eect increas precis analysi express e refer locat determin examin eect e access valu store analysi simpli flow store preced e one immedi e without pass e e applic function call mani dierent context idea make e fulli polymorph locat e refer 2 relat work discuss three thread relat work type system dataflow analysi tool find bug softwar type system type system inspir region alia type check system design lowlevel program 5 25 29 two recent languag propos vault 7 cyclon 17 adapt similar idea check highlevel pro gram languag base type check requir programm annot program type contrast propos simpler less express monomorph type system design ecient type system incorpor eect infer 20 32 gain measur polymorph recent work vault 12 includ construct focu similar restrict type state system nil 27 one earliest incorpor flowsensit type check xu et al 33 use flowsensit analysi check type safeti machin code type system develop java byte code 22 26 also incorpor flowsensit check initi use allow reus local variabl dierent type igarashi kobayashi 18 propos gener framework resourc usag analysi associ trace object specifi valid access object check program satisfi trace specif provid infer algorithm although unclear ecient practic sinc invok substep unspecifi algorithm check trace set valid flanagan freund 13 use type check system verifi java lock behavior java lock acquir releas accord lexic disciplin model lock linux kernel section 5 must allow non lexic scope lock acquir releas subset system consist alia analysi eect infer seen monomorph variant region infer 28 improv region infer report 2 much expens precis method comput linear dataflow analysi although typebas approach relat dataflow analysi 1 dier classic dataflow analysi sever way first gener constraint store type model program thu distinct forward backward analysi inform may flow direct constraint resolut depend specifi qualifi partial order second explicitli handl pointer heapalloc data alias strongweak updat third distinct interprocedur intraprocedur analysi system strongweak updat distinct first describ chase et al 4 sever techniqu allow strong updat propos dataflowbas analysi program pointer among 3 8 31 jagannathan et al 19 present system mustalia analysi higherord languag linear comput system correspond singl comput use similar techniqu gain polymorph flow bind around function call anoth recent system check typest properti esp 6 like propos esp incorpor conserv alia analysi also signific dierenc esp directli base dataflow analysi incorpor pathsensit symbol execut compon esp use check correct c stream librari usag gcc bugfind tool ast toolkit provid framework pose userspecifi queri abstract syntax tree annot type inform ast toolkit success use uncov mani bug 30 metalevel compil 9 system find bug program programm specifi flowsensit properti finit state automaton program analyz travers control path trigger state transit automata particular action program statement system warn potenti error automaton enter error state 9 intraprocedur analysi lock usag linux kernel uncov mani local lock bug typebas system found interprocedur lock bug extend across multipl function even one case across multipl file section 5 1 newer work metalevel compil 10 includ interprocedur dataflow unclear interprocedur dataflow analysi handl alias lclint 11 dataflowbas tool check properti program use lclint programm add extra annot program lclint perform flowsensit intraprocedur analysi use programm 1 bug found newer version linux kernel examin 9 direct comparison possibl though bug found pure intraprocedur analysi annot function call escjava 14 tool find error java program escjava use sophist theoremprov technolog verifi program properti includ rich languag program annot 3 type system describ type system use callbyvalu lambda calculu extend pointer type qualifi annota tion sourc languag e x n xe e1 e2 ref e e e1 e2 assert q check q x variabl n integ xe function argument x bodi e express e1 e2 applic function e1 argument e2 express ref e alloc memori initi e express e derefer pointer e express e1 e2 assign valu e2 locat e1 point introduc qualifi sourc languag ad two new form 16 express assert q assert es toplevel qualifi q express check q type check es toplevel qualifi q type infer algorithm divid two step first perform initi flowinsensit alia analysi eect infer second gener solv store qualifi constraint comput linear 31 alia analysi effect infer present flowinsensit alia analysi eect infer translat system rewrit sourc express express decor locat type eect target languag assert q check q target languag extend sourc languag syntax two way everi alloc site ref e annot abstract locat alloc function annot type paramet eect l call function eect union intersect eect variabl repres unknown set eect eect infer solv eect constant stand either read write alloc locat simplic paper distinguish three possibl eect stand although implement foreshadow flowsensit analysi pointer type written ref maintain separ global abstract store ci map locat type ci locat contain data type type infer requir also requir ci contain eect l call function figur 1 give rule perform alia analysi effect infer translat sourc program target languag translat system prove judgment mean type environ express e translat express e type evalu e may eect l ref deref app figur 1 type alia eect infer set locat appear type locst locsref locsci locst1 l t2 assum loc empti equat construct type defin loc locst briefli discuss rule figur 1 var int standard lambda calculu variabl rvalu lvalu access variabl eect ref alloc fresh abstract locat add eect alloc eect record ci type locat point deref evalu e yield valu type standard type infer comput locat e point creat fresh locat equat type type ref look type locat ci add eect set assign write locat note type e2 type e1 point equat type contain locat forc potenti alias locat model one abstract locat lam defin function annot function eect function bodi type paramet function type alway eect write xs cell f z checki qc sourc program f z checki qc b target program c x figur 2 exampl alia eect analysi variabl arrow make eect infer easier notic creat function eect potenti alloc closur count eect closur updat app appli function argument eect appli e1 e2 includ eect call function e1 repres notic e1 argument type constrain equal type e2 forc possiblyalias locat abstract locat assert check translat unchang target languag qualifi flowsensit model first flowinsensit step algorithm hide eect pure local state evalu e produc eect locat neither access subsequ com putat thu conserv approxim set eect may visibl loc locst intersect eect l set eect may visibl increas precis eect infer turn increas precis flowsensit type qualifi infer although syntact rule need appli per function bodi 15 figur 2 show exampl program translat use syntact sugar construct encod languag eg assum primit combin appropri type exampl constant qualifi qa q b qc discret partial order qualifi incompar f turn wish check qualifi qc check succe model updat strong updat figur 2 assign x z distinct locat x z respect f call argument z system polymorph locat alia analysi requir type z w match thu w given type ref z final notic sinc x pure local bodi f use rule analysi hide eect x eect f z f write paramet w type ref z precis f eect z let n size input program appli rule figur 1 gener constraint system size use suitabl represent loc locst see 15 resolv type equal constraint usual way unif take onn time invers ackerman function remain constraint eect constraint form l solv constraint ondemandin next step algorithm ask queri form l answer queri singl locat time 15 32 store qualifi type next perform flowsensit analysi check qualifi relat annot second step algorithm take input program decor type locat eect infer algorithm figur 1 throughout step treat abstract locat eect l first step constant analyz input program use extend type shown int ref c l c mergec c l filterc l qualifi type standard type qualifi insert everi level qualifi q either qualifi variabl stand current unknown qualifi constant qualifi b specifi user assum suppli partial order among constant qualifi flowsensit analysi associ store c program point contrast flowinsensit step use one global store c give type loca tion function type extend c l c c describ store function invok describ store function return locat store associ linear three linear 0 unalloc locat 1 linear locat admit strong updat nonlinear locat admit weak updat three linear form lattic 0 1 addit linear expect 0 store vector assign type linear everi abstract locat comput alia analysi call vector ground store g ground store write g type g write g lin linear g rather explicitli associ ground store everi program point repres store use constraint formal base case model unknown store use store variabl relat store consecut program point either store constructor see build new store old store store constraint gener branch program point repres store c1 program point repres store c2 solut system store constraint map store variabl ground store assign store see type solut satisfi system store constraint constraint c1 c2 ref figur 3 store compat rule accord rule figur 3 solut satisfi rule figur 4 figur 3 constraint store yield constraint linear type turn yield constraint qualifi store constraint resolut algorithm exploit fact interest qualifi relationship solv littl expens store constraint possibl see section 34 ref requir locat left righthand side alia analysi enforc properti correspond standard requir subtyp becom equal pointer constructor emphas step treat abstract locat constant never attempt need unifi two distinct locat satisfi ref fun requir eect constrain function type match exactli would also sound allow eect lefthand function subset eect righthand function figur 4 formal four kind store constructor show solut behav construct store store allocc store c except locat alloc alloc locat aect type store increas linear locat one store mergec c l combin store c c accord eect l l mergec c l assign type c otherwis mergec c l assign type c linear definit similar store filterc l assign type linear c locat l type locat undefin linear locat 0 final store assignc store c except locat updat type allow subtyp step nonlinear c figur 4c requir type assignc least type c correspond weak updat implement requir equal put togeth intuit linear type assignc otherwis type sc leastupp bound 33 flowsensit constraint gener figur 5 give type infer rule system system judgment form c mean type environ initi store type lin otherwis lin l lin l b linear lin sc sassignc store assignc c weak updat figur 4 extend solut construct store evalu e yield result type new store c write c type associ store c discuss comput c section 34 use function spt decor standard type fresh qualifi store variabl briefli discuss rule figur 5 var int standard int pick fresh qualifi variabl annot ns type ref add locat store c yield store allocc type e constrain compat type c 2 deref look type es locat current store c rule qualifi may appear es type qualifi check check see assign produc new store repres assign type locat lam type check function bodi e fresh initi store paramet x bound type fresh qualifi variabl altern formul track type e part construct store alloc constrain compat c alloc nonlinear c c c c ref ref c deref c e1 c e1 app c c assert c c check figur 5 constraint gener rule app constrain 2 ensur e2 type compat e1 argument type constraint ensur current state locat e1 use captur eect set l compat state function e1 expect final store merg c l join store c function call result store function intuit rule give us lowcost polymorph function act join point locat use assert add qualifi annot program check check infer toplevel qualifi e compat expect qualifi q figur 6 show store store constraint gener exampl program slightli simplifi graph clariti f initi store f final store use undirect edg store constructor direct edg c1 c2 constraint c1 c2 step constraint gener model alloc x store allocx locat x initi 0 given type 0 int fresh qualifi variabl 0 ref gener constraint 0 int x requir type 0 compat x model alloc initi z sim ilarli construct three assign store repres assign statement give 3 4 type 3 int 4 int respect 3 4 fresh qualifi variabl recurs call f construct filter add constraint merg store repres state recurs call f return join two branch merg filter assign assign qc int assign z 4 int alloc x 3 int alloc z alloc x qa int allocx figur store constraint exampl condit make edg notic cycl due recurs state flow merg turn flow final qualifi check requir qualifi qc 34 flowsensit constraint resolut rule figur 5 gener three kind constraint qualifi constraint q q subtyp constraint store constraint c righthand side store constraint alway store variabl set type qualifi constraint solv om time use wellknown techniqu 16 23 section focu comput solut set store constraint analysi precis locat possibl nonlinear recal linear natur form partial order 0 1 thu given set construct store store constraint perform least fixpoint comput determin sc lin initi assum everi store locat linear 0 exhaust appli rule figur 4b rule lin reach fix point last rule deriv figur 3 implement comput sc lin singl pass store constraint use tarjan stronglyconnect compon algorithm find cycl store constraint graph cycl contain one alloc locat set linear store cycl given algorithm comput sc lin principl solv impli type constraint use follow simpl procedur store variabl initi map 1 spci 1 n spci n store assignc initi spci therebi assign fresh qualifi type everi locat everi program point replac use c figur 5 sc use logic figur 4a appli follow two closur rule constraint gener lin sc sassignc store assignc given program size n worst case naiv algorithm requir least n 2 space time build gener necessari type constraint cost high small exampl reduc cost practic take advantag sever observ mani locat flowinsensit locat never appear lefthand side assign type chang thu give one global type instead one type per program point imper languag c c java function paramet major sourc flowinsensit locat languag paramet lvalu associ memori locat initi often never subsequ chang ad extra store variabl trade space time comput sc construct store c must deconstruct recurs reach variabl store assign see figur 4a repres eect constraint compactli linear space deconstruct filter l merg l may requir potenti linear time comput check whether l recov ecient lookup replac c fresh store variabl ad constraint c rather comput sc comput requir map lookup cours must use space store howev shown often avoid cost complet appli transform store construct constraint infer everi store need everi locat rather assum contain locat add need locat lazili add locat first time analysi request whenev constraint c c sc store construct filter merg tend stop propag locat save space eg filterc l l propag c extend idea qualifi variabl infer maintain set possibl qualifi constant valid solut set contain everi constant qualifi uninterest ie constrain qualifi variabl otherwis interest type interest qualifi interest otherwis uninterest modifi closur rule follow sc st sc interest lin sc sassignc assignc st sc sassignc interest way locat bound uninterest type need propag constraint graph figur 7 give algorithm lazi locat propag associ mark assignc initi mark set indic locat bound uninterest type qualifi variabl appear associ pair similarli assign store constraint resolut set possibl solut chang call propagatec propag turn store constraint graph propag c call alreadi mark c noth otherwis backprop forwardprop make appropri constraint sc sc everi store c reachabl c step may add c c store variabl type constraint backprop forwardprop gener may trigger subsequ call propag consid run exampl figur 8 show locat qualifi propag store constraint graph dot edg graph indic infer constraint discuss clariti omit alloc edg summar dash line base type four type constraint figur 6 shown direct edg figur 8 exampl constraint 0 int x reduc constraint 0 x direct edg 0 x ad constraint caus propag constraint among variabl notic assign type 3 int x also caus propag constraint qa int allocx reduc qa int reduc qa constraint trigger propag propagatey first push backward filter store sinc l propag stop next push forward graph stop reach store assign qc int forward propag assum strong updat contain interest type propag store forward graph one path propag stop filter path yield constraint qc notic constraint remain satisfi constraint q b z trigger propag step howev time z l backward propag reach filter must continu eventu reach assign z 4 int add constraint 4 z turn trigger propag propag step reach add z gener constraint 4 z final determin assign store x linear z nonlinear linear comput use alloc store shown thu updat z weak updat yield constraint z 4 exampl illustr three kind propag locat x never interest propag graph locat propag propag stop strong updat also filter rule figur 1 abl prove pure local f locat z hand pure local f thu instanc z conflat z admit weak updat case c alreadi mark mark forwardpropc c c backpropc mark assignc mark assignc forwardpropc case c alreadi allocc backpropc backpropc els backpropc backpropc els backpropc c alreadi c c construct c case c allocc l forwardpropc l forwardpropc filterc forwardpropc assignc forwardpropc figur 7 lazi locat constraint propag 4 restrict mention introduct type infer may fail locat strong updat need may nonlinear practic major sourc nonlinear locat data structur exampl given link list l alia analysi often distinguish llock lnextlock henc like nonlinear solut problem add new form restrict x e1 e2 languag intuit declar alias e1 x copi deriv x use within qc merg z z filter assign assign qc assign z 4 x 3 x x z z qa figur 8 constraint propag e2 exampl consid restrict x valid invalid first assign x valid assign forbidden restrict check restrict use follow type rule integr first infer pass figur 1 restrict x e1 e2 restrict x e 1 e restrict bind x type fresh abstract locat distinguish derefer x derefer alias e1 constraint l2 forbid locat dereferenc e2 notic derefer within e2 allow requir escap scope e2 loc locsci locst2 also add eect set translat restrict target languag annot locat x bound full discuss restrict includ sound proof found technic report 15 use restrict local recov strong updat key observ locat e1 locat x dierent thu even linear linear 1 therefor within bodi e2 may abl perform strong updat scope restrict end may need weak updat exampl suppos wish type check state chang lock deep within data structur locat lock nonlinear follow atyp linux kernel code nonlinear loc assum type system determin contain access alias lock alia lock nonlinear locat modifi code type check follow restrict lock abcdlock flowsensit step use follow infer rule restrict c restrict x e1 e2 2 restrict rule infer type e1 pointer locat creat new store c locat x alloc initi c ad type environ evalu e2 final result store store c potenti updat assign content 5 experi test idea practic built tool cqual implement infer algorithm use cqual programm annot c program type quali fier ad c syntax way const 16 tool cqual analyz singl file whole program standard typebas analysi analyz singl file programm suppli type signatur extern function variabl use cqual check two program properti lock 249 linux kernel devic driver use c stream librari implement sound unsaf featur c type cast variableargu function illdefin pointer arithmet current make attempt track eect featur alias except special case type cast result malloclik function combin system enforc memori safeti ccure 21 implement would sound implement allow strong updat locat contain function improv ecienc never need recomput sc lin weak updat add constraint store addit observ alloc aect linear type read write aect type linear thu implement also improv precis analysi distinguish read write alloc eect omit detail due space constraint analysi result present user emacsbas user interfac sourc code color accord infer qualifi type error hyperlink sourc line error first occur user click qualifi view path constraint graph show type error de tect found abil visual constraint solut term origin sourc syntax use ful essenti understand result infer detail idea user interfac found 24 51 linux kernel lock linux kernel includ two primit lock function use extens devic driver void spinlockspinlockt lock void spinunlockspinlockt lock use three qualifi lock unlock unknown check lock behavior subtyp relat lock unlock assign spin lock type c ref assignc lock spinlock unlock spinlock omit function qualifi sinc irrelev type spin lock requir lock pass argument unlock see claus chang lock upon return signatur spin unlock lock unlock exchang practic give spin lock type signatur suppli cqual follow definit void spinlockunlock spinlockt lock lock spinlockt chang typex like assign someth type except rather give explicit righthand side give type righthand side case programm need suppli bodi spin lock inlin assembl code sinc implement current lack parametr poli morphism inlin call spin lock spin unlock use type signatur check three kind error deadlock acquir lock alreadi held thread attempt releas lock alreadi releas thread attempt acquir releas lock unknown state analyz 513 whole devic driver modul whole modul includ file make singl driver modul must meet wellspecifi kernel interfac model main function nondeterminist call possibl driver function regist kernel also separ analyz 892 driver file make whole modul experi remov qualifi lock unlock incompar made optimist assumpt environ file invok examin result 64 513 whole devic driver modul 892 separ analyz driver file found 14 appar new lock bug includ one span multipl file five appar bug function tri acquir lock alreadi held function call chain lead deadlock exampl emu10k1 modul contain deadlock omit void return emu10k1muteirqhandlerstruct emu10k1card card struct patchmanag spinlockirqsavemgrlock flag emu10k1setossvolcard emu10k1setossvolstruct emu10k1card card emu10k1setvolumegprcard emu10k1setvolumegprstruct emu10k1card card struct patchmanag spinlockirqsavemgrlock flag note detect error requir interprocedur analysi one goal understand often system fail type check real program categor everi type error separ file analysi driver file experi 52 file fail type check 11 file lock bug sometim one remain 41 file type error half type error due incorrect assumpt interfac function type error elimin move whole modul analysi remain type error fall two main categori mani case problem alia analysi strong enough type check program anoth common class type error aris lock condit acquir releas case lock acquir predic p true lock releas p test check whether lock held system path sensit tool signal type error point path lock acquir join path lock acquir sinc use singl file experimentsin whole modul analysi error detect later attempt acquir releas lock state exampl could rewritten littl eort pass type system opinion would usual make code clearer saferth duplic test p invit new bug program modifi even improv expect dynam correct program type check futur work propos follow solut qualifi repres unknown state use inform constraint automat insert coercion need execut coercion perform runtim test verifi lock correct state thu approach introduc dynam type check situat prove safeti static 513 whole modul 196 contain type error mani duplic share code examin 64 type errorcontain modul discov major sourc type error multipl alias locat one alia actual use code interest surprisingli larger program whole modul problem spuriou alias optimist singlefil analysi ad restrict annot hand 64 modul look includ emu10k1 modul yield largest number fals posit use restrict elimin fals posit modul occur nonlinear locat could strongli updat support belief restrict right tool deal necessarili conserv alia analysi current ad restrict hand burdensom requir rel larg number annot leav problem automat infer restrict annot futur work 52 c stream librari mention introduct c stream librari 0k 100k 200k 300k 400k 500k 600k 700k 800k size preprocess line code time sec flow sensit flow insensit parsing1003005007009000k 100k 200k 300k 400k 500k 600k 700k 800k size preprocess line code space mbyte figur 9 resourc usag whole modul analysi interfac contain certain sequenc constraint ex ampl file must open read read special properti c stream librari result fopen must test null use fopen may may succeed class c stream librari usag error tool detect includ file use without open check null file open access incompat mode file access close omit detail due space constraint tri tool two applic program man15h1 sendmail8116 primarili interest perform tool complex applic see expect find latent stream librari usag bug matur program howev find one minor bug sendmail open log file never close circumst 53 precis effici algorithm describ section 34 care design limit resourc usag figur 9 show time space usag whole modul analysi versu preprocess line code 513 linux kernel modul experi done dual processor 550 mhz pentium iii 2gb memori run redhat 62 divid resourc usag c pars type check flowinsensit analysi flowsensit anali si flowinsensit analysi consist alia eect infer figur 1 togeth flowinsensit qualifi infer 16 flowsensit analysi consist constraint gener resolut describ section 33 34 includ linear comput graph report time space phase includ time space previou phase graph show space overhead flowsensit analysi rel small appear scale well larg modul modul space usag flowsensit analysi within 31 space usag flowinsensit analysi run time analysi variabl absolut run time within factor 13 flowinsensit run time analysi sendmail8116 175193 preprocess sourc line took 288 second 264mb man15h1 16411 preprocess sourc line took 185 second 32mb result suggest algorithm also behav ecient check c stream librari usag 6 conclus present system extend standard type system flowsensit type qualifi given lazi constraint resolut algorithm infer type qualifi annot shown analysi eectiv practic find number new lock bug 7 r better static memori manag improv regionbas analysi higherord languag extend form must alia analysi dynam alloc analysi pointer structur type memori manag calculu capabl enforc highlevel protocol lowlevel softwar check system rule use systemspecif bug deviant behavior gener approach infer error system code static detect dynam memori error adopt focu practic linear type imper program extend static check java check programmerspecifi nonalias theori type qualifi cyclon user manual resourc usag analysi simpl tractabl constraint finit semilattic detect format string vulner type qualifi alia type type system java bytecod subroutin program languag concept enhanc softwar reliabl implement type callbyvalu calculu use stack region alia type recurs data structur person commun type refer e typest check machin code tr compil principl techniqu tool typest program languag concept enhanc softwar reliabl polymorph effect system analysi pointer structur type refer effect infer implement type callbyvalu myampersand955calculu use stack region contextsensit interprocedur pointsto analysi presenc function pointer extend form must alia analysi dynam alloc effici contextsensit pointer analysi c program better static memori manag static detect dynam memori error type system java bytecod subroutin singl love simpl comprehens type system java bytecod subroutin type memori manag calculu capabl theori type qualifi typebas race detect java enforc highlevel protocol lowlevel softwar bug deviant behavior ccure resourc usag analysi adopt focu extend static check java alia type typest check machin code tractabl constraint finit semilattic alia type recurs data structur cyclon user manual version 013 check programmerspecifi nonalias ctr david greenfieldboyc jeffrey foster visual type qualifi infer eclips proceed 2004 oopsla workshop eclips technolog exchang p5761 octob 2424 2004 vancouv british columbia canada futoshi iwama naoki kobayashi new type system jvm lock primit proceed asian symposium partial evalu semanticsbas program manipul p7182 septemb 1214 2002 aizu japan gari wassermann zhendong su sound precis analysi web applic inject vulner acm sigplan notic v42 n6 june 2007 brian chess gari mcgraw static analysi secur ieee secur privaci v2 n6 p7679 novemb 2004 vincent simonet extens hmx bound existenti univers datatyp acm sigplan notic v38 n9 p3950 septemb timothi fraser nick l petroni jr william arbaugh appli flowsensit cqual verifi minix author check placement 3 proceed 2006 workshop program languag analysi secur june 1010 2006 ottawa ontario canada futoshi iwama atsushi igarashi naoki kobayashi resourc usag analysi function languag except proceed 2006 acm sigplan symposium partial evalu semanticsbas program manipul januari 0910 2006 charleston south carolina ranjit jhala rupak majumdar bit level type high level reason proceed 14th acm sigsoft intern symposium foundat softwar engin novemb 0511 2006 portland oregon usa david koe mihai budiu girish venkataramani programm specifi pointer independ proceed 2004 workshop memori system perform june 0808 2004 washington dc benjamin chelf dawson engler seth hallem write systemspecif static checker metal acm sigsoft softwar engin note v28 n1 p5160 januari thoma henzing ranjit jhala rupak majumdar permiss interfac acm sigsoft softwar engin note v30 n5 septemb 2005 yanhong liu tom rothamel fuxiang yu scott stoller nanjun hu parametr regular path queri acm sigplan notic v39 n6 may 2004 yoann padioleau julia l lawal gill muller understand collater evolut linux devic driver acm sigop oper system review v40 n4 octob 2006 eran yahav g ramalingam verifi safeti properti use separ heterogen abstract acm sigplan notic v39 n6 may 2004 samuel z guyer calvin lin error check clientdriven pointer analysi scienc comput program v58 n12 p83114 octob 2005 junfeng yang ted kremenek yichen xie dawson engler meca extens express system languag static check secur properti proceed 10th acm confer comput commun secur octob 2730 2003 washington dc usa yichen xie alex aiken scalabl error detect use boolean satisfi acm sigplan notic v40 n1 p351363 januari 2005 atsushi igarashi naoki kobayashi resourc usag analysi acm transact program languag system topla v27 n2 p264313 march 2005 naoki kobayashi time region effect resourc usag analysi acm sigplan notic v38 n3 march atsushi igarashi naoki kobayashi gener type system picalculu theoret comput scienc v311 n13 p121163 23 januari 2004 j field goyal g ramalingam e yahav typest verif abstract techniqu complex result scienc comput program v58 n12 p5782 octob 2005 system resourc protocol verif correct proof proceed 2004 acm sigplan symposium partial evalu semanticsbas program manipul p135146 august 2425 2004 verona itali yitzhak mandelbaum david walker robert harper effect theori type refin acm sigplan notic v38 n9 p213225 septemb kevin w hamlen greg morrisett fred b schneider certifi inlin refer monitor net proceed 2006 workshop program languag analysi secur june 1010 2006 ottawa ontario canada seth hallem benjamin chelf yichen xie dawson engler system languag build systemspecif static analys acm sigplan notic v37 n5 may 2002 ranjit jhala rupak majumdar path slice acm sigplan notic v40 n6 june 2005 thoma henzing ranjit jhala rupak majumdar kenneth l mcmillan abstract proof acm sigplan notic v39 n1 p232244 januari 2004 yichen xie alex aiken saturn scalabl framework error detect use boolean satisfi acm transact program languag system topla v29 n3 p16e may 2007 alex aiken jeffrey foster john kodum tachio terauchi check infer local nonalias acm sigplan notic v38 n5 may adrian birka michael ernst practic type system languag refer immut acm sigplan notic v39 n10 octob 2004 christian skalka trace effect object orient proceed 7th acm sigplan intern confer principl practic declar program p139150 juli 1113 2005 lisbon portug nurit dor stephen adam manuvir da zhe yang softwar valid via scalabl pathsensit valu flow analysi acm sigsoft softwar engin note v29 n4 juli 2004 ted kremenek ken ashcraft junfeng yang dawson engler correl exploit error rank acm sigsoft softwar engin note v29 n6 novemb 2004 junfeng yang paul twohey dawson engler madanl musuvathi use model check find seriou file system error proceed 6th confer symposium opeart system design implement p1919 decemb 0608 2004 san francisco ca murali krishna ramanathan ananth grama suresh jagannathan static specif infer use predic mine acm sigplan notic v42 n6 june 2007 weingan chin siaucheng khoo shengchao qin corneliu popeea huu hai nguyen verifi safeti polici size properti alia control proceed 27th intern confer softwar engin may 1521 2005 st loui mo usa polyvio pratikaki jaim spacco michael hick transpar proxi java futur acm sigplan notic v39 n10 octob 2004 jeffrey fischer ranjit jhala rupak majumdar join dataflow predic acm sigsoft softwar engin note v30 n5 septemb 2005 karl chen david wagner largescal analysi format string vulner debian linux proceed 2007 workshop program languag analysi secur june 1414 2007 san diego california usa matthew tschantz michael ernst javari ad refer immut java acm sigplan notic v40 n10 octob 2005 junfeng yang paul twohey dawson engler madanl musuvathi use model check find seriou file system error acm transact comput system toc v24 n4 p393423 novemb 2006 madanl musuvathi dawson r engler model check larg network protocol implement proceed 1st confer symposium network system design implement p1212 march 2931 2004 san francisco california manuvir da sorin lerner mark seigl esp pathsensit program verif polynomi time acm sigplan notic v37 n5 may 2002 nic volanschi condat protolanguag confluenc check compil proceed 8th acm sigplan symposium principl practic declar program juli 1012 2006 venic itali gregor snelt torsten robschink jen krink effici path condit depend graph softwar safeti analysi acm transact softwar engin methodolog tosem v15 n4 p410457 octob 2006 tian zhao jen palsberg jan vitek typebas confin journal function program v16 n1 p83128 januari 2006 brian chin shane markstrum todd millstein semant type qualifi acm sigplan notic v40 n6 june 2005 polyvio pratikaki jeffrey foster michael hick locksmith contextsensit correl analysi race detect acm sigplan notic v41 n6 june 2006 xiaolan zhang larri kove marco pistoia sam weber trent jaeger guillaum marceau liangzhao zeng case analysi preserv languag transform proceed 2006 intern symposium softwar test analysi juli 1720 2006 portland main usa todd millstein practic predic dispatch acm sigplan notic v39 n10 octob 2004 cristian cadar vijay ganesh peter pawlowski david l dill dawson r engler exe automat gener input death proceed 13th acm confer comput commun secur octob 30novemb 03 2006 alexandria virginia usa john tang boyland william retert connect effect uniqu adopt acm sigplan notic v40 n1 p283295 januari 2005 david hovemey william pugh find bug easi acm sigplan notic v39 n12 decemb 2004 philip w l fong pluggabl verif modul extens protect mechan jvm acm sigplan notic v39 n10 octob 2004 yaowen huang fang yu christian hang chunghung tsai dertsai lee syyen kuo secur web applic code static analysi runtim protect proceed 13th intern confer world wide web may 1720 2004 new york ny usa chri andrea jame nobl shane markstrum todd millstein framework implement pluggabl type system acm sigplan notic v41 n10 octob 2006 jeffrey foster robert johnson john kodum alex aiken flowinsensit type qualifi acm transact program languag system topla v28 n6 p10351087 novemb 2006 pistoia chandra j fink e yahav survey static analysi method identifi secur vulner softwar system ibm system journal v46 n2 p265288 april 2007 pistoia chandra j fink e yahav survey static analysi method identifi secur vulner softwar system ibm system journal v46 n2 p265288 april 2007