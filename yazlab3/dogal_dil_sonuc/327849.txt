design use algorithm permut larg entri diagon spars matric consid techniqu permut spars matrix diagon permut matrix entri larg absolut valu discuss variou criteria consid implement comput code indic sever case permut use includ solut spars equat direct method iter techniqu also consid use gener precondition iter method see effect reorder dramat although best priori strategi mean clear b introduct studi algorithm permut squar unsymmetr spars matrix order n diagon permut matrix larg entri use sever way wish solv system nonsingular squar matrix order n x b vector length n preorder place larg entri diagon use whether direct iter method use solut direct method put larg entri diagon suggest pivot diagon might stabl cours noth rigor inde stabil guarante howev solut scheme like multifront method duff reid 1983 symbol phase choos initi pivot sequenc subsequ factor phase modifi sequenc stabil mean modif requir less permut appli iter method simpl techniqu like jacobi gaussseidel converg quickli diagon entri larg rel offdiagon row column techniqu like block iter method benefit entri diagon block larg addit precondit techniqu exampl diagon precondit incomplet lu precondit intuit evid larg diagon benefici consid precis mean permut section 2 discuss algorithm perform implement issu section 3 consid effect permut use direct method solut section 4 use iter method section 5 6 discuss effect precondit latter section final consid implic current work section 7 throughout symbol jxj interpret context x scalar modulu intend x set cardin number entri set understood permut matrix larg diagon 21 transvers maximum transvers say n theta n matrix larg diagon absolut valu diagon entri larg rel absolut valu offdiagon entri row column concern permut row column matrix result diagon permut matrix properti permut matrix would like ratio larg j 1 j n cours even possibl ensur ratio greater 10 j simpl exampl show thu necessari first scale matrix comput permut appropri scale would scale column largest entri column 10 algorithm describ section 22 would effect maxim 21 arbitrari nonsingular n theta n matrix necessari suffici condit set n entri permut diagon two row two column set entri term maximum transvers concept central paper defin rigor let denot set n order index pair j 1 row index column index j appear call transvers matrix ij 6 0 call maximum transvers largest possibl cardin jt j equal n matrix nonsingular inde jt defin n theta n permut matrix p p matrix transvers entri diagon spars system solut major use transvers algorithm first stage permut matric block triangular form matrix first permut unsymmetr permut make diagon zerofre symmetr permut use obtain block triangular form import featur approach block triangular form depend transvers found first stage duff 1977 maximum transvers also requir gener block triangular order develop pothen fan 1990 22 bottleneck transvers consid two strategi obtain maximum transvers larg transvers entri primari strategi consid paper maxim smallest valu diagon permut matrix comput maximum transvers maximum transvers 1 min ij2t transvers call bottleneck transvers 1 smallest valu ja ij j call bottleneck valu equival jt smallest valu diagon p maxim permut p equal bottleneck valu outlin algorithm comput bottleneck transvers 0 matrix given assum alreadi algorithm obtain maximum transvers denot mt routin return maximum transvers matrix start initi guess transvers let ffl denot matrix obtain set zero entri ja ij j denot transvers obtain remov transvers element algorithm bt initi set fflmin zero fflmax infin exist begin choos discuss chosen later fflmin ffl els endif complet transvers permut need matrix structur singular maximum transvers henc jm j requir cardin bottleneck transvers 0 comput nonsingular throughout algorithm fflmax fflmin maximum transvers size jm j exist fflmax exist fflmin step ffl chosen interv fflmin fflmax maximum transvers matrix ffl comput transvers size jm j fflmin set ffl 1 term bottleneck use mani year assign problem exampl glicksberg gross 1953 otherwis fflmax set ffl henc size interv decreas step ffl converg bottleneck valu termin algorithm 0 comput bottleneck transvers ffl correspond bottleneck valu valu ffl uniqu bottleneck transvers 0 usual uniqu algorithm bt make use algorithm find maximum transvers current known algorithm best asymptot bound find maximum transvers hopcroft karp 1973 worstcas complex n number entri matrix effici implement algorithm found duff wiberg 1988 depthfirst search algorithm implement duff 1981 harwel subroutin librari code mc21 theoret worstcas behaviour practic behav like latter algorithm far simpler concentr follow although note rel straightforward modifi use algorithm hopcroft karp 1973 similar way limit algorithm bt maxim smallest valu diagon permut matrix although mean diagon valu smaller may maxim consid exampl 3 theta 3 ffic 22 ffi close zero algorithm bt appli matrix return either transvers f1 1 2 2 3 3g f2 1 1 2 3 3g clearli latter transvers prefer modif propos help choos larg entri possibl earli transvers entri benefici first permut matrix block triangular form use bt block diagon done sinc entri maximum transvers must lie block furthermor mean bt oper smaller matric also usual obtain transvers better qualiti inasmuch minimum diagon entri maxim true block diagon thu matrix 22 combin order block triangular form follow bt would yield prefer transvers f2 1 1 2 3 3g possibl improv diagon valu permut matrix smallest one appli row scale subsequ initi column scale matrix increas numer valu nonzero entri row maximum absolut numer valu less one row scale appli matrix 22 chang coeffici 33 ffi 10 algorithm bt comput f2 1 1 2 3 3g bottleneck transvers matrix 22 unfortun row scale alway help seen matrixb 10 ffic maximum transvers legitim bottleneck transvers inde bt algorithm depend scale exampl matrix bottleneck transvers f2 1 1 2g wherea row scale bottleneck transvers f1 1 2 2g anoth possibl improv size diagon valu appli algorithm bt repeatedli without loss gener suppos applic bt entri nn smallest diagon valu algorithm bt appli n gamma 1 theta n gamma 1 lead princip submatrix could repeat k step n gamma lead princip submatrix contain one assumpt origin matrix row column scale obvious quit expens sinc algorithm bt appli time although good start point bt algorithm stage call algorithm success bottleneck transvers algorithm fact found usual give littl improv bt consid paper 23 maximum product transvers algorithm yield transvers independ scale maxim product moduli entri diagon find permut oe ioe j 23 maxim strategi use pivot full gaussian elimin olschowka neumaier 1996 correspond obtain weight bipartit match olschowka neumaier 1996 combin permut scale strategi permut 23 maxim product diagon entri permut matrix clearli product zero matrix structur singular scale transform matrix socal imatrix whose diagon entri one whose offdiagon entri less equal one maxim product diagon entri equival minim sum diagon entri matrix defin follow assum denot n theta n nonneg nonsingular matrix log maximum absolut valu column j matrix minim sum diagon entri state term assign problem solv 3 time full n theta n matric log n time spars matric entri bipartit weight match algorithm use solv problem appli algorithm c produc vector u v transvers length n defin scale matrix imatrix scale experi unlik olschowka neumaier use spars bipartit weight match wherea consid full matric worst case complex algorithm log n similar bt although practic sometim requir work bt program algorithm without final scale call algorithm mpd maximum product diagon compar bt mc21 later section paper note matrixb mpd algorithm obtain transvers f1 1 2 2 3 3g wherea exampl gaussian elimin diagon transvers would better addit fact scale influenc choic bottleneck transvers could deem use characterist 3 implement bt algorithm consid implement detail algorithm bt previou section also illustr perform matric harwellbo collect duff grime lewi 1989 collect davi 1997 code implement bt algorithm includ futur releas harwel subroutin librari hsl 1996 updat transvers stage algorithm bt easili acceler algorithm describ section 2 comput valu minimum entri transvers viz min ij2t set fflmin valu rather ffl issu crucial effici choic ffl begin step step choos ffl close valu fflmin highli like find maximum transvers total number step requir obtain bottleneck transvers larg worst case could requir step number nonzero entri ffl reduc one iter algorithm converg faster size interv fflmin fflmax reduc significantli step would therefor appear sensibl choos ffl step interv split two almost equal subinterv ffl fflminfflmax2 howev nonzero valu magnitud fflmin fflmax cluster near one endpoint possibl exist nonzero valu discard algorithm proceed slowli avoid ffl chosen median nonzero valu fflmin fflmax consid transvers algorithm like mc21 modifi implement algorithm bt effici use describ briefli mc21 work column matrix search turn call origin column either entri row transvers entri present row found made transvers entri cheap assign entri search move previou column whose transvers entri one row entri origin column new column check cheap assign one exist cheap assign entri origin column row old transvers entri replac transvers entri therebi extend length transvers 1 cheap assign search continu column depth first search fashion chain augment path form found transvers entri row everi odd member path transvers entri assign made column j transvers extend 1 replac transvers entri augment path even member path transvers select algorithm like mc21 take account numer valu nonzero entri howev clear algorithm bt converg faster chosen valu minimum entri larg note construct augment path often sever candid cheap assign extend path mc21 make arbitrari choic modifi candid largest absolut valu chosen note local strategi guarante augment path highest valu found second modif aim exploit inform obtain previou step algorithm bt algorithm bt repeatedli comput maximum transvers ffl implement mc21 harwel subroutin librari comput scratch modifi start partial transvers easili achiev hold set column contain entri partial transvers perform depth search search set column cours mani way implement choic ffl one altern maintain array ptr length pointer entri first part ptr point entri form matrix ffl max first two part ptr point entri form ffl min element third part ptr point remain smaller entri new valu ffl chosen directli o1 time pick numer valu entri point element second part ptr assign algorithm bt either ffl min ffl max second part ptr permut ptr divid three part altern global use fast sort algorithm entri element ptr point entri order decreas absolut valu ptr divid three part describ previou altern choos o1 time ffl equal numer valu entri point median element second part ptr ffl divid interv ffl min closetoequ size altern advantag abl choos new ffl quickli requir extra memori repeat permut pointer prefer approach less expens memori match transvers algorithm better sinc mc21 alway search column order facilit construct matric ffl first sort entri column matrix decreas absolut valu spars matrix well bound number entri column done time matrix ffl implicitli defin array len length n lenj point first entri column j matrix whose valu smaller ffl posit immedi end column j matrix ffl sinc entri column ffl contigu repeat modif ffl algorithm bt redefin matrix ffl correspond simpli chang pointer array len actual choic ffl phase algorithm bt done select matrix ffl min entri absolut valu x ffl min column ffl min search entri found ffl set absolut valu search cost time sinc column direct access entri absolut valu ffl min ffl max pointer array len mention choos ffl care speed algorithm bt consider therefor instead choos arbitrari entri matrix defin ffl choos number k say entri lie ffl min ffl max random sort absolut valu set ffl absolut valu median element 2 implement use set matric use experi unsymmetr matric taken spars matrix collect duff grime lewi 1992 davi 1997 tabl 31 show order number entri time comput bottleneck transvers matrix matric initi row column scale mean matrix scale maximum entri row column one machin use experi follow section 166 mhz sun ultra2 algorithm implement fortran 77 matrix n time sec goodwin 7320 324784 027 226 182 onetone2 36057 227628 263 053 042 tabl 31 time transvers algorithm order matrix n number entri 2 techniqu commonli use speed sort algorithm like quicksort 4 solut equat direct method mcspars parallel direct unsymmetr linear system solver develop gallivan marsolf wijshoff 1996 use reorder identifi priori larg medium grain parallel reorder matrix border block triangular form order use initi nonsymmetr order enhanc numer properti factor subsequ symmetr order use obtain border block triangular matrix wijshoff 1989 nonsymmetr order effect modifi version mc21 search phase cheap assign augment path entri ij select absolut valu within bound ff 0 ff 1 largest entri column j instead take first entri found search satisfi threshold algorithm scan column entri largest absolut valu algorithm start initi bound ff 01 maximum transvers found valu column examin determin maximum valu bound would allow assign take place column new bound set minimum bound estim fail column algorithm restart bound less preset limit tri transvers still found bound ignor code find transvers terminolog assum initi column scale matrix mean maximum transvers size n comput matrix ff multifront approach duff reid 1983 later develop amestoy duff 1989 analysi perform structur obtain order reduc fillin assumpt diagon entri numer suitabl pivot numer factor guid assembl tree node tree step gaussian elimin perform dens submatrix whose schur complement pass parent node tree assembl sum schur complement children origin entri matrix howev numer consider prevent us choos pivot algorithm proceed schur complement pass parent larger usual work storag need effect factor logic first permut matrix larg entri diagon comput order reduc fillin tri reduc number pivot delay way therebi reduc storag work factor show effect tabl 41 see even use mc21 benefici although bt algorithm show signific gain sometim use mpd caus signific reduct number delay pivot add numer accuraci solut sometim slightli improv permut case good solut found matrix transvers algorithm use none mc21 bt mpd goodwin 536 1622 358 53 tabl 41 number delay pivot factor ma41 indic ma41 requir real work space larger 25 million word 8 byte tabl 42 show effect number entri factor mirror result tabl 41 show benefit transvers select algorithm effect seen tabl 43 sometim observ dramat reduct time solut preced permut matrix transvers algorithm use none mc21 bt mpd onetone2 14082683 2875603 2167523 2169903 goodwin 1263104 2673318 1791112 1282004 tabl 42 number entri factor ma41 addit abl select pivot chosen analysi phase multifront code ma41 better matric whose structur symmetr nearli transvers order case increas symmetri result reorder matrix particularli appar spars system mani zero diagon case reduct number offdiagon entri reorder matrix influenc symmetri notic respect sophist transvers algorithm may actual caus problem sinc could reorder symmetr structur matrix zerofre diagon wherea mc21 leav unchang matrix transvers algorithm use none mc21 bt mpd goodwin 364 1463 600 356 tabl 43 time second sun ultra2 ma41 solut system 5 solut equat iter method larg famili iter method socal stationari method iter scheme split chosen system easi solv invert 51 written ae spectral radiu jjm converg iter x k solut gamma1 b guarante arbitrari x 0 gener smaller jjm faster converg thu algorithm make entri larg n small benefici simpl method type jacobi method correspond split denot diagon l strictli lower triangular part u strictli upper triangular part matrix howev particularli current power method conduct experi use block cimmino implement arioli duff noaill ruiz 1992 equival use block jacobi algorithm normal equat implement subproblem correspond block row matrix solv direct method similar consid previou section similar reason benefici increas magnitud diagon entri unsymmetr permut show effect tabl 51 see number iter solut problem mahinda 7682 converg toler set 10 gamma12 transvers select algorithm follow revers cuthil mckee algorithm obtain block tridiagon form matrix partit 2 4 8 16 block row acceler use block cg algorithm block size 1 4 8 acceler block row none mc21 bt mpd tabl 51 number iter block cimmino algorithm mahinda everi case use transvers algorithm acceler converg method sometim signific amount howev use algorithm increas size diagon entri usual help converg converg block cimmino depend angl subspac strongli influenc diagon entri 6 precondit section consid effect use permut induc transvers algorithm prior solv system use precondit iter method consid precondit correspond incomplet factor form ilu0 ilu1 ilut studi converg iter method gmres20 bicgstab qmr refer reader standard text like saad 1996 descript discuss method sinc diagon permut matrix domin diagon origin matrix would hope permut would enhanc converg show result run tabl 61 maximum number iter set 1000 converg toler 10 gamma9 quit clear reorder signific effect converg precondit iter method case method converg permut other greatli improv converg would appear result tabl 61 experi perform sophist mpd transvers algorithm gener result greatest reduct number iter although best method depend overal solut time includ transvers select algorithm 7 conclus futur work describ algorithm obtain transvers larg entri indic implement show result programm written effici perform clear reorder matric permut matrix larg diagon signific effect solv spars system wide rang techniqu somewhat less clear univers strategi best case thu start experi combin strategi mention paper particularli block cimmino approach combin unsymmetr order symmetr order one exampl plan studi combin symmetr tpablo order benzi choi szyld 1997 possibl extend techniqu order tri increas size diagon also immedi sub super diagon use result tridiagon part matrix precondition one also build criteria weight obtain bipartit match exampl incorpor markowitz count sparsiti would also preserv choic result diagon pivot final notic experi ma41 one effect transvers select increas structur symmetri unsymmetr matric thu explor use order techniqu directli attempt increas structur symmetri acknowledg grate patrick amestoy enseeiht michel benzi cerfac daniel ruiz enseeiht assist experi direct method precondit iter method block iter method respect would also like thank alex pothen earli discuss bottleneck transvers john reid jennif scott comment draft paper matrix method transvers algorithm bicgstab 123 21 11 qmr 101 26 17 qmr 72 19 12 mahinda west0497 tabl 61 number iter requir precondit iter method r threshold order precondit nonsymmetr problem design use frontal scheme solv spars unsymmetr equat user guid harwellbo spars matrix collect releas product line assign problem iter method spars linear system symmetr order unsymmetr spars matric tr ctr iain duff jennif scott stabil border block diagon form parallel spars solver parallel comput v31 n34 p275289 marchapril 2005 kai shen parallel spars lu factor secondclass messag pass platform proceed 19th annual intern confer supercomput june 2022 2005 cambridg massachusett olaf schenk klau grtner twolevel dynam schedul pardiso improv scalabl share memori multiprocess system parallel comput v28 n2 p187197 februari 2002 olaf schenk andrea wchter michael hagemann matchingbas preprocess algorithm solut saddlepoint problem largescal nonconvex interiorpoint optim comput optim applic v36 n23 p321341 april 2007 olaf schenk klau grtner solv unsymmetr spars system linear equat pardiso futur gener comput system v20 n3 p475487 april 2004 patrick r amestoy iain duff jeanyv lexcel xiaoy li analysi comparison two gener spars solver distribut memori comput acm transact mathemat softwar tom v27 n4 p388421 decemb 2001 kai shen parallel spars lu factor differ messag pass platform journal parallel distribut comput v66 n11 p13871403 novemb 2006 xiaoy li overview superlu algorithm implement user interfac acm transact mathemat softwar tom v31 n3 p302325 septemb 2005 anshul gupta recent advanc direct method solv unsymmetr spars system linear equat acm transact mathemat softwar tom v28 n3 p301324 septemb 2002 anwar hussein ke chen fast comput method locat fold point power flow equat journal comput appli mathemat v164165 n1 p419430 1 march 2004 jack dongarra victor eijkhout piotr uszczek recurs approach spars matrix lu factor scientif program v9 n1 p5160 januari 2001 belur v dasarathi editori ident fusion unsupervis environ inform fusion v7 n2 p157160 june 2006 xiaoy li jame w demmel superludist scalabl distributedmemori spars direct solver unsymmetr linear system acm transact mathemat softwar tom v29 n2 p110140 june nichola gould jennif scott yifan hu numer evalu spars direct solver solut larg spars symmetr linear system equat acm transact mathemat softwar tom v33 n2 p10e june 2007 michel benzi precondit techniqu larg linear system survey journal comput physic v182 n2 p418477 novemb 2002