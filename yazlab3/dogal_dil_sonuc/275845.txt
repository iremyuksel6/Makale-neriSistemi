strong interact fair via random abstractw present multi symmetr distribut random algorithm probabl one schedul multiparti interact strongli fair manner knowledg multi first algorithm strong interact fair appear literatur moreov expect time taken multi establish interact constant depend total number process system sens multi guarante realtim respons multi make assumpt bounded time take process commun thu offer appeal tonic imposs result tsay bagrodia joung concern strong interact fair environ sharedmemori messagepass process determinist commun time nonneglig strong interact fair strong fair condit one might actual want impos practic result indic random may also prove fruit notion fair lack determinist realiz requir realtim respons b introduct multiparti interact set io action execut jointli number process must readi execut action action set occur attempt particip interact delay process particip avail action execut particip process continu local comput although rel new concept multiparti interact found way variou distribut program languag algebra model concurr see 11 taxonomi program languag offer linguist support multiparti interact although multiparti interact execut synchron underli model commun usual asynchron biparti multiparti interact schedul problem concern synchron asynchron process satisfi follow requir 1 interact establish enabl ie particip readi 2 process particip one interact time moreov notion fair typic associ implement prevent unfair comput favor particular process interact sever import fair notion propos literatur 1 2 3 includ weak interact fair interact continu enabl particip eventu engag interact strong interact fair interact infinit often enabl establish infinit often distinguish characterist interact fair much weaker known fair notion strong interact fair much stronger gener stronger fair notion induc live properti also difficult implement therefor surpris see weak interact fair wide implement eg 18 15 4 14 12 20 10 also surpris see algorithm asymmetr determinist weak interact fair thu strong interact fair proven imposs symmetr determinist distribut algorithm 8 13 given process decid autonom attempt interact time predict advanc strong interact fair still possibl even symmetri requir drop 19 9 note imposs result depend type commun primit eg messagepass sharedmemori provid underli execut model hold long one processs readi multiparti interact known anoth commun time take two process commun nonneglig finit bound case csp commun guard schedul special case multiparti interact schedul problem interact involv exactli two process random proven effect techniqu cope aforement imposs phenomena ex ampl random algorithm reif spiraki 17 symmetr weak interact fair probabl 1 guarante real time respons two process continu will interact within time interv delta establish interact within delta time high likelihood expect time establish interact constant random algorithm francez rodeh 8 simpler process p express willing establish interact process p j set boolean variabl share two may need wait certain amount time ffi reaccess variabl determin p j likewis interest interact author show proviso time access share variabl neglig compar ffi algorithm weak interact fair probabl 1 note howev assumpt combin fact lower bound ffi provid may significantli limit algorithm practic furthermor strong interact fair claim either algorithm paper present multi extens francez rodeh random algorithm multiparti case prove multi weak interact fair probabl 1 also show transit process state readi interact independ random draw process probabl 1 multi strong interact fair knowledg multi first algorithm strong interact fair appear literatur also present detail time analysi multi establish lower bound long process must wait reaccess share variabl consequ algorithm finetun optim perform moreov show expect time establish interact constant depend total number process system thu multi also guarante realtim respons strong interact fair strong fair condit one might actual want impos practic result indic random may also prove fruit notion fair lack determinist realiz requir realtim respons rest paper organ follow section 2 describ multiparti interact schedul problem anthropomorph set known committe coordin random algorithm present section 3 analyz section 4 section 5 conclud 2 committe coordin problem problem schedul multiparti interact asynchron system elegantli character chandi misra one committe coordin 5 professor cf process certain univers organ committe cf interact committe fix membership roster one professor time time professor may decid attend committe meet start wait continu wait meet committe member establish state committe coordin problem formal need follow two assumpt 1 professor attend committe meet leav meet member committe attend meet 2 given member attend committe meet committe member leav meet finit time problem devis algorithm satisfi follow three requir synchron professor attend committe meet member committe eventu attend meet well exclus two committe meet simultan common member weak interact fair professor committe wait eventu professor attend committe meet shall also consid strong interact fair ie committe infinit often enabl establish infinit often committe enabl everi member committe wait disabl otherwis overal behavior professor describ state transit diagram figur 1 state correspond think w correspond wait committe meet e mean professor activ engag meet note algorithm problem control transit professor state w state e two transit transit w autonom professor moreov assum upper bound time meet start meet readi finish meet figur 1 state transit diagram professor professor spend think otherwis algorithm problem could simpli wait long enough professor becom wait schedul committe meet choos three requir problem strong interact fair would easili satisfi 3 algorithm section present multi random algorithm committe coordin algorithm associ committe counter cm whose valu rang 0 delta delta jprofmj gamma1 prof set professor involv cm access professor prof testop instruct follow result testopcm zeroop nonzeroop effect instruct appli cm oper zeroop valu zero oper nonzeroop otherwis assign variabl result old valu ie valu oper cm oper use noop inc dec exampl return 2 testopcm noop dec leav cm unchang return 0 simplifi present algorithm assum execut testop instruct atom assumpt remov section 44 concurr implement testop consid algorithm multi inform describ follow initi share counter set zero professor p decid attend committe meet randomli choos committe member attempt start meet increas valu cm 1 increment decrement interpret modulo jprofmj new valu cm 0 ie increment professor p conclud member increas cm one wait p conven goe state e start meet new valu cm zero least one professor profm yet readi wait period time hope partner becom readi reaccess cm cm set 0 professor readi readi p attend meet cm still zero professor still readi p withdraw attempt start decreas valu cm 1 tri anoth committe algorithm execut professor p present figur 2 wait line 1 boolean flag indic whether p wait committe meet constant ffi line amount time professor wait reaccess counter later requir see section 4 ffi greater maximum amount time professor spend execut line 2 3 1 note algorithm symmetr sens professor execut code make use process id 4 analysi algorithm section prove multi satisfi synchron exclus requir committe coordin problem probabl 1 weak strong interact fair also analyz expect time multi take schedul committe meet 41 definit assum discret global time axi extern observ event system total order intern howev processor may execut instruct simultan time instanc simultan access share counter arbitr implement precis jmax also includ time take execut line 1 simplifi analysi assum boolean flag wait serv indic state execut professor explicit test flag need moreov assum action execut instantan time instanc time take execut action differ time action execut time previou action professor execut 1 wait f 2 randomli choos committe fm j 3 testopcm inc 4 committe meet establish 5 attend meet 6 els f wait 7 testopcm noop 8 committe meet establish 9 attend meet 10 els tri anoth committe g 11 g figur 2 algorithm multi professor p testop instruct assum execut atom sinc time axi discret meaningless say infinit mani time instanc finit time interv therefor throughout paper phrase infinit mani time instanc refer interv 0 1 analysi purpos present figur 3 refin state transit diagram figur 1 state w refin three substat action taken professor substat randomli choos new committe execut instruct testopcm inc inc execut instruct testopcm noop dec say professor access counter cm execut testop instruct state w 1 reaccess cm execut testop instruct state w 2 monitor committe state w 2 wait reaccess cm accord algorithm time professor p access counter cm testopcm inc inc state w 1 state w 2 e right 2 depend valu cm 2 action transit professor p state s1 state s2 occur time say p state s1 state s2 right ps state defin everi time instanc stipul ps readi meet reaccess cm 0 access cm draw finish meet access cm reaccess cm 6 random figur 3 state transit diagram professor execut algorithm ffistart waitingrandom drawrandom drawrandom draw figur 4 time constraint action execut professor p enter state w 2 time monitor committe time reaccess cm testopcm noop dec depend valu cm time professor either return state w 0 choos anoth committe enter state e attend meet execut algorithm multi professor start wait committe meet state w 0 repeatedli cycl state w 0 w 2 enter committe meet via transit state w 1 w 2 action perform along cycl subject time constraint depict figur 4 particular interv consecut access reaccess action must length ffi interv consecut reaccess access action must length greater j max shall sometim refer former ffiinterv made explicit section 43 durat ffiinterv may vari iter iter algorithm requir ffi greater lower bound determin j max number professor committe current consider figur 5 illustr possibl scenario four professor execut algo state time s2 p execut action time exampl p access cm time reaccess cm time state w2 time instanc ffi note interv open ffi say p state w2 time p must access cm time prof prof echoos 14choos 123choos 123t echoos 234choos 234choos 123t echoos 123choos 234choos 123t echoos 14choos 234choos 14 figur 5 partial comput four professor rithm p 1 p 4 involv committe 14 involv 123 p 2 involv 234 professor explicitli depict state yaxi global time instanc xaxi exampl time 1 professor p 1 start wait committe meet enter state w 0 state time 2 randomli choos 14 access cm 14 time 3 sinc cm access p 1 enter state w 2 monitor 14 unit reaccess cm 14 time 6 sinc p 4 access cm 14 return state w 0 tri anoth committe later time 12 p 1 choos committe 123 access cm 123 time 13 p 1 reaccess cm 123 time 16 find p 2 p 3 will start meet 123 p 1 enter state e attend meet meet 123 end time 19 committe member return state time choos shade area time 17 19 repres synchron interv three professor 42 properti algorithm hold certainti analyz correct algorithm begin invari valu share counter cm use prove multi satisfi synchron condit committe coordin problem lemma 1 time k professor state w 2 monitor committe professor sinc last enter state w 0 enter state e attend meet valu cm time k k jprof j howev time professor enter state e attend meet professor prof enter state e attend meet proof prove lemma induct time th system event occur lemma hold time 0 initi everi professor prof state induct hypothesi assum follow time prof set professor state w 2 monitor committe professor sinc last enter state w 0 enter state e attend meet consid nearest time j j professor p access reaccess cm sinc professor access reaccess cm induct hypothesi hold well interv suppos first p access cm instruct testopcm inc inc access cm jprof access less jprof p enter state w 2 time j jqj professor state w 2 monitor committe convers access access enter state e sinc j professor q monitor time reaccess cm testopcm noop dec moreov reaccess cm find cm 0 enter state e start see last statement true recal first two assumpt put forth defin committe coordin problem section 2 professor attend leav member enter state e attend consequ professor attend leav attempt anoth instanc access cm desir result follow suppos p reaccess cm instruct testopcm noop dec p 2 q sinc cm 6 0 right ps reaccess return state w 0 right j professor state w 2 monitor 2 theorem 1 synchron professor prof enter state e time attend meet within ffi time professor prof enter state e attend meet proof theorem follow immedi lemma 1 2 theorem simultan common member proof result follow fact professor monitor one committe time 2 43 properti algorithm hold probabl 1 move prove multi weak strong interact fair analyz time complex need follow two assumpt a1 ffiinterv professor choos wait committe satisfi condit maximum amount time professor spend execut line 2 3 multi a2 professor transit think wait see figur 1 depend random draw perform professor note a2 requir strong interact fair also requir definit random draw professor perform state w 0 decid meet attempt recal say professor access counter cm execut instruct testopcm inc inc line 3 algorithm reaccess cm execut testopcm noop dec line 7 suppos professor p access counter time interv one access choos recent one choic counter must result random draw perform access line 2 let tp denot random draw tp defin p access counter furthermor let tprof prof tp defin g exampl p state w 2 time p must access counter interv must defin shall see lemma 4 definit tp guarante tp defin p 2 prof random draw yield outcom establish henceforth shall use pm denot fix nonzero probabl professor p 2 prof choos committe random draw thu p2prof probabl set mutual independ random draw one professor prof yield outcom follow three lemma use fair proof first one say tprof must refer mutual disjoint set random draw 0 least ffi apart proof directli definit tp 2 lemma 3 assum a1 committe continu enabl interv enabl time instanc exist time instanc sinc continu enabl everi professor definit state throughout interv clearli either one follow hold p state w 2 throughout p state w 0 w 1 throughout case let g tp defin everi p 2 prof everi given j max thu exist j lemma proven case ii suppos professor p 1 2 prof stay w 0 w 1 access counter 1 assum lower bound 1 p defin p 2 prof done otherwis must exist anoth professor 2 lower bound still enabl time 1 p 2 wstate 1 state w 2 otherwis 1 p 2 would defin p 2 state w 0 must access counter within j max time assum p 2 access counter argu 1 2 p 1 also defin see recal lower bound fact jprof j 2 still w state time instanc counter 1 p 1 must enter state w 2 access stay w 2 throughout must defin fact note defin everi professor prof done otherwis similar reason must exist third professor prof 1 2 p 3 defin use argument show exist 3 defin continu fashion show exist k professor prof 1 2 k p l defin 1 l k given finit number professor prof eventu establish exist tp defin p 2 prof lemma proven 2 proof lemma 3 illustr figur 6 committe size 4 smallest ffi allow a1 consequ lemma 3 differ professor choos differ valu ffi valu need satisfi lower bound establish a1 3 therefor clock use professor implement timeout need adjust accuraci lemma 3 say assumpt a1 committe continu enabl suffici long exist interv length within everi professor prof perform random draw follow lemma ensur random draw yield outcom must establish lemma 4 jd tprof random draw tprof yield outcom 3 ffi refer definit tprof statement lemma 1 understood minimum maximum relev ffi valu respect continu enabl gammareadyaccessreaccess gammareaccessaccess gammareaccessaccess access figur illustr proof lemma 3 maximum possibl interv throughout enabl jd tprofm j 6 jprofm j jprofm must defin note ffi min would equal would defin time professor must alreadi enter state e start time professor prof enter state e start proof assum hypothes describ lemma let p 2 prof first professor perform random draw tprof access cm testopcm inc inc prof last professor let j time p p j respect access cm cm time reaccess cm professor access cm remain state w 2 p j access cm lemma 1 access p j access cm j set cm zero enter state e start moreov time ffi everi professor learn start reaccess cm testopcm noop dec also enter state e start sinc ffi lemma thu establish 2 note lemma 4 reli fact access involv definit tp occur interv open close relax definit close interv correct lemma 4 would depend accessreaccess conflict counter resolv implement see suppos p 1 access counter counter new definit tp 1 tp 2 defin suppos random draw yield outcom involv access counter cm respect assum algorithm p 1 wait ffi time reaccess cm caus conflict p 2 access time clearli establish conflict resolv favor access ie p 2 get go first theorem 3 weak interact fair assum a1 member committe wait committe meet probabl 1 eventu meet involv member start proof assum a1 suppos enabl let jprof j consid probabl continu enabl continu enabl exist time instanc 1 jd 1 prof j random draw 1 prof yield outcom lemma 4 must disabl 1 even random draw yield outcom professor may still establish anoth committe meet 0 random draw outcom 0 time professor 0 also interest 0 probabl random draw 1 prof caus committe involv member start greater probabl continu enabl similarli still enabl 1 lemma 2 3 must exist anoth time instanc 2 2 prof contain complet new set random draw size jprof j probabl remain enabl random draw greater given random draw 1 prof caus member attend meet probabl continu enabl time 2 greater still enabl 2 anoth new set random draw 3 prof size jprof j gener probabl remain continu enabl mutual disjoint set random draw 1 prof tend infin tend zero probabl zero remain enabl forev 2 intuit a1 requir ffi paramet use algorithm larg enough professor reaccess counter professor get chanc access counter reaccess 6 access 6 reaccess 6 access 6 reaccess reaccess 6 access 6 reaccess 6 access 6 reaccess figur 7 two professor wait forev without establish meet due bad choic ffi assumpt remov theorem 3 set professor could access reaccess counter forev without ever establish committe meet illustr consid figur 7 professor reaccess counter professor could access counter matter committe choos random draw time professor see result counter set professor strong interact fair properti algorithm addit requir assumpt a2 lemma probabilist behavior larg number random draw lemma 5 assum a2 infinit mani ts jd tprof probabl 1 random draw tprof produc outcom infinit mani ts infinit sequenc increas time instanc jd prof jprof j wlog assum 8i 2 set prof pairwis disjoint consid random draw set prof let em denot event random draw produc outcom a2 probabl em occurr independ time random draw made given defin random variabl 1 em occur 0 otherwis law larg number see exampl 6 ffl lim n tend infin probabl 1 n tend therefor probabl 1 set fi j henc probabl 1 infinit mani random draw prof produc outcom 2 theorem 4 strong interact fair assum a1 a2 committe enabl infinit often probabl 1 committe conven infinit often proof sinc algorithm satisfi weak interact fair assum infinit mani becom enabl time instanc let either 1 infinit mani continu enabl interv 2 start point 0 onward whenev becom enabl professor prof attend committe meet interv consid case 1 lemma 3 a1 infinit mani interv contain time instanc jd tprof j lemma 5 a2 probabl 1 infinit mani ts random draw tprof produc outcom lemma 4 probabl 1 conven infinit often consid case 2 wlog assum interv contain time instanc previou argument also show conven infinit often probabl 1 let q prof set professor access counter time wait time attend committe meet q 2 q let qs first access let 1 denot qs random draw perform right ps latest random draw perform time note sinc p w state 2 defin outcom must caus p attend committe meet time let g a2 random draw 0 mutual independ nonzero probabl yield outcom therefor law larg number see proof lemma 5 probabl 1 infinit mani random draw 0 yield outcom random draw 0 yield outcom either meet establish professor prof still wait perform anoth random draw access new counter techniqu similar lemma 3 seen later case would abl find time instanc j assumpt case conclud probabl 1 conven infinit often 2 note assumpt a2 drop theorem 4 conspiraci strong interact fair devis illustr consid system two professor p 1 p 2 three committe involv involv p 2 12 involv p 1 p 2 suppos p 1 becom wait toss coin choos either 1 12 malici could remain think p 1 select 1 p 2 becom wait random draw perform p 1 latest random draw yield outcom select 1 12 start p 1 remain meet p 2 wait howev 12 enabl soon p 2 becom wait similarli could also remain think p 2 select 2 scenario repeat ad infinitum result comput would strong interact fair time complex algorithm analyz follow theorem assum worst case scenario professor spend j max time execut line 2 3 multi theorem 5 time complex assum professor spend j max time execut line 2 3 multi assum a1 ie amount time ffi professor spend monitor interact greater 1 expect time take member committe start meet time becom enabl greater proof suppos becom enabl time consid first exist time instanc assum first enabl conflict committe enabl simultan two committe conflict share common member enabl professor prof attend meet lemma 4 random draw jd 1 prof j yield outcom event occur probabl professor prof start meet time 1 otherwis professor prof must perform anoth random draw access select counter within j time reaccess previou select counter must exist anoth time instanc 2 contain complet new set random draw one professor prof new random draw yield outcom professor start committe meet probabl disabl time 2 gener let prof th set random draw perform professor ffi probabl disabl time ffi expect time start member enter state e start meet greater assum committe conflict enabl enabl impli set random draw prof random draw must yield outcom member start meet conflict committe enabl simultan random draw prof may still lead committe meet even yield outcom henc expect time start member enter state e start meet actual less j conflict committe enabl simultan assum next exist time instanc 1 must disabl disabled must result professor random draw lead establish committe meet involv professor disabl time must also probabilist event therefor case expect time start member enter state e start meet greater j given expect time greater therefor either case expect time start member enter state e start meet greater j intuit theorem 5 state expect time member prof start committe meet wait greater amount time execut one round whileloop multi ie divid probabl professor random draw choos committe ie note j max constant determin size number member largest committe call valu max let j probabl constant determin size maximum number committe professor member call valu c p2prof final ffi constant determin therefor time complex algorithm bound follow constant worst case max could equal total number professor c max could equal total number committe system turn could depend total number professor practic gener known paramet must kept small independ total number professor system 7 4 contrast determinist algorithm committe coordin 15 12 10 time complex c 0 constant n total number professor system 5 time complex algorithm depend explicitli n use prioriti beak symmetri among professor lower prioriti professor may wait higher prioriti professor attempt establish conflict committe higher prioriti professor turn may wait anoth higher prioriti professor recal section 1 symmetr determinist distribut solut committe coordin c max max kept small independ n multi addit guarante strong interact fair outperform determinist algorithm provid realtim respons 44 nonatom implement testop promis section 3 present nonatom henc concurr implement testop instruct recal execut statement testopcm zeroop nonzeroop actual involv two 6 action read cm appli cm oper zeroop oper nonzeroop otherwis precis action read follow inc professor execut testopcm inc inc access counter read follow decnoop execut testopcm noop dec reaccess counter clearli appli mutual exclus algorithm see 16 survey ensur access reaccess counter proce atom howev overkil exampl 4 scheme synchroni loosen therefor propos 7 reduc size interact practic applic 5 algorithm multi allow professor distributedli establish committe meet determinist algorithm 5 4 14 employ manag coordin committe meet time complex algorithm depend number manag use 6 three count boolean test access counter execut concurr 7 see consid three possibl interleav execut two testopcm inc inc read 1 read 2 inc 1 inc 2 read 1 read 2 inc 2 inc 1 read 1 inc 1 read 2 inc 2 observ first two execut effect caus execut professor enter state w 2 monitor valu cm return read less valu two access less jprof third execut two access proceed atom also effect cm valu two access jprof gamma 2j third execut professor execut first access enter w 2 monitor professor enter state e start meet first professor ffiinterv expir learn meet establish reaccess cm also enter state e start meet situat similar first two execut professor enter state e start meet reaccess counter three interleav execut preserv synchron properti algorithm break atom testop clearli effect algorithm exclus fair properti note system perform may increas revers order execut read inc action implement testopcm inc inc see consid case two professor attempt access cm simultan follow two possibl interleav execut inc 1 inc 2 read 1 read 2 inc 1 inc 2 read 2 read 1 suppos cm valu access jprof two increment professor upon read valu cm learn professor interest enter state e start meet moreov new implement 7 assum basic machinelevel instruct inc dec load store execut atom thu two instruct execut concurr result equival sequenti execut unknown order 8 concurr access counter allow one professor may access cm simultan enter state w2 monitor cm jprof access likewis lemma 1 assum access counter atom need slightli chang reflect possibl professor prof state w2 time inc still ensur multi synchron properti regardless action overlap testopcm inc inc instruct interleav 9 similarli interleav read decnoop differ professor reaccess counter invalid algorithm synchron properti simultan access reaccess counter may conflict illustr suppos p 1 wish access cm p 2 wish reaccess suppos valu cm attempt jprof access proce atom p 2 reaccess professor enter state e start meet howev four constitu action interleav follow read 2 inc 1 read 1 dec 2 decrement cm one go state w 0 select new committe hand sinc p 2 decrement discov thu enter state e start henc synchron requir violat ensur access reaccess counter mutual exclus time allow concurr access concurr reaccess implement testopcm inc inc testopcm noop dec use algorithm shown figur 8 9 algorithm base dekker algorithm biprocess critic section problem 16 discuss return new valu cm cm access count counter record number professor attempt access cm cm reaccess count record number professor attempt reaccess cm counter initi zero furthermor variabl cm turn initi access use resolv conflict access reaccess seen professor enter critic section access cm cm access count professor attempt access cm may modifi cm access count test cm reaccess count cm access count 0 follow professor p enter critic section access cm professor simultan enter critic section reaccess cm moreov professor enter critic section 9 new implement adopt line 3 figur 2 need chang testopcm inc inc 0 testopcm inc inc return valu cm access note howev testopcm op dec must still return valu cm access return valu cm access return valu zero execut professor p would abl tell 1 p interest p decreas cm one return state w0 retri anoth committe 2 member prof interest p leav cm unchang enter state e start meet 1 inc cm access count 2 cm reaccess count 0 3 cm turn reaccess f 4 dec cm access count 5 cm turn reaccess noop 6 inc cm access count g 7 begin critic section 8 incc 9 return readc 10 end critic section 11 dec cm access count 12 cm access count 0 cm turn reaccess figur 8 implement testopcm inc inc 1 inc cm reaccess count 2 cm access count 0 3 cm turn access f 4 dec cm reaccess count 5 cm turn access noop 6 inc cm reaccess count g 7 begin critic section 8 readc 9 els f return readc 10 end critic section 11 dec cm reaccess count 12 cm reaccess count figur 9 implement testopcm noop dec reaccess cm p alreadi critic section yet left critic section similarli professor critic section reaccess cm professor enter critic section access cm mutual exclus properti therefor hold note possibl professor critic section say access cm professor alreadi flip cm turn reaccess line 12 figur 8 howev prematur flip cm turn invalid algorithm mutual exclus properti enter critic section reaccess cm depend valu cm turn rather valu cm access count long professor critic section access cm cm access count remain greater 0 professor exit whileloop figur 9 line 26 reaccess cm algorithm also deadlockfre see consid arbitrari time instanc prof set professor wish access cm r prof set professor wish reaccess cm definit consid plight p 2 similar reason appli case reaccess obvious p succeed otherwis happen next depend valu cm turn cm turn access professor r must undo increment cm reaccess count wait line 5 figur 9 cm turn flip reaccess cm reaccess count reset zero p enter critic section convers cm turn reaccess p professor must undo increment cm access count collect reset valu variabl zero wait line 5 figur 8 professor r enter critic section flip cm turn access moreov algorithm permit concurr access concurr reaccess mean professor p 1 attempt access cm professor p 2 access counter may succeed even alreadi third professor wait reaccess cm critic section cm turn access professor wait reaccess cm block line 5 figur 9 cm reaccess count 0 p 1 immedi enter critic section note allow subsequ professor concurr access counter indefinit delay professor wait reaccess counter 1 number professor committe finit 2 professor ps access cm must follow reaccess counter unless ps access lead committe meet case professor must enter state e wait member finish reaccess start meet assumpt a1 time access reaccess ie ffiinterv must long enough professor finish access note permit concurr access highli desir increas likelihood establish committe meet exampl suppos two set professor wait access reaccess cm respect professor alreadi access counter defer reaccess access proceed help member reach consensu schedul access reaccess fair manner eg altern add help establish meet conclus present multi new random algorithm schedul multiparti interact shown properli set valu ffi amount time process will wait interact establish algorithm weak strong interact fair probabl 1 result hold even time take access share variabl commun delay nonneglig knowledg make multi first algorithm strong interact fair appear literatur strong interact fair proven imposs determinist algorithm result therefor indic random feasibl effici countermeasur imposs phenomena furthermor sinc known fair notion weaker strong interact fair implement via random exampl strong process fair 1 process infinit often readi enabl interact shall particip interact infinit often also realiz random algorithm spite fact implement determinist multiparti interact schedul 19 9 multi extens francez rodeh random algorithm csplike biparti inter action francez rodeh abl claim weak interact fair algorithm limit assumpt commun time neglig compar ffi case strong interact fair would possibl even determinist set also analyz time complex algorithm like reif spirakiss realtim algorithm 17 expect time taken multi establish interact constant depend total number process system although multi present sharedmemori model easili convert messagepass algorithm let process maintain share variabl process commun messag pass obtain valu variabl time readwrit share variabl account time take deliv messag ffi paramet assumpt a1 properli adjust reflect new commun delay weak strong interact fair notion still guarante probabl 1 multi origin describ section 3 use oper testop process access share counter atom oper rather complex gener avail moreov unnecessarili elimin potenti concurr section 44 propos implement testop use basic atom instruct inc dec load store implement multi machin support atom execut instruct could well case inc dec interest open problem discuss section 44 implement testop would much simpler generalpurpos mutual exclus algorithm use instead howev know mutual exclus algorithm allow concurr access critic section access conflict one anoth therefor design solut final unlik determinist algorithm random algorithm multi guarante averagecas behavior worstcas bound would therefor interest conduct simul studi multi measur respons time practic set experi size max c max see section 43 vari small constant larg valu approach number professor system would especi insight acknowledg would like thank anonym refere care read manuscript valuabl comment r apprais fair languag distribut program ming fair abstract design distribut system fair hyperfair multiparti interact process synchron design perform evalu distribut algo rithm foundat parallel program design cours probabl theori interact process multiparti approach coordin distribut program distribut abstract data type implement probabilist commun scheme character fair implement multiparti interact coordin firstord multiparti interact comprehens studi complex multiparti interact implement nparti synchron use token advantag free choic symmetr fulli distribut solut dine philosoph problem extend abstract distribut synchron scheme fair multiprocess handshak new effici implement multiprocess synchron algorithm mutual exclus real time synchron interprocess commun distribut algorithm ensur fair interprocess commun imposs result interprocess synchron tr ctr catuscia palamidessi oltea mihaela herescu random encod calculu mix choic theoret comput scienc v335 n23 p373404 23 may 2005 rafael corchuelo jo prez antonio ruizcort aspectori interact multiorganis webbas system comput network intern journal comput telecommun network v41 n4 p385406 15 march