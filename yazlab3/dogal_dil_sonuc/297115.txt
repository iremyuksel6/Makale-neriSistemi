coordin heterogen distribut cooper constraint solv paper argu altern way design cooper constraint solver system use controlori coordin languag idea take advantag coordin featur manifold improv constraint solver collabor languag bali demonstr valid idea present advantag realiz practic well conceptu improv constraint solv convinc cooper constraint solv intrins link coordin coordin languag manifold particular open new horizon system like bali b introduct need constraint solver collabor wide rec ogniz gener approach consist make sever solver cooper order process constraint could solv least effici singl solver bali 21 23 22 realiz system term languag constraint solver collabor languag constraint program solver collabor glassbox mechan enabl one link blackbox tool ie solver bali allow one build solver collabor solver cooper 25 solver combin 17 compos compon solver use collabor primit implement eg sequenti concurr parallel collabor scheme control primit iter fixedpoint condit hand concept coordin number activ run concurr parallel distribut fashion recent receiv wide attent 4 5 iwim model 1 2 ideal worker ideal manag base complet symmetri decoupl produc consum well clear distinct comput coordina tioncommun work perform process direct realiz iwim term concret coordin languag name manifold 3 alreadi exist due lack explicit coordin concept con struct implement bali fulli realiz formal model treatment disjunct search jeopard complet satisfactori constraint solv point view mainli due two caus 1 dynam aspect formal model bali 2 use heterogen solver ie solver written differ program languag differ data rep resent coordin languag abl deal dynam process channel creation duplic di reconnect abl handl extern heterogen solver routin automat data convers fullfil requir formal model bali overcom problem current implement guid us differ coordin model lead us iwim model manifold languag coordin cooper constraint solv intrins link motiv investig new organiz model bali base manifold result show widerthanexpect rang implic system improv term robust ness stabil requir resourc constraint solv activ also improv result clariti search effici handl disjunct modular system implement closer formal model split three part 1 constraint program activ 2 solver collabor lan guag 3 coordinationcommun compon qualifi roughli quantifi improv coordin languag specif manifold bring cooper constraint solv conclus promis feel confid undertak futur implement bali use manifold rest paper organ follow next section brief overview bali organiz model weak implement section 3 overview manifold describ coor dinationcommun bali use featur manifold system highlight improv feel signific constraint solv sec tion 4 final conclud section 5 discuss futur work bali 21 environ solver collabor ie solver cooper 25 14 solver combin 26 29 separ constraint program host languag constraint solv solver collabor languag host languag constraint program languag 34 possibl constraint logic program languag 16 11 necessari express requir solver collabor solver collabor languag solver collabor languag support three strategi call solv strategi first strategi consist determin satisfi constraint store time new constraint occur increment use solver second strategi altern method solv constraint store final state reach eg end resolut logic program last strategi allow user trigger solver demand exampl test satisfi store sever constraint settl furthermor bali allow sever solver collabor conjunct differ solv strate gie coexist singl system exampl solver s1 use increment s2 execut end s3 s4 alway trigger user sinc constraint program part bali less interest point view coordin 1 paper focus constraint solv techniqu ie constraint solver collabor languag bali domain independ languag design realiz solv mechan term solver collabor follow certain solv strategi basic object handl languag heterogen solver use insid collabor primit integr sever paradigm sequenti parallel concur renci commonli use solver combin cooper order write finer strategi also introduc control primit iter fixedpoint condit collabor languag implement level bali distribut cooper constraint program system compos languag solver collabor whose implement allow one realiz server potenti client connect plu host languag whose implement special client server solver collabor glassbox mechan enabl one link blackbox tool ie solver applic alreadi use bali 23 exam ple simul cosac 25 realiz solver collabor design nonlinear constraint 21 constraint solver collabor languag bali detail descript solver collabor languag bali found 23 21 section give brief overview collabor primit bali complet syntax solver collabor languag bali given figur 1 sequenti denot seq mean solver e2 execut constraint store c 0 result 1 constraint program part bali describ 21 22 applic solver e1 constraint store c sever solver work parallel denot split constraint store c sent everi one result solver gather togeth order constitut new constraint store analog c concurr denot dc interest sever solver base differ method appli nondisjoint part constraint store result collabor result singl solver compos constraint manipul result must also satisfi given properti concurr function set psi figur 1 exampl basic standard function psi return result first solver finish execut complex function consid solv form select result first solver whose solut specif solv form comput domain result solver may even stop soon chosen taken account concurr primit similar dont care commit also provid control choos new store use function posit integ boolean observ function e j e ar figur 1 syntax solver collabor languag bali primit compris comput part collabor languag connect combin compos control part use primit iter condit fixedpoint order design complex solver collabor fixedpoint combin denot f p repeatedli appli solver collabor inform extract constraint store combin allow one creat idempot solvercollabor nonidempot solvercollabor primit combin complet static defin introduc observ function constraint store allow one get dynam primit function evalu runtim enter primit use current constraint store function may either arithmet set oa figur boolean set ob figur 1 arithmet observ function profil store n three function 1 card var comput number distinct variabl constraint store interest solver sensit number vari abl 2 card c return number atom constraint compris store import solver whose complex function number constraint solver base propag 3 card uni var return number univari atom constraint essenti solver whose effici improv univari constraint interv propag solver boolean observ function profil store boolean three function 1 linear test whether exist variabl occur atom constraint interest decid applic linear solver 2 uni var test whether least one univari equal store inform import sinc exampl univari constraint gener start point interv propag 3 tri test whether store triangular form ie equal constraint variabl x variabl x x z interest elimin variabl determin order grobner base comput repeat combin denot rep similar fixedpoint combin allow appli solver n time n result applic observ function composit observ function constraint store sinc primit take account constraint form runtim improv dynam aspect collabor languag final condit combin denot appli one solvercollabor anoth depend evalu condit also depend observ function constraint store follow exampl illustr solver collabor languag seqadcbasicbcdspliteff pg consid appli collabor scheme constraint store c 2 first appli c return c1 b c appli c1 first one finish give new constraint store c2 e f execut c2 solut c3 composit c 0 3 solut e c 00 3 solut f final g repeatedli appli c3 fixpoint c4 reach final solut collabor 22 organiz model implement role organiz model implement 1 creat distribut environ integr heterogen solver 3 2 establish commun solver spite differ 3 coordin ex ecut organiz model turn solver collabor server client implement host languag kind process requir solver connect model enabl us implement bali createexecut solver collabor 21 2 order simplifi explan consid solver return one solut one disjunct detail treatment disjunct next section 3 solver softwar librari tool clientserv architectur data represent written differ program languag execut differ architectur oper system 221 agent realiz solver solver collabor het erogen howev encapsul mechan homogen system obtain call agent agent autonom creat work termin independ other henc agent execut parallel concurr distribut architectur solver encapsul creat simpl agent shown 21 solver collabor solver appli concept architectur encapsul becom hierarch oper henc sever simpl agent encapsul order build complex agent howev view outsid capsul simpl complex agent ident admiss convert recomposit eclips intern eclips convert figur 2 simpl agent current implement bali solver encapsul eclips 4 process see figur 2 henc eclips launch solver reconnect input output pipe data structur convert written prolog data exchang capsul solver perform via string encapsul also provid constraint store solver repres local databas store inform admiss function abl recogn constraint store handl solver recomposit function recreat equival store use constraint treat solver constraint admiss solver interfac agent eclips process moreov prolog term transmit two eclips process interag commun thu realiz high level term string bit furthermor need syntact analyz pair agent complex agent encapsul solver collabora behav like simpl agent though intern environ bit differ see figur 3 constraint store keep inform receiv knowledg base manag base recomposit function rebuild constraint store agent send solut major work complex agent coordin determin collabor primit repres agent encapsul 4 eclips 20 common logic program system develop ecrc eclips coordin eclips encapsul intern eclips recomposit encapsul figur 3 complex agent 222 coordin describ coordin implement bali see 21 detail coordin formal model agent one three differ state run r sleep wait w agent receiv constraint c becom run solv c agent w state wait answer one agent agent state neither run wait state togeth commun among agent enabl us describ coordin constraint solver sequenti primit seqs1 s2 sn tri solv constraint sequenti appli sever solver first send constraint s1 wait solut c1 receiv solut s1 send s2 wait solut c2 send s3 reach sn final solut cn sn forward superior agent one solut sequenti primit sinc consid solver enumer solut ie solut repres disjunct complet solut sequenti agent must wait disjunct sn treat way cn backtrack perform sngamma1 sngamma2 back s1 sequenti collabor sever agent pipelin work parallel solut pass sequenti one agent next primit splits1 s2 sn appli sever solver parallel constraint solut split cartesianproductlik recomposit solut s1 s2 sn split agent receiv solv request superior forward wait store solut final split agent creat element cartesianproduct solut send one one superior agent dont care primit dc1 s1 s2 sn introduc concurr among solver upon receiv constraint c superior dont care agent forward c subag wait solut c 0 subag c 0 satisfi 1 5 c 0 forgotten dont care agent wait solut anoth subag one produc c 0 soon dont care agent receiv solut c 0 5 1 element set boolean function test whether constraint satisfi properti satisfi 1 subag stop c 0 well solut produc forward superior agent fixpoint primit f ps repeatedli appli con straint inform extract constraint solv process start fixpoint agent receiv constraint c superior iter process iter k consid set ck disjunct treat eg iter 1 c1 consist singl element c iter k mk disjunct ck must treat fixpoint agent choos one element ck cki remov ck send collect solut 6 solut equal cki fixpoint reach di junct fixpoint agent forward superior agent otherwis solut produc ad ck1 treatment appli element ck complet set ck1 solv process enter iter 1 process termin end iter k set ck1 empti repeat primit coordin repeat primit ident fixpoint collabor except stop given number n iter number n comput runtim result applic arithmet function ffi current constraint store arithmet function ffi compos observ function constraint store ele ment oa see figur 1 solv process start repeat agent receiv constraint c superior first n comput coordin analog one fixpoint primit process termin end iter n everi solut return everi disjunct cn sent superior agent condit primit iffls1s2 reather simpl receiv constraint c superior agent primit appli function fl c boolean function compos arithmet boolean observ function constraint store flc true c forward subcollabor s1 otherwis sub collabor s2 primtiv becom intermediari one subag superior agent ie soon select subag send solut forward immedi superior agent fact evalu flc condit primit act similarli sequenti primit singl subag 23 weak implement although eclips provid function manag process commun coordin languag thu implement exactli realiz formal model bali featur jeopard even miss describ disjunct constraint disjunct constraint return solver treat one primit even store treatment delay sequenti primit drastic jeopard solv process fixpoint primit realli endang resolut must wait disjunct given iter enter next one solut would duplic due encapsul mechan 6 reach fixpoint solver return one solut reason treatment disjunct lead loss effici mix search 7 solv complet conveni constraint program point view static architectur anoth limit bali due fact architectur repres collabor fix due implement constraint limit coordin featur eclips collabor first complet launch use solv constraint thu loss dynam 1 part architectur creat even requir 2 agent duplic although would interest primit fixpoint state disjunct alway handl effici compromis featur although formal model bali allow use light solver implement well suit support agent coars grain encapsul use memori cpu solver thu mix heavi solver gb 10 mapl 12 light solver rewrit rule transform rule recommend check made ensur architectur commun channel creat properli manag resourc load balanc static launch collabor user must decid machin solver run 3 manifold new coordin bali explain use coordin languag manifold 3 significantli improv implement bali remain closer formal model 31 coordin languag manifold manifold languag manag complex dynam chang interconnect among set independ concurr cooper process 1 manifold base iwim model commun 2 basic concept iwim model thu also manifold process event port channel advantag targetedsendrec model objectori program model tool pvm 13 par mac 15 mpi 7 base discuss 1 27 manifold applic consist potenti larg number process run network heterogen host may parallel system process applic may written differ program languag manifold system consist compil runtim system librari number util program librari builtin predefin process link file gener call mlink runtim configur call config system port sever differ platform eg sgi irix 63 sun 4 solari 52 ibm sp1 sp2 linux mlink use object file produc manifold languag compil produc link file makefil need compos execut file requir platform run time ap plicat config determin actual host process creat manifold applic run 7 search strategi breadthfirst fixpoint repeat primit depthfirst sequenti dont care primit librari routin compris interfac manifold process written languag eg c automat perform necessari data format convers data rout variou differ machin manifold success use number applic includ parallel reallif heavi duti comput fluid dynam algorithm origin written fortran77 8 9 18 implement looselycoupl genet algorithm parallel distribut platform 31 33 32 32 bali manifold although bali solver blackbox heterogen caus problem manifold integr solver extern worker thu commun coordin defin among way normal manifoldag manifold bring mani improv bali robust manag fault system easi task eclips ffl portabl manifold run sever architectur requir thread facil subset pvm 13 ffl modular current implement constraint solv separ constraint program use manifold also split coordin part solv part ffl extens collabor languag primit independ coordin thu ad new primit simplifi ffl addit new featur manifold provid tool implement certain function avail current version bali eg choic machin light weight process architectur load etc follow elabor signific point ie one make intens use manifold featur one signific constraint solv 321 lighter agent denot coordin rec conv solver adm conv figur 4 lighter simpl agent current encapsul one eclips process solvercollabor realli heavi manifold produc lighter capsul use thread realiz filter worker replac comput modul eclips thu simpl agent see figur 4 consist ffl coordin manag messag agent insid encapsul coordin also inout gate capsul commun superior agent ffl solver previou implement ffl four filter manifold worker first filter constraint solver handl second convert data syntax solver third convert solut solver global syntax 8 last recompos equival solut base solut solver constraint handl complex agent see figur 5 encapsul sever simplecomplex agent togeth filter filter coordin coordin describ section 322 special collabor primit agent repres split collabor one filter requir store manag collect solut subag increment build element cartesianproduct soon one element complet sent coordin dont care primit one filter requir appli function constraint sequenti primit well fixpoint filter requir seq coordin coordin split dc coordin sn sn sn store man coordin fixpoint figur 5 lighter complex agent new kind encapsul sever advantag global architectur repres solver collabor requir less process also less mem ori due sever fact use thread instead heavi process notion filter share worker filter solver sever agent see figur 6 creation anoth instanc solver depend activ alreadi run instanc agent blackbox anymor becom glass box share solver filter agent main advantag certainli follow coordin separ filter encapsul individu modul depend specif type collabor implement use featur manifold thu possibl arriv coordin scheme respect formal model bali 8 global syntax syntax use filter agent store sn coordin coordin solver conv rec conv coordin dc coordin split conv conv solver adm f sn man rec figur share solver filter 322 coordin use manifold new encapsul process possibl overcom problem inher previou implement bali dynam handl solver sinc coordin featur separ filter worker set distribut architectur use longer disjoint phase mean solv request sent collabor built increment agent agent necessari compon creat exampl condit guard collab orat els subcollabor launch anoth request sent collab orat launch compon reus possibl augment newli creat compon solvercollabor request solv con straint sever case aris solvercollabor alreadi launch instanc creat alreadi launch instanc busi ie instanc current work con straint anoth instanc creat otherwis one instanc reus new comput function find instanc manag function see appendix a1 dynam handl disjunct contrari current implement 9 disjunct treat dynami calli demonstr sequenti collabor seqs1 s2 sn disjunct produc s1 must sent s2 eclips disjunct c1 s1 complet solv s2 sn mean possibl disjunct creat s2 sn produc treat next disjunct c2 s1 manifold allow us use pipelin solv c2 soon produc s1 s2 still work c1 instanc s2 busi new instanc s2 creat solv c2 treatment c2 longer postpon mechan appli subag sequenti agent introduc new problem may combinatori explos number instanc s2 sn howev rare happen agent produc solut agent i1 alreadi solv alreadi solv previou constraint thu 9 current fixpoint coordin wait solut subcollabor enter next iter instanc alreadi return sleep state reus nevertheless follow case may aris suppos solver arrang index grow design solver becom slower suppos everi creat disjunct number instanc becom exponenti case system therefor run resourc order overcom problem number instanc limit see appendix a1 thu solv request sent agent maxim number instanc reach instanc busi superior agent wait first instanc return sleep state mechan impli complet dynam treatment disjunct howev give good compromis delay solv disjunct physic limit resourc coordin primit describ coordin sequenti primit primit detail appendix algorithm present pascallik languag extend event function consid queue messag p mean messag receiv port p task p alg mean remov messag port p execut algorithm alg messag p condit execut task alg latter interrupt end messag sent agent enumer disjunct agent number flag repres state describ section 222 figur 7 duplic sequenti primit coordin seqs1sn s1sn subag s0 supag port p0in pnin 0in1 piin link psiout si p01out p0n1out 0in1 p0iout link psiin si p0n1out link ps0in s0 task c piin jnull send c pji1out mimi1 els send c piin c sent piin till instanc si1 becom free task end piin si1 sleep si sleep task end pnin sn1 sleep sn sleep send end p0n1out task c piin use forward solut i1 instanc i1 free possibl creat new instanc messag sent treat later detect end sequenti primit count solut end messag subag agent becom sleep igamma1 alreadi sleep produc mani end messag number solut igamma1 superior agent s0 never duplic insid collab orat sinc coordin creat subarchitec ture collabor duplic job superior agent either find free instanc collabor creat one maxim number instanc yet reach see figur 7 8 exampl duplic dc dc ys ss figur 8 duplic dont care primit seen coordin languag manifold particular help implement cooper constraint solv howev advantag implement level manifold allow implement closer formal model bali impli signific benefit constraint solv faster execut time better debug clariti search 28 constraint solv see tabl 9 architectur also gain improv robust reliabil iti qualiti better manag resourc see tabl 10 last point also consequ end user architectur repres solver collabor becom lighter end user build complex collabor thu solv problem could tackl constraint solv treatment disjunct key point constraint solv commonli requir search depthfirst time sever candid appear take one continu reach solut backtrack tri candid one reason choic gener one solut quir contrari first implement bali coordin describ manifold lead call parallel depthfirst quickfirst search parallel depthfirst search obviou quickfirst search aris fact constraint flow agent independ other henc ignor boundari condit reach instanc limit solver mention never delay anoth constraint stop input solver queue result solut fastest comput even origin first disjunct solver better chanc becom first solut given solver collabor 10 debug collabor improv graphic interfac present output eas coordin duplic messag send special worker latter link display window text graphic profil enabl user observ flow data collabor thu user extract statist util solver draw conclus effici newli design collabor process lead methodolog design solver collabor due encapsul techniqu current implement jeopard use fine grain solver solver requir littl memori cpu although envisag encapsul singl function eclips pro cess reason though realli design fine grain agent manifold still give freedom use singl function rewrit rule constraint tran format solver manifold singl function simplifi constraint easili insert collabor thread without compromis effici whole architectur significantli enlarg set solver integr bali bali eclips manifold search solv mix depthfirst first solut execut time treatment disjunct use fine grain solver add solver encapsul extens collabor languag debug tool improv solver collab input graphic interfac output graphic interfac figur 9 improv constraint solv coordin separ collabor collabor primit impli coordin separ convert recomposit function admiss branch lead faster solut find quickli explor branch one function thu filter easili implement new primit coordin modi fie case filter must ad architectur major limit bali larg amount resourc requir cours intrins problem cooper solver gener costli memori cpu etc anoth limit factor overhead current encapsul mechan new encapsul techniqu manifold decreas requir resourc furthermor dynam handl disjunct expect new architectur less voraci bali eclips manifold construct architectur static dynam robust extens bali stabil graphic interfac inoutput qualiti commun coordin function number process solver number commun figur 10 improv architectur system gain robust sinc current failur detect architectur possibl collabor stabl less suscept broken commun memori alloc problem dynam build architectur decreas number unnecessari process agent requir comput launch neg point increas communica tion current implement encapsul compos two commun process eclips solver filter modul eclips process manifold filter independ agent also exchang inform howev creat bottleneck sinc messag gener short commun agent usual thread process use share memori commun singl agent conduct monitor commun 5 conclus introduc altern approach design cooper constraint solv system coordin lan guag manifold particular exhibit properti appropri implement bali howev implement improv advantag use manifold produc system closer formal model bali signific benefit also obviou constraint solv major improv treatment disjunct homogen search reduct requir resourc fare manag disjunct return solver often lead quicker solut moreov due replic complet set solut alway comput effici although mix search use current implement bali realli influenc resolut look solut problem becom real nuisanc look one solut furthermor observ resolut follow flow constraint conceiv abl manifold overcom problem provid parallel depthfirst quickfirst search disjunct handl independ thu constraint resolut delay queu compar bali system cc 30 oz 19 easi sinc object 21 cc formal framework concurr constraint program oz concurr constraint program system howev one major distinct bali contrari oz cc enabl collabor heterogen solver anoth essenti differ concern separ task oz cc constraint pro gram constraint solv coordin agent mix bali constraint program separ cooper constraint solv use manifold cooper constraint solv split coordin agent constraint solv aspect cooper constraint program independ task sinc implement model bali manifold clearli defin sure start implement phase moreov know feasibl task alreadi qualifi well roughli quantifi improv henc know worthwhil work futur plan integr visual interfac assist programm write complex solver collab orat achiev use visifold 6 predefin graphic coordin order perform optim think ad anoth search techniqu bali best solut search branch bound kind search gener manag constraint languag howev manifold coordin repres collabor primit perform follow task elimin disjunct current best solut also manag updat current best solut branch thu improv perform sooner constraint solver extens mechan solex 24 consist rulebas transform seen elementari solver implement solex bali realli conceiv rulebas transform fine grain solver encapsul new model implement solex becom reason final convinc cooper constraint solv intrins link coordin coordin languag open new horizon system like bali r coordin massiv concurr activ iwim model coordin concurr activ manifold20 refer manual mean coordin languag parallel program visifold visual environ coordin languag introduct mpi standard restructur sequenti fortran code paral leldistribut applic use coordin parallel sparsegrid method 3d cfd problem mapl v user guid refer manual symbolicnumer branch prune algorithm solv nonlinear polynomi sy tem parmac v6 constraint logic pro gram survey combin symbol constraint solver algebra domain multipl semicoarsen multigrid 3d cfd eclips user manual collabor de solveur pour la programm logiqu contraint phd thesi universit henri poincaren environ designingexecut constraint solver collabor constraint solver collabor languag bali solex domainindepend scheme constraint solver ex tension implement nonlinear constraint cooper solver simplif cooper decis procedur search strategi comput problem solv cooper decis procedur satisfi problem concurr constraint program distribut evolutionari optim manifold rosenbrock function case studi parallel distribut evolutionari comput manifold parallel evolutionari comput multi agent genet algorithm strateg direct constraint program tr ctr monfroy carlo castro basic compon constraint solver cooper proceed acm symposium appli comput march 0912 2003 melbourn florida