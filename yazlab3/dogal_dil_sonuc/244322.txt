framework resourceconstrain rateoptim softwar pipelin abstractth rapid advanc highperform comput architectur compil techniqu provid challeng opportun exploit rich solut space softwar pipelin loop schedul paper develop framework construct softwar pipelin loop schedul run given architectur fix number processor resourc maximum possibl iter rate la rateoptim minim number buffersa close approxim minim number registersth main contribut paper first demonstr problem describ simpl mathemat formul precis optim object period linear schedul framework mathemat formul provid clear pictur permit one visual overal solut space rateoptim schedul differ set constraint secondli show precis mathemat formul solut make signific perform differ evalu perform method three lead contemporari heurist method experiment result show method describ paper perform significantli better methodsth techniqu propos paper use two differ way 1 compil option use gener faster schedul performancecrit loop interest user will trade cost longer compil time faster runtim 2 framework compil writer evalu improv heuristicsbas approach provid quantit inform much heurist method could improv b introduct oftwar pipelin propos effici method loop schedul deriv static parallel schedul period pattern overlap instruct differ iter loop bodi softwar pipelin success appli highperform architectur 1 2 3 4 5 6 7 8 9 10 11 12 13 14 today rapid advanc comput architectur hardwar softwar technolog r govindarajan supercomput educ research center depart comput scienc automa tion indian institut scienc bangalor 560 012 india e mailgovindserciiscernetin erik altman ibm j watson research center yorktown height ny 10598 usa e mailerikwatsonibmcom guang gao school comput scienc mcgill univers 3480 univers street montreal h3a 2a7 canada emailgaocsmcgillca work done first two author mcgill univers research partli fund research grant micronet network centr excel canada nserc canada provid rich solut space involv larg number schedul softwar pipelin exploit space good compiletim schedul import find fast softwarepipelin schedul make best use machin resourc function unit regist avail underli architectur paper interest address follow softwar pipelin problem problem 1 opt given loop l machin architectur construct schedul achiev highest perform l within resourc constraint use minimum number regist perform softwarepipelin schedul measur initi rate success iter thu highest perform refer fastest sched ule schedul maximum initi rate schedul maximum initi rate call rateoptim schedul follow two import question relat problem 1 opt problem question 1 simpl mathemat formul develop opt problem question 2 optim formul pay real term need answer question order answer question 1 consid instanc problem 1 problem 2 optt given loop l machin architectur iter period construct schedul one exist period satisfi resourc constraint use minimum number regist paper consid target architectur involv pipelin nonpipelin execut unit approach solv optt problem base period schedul framework softwar pipelin framework 15 11 base period schedul frame work present simpl integ linear program ilp formul optt abl express resourc constraint linear constraint combin resourc constraint work ning gao tight upper bound regist requir specifi use linear constraint 11 unifi formul optt problem obtain 11 use fifo buffer model regist requir paper relationship ninggao formul better understood examin fig 2 page tradeoff buffer function unit optim depict ieee transact parallel distribut system vol xx month 1996 reader familiar relat work field find optim object problem formul ambiti cours gener complex optim solut nphard heurist need solv problem effici howev feel clearli state optim object problem formul quit import sever reason 1 solut space good schedul 1 increas consider rapid advanc highperform architectur current futur gener processor like contain multipl function unit likewis compil advanc made depend analysi array dataflow analysi 16 alia analysi 17 expos instructionlevel parallel code loop unrol loop fusion techniqu increas size loop bodi 18 given loop like mani good schedul choos optim criteria essenti guid select best one 2 alway good number user performancecrit applic runtim perform applic utmost concern applic user may will trade longer compil time improv runtim speed compil futur gener highperform architectur deni opportun user techniqu develop paper provid user via compil option 3 techniqu propos paper also use schedul framework ascertain optim solut evalu improv exist ingnewli propos heurist schedul method thu use techniqu propos paper view light item 1 3 implement solut method test 1008 loop extract variou benchmark program spec92 na kernel linpack livermor loop loop schedul differ architectur configur involv pipelin nonpipelin execut unit experi abl obtain optim schedul 80 test case consid experi run sparc 20 requir execut time median rang 06 27 second differ architectur configura tion geometr mean execut time rang 09 74 second question 2 question address compar method 3 approach huff slack schedul 7 wang eisenbei jourdan su frlc variant despdecompos softwar pipelin 19 gasperoni schwiegelshohn modifi list schedul approach 20 implement solut method optt opt problem well three heurist method experiment schedul testb measur perfor discuss solut space softwarepipelin schedul present section iii manc variou schedul method 1008 kernel loop ilp approach yield schedul faster 6 test case compar slack schedul 21 test case compar frlc method 27 test case compar modifi list schedul ing term buffer requir ilp approach significantli better three heurist method spectiv 61 87 83 test case 2 paper concentr loop bodi without condit statement though possibl extend approach loop involv condit statement use techniqu discuss in21 clear whether optim object still hold defer studi futur work work focu architectur involv pipelin nonpipelin function unit function unit arbitrari structur hazard dealt 22 extend formul propos nonpipelin function unit final becom evid propos framework easili handl optim problem softwar pipelin exampl given number avail regist minim either number requir fu weight sum fu differ fu type possibl problem formul observ figur 2 refer page 6 paper organ follow follow sec tion motiv approach help exam ple solut space softwar pipelin schedul discuss section iii section iv formul optt problem pipelin execut unit devel ope optt formul nonpipelin function unit present section v section vi deal iter solut opt problem section vii result schedul 1008 benchmark loop report ilp schedul compar schedul gener lead heurist method section viii section ix discuss relat work conclud remark present section x ii background motiv section motiv opt problem solut method present rest paper help program exampl motiv exampl introduc notion rateoptim schedul resourc constraint illustr search among one optim regist usag rigor introduct concept given next section adopt motiv exampl loop l figur 1 given rau et al 13 c languag instruct level represent loop given fig 1b depend graph depict figur 1a assum instruct 0 2 small number test case less 4 ilp schedul wors term either initi rate buffer requir due fact limit ilp search maximum 3 minut detail result present section vii govindarajan altman gao resourceconstrain rateoptim softwar pipelin 3 depend graph address ai new ai branch 0 n b program represent fig 1 exampl loop execut integ fu execut time 1 time unit instruct 2 float point fp add instruct execut fp unit execut time 2 time unit lastli fp load 1 fp store 5 execut loadstor unit execut time 2 1 time unit respect assum architectur 3 integ fu 2 fp unit 1 loadstor unit fur ther subsect assum pipelin function unit free structur hazard oper initi function unit time step schedul nonpipelin function unit discuss section iic perform softwarepipelin schedul l measur initi rate success itera tion follow discuss often use reciproc initi rate initi interv let us first establish lower bound ie shortest initi interv loop l variou constraint well known initi interv govern loopcarri depend graph resourc constraint present architectur loopcarri depend constraint shortest initi interv dep given 8cycl c dc sum delay latenc instruct node cycl c depend graph mc sum depend distanc around cycl c 23 cycl c crit maximum valu dccrit mccrit term critic cycl graph exampl graph refer fig 1a self loop instruct critic cycl thu dep given depend graph 2 resourc constraint architectur also impos lower bound initi interv resourc type function unit eg integ fu impos lower bound resourc constraint bound re instruct execut fu type r number fu type r exampl re integ re re loadstor overal resourc constraint bound denot re re r fu type r thu consid depend resourc constraint lower bound minimum initi interv lb exampl pipelin fu schedul loop l obey resourc constraint period greater equal lb 2 smallest iter period tmin lb resourceconstrain schedul exist call rate optim period given resourc constraint given loop observ initi rate 1 given ddg may improv unrol graph number time unrol factor decid base either dep re valu howev purpos paper consid unrol graph though techniqu develop paper use case well 4 ieee transact parallel distribut system vol xx month 1996 schedul motiv exampl time step b illustr opt problem paper investig period linear schedul time variou oper begin execut govern simpl linear relationship linear schedul consid paper jth instanc instruct begin execut time integ offset initi interv iter period given schedul initi rate schedul tabl give possibl schedul schedul 2 exampl loop schedul obtain linear schedul form prologu time step 0 time step repetit pattern time step 10 11 first time step repetit pattern time step store instruct execut requir 1 fp unit 1 integ fu 1 loadstor unit instruct 3 4 5 execut second time step time step requir 2 fp unit 1 loadstor unit sinc resourc requir repetit pattern less avail architectur resourceconstrain schedul schedul one resourceconstrain schedul achiev fastest initi interv next let us comput regist requir schedul schedul instruct 0 fire six time first 5 fire sinc data depend valu produc 0 must buffer access 5 order insur correct execut program conceptu sort fifo buffer need place produc consum node paper assum buffer reserv time step instruct issu remain reserv last instruct consum valu complet ex ecut size buffer depend lifetim valu therefor buffer size 6 need alloc instruct 0 anoth exampl four instanc 1 execut execut first instanc 4 consequ buffer size 4 requir instruct similar way buffer size 1 requir instruct 3 4 buffer size 2 requir instruct 5 store successor instruc tion sinc store latenc 1 5 requir 1 buffer thu total buffer size 15 requir schedul shown instruct total conceptu fifo buffer either directli implement use dedic architectur featur circular buffer rotat regist 24 map physic regist appropri regist move convent architectur describ 8 25 25 26 demonstr minimum buffer requir provid tight upper bound total regist requir buffer assign done classic graph color method subsequ perform gener lead minimum regist quirement paper assum color phase alway perform buffer size de termin consequ restrict attent fifo buffer logic regist question interest exist rate optim schedul l resourc constraint use fewer regist exactli pose problem 1 opt problem introduct answer affirm illustr schedul b tabl iib use 14 buffer schedul also resourc constrain iter period 2 valu instruct buffer requir schedul shown instruct total may verifi schedul period 2 satisfi resourc constraint use less 14 buffer thu schedul b solut sought opt problem rateoptim schedul given loop l note gener schedul use method outlin section ivc govindarajan altman gao resourceconstrain rateoptim softwar pipelin 5 ii schedul b motiv exampl time step c schedul nonpipelin fu next let us focu issu involv schedul nonpipelin fu fu nonpipelin instruct initi execut pipe continu keep fu busi complet execut thu re lower bound nonpipelin fu re fu type r ir repres set instruct execut type r repres execut time instruct motiv exampl section iia re integ re re loadstor thu lower bound lb schedul schedul c nonpipelin fu shown tabl iii tabl use notat eg 2 indic instruct 2 continu execut previou time step repetit pattern start time step 9 indic time step 2 fp 1 integ 1 loadstor unit quir thu appear schedul c resourceconstrain rateoptim schedul nonpipelin fu unfortun schedul legal schedul c find fix assign instruct fu mean compiletim map instruct specif fu done repetit pattern see consid repetit pattern start time step 9 assign first fp unit instruct i2 time step 9 second fp unit i4 time step 10 first fp unit free time step 11 second fp unit free time 12 time step 9 take time step modulo 3 map 3 first fp unit time step 11 second fp unit time 9 impli instruct migrat switch one fu anoth cours execut switch impract order ensur instruct switch fu execut requir fix assign instruct fu unfortun exist schedul period fix fu assign requir 2 fp unit addit 1 integ 1 loadstor unit indic exampl architectur nonpipelin fu softwar pipelin problem involv instruct schedul instruct schedul execut also map instruct assign fu thu obtain rateoptim resourceconstrain softwar pipelin need formul two relat problem name schedul map unifi framework section v discuss formul nonpipelin fu tabl iic show correct softwar pipelin schedul motiv exampl schedul instruct share first fp unit 2 execut second fp unit note period schedul order give proper perspect problem address paper discuss solut space linear schedul present follow section iii solut space linear schedul section present overal pictur solut space period linear schedul p work within space set period linear schedul interest period schedul use r function unit less denot region label r obvious r subset p may note initi interv schedul r greater equal tmin defin section ii sinc interest rateoptim schedul denot schedul period tmin region label period schedul use r function unit intersect set r refer set schedul period tmin use r less function unit denot region label tr schedul tr rateoptim resourc constraint 6 ieee transact parallel distribut system vol xx month 1996 iii schedul c nonpipelin execut unit time step iv schedul fix fu assign time step tr r tr r schedul space schedul space intersect trb b tb interesect trb trb buffer optim trr trr schedul period tmin r schedul use r fewer resourc schedul period tmin minimum buffer tr schedul period tmin use r fewer resourc schedul period tmin use r fewer resourc minimum buffer schedul period tmin use r fewer resourc n fewer regist fig 2 schedul space given loop r schedul use r resourc faster initi interv exampl loop l schedul element tr definit tmin guarante exist least one schedul use r less resourc henc tr alway nonempti optim use avail regist architec ture import pick tr schedul use minimum regist set schedul denot region label trb note exist schedul guarante fact region tr nonempti definit set trb exampl schedul member trb schedul b put problem statement proper perspect goal opt problem see introduct problem 1 find linear schedul lie within region trb howev compil writer trb region indirect interest follow sens compil writer interest find schedul shortest period use r fewer fu requir n regist avail regist machin schedul form trr region shown fig 2 region trr may contain may contain may intersect may disjoint trb 3 one four relationship possibl due follow reason 1 guarante exist schedul period use n fewer regist case 3 sake clariti fig 2 show case trr intersect trb govindarajan altman gao resourceconstrain rateoptim softwar pipelin 7 trr null 4 2 mention section iib logic buffer provid good approxim physic regist one easili see trr schedul exist possibl either trr schedul trb trb schedul trr schedul 3 though minimum buffer requir provid tight upper bound regist requir minimum regist schedul need necessarili minimum buffer schedul thu trr intersect trb trr contain trb 4 last though unlik possibl none trr schedul trb case seen later possibl modifi formul section iv v find trr schedul use approach follow 26 27 detail approach addit complex introduc beyond scope paper reader refer 26 detail due addit complex introduc approach model regist requir directli restrict attent paper find trb schedul lastli figur 2 region label denot set schedul initi interv tmin use minimum number regist initi interv tmin may schedul use fewer regist trb howev schedul tb may may satisfi resourc constraint r exampl loop l fact intersect tb r empti figur 2a depict situat cours alway case fig 2b repres case tb intersect r notic case trb subset tb interest featur tb region schedul belong tb comput effici use lowdegre polynomi time algorithm develop ning gao 11 allud introduct fact use key heurist later search solut trb specif regist requir schedul use lower bound number regist opt problem iv optt formul pipelin fu section first briefli introduc background materi subsequ subsect develop integ program formul optt problem section ivc optt formul motiv exampl fig 1 shown definit paper deal innermost loop repres loop data depend graph ddg node repres instruct arc depend instruct loopcarri depend ddg could cyclic node produc result 4 case either next higher valu need consid regist spill requir current iter result use node j dd iter later say arc j depend distanc dd use ij denot ddg repres mean dd initi token arc j definit iv1 data depend graph 4tupl v set node e set depend distanc vector arc set e delay function node set v paper focu period schedul form discuss section ii period schedul said feasibl obey depend constraint impos ddg follow lemma due reiter 23 character feasibl period schedul lemma iv1 reiter 23 initi execut time feasibl period schedul period satisfi set inequ delay node period ij depend distanc arc j paper assum rateoptim period tmin alway integ given ddg unrol suitabl number time result unrol ddg integ period concentr paper straightlin code huff found larg major fortran loop contain condit 7 loop involv condit assum hardwar model support predic execut 24 ifconvers 28 perform support model well 13 shown predic execut simplifi code gener modulo schedul b ilp formul order repres repetit pattern also known modulo reserv tabl softwar pipelin schedul succinct form introduc matrix matrix theta n matrix period schedul n number node ddg element either 0 1 depend whether instruct schedul execut time step repetit pattern make thing clearer consid repetit pattern schedul b 6 matrix requir particular fu type r time step comput ad element row correspond instruct execut fu type r exampl number fp unit requir time step calcul ad t2 t3 t4 thu seen 2 fp unit requir time step 0 1 fp unit requir time step 1 similarli ad t1 t5 observ number loadstor unit requir time step 1 thu 8 ieee transact parallel distribut system vol xx month 1996 gener number fu type r requir time schedul x ti ir denot set instruct execut r f r fu type r resourc constraint architectur specifi ti f r r 2 next concentr constraint trix order ensur instruct schedul exactli repetit pattern requir sum column matrix 1 also express linear constraint schedul b valu variabl use linear form main question relat matrix variabl purpos rewrit word k defin repres modulo oper schedul b observ posit instruct repetit pattern perhap two differ way therefor express term theta notic transpos matrix use equat transpos theta 0 1 transpos use equat 4 rewrit matrix form obtain theta 6 6 6 6 6 6 4 theta gener transpos theta 0 lastli need repres regist requir schedul linear form mention earlier paper model regist requir fifo buffer place produc consum node approach follow 11 assum buffer space reserv soon produc instruct commenc execut remain reserv last consum instruct begin execut consid instruct successor j result valu produc consum j ij iter durat call lifetim result equal period schedul time would fire therefor mani buffer need store output instruct one successor j regist requir maximum j word number buffer b associ instruct given 8j th rewrit equat 8 get 25 demonstr minimum buffer requir provid tight upper bound total regist requir buffer assign done classic graph color method subsequ perform gener lead minimum regist quirement paper assum color phase alway perform schedul determin integr buffer requir ilp formul obtain formul minim buffer requir construct rateoptim resourc constrain schedul purpos object function minim total number buffer use schedul minim complet ilp formul shown figur 3 c optt formul motiv exampl illustr oper optt formul examin motiv exampl present section ii minimum iter period ddg figur 1 2 node equat 14 give depend constraint feasibl schedul govindarajan altman gao resourceconstrain rateoptim softwar pipelin 9 ilp formul pipelin fu minim subject transpos theta 0 integ fig 3 ilp formul pipelin fu equat 13 requir node schedul exactli equat 11 relat element matrix k follow three equat respect repres resourc constraint integ loadstor fp unit 00 3 10 3 19 regist requir instruct given equat 9 given ddg constraint final object minim total number buffer subject constraint equat ti k b nonneg integ solv integ program formul yield schedul b solv integ program problem need obtain valu ti variabl k variabl thu obtain valu variabl determin schedul variabl take valu within specif rang determin depend iter period ddg turn restrict rang ti take valu 1 v optt formul nonpipelin fu section develop formul optt problem nonpipelin fu illustr section ii c problem requir schedul map perform simultan follow section show resourc usag nonpipelin fu model formul map problem discuss section vb resourc usag nonpipelin fu order estim resourc requir nonpipelin fu need know instruct initi given matrix also long execut exampl instruct 4 schedul c initi time step 10 time 1 repetit pat tern execut time step 11 equival sinc execut time fp multipli repetit pattern word instruct 4 requir fu time step 1 2 repetit pattern likewis instruct 3 requir fu time step 2 0 repetit pat tern thu need defin usag matrix u matrix repres usag nonpipelin fu first illustr matrix usag matrix u schedul c notic fp instruct load instruct take 2 time unit execut requir fu one time step usag matrix ad appropri element row give fu requir type r obtain u matrix instruct initi time requir fu time step repetit pattern altern say instruct requir function unit time step execut less step prior thu defin u notic execut time clean pipelin initi new oper cycl resourc usag instruct conceptu one cycl henc case exampl loop instruct 0 5 take one time unit execut henc u ti 5 instruct defin 0i 3 2i 3 1i 3 0i 3 2i 3 1i 3 2i 4 0i 4 1i 4 requir type r fu time step sinc less number avail fu replac resourc constraint equat 10 ilp formul refer figur 3 equat 24 25 obtain schedul part ilp formul nonpipelin fu howev explain section iic complet formul must includ map part fix fu assign well otherwis schedul produc formul may requir switch instruct fu cours execut 5 follow subsect show map problem also formul framework b fix fu assign consid schedul c shown tabl iii sinc loop kernel repeatedli execut map time 9 10 11 0 1 2 shown figur 4a 5 altern may possibl unrol loop number time use differ fu assign instruct unrol iter howev extent unrol requir may larg may known priori time step time step b fig 4 repetit pattern partial resourc usag usag fp unit shown figur 4b note function unit use i3 wrap around time 2 0 problem time 2 i3 begin execut function unit use i2 time 0 1 sinc instruct suppos use fu everi iter caus problem time 0 i3 still execut fu need i2 problem equat 25 note number fu use one time ie number solid horizont line present 3 time step figur 4b howev need ensur two segment correspond instruct assign fu problem bear strike similar problem assign variabl overlap lifetim differ regist particular circular arc color problem 29 must ensur two fragment correspond 3 get color fact repres dot arc figur 4b addit arc 3 overlap 2 4 mean 3 must differ color either similarli 2 4 must differ color use usag matrix formul color problem use integ constraint two instruct j execut time clearli must get differ fu assign c c j repres color function unit map instruct j respect c 6 c j u ti u tj 1 constraint repres integ program adopt approach given hu 30 introduc set w ij integ 01 vari abl one variabl pair node use type function unit roughli speak w ij variabl repres sign c n number node ddg upper bound number color govindarajan altman gao resourceconstrain rateoptim softwar pipelin 11 22 prove constraint equa tion 26 27 28 togeth guarante two node assign differ color map differ function unit overlap ilp formul requir least mani function unit color henc replac equat 25 equat 26 28 complet ilp formul shown figur 5 ilp formul nonpipelin fu minim subject transpos theta 0 integ fig 5 ilp formul nonpipelin fu vi solut method opt problem success formul optt problem provid basi solut opt problem solv opt problem need iter solv optt formul increas valu start lb find schedul satisfi function unit con straint word tmin smallest valu greater equal lb schedul obey resourc constraint exist want solv optt formul iter period tmin observ case tmin near lb 8 7 thu use iter search start lb quickli converg tmin solv ilp formul optt problem guid search give lower bound number buffer requir illustr idea fol low let smallest iter period schedul obey function unit constraint exist valu solv minimum regist optim schedul formul propos ning gao 11 obtain lower bound number buffer ning gao formul linear program formul solv effici howev sinc formul 11 includ resourc constraint obtain schedul may may satisfi resourc constraint vii perform ilp schedul section present perform result ilp schedul section viii devot comparison heurist method implement ilp base softwar pipelin method unix workbench experi 1008 singlebasicblock inner loop extract variou scientif benchmark program spec92 integ float point linpack livermor na kernel ddg loop obtain instrument highli optim research compil consid loop 64 node ddg 7 ddg vari wide size median 7 node geometr mean 8 arithmet mean 12 solv ilp use commerci program cplex order deal fact ilp approach take long time loop adopt follow approach first limit cplex 3 minut tri solv singl ilp ie maximum 3 minut allow find schedul given sec ond initi interv min necessari soon schedul found tmin 5 tri greater valu assum follow execut latenc variou instruct appli schedul differ architectur configur consid architectur pipelin nonpipelin execut unit also consid architectur fu gener ie fu execut instruct fu refer homogen fu heterogen fu type like loadstor unit hand execut instruct specif type class type six differ architectur configur consid experi latenc instruct instruct integ fp add load store multipli divid pipelin homogen fu pipelin homogen fu nonpipelin homogen fu nonpipelin homogen fu pipelin heterogen fu 2 integ fu one loadstor fp add multipli divid unit a6 a5 function unit nonpipelin 1008 loop schedul architectur larg major case ilp approach found optim schedul close tmin shown tabl vii specif architectur homogen pipelin fu a1 a2 ilp approach found optim schedul 88 case nonpipelin homogen fu optim schedul found 71 case lastli architectur heterogen fu a5 a6 vari 80 85 architectur configur small fraction test case ilp method found schedul greater possibl tmin case obtain schedul possibl optim schedul say possibl tmin possibl optim schedul sinc evid cplex 3 minut time limit expir without indic whether schedul exist lower valu tmin tabl vii indic far schedul found possibl optim schedul vi schedul qualiti term iter period initi interv number loop next proceed compar close ilp schedul optim buffer requir deriv minim buffer rateoptim schedul cplex 3 minut time limit sometim exceed find buffer optim schedul case took best schedul obtain far word could one schedul set tr fig 2 schedul could possibl lie trb evid 3 minut time limit cplex exceed compar buffer requir schedul schedul obtain ninggao formul 11 note ninggao formul obtain minim buffer rate optim schedul use linear program techniqu includ resourc constraint thu bound obtain ning gao formul loos lower bound may may exist resourceconstrain schedul buffer requir let us denot buffer requir tb tr trb schedul b respect compar qualiti schedul take minimum buffer requir bmin b trb trb schedul found otherwis thu trb schedul found bmin overli optimist lower bound tabl vii show qualiti ilp schedul term buffer requir consid case ilp approach found schedul optim otherwis seen tabl ilp approach produc schedul requir minim buffer 85 90 case architectur involv heterogen fu pipelin nonpipelin homogen pipelin fu 6 4 fu architectur homogen nonpipelin fu a3 a4 qualiti schedul term comput rate 1t buffer requir poor compar architectur configur due increas complex map rather schedul complex map instruct fu significantli higher homogen fu heterogen fu caus instruct potenti map fu henc overlap execut pair instruct need consid hand heterogen model need consid pair instruct execut fu type final long take get schedul measur execut time henceforth refer compil time schedul method workstat geometr mean arithmet mean median execut time 6 architectur configur shown tabl vii histogram execut time variou architectur configur shown figur 6 tabl vii observ geometr mean execut time less less 2 second architectur homogen pipelin fu less 5 second architectur heterogen fu median execut time less 3 second case architectur configur a3 a4 homogen nonpipelin fu requir govindarajan altman gao resourceconstrain rateoptim softwar pipelin 13 vii schedul qualiti term buffer requir initi interv number loop 12 second 25 second 30120 second 120600 second second 10 20 30 40 50 70 80 90 100 test case architectur fig 6 histogram execut time larger execut time compar configur due increas complex map instruct viii averag execut time obtain ilp schedul architectur execut time geo mean median arith mean a3 660 265 631 a6 470 235 557 conclud section note even though ilp base schedul method success larg major test case still could find schedul 15 20 test case given time limit number tri case number altern 1 allow ilp 3 minut 2 chang order ilp solver attempt satisfi constraint 3 move exact approach enumer 26 4 fall back heurist made systemat investig 1 2 although found success loop enumer achiev number loop schedul ilp approach describ although loop success schedul two approach ident 26 ilp approach use basi heurist exampl heurist limit schedul time node could ad constraint ilp viii comparison heurist method extens experiment evalu indic ilp approach obtain schedul larg major test case reason quickli optim object associ comput cost pay term comput rate buffer requir deriv schedul often argu exist heurist method without mathemat optim formula well consequ need find optim schedul result indic otherwis consid 3 lead heurist method compar studi huff slack schedul 7 wang eisenbei jourdan su frlc 31 gasperoni schwiegelshohn modifi list schedul 20 partic ular compar ilp approach 3 schedul method architectur configur pipelin fu modifi list schedul frlc method handl nonpipelin fu comparison ilp approach restrict huff slack schedul method nonpipelin architectur a3 a4 a6 tabl viii compar comput rate buffer requir ilp schedul heurist method variou architectur configur par ticular column 3 4 tabul number loop ilp schedul better percentag improv tmin achiev similarli column 8 9 repres improv buffer requir due approach follow obtain ilp schedul restrict time solv ilp problem 3 minut tri schedul next higher valu suboptim schedul comput rate andor buffer requir ilp schedul greater heurist method small fraction test case column 5 6 repres respect number test loop percentag improv tmin achiev heurist method column 10 12 tabl viii buffer improv note buffer requir compar correspond schedul iter period seen tabl viii huff slack schedul method perform equal well better term iter period homogen fu huff method found faster schedul 3 8 test case especi fu homogen nonpipelin ever heterogen fu ilp schedul faster 13 20 test case architectur a5 a6 case ilp schedul faster averag 13 15 shown column 4 tabl viii high comput cost ilp schedul pay 14 ieee transact parallel distribut system vol xx month 1996 ix comparison heurist method tmin buffer requir ilp better inexact ilp better inexact better better inexact tectur method loop impr loop impr loop loop impr loop impr loop pipelin architectur gasperoni 194 gasperoni 394 26 28 4 533 463 20 13 5 57 nonpipelin architectur a3 signific dividend term buffer requir architectur configur 45 test case correspond schedul iter period buffer requir ilp schedul less huff slack schedul method geometr mean improv buffer requir ment achiev ilp schedul rang 15 22 compar gasperoni modifi list schedul wang et al frlc method ilp produc faster schedul 18 40 187 394 test case variou architectur configur consid improv tmin achiev ilp schedul signific 26 48 mean schedul gener ilp method run 50 faster gener frlc method modifi list schedul method heurist method score well small fraction 3 test case buffer requir ilp schedul better 17 frlc modifi list schedul 460 640 test case attract featur heurist method execut time execut time heurist method less 1 second 90 loop mean execut time less second architectur configur three heurist method huff slack schedul method requir slightli comput time experi reveal ilpbas optim schedul method produc good schedul though expens longer compil time advent effici ilp solver compil time like decreas futur irrespect high compil cost experi suggest possibl use ilp approach perform critic applic follow subsect present case ilp approach even though use approach product compil debat remark hope experiment result present previou section help compil commun assess ilp base exact method despit reason good perform larg major test case use ilp base exact method product compil remain question howev cours experi notic mani loop bodi occur repeatedli differ program develop tool analyz whether two ddg similar sens 1 execut oper least execut oper latenc function unit 2 set edg depend distanc oper found 1008 test case 415 loop uniqu one loop bodi common 73 differ loop repetit loop bodi one hand impli benchmark suit consist 415 uniqu test case rather 1008 hand suggest number distinct loop appear scientif program limit compil could use ilp approach precomput optim schedul commonli occur loop scheme could also tailor individu user ad new loop databas compil encount fact ilp comput could run background user may get nonoptim code first time hisher code govindarajan altman gao resourceconstrain rateoptim softwar pipelin 15 vs multipl multipl number node execut time architectur a1 multipl execut time execut time architectur a4 multipl execut time execut time architectur a6 multipl execut time fig 7 analysi ddg benchmark suit compil later compil desir schedul would databas complex tool analyz whether two ddg similar oe 4 worst case oe averag case e number edg ddg case e n number node ddg 53 second requir sunsparc20 find 415 uniqu loop 1008 ie 53 millisecond per loop practic use tool requir databas ddg schedul store encod form number ddg databas compar given loop drastic reduc simpl comparison number node number arc ddg one last question remain use databas ddg precompil schedul mani precompil schedul requir longer compil time question relev databas ddg contain loop schedul anyway found shorter compil time perhap take lesser time determin schedul search databas investig plot compil time 415 uniqu loop multipl often ddg repeat benchmark suit also plot size ddg versu multipl fig 7 seen figur 7 though repetit ddg common size ddg small larg ddg repeat perhap low degre multipl 2 6 plot compil time ddg variou architectur configur multipl also indic similar result ie though major databas like contain ddg take shorter compil time exist ddg requir longer compil time repeat benchmark suit perhap low degre multipl especi true architectur configur a3 a6 initi result show ddg requir longer compil time repeat though lower degre multipl howev studi tradeoff involv cost store databas loop precompil schedul advantag obtain optim schedul quickli tradeoff determin use databas approach studi requir deriv stronger conclus result ix relat work softwar pipelin extens studi 2 4 5 6 8 12 14 15 32 13 7 14 19 varieti techniqu suggest find good schedul bound function unit reader refer 33 comprehens survey lam 8 propos resourceconstrain softwar pipelin method use list schedul hierarch reduct cyclic compon matrix similar modulo resourc reserv tabl concept origin due rau glaeser 12 put rep resent resourc usag steadi state map resourc usag time mod lam solut opt problem also iter huff slack schedul 7 also iter solut opt problem heurist give prioriti schedul node minimumslack time sched ule ii tri schedul node time minim combin regist pressur node input output report extrem good result address opt problem heuristicbas schedul method propos wang et al 19 gasperoni schwiegelshohn 20 compar ilp schedul perform three schedul method section viii fp compil 12 cydra 5 compil cydrix tm fortran 34 4 hppa compil 35 product compil base heurist method implement resourceconstrain softwar pipelin rau et al 13 address problem regist alloc modulo schedul loop method regist alloc perform alreadi schedul loop differ code gener schema modulo schedul loop discuss 36 37 petri net base approach softwar pipelin loop presenc resourc constraint present ebcioglu et al propos techniqu enhanc softwar pipelin resourc constraint 5 6 38 relat work schedul graph presenc condit report 21 ning gao 11 propos effici method obtain softwarepipelin schedul use minimum buffer fix initi rate howev address function unit requir formul comparison approach tri obtain fastest comput rate minimum buffer given resourc constraint 39 feautrier independ gave ilp formul similar method howev method includ fu map nonpipelin execut unit eichenberg davidson abraham 27 propos method minim maximum number live valu time step given repetit pattern formul problem linear program problem howev approach start repetit pattern alreadi satisfi resourc constraint possibl incorpor approach formul model regist di rectli rather logic buffer approach independ develop incorpor formul altman 26 hwang et al propos integ program formul schedul acycl graph context highlevel synthesi system 40 x conclus paper propos method construct softwar pipelin schedul use minimum buffer run fastest iter rate given resourc con straint graph color method appli obtain schedul get schedul use minimum reg ister approach base integ program formul formul quit gener 1 use provid compil option gener faster schedul perhap expens longer compil time especi performancecrit applic 2 sinc formul precis state optim object use ascertain optim solut henc evalu improv existingnewli propos heurist method empir establish use formul appli 1008 loop extract common scientif benchmark six differ architectur model vari degre instructionlevel parallel pipelin experiment result base benchmark loop indic method find optim schedul optim term comput rate regist usag larg major test case reason fast geometr mean time find schedul less 5 second median less 3 second even though ilp method take longer produc schedul smaller regist requir 60 test case ilp schedul faster better comput rate counterpart 14 test case averag believ result present paper help assess tradeoff ilp base exact method softwar pipelin acknowledg kemal ebcioglu mayan moudgil gabriel silberman instrument complet paper wish thank qi ning vincent van dongen philip wong anonym refere help sugg tion thank ibm technic support acknowledg natur scienc engin research council nserc micronet network centr excel support work r compactionbas parallel optim loop parallel realist resourceconstrain softwar pipelin algorithm compil cydra 5 compil techniqu softwar pipelin loop condit jump global resourceconstrain parallel techniqu lifetimesensit modulo schedul softwar pipelin effect schedul techniqu vliw machin effici resourceconstrain global schedul techniqu superscalar vliw proce sor finegrain compil pipelin machin novel framework regist alloc softwar pipelin schedul techniqu easili schedul horizont architectur high perform scientif comput regist alloc softwar pipelin loop fortran compil fps164 scientif comput polynomi time method optim softwar pipelin dataflow analysi scalar array refer design program languag analyz fresh look pointer data struc ture unrol loop tran decompos softwar pipelin new approach exploit instructionlevel parallel loop program effici algorithm cyclic schedul revers ifconvers schedul map softwar pipelin presenc structur haz ard schedul parallel comput cydra 5 department supercomput design philosophi decis tradeoff regist alloc optim loop schedul optim softwar pipelin function unit regist constraint min imum regist requir modulo schedul conver sion control depend data depend regist alloc framework base hierarch cyclic interv graph new approach softwar pipelin complic loop branch loop storag optim dataflow machin instructionlevel parallel process ing histori overview perspect overlap loop support cydra 5 softwar pipelin parisc compil code gener schema modulo schedul loop effici schedul fine grain parallel loop new compil techniqu parallel loop unpredict branch vliw ar finegrain schedul resourc con straint formal approach schedul problem highlevel synthesi tr ctr recurs time estim algorithm program trace resourc constraint proceed 1998 acm symposium appli comput p635640 februari 27march 01 1998 atlanta georgia unit state mautsuen yang rangachar kasturi anand sivasubramaniam pipelinebas approach schedul video process algorithm ieee transact parallel distribut system v14 n2 p119130 februari hongbo rong zhizhong tang r govindarajan alban douillet guang r gao singledimens softwar pipelin multidimension loop acm transact architectur code optim taco v4 n1 p7e march 2007 hansaem yun jihong kim soomook moon time optim softwar pipelin loop control flow intern journal parallel program v31 n5 p339391 octob hongbo rong zhizhong tang r govindarajan alban douillet guang r gao singledimens softwar pipelin multidimension loop proceed intern symposium code gener optim feedbackdirect runtim optim p163 march 2024 2004 palo alto california r govindarajan guang r gao palash desai minim buffer requir rateoptim schedul regular dataflow network journal vlsi signal process system v31 n3 p207229 juli 2002 karam chatha ranga vemuri hardwaresoftwar partit pipelin schedul transform applic ieee transact larg scale integr vlsi system v10 n3 p193208 june 2002