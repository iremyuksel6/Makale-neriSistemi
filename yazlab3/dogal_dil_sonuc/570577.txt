correspond translat heterogen data data integr often requir clean abstract differ format data store mean specifi correspondencesrelationship data differ world translat data one world anoth introduc paper middlewar data model serv basi integr task declar rule languag specifi integr show use languag correspond data element comput polynomi time mani case may requir exponenti time insensit order duplic consid furthermor show practic case correspond rule automat turn translat rule map data one represent anoth thu complet integr task deriv correspond transform data one world increment integr new bulk data etc specifi use singl set declar rule b introduct primari motiv new databas technolog provid support broad spectrum multimedia data avail notabl network data store differ format sql odmg databas sgml latex document dx format scientif data step cadcam data etc integr activ field research develop see instanc small sampl 10 6 7 9 8 12 19 20 paper provid formal foundat facilit integr heterogen data mainten heterogen replic data sound solut data integr task requir clean abstract differ format data store mean specifi correspondencesrelationship data differ world translat data one world anoth introduc middlewar data model serv basi integr task declar rule specifi integr choic middlewar data model clearli essenti one common trend data integr heterogen model alway use integr model encompass sourc model take opposit approach ie model minimalist data structur use consist order label tree claim simpl model gener enough captur essenc format interest even though map richer data model model may loos origin semant data preserv integr data model facilit model similar one use 7 oem model unstructur data see eg 21 20 surpris sinc data format motiv work part format framework intend support differ oem model view children vertex order crucial describ list essenti compon dx format also 13 introduc bnf gener tree unifi hierarch data model howev due fix number son rule collect repres left right deep tree suitabl casual user main contribut paper declar specif correspond data differ world use datalogstyl rule enrich novel featur merg con term constructor semant rule take consider fact intern node repres collect specif properti eg set insensit order duplic show correspond data element comput polynomi time mani case may requir exponenti time insensit order duplic consid deriv correspond within exist data one issu heterogen context one would also want translat data one represent anoth interestingli show author perman posit inriarocquencourt franc work support air forc wright laboratori aeronaut system center arpa contract f336159311339 air forc rome laboratori arpa contract f3060295c0119 work partial support ec project goodstep opal isra ministri scienc practic case translat rule automat deriv correspond rule thu complet integr task deriv correspond transform data one world increment integr new bulk data etc specifi use singl declar set rule import result save write differ specif subcompon integr task also help avoid inconsist specif note languag use defin correspond rule simpl similar correspond could easili deriv use power languag previous propos eg ldl 5 iql 4 languag would much difficult sometim imposs deriv translat rule given correspond rule nevertheless languag express enough describ mani desir correspondencestransl particular express power documentoodb map support structur schema mechan 2 3 seen correspond rule simpl intuit graphic represent inde present work serv basi system current implement specif integr heterogen data proce two phase first phase data abstract yield treelik represent hide detail unnecessari restructur eg tag pars inform second phase avail data display graphic window start represent user specifi correspond deriv data paper organ follow section 2 introduc core data model section 3 core languag specifi correspond section 4 extend framework better deal collect section 5 deal translat problem last section conclus exampl figur given two appendix 2 data model goal provid data model allow declar specif correspond data store differ world dx odmg sgml etc first introduc model concept correspond illustr thing use exampl simpl instanc sgml document given figur 1 tree represent document middlewar model togeth correspond tree forest represent refer bibliograph oodb given figur 2 21 data forest assum exist infinit set name name ii vertex vertex iii dom data valu data forest forest order label tree order label tree tree label vertex vertex order children intern vertex tree label name wherea leav label name dom vertex constraint vertex occur leaf label also occur vertex forest observ rather convent tree structur data model spirit complex valu model 17 1 11 mani other particularli influenc model unstructur data 21 20 tree model 7 particular order vertex import model data format essenti describ file obey certain grammar eg sgml data forest f tripl e gl e g finit order forest order implicit e set vertex g set edg l label function map leav e e dom vertex name vertex v e maxim subtre root v call object v set vertex e forest f denot vertexf set data valu appear f denot domf remark observ definit allow leaf map name purpos may think leav intern vertex without children turn use repres instanc empti set empti list follow refer word leaf vertex v lv vertex dom illustr notion well syntact represent use exampl consid graphic represent forest describ oodb shown lower part figur 2 tabular represent part forest given figur 3 final equival textual represent refer f 21 key f 211 acm96 f g g author f 231 3 f abstract f 241 f g g g get morecompact represent omit bracket vertex singl children omit vertex identifi irrelev discuss exampl refer tree may repres refer f key acm96 22 titl correspond authorsf 3 4 5 abstract g let us see variou common data sourc map middlewar model consid three differ type map first concern relat databas also simpl tabl format second use objectori databas similar one fit graph format final last fit format bnf similar grammar descript note three map invert easili implement relat repres tree whose root label relat name mani children row relat depth 2 node repres row label label tupl depth 3 4 5 node label respect attribut name type valu object orient databas usual cyclic graph howev use object identifi one may easili repres cyclic graph tree 4 pick one possibl represent mani one propos class extent repres tree whose root node label class name node mani children object extent label object type assum object appear class extent specif class describ represent subtre accord type node label atom type uniqu child whose label appropri atom valu node label tupl one child attribut children label attribut name one child label appropri type relev structur node label set list bag mani children element collect one collect member list order element preserv child label appropri type relev structur node label object type uniqu child label identifi node repres object tree class extent belong document describ simplifi represent pars tree label intern node resp leav repres grammar nontermin symbol resp token sgml html among format allow refer intern extern data parser interpret refer usual consid string context refer interpret possibl object databas refer replac identifi node contain refer data note identif data middlewar model given node identifi mean respons data sourc keep relationship export data node identifi relationship alway need eg translat process may fine larg grain accord applic need data sourc capac identif data data sourc take variou form key row intern address relat databas object databas intern oid object queri lead objectvalu similar idea relat case file offset file node pars tree etc 22 correspond concern establishingmaintain correspond object object may come one data sourc particular forest f 1 other anoth forest say f 2 simplifi consid singl forest view union two forest look correspond within forest feel essenti distinguish sourc may assum node tree particular data sourc name sourc eg f 1 part label describ correspond object use predic exampl 1 consid follow forest sgml oodb tree figur 2 articl f 12 titl correspond 13 author sabiteboul 14 author scluet 15 author tm ilo 16 abstract g refer f key acm96 22 titl correspond authorsf 3 4 5 abstract g may want follow correspond note essenti differ two predic relat object repres real world entiti wherea concat standard concaten predicatefunct defin extern isrelationship repres figur 2 definition2 let r relat schema rcorrespond pair f f data forest relat instanc r valu vertexf domf instanc consid exampl 1 let r consist binari relat ternari one concat forest f correspond exampl f rcorrespond note restrict attent 11 correspond correspond predic may arbitrari ariti also data duplic nm correspond may introduc 3 core languag section develop core languag style rulebas languag object eg iql 4 ldl 5 flogic 15 precis medmak 19 languag present section tailor correspond deriv thu sens limit howev consid next section power new featur assum exist two infinit sort sort datavar data variabl vertexvar vertex variabl data variabl start capit distinguish name vertex variabl start charact follow capit letter rule built correspond liter tree term correspond liter form datavertex variablesconst tree term form x l x l 1 x l x vertex vari ableconst l label tree term x ls also omit rule obtain distinguish correspond liter tree term bodi head semant rule given sequel exampl consid follow rule name r note distinct concat predic data valu thought given extens comput extern deriv correspond predic refer f x 14 authorsf x 19 abstract x 11 g rule consist bodi head rule liter head said correspond rule assum variabl head correspond rule also occur bodi defin semant correspond rule given instanc f correspond rule r valuat f map variabl r 1 map data variabl domf object variabl vertexf 2 term h bodi r h correspond liter h true b h tree term h object 5 f say correspond cuv deriv f use r cuv term h head r valuat f let p set rule let deriv f use r pg denot tp f p recurs may abl appli tp tp f deriv new correspond limit exist applic tp denot pf theorem4 possibl recurs finit set p correspondencerul data forest welldefin particular sequenc applic tp converg finit number stage furthermor pf comput ptime repres data forest use relat databas relat succ give portion successor function integ number fact deriv polynomi step comput firstord formula ptime 2 rule r exampl nonrecurs correspond rule assum extens concat given see exampl recurs rule consid correspond leftdeep rightdeep tree instanc would like deriv correspond right left deep tree shown figur 4 achiev use program r2l consist follow rule 5 recal object forest f maxim subtre f root vertex f u rightfx g suppos start forest f shown figur 4 deriv correspond comput r2l r2l r2l r2l r2l r2l kind deep tree frequent data exchang format import abl handl howev seen quit power enough extend particular oper tree handl data collect describ next 4 deal collect data sourc map middlewar model forest vertex may repres data collect observ rule tree describ vertex bound number children number depend term structur data collect may arbitrari number member thu need extend languag deal vertex arbitrari number children also observ order tree perfect repres order data collect list array howev want model databas construct set bag consid properti insensit order duplic rule develop far support section address two issu extend framework incorpor oper tree ii special collect properti 41 tree constructor consid two binari oper tree first const take two object input first one interpret element second collect children vertex oper add element collect second oper merg allow merg two data collect one con oper defin use merg singleton collect exampl formal let tree root 0 00 label l n 00 respect tree root label l children 0 n order tree root label l children 0 order con merg oper provid altern represent collect essenti describ restructur data tree forest consid reduc sens includ con merg vertex use rule allow consid altern represent forest tree vertexesobject tree con merg regard implicit instanc data tree 1 mylistf2 3g view 1 cons2 v object v implicit structur mylistf3g inde denot object v mylist1 3 specifi object label mylist subcollect 1 singl child 3 motiv follow definit given forest f vertex v f children label l express lv call implicit object f subsequ 6 set implicit object f denot implf 6 subsequ v obtain remov 0 element head tail v1 vn observ vertexf view subset implf identifi object definit v observ also cardin implf polynomi size f use con merg rule follow exampl use con defin correspond list structur rightdeep tree list structur tree depth one observ exampl mylist keyword name particular semant con keyword semant con oper tree cours use rule extend notion valuat allow term contain con new valuat may assign implicit object object variabl fixpoint comput use new definit valuat observ may contain correspond involv vertex implf f sinc interest correspond vertex f ultim ignor correspond pf restrict object f instanc consid rule tl tl tl tl tl tl tl sequel call problem comput pf match problem theorem6 match problem ptime even presenc con merg number fact deriv polynomi step comput firstord formula polynomi 2 42 special properti data model interest includ collect specif properti eg set insensit order duplic bag insensit order context translat properti vertex particular label consid two case name insensit order call bag properti insensit order duplic call set properti instanc may decid particular label say mybag resp myset denot bag resp set system distinguish fact implicit object fundament otherwis set would potenti infinit number represent comput correspond would becom undecid context setbag properti definit implicit object becom littl bit intric given forest f vertex v f children label l implicit object vertex bagset properti obtain follow l set properti lv v 1 subset fv 1 g fv g l bag properti lv v 1 subbag ffv 1 gg ffv 1 v n gg notion valuat extend straightforward manner use implicit object take consider tree equival due insensit order duplic detail omit lack space import observ point number implicit object exponenti size f next exampl show con set properti use defin correspond list set contain one copi distinct list member label myset set mylist fg v myset fg observ symmetri rule set list distinct specif label myset use essenti proof theorem 6 reduct 3sat one prove theorem8 presenc con merg collect insensit orderdupl match problem solv exptim even insensit order con match problem becom nphard remark complex data complex may seem neg result expect match commut collect practic merg rare achiev base collect often keybas rare case base match small collect eg set author conclud discuss correspond rule demonstrateth usag con merg let us consid follow exampl correspond articl oo refer defin observ correspond rule r present begin paper handl articl exactli three author articlesrefer deal arbitrari number author requir titl abstract author list ie author appear order definit use auxiliari predic list first rule defin correspond author second third rule defin auxiliari correspond sequenc world use rule r 4 defin correspond articl refer also defin correspond titl abstract world listx 2 x 5 listx 4 x 11 illustr languag use rather simpl exampl nevertheless quit power describ mani desir correspond particular documentoodb map support structur schema mechan 2 3 omit 5 data translat correspond rule use deriv relationship vertex next consid problem translat data first state gener translat problem undecid introduc decid subcas captur practic applic interest base translat rule obtain move tree term bodi correspond rule head start data forest set correspond rule particular forest object v correspond predic c want know forest extend way v correspond vertex v 0 sens v 0 could seen translat v call data translat problem input rcorrespond f set p correspond rule vertex v f binari predic c output extens f 0 f cvv 0 hold pf 0 v 0 extens exist exampl consid forest f right deep tree 1 f1 f2 f3 fgggg assum want translat left deep tree format recal r2l correspond rule defin correspond right deep tree left deep tree give translat problem rcorrespond f root vertex 1 correspond predic r2l output forest f 0 vertex v 0 st r2l1v 0 hold tree root v 0 exactli left deep tree look remark gener case would like translat entir collect object ii correspond may predic arbitrari ariti simplifi present consid restrict problem defin techniqu work gener case minor modif turn data translat gener difficult proof reduct accept problem ture machin proposit 51 translat problem undecid even absenc con merg label setbag properti although problem undecid gener show next translat still possibl mani practic case often perform effici impos two restrict 1 first restrict impos separ data two categori input vertex output vertex vertex variabl label similarli separ 7 assum presenc output object depend sole presenc input object possibl correspond condit allow us focu essenti one kind recurs found sourc data structur 2 second restrict technic base properti call bodi restrict defin sequel prevent patholog behavior mostli prevent correspond relat insid tree term restrict typic appli consid data translat integr particular see exampl appropri properti basic idea use correspond rule transform translat rule move data tree term contain output variabl bodi rule head exampl consid r2l correspond rule translat right deep tree left deep tree move term left deep tree head rule obtain follow translat rule variabl prime use stress separ two world cours need extend semant rule tree term head particular contain variabl appear bodi use creat new object essenti data translat use skolem function style 9 14 16 18 denot new object id difficulti consid valuat second rule one may tempt use skolem term r 0 u x 0 denot new object sinc 0 creat object may lead potenti nontermin loop object creation avoid choos creat object function input object new output creat object thu case creat object denot r 0 u 0 u x price may exclud object creation could interest ii may result inconsist eg object two distinct valu accept although give class program never occur ii reli non determin choos one valu assign one object note need form nondetermin instanc construct list represent set lack space give refin semant rule given full paper state proposition9 finit set p translationrul rcorrespond f possibl sequenc applic tp converg finit number stage furthermor rule setbag label sequenc converg ptime otherwis exptim far program comput view pure syntact guarante termin dont know semant properti construct new object deriv correspond turn evalu translat rule allow solv translat problem larg class correspond rule clearli sinc problem unsolv gener 7 note vertex easili distinguish use label particular cover rule present previou section translat specifi structur schema mechan 3 proof omit next present condit techniqu use correspond rule r said bodi restrict bodi 1 variabl correspond liter leav tree term variabl one occurr correspond liter 2 nonleaf variabl one occurr non leaf tree term 3 variabl input output tree term share leaf variabl consid correspond specifi inputoutput data forest proposit 52 consid inputoutput context let p set bodi restrict correspond rule correspond liter alway relat input output object let f rcorrespond f input data forest v vertex f c binari correspond predic let p 0 translat rule obtain p move output tree term head rule translat problem solut input f p v c leav input forest unchang possibl comput p 0 object comput p 0 deriv cvv 0 object v 0 forest f 0 comput comput correct solut translat problem proposit 52 solv translat problem unmodifi input bodi restrict rule need comput nondeterminist one possibl output p test 6 conclus present specif integr heterogen data base correspond rule show uniqu specif serv mani purpos includ twoway translat assum reason restrict claim framework restrict accept practic particular one show documentoodb correspondencestransl 2 3 cover current work substanti experiment appli work present number issu aris specif default valu inform miss translat complex one introduct simpl constraint model eg key anoth import implement issu choos keep one represent virtual vs materi particular conceiv appli larger set optim techniqu develop oodbsgml context queri 2 updat 3 acknowledg thank catriel beeri comment first draft paper r power languag manipul complex object queri updat file databas interfac file updat object ident queri languag primit set negat logic databas languag ldl1 data transform system biolog data sourc program construct unstructur data toward heterogen multimedia inform system garlic approach use wit gener support bidirect updat objact base databas structur document novel queri facil stori o2 amalgam tool creat interoper persist grammar base approach toward unifi hierarch data model ilog declar creation manipul objectidentifi flogic higherord languag reason object logic foundat objectori framebas languag logic data model logic object medmak mediat system base declar specif object exchang across heterogen inform sourc queri semistructur heterogen inform tr set negat logic data base languag ldl1 flogic higherord languag reason object inherit scheme object ident queri languag primit grammarbas approach toward unifi hierarch data model ilog declar creation manipul object identifi sgml handbook logic data model structur document novel queri facil logic foundat objectori framebas languag use wit gener support bidirect updat objectbas databas extend abstract databas interfac file updat foundat databas stori o2 object exchang across heterogen inform sourc correspond translat heterogen data queri updat file data transform system biolog data sourc amalgam time algorithm isomorph planar graph preliminari report ctr natalya f noy mark musen promptdiff fixedpoint algorithm compar ontolog version eighteenth nation confer artifici intellig p744750 juli 28august 01 2002 edmonton alberta canada yanni kalfogl marco schorlemm ontolog map state art knowledg engin review v18 n1 p131 januari olga brazhnik john f jone anatomi data integr journal biomed informat v40 n3 p252269 june 2007