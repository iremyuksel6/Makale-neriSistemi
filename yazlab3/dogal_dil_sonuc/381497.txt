encod program execut dynam analysi base collect data program run howev raw trace tend volumin unstructur use directli visual understand address problem two phase first phase select subset data compact second phase encod data attempt infer structur major compactionselect techniqu includ gprofstyl ndepth call sequenc select base class compact base time interv encod whole execut direct acycl graph structur infer techniqu includ runlength encod contextfre grammar encod build finit state automata b keyword softwar understand program trace dynam program analysi softwar understand requir infer behavior softwar system static techniqu analyz program code dynam techniqu base run program collect data run analyz result data dynam case inher tradeoff concern amount collect data type analys perform overhead collect regard framework suitabl dynam analysi three part bottom layer closest program suit tool gather inform program exe cute middl layer select relev portion data later compact analyz effect build model top layer closest user display model process build frame work first part describ 17 also briefli review section 2 bulk paper discuss middl layer tool envis top layer least capabl previou tool 15 enhanc abil specifi meaning visual demand task aris purpos middl layer build model collect data two reason build model first imposs visual raw data volum complex second model use automat check properti trace want model use least follow task summar part program execut summari would allow us show execut multipl level detail help user navig model class behavior track outsid call method invok object specif class suit program use class correctli use abstract gener execut analysi model class use model librari usag view whole librari object track extern call would allow us build model correct librari usag test futur user librari model detect unusu event model program behavior abl find event conform model event often signific repres except condi tion exampl program execut one sequenc synchron step almost time occasion execut altern sequenc denot potenti problem check exist model alreadi model aspect behavior system say specif process abl effici check whether model produc trace conform origin one also see opportun build model design pattern verifi program implement correctli especi use behavior pattern 8 hard specifi otherwis 16 perform analysi want abl annot model perform inform exist perform tool except use fix limit model prof use simpl function invoc model gprof 9 digram model visual want model fit explor graphic mean visual en viron leav user separ data nois cours nois particular applic use anoth therefor essenti model rich enough least hint user focu hand includ everyth model volum work describ paper provid framework necessari address problem use trace data import aspect research 1 framework separ collect analysi encod data framework provid flexibil iti need address wide rang problem describ 2 specif data select techniqu address problem 3 specif encod techniqu facilit differ type analysi combin variou select techniqu overal signific research thu lie spe cific techniqu use abil combin variou way applic combin broad rang problem remaind paper organ follow section 2 describ data trace tool current gener ate differ data compact select approach describ section 3 section 4 describ differ sequenc encod techniqu util ap proach note techniqu use mani approach describ section 3 section 5 discuss result variou encod comment degre compact accuraci conclud discuss impact work extens current plan first part framework collect data run program suit tool trace binari execut java program binari tracer tune c c noth would prohibit work execut produc say pascal java nativ compil tabl 1 summar trace dataour tracer binari wolf patch execut insert hook entri exit routin also instrument basic block keep count mani instruct execut per function invoc entri exit hook use gener trace file thread program call record emit includ call address call address first argument call latter use determin object use method call size memori alloc thread threadrel activ synchron object synchron call return record includ address function call return valu addit trace file contain period record record thread run time real time clock number instruct execut thread record thread output separ file second tracer develop minim work emit call address first argument function call piggyback count interven function return next function call java program differ tool tmon 17 use standard java profil interfac jvmpi produc multipl trace file one per thread file contain record method entri exit object alloc dealloc thread creation termin monitor synchron activ trace file also contain record thread run time real time reason use one trace file per thread case avoid synchron call would otherwis synchron get intermingl effect back use anoth program tmerg output unifi trace file dictionari file map identifi like function address binari object identifi java trace file meaning symbol even though data record fairli highlevel amount data larg longrun system immens result trace data file contain one gigabyt data everi two second cc execut ten second jite java execut minim tracer reduc factor 25 impos certain requir effici tool deal file primarili howev creat need compact select techniqu describ next section data compact select techniqu rang lossless transform aggreg trace data basic dynam call tree tree includ node routin invoc edg invoc invoc directli gener tree augment time inform like run time real time instruct spent call memori usag infor 1 common java cc function entri function id first argument c object function exit function object allocatefre object thread startend run time execut time thread real time accumul real time 2 cc lock pthread synchron object cre atedestroywaittestunlock lock memori allocatefre address size instruct count instruct execut thread 3 java class loadunload class gc startstop number nongarbag object total nongarbag object space total object space monitor enterexit object monitor wait object id timeout tabl 1 trace record summari mation like size number alloc done call follow discuss compactionselect scheme talk encod sequenc call event string combin use variou encod degre compact depend larg particular structur oper choos purpos exampl repres sequenc call string run length encod string also repres sequenc automa ton combin node would collaps string combin automata exampl take union differ approach describ section 4 effect combin compact choic represent describ section 5 string compact simplest way repres dynam call tree string exampl function call function b function c could repres abcthisisof cours ambigu sinc string would result call b b call c without return need therefor insert marker return two case becom follow abc abc note thread control gener string thu output string encod execut tree sequenc encod string one per thread java threadnam allow thread similar name group encod purpos string appli techniqu section 4 class select applic like model behavior class part trace irrelev interest constitut typic use class need number applic use class correctli trace applic isol call method particular class class hierarchi group object interest inner work class monitor method object invok interest extern interfac forego group call per object need track first argument call method pointer larg system depend behavior seem norm pointer becom interest first argument constructor becom uninterest first argument destructor use similar approach provid model usag librari packag entiti easi principl difficulti practic come attempt defin meant singl use given librari entiti trick use object work gener case exampl consid c librari file terfac file access program pointer file data structur specif address becom interest return function fopen also sometim first argument function fprintf fscanf sometim fourth fread fwrite need somehow specifi return valu fopen link first argument fprintf fourth argument fread top specif difficulti harder trace program sinc might need emit record argument one approach interpos librari exactli extra step select argument nlevelcalcompact standard unix prof tool provid use use perform data group call singl routin singl node collect statist node gprof accumul statist call pair even found inadequ 20 use trace data provid simpl nlevel gener creat nlevel call encod look call stack start call creat 1 nthei tupl includ call i1 top item call stack point tupl accumul statist collect trace data comput sum averag sum squar comput standard deviat interv compact anoth way compact data consid program trace chunk break execut small figur 1 interv visual set interv exampl 1024 simpl analysi within interv highlight system point current defin system two distinct way provid two differ analys interv first one concentr call interv combin per class multithread applic also keep track much time spent wait within class use model produc overview visual shown figur 1 second interv analysi look alloc class basi interv record number size alloc object class thread use provid high level visual alloc behavior system combin call interv analysi provid addit detail behavior system dag compact one effect way compact dynam call tree transform direct acycl graph dag dag built travers tree postord fashion collaps node ident string call everi string appear exactli dagth algorithm compact tree follow 1 postord fashion node tree construct string consist function node open parenthesi encod string children maintain order close parenthesi 2 comput signatur string hash otherwis 3 node dag node contain result string noth 4 otherwis creat node creat arc node contain tree node chil dren string retain order dont keep string string use represent sequenc oper replac concaten way defin unambigu head sequenc parenthes build dag need merg perform statist associ individu node keep dag node count number origin node sum statist origin node sum squar statist origin node let us provid averag well standard deviat dag node compact gener quit effect sinc much execut repetit natur dag allow repetit collaps singl node deal multipl thread start forest call tree appli algorithm tree simultan without start empti dag everi time construct singl dag repres thread control individu thread repres root node result graph effect mani compact techniqu reli represent sequenc item two approach represent first provid exact represent sequenc possibl com press second provid lossi represent one repres origin sequenc sequenc one could exampl detect repetit sequenc ignor count say aaaabababc would becom ba bc regular express notat ababc kind approxim sequenc particularli use one attempt identifi similar case one attempt encod group relat sequenc use singl encod sever compact techniqu previou section use approach exampl compact tree dag make node dag describ whole famili call sequenc exampl take case function call function b loop classic string represent would map differ dag node depend number iter though loop say run length encod scheme ignor count would map node case approxim better understand visual framework allow varieti sequenc encod techniqu includ approxim exact encod vari simpl complex correct one use depend particular com pactionselect scheme use specif understand task runlength encod simplest approach provid encod find immedi repetit replac count follow item repeat thu string abbbbbbbbbcdddbcdc encod 9b c 3d bcdc fast often quit effect term compress runlength encod algorithm also take paramet k indic longest repetit express exactli repetit size longer k look thu sequenc would encod b c 3d bcdc grammarbas encod altern simpl runlength encod find immedi repetit find common subsequ encod string use grammar subsequ repres rule natur extens rle encod one approach sequitur algorithm 14 algorithm build contextfre grammar repres origin string ensur pair adjac symbol appear grammar everi rule use algorithm work look success digram whenev new digram form duplic exist one ad new rule process need appli recurs nontermin replac digram rule need elimin number use fall one standard sequitur algorithm provid exact encod singl sequenc implement algorithm provid encod group sequenc done build global tabl variabl sequenc thenencod separ sequenc encod com plete nontermin merg global variabl tabl uniqu right hand side variabl appear final encod given term global variabl exampl consid string abbbbbbbbbcd ddbcdc would encod subsequ bcd isol sequenc bs encod two rule r2 basic sequitur algorithm good job find common subsequ encod effici produc grammar compact rule meaning hand best job handl repetit need log n rule encod sequenc n ident symbol encod 9 bs take account balanc string string number call return handl altern modifi basic algorithm two basic way first find immedi repetit repres runlength encod done post process step rule process nontermin use process instanc nontermin right hand side rule replac newli comput expans algorithm runlength encod new right hand side rule becom sinc longer need yield gramma logic represent origin sequenc repetit b shown explicitli approach combin runlength encod k repetit repres x let rule merg represent sequenc abbbbbbbbbcdddbcdc use sequitur runlength encod cutoff 3 second modif sequitur design produc balanc rule use simpl string compact section 3 dissert 14 nevillman note sequitur restrict creat rule contain close symbol open one done consid digram unbalanc result grammar start produc balanc rule use modif algorithm ensur gener rule balanc done postprocess start restrict grammar gener rule either complet balanc rule start open bracket either directli nest rule contain open bracket close bracket nevil man balanc algorithm runlength encod rule first modifica tion time encount unbalanc nontermin expand place make rule final grammar longer subsequ appear howev result grammar balanc rule finit state automata encod way provid altern repetit encod use finit state automata accept se quenc one vari accuraci precis encod use differ mean construct automa ton one extrem one build chain automaton accept given sequenc extrem one build singl state automaton accept everyth via self arc everi possibl input symbol natur neither approach use want automaton good intuit sort sequenc possibl word automaton reveal someth structur sequenc automaton repres multipl sequenc collect structur must reveal signific previou work infer finit state automata input sequenc work concentr use posit neg exampl ie provid set input valid sequenc set input previou work look interact model infer procedur abl ask user whether particular input valid neither approach practic type sequenc look atin way sequenc special path ex ampl automata reflect intern flow graph singl procedur encod loop condit branch pure sequenti flow provid us direct applic use automata describ method class use clear cut howev even way class design use result fairli structur flow diagram order take advantag presum structur behind sequenc still provid reason high degre abstract build automata develop new algorithm infer automaton one sequenc basic fsa construct algorithm algorithm construct determinist fsa properti given sequenc three symbol start one state formal littl use definit hopcroft ullman 10 determinist finit state automaton defin set state q input alphabet initi state q0 2 q transit function andasetoffinalstatesf q addit defin string length k element k use extend definit allow second argument word instead singl symbol q specif purpos defin f one element achiev extend string sequenc length k special symbol say state q ktail 2 k iff exist state q0 qtq0 iff start q possibl see sequenc call relat tailqt algorithm maintain two invari determin map ktail state basic algorithm map everi ktail one state two state ktail common merg merg two state actual recurs process sinc two state merg outgo arc symbol target state arc must also merg process also affect possibl ktail state howev number potenti addit need consid one add arc grow nk n size input alphabet prohibit build larg automaton therefor ignor associ build automaton merg state base associ post process step final postprocess step classic minim fsa exampl algorithm output given sequenc abbbbbbbbbcdddbcdc k 3i shown figur 2 handl self loop basic algorithm reason well find appropri automaton fail howev detect sequenc k less singl token consid input sequenc abbbc automaton gener use basic algorithm would consist seven state singl transit next one seven rather six state algorithm add transit end actual want gener automaton selfloop indic repetit b requir two simpl modif algo rithm first occur build automaton current state alreadi input current token instead creat new state creat selfloop suffici creat selfloop repetit input sequenc consid result appli modifi algorithm exampl shown figur 2 selfloop input b state s1 creat determin enough 3 ds state s2thefirstd take us new state s3 get second three ds sequenc new check fire self loop creat shown figur 3 last next sequenc bcd associ state s1 howev selfloop state would requir s1 s3 merg result shown figur 3b second modif bit complex selfloop tend caus spuriou state merg consid automaton part figur 3b state s1 s2 potenti successor string ddd gener state q selfloop input x qxq state q0 transit state input x q0xq would merg behavior want therefor chang postprocess step situat like initi instanc x caus transit state repres loop part loop 5 experi use variou encod approach varieti program trace java c program gener trace includ follow knightstour solv problem find hamiltonianb c abbbbbbbbbcdddbcdc bd b abbbbbbbbbcdddbcdc figur 3 exampl self loop path graph induc knight move chessboard written c simul motion pendulum magnet field written java onset engin onset board game core program build valid logic formula set charact written c decaf optim compil small subset java written c showmean webserv whose main function find altern mean word elabor web search raw trace data rang size one megabyt simpl c program implement knight tour twenti gigabyt test commerci java system handl webbas request tri variou encod trace evalu qualiti result done spot check trace detail analysi knight tour exampl encod evalu two way one goal variou encod especi dag call encod provid concis version trace data case measur amount compact encod provid note good absolut measur program repetit condens encod one independ encod techniqu note also give inform encod encod typic look dynam call graph ignor memori manag synchron inform trace moreov also discard inform individu object base experi howev still encod quarter origin trace data final note raw trace file alreadi quit dens sinc contain pack binari data encod output file text file contain xml data compress result variou encod seen tabl 2 s5 cdd figur 2 sampl run fsa induc algorithm grammar encod seem grow size trace fsa encod grow number function program grammar also tend grow larger fsa howev would danger make definit assert size model second way evalu encod especi automatabas one see result automata reflect intuit behavior system pur pose spotcheck routin knight tour exam ple class java program io class standard librari see correspond automata look like exampl given figur 4 spot check automata gener seem correspond quit well one would expect given code one thing evalu gener encod determin good valu k paramet automata case look valu k 2 collaps mani state valu k 4 make much differ result automata case automata chang much one come exampl requir arbitrari k find right intuit valu k 3seem good compromis 6 relat work trace program done number differ way essenti program emit record state one modifi program code gener trace data approach taken data visual sy tem like balsa 2 polka18 approach work well goal someth like algorithm anim trace actual part finish program second approach modifi execut done either compil time like gprof finish ex ecut apart system eel 13 take approach lastli one run execut trace environ like jvm modifi jvm like jinsight 5 signific work encod call tree essenti algorithm jerd et al 11 except incorpor step keep encod phase approach 1 21 lose inform processjerd et al 11 also focu class select prof gprof 9 kept statist function invoc callercalle pair respect tri deriv automaton base usag class effect discov path express 3 kind result akin work ernst notkin 6 tri discov data invari program sequitur use compress basic block trace data laru 12 nevilleman report work gain 7 focus discov control flow albeit use absolut valu program counter discov fsa posit exampl long histori gener imposs discov correct minim fsa imposs even probabl approxim correct model algorithm closest cook wolf 4 differ collaps two node iff one includ ktail one sinc constraint stricter end bigger fsa research describ paper repres first step toward system afford broad basi understand visual dynam behavior larg complex sy tem current effort involv extend basi varieti way area trace data collect work extens reduc size trace file impact trace program execut work interfac specifi trace record interest output also incorpor minim trace section 2 larger framework addit implement varieti minor extens let trace collect system use effect multipl process distribut system next work develop incorpor addit selectioncompact techniqu one look first involv gener sequenc memori event eg alloc memori compact involv move object garbag collector free garbag col lection gener sequenc reflect use librari arbitrari program abstract program name function raw trace size daggrammar dagfsa stringgrammar stringfsa knighttour 268 700k 120k 208k 12k 40k onset 542 833m 6m 464k 15m 80k decaf 5443 26g 29m 5m 61m 700k showmean 1488 21g 82m 623k 34m 110k tabl 2 compress achiev encod final work develop addit encod 8 techniqu sequenc encod investig use probabilist model like hidden markov model approxim fsa probabilist model flex 9 ibl well known train capabl variou thing fsa like segreg program trace phase hand one tune lot paramet work properli sinc learn process optim procedur sometim 10 result model get stuck local optima meaning r exploit hardwar perform counter flow context sensit profil interest event specifi cation process schedul path express discov model soft 14 ware process eventbas data visual refer pattern solv memori leak java dynam discov like program invari support program evolut behaviourstructur transform un 18 der uncertainti gprof call graph execut profil sigplan automata theori visual interact program execut whole program path acm sigplan languag design implement plan95 confer program languag design implement pldi infer sequenti structur phd thesi work pattern code 33rd hawaii intern confer system scienc gener java trace data smooth continu anim portray algorithm process knightsquareinfofindrestoftourknightsolut sol solisvalid return true sq figur 4 case fsa algorithm discov control softwar visual program practic experi limit gprof tr practic experi limit gprof visual interact program execut exploit hardwar perform counter flow context sensit profil softwar visual desert environ discov model softwar process eventbas data whole program path dynam discov like program invari support program evolut gener java trace data portabl samplingbas profil java virtual machin introduct automata theori languag comput visual refer pattern solv memori leak java gprof work pattern code ctr alessandro orso jame jone mari jean harrold john stasko gammatella visual programexecut data deploy softwar proceed 26th intern confer softwar engin p699700 may 2328 2004 jame jone alessandro orso mari jean harrold gammatella visual programexecut data deploy softwar inform visual v3 n3 p173188 septemb 2004 steven p reiss overview bloom proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p25 june 2001 snowbird utah unit state valentin dallmeier christian lindig andrea zeller lightweight bug local ampl proceed sixth intern symposium autom analysisdriven debug p99104 septemb 1921 2005 monterey california usa steven p reiss visual java action proceed acm symposium softwar visual june 1113 2003 san diego california ludov langevin mireil ducass tracer driver hybrid execut analys proceed sixth intern symposium autom analysisdriven debug p143148 septemb 1921 2005 monterey california usa david lorenzoli leonardo mariani mauro pezz infer statebas behavior model proceed 2006 intern workshop dynam system analysi may 2323 2006 shanghai china alessandro orso jame jone mari jean harrold visual programexecut data deploy softwar proceed acm symposium softwar visual june 1113 2003 san diego california stuart marshal kirk jackson craig anslow robert biddl aspect visualis reusabl compon proceed asiapacif symposium inform visualis p8188 januari 01 2003 adelaid australia ankit goel abhik roychoudhuri tulika mitra compactli repres parallel program execut acm sigplan notic v38 n10 octob rhode brown karel driesen david eng lauri hendren john jorgensen clark verbrugg qin wang step framework effici encod gener trace data acm sigsoft softwar engin note v28 n1 januari tao wang abhik roychoudhuri use compress bytecod trace slice java program proceed 26th intern confer softwar engin p512521 may 2328 2004 murali krishna ramanathan ananth grama suresh jagannathan pathsensit infer function preced protocol proceed 29th intern confer softwar engin p240250 may 2026 2007 john whaley michael c martin monica lam automat extract objectori compon interfac acm sigsoft softwar engin note v27 n4 juli 2002 ben liblit alex aiken alic x zheng michael jordan bug isol via remot program sampl acm sigplan notic v38 n5 may glenn ammon rastislav bodk jame r laru mine specif acm sigplan notic v37 n1 p416 jan 2002 robert j walker kevin vigger implement protocol via declar event pattern acm sigsoft softwar engin note v29 n6 novemb 2004 sebastian elbaum madelin hardojo empir studi profil strategi releas softwar impact test activ acm sigsoft softwar engin note v29 n4 juli 2004 mano renieri shashank ramaprasad steven p reiss arithmet program path acm sigsoft softwar engin note v30 n5 septemb 2005 sebastian elbaum madelin diep profil deploy softwar assess strategi test opportun ieee transact softwar engin v31 n4 p312327 april 2005 david lo siaucheng khoo smartic toward build accur robust scalabl specif miner proceed 14th acm sigsoft intern symposium foundat softwar engin novemb 0511 2006 portland oregon usa jinlin yang david evan deepali bhardwaj thirumalesh bhat manuvir da perracotta mine tempor api rule imperfect trace proceed 28th intern confer softwar engin may 2028 2006 shanghai china