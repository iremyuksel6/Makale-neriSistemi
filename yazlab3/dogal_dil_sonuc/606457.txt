comput iceberg concept lattic titan introduc notion iceberg concept lattic show use knowledg discoveri databas iceberg lattic conceptu cluster method well suit analyz larg databas also serv condens represent frequent itemset start point comput base associ rule visual method associ rule iceberg concept lattic base theori formal concept analysi mathemat theori applic data analysi inform retriev knowledg discoveri present new algorithm call titan comput iceberg concept lattic base data mine techniqu levelwis approach fact titan use gener problem comput arbitrari closur system closur oper come along socal weight function use weight function comput closur system discuss literatur applic provid weight function includ associ rule mine function depend databas conceptu cluster ontolog engin algorithm experiment evalu compar ganter nextclosur algorithm evalu show import gain effici especi weakli correl data b introduct sinc introduct associ rule mine 1 becom one core data mine task attract tremend interest among data mine research practition elegantli simpl problem statement find set subset item call itemset frequent occur mani databas record transact extract rule tell us subset item influenc presenc anoth subset prototyp applic associ market basket analysi item repres product record pointofsal data larg groceri department store kind databas gener spars ie longest frequent itemset rel short howev mani reallif dataset dens ie contain long frequent itemset wide recogn set associ rule rapidli grow unwieldi especi lower frequenc requir larger set frequent itemset number rule present user mani redund true even spars dataset dens dataset simpli feasibl mine possibl frequent itemset let alon gener rule itemset dataset one typic find exponenti number frequent itemset exampl find long itemset length 40 uncommon 2 paper show necessari mine frequent itemset guarante nonredund associ rule found show suffici consid close frequent itemset defin later nonredund rule found consid rule among close frequent itemset set close frequent itemset lot smaller set frequent itemset case 3 order magnitud thu even dens domain guarante complet ie nonredund associ rule found main comput intens step process identifi close frequent itemset possibl gener set use apriorilik 1 bottomup search method examin subset frequent itemset neither possibl mine set use algorithm mine maxim frequent pattern like maxmin 2 pincersearch 9 sinc find close itemset subset maxim frequent itemset would examin introduc charm effici algorithm enumer set close frequent itemset charm uniqu simultan explor itemset space transact space unlik previou associ mine method exploit itemset search space furthermor charm avoid enumer possibl subset close itemset enumer close frequent set explor itemset transact space allow charm use novel search method skip mani level quickli identifi close frequent itemset instead enumer mani nonclos subset charm use twoprong prune strategi prune candid base subset infrequ ie extens infrequ test associ mine method also prune candid base nonclosur properti ie nonclos itemset prune final charm use intern data structur like hashtre 1 tri 3 fundament oper use union two itemset intersect two transact list itemset contain extens set experi confirm charm provid order magnitud improv exist method mine close itemset even method like aclos 14 specif design mine close itemset make lot fewer databas scan longest close frequent set found scale linearli number transact also also linear number close itemset found rest paper organ follow section 2 describ associ mine task section 3 describ benefit mine close itemset rule among present charm section 4 relat work discuss section 5 present experi section 6 conclus section 7 associ rule associ mine task state follow let f1 2 mg set item let ng set transact identifi tid input databas binari relat item occur transact write 2 altern typic databas arrang set transact transact contain set item exampl consid databas shown figur 1 use run exampl throughout paper fa c dt wg 6g second transact repres fc2 d2 w 2g pair transact taken togeth form binari relat set x also call itemset set call tidset conveni write itemset c wg acw tidset f2 4 5g 245 support itemset x denot x number transact occur subset itemset frequent support equal userspecifi minimum support minsup valu ie x minsup associ rule express x 1 itemset x 1 support rule given ie joint probabl transact contain x 1 x 2 confid ie condit probabl transact contain x 2 given contain rule frequent itemset rule confid confid greater equal userspecifi minimum confid minconf valu ie p minconf associ rule mine task consist two step 1 1 find frequent itemset 2 gener high confid rule find frequent itemset step comput io intens consid figur 1 show bookstor databas six custom buy book differ author show frequent itemset cdw maximalbyinclus frequent itemset ie subset frequent itemset number item search space enumer frequent itemset 2 exponenti one prove problem find frequent set certain size npcomplet reduc balanc bipartit cliqu problem known npcomplet 8 18 howev assum bound transact length task find frequent itemset essenti linear databas size sinc overal complex case given n 2 l number transact l length longest frequent itemset r number maxim frequent itemset c w c w c w c w c w c w541 frequent itemset w cw ac aw cd ct acw 100 50 3 dw tw act atw itemset support ctw cdw actw item transcat jane austen agatha christi sir arthur conan doyl p g wodehous mark twain figur 1 gener frequent itemset gener confid rule step rel straightforward rule form x 0 p gener frequent itemset x minconf itemset size k potenti confid rule gener follow fact must consid subset itemset anteced except empti full itemset complex rule gener step thu os 2 l number frequent itemset l longest frequent itemset note 2 l r number maxim frequent itemset exampl frequent itemset acw gener 6 possibl rule support 4 10 c cw 08 3 close frequent itemset section develop concept close frequent itemset show set necessari suffici captur inform frequent itemset smaller cardin set frequent itemset 31 partial order lattic first introduc lattic theori concept see 4 good introduct let p set partial order p binari relat x relat 1 reflex x x 2 antisymmetr x x impli x z set p relat call order set denot pair p write x x x 6 order set let subset p element u 2 p upper bound u lower bound l 2 least upper bound call join denot greatest lower bound call meet denot also write x join x meet order set l lattic two element x l join x exist l complet lattic exist l finit lattic complet l call join semilattic join exist l call meet semilattic meet exist let p denot power set ie set subset order set ps complet lattic meet given set intersect join given set union exampl partial order pi set possibl itemset pt set possibl tidset complet lattic set frequent itemset hand meetsemilattic exampl consid figur 2 show semilattic frequent itemset found exampl databas figur 1 two itemset meet guarante frequent join may may frequent follow ac aw cd ct cw dw tw acw act actw x 2456 figur 2 meet semilattic frequent itemset well known principl associ mine itemset frequent subset also frequent exampl frequent join ac acdw frequent 32 close itemset let binari relat input databas associ mine let x map defin galoi connect partial order pi pt power set respec tive denot x tx pair x tx iy figur 3 illustr two map map tx set transact tidset contain itemset x similarli iy itemset contain transact exampl tacw term individu element x2x tx iy y2i iy exampl galoi connect satisfi follow properti xx 1 exampl 245 2456 let set function c ps 7 ps closur oper xy c satisfi follow properti subset x call close let c x denot composit two map dualli let c ti closur oper itemset tidset respect defin close itemset itemset x closur ie x exampl itemset acw close close tidset tidset exampl tidset 1345 close map c c ti closur oper satisfi three properti extens monoton idempot also call applic roundtrip figur 4 illustr roundtrip start itemset x exampl let extens properti say x subset closur sinc c conclud ac close hand idempot properti say map itemset tidset contain transact item figur 3 galoi connect item transact figur 4 closur oper roundtrip map tidset back set item common tid tidset obtain close itemset matter mani roundtrip make extend close itemset exampl one roundtrip ac obtain close itemset acw perform anoth roundtrip acw get c acw close itemset x exist close tidset given properti convers close tidset exist close itemset see x close fact plug thu x close dualli close exampl seen close itemset acw associ close tidset 1345 close itemset close tidset pair x call concept figur 5 galoi lattic concept figur frequent concept concept x 1 1 subconcept x 2 2 denot let b denot set possibl concept databas order set b complet lattic call galoi lattic exampl figur 5 show galoi lattic exampl databas total concept least element concept c 123456 greatest element concept acdtw 5 notic map close pair itemset tidset antiisomorph ie concept larg cardin itemset small tidset vice versa 33 close frequent itemset vs frequent itemset begin section defin join meet oper concept lattic see 5 formal proof set concept databas relat given b complet lattic join meet given join meet multipl concept simpli take union join exampl consid join two concept acdw 45 cdt hand meet given acdw similarli perform multipl concept join meet exampl ct 1356 defin support close itemset x concept x cardin close tidset close itemset concept frequent support least minsup figur 6 show frequent concept tidset cardin least 3 frequent concept like frequent itemset form meetsemilattic meet guarante exist join may theorem 1 itemset x support equal support closur ie proof support itemset x number transact appear exactli cardin tidset tx ie xj prove lemma show sinc c ti closur oper satisfi extens properti ie tx c ti thu tx tc x hand sinc c also closur oper x c x turn impli due properti 1 galoi connect thu lemma state frequent itemset uniqu determin frequent close itemset frequent concept furthermor set frequent close itemset bound set frequent itemset typic much smaller especi dens dataset order magnitud differ illustr benefit close itemset mine contrast figur 2 show set frequent itemset figur 6 show set close frequent itemset concept see 7 close frequent itemset 19 frequent itemset exampl clearli illustr benefit mine close frequent itemset 34 rule gener recal associ rule form x 1 support equal confid given j interest find high support least minsup high confid rule least minconf wide recogn set associ rule rapidli grow unwieldi larger set frequent itemset number rule present user howev show necessari mine rule frequent itemset sinc rule turn redund fact suffici consid rule among close frequent itemset concept state theorem theorem 2 rule x 1 equival rule c x 1 proof follow immedi fact support itemset x equal support closur c x ie x use fact show typic mani worst case exponenti number frequent itemset map close frequent itemset let assum n itemset given set 1 whose closur c 1 itemset given set 2 whose closur c 2 say n 1 rule two nonclos itemset direct 1 2 redund equival rule c 1 n 1 rule direct 2 1 also redund equival rule c 2 exampl look figur 2 find itemset cd map close itemset cd itemset w cw map close itemset cw consid rule former latter set find rule 34 cd 34 equival rule close itemset cd 34 cw hand consid rule latter set former find w 35 equival rule cw 56 cd present user gener rule rule specif contain one addit item anteced consequ direct ie rule 34 w w 35 06 thu use close frequent itemset would gener 2 rule instead 8 rule normal gener two set get idea number redund rule mine tradit associ mine one dataset mushroom 10 minimum support found 574513 frequent itemset close reduct 100 time 4 charm algorithm design implement develop main idea behind close associ rule mine present charm effici algorithm mine close frequent itemset first describ algorithm gener term independ implement detail show algorithm implement effici separ design implement aid comprehens allow possibl multipl implement charm uniqu simultan explor itemset space tidset space unlik previou associ mine method exploit itemset space furthermor charm avoid enumer possibl subset close itemset enumer close frequent set rule pure bottomup search properti import mine dens domain long frequent itemset bottomup approach practic exampl longest frequent itemset l bottomup search enumer 2 l frequent subset explor itemset tidset space allow charm use novel search method skip mani level quickli identifi close frequent itemset instead enumer mani nonclos subset charm use twoprong prune strategi prune candid base subset infrequ ie extens infrequ itemset test associ mine method also prune branch base nonclosur properti ie nonclos itemset prune final charm use intern data structur like hashtre 1 tri 3 fundament oper use union two itemset intersect tidset acdt acdtw cd ac acd ct act cdw ad aw cw acw adt adw atw actw acdw figur 7 complet subset lattic consid figur 7 show complet subset lattic main parent link shown reduc clutter five item exampl databas see figur 1 idea charm process lattic node test children frequent infrequ well nonclos branch prune notic children node form combin node sibl come branch order exampl combin sibl c dt w produc children acadat aw sibl need consid alreadi prune infrequ nonclosur lexic order branch shown figur see later differ branch order base support improv perform charm similar observ made maxmin 2 mani search scheme possibl eg breadthfirst depthfirst bestfirst hybrid search charm perform depthfirst search subset lattic 41 charm algorithm design section assum itemset x access tidset tx tidset access itemset iy practic gener tx iy discuss implement section charm actual enumer frequent concept input databas recal concept given close itemset tx close tidset start search concept tidset space itemset space howev typic number item lot smaller number transact sinc ultim interest close itemset start search singl item associ tidset u u item transact item transact item transact item transact figur 8 basic properti itemset tidset 411 basic properti itemsettidset pair onetoon map itemset integ two itemset x 1 x 2 say defin total order set itemset exampl f denot lexicograph order itemset ac ad anoth exampl f sort itemset increas order support ad ac support ad less support ac let assum process branch x 1 tx 1 want combin sibl x 2 tx 2 x 1 x 2 suitabl total order f main comput charm reli follow properti 1 tx 1 thu simpli replac everi occurr x 1 consider sinc closur ident closur word treat composit itemset 2 tx 1 replac everi occurr x 1 occur transact x 2 alway occur sinc tx 1 gener differ closur 3 tx 1 replac everi occurr x 2 produc differ closur must retain 4 case noth elimin x 1 x 2 lead differ closur figur 8 pictori depict four case see close tidset retain combin two itemset tidset pair exampl two tidset equal one prune properti 1 one tidset subset anoth result tidset equal smaller tidset parent elimin parent properti 2 3 final tidset unequ two intersect close exampl formal present algorithm show four basic properti itemsettidset pair exploit charm mine close frequent itemset x 1345 figur 9 charm lexicograph order x 1345 figur 10 charmsort increas support consid figur 9 initi five branch correspond five item tidset exampl databas recal use gener children item pair 1345 need combin sibl come combin two pair result pair given word need perform intersect correspond tidset whenev combin two itemset tri extend c find properti 2 true ie tc thu remov replac ac combin produc infrequ set acd prune combin produc pair act 135 properti 4 hold noth prune tri combin w find ta tw accord properti 2 replac unprun occurr aw thu ac becom acw act becom actw point noth process branch root start process c branch combin c observ properti 3 hold ie tc td mean wherev occur c alway occur thu remov consider entir branch prune child cd replac exactli scenario occur w branch prune replac ct cw children c continu depthfirst manner next process node cd combin ct produc infrequ itemset cdt prune combin cw produc cdw sinc properti 4 hold noth remov similarli combin ct cw produc ctw point branch process final remov ctw 135 sinc contain actw 135 see 10 step identifi 7 close frequent itemset 412 charm pseudocod descript illustr work charm exampl databas present pseudocod algorithm algorithm start initi set node examin frequent singl item tidset line 1 main comput perform charmextend return set close frequent itemset c charmextend respons test branch viabil extract itemsettidset pair current node set node x tx line 3 combin pair come x j tx j line 5 accord total order f alreadi seen exampl lexic order figur 9 look support base order combin two itemsettidset pair comput line 6 routin charmproperti test result set requir support also appli four properti discuss note routin may modifi current node set delet itemsettidset pair alreadi contain pair also insert newli gener children frequent pair set new node newn set nonempti recurs process depthfirst manner line 8 insert possibl extend itemset x x set close itemset sinc process stage close itemset contain x alreadi gener return line 3 process next unprun branch routin charmproperti simpli test new pair frequent discard test four basic properti itemsettidset pair extend exist itemset remov subsum branch current set node insert new pair node set next depthfirst step charm minsup 1 2 charmextend node c charmextend node c 3 x tx node 4 5 x j tx j node fj fi 7 charmpropertynod newn 8 newn 9 subsum charmproperti node newn 10 jyj minsup 11 tx 12 remov x j node 13 replac x x 14 els 15 replac x x 16 els 17 remov x j node 18 add xy newn 19 els 20 add xy newn figur 11 charm algorithm 413 branch reorder purpos let itemsettidset pair order function line 5 remain unspecifi usual manner process lexicograph order specifi total order want promis approach sort itemset base support motiv increas opportun nonclosur base prune itemset quick look properti 1 2 tell us two situat prefer two case properti 1 closur two itemset equal thu discard x j replac x properti 2 still replac x note case insert anyth new node thu occurr case 1 2 fewer level search perform contrast occurr case 3 4 result addit set new node requir addit level process note reorder appli new node set start initi branch sinc want tx sort itemset increas order support thu larger tidset occur later order maxim occurr properti 1 2 similar reason sort decreas order support doesnt work well sinc maxim occurr properti 3 4 increas number level process exampl figur 10 show charm work exampl databas sort itemset increas order support use pseudocod illustr comput initi node fa 1345 2456 line 1 line 3 first process branch 1345 set line 4 combin remain sibl line 5 ad frequent prune next look sinc ta 6 tt simpli insert newn next find ta tw thu replac occurr aw thu mean also chang newn atw look c find ta tc thu aw becom acw newn becom actw point charmextend invok nonempti newn line 8 sinc one element immedi exit ad actw 135 set close frequent itemset c line 9 return branch complet process add c branch examin turn final c produc shown figur 10 one final note pair ctw 135 produc branch close sinc subsum actw 135 elimin line 9 42 charm implement detail describ implement detail charm depart pseudocod instanc perform reason data format given manipul itemsettidset pair fundament oper intersect two tidset charm use vertic data format maintain diskbas list item list tid item occur word data organ avail disk tidset item contrast current associ algorithm 1 2 3 assum horizont databas layout consist list transact transact identifi follow list item transact vertic format shown success associ mine use partit 16 maxeclat maxcliqu 19 shown lead good perform fact vertic algorithm 15 shown best approach better horizont tightli integr associ mine databas system benefit use vertic format demonstr monet 12 new highperform databas system queryintens applic like olap data mine intersect subset test given avail vertic tidset itemset comput tidset intersect new combin straightforward take linear scan two tidset store match tid new tidset exampl main question effici comput subset inform requir appli four properti first might appear like expens oper fact vertic format come free intersect two tidset keep track number mismatch list ie case tid occur one list let mx 1 mx 2 denot number mismatch tidset itemset four case consid ta td see ta 6 td next consid show ta tw thu charm perform support subset equal inequ test simultan comput intersect elimin nonclos itemset describ fast method avoid ad nonclos itemset set close frequent itemset c line 9 ad set x make sure doesnt exist set c x c support maxmin 2 face similar problem elimin nonmaxim itemset clearli want avoid compar x exist element c would lead ojcj 2 complex solut store c hash tabl hash function use sinc want perform subset check cant hash itemset could use support itemset hash function mani unrel subset may support charm use sum tid tidset hash function ie reduc chanc unrel itemset cell hash tabl cell link list sort support primari key itemset secondari key ie lexic ad x c hash cell check x subset itemset support x found experiment approach add second addit process time total execut time optim initi one signific departur pseudocod figur 11 note initi node set line 1 frequent item invok charmextend worst case might perform nn 12 tidset intersect n number frequent item l averag tidset size byte amount data read l n n 12 byte contrast horizont approach read l n byte well known mani itemset length 2 turn infrequ thu clearli wast perform solv perform problem first comput set frequent itemset length 2 add simpl check line 5 combin two item j j known frequent number intersect perform check equal number frequent pair practic closer rather 2 check done initi singl item later stage describ comput frequent itemset length 2 use vertic format note clearli perform intersect pair frequent item solut perform vertic horizont transform onthefli item scan tidset memori insert item array index tid 2 ti exampl consid tidset item given read first tid insert array index 1 also insert indic 3 4 5 repeat process item tidset figur 12 show invers process work addit item complet horizont databas recov vertic tidset item given recov horizont databas straightforward updat count pair item use upper triangular 2d array add c add add w add add a246246246 figur 12 verticaltohorizont databas recoveri memori manag initi charm scan databas comput frequent pair item note find frequent item virtual free vertic format calcul support directli index array store tidset offset item index avail comput frequent item take addit scan process initi branch search lattic need scan singl item tidset disk unprun sibl charm fulli scalabl largescal databas mine implement appropri memori manag phase describ next exampl recov horizont databas entir databas clearli fit memori charm handl recov block transact one time fit memori support item pair updat increment process recov block note regardless number block process requir exactli one databas scan vertic format imagin k pointer k tidset pointer move forward tid point belong current block number close itemset becom larg hope keep set close itemset c memori case elimin nonclos itemset done offlin postprocess step instead insert x c line 9 simpli write disk along support hash valu postprocess step read close itemset appli hash tabl search approach describ elimin nonclos itemset sinc charm process branch search depthfirst fashion memori requir substanti retain itemsettidset pair level current leftmost branch search space consid 7 exampl initi retain tidset facadat awg facdact acwg facdtwg ac process memori requir shrink fadat fadtwg case worst possibl situat practic applic subset infrequ nonclosur properti 1 2 3 prune mani branch search lattic case even memori requir depthfirst search exceed avail memori straightforward modifi charm write temporari tidset disk exampl process ac branch might write tidset fadat awg disk anoth option simpli recomput intersect write temporari result expens 43 correct effici theorem 3 correct charm algorithm enumer close frequent itemset proof charm correctli identifi close frequent itemset sinc search base complet subset lattic search branch prune either suffici support result nonclosur base properti itemsettidset pair outlin begin section final charm elimin case nonclos itemset might gener perform subsumpt check insert anyth set close frequent itemset c theorem 4 comput cost run time charm ol jcj l averag tidset length c set close frequent itemset proof note start singl item associ tidset process branch follow case might occur let x c denot current branch x sibl tri combin prune x branch tx c 1 extend x c becom final new node gener get new possibl close set due properti 3 4 also note new node fact repres close tidset thu indirectli repres close itemset sinc exist uniqu close itemset close tidset thu charm perform order ojcj intersect confirm via experi section 6 extra intersect perform due case charm may produc nonclos itemset like ctw 135 elimin line 9 tidset averag length l intersect cost 2 l total run time charm thu 2 l jcj ol jcj theorem 5 io cost number databas scan made charm given jcj set close frequent itemset set item fraction databas fit memori proof number databas scan requir given total memori consumpt algorithm divid fraction databas fit memori sinc charm comput order ojcj intersect total memori requir charm ol jcj l averag length tidset note perform intersect size longer itemset tidset shrink rapidli ignor effect analysi thu pessimist bound total databas size l jij fraction fit memori given l jij number data scan given l jcj l note worst case jcj exponenti jij rare case practic show experi section charm make databas scan compar longest close frequent itemset found 5 relat work number algorithm mine frequent itemset 1 2 3 9 10 13 16 19 propos past apriori 1 first effici scalabl method mine associ start count frequent item subsequ pass extend current set frequent itemset one item frequent itemset found sinc use pure bottomup search subset lattic see figur 7 gener 2 l subset frequent itemset length l method includ dhp 13 partit 16 ascpa 10 dic 3 propos enhanc apriori term number candid count number data scan still gener subset frequent itemset simpli feasibl except high support kind dens dataset examin paper use apriori repres class method experi method find maxim frequent itemset includ allmf 8 random algorithm guarante complet pincersearch 9 construct candid bottomup manner like apriori also start topdown search time previou algorithm maxeclat maxcliqu 19 17 rang gener frequent itemset gener long frequent itemset subset maxmin 2 anoth algorithm find maxim element use novel superset frequenc prune support lowerbound techniqu quickli narrow search space sinc method mine maxim frequent itemset use gener possibl associ rule requir support subset tradit approach tri comput support subset maxim frequent itemset run problem gener 2 l subset itemset length l dens dataset impract use maxmin repres class algorithm show modifi comput close itemset render infeas except high support cd ct ad ac find gener comput figur 13 aclos algorithm exampl aclos 14 apriorilik algorithm directli mine close frequent itemset two main step aclos first use bottomup search identifi gener smallest frequent itemset determin close itemset via closur oper c exampl exampl databas c c gener acw gener found use simpl modif apriori time new candid set gener aclos comput support prune infrequ one remain set compar support frequent itemset subset previou level support itemset match support subset itemset gener thu prune process repeat gener produc second step aclos comput closur gener found first step comput closur itemset perform intersect transact occur subset ie closur itemset x given c tid closur gener comput one databas scan provid gener fit memori nevertheless comput closur way expens oper figur 13 show work aclos exampl databas gener candid pair item determin ad dt frequent prune remain frequent pair prune support match support subset acaw prune sinc support equal support cd prune ct cw w prune find candid gener mark end first step second step aclos comput closur unprun itemset final duplic closur remov eg tw produc closur show aclos much better apriori uncompetit charm number previou algorithm propos gener galoi lattic concept 5 6 algorithm adapt enumer frequent concept studi small dataset final problem gener basi minim nonredund rule set associ rule discuss 18 algorithm given turn base theori develop 7 5 11 6 experiment evalu chose sever real synthet dataset test perform charm real dataset use maxmin 2 dataset except pum pumsb pumsb set taken uc irvin machin learn databas repositori pum dataset contain censu data pumsb pumsb without item 80 support mushroom databas contain characterist variou speci mushroom final connect chess dataset deriv respect game step typic real dataset dens ie produc mani long frequent itemset even high valu support dataset publicli avail ibm almaden wwwalmadenibmcomcsquestdemoshtml also chose synthet dataset also avail ibm almaden use benchmark test previou associ mine algorithm dataset mimic transact retail environ usual synthet dataset spars compar real set modifi gener produc longer frequent itemset avg record length record scaleup db size chess 76 37 3196 31960 connect 130 43 67557 675570 mushroom 120 23 8124 81240 pumsb 7117 50 49046 490460 pumsb 7117 74 49046 490460 tabl 1 databas characterist tabl also show characterist real synthet dataset use evalu show number item averag transact length number transact databas also show number record use scaleup experi one see averag transact size databas much longer convent use previou literatur experi describ perform 400mhz pentium pc 256mb memori run redhat linux 60 algorithm code c 61 effect branch order figur 14 show effect run time use variou kind branch order charm compar three order method lexicograph order increas support decreas support observ decreas order worst hand process branch itemset increas order best factor 15 time better lexicograph order 2 time better decreas order similar result obtain synthet dataset result charm report use increas branch order sinc best time per close sec minimum support chess decreas lexicograph increasing481216955965975tim per close sec minimum support connect decreas lexicograph increasing135715253545tim per close sec minimum support mushroom decreas lexicograph increasing051525354555949698tim per close sec minimum support pumsb decreas lexicograph time per close sec minimum support pumsb decreas lexicograph increas figur 14 branch ordering100100001e06657585numb element minimum support chess frequent close maximal10010000955965975numb element minimum support connect frequent close maximal100100001e0615253545numb element minimum support mushroom frequent close maximal101000949698numb element minimum support pumsb frequent close maximal101000100000455565numb element minimum support pumsb frequent close maxim figur 15 set cardinality481260708090 longest freq scan minimum support chess chesslf chessdbi chessdbl13579955965975longest freq scan minimum support connect connectlf connectdbi longest freq scan minimum support mushroom mushroomlf mushroomdbi mushroomdbl1357949698longest freq scan minimum support pumsb pumsblf pumsbdbi pumsbdbl261014455565longest freq scan minimum support pumsb pumsblf pumsbdbi pumsbdbl figur longest frequent itemset vs databas scan biincreas dbllexic order 11001000030507090total time sec minimum support chess aclos cmaxmin charm total time sec minimum support connect aclos cmaxmin charm total time sec minimum support mushroom aclos cmaxmin charm maxminer01101000758595tot time sec minimum support pumsb aclos cmaxmin charm total time sec minimum support pumsb aclos cmaxmin charm maxminer1010000040812tot time sec minimum support aclos cmaxmin charm maxminer1010000206114 total time sec minimum support aclos cmaxmin charm maxminer101000012tot time sec minimum support aclos cmaxmin charm maxmin figur 17 charm versu apriori aclos cmaxmin maxmin 62 number frequent close maxim itemset figur 15 show total number frequent close maxim itemset found variou support valu note maxim frequent itemset subset close frequent itemset maxim frequent itemset must close sinc definit extend anoth item yield frequent itemset close frequent itemset cours subset frequent itemset depend support valu use set maxim itemset order magnitud smaller set close itemset turn order magnitud smaller set frequent itemset even low support valu find differ maxim close remain around factor 10 howev gap close frequent itemset grow rapidli exampl mushroom 10 support gap factor 100 558 maxim 4897 close 574513 frequent itemset 63 charm versu maxmin aclos apriori compar perform charm previou algorithm maxmin mine maxim frequent itemset thu augment ad postprocess routin use maxim frequent itemset gener close frequent itemset essenc gener subset maxim itemset elimin itemset support equal subset augment algorithm call cmaxmin aclos method extant method directli mine close frequent itemset final apriori mine frequent itemset would requir postprocess step comput close itemset add cost run time figur 17 show charm compar previou method real synthet databas find apriori run except high valu support even case charm 2 3 order magnitud better gener subset frequent itemset clearli take much time aclos perform order magnitud better apriori low support valu high support valu fact wors apriori high support number frequent itemset much closur comput step aclos domin comput time like apriori aclos couldnt run low valu support gener find step find mani gener kept memori cmaxmin augment version maxmin suffer similar fate gener subset test closur feasibl strategi cmaxmin run low support case run 1 2 order magnitud slower charm maxmin abl run valu support charm handl except high support valu charm better maxmin order magnitud faster charm typic factor 5 6 time better differ attribut fact set maxim frequent itemset typic order magnitud smaller set close frequent itemset note sinc maxmin mine maxim itemset use produc associ rule fact attempt calcul subset frequenc add lot overhead saw case cmaxmin experi demonstr charm extrem effect effici mine close frequent itemset abl grace handl low support valu even dens dataset 64 scale properti charm figur show time taken charm per close frequent itemset found support valu one use compar charm method lower support close itemset found time spent per element decreas indic effici charm increas decreas support figur 19 show number tidset intersect perform per close frequent itemset gener ideal case graph correspond case perform exactli number intersect close frequent itemset ie ratio one find connect chess number intersect perform charm close ideal charm within factor 106 chess 26 mushroom time ideal confirm comput effici claim made charm inde perform ojcj intersect figur show number databas scan made charm compar length longest close frequent itemset found real dataset number databas scan charm calcul take sum length tidset scan disk divid sum tidset length item databas number report pessimist sens increment sum even though may space memori may scan tidset evict memori effect particularli felt case reorder itemset accord increas support case frequent itemset end contribut sum multipl time even though tidset may alreadi cach memori reason also show number databas scan lexic order much lower sort case even pessimist estim find charm make lot fewer databas scan longest frequent itemset use lexic order find exampl pumsb longest close itemset length 13 charm make 3 databas scans00010100001 0001 time per close sec close frequent itemset 10000 real dataset chess connect mushroom pumsb pumsb figur 18 time per close frequent intersect per close close frequent itemset 10000 real dataset ideal chess connect mushroom pumsb pumsb figur 19 intersect per close total time sec number transact 100000 synthet dataset figur 20 size scaleup synthet total time sec replic factor real dataset figur 21 size scaleup real dataset final figur 20 21 show charm scale increas number transact synthet dataset kept databas paramet constant increas number transact 100k 1600k find linear increas time real dataset replic transact 2 10 time find linear increas run time increas number transact conclus paper present evalu charm effici algorithm mine close frequent itemset larg dens databas charm uniqu simultan explor itemset space tidset space unlik previou associ mine method exploit itemset space explor itemset tidset space allow charm use novel search method skip mani level quickli identifi close frequent itemset instead enumer mani nonclos subset extens set experi confirm charm provid order magnitud improv exist method mine close itemset make lot fewer databas scan longest close frequent set found scale linearli number transact also also linear number close itemset found acknowledg would like thank roberto bayardo provid us maxmin algorithm well real dataset use paper r fast discoveri associ rule effici mine long pattern databas dynam itemset count implic rule market basket data introduct lattic order formal concept analysi mathemat foundat increment concept format algorithm base galoi concept lattic famil minimal dimplic inform result dun tableau de donne binair discov specif sentenc random algorithm new algorithm discov maximum frequent set mine associ rule antiskew algorithm implic partiel dan un context effect hash base algorithm mine associ rule discov frequent close itemset associ rule integr associ rule mine databas altern implic effici algorithm mine associ rule larg databa es scalabl algorithm associ mine theoret foundat associ rule new algorithm fast discoveri associ rule tr algorithm insert lattic applic type classif mine associ rule set item larg databas increment concept format approach learn databas approxim infer function depend relat automat class insert overload infer configur structur sourc code effici mine long pattern databas reengin class hierarchi use concept analysi design class hierarchi base concept galoi lattic effici mine associ rule use close itemset lattic fast algorithm build lattic mine frequent pattern count infer levelwis search border theori knowledg discoveri automat structur knowledg base conceptu cluster effici discoveri function depend armstrong relat conceptu inform system discuss itsecur tool discov frequent close itemset associ rule cem conceptu email manag conceptu knowledg discoveri data analysi conceptu knowledg discoveri databas use formal concept analysi method fast algorithm mine associ rule larg databas merg inherit hierarchi databas integr io2 algorithm method build inherit graph object databas design toward object databas approach manag concept lattic mine minim nonredund associ rule use frequent close itemset toscana graphic tool analyz explor data intellig structur reduc associ rule formal concept analysi mine ontolog text ctr jean diatta relat theori formal concept multiway cluster pattern recognit letter v25 n10 p11831189 juli 2004 alain casali rosin cicchetti lotfi lakhal extract semant data cube use cube transvers closur proceed ninth acm sigkdd intern confer knowledg discoveri data mine august 2427 2003 washington dc meil shyu shuch chen min chen chengcui zhang unifi framework imag databas cluster contentbas retriev proceed 2nd acm intern workshop multimedia databas novemb 1313 2004 washington dc usa bradley j rhode taxonom knowledg structur discoveri imagerybas data use neural associ increment learn nail algorithm inform fusion v8 n3 p295315 juli 2007 ben yahia hamrouni e mephu nguifo frequent close itemset base algorithm thorough structur analyt survey acm sigkdd explor newslett v8 n1 p93104 june 2006 xiaodong liu wei wang tianyou chai wanquan liu approach represent logic oper fuzzi concept framework axiomat fuzzi set theori ii inform scienc intern journal v177 n4 p10271045 februari 2007 gerd stumm new shore conceptu knowledg discoveri process intern journal humancomput studi v59 n3 p287325 septemb