distribut schur complement techniqu gener spars linear system paper present precondit techniqu solv gener spars linear system distribut memori environ techniqu util schur complement system deriv precondit matrix number way two precondition consist approxim solut process global system exploit approxim lu factor diagon block schur complement anoth precondition use spars approximateinvers techniqu obtain certain local approxim schur complement comparison report system vari difficulti b introduct success solut mani grandchalleng problem scientif comput depend larg avail adequ larg spars linear system solver context iter solut techniqu becom mandatori replac direct solver due moder comput storag demand typic grandchalleng applic requir use power parallel comput platform well parallel solut algorithm run platform distributedmemori environ iter method rel easi implement compar direct solver often prefer spite unpredict perform certain type problem howev user iter method face number issu aris direct solut method particular easi predict fast linear system solv certain accuraci whether solv certain type iter solver depend algebra properti matrix condit number cluster spectrum good precondition total number step requir converg reduc dramat cost slight increas number oper per step result work support part arpa grant number nist 60nanb2d1272 part nsf grant ccr9618827 part minnesota supercomput institut depart comput scienc engin univers minnesota 200 union street se min neapoli mn 55455 emailsaadcsumnedu z depart comput scienc 320 heller hall 10 univers drive duluth minnesota 558122496 mashadumnedu much effici algorithm gener distribut environ addit benefit precondit reduc parallel overhead therefor decreas total parallel execut time parallel overhead time spent parallel algorithm perform commun task idl due synchron requir algorithm effici construct applic precondit oper small parallel overhead parallel precondition may develop two distinct way extract parallel effici sequenti techniqu design precondition start specif parallel platform two approach advantag disadvantag first approach precondition yield good converg properti sequenti method often low degre parallel lead ineffici parallel implement contrast second approach usual yield precondition enjoy higher degre parallel may inferior converg properti paper address mainli issu develop precondition distribut spars linear system regard system distribut object viewpoint common framework parallel iter solut techniqu 15 14 18 20 10 1 2 8 borrow idea domain decomposit method preval pde literatur key issu develop precondition global linear system exploit distribut data structur recent number method develop exploit schur complement system relat interfac variabl see exampl 12 2 8 particular sever distribut precondition includ parpr packag 8 employ variant schur complement techniqu one differ work 2 approach construct matrix approxim global schur complement instead precondition construct entir local howev also global natur attempt solv global schur complement system approxim iter techniqu paper organ follow section 2 give background regard distribut represent spars linear system section 3 start gener descript class domain decomposit method known schur complement techniqu section also present sever distribut precondition defin via variou approxim schur complement numer experi section section 4 contain comparison precondition solv variou distribut linear system final conclud remark made section 5 distribut spars linear system consid linear system form larg spars nonsymmetr real matrix size n often solv system distribut memori comput graph partition first invok partit adjac graph base result partit data distribut processor pair equationsunknown assign processor thu processor hold set equat row linear system vector compon associ row good distribut data structur crucial develop effect spars iter solver import exampl conveni represent local equat well depend local extern vector compon preprocess phase thu requir determin depend inform need iter phase approach describ follow use psparslib packag see 20 22 14 addit detail figur 1 show physic domain viewpoint spars linear system represent borrow domain decomposit literatur term subdomain often use instead proper term subgraph point node belong subdomain actual pair repres equat associ unknown common distinguish three type unknown 1 interior unknown coupl local equat 2 local interfac unknown coupl nonloc extern local equat 3 extern interfac unknown belong subdomain coupl local equat matrix figur 2 view reorder version equat associ local number equationunknown pair note local equat necessarili correspond contigu equat origin system point extern interfac point intern point figur 1 local view distribut spars matrix figur 2 row matrix assign certain processor split two part local matrix act local vector compon rectangular interfac matrix x act extern vector compon accordingli local equat written follow repres vector local unknown iext extern interfac variabl b local part righthand side vector similarli global matrixvector product ax perform three step first multipli local vector compon x receiv extern interfac vector compon iext processor final multipli receiv data x add result alreadi obtain figur 2 partit spars matrix import featur data structur use separ interfac point interior point processor local point order interfac point list last interior point order local data present sever advantag includ effici interprocessor commun reduc local indirect address matrixvector multipl local order local vector unknown x split two part subvector intern vector compon follow subvector local interfac vector compon righthand side b conform split subvector f g ie block partit accord split local matrix resid processor form local equat 2 written follow n set indic subdomain neighbor subdomain term part product x iext reflect contribut local equat neighbor subdomain j sum contribut result multipli x extern interfac unknown clear result multipl affect local interfac unknown indic zero top part second term lefthand side 4 preprocess phase construct datastructur repres matric x also form addit data structur requir prepar intens commun take place iter phase particular processor need know 1 processor must commun 2 list interfac point 3 breakup list sublist must commun among neighbor processor detail see 20 22 14 3 deriv schur complement techniqu schur complement techniqu refer method iter interfac unknown implicitli use intern unknown intermedi variabl strategi deriv schur complement techniqu describ first schur complement system deriv 31 schur complement system consid equat 2 block form 4 schur complement system deriv elimin variabl u system 4 extract first equat u yield upon substitut second equat local schur complement equat 5 subdomain constitut system equat involv interfac unknown vector reduc system natur block structur relat interfac point subdomainb diagon block system matric dens gener offdiagon block ident involv global system 4 spars system 7 written vector interfac variabl g righthand side vector throughout paper abus notat slightli transpos oper defin rather actual transpos matrix column vector p matrix global schur complement matrix exploit section 33 32 schur complement iter one simplest idea come mind solv schur complement system 7 use block relax method associ block system schur complement system solv interfac variabl avail variabl obtain solv local system known consist choic initi guess blockjacobi sor iter reduc system equival blockjacobi iter resp sor global system see eg 11 19 kth step blockjacobi iter global system take follow local form gamma asterisk denot nonzero block whose actual express unimport worthwhil observ iter interfac unknown satisfi independ relat equival noth jacobi iter schur complement system 7 global viewpoint primari iter global unknown explain vector interfac unknown associ primari iter satisfi iter call schur complement iter matrix g known explicitli easi advanc iter one step arbitrari start vector v mean easi comput gvh v viewpoint taken 13 12 sequenc k acceler krylov subspac algorithm gmre 21 one way look acceler procedur consid solut system righthand side h obtain one step iter 12 comput initi vector 0 ie given initi guess 0 initi residu obtain matrixvector product gamma g obtain one step primari iter comput gy proceed follow 1 perform one step primari iter 2 set w 3 comput present global viewpoint show schur complement techniqu deriv primari fixedpoint iter global unknown among possibl choic primari iter jacobi sor iter well iter deriv somewhat artifici ilu precondit techniqu main disadvantag solv schur complement system solv system need oper matrix accur comput dens matrix explicitli solv system 5 use comput matrixvector product carri three spars matrixvector multipli one accur linear system solv known see 23 larg comput expens accur solv result decreas iter count suffici make schur complement iter competit numer experi confirm 33 induc precondition key idea domain decomposit method develop precondition global system 1 exploit method approxim solv reduc system 7 tech niqu term induc precondition see eg 19 best explain consid reorder version global system 1 intern vector compon label first follow interfac vector compon reorder lead block systemb also rewritten b f u note b block act interior unknown elimin unknown system lead schur complement system 7 induc precondition global system obtain exploit block lu factor consid factor global schur complement schur complement matrix ident coeffici matrix system 7 see eg 19 global system 15 precondit approxim lu factor construct approxim two techniqu type discuss rest section first one exploit relat lu factor schur complement matrix second use approximateinvers techniqu obtain approxim local schur complement precondition present next base global system equat schur unknown system 5 equival form 7 global block lu factor 16 rather approxim version 17 34 approxim schur lu precondition idea outlin previou subsect approxim schur complement avail approxim solv whole matrix global unknown obtain requir approxim exact solv b also possibl think local order act global consid 4 5 readili seen 4 approxim compon interfac unknown avail correspond approxim intern compon u immedi obtain solv matrix b processor practic often simpler solv slightli larger system obtain 2 avail specif local data structur return problem find approxim solut schur unknown conveni 5 rewritten precondit system diagon block note simpli blockjacobi precondit schur complement system system 19 may solv gmreslik acceler requir solv step least three option carri solv 1 comput exactli form lu factor seen shortli represent obtain directli lu factor 2 use approxim lu factor obtain approxim lu factor 3 obtain approxim use approximateinvers techniqu see next sub section factor use ilu techniqu method option 1 2 base follow observ see 19 let form 3 factor u rather use result l equal schur complement associ partit 3 result easili establish transfer matric ub u umatrix lmatrix factor result follow comparison 16 approxim factor avail approxim lu factor obtain canon extract relat part l u matric word ilu factor schur complement trace global ilu factor unknown associ schur complement local schur complement ilu factor obtain manner lead approxim local schur complement instead exact schur complement system 5 equival 19 follow approxim local schur complement system deriv 19 consid processor global system relat equat 20 solv krylov subspac method eg gmre matrixvector oper associ solv involv certain matrix cf equat 17 global precondition 17 defin given local ilu factor factor associ follow algorithm appli processor global approxim schur lu precondition block vector f obtain solut algorithm use iter gmre without restart solv local part schur complement system 20 interior vector compon calcul use equat 18 line 2125 descript algorithm 31 p repres projector map whole block vector subvector vector g associ interfac variabl algorithm 31 approxim schurlu solut step gmre 1 given local righthand side 2 defin hm set 3 arnoldi process 4 0 5 r l u 7 8 exchang interfac vector compon 9 l 11 12 h lj w v l 13 w 14 enddo 15 h j1j kwk 2 v j1 wh j1j 16 enddo 17 18 form approxim solut interfac variabl 19 comput 21 find local unknown 22 exchang interfac vector compon 24 rh rh gamma 25 explan order line 46 comput initi residu gmre iter initi guess zero normal residu obtain initi vector arnoldi basi accord express invers 8 ident express line 5 replac approxim l u compar bottom part righthand side express righthand side 20 seen vector p r obtain line 6 algorithm inde approxim local righthand side schur complement system line 8 correspond matrixvector product precondit schur complement matrix ie comput lefthand side 20 35 schur complement via approxim invers equat 17 describ gener term approxim block lu factor global system 15 particular factor stem approxim schur complement matrix use one sever approximateinvers techniqu describ next given arbitrari matrix approximateinvers precondition consist find approxim q invers solv approxim optim problem 3 min q2 certain set n theta n spars matric minim problem decoupl n minim problem form jth column ident matrix matrix q 2 respect note n column comput independ differ strategi select nonzero structur approximateinvers propos 4 9 9 initi sparsiti pattern taken diagon fillin allow depend improv minim work 4 suggest control sparsiti approxim invers drop certain nonzero entri solut search direct suitabl iter method eg gmre iter method solv system paper approximateinvers techniqu propos 4 5 use consid local matrix block block lu factor similar one given 16 spars approximateinvers techniqu appli approxim b certain matrix done 5 result matrix spars therefor spars approxim approxim construct use ilu factor matrix previou subsect approxim global schur complement obtain approxim solv reduc system 7 ie solv approxim version righthand side also comput approxim system 22 requir approxim local schur complement matrix defin approximateinvers techniqu outlin use approxim schur complement matrix avail induc global precondition matrix defin consid global system 14 also written 15 schur variabl correspond bottom part linear system global precondition given block factor 17 approxim obtain iter solv system 22 thu block forwardbackward solv factor 17 amount follow threestep procedur 1 solv 2 solv iter system 22 obtain 3 comput fy threestep procedur translat follow algorithm execut processor algorithm 32 approximateinvers schur complement solut step gmre 1 given local righthand side 2 solv b u approxim 3 calcul local righthand side 4 use gmre solv distribut system 5 comput approxim 6 comput note step line 2 5 6 requir commun among processor sinc matrixvector oper step perform local vector compon contrast solut global schur system invok line 4 involv global matrixvector multipl interfac exchang matrix consist interfac matric x approxim solut carri sever step gmre forwardbackward solv incomplet l u factor b assum factor avail approxim g line 3 local righthand side system 22 calcul line 5 sever choic approxim possibl solv linear system use gmre line 2 altern exploit matrix approxim b construct equat 21 4 numer experi experi compar perform describ precondition distribut addit schwarz precondit see eg 19 2d ellipt pde problem sever problem matric harwellbo davi collect 7 flexibl variant restart gmre fgmre 16 use solv origin system sinc acceler permit chang precondit oper step use exampl iter process use precondit input system thu possibl use ilutprecondit gmre lfil fillin element recal ilut 17 form incomplet lu factor dual threshold strategi drop fillin element conveni follow abbrevi denot precondition solut techniqu use numer experi distribut approxim block lu factor approxim use matrix construct use approximateinvers techniqu describ 4 sapinv distribut approxim block lu factor approxim use approximateinvers techniqu 4 b gamma1 appli use one matrixvector multipl follow solv slu distribut global system precondit defin via approxim solv l bj approxim addit schwarz ilutprecondit gmresk use precondit submatrix assign processor si pure schur complement iter describ section 32 41 ellipt problem consid ellipt partial differenti equat x x x rectangular region dirichlet boundari condit n x point x direct n point direct mesh map virtual p x theta p grid processor subrectangl n x p x point x direct n p point direct belong processor fact subproblem associ subrectangl gener parallel figur 3 show domain decomposit mesh map onto virtual processor grid comparison time result iter number global 360 theta 360 mesh map virtual squar processor grid increas size given figur 4 figur 4 omit solut time bj precondit 9543 second residu norm reduct 10 gamma6 achiev flexibl gmres10 precondit ilut lf drop toler 10 gamma4 use choic incomplet lu factor five iter figur 3 domain decomposit assign 12 theta 9 mesh 3 theta 3 virtual processor grid gmre rel toler 10 gamma2 use applic bj slu sapinv forwardbackward solv perform line 2 algorithm 32 sinc problem mesh size fix increas number processor subproblem becom smaller overal time decreas precondition base schur complement techniqu less expens addit schwarz precondit especi notic small number processor keep subproblem size fix increas number processor increas overal size problem make harder solv thu increas solut time ideal situat perfectli scalabl algorithm execut time remain constant time result fix local subproblem size 15 theta 15 30 theta 30 50 theta 50 70 theta 70 present figur 5 prematur termin curv si indic nonconverg 300 iter growth solut time number processor increas rather pronounc pure schur complement iter addit schwarz wherea rather moder schur complementbas precondition 42 gener problem tabl describ three test problem harwellbo davi collect column pattern specifi whether given problem structur symmetr matrix three test problem matrix row follow column scale 2norm also partit problem one level overlap data exchang use follow 13 tabl show iter number requir fgmres20 sapinv sapinv slu processor second solid line bj dashdot line sapinv dashstar line slu 100100200300400processor iter iter solid line bj dashdot line sapinv dashstar line slu figur 4 time iter count solv 360 theta 360 discret laplacean problem 3 differ precondition use flexibl gmres10 name n n z pattern disciplin calcul raefsky1 3242 22316 unsymm incompress flow pressur driven pipe sherman3 5005 20033 symm oil reservoir model tabl 1 descript test problem bj till converg differ number processor asterisk indic nonconverg precondit phase approxim solv processor carri gmre reduc residu norm 10 gamma3 five step allow choic ilu factor ilut lfil fillin element shown column lfil use experi lfil correspond also number element matrix column creat approximateinvers techniqu gener hard compar method sinc number fillin element result precondition differ word sapinv sapinv lfil specifi number nonzero block precondit slu lfil total number nonzero precondit therefor number nonzero given approxim known exactli given problem iter count sapinv sapinv suggest clear trend achiev converg fewer iter increas number processor mean high degre parallel precondition imped converg may even enhanc significantli cf row 14 tabl 2 main explan fact approxim local global schur complement matric 04081216processor second pe solid line bj dashdot line sapinv dashstar line slu dashcircl line si processor second pe dashdot line sapinv dashstar line slu dashcircl line si solid line bj 10051525processor second 50 x 50 mesh pe solid line bj dashdot line sapinv dashstar line slu dashcircl line si 10010305070processor second pe solid line bj dashdot line sapinv dashstar line slu dashcircl line si figur 5 solut time laplacean problem variou local subproblem size use differ precondition bj sapinv slu schur complement iter si name precon lfil 4 8 tabl 2 number fgmres20 iter raefsky1 problem name precon lfil 28 43 tabl 3 number fgmres20 iter af23560 problem name precon lfil tabl 4 number fgmres20 iter sherman3 problem global precondition deriv actual improv processor number becom larger sinc matric becom smaller furthermor sapinv sapinv slu suffer inform loss happen bj sinc bj disregard local matrix entri correspond extern interfac vector compon note effect bj degrad increas number processor cf subsect 41 comparison sapinv sapinv raefsky1 sherman3 confirm conclus 5 use approxim b algorithm 32 effici appli b directli also comput expens gener distribut matric especi true sinc iter solv b may inaccur experi spars approxim appear quit accur usual reduc frobeniu norm 10 gamma2 could attribut small dimens matric use approxim reduct frobeniu norm attain 10 iter mr method smaller number iter also test effect overal solut process amount averag one extra iter fgmres20 problem consid conclus paper sever precondit techniqu distribut linear system deriv approxim solut relat schur complement system precondition built upon alreadi avail distribut data structur origin matrix approxim global schur complement never form explicitli thu commun overheard incur construct precondition make preprocess phase simpl highli parallel precondit oper util commun structur precomput origin matrix precondit global matrix defin term block lu factor involv solv global schur complement system precondit step system turn solv approxim step gmre exploit approxim local schur complement precondit two differ techniqu incomplet lu factor approximateinvers use approxim local schur complement distribut precondition construct appli manner allow much flexibl specifi approxim local schur complement local system solv defin global induc blocklu precondition origin matrix increas number processor krylov subspac method fgmre 16 precondit propos techniqu exhibit moder growth execut time scale problem size experi show propos distribut precondition base schur complement techniqu superior commonli use addit schwarz precondit addit advantag come addit cost codecomplex memori usag sinc data structur addit schwarz precondition use acknowledg comput resourc work provid minnesota supercomput institut virginia tech comput center r petsc 20 user manual parallel algebra nonoverlap domain decomposit method flow problem iter solut larg spars linear system aris certain multidimension approxim problem approxim invers precondition gener spars matric approxim invers techniqu blockpartit matric approxim invers precondit spars linear system spars matrix test problem parpr parallel precondition packag new approach parallel precondit spars approxim invers aztec user guid comparison domain decomposit techniqu ellipt partial differ ential equat parallel implement parallel solut gener spars linear system iter solut gener spars linear system cluster workstat distribut ilu0 sor precondition unstructur spars linear system krylov subspac method distribut comput environ flexibl innerout precondit gmre algorithm ilut dual threshold incomplet ilu factor krylov subspac method distribut comput environ iter method spars linear system psparslib portabl librari distribut memori spars iter solver gmre gener minim residu algorithm solv nonsymmetr linear system design iter solut modul parallel spars matrix librari p sparslib domain decomposit parallel multilevel method ellipt partial differenti equat tr ctr basermann u jaekel nordhausen k hachiya parallel iter solver spars linear system circuit simul futur gener comput system v21 n8 p12751284 octob 2005 chi shen jun zhang fulli parallel block independ set algorithm distribut spars matric parallel comput v29 n1112 p16851699 novemberdecemb sosonkina saad x cai use parallel algebra recurs multilevel solver modern physic applic futur gener comput system v20 n3 p489500 april 2004 chi shen jun zhang parallel two level block ilu precondit techniqu solv larg spars linear system parallel comput v28 n10 p14511475 octob 2002 chi shen jun zhang kai wang distribut block independ set algorithm parallel multilevel ilu precondition journal parallel distribut comput v65 n3 p331346 march 2005