tradeoff powereffici issu queue design major consum microprocessor power issu queue sever microprocessor includ alpha 21264 power4tm use compact latchbas issu queue design advantag simplic design verif disadvantag structur howev high power dissipationin paper explor differ issu queue power optim techniqu vari perform power characterist much deviat baselin implement develop compar techniqu build increment baselin design well achiev higher power save signific redesign effort quantifi extra benefit higher design cost techniqu provid straightforward counterpart b introduct mani complex tradeoff must made achiev goal powereffici yet high perform design first amount perform must trade lower power second consider receiv less attent amount redesign verif effort must put achiev given amount power save timetomarket constraint often dictat straightforward modif exist design take preced radic approach requir signific redesign verif effort latter must permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee islped02 august 1214 2002 monterey california usa clear demonstr power save minim neg consequ justifi extra effort one microprocessor structur receiv consider attent issu queue issu queue hold decod renam instruct issu outoford appropri function unit sever superscalar processor alpha 21264 11 power4 10 implement latchbas issu queue entri consist seri latch 1 4 queue compact output entri feedforward next entri enabl fill hole creat instruct issu new instruct alway ad tail posit queue manner queue maintain oldest youngest program order within queue simplifi implement oldestfirst issu prioriti scheme addit import advantag implement highli modular use scannabl latch simplifi issu queue design verif howev high price approach power consump tion instanc integ queue alpha 21264 highest power consum chip 11 similarli issu queue one highest powerdens region within power4class processor core 1 reason sever techniqu reduc issu queue power propos 2 3 5 howev prior effort exclus focus approach requir consider redesign verif effort well design risk thu far lack quantit comparison rang issu queue power optim techniqu vari design effortrisk addit power save perform cost analysi result sever possibl issu queue design choic appropri depend redesign verif effort design team afford put achiev lowerpow design 2 noncompact latchbas issu queue figur 1 illustr gener principl latchbas issu queue design bit entri consist latch multiplex well compar shown figur sourc operand id entri feedsforward next queue entri multiplex use either hold current latch content load latch content next entri design shown figur 1 load dispatch instruct uppermost unus queue entri hole creat instruct issu fill via compact oper entri shift downward dispatch entri tail queue compact queue issu oldest youngest program order maintain queue time oldest instruct lie bottom queue shown figur 1 thu simpl positionbas select mechan like describ 9 prioriti move lower upper entri use implement oldestfirst select polici issu prioriti instruct age although compact oper may necessari simpler select mechan may major sourc issu queue power consumpt latchbas design time instruct issu entri shift fill hole result latch clock lower entri issu prioriti upper entri instruct often issu lower posit result larg number shift therefor larg amount power dissip elimin powerhungri compact oper make issu queue noncompact 7 noncompact queue hole result instruct issu particular entri immedi fill rather hole remain new entri dispatch queue point hole fill prioriti order bottom top howev noncompact queue oldest youngest prioriti order instruct lost thu use simpl positionbas select mechan like describ 9 give prioriti older instruct compact design hold 21 mux entri n1 detail queue entri queue compact figur 1 latchbas issu queue design compact solv problem lost instruct order maintain much powereffici advantag noncompact queue reorder buffer rob number sequenc number typic tag dispatch instruct use identifi oldest youngest order howev problem aris scheme due circular natur rob may implement ram head tail pointer exampl assum simplic 8entri rob oldest instruct lie locat 111 youngest 000 instruct commit head pointer rob decrement point next en tri similarli tail pointer decrement instruct dispatch implement oldest instruct may longer lie locat 111 work exampl locat fact tail pointer may wrap around back entri 111 newer entri nearest tail may occupi highernumb rob entri older entri 6 oc cur oldestfirst select scheme longer work properli problem solv ad extra highord sequenc number bit call sort bit kept issu queue instruct dispatch alloc sequenc number consist rob entri number append sort bit 0 sequenc number store entri issu queue whenev rob tail pointer wrap around entri 111 exampl sort bit flash set 1 issu queue newli dispatch instruct howev includ one assign rob entri 111 continu receiv sort bit 0 sequenc number step summar figur 2 guarante newli dispatch instruct lower sequenc number prior older instruct alreadi resid queue sort bit adjust place older instruct properli select readi instruct follow signific bit sequenc number readi instruct ore togeth result 1 readi instruct whose signific bit 0 remov consider next step second signific bit sequenc number readi instruct still consider ore togeth result 1 readi instruct still consider whose second signific bit 0 remov consider nth step step 2 except least signific bit sequenc number use end step readi instruct remov consider except oldest howev orbas arbitr mechan requir final linear chain highest order lowest order bit significantli increas delay select logic compar select logic describ palacharla 9 4 bit entri queue note processor 128 instruct rob 128 entri flight full sequenc number consist 7 bit sort bit lack full age order 4bit sequenc number result cpi degrad shown section 5 although improv cpi degrad incur age order positionbas select noncompact tail head pointer pointer start point 1s rob sort bit00sort bit updat criteria tail pointer hit start point sort bit queue flash set 1 figur 2 mechan updat sort bit issu queue 3 camrambas issu queue section describ issu queue powersav optim requir redesign baselin latchbas queue camram structur sourc operand number place cam structur remain instruct inform place ram structur number entri correspond size issu queue camram structur arguabl complex term design verif time support compact howev lower power dissip camram logic rel random logic camrambas issu queue approach potenti reduc averag power dissip queue potenti consum less power latchbas lution camrambas issu queue still offer opportun power reduct cam ram structur requir precharg discharg intern high capacit line node everi oper cam need perform tag match oper everi cycl involv drive clear high capacit taglin also precharg discharg high capacit matchlin node everi cycl similarli ram also need charg discharg bitlin everi read oper follow subsect discuss approach reduc power camrambas issu queue 31 dynam adapt issu queue finegrain clock gate suitabl latchbas issu queue share resourc bitlin wordlin taglin precharg logic sens amp etc camrambas design make clock gate less effect latchbas design howev camram base design amen dynam adapt issu queue match applic requir describ 2 size issu queue need maintain close peak perform vari applic applic even among differ phase singl applic thu issu queue adapt differ program phase potenti significantli improv power effici littl impact cpi perform paper implement basic approach propos 2 scheme issu queue broken multientri chunk disabl onthefli runtim hardwarebas monitor measur issu queue activ cycl window period count number valid entri queue appropri control signal disabl enabl queue chunk 2 32 bank issu queue bank common practic rambas structur eg cach reduc delay ram power dissip cambas structur also bank 8 albeit potenti impact cpi perform loword n address bit normal use comparison instead use select one 2 subarray remain bit compar appropri bit cam subarray entri similarli n bit use pick subarray new entri place thu one n subarray activ cam access cpi degrad come nonuniform usag differ subarray caus subarray becom full other ineffici usag entri compar singl cam structur result either entri needlessli replac new entri abl insert even avail space subarray result cpi degrad rel singl cam structur issu queue cam structur present addit complic two field sourc operand id match oper perform prevent one subarray disabl fourbank design approach ideal enabl one subarray access propos novel bank design exploit fact frequent least one two sourc operand readi instruct dispatch figur 3 show frequent one neither two sourc operand readi instruct dispatch integ queue simul six spec2000 integ program use methodolog describ section 4 averag 13 dispatch integ instruct neither operand readi remain 87 instruct least one operand avail therefor requir one match oper instruct wake bank issu queue organ exploit properti shown figur 4 organ use four bank hold two sourc operand id one full sixbit sourc operand field assum 64 physic regist held instruct info ram section entri consist four loword regist id bit held cam part entri note 2 bit alreadi use bank selec tion thu latter compar loword four destin regist id bit broadcast thu bank issu queue design reduc power dissip elimin bzip gcc mcf parser vortex vpr average10305070percentag instruct benchmark one op readi readi none readi none readi diffbank figur 3 percentag instruct variou number operand avail dispatch also shown percentag case neither sourc operand avail sourc operand id associ differ bank one two sourc operand id cam note match logic guarante activ one cycl ever readi logic select logic ram part may activ one cycl multipl instruct say n may becom readi due result distribut case readi logic select logic ram part may activ n cycl select logic global sens instruct may simultan readi multipl bank shown top figur 4 exampl add instruct three case sourc operand readi dispatch easi handl instruct steer bank correspond id number unavail sourc operand case operand instruct avail instruct steer bank correspond first operand instruct select bank wake match lower four bit destin id sourc id correspond unavail operand fourth case neither operand avail dispatch treat special case instruct neither sourc operand avail place conflict queue conflict queue simpli convent issu queue perform comparison sourc operand small percentag instruct neither sourc operand avail dispatch conflict queue need contain entri destin id complet instruct compar entri one bank well conflict queue conflict queue small energi dissip pale comparison save afford bank assum 64 physic regist instruct depend regist number rang bank3 r1r16 goe bank1 r17r32 addr1 conflict queue predecod bank1 bank2 multiplex add r1r2r19 readi readi readi readi readi readi readi readi easi handl special case add instruct go separ queue conflict queue gener broadcast done goe bank1 r2 specifi broadcast bank1 specif broadcast done figur 4 bank issu queue organ placement instruct use conflict queue case neither sourc operand avail dispatch 4 methodolog design altern implement circuit level power estim evalu use ibm asx circuit simul tool next gener process paramet circuit also optim much reason power speed baselin latchbas issu queue circuit design borrow exist power4 librari appropri microarchitectur simul use simplescalar 30 simul aggress 8way superscalar outoford pro cessor simul modifi model separ integ float point queue baselin also includ regist renam physic regist properli model bank issu queue chose workload six spec2000 integ benchmark run 400 million instruct issu queue event count captur simul use circuitlevel data estim power dissip focu integ issu queue 32 entri paper although techniqu larg applic queue structur eg float point queue dispatch queue reorder buffer simul paramet chose combin branch predictor bimod 2level fetch decod width 16 instruct 8way machin reorder buffer size 128 entri use 64kb 2way l1 2mb 4way l2 cach four integ alu multipli four memori port 5 result baselin issu queue 1 entri need clock cycl even queue idl due need recircul data multiplex hold data place altern clockgat design main clock well latch clock gate control signal whenev entri valid bit set load first examin benefit clock gate issu queue larg depend fraction entri clock gate applic suit figur 5 show averag number entri 32entri integ queue clock gate well overal power save achiev vortex gcc averag 50 queue entri clock gate wherea mcf parser vpr much clock gate opportun averag 34 power save achiev clock gate issu queue without loss cpi perform tradeoff compact noncompact issu queue complex degrad cpi perform potenti occur noncompact due lack oldest first select scheme modifi simplescalar model hole creat noncompact issu queue fill hole newli dispatch instruct select mechan strictli base locat within queue rather oldestfirst mechan use default scheme older instruct may remain queue long time period therebi delay complet import depend chain leftmost bar figur 6 show cpi degrad six spec2000 integ benchmark degrad signific around 8 mcf parser 55 overal rightmost bar show cpi degrad previous describ oldestfirst select scheme implement use four bit sequenc number includ sort bit averag partial oldest first select scheme reduc cpi degrad 55 23 1 baselin describ paper repres real power4 issu queue mechan reduc power describ paper present real power4 design bzip gcc mcf parser vortex vpr average51525 queue entri benchmark power save clock gate clock gate figur 5 number queue entri gate power save rel baselin latchbas issu queue clock gate bzip gcc mcf parser vortex vpr average13579 cpi degrad benchmark noncomp partold figur degrad incur via noncompact positionbas select noncompact partial oldestfirst select power save noncompact latchbas issu queue rel baselin design shown figur 7 noncompact queue power includ power overhead due oldestfirst select logic overhead well write arbitr logic overhead provid capabl write hole newli dispatch instruct even addit overhead elimin frequent highpow compact event consider impact across benchmark achiev power save 2545 36 overal figur also show rel power save noncompact camrambas issu queue noncompact issu queue implement clock gate redesign issu queue camram structur achiev consider power save noncompact latchbas design howev combin noncompact latchbas design clock gate achiev slightli better overal save note slightli better power save mcf parser vpr camram base design due lack opportun clock gate benchmark choic one option depend number factor includ expertis design team term clock gate versu camram implement verif test camram design degre addit clock skew switch current variat clock gate design toler rest section explor camrambas issu queue design augment dynam adapt bank reduc power dissip bzip gcc mcf parser vortex vpr average10305070pow save benchmark latchbas compact base latchbas compactionclkg figur 7 power save rel baselin noncompact latchbas noncompact camrambas noncompact latchbas clock gate propos partial oldestfirst select scheme assum 32entri adapt issu queue configur 32 24 16 8 entri applic execut figur 8 show power save perform degrad adapt scheme differ cycl window valu 2 note neg power save mcf use larger cycl window 8k 16k occur coars level dynam adapt 32entri configur alway select incur power penalti due overhead dynam adapt circuitri use smaller cycl window allow dynam adapt algorithm captur finergrain phase chang behavior mcf result smaller configur select benchmark use smaller cycl window result higher power save lower perform degrad larger cycl window use cycl window 4k 34 overal issu queue power save achiev 3 cpi degrad compar camrambas design bzip gcc mcf parser vortex vpr averag 202060power save benchmark bzip gcc mcf parser vortex vpr average2610 cpi degrad benchmark figur 8 cpi degrad power save adapt issu queue rel camrambas issu queue differ cycl window valu explor 2 4 8way bank issu queue use conflict queue approach describ section 32 top figur 9 show bank effect rel power cam structur increas quadrat number entri bank divid queue smaller structur one select cycl bottom part figur show power save achiev differ issu queue size 2 4 8way bank queue one bank enabl clear tradeoff reduct number activ entri thu bitlin length higher degre bank extra peripher circuit overhead incur bank small queue size 16 entri power save greatest two bank due rel larg cost duplic peripher circuitri larger 64 entri queue save bitlin power afford 8 bank outweigh peripher logic power overhead rel power entri array save iq entri bank cam 1 bank activ 2bank 4bank 8 bank figur 9 rel power issu queue cam array function number entri top power save degre bank issu queue size singl enabl bank bottom mention section 32 bank incur cpi degrad due underutil queue entri result static alloc dispatch instruct bank partial remedi increas number entri bank graph top figur 10 show cpi degrad incur rel baselin 4way bank issu queue 4 entri conflict queue variou number entri per bank cpi degrad reduc 25 10 entri per bank slight increas 8 entri nomin use middl graph show perform degrad 4way bank queue entri per bank differ conflict queue size small number entri 45 suffici reduc cpi degrad neglig level final bottom graph show percentag time variou number bank activ 8way issu machin 4bank issu queue 10 entri per bank 4 entri conflict queue well power save achiev benchmark note result account power overhead extra entri conflict queue assum baselin bank design entir queue disabl activ zero bank activ bank approach overal 31 energi save achiev 25 impact cpi perform compar favor 34 power save 3 cpi degrad adapt approach yet bank scheme arguabl straightforward implement 51 comparison differ altern clock gate issu queue signific impact power dissip cpi degrad despit implement verif challeng wellknown establish approach therefor repres straightforward albeit effect solut issu queue power problem bzip gcc mcf parser vortex vpr average26cpi degrad benchmark 8ent 9ent 10ent 11ent bzip gcc mcf parser vortex vpr average5cpi degrad benchmark bzip gcc mcf parser vortex vpr average50act bank benchmark power save 3053150bankact 1bankact 2bankact 3bankact 4bankact figur 10 32entri fourway bank issu queue result rel 32entri camrambas issu queue cpi degrad differ number entri per bank top 4 entri conflict queue cpi degrad differ size conflict queue middl 10 entri per bank percentag differ number activ bank power save bottom 4 entri conflict queue 10 entri per bank side make queue noncompact afford even greater power save albeit cpi perform cost due elimin oldestfirst select problem larg remedi sequencenumb sort bit scheme propos paper delay cost neglig power impact rel power save noncompact make noncompact scheme attract altern baselin compact design combin noncompact clock gate provid slightli better issu queue power save camrambas design two altern function equival quit differ term number implement verif cost factor may favor one design choos camrambas implement adapt camrambas issu queue deliv addit 26 power save beyond noncompact clock gate ever cost slight perform degrad addit signific design verif effort involv bank approach conflict queue repres attract altern adapt design power save perform degrad rival adapt approach yet design would consid straightforward design final bank adapt issu queue techniqu orthogon approach combin afford even greater power sav ing due size issu queue 32 entri combin techniqu would profit howev larger 128 entri queue could divid four 32 entri bank would use adapt approach describ paper base experi result paper expect combin would produc much greater power save techniqu investig studi 6 conclus paper present rang issu queue power optim techniqu differ effect well design verif effort part studi propos sequenc mechan noncompact issu queue allow straightforward implement oldestfirst se lection also devis bank issu queue approach allow one bank disabl littl addit power overhead detail quantit comparison tech niqu determin combin noncompact scheme clock gate achiev roughli power save camrambas issu queue also conclud adapt bank camrambas issu queue approach achiev signific enough power save latchbas approach potenti justifi greater design verif effort 7 acknowledg research support part darpaito afrl contract f2960100k0182 nsf grant ccr9701915 ccr9811929 ibm partnership award 8 r adapt issu queue reduc power highperform issu logic 600mhz outoford execut microprocessor data process system method use uniqu identifi maintain age relationship execut instruct 18ghz instruct window buffer design highspe lowpow cmo fulli parallel contentaddress memori macro power4 system microarchitectur alpha processor histori power issu look futur tr complexityeffect superscalar processor energyeffect issu logic energi adapt issu queue reduc power high perform ctr rajesh vivekanandham bharadwaj amrutur r govindarajan scalabl low power issu queue larg instruct window processor proceed 20th annual intern confer supercomput june 28juli 01 2006 cairn queensland australia yingmin li dharmesh parikh yan zhang karthik sankaranarayanan mircea stan kevin skadron statepreserv vs nonstatepreserv leakag control cach proceed confer design autom test europ p10022 februari 1620 2004 simha sethumadhavan franziska roesner joel emer doug burger stephen w keckler latebind enabl unord loadstor queue acm sigarch comput architectur news v35 n2 may 2007