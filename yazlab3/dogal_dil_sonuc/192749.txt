highperform microarchitectur hardwareprogramm function unit paper explor novel way incorpor hardwareprogramm resourc processor microarchitectur improv perform generalpurpos applic coupl compiletim analysi routin hardwar synthesi tool automat configur given set hardwareprogramm function unit pfu thu augment base instruct set architectur better meet instruct set need applic refer new class generalpurpos comput programm instruct set comput prisc although similar concept prisc approach differ dynam programm microcod prisc defin entirelynew primit datapath oper paper concentr microarchitectur design simplest form prisca risc microprocessor singl pfu evalu combin function briefli discuss oper system program languag compil techniqu need success build prisc present perform result proofofconcept studi inclus singl 32bitwid pfu whose hardwar cost less 1 kilobyt sram studi show 22 improv processor perform specint92 benchmark b introduct number studi shown use hardwarepro grammabl logic fpga improv applic perform tailor hardwar path match particular characterist individu applic 45617 overal architectur studi work well specialpurpos domain logic simul larg number multipl effect use hardwareprogramm resourc generalpurpos environ must develop new approach costeffect automat applic vast major applic architectur approach achiev goal call programm instruct set comput prisc cost effec tive implement prisc top exist highperform processor microarchitectur paper use risc architectur base though prisc techniqu equal applic cisc architectur prisc augment convent set risc instruct applicationspecif instruct implement hardwareprogramm function unit pfu pfu care ad microarchitectur maintain benefit highperform risc techniqu eg fix instruct format minim impact processor cycl time gener applicationspecif pfu instruct autom fashion develop compil routin analyz hardwar complex individu instruct use inform compil interact sophist logic synthesi program select sequenc instruct execut faster implement pfu hardwar sinc pfu instruct gener process driven specif comput found applic prisc approach avoid semant gap problem cisc architectur 14 furthermor complex approach complet hidden userprogramm gener comput model pfu multicycl sequenti state machin iter hardwar solut squareroot transcendent function evalu good exampl class pfu gener model howev introduc synchron complex pfu risc function unit paper discuss simpler model implement combin function two input one output synthesi routin constrain complex combin function delay equal delay alu alreadi processor datapath two restrict pfu use synchron mechan risc function unit refer first implement prisc architectur prisc1 origin meant proofofconcept vehicl would allow us develop basic prisc compil synthesi environ surpris prisc1 microarchitectur exhibit notic perform benefit computeraid design cad applic specint92 benchmark suit applic well even though pfu significantli slower highlycustom risc function unit automat find opportun use pfu typic custom function unit adequ prisc environ make mip 1 rule work per applic basi 18 next section summar work relat use programm logic processor design automat gener instruct set section 3 describ microarchitectur prisc1 section 4 overview prisc compil environ hardwar extract techniqu section 5 discuss perform model environ result obtain proofofconcept experi final section 6 present conclus describ futur work relat work highlevel synthesi 10 autom instruct set gener 131516 activ area research cad commun although recent work area relev work group tri solv slightli differ problem unlik work highlevel synthesi typic attempt build applicationspecif processor automat work add programm logic generalpurpos processor reli compil runtim system dynam reconfigur programm logic applic unlik work autom instruct set design systemat analyz set benchmark program defin entirelynew instruct set given microar chitectur work simpli extend exist instruct set explor microarchitectur effect adapt asyet unseen applic overal key aspect work produc complet system compilergener inform use dynam reconfigur rel small amount hardwareprogramm logic perappl basi organ hardwareprogramm logic augment highperform techniqu found today microarchitectur interact cleanli function today oper system mani way work similar earlier work writabl microcod store 1202429each techniqu dynam augment base instruct set new applicationspecif instruct improv applic perform writabl microcod approach creat new instruct group togeth primit datapath oper perform improv reduc instruct fetch requir use faster data storag increas overlap oper howev holmer 16 point benefit alreadi obtain use pipe line multipl issu larg regist file today architec ture work also creat new instruct group togeth individu oper base instruct set sinc approach optim hardwar level lower exist function unit obtain perform benefit beyond captur pipelin multipl issu techniqu effect pipelin oper granular smaller exist cycl time addit work address issu involv dynam extend instructionset architectur microprocessor use multitask environ previou work use hardwareprogramm logic generalpurpos comput spars ise sanchez 17 propos vliw microarchitectur consist sole pfu processor includ custom vlsi function unit typic integ floatingpoint oper programm logic significantli slower custom logic prototyp maximum clock frequenc 5 mhz 5 mhz clock rate significantli clock frequenc today risc microprocessor typic 60 mhz addit ise sanchez 17 offer techniqu compil program generalpurpos languag c total programm environ ment shortcom make type approach inappropri generalpurpos microprocessor athana silverman 5 propos instructionset augment process generalpurpos comput goal similar like approach describ compil process coupl logic synthesi step compil process convert entir c function programm hardwar granular much larger approach consid group instruct candid hardwar synthesi expect gener approach would find greater opportun hardwar synthesi even athana silverman 5 report impress speedup number specif c routin run prism1 prototyp overal number shortcom initi work work attempt come particular prototyp compil requir user interact prototyp compil fulli autom report perform result hardwareoptim routin report result entir applic add programm logic relativelyslow microprocessor 10mhz experi fast cycl time 200 mhz contrast spars work generalpurpos applic programm logic great deal research programmablelog solut solv domainspecif prob lem work pioneer pam group pari 6 system contain xilinx 31 programm board bu generalpurpos workstat approach partit comput particular problem xilinx board workstat processor pam system shown good result ten applic 7 includ long integ multipl 25 rsa decrypt 26 splash group brown univers 4 mimick pam model success solv problem text search dna comparison edg detect graphic applic unfortu nate boardbas method incur high overhead commun host cpu programm logic board signific overhead limit applic approach class algorithm combin high comput complex low commun overhead offer rel small amount hardwareprogramma ble resourcestyp 10time less found exist boardlevel design figur 1 show attach hardwar programm resourc directli cpu datapath form pfu gener implement particular function pfu significantli slower 1 implement function highlycustom function unit pfu ad parallel exist function unit augment replac replic exist datapath function even though pfu offer hardwareprogramm resourc resourc resid insid cpu chip design decis minim commun cost bandwidth latenc load access pfu prisc1 pfu data commun handl like function unit pfu two input port accept operand singl output port drive result hope effici commun mechan hardwareprogramm logic use 1 exampl lewi 19 report factor three perform differ programm circuit maskprogram gate array circuit figur 1 prisc1 datapath regist file sourc operand buse operand bu pdata paddr bypass logic larger class applic pfu also contain two program port oper describ section 32 next two subsect discuss design pfu extens instruct set architectur need program use pfu section 4 describ overal softwar architectur prisc1 31 pfu design design pfu interest nontrivi hardwar design problem prisc1 primari pfu design constraint build function unit delay fit within evalu phase base cpu pipelin within constraint must choos design maxim number interest function implement pfu function interest ing evalu faster pfu base cpu instruct figur 2 illustr exampl implement pfu combin function ie prisc1 pfu compris altern layer two basic compon interconnect matric logic evalu unit possibl interconnect point interconnect matrix implement cmo nchannel transistor control memori cell 2 appropri set valu memori cell connect disconnect two line logic evalu unit implement hardwar truth tabl call lookup tabl lut ninput 1output lut consist multiplex connect 2 n memori cell one memori cell per truth tabl entri memori cell pfu address fact pfu memori cell view larg sram load use pfu paddr pdata port program pfu implement particular function consist load appropri valu interconnect matrix memori cell lut memori cell interconnect matrix logic evalu unit make prodigi use memori cell memori cell domin layout cost pfu found symmetr pfu 3 altern layer interconnect lut requir 30528 transistor 32bit datapath 61056 transistor 64 bit datapath memori cell compris 90 tran 2 use sramfus technolog programm logic basic fuse primit pfu sinc type fuse easi reprogram sistor 22 predomin memori cell layout cost pfu track layout cost sram comparison 30528transistor pfu take consider less silicon area 1 kilobyt sram requir approxim 50000 transi tor current microprocessor easili includ 16 kilobyt sram cach 12 mani translat lookasid buffer tlb larger pfu mention earlier constrain latenc prisc1 pfu latenc pfu execut fit within cycl time today highspe microprocessor straightforward determin worstcas delay pfu design figur 2 thu limit number logic level pfu easili bound delay assum today deepli pipelin processor toler approxim 1520 level 2input logic gate per clock cycl 3layer pfu fit comfort within 200 mhz cycl time 22 inclus pfu within datapath place extra capacit load operand buse increas size multiplex feed pipelin latchregist end pipelin evalu phase delay evalu phase defin cycl time inclus pfu increas cycl time slightli design cycl time defin cach access time branch delay probabl add pfu without affect cpu cycl time 32 instruct set extens program oper pfu defin singl new user instruc tion execut pfu expfu instruct figur 3 present format instruct mip 18 notat 32bit expfu instruct evalu boolean function two input one output compilationsynthesi system assign logicalpfu number boolean function extract applic lpnum field expfu instruct specifi particular extract function execut 11 bit lpnum field allow maximum 2048 differ pfu program configur per applic 3 explain section 4 program inform logicalpfu function part data segment applic object file use logic pfu number index data segment find appropri program inform cours program pfu everi time use latenc pfu oper would much greater expect valu singl cycl thu associ 11bit regi ter pnum regist pfu pnum regist contain logicalpfu function current program physic pfu lpnum instruct match valu pnum regist expfu instruct execut normal singl cycl mismatch howev except rais except handler load pfu correct program 3 current compil system typic extract fewer 200 pfu function per applic figur 2 exampl symmetr layer pfu symmetr pfu implement amount hardwar bit posit input operand buse output result bu figur 3 format 32bit execut pfu instruct rs rt field specifi sourc operand regist rd field specifi destin regist lpnum number indic request logic pfu function expfu rs rt rd lpnum inform softwar sophist enough determin benefici insert expfu instruct eg usual bad idea insert two expfu instruct within singl loop hardwar contain singl pfu resourc beauti approach lie fact pfu add extra process state would need save context switch reserv lpnum zero repres unprogram pfu hardwar 4 clear pnum regist except system call guarante forc reprogram pfu next use thu similar handl tlb virtual cach without process id tag cost context switch includ penalti pfu reprogram context switch latenc expfu except handler depend densiti program memori hardwar resourc alloc pfu program practic pfu program memori spars popul typic less 15 bit assert scheme reli hardwar reset mechan deassert pfu memori bit program assert memori locat would significantli reduc overal latenc program pfu even use optim still rang program option wide differ hardwar cycl count cost simpl solut pfu program might use implementationspecif loadstor instruct privileg routin eg alpha pal routin 11 sequenti load pfu program memori higher perform solut might reli dedic program hardwar combin high bandwidth path memori exampl need program 20 pfu memori bit expfu except handler latenc pal approach could high 600 cycl highperform solut could bring latenc 100 cycl compil techniqu despit fact pfu optim particular boolean function pfu improv overal applic perform evalu sever boolean function low hardwar complex singl cycl function includ instruct base instruct set provid signific perform gain across wide varieti applic section 41 briefli present structur prisc1 compil hardwar synthesi system extract applicationspecif function creat expfu instruct section 42 describ key analysi step system keep compil time reason even though aggress search group instruct implement pfu section 43 present current routin extract expfu instruct section 44 discuss addit techniqu improv system effect 41 softwar architectur figur 4 show overal structur prisc1 compil sy tem left side figur similar highlevel languag compil system applic hll pars opti mize translat target machin instruct instruct assembl schedul produc binari execut compil environ use profil inform perform analysi tool pixi 27 improv result optim instruct schedul pass unlik convent compil howev prisc1 compil insert step code gener call hardwar extract 4 altern oper system could select clear bit system call use pfu resourc identifi set sequenti instruct could potenti implement pfu instruct identifi set map boolean oper entir group boolean oper given hardwar synthesi packag logic synthesi routin take input combin function output netlist lut step logic minim algorithm reduc number lut interconnect resourc use input function final placement rout routin run determin lut netlist fit resourc offer physic pfu result placeandrout step fed back hardwar extract routin compil automat reduc input function requir exceed physic pfu resourc 5 produc appropri hardwar softwar imag imag link togeth straightforward manner hardwar imag pfu program inform simpli occupi part data segment result aout razdan 22 describ scheme maintain binari compat across famili prisc machin 5 detail discuss algorithm use logic synthesi lut minim lut placementandrout beyond scope paper briefli augment standard algorithm 8930 task pfu synthesi gener standard algorithm worstcas perform behavior exponenti sinc extract function combin quit small exist algo rithm augment simplif quickli synthes input function figur 4 major pass prisc1 compil system hardwar extract routin send sequenc instruct hardwar synthesi system gener correspond pfu program imag synthesi system also indic extract routin whether result imag larger physic pfu frontend process localglob optim applic code hll perform analysi inform hardwar extract hardwar synthesi system pfu model instruct schedul instruct sequenc softwar imag linker aout hardwar imag code gener instruct machin hardwar extract use profil inform determin instruct execut often enough justifi expens program pfu actual routin requir profil inform correct oper without profil inform aggress compiletim optim hardwar extract routin simpli conserv select optim 42 functionwidth analysi even modif hardwar synthesi routin still rel expens check instruct sequenc fit physic pfu resourc consequ develop analysi step call functionwidth analysi quickli separ instruct two class may benefit pfu convers definit analysi step base observ pfu less effici custom function unit ie pfu unabl evalu dens boolean function fast custom function unit sinc densiti boolean function relat number liter input variabl function quickli elimin instruct whose boolean function requir larg number input liter exampl bitwis requir two input liter per output bit thu ideal candid implement pfu similarli bytewid add requir 16 input liter mostsig nific output bit thu anoth excel candid wordwid 32bitwid add hand good candid implement pfu even though bytewid add fullword add softwar cost vastli differ hardwar cost routin functionwidth analysi perform iter algorithm similar use dataflow calcul 2 algorithm use ternari algebra goe follow output variabl unmark instruct initi x everi bit posit combin forward backward travers made control flow graph reduc number bit forward travers evalu instruct check see evalu chang output bit vector exampl unsign byte load zero lower 8 bit result backward travers indic unnecessari bit calcul exampl variabl store memori use byte store instruct variabl use elsewher instruct gener store input need gener lowest 8 bit informa tion algorithm end bit chang iter given bit valu variabl applic heurist calcul hardwar complex individu instruct mark everi oper easili implement pfu pfulog candid risc instruct set typic memori oper floatingpoint oper wide add multipli divid variablelength shift mark pfulog 43 hardwar extract compil mark potenti pfulog instruct applic readi select sequenc instruct convers expfu instruct though consid mani differ way select instruct sequenc current hardwar extract routin follow simpl bottomup greedi approach basic approach start pfu logic instruct walk backward flow control control flow graph far possibl backward walk termin next instruct pfulog instruct inclus next instruct would produc function requir two sourc operand one result correspond boolean function maxim 6 instruct sequenc fit within pfu resourc extract routin simpli prune instruct time top begin instruct sequenc first exampl oper extract routin figur 5 illustr two sampl code sequenc extract automat espresso benchmark 28 exampl simpli sequenc datadepend pfulog instruct pfu evalu singl cycl code sequenc mip r2000 instruct 18 sequenc would requir multipl instruct thu multipl cycl execut refer result section refer optim pfuexpress optim slightli less obviou type data flow optim involv convers tabl lookup refer pfutablelookup tabl lookup use instanc logic express becom complex ineffici evalu directli processor instruct set extract algorithm recogn constant array data structur repres truth tabl minim tabl repres function form evalu effici pfu 7 illustr figur 6 show truth tabl mip r2000 code pfu logic requir evalu ternari nand gate mip r2000 instruct set requir least four instruct evalu twoinput ternari gate tabl lookup techniqu figur show howev pfu easili evalu ternari gate singl cycl fact singl 4input lut evalu ternari 2input gate razdan 22 describ number exampl pfutablelookup optim addit simpl sequenc datadepend pfulog instruct hardwar extract routin also recogn opportun optim control flow applic one 6 simpl bottomup greedi algorithm attempt increas size instruct sequenc rearrang order instruct obviou next step would integr hardwar extract routin instruct schedul routin 7 cours type programmerappli optim life would much easier undo optim appli section 44 discuss issu relat topic figur 5 exampl pfuexpress optim pfu evalu either sequenc boolean instruct singl cycl rs rt rd rs 0x0 rd opportun pfupred optim transform ifthenelsestructur portion control flow graph cfg set boolean equat effect optim provid support limit form predic execut see mahlk et al 21 inform hardwar softwar support predic execut appli optim candid portion cfg must adher follow charac terist must one one entri point portion cfg must one one exit point select portion everi block exclud entri exit block must contain pfulog instruct select portion contain backward cfg edg ie loop met constraint process convers proce three basic step predic assign boolean transfor mation boolean minim assign predic basic block well understood problem 3 calcul basic block predic compil transform individu pfulog instruct basic block includ effect predic given basic block predic p assign form op pfu logic oper boolean transform rule express cstyle logic variabl z old z new valu output variabl assign immedi assign respec tive n function take boolean bit gener nbit vector contain n copi bit transform execut oper independ actual control flow oper assert predic affect valu result figur 7 illustr result pfupredica tion optim translat exampl code segment set boolean equat obviou benefit pfupred optim reduc execut time portion cfg singl cycl anoth import benefit optim elimin condit branch instruct stream condit branch major impedi higher perform instruct schedul unfortun ifthenels structur use nonpfulog instruct multipl exit point benefit pfupred optim even abl use pfu anoth way also benefici reduc execut time branch impedi code motion new techniqu call pfujump optim attempt convert set ifthenels statement switch statement optim base observ signific portion program branch branch short distanc 14 thu branch thought spars boolean functiona pfu evalu switch condit gener appropri target address order use pfujump optim subset cfg must one one start basic block contain pfu logic instruct condit express contain backward edg loop figur 8 show exampl pfu jump optim massivecount routin espresso figur exampl pfutablelookup optim truth tabl evalu ternari nand gate 00 illeg state 01 logic zero 10 logic one 11 logic x mip r2000 code base address fullydecod tabl truth tabl r2000 code pfu logic orr1 b r1 addr1 r1 exampl c code c b els c els c w els figur 7 exampl pfupred optim pfu output bit n shown tie logic 0 boolean pfu equat benchmark sinc code use load store instruct non pfulogig instruct increment array locat bodi use pfupred optim condit evalu howev requir pfulog instruct thu replac three condit branch singl dynam jump whose target address gener expfu instruct 8 sinc 2 3 differ possibl execut path code figur 8 compil optim 8 differ target instruct sequenc figur 8 also show possibl neg ramif pfu jump optim first signific increas code size increas may degrad instruct cach perform second techniqu forc prematur evalu condit express cfg graph prematur evalu degrad perform cfg shortest path execut highest probabl though temper fast evalu switch condit pfu use branch probabl data determin pfujump optim mostlik improv perform last signific restrict use pfu optim control flow neither previou two techniqu contain loop howev optim interact well loop unrol techniqu 14 razdan 22 describ extend simpl loop unrol algorithm take advantag pfu resourc call pfuloop optim 44 optim opportun effect pfu optim describ previou subsect limit compil abil determin precis function set instruct exampl function implement truthtabl lookup easili convert expfu instruct compil abl identifi programm appli optim similarli number charact manipul stringtonumb convers routin c runtim librari could definit benefit pfu resourc howev handtun routin individu instruc 8 actual gener target address expfu instruct requir system function also linktim optim know final target address time tion set architectur made difficult reconstruct automat logic intent gener found possibl structur wide varieti applic achiev dramat increas perform pfu resourc 23 perform model result complet analysi prisc1 approach would involv detail design pfuaugment datapath develop full compilationsynthesi system describ section 41 invest heavili two activ construct proofofconcept system gave us rough first estim potenti perform benefit prisc1 comput section 51 describ perform model environ section 52 present result simul studi 51 perform model base proofofconcept studi mythic 200mhz mip r2000 datapath augment singl prisc1 pfu datapath microarchitectur pfu design match descript given section 3 particular pfu symmet ric layer pfu design meet requir 200mhz cycl time ie 1994 technolog sinc real hardwar need develop complet compil environ current softwar system contain implement hardwar extract function width analysi algorithm describ section 4 unlik section 41 descript ideal compil system input current routin mip object file output chang cycl count object file basic block use object file input limit effect extract routin due lack complet type inform exampl extract routin use pfu elimin need temporari regist express evalu temporari regist spill main memori due regist congest origin object file current algorithm optim awayresult pessimist perform result similarli lack type inform usag enumer type greatli limit effect functionwidth analysi step thu limit number candid pfulog oper final keep duplic exist compil function current softwar perform compiletim optim procedur inlin instruct sched ule compiletim optim could increas applic variou pfu transform describ section 41 integr analysi extract system routin hardwar synthesi sinc real hardwar perform hardwar synthesi except lut placement rout determin extract function fit physic pfu resourc system implement follow simpl rule maximum depth gate level network less 6 level pfu function allow replac softwar code estim pfu programm lead optimist result 5level network could fit pfu resourc pessimist result 6 7level network could fit physic pfu gener perform number next subsect combin basic block cycl count compil system basic block execut count pixi profil tool 27 like perform model strategi particular strategi sever shortcom sinc perform number base basic block profil trace imposs us know often realli need program pfu current though softwar system add singl expfu instruct per figur 8 exampl pfujump optim espresso benchmark regist t1 temporari regist r0 contain integ valu 0 exampl c code val 1 a0 val val code pfu optim expfu t1valr0pfnum jr t1 loop loop without procedur call thu easili assum worstcas scenario perform result specifi calli assum pfu take 500 cycl program must reprogram pfu everi time enter enclos loop word assum pfu never program correctli enter loop contain expfu instruct proofofconcept system model cpu perform memori system penalti ignor similarli profil data applic execut onlyoper system issu perform ignor previou limit softwar perform model one view result lower bound potenti decreas applic cpu cycl 52 perform result sinc one origin goal develop approach applic wide varieti applic select benchmark suit 28 first cut set divers applic perform experi decstat 5000240 use mip c compil v210 benchmark tabl 1 list number time invok hardwar extract optim softwar system would appli individu optim profil inform indic optim would increas applic perform least 01 compilationsynthesi time pfu optim typic measur singledigit minut tabl 2 list perform gain obtain applic calcul perform gain divid number cycl taken pfu optim number taken pfu optim benchmark shown tabl 1 2 compress cp eqntott eqn espresso exp gcc gcc li li sc sc system found mani instanc pfuexpress pfu jump optim four six benchmark rel spars number pfu optim instanc found low perform improv li due larg number short procedur call interpret loop tabl 2 show eqntott exhibit excel speedup even though static pfu optim instanc signific speedup due singl pfu optim cmppt routin routin account 85 applic cycl cycl count decreas routin greatli reduc overal cycl count basic data type cmppt 16bit integ seen 213 improv perform chang data type short 16bit integ char 8bit integ pfutablelookup optim never invok benchmark constant array declar constant applic sourc code unfortun modifi applic sourc code constant qualifi improv situat mip c compil retain readonli natur constant inform object file final note number pfu gener current system less 200 function per applic even approach expfu instruct format limit 2047 logicalpfu number specint92 benchmark perform gain singl pfu seem signific comparison generalpurpos architectur altern exampl consid addit onchip cach memori mani today commerci microprocessor contain least 8 kilobyt onchip instruct data cach 12 doubl size instruct cach kilobyt decreas averag instruct cach miss rate averag 2 specint92 benchmark fairli optimist condit ie cpi execut equal 10 25 cycl miss penalti doubl instruct cach provid averag perform improv approxim 15 hardwar cost eight time pfu 9 6 conclus futur work paper describ novel microarchitectur compila tionsynthesi system automat exploit hardwarepro grammabl resourc improv perform generalpurpos applic paper also present encourag result proofofconcept experi shown respect perform gain 22 specint92 benchmark suit modest hardwar invest singl combin pfu base encourag result begun port extract routin generalpurpos com piler futur hope develop detail hardwar model prisc1 datapath aggress compil environ abl explor impact techniqu superscalar processor pfu optim often reduc regist pressur elimin temporari variabl increas size basic block elimin condit branch predic side effect potenti improv benefit superscalar design furthermor forese excel opportun synergist interact hardwar extract algorithm exist global instruct schedul algorithm acknowledg research assist four individu invalu abl would like thank bill grundman insight discuss custom cmo implement techniqu ramif techniqu pfu microarchitectur design also would like thank mark firstenberg ed mclellan 9 program like eqntott get larg benefit addit pfu nearli benefit increas instruct cach end spec trum program like gcc get larg benefit doubl instruct cach current small benefit pfu still case found benefit fairli equival ad 1kb instruct cach optim cp eqn exp gcc li sc pfuexpress 9 0 48 13 4 12 pfupred tabl 1 static pfu optim instanc specint92 cp eqn exp gcc li sc tabl 2 cycl count speedup prisc1 microarchitectur singl pfu resourc speedup applic arithmet averag defin spec data set applic detail inform provid microarchitectur two recent high perform vax alpha architectur implement final steven morri suggest pal approach program pfu digit equip corpor provid fund rahul razdan graduat work mike smith fund part nsf young investig award r heurist synthesi microprogram comput architectur convers control depend data depend splash 2 processor applic processor reconfigur instructionset metamorphosi introduct programm activ memori programm activ memori perform assess mi multiplelevel logic optim system digit equip corp use comput design comput instruct set comput architectur quantit approach view instruct set design optim problem automat design comput instruct set beyond superscalar use fpga mip risc architectur field programm acceler compiledcod applic techniqu program execut writabl control memori effect compil support predic execut use hyperblock prisc programm reduc instruct set comput prisc softwar acceler techniqu dynam problemori redefinit comput architectur via microprogram ming hardwar speedup long integ multipl fast implement rsa cryptographi trace pixi standard perform evalu corpor spec news letter vertic migrat perform enhanc layer hardwarefirmwaresoftwar system programm gate array book tr compil principl techniqu tool mip risc architectur comput architectur quantit approach introduct programm activ memori hardwar speedup long integ multipl view instruct set design optim problem fieldprogramm gate array effect compil support predic execut use hyperblock convers control depend data depend highlevel vlsi synthesi algorithm registertransf level synthesi processor reconfigur instructionset metamorphosi prisc softwar acceler techniqu programm activ memori use comput design comput instruct set ctr daniel benyamin william h mangionesmith function unit special code analysi proceed 1999 ieeeacm intern confer computeraid design p257260 novemb 0711 1999 san jose california unit state maya b gokhal janic stone edson gomersal cosynthesi hybrid riscfpga architectur journal vlsi signal process system v24 n23 p165180 mar 2000 cesar alippi william fornaciari laura pozzi mariagiovanna sami dagbas design approach reconfigur vliw processor proceed confer design autom test europ p57e januari 1999 munich germani mihai sima sorin cotofana stamati vassiliadi jo j van eijndhoven kee visser reconfigur function unit trimediacpu64 case studi embed processor design challeng system architectur model simulationsamo springerverlag new york inc new york ny 2002 stephan wong stamati vassiliadi sorin cotofana microcod reconfigur embed processor current develop embed processor design challeng system architectur model simulationsamo springerverlag new york inc new york ny 2002 jeffrey jacob paul chow memori interfac instruct specif reconfigur processor proceed 1999 acmsigda seventh intern symposium field programm gate array p145154 februari 2123 1999 monterey california unit state andrea lodi mario toma fabio campi pipelin configur gate array embed processor proceed acmsigda eleventh intern symposium field programm gate array februari 2325 2003 monterey california usa ricardo e gonzalez xtensa configur extens processor ieee micro v20 n2 p6070 march 2000 francisco barat rudi lauwerein geert deconinck reconfigur instruct set processor hardwaresoftwar perspect ieee transact softwar engin v28 n9 p847862 septemb 2002 jeffrey arnold architectur develop flow s5 softwar configur processor journal vlsi signal process system v47 n1 p314 april 2007 nathan clark hongtao zhong wilkin tang scott mahlk automat design applic specif instruct set extens dataflow graph explor intern journal parallel program v31 n6 p429449 decemb michael dale manag reconfigur processor gener purpos workstat environ proceed confer design autom test europ p10980 march 0307 sandra j weber joann paul donald e thoma coram combin logic synthesi appli softwar partit map novel memori devic ieee transact larg scale integr vlsi system v9 n6 p805812 1212001 rama sangireddi huesung kim arun k somani lowpow highperform reconfigur comput cach architectur ieee transact comput v53 n10 p12741290 octob 2004 timothi j callahan john r hauser john wawrzynek garp architectur c compil comput v33 n4 p6269 april 2000 partha biswa nikil dutt paolo ienn laura pozzi automat identif applicationspecif function unit architectur visibl storag proceed confer design autom test europ proceed march 0610 2006 munich germani alberto la rosa luciano lavagno claudio passeron hardwaresoftwar design space explor reconfigur processor proceed confer design autom test europ p10570 march 0307 xiaoyong chen dougla l maskel support multipleinput multipleoutput custom function configur processor journal system architectur euromicro journal v53 n56 p263271 may 2007 partha biswa sudarshan banerje nikil dutt laura pozzi paolo ienn isegen gener highqual instruct set extens iter improv proceed confer design autom test europ p12461251 march 0711 2005 partha biswa vinay choudhari kubilay atasu laura pozzi paolo ienn nikil dutt introduct local memori element instruct set extens proceed 41st annual confer design autom june 0711 2004 san diego ca usa kubilay atasu laura pozzi paolo ienn automat applicationspecif instructionset extens microarchitectur constraint intern journal parallel program v31 n6 p411428 decemb maya gokhal jan frigo kevin mccabe jame theiler christoph wolinski dominiqu laveni experi hybrid processor kmean cluster journal supercomput v26 n2 p131148 septemb john regehr usit duongsaa deriv abstract transfer function analyz embed softwar acm sigplan notic v41 n7 juli 2006 nahri moreano guido araujo zhine huang sharad malik datapath merg interconnect share reconfigur architectur proceed 15th intern symposium system synthesi octob 0204 2002 kyoto japan mitsuru tomono masaki nakanishi katsumasa watanab shigeru yamashita eventori comput reconfigur platform proceed 2005 confer asia south pacif design autom januari 1821 2005 shanghai china hamid noori farhad mehdipour kazuaki murakami koji inou maziar goudarzi interact present gener execut multiexit custom instruct adapt extens processor proceed confer design autom test europ april 1620 2007 nice franc rubi b lee michael smith guest editor introduct media process new design target ieee micro v16 n4 p69 august 1996 alberto la rosa luciano lavagno claudio passeron softwar develop tool chain reconfigur processor proceed 2001 intern confer compil architectur synthesi embed system novemb 1617 2001 atlanta georgia usa alberto la rosa claudio passeron francesco gregoretti luciano lavagno implement umt turbodecod dynam reconfigur platform proceed confer design autom test europ p21218 februari 1620 2004 kubilay atasu laura pozzi paolo ienn automat applicationspecif instructionset extens microarchitectur constraint proceed 40th confer design autom june 0206 2003 anaheim ca usa miljan vuleti laura pozzi paolo ienn virtual memori window applicationspecif reconfigur coprocessor proceed 41st annual confer design autom june 0711 2004 san diego ca usa zhine huang sharad malik nahri moreano guido araujo design dynam reconfigur datapath coprocessor acm transact embed comput system tec v3 n2 p361384 may 2004 sequenc depend instruct function approach improv perform without ilp specul acm sigarch comput architectur news v32 n2 p238 march 2004 arvind krishnaswami rajiv gupta dynam coalesc 16bit instruct acm transact embed comput system tec v4 n1 p337 februari 2005 jorg e carrillo paul chow effect reconfigur unit superscalar processor proceed 2001 acmsigda ninth intern symposium field programm gate array p141150 februari 2001 monterey california unit state john regehr alastair reid kirk webb elimin stack overflow abstract interpret acm transact embed comput system tec v4 n4 p751778 novemb 2005 seth copen goldstein herman schmit matthew moe mihai budiu srihari cadambi r reed taylor ronald laufer piperench coprocessor stream multimedia acceler acm sigarch comput architectur news v27 n2 p2839 may 1999 scott hauck thoma w fri matthew hosler jeffrey p kao chimaera reconfigur function unit ieee transact larg scale integr vlsi system v12 n2 p206217 februari 2004 ann braci prashant prahlad amir roth dataflow minigraph amplifi superscalar capac bandwidth proceed 37th annual ieeeacm intern symposium microarchitectur p1829 decemb 0408 2004 portland oregon timothi sherwood brad calder autom design finit state machin predictor custom processor acm sigarch comput architectur news v29 n2 p8697 may 2001 explor design space lutbas transpar acceler proceed 2005 intern confer compil architectur synthesi embed system septemb 2427 2005 san francisco california usa herman h schmit srihari cadambi matthew moe seth c goldstein pipelin reconfigur fpga journal vlsi signal process system v24 n23 p129146 mar 2000 nathan dean cooprid john david regehr offlin compress onchip ram acm sigplan notic v42 n6 june 2007 zhi alex ye andrea moshovo scott hauck prithviraj banerje chimaera highperform architectur tightlycoupl reconfigur function unit acm sigarch comput architectur news v28 n2 p225235 may 2000 nathan clark manjunath kudlur hyunchul park scott mahlk krisztian flautner applicationspecif process generalpurpos core via transpar instruct set custom proceed 37th annual ieeeacm intern symposium microarchitectur p3040 decemb 0408 2004 portland oregon nathan clark amir hormati scott mahlk sami yehia scalabl subgraph map acycl comput acceler proceed 2006 intern confer compil architectur synthesi embed system octob 2225 2006 seoul korea bruce r childer jack w davidson custom wide counterflow pipelin highperform embed applic ieee transact comput v53 n2 p141158 februari 2004 mahim mishra timothi j callahan tiberiu chelcea girish venkataramani seth c goldstein mihai budiu tartan evalu spatial comput whole program execut acm sigop oper system review v40 n5 decemb 2006 nathan clark hongtao zhong scott mahlk processor acceler autom instruct set custom proceed 36th annual ieeeacm intern symposium microarchitectur p129 decemb 0305 david brook margaret martonosi valuebas clock gate oper pack dynam strategi improv processor power perform acm transact comput system toc v18 n2 p89126 may 2000 manfr glesner thoma hollstein leandro soar indrusiak peter zipf thilo pionteck mihail petrov heiko zimmer tudor murgan reconfigur platform ubiquit comput proceed 1st confer comput frontier april 1416 2004 ischia itali john regehr alastair reid hoist system automat deriv static analyz embed system acm sigop oper system review v38 n5 decemb 2004 seng lin shee sri parameswaran newton cheung novel architectur loop acceler case studi proceed 3rd ieeeacmifip intern confer hardwaresoftwar codesign system synthesi septemb 1921 2005 jersey citi nj usa nathan clark hongtao zhong scott mahlk autom custom instruct gener domainspecif processor acceler ieee transact comput v54 n10 p12581270 octob 2005 mark oskin freder chong timothi sherwood activ page comput model intellig memori acm sigarch comput architectur news v26 n3 p192203 june 1998 alireza shoa shahram shirani runtim reconfigur system digit signal process applic survey journal vlsi signal process system v39 n3 p213235 march 2005 alireza shoa shahram shirani runtim reconfigur system digit signal process applic survey journal vlsi signal process system v39 n3 p213235 march 2005 mihai budiu girish venkataramani tiberiu chelcea seth copen goldstein spatial comput acm sigarch comput architectur news v32 n5 decemb 2004 philip garcia katherin compton michael schult emili blem wenyin fu overview reconfigur hardwar embed system eurasip journal embed system v2006 n1 p1313 januari 2006 katherin compton scott hauck reconfigur comput survey system softwar acm comput survey csur v34 n2 p171210 june 2002