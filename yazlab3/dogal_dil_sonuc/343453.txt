low overhead log scheme fast recoveri distribut share memori system paper present effici writerbas log scheme recover distribut share memori system log data item perform writer process instead everi process access item log sinc writer process maintain log data item volatil storag use log reader access inform need log stabl storag writer process toler multipl failur moreov reduc frequenc stabl log data item access multipl process log access inform item invalid also semanticbas optim log consid compar earlier scheme stabl log perform whenev new data item access written process size log log frequenc significantli reduc propos scheme b introduct distribut share memorydsm systems15 transform exist network workstat power sharedmemori parallel comput could deliv superior priceperform ratio howev workstat engag system longer execut time probabl failur creas could render system useless dsm system practic use import system recover process restart begin failur 25 approach provid faulttoler dsm system use checkpoint rollbackrecoveri checkpoint oper save intermedi system state stabl storag affect system failur period checkpoint system recov one save state call checkpoint failur occur system activ resum comput one previou checkpoint call rollback dsm system comput state process becom depend state anoth process read data item produc process depend relat process recov failur forc depend process roll back togeth reproduc sequenc data item rollback propag depend process process may roll back recurs reach consist recoveri line checkpoint process taken care recurs rollback call domino effect17 worst case consist recoveri line consist set initi point ie total loss comput spite checkpoint effort one solut cope domino effect coordin checkpoint time process take checkpoint coordin relat process take consist checkpoint togeth 3 4 5 8 10 13 sinc checkpoint coordin approach produc consist recoveri line process involv domino effect one possibl drawback approach process need block normal comput checkpoint coordin communicationinduc checkpoint anoth form coordin checkpoint process take checkpoint whenev notic new depend relat creat anoth process9 22 24 25 checkpoint coordin approach also ensur dominoeffect sinc checkpoint commun point howev overhead caus frequent checkpoint may sever degrad system perform anoth solut domino effect problem use messag log addit independ checkpoint 19 everi data item access process log stabl storag process regener comput rollback reprocess log data item result failur one process affect process mean rollback propag also domino effect possibl drawback approach nonneglig log overhead reduc log overhead scheme propos 23 avoid repeat log data item access repeatedli correct recomput data item log first access count repeat access log item data item invalid result amount log reduc compar scheme 19 scheme propos 11 suggest data item log produc write oper henc data item access multipl process need log multipl site amount log reduc howev data item written access process log becom useless moreov correct recomput process access data item log locat item log access count item result much reduct frequenc log compar scheme 23 reduc log overhead scheme propos 7 suggest volatil log process produc new data item write oper valu log volatil storag writer process written valu request process writer process log oper number request process henc request process fail data valu proper oper number retriev writer process compar overhead log stabl storag volatil log caus much less overhead howev concurr failur request process writer process system fulli recov paper present new log scheme recover dsm system toler multipl failur propos scheme twolevel log structur use volatil stabl storag util effici log speed log recoveri procedur data item reader access inform log volatil storag writer process toler multipl failur log access inform data item save stabl storag volatil log limit space one possibl problem stabl log access frequenc stabl storag critic issu solv problem log data item perform data becom invalid new write oper writer process take whole respons log instead everi process access data concurr log also elimin unnecessari log data item semanticbas optim consid log result amount log frequenc stabl storag access substanti reduc rest paper organ follow section 2 present dsm system model definit consist recoveri line present section 3 section 4 section 5 propos log rollback recoveri protocol present respect section 6 prove correct propos protocol evalu perform propos scheme implement propos log scheme top cvmcoher virtual machine12 experiment result discuss section 7 section 8 conclud paper 2 system model dsm system consid paper consist number node connect commun network node consist processor volatil main memori nonvolatil secondari storag processor system share physic memori global clock commun messag pass howev system provid share memori space unit share data fixeds page system logic view set process run node commun access share data page process consid sequenc state transit initi state final state event atom action caus state transit within process sequenc event call comput dsm system comput process character sequenc readwrit oper access share data page comput perform process assum piecewis determinist comput state gener process fulli determin sequenc data page provid sequenc read oper dsm model assum readrepl model 21 system maintain singl writabl copi multipl readonli copi data page memori consist model assum sequenti consist model version data page process read reader page x copi request 2 2 2 writer ownership owner page x invalid copyset x owner remot read oper b remot write oper 2 1 read readonli request 1 write figur 1 remot readwrit procedur latest version written data page 14 number differ memori semant dsm system propos includ processor weak releas consist 16 well causal coher 1 howev paper focu sequenti consist model writeinvalid protocol 15 assum implement sequenti consist figur 1 depict read write procedur writeinvalid protocol data page one owner process writabl copi local memori process read data page local memori ask transfer readonli copi owner set process readonli copi data page call copyset page process perform write oper data page owner page copyset page must empti henc writer process first send write request owner process owner owner process send invalid messag process copyset make invalid readonli copi page collect invalid acknowledg process copyset owner transfer data page ownership new writer process writer process owner copyset empti perform invalid procedur overwrit page system compon make follow failur assumpt processor failstop 20 processor fail simpli stop perform malici action failur consid transient independ node recov failur reexecut com putat failur like occur also failur one node affect node make assumpt number simultan node failur node fail regist content main memori content lost howev content secondari storag preserv secondari storag use stabl storag commun subsystem reliabl messag deliveri handl errorfre virtual lossless manner underli commun subsystem howev assumpt made messag deliveri order 3 consist recoveri line state process natur depend previou state dsm system depend relat state differ process also creat read write data item process p read data item written anoth process p j p state read event becom depend p j state write event formal depend relat defin follow let r ff denot ffth read event happen process p ff denot state interv trigger r ff end right r ff1 denot p initi state let w ff denot set write event happen ff read write event data item x return written valu u definit 1 interv ff said depend anoth interv fi one follow condit satisfi depend relat denot fi c2 r ff j w c3 exist interv fl fi fl figur 2 show exampl comput depend among state interv dsm system consist three process horizont arrow figur 2a repres progress comput process arrow one process anoth repres data page transfer process data page x contain data item x denot xx figur 2b depict depend relat creat figur 2a direct graph node repres state interv edg path node n ff anoth ji ji ki ki comput diagram b depend graph figur 2 exampl depend relat node n fi indic direct transit depend relat state interv n ff anoth state interv n fi note figur 2a depend relat 1 j 1 k accord definit given howev dsm system easi recogn part data page access process henc comput figur 2a may differenti one p k read oper ry 0 case must depend relat 1 k dot arrow figur 2b denot possibl depend relat log scheme must care design take care possibl depend consist recoveri depend relat state interv may caus possibl inconsist problem process roll back perform recomput figur 3 show two typic exampl inconsist rollback recoveri case discuss messagepass base distribut comput systems6 first suppos process p figur 3a roll back latest checkpoint c due failur retriev data item ry result w x may differ one comput failur henc consist p p j becom violat sinc comput event rx depend invalid comput case call orphan messag case hand suppos process p j figur 3b roll back latest checkpoint c j due failur p j regener exactli comput retriev data item x roll back resend data page xx case call lost messag case howev dsm system lost messag case caus inconsist problem failur failur orphan messag case b lost messag case figur 3 possibl inconsist recoveri line write oper sinc w x p p j retriev content page current owner time even though anoth write oper content page chang p j still retriev data page xx even differ content differ recomput p j affect process unless p j depend process failur henc dsm system rollback recoveri case caus inconsist problem orphan messag case definit 2 process said recov consist recoveri line involv orphan messag case rollback recoveri 4 log protocol effici log three principl adopt one writerbas log instead multipl reader log data page one writer process take respons log page also invalidationtrigg log use log data page delay page invalid final semanticbas log optim consid avoid unnecessari log activ access pattern data relat process consid log strategi 41 writerbas invalidationtrigg log consist regener comput process requir log sequenc data page access content data page access process log page log access durat instead log page content repeatedli access durat denot first last comput point page access log data page perform either process access reader process produc writer sinc data page produc writer usual access multipl reader effici one writer log page rather multipl reader log page moreov writer util volatil storag log data page sinc log page requir reader failur writer failur even writer lose page log due failur regener content page consist recoveri assumpt uniqu identifi version data page access durat process p system maintain follow data structur local memori assign process p variabl count number read write oper perform process use opnum uniqu sequenc number assign read write oper perform p version data page x produc p uniqu version identifi assign ffl version x uniqu identifi assign version data page x version opnum opnum valu time p produc current version x produc new version x write oper version x assign page current version x invalid p log current version x version x p volatil log space also log access durat current reader page x report access durat page reader p j maintain follow data structur associ page x local memori ffl durat jx record variabl four field denot access inform page x p j first valu opnum j time page x first access p j last valu opnum j time page x invalid p j new version page x transfer current owner p j creat durat jx fill entri pid version first entri last complet p j receiv invalid messag x current owner p process p j piggyback complet durat jx invalid acknowledg sent p owner p collect durat kx everi reader log collect access inform volatil log space owner p may also durat ix read page x write anoth process implicitli access current version x next owner sinc next owner usual make partial updat current version page current version retriev case next owner failur henc process p k send write request current owner p attach opnum k valu receipt request creat durat kx first last notic volatil log access inform writer provid fast retriev case reader failur howev inform total lost case writer failur sinc unlik data page content access inform reconstruct failur henc cope concurr failur might occur writer reader stabl log access inform requir writer p make volatil log access inform also save inform stabl log space reader access inform reconstruct writer fail figur 4 show way writerbas invalidationtrigg log protocol execut incorpor sequenti consist protocol system consist three process symbol r ff x w ff x figur denot read write oper data page x opnum valu ff inv x denot invalid page x figur assum data page x initi own process p j notic figur propos log scheme requir small amount extra inform piggyback write request messag invalid acknowledg volatil stabl log perform writer process invalid time figur 4 also show content volatil stabl log storag process p j note stabl log p j includ access inform volatil log includ content page x addit access inform delay page log invalid time reader access inform collect without extra commun moreov log access durat multipl reader perform one stabl storag access though amount access inform small read request read request request write invalid invalid invalid invalid ownership 1 j1 1 1 readonli copi copi readonli figur 4 exampl writerbas invalidationtrigg log frequent access stabl storag may sever degrad system perform henc import reduc log frequenc invalidationtrigg log howev invalidationtrigg log may caus data page access reader yet invalid log entri page reader process retriev log entri reexecut comput due failur data page howev safe refetch current owner even reader failur sinc data page access multipl reader invalid unless everi reader send invalid acknowledg back data page current valid system necessari log sequenti consist protocol incorpor writerbas invalidationtrigg log formal present figur 5 figur 6 bold face code one ad log protocol 42 semanticbas optim everi invalid data page access inform howev necessari log consid semant data page access data page access reproduc recoveri access durat implicitli estim log access inform p read data page x send readrequestx ownerx wait pagex notexistdur ix durat ix pidpid durat ix versionvers x durat ix firstopnum 1 durat ix last0 receiv readrequestx send pagex figur 5 writerbas invalidationtrigg log protocol semanticbas log strategi unnecessari log point detect base data page access pattern log point avoid delay log strategi reduc frequenc stabl log activ also reduc amount data page log volatil storag first data page remot access need log data page remot access mean page read invalid local without creat depend relat exampl figur 7 process p first fetch data page x p j creat new version x identifi i1 version page local read r 2 x r 3 x invalid w 4 x howev version i1 x invalid due oper w 4 x p need log content page x access durat ii124 reason recoveri p version i1 x regener oper w 1 x access durat ii124 estim durat w 1 x w 4 x next version i4 page x howev need log invalid due oper w 2 x p j sinc oper w 2 x p write data page x send writerequestx opnum ownerx wait pagex els copysetx 6 oe f send invalidationx everi p k 2 copysetx wait invalidationackx everi p k 2 copysetx durat x k2copygammasetx durat save version x pagex durat x volatilelog flush version x durat x stablelog write pagex version x pid opnum receiv writerequestx opnum j send invalidationx everi p k 2 copysetx wait invalidationackx everi p k 2 copysetx durat x k2copygammasetx durat durat jx pidpid durat jx versionvers x durat jx firstdur jx lastopnum j 1 durat x durat x durat jx save version x pagex durat x volatilelog flush version x durat x stablelog send pagex ownershipx durat ix lastopnum send invalidationackx durat ix ownerx figur invalidationtrigg log protocol continu figur 7 exampl local data access implicitli requir remot access version i4 elimin log local data page amount log data page volatil log space also access frequenc stabl log space significantli reduc howev elimin may caus inconsist problem shown figur 8 integr invalidationtrigg log suppos process p figur roll back failur consist recoveri p perform recomput w 4 x otherwis orphan messag case happen p p j howev p perform last log oper w 2 x log entri w 4 x p depend p j matter whether p roll back w 2 x w 4 x howev due depend p j process p perform recomput least point depend form record opnum valu process recov process p system maintain ninteg array call oper counter vectorocv n number process system ocv n ith entri v denot current opnum valu denot last opnum valu p j p current comput depend notat similar causal vector propos 18 henc process p j transfer data page anoth process p send current ocv j valu page receiv updat ocv take entrywis maximum valu receiv vector vector follow exampl figur 8 p send data page x version identifi i4 p j send page p j updat ocv j 4 2 0 p j send data page version identifi j3 p k ocv sent page ocv k failur log figur 8 exampl oper counter vector updat ocv 1 result v j ocv indic last oper process p j process p current comput directli transit depend henc p j perform rollback recoveri complet recomput least point v j yield consist state p p j anoth data access pattern consid log optim sequenc write oper perform data page shown figur 9 process l figur sequenti write data page x howev written data read r 2 x p l access pattern mean explicit depend relat occur system w l even though explicit depend write oper shown figur write preced order oper import sinc order indic possibl depend relat explain section 3 also indic process becom current owner page recoveri reduc frequenc stabl log without violat write preced order suggest delay stabl log preced order delay stabl log volatil log data page access durat perform describ howev stabl log perform data page copyset invalid instead inform regard preced order current owner page next owner attach data page transfer next owner sinc new owner maintain unlog preced order inform correct recomput preced perform long new owner surviv suppos new owner preced fail concurr new owner fail without make new depend write arbitrari recomput may caus inconsist problem new owner preced pl figur 9 exampl write preced order howev fail make new depend write correct recoveri may possibl henc process maintain unlog preced order inform perform stabl log creat depend process exampl figur 9 p perform stabl log invalid page x instead maintain preced inform i1 j1 perform stabl log transfer page x p k time preced order p j p k j1 k1 also stabli log togeth henc page x transfer p j p k need carri preced relat p j p k result comput shown figur 9 requir two stabl log activ instead four stabl log activ 5 recoveri protocol consist recoveri two log structur use volatil log mainli use recov process perform consist recomput stabl log use reconstruct volatil log toler multipl failur addit data log independ checkpoint period perform process reduc recomput time 51 checkpoint garbag collect reduc amount recomput case failur process system period take checkpoint checkpoint process p includ intermedi state process current valu opnum ocv data page p current maintain process take new checkpoint safe discard previou checkpoint checkpoint activ among relat process need perform coordin manner process howev care discard stabl log content save new checkpoint sinc log entri may still request depend process henc checkpoint c ff process p p maintain log vector say lv iff j th entri vector denot lv iff j indic largest opnum j valu durat jx log correspond checkpoint process p j take new checkpoint recomput checkpoint longer requir send current opnum j valu process process period compar receiv opnum j valu lv iff j valu checkpoint c ff everi p j system receiv opnum j becom larger lv iff j process p safe discard log inform save checkpoint c ff 52 rollbackrecoveri recoveri singl failur case first discuss process p recov failur recoveri process first creat set p statu recov process p 0 broadcast log collect messag process system receipt log collect messag process p j repli ith entri ocv j v j also data page x log p j access p log entri durat ix content page attach repli messag p 0 collect repli messag process system creat recoveri log arrang receiv durat ix order durat ix first also arrang receiv data page correspond order process p 0 select maximum valu among collect v j entri set valu p recoveri point sinc process system except p normal comput statu p 0 collect repli messag select recoveri point p indic last comput state p process system depend also construct recoveri log p includ everi remot data page p access failur recoveri process restor comput state last checkpoint p restor state process begin recomput restor state includ set activ data page resid main memori checkpoint taken valu opnum also set one checkpoint time recomput process p maintain variabl condit action readx write pagex durat ix last read requestx ownerx last invalidatex read requestx ownerx recoveri log tabl 1 retriev data page recomput call valu durat ix first first entri recoveri log next indic time fetch next data page recoveri log read write oper p recomput perform follow read first increment opnum valu one compar opnum next match first entri recoveri log includ content correspond page durat ix move activ data page space oper perform new page previou version page remov activ data page space new version page use read write oper opnum reach valu durat ix last read write oper data page creat recomput need use log optim henc new version data page x creat write oper correspond log entri found recoveri log page must kept activ data page space durat ix last set infin version page x use next write oper x perform new version x retriev recoveri log sometim p read data page x may face situat valid version x found activ data page space yet time fetch next log entri opnum next situat occur data page access p failur invalid note page log sinc current version still valid case current version page x must refetch current owner henc p read data page x request page x current owner version x activ data page space durat ix last valu page x activ data page space less opnum case opnum must less next previou version page x invalid receiv new version retriev invalid activ data page recomput summar tabl 1 activ data page space abbrevi adp tabl recomput process p also reconstruct volatil log content maintain failur recoveri depend process access inform volatil log retriev stabl log content p 0 wait repli messag send log collect request howev data page save volatil log must creat recomput henc write oper p log content page version identifi correspond access inform entri found volatil log case write oper may caus invalid previou version page activ data page space howev issu invalid messag process recomput opnum reach select recoveri point p chang statu recov normal resum normal comput extend protocol handl concurr recoveri multipl failur process p p 0 perform recoveri procedur anoth process p j system fail state also recov statu p j fail state repli back log collect messag p 0 wait p j wake howev p j recov statu make p wait repli sinc case p p j must end deadlock situat henc messag sent recov statu must carri recoveri mark differenti normal one recoveri messag must taken care without block whether messag recoveri relat recoveri anoth process howev normal messag readwrit request invalid messag need deliv process recov statu sinc process messag recoveri may violat correct system recov statu receiv log collect messag anoth process p 0 reconstruct access inform part p volatil log stabl log content done yet repli durat jx entri log p p j even though access inform restor stabl log content data page contain volatil log may yet reproduc henc durat jx sent record valu durat jx version correspond data page sent p j later p creat page recomput process p j begin recomput access inform collect everi process system result everi data page log failur correspond log entri durat ix retriev recoveri log howev correspond data page x may exist recoveri log process p begin recomput note case writer correspond page may also recoveri procedur henc p wait writer process send page x recomput may send request page x use durat ix version worst case two process p p j concurr execut recomput data page must retransf two process done failur howev occur deadlock situat sinc data transfer exactli follow scenario describ access inform recoveri log scenario must follow sequenti consist memori model recoveri process p begin normal comput reconstruct two informa tion one current oper counter vector data page directori oper counter vector reconstruct vector valu receiv process system v j valu p use valu v j retriev process p j v valu use current opnum valu directori includ ownership copyset inform data page own checkpoint p contain ownership inform data page own time checkpoint henc recomput p reconstruct current ownership inform follow p perform write oper data page record ownership page directori p read new data page log invalid ownership page sinc log mean invalid howev copyset data page process own obtain sinc copyset inform futur invalid page process put process copyset 6 correct prove correct propos log recoveri protocol lemma 1 recoveri point select propos recoveri protocol consist proof prove lemma contradict suppos process p recov failur select inconsist recoveri point say r must produc data page x version x ik k r must anoth process p j aliv system read page mean v j p j must larger equal k sinc r select maximum valu among v k valu collect r contradict occur 2 lemma 2 propos log protocol log exist everi data access point prior select recoveri point proof data access point page use transfer anoth process either log transfer remot write case log page invalid remot read case data page local gener use data access point either log creat page page invalid remot invalid case log content calcul next write point local invalid case case page invalid failur retriev current owner therefor data access point log data page either found recoveri log calcul log content 2 theorem 1 process recov consist recoveri line propos log recoveri protocol proof propos recoveri protocol recov process select consist recoveri point lemma 1 log protocol ensur everi data access point prior select recoveri point data log exist lemma 2 therefor process recov consist recoveri line 2 7 perform studi evalu perform propos scheme two set experi perform simpl tracedriven simul built examin log behavior variou parallel program run dsm system log protocol implement top cvm system measur effect log actual system environ figur 10 comparison log amount synthet trace 71 simul result tracedriven simul built follow log protocol simul sharedaccess trackingsat23 process log data page transfer read write oper also log access inform page process log data page produc also data page access log access inform page sat rwl scheme data page relat inform first save volatil storag log stabl storag process creat new depend transfer data page writetrigg loggingwtl propos paper simul run two differ set trace one trace synthet gener use random number execut trace parallel program first simul model 10 process use workload randomli gener use three random number process number readwrit ratio page number one simul run consist 100000 workload record simul repeat variou figur 11 comparison log frequenc synthet trace readwrit ratio local valu readwrit ratio indic proport read oper total oper readwrit ratio 09 mean 90 oper read 10 write local ratio memori access satisfi local local 09 mean 90 data access local page simul result synthet trace one well show effect log variou applic program type figur 10 figur 11 show effect readwrit ratio local applic program number log data page frequenc stabl log respect number parenthesi legend indic local sat scheme data page miss log newli transfer page requir henc write ratio increas larg number data page becom invalid larg number page miss occur result number log page also log frequenc increas howev local increas higher portion page access satisfi local henc number data page log log frequenc decreas rwl scheme number log data page directli proport write ratio number affect local sinc write oper requir log howev figur 12 comparison log amount parallel program trace stabl log scheme perform process creat new depend sat scheme henc log frequenc rwl scheme show perform similar one sat scheme compar sat scheme rwl scheme perform sat scheme better write ratio local high sinc environ lot log local write rwl scheme wtl scheme page updat log log perform owner data page compar sat scheme everi process copyset perform log number log data page much smaller log frequenc much lower wtl scheme also wtl scheme log data page remot access log writewrit preced order delay henc wtl scheme show much smaller number log data page much lower log frequenc compar rwl scheme log perform everi write oper furthermor log data page sat scheme rwl scheme requir stabl storag scheme volatil storag use log valid claim also use real multiprocessor trace simul trace contain refer produc 64processor mp run follow four program fft figur 13 comparison log frequenc parallel program trace speech simpl weather figur 12 figur 13 show simul result use parallel program trace figur 12 program fft simpl weather sat scheme show worst perform program may contain larg number read oper local read must low howev program speech rwl scheme show worst perform program contain lot local write oper case wtl scheme consist show best perform amount log also consid log frequenc shown figur 13 program wtl scheme show lowest frequenc simul result conclud new schemewtl consist reduc number data page log also frequenc stabl storag access compar schemessatrwl reduct 50 case shown synthet parallel program trace 72 experiment result examin perform propos log protocol actual system environ propos log protocol wtl protocol propos 23 sat implement top dsm system order implement sequenti consist dsm system use applic log execut log amount log number program scheme time sec overhead inform byte stabl log tabl 2 experiment result cvmcoher virtual machin packag 12 support sequenti consist memori model well lazi releas consist memori model cvm written use c well modular pretti straightforward add log scheme basic high level class commmanag class msg class handl network oper memorymanag class handl memori manag page class diffdesc class handl page manag protocol class lmw lsw seq inherit high level class support oper accord protocol modifi subclass seq implement log protocol ran experi use four sparcsystem5 workstat connect 10mbp ethernet experi four applic program fft sor tsp water run tabl 2 summar experiment result amount log inform tabl 2 denot amount data page access inform log stabl storag sat scheme data page size 4k byte access inform log wherea wtl scheme access inform log henc amount inform log wtl scheme 00105 one log sat scheme number stabl log tabl indic frequenc disk access log experiment result show log frequenc wtl scheme figur 14 comparison log overhead 5766 one sat scheme addit amount log inform log frequenc also measur total execut time parallel program log scheme without log compar log overhead log overhead tabl 2 indic increas execut time protocol compar execut time log environ comparison log overhead also depict figur 14 shown tabl sat scheme requir 20189 log overhead wherea wtl scheme requir 585 log overhead compar two scheme wtl scheme achiev 5575 reduct log overhead compar sat scheme one reason reduct low log frequenc impos wtl scheme small amount log inform written wtl scheme also anoth reason howev consid fact increas amount data page written per disk access caus much increas disk access time 75 reduct log overhead may requir anoth explan one possibl explan cascad delay due disk access time stabl log delay progress process perform log also one wait data transfer process overal experiment result show wtl scheme reduc amount log inform log frequenc compar sat scheme also show actual system environ reduct total execut time achiev conclus paper present new messag log scheme dsm system messag log usual perform data page transfer read oper process affect process case failur recoveri howev log stabl storag alway incur overhead reduc overhead log protocol propos paper until twolevel log structur data page access inform log volatil storag writer process access inform duplic stabl storag toler multipl failur usag twolevel log structur speed log also recoveri procedur higher reliabl propos log protocol also util two characterist dsm system one data page read written log data page need log invalid overwrit data page access multipl process need log everi process site one respons process log data page relat inform amount log overhead substanti reduc extens experi compar propos scheme exist scheme conclud propos scheme alway enforc much low log overhead reduct log overhead profound process read write sinc disk log slow normal oper process believ parallel applic would greatli benefit new log scheme r implement program causal distribut share memori causal memori perform consist checkpoint distribut share memori system network multicomput use recover distribut share memori distribut snapshot determin global state distribut system lightweight log lazi releas consist distribut share memori coordin checkpointingrollback error recoveri distribut share memori multicomput relax consist recover distribut share memori reduc interprocessor depend recover share memori implement recover distribut share memori log write cvm coher virtual machin recover distribut share memori integr coher recover make multiprocessor comput correctli execut multiprocess pro gram share virtual memori loos coupl multiprocessor distribut share memori survey issu algorithm reliabl issu comput system design causal order abstract simpl way implement algorithm implement distribut share memori fault toler distribut share memori reduc overhead log rollback recoveri distribut share memori fast recoveri distribut share virtual memori system recover distribut share memori tr ctr taesoon park inseon lee heon yeom effici causal log scheme recover distribut share memori system parallel comput v28 n11 p15491572 novemb 2002