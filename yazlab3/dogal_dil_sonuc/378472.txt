effici algorithm find csg represent simpl polygon consid problem convert boundari represent polyhedr object constructivesolidgeometri csg represent csg represent polyhedron p base halfspac support face p certain kind polyhedra problem equival correspond problem simpl polygon plane give new proof interior simpl polygon repres monoton boolean formula base halfplan support side polygon use halfplan main contribut effici practic log n algorithm boundarytocsg convers simpl polygon n side also prove nice formulaelig alway exist gener polyhedra three dimens b desir represent compact support effici simul realworld oper object year two differ style represent emerg use nearli geometr model system current exist first style represent describ object collect surfac element form boundari boundari represent effect boundari represent reduc problem repres solid object one repres surfac element somewhat simpler problem sinc set one dimens less second style represent describ solid object construct regular boolean oper simpl primit solid box sphere cylind etc descript refer construct solid geometri represent csg rep resent short style represent advantag disadvantag depend oper wish perform object reader refer one standard text solid model 13 16 review articl 23 detail represent rel merit one look model either camp exampl romulu 16 geomod 25 medusa 17 model boundari persuas padl1 27 padl2 2 gmsolid 1 model csg persuas one nearli alway find provis convert represent import indispens step pose challeng comput problem 1 paper deal certain case boundarytocsg convers problem present effici comput techniqu convers approach base peterson 21 peterson consid problem obtain csg represent simpl polyhedr solid prism pyramid necessarili convex base halfspac support face solid solid effect twodimension object think base prism pyramid third dimens ad simpl manner thu peterson consid problem find csg represent simpl polygon plane relat problem find convex decomposit simpl polygon 4 18 20 26 28 complic argument peterson prove everi simpl polygon plane admit represent boolean formula base halfplan support side formula especi nice support halfplan appear formula exactli henc formula monoton complement need reason focu attent formula call petersonstyl formula monoton formula polygon polyhedron desir make possibl predict small perturb defin halfspac affect overal volum import properti variou applic solid model machin tool machin peg fit hole exampl import know error posit defin halfspac result make peg smaller halfspac negat enter formula perturb defin plane make volum smaller one part object simultan quot requicha 23 rel pauciti known convers algorithm pose signific constraint geometr model system build today larger anoth part paper first give short new proof everi polygon petersonstyl formula section 3 peterson explicitli consid algorithm deriv csg represent polygon naiv implement base proof would requir convers n size number side vertic polygon provid paper effici thetan log n algorithm boundarytocsg convers section 4 regard algorithm major contribut paper algorithm use mani interest techniqu grow field comput geometri 5 22 nevertheless simpl codeit subtleti lie analysi perform implement final section 5 show peterson style formula alway possibl gener polyhedra three dimens discuss number relat issu believ work present paper illustr sever concept techniqu comput geometri use solv problem clear import solid model comput graphic solut obtain mathemat interest practic implement expect see applic comput geometri area futur hope paper motiv research graphic area studi comput geometri techniqu close formul histori problem let p simpl polygon plane context simpl mean nonselfintersect jordan curv theorem polygon subdivid plane two region interior exterior gener identifi polygon interior let us orient edg p interior p lie local right edg give orient edg name call name liter liter also give second mean liter also repres halfplan bound infinit line support edg extend right line speak figur 1 simpl polygon p halfplan support side halfplan support polygon even though p might lie halfplan see figur 1 illustr concept notic point x plane know whether x lie insid outsid halfplan support know fact x insid p fol low region plane subdivid infinit extens side p lie either wholli insid p wholli outsid result must exist boolean formula whose atom liter p express interior p exampl p convex formula simpli liter sinc and or somewhat cumbersom write switch point algebra notat use multipl convent addit convent consid two simpl polygon shown figur 2 formula two polygon uvwx polygon uvwx b associ boolean express tree also shown figur 2 notic petersonstyl formula monoton use liter exactli reader invit point make sure formula inde correct b x z x z x z z x figur 2 formula two polygon complex formula simpl polygon given guiba ramshaw stolfi 9 kineticframework paper style formula two polygon figur 2 uv phi vw phi wx phi xy phi yz phi zu phi denot logic xor overbar denot complement explain 9 type formula pure local depend convexconcav properti success angl polygon rule obviou exampl go around complement second liter correspond vertex convex angl first liter concav angl thu formula exampl polygon although formula style trivial write desir solid model petersonstyl formula use complement xor oper peterson formula difficult deriv captur sens polygon nest within thu global charact view naiv inclusionexclus style formula reflect global structur polygon caution reader howev view peterson formula naiv led us coupl flaw approach problem gener mani boolean formula express simpl polygon term liter prove equival two boolean formula polygon nontrivi exercis reason 2 n primit term one form liter complement allow thetan 2 nonzero sens denot nonempti region plane thu numer ident hold must use prove formula equival decomposit simpl polygon convex piec 4 18 20 26 28 give anoth kind boolean formula polygon one liter halfplan convex polygon depend type decomposit desir convex polygon may may overlap overlap case formula may may contain negat expand liter convex decomposit and halfplan result need petersonstyl formula negat repeat liter halfplan support polygon possibl leav boolean domain allow algebra formula describ characterist function simpl polygon formula pure local sens xor formula given paper franklin 6 franklin describ algebra local formula polyhedra well discuss goe beyond csg represent concern 3 exist monoton formula section prove interior everi simpl polygon p plane express petersonstyl formula monoton boolean formula liter correspond side p appear exactli turn natur work simpl biinfinit polygon chain chain short simpl polygon exampl simpl biinfinit chain c shown figur 3 chain c termin two semiinfinit ray contain arbitrari number finit side simpl biinfinit subdivid plane two region gener orient c consist manner speak region plane lie left c right c respect abus languag refer region halfspac left halfspac semiinfinit ray right halfspac c e f l figur 3 simpl biinfinit chain interior simpl polygon p alway view intersect two chain halfspac let r denot respect leftmost rightmost vertex p figur 4 extend side p incid infinit far left side incid r infinit far right clear thu obtain two simpl biinfinit chain interior p intersect halfspac upper chain halfspac lower chain notic also liter use upper lower chain two halfspac form partit liter p thu suffic prove chain halfspac admit monoton formula use liter exactli l r upper chain lower chain figur 4 interior simpl polygon p chain consist singl line claim trivial formula singl liter defin line chain c one edg prove claim show alway exist vertex v c extend edg incid v infinit far side v extens cross c anywher particular extens creat two new simpl biinfinit chain c 1 c 2 partit liter use c see figur 5 exampl easi see halfspac right say c either intersect union halfspac right c 1 c 2 intersect angl c v select halfspac convex situat figur 5 union angl concav exist desir vertex v rel easi establish two halfspac defin c one bound two semiinfinit ray convex fashion mean look halfspac great distanc xyplan discern semiinfinit ray bound appear convex angl exampl figur 5 right halfspac r c convex one consid convex hull hr intersect halfplan contain r hull unbound polygon region whose vertic vertic c clearli least one vertex c lie hr vertex good vertex break c serv vertex v previou argument reason clear figur 6 vertex extens side incid upon cross c worth remark determin split vertex v manner influenc whether tri obtain boolean formula right halfspac c left halfspac c choic halfspac take convex hull determin sole behavior semiinfinit ray c inde choos wrong concav halfspac convex hull would whole plane would contain vertic summar situat say alway r c chainc chain figur 5 split vertex v chain c r c figur convex hull hr split vertex convex hull polygon chain c definit automat select correct halfspac recurs appli decomposit procedur subchain becom singl biinfinit straight line deriv follow theorem theorem 31 everi halfspac bound simpl biinfinit polygon chain monoton boolean formula use liter chain exactli hold interior finit simpl polygon given polygon chain c one figur 3 certain aspect boolean formula say right halfspac r c immedi deduc inspect exampl follow argument exist boolean formula r use liter exactli fact contain liter order appear along c omit boolean oper parenthes formula would get string liter c order furthermor boolean oper liter easi deduc previou discuss make clear two liter defin convex angl r correspond oper two liter defin concav angl correspond oper thu parenthes omit boolean formula chain c figur 3 look like c e f figur 7 method obtain valid formula polygon preced paragraph show crux difficulti comput boolean formula obtain parenthes equival sequenc appropri split vertic call recurs chain split problem simpl biinfinit chain solut problem topic next section chain figur 3 valid solut conclud notic procedur solv problem may nondeterminist sinc gener choic sever split vertic fact simultan split subset still valid petersonstyl formula simpl polygon obtain fashion formula properti liter appear formula order polygon figur 7 show exampl petersonstyl formula true valid formula polygon shown 4 convers algorithm seen section 3 find monoton boolean formula simpl polygon solv follow recurs chainsplit problem given simpl biinfinit polygon chain least two edg find vertex z convex hull split chain two z extend infin two edg incid z form two new chain z convex hull chain simpl recurs solv problem chain least two edg present log n algorithm solv chainsplit problem n number vertic polygon p algorithm use simpl data structur straightforward implement describ algorithm let us consid naiv altern mani algorithm publish find convex hull simpl polygon linear time 7 15 11 14 24 slight modif algorithm use find vertex hull simpl biinfinit polygon chain use algorithm solv chainsplit problem run time plu time need solv two subproblem recurs worstcas run time tn given recurr 0kn solut b figur 8 two path worstcas bestcas split behavior quadrat behavior occur worst case shown figur 8a recurs step spend linear time split singl edg end path best case hand split divid current path roughli half algorithm run log n time asymptot behavior obtain path shown figur 8b split vertic chosen wise best case naiv algorithm like standard divideand conquer approach step algorithm split current path roughli half gener howev difficult guarante even divis sinc vertic convex hull might extrem close two end path thu avoid quadrat behavior must instead split path use less linear time research solv similar problem make split cost depend size smaller fragment 8 10 run time tn obey recurr 0kn log n method use similar idea split cost olog n plu term linear size one two fragment fragment necessarili smaller two bound size ensur log n run time overal detail argument appear section 45 present algorithm sever step first give definit give overview approach follow inform overview pseudocod descript algorithm section 43 give detail one pseudocod oper section 44 describ data structur use algorithm section 45 conclud present algorithm analyz run time 41 definit shown section 3 find boolean formula p split polygon leftmost rightmost vertic get two path work two path separ denot current path either upper lower u v vertic use notat u v refer subpath u v inclus convex hull set point denot ha use hu v shorthand hu v path u v ju vj edg similarli jhu vj number edg hu v use path u v specifi biinfinit chain extend first last edg let e u edg u v incid u let e u ray obtain extend e u beyond u let e v e v defin similarli u v specifi biinfinit polygon chain obtain replac e u e u e v e v gener arbitrari u v biinfinit chain need simpl algorithm howev guarante simplic biinfinit chain consid assum follow e u e v parallel guarante convex hull biinfinit chain least one vertex slight modif algorithm need ray parallel 42 algorithm section present algorithm recurs split polygon chain first outlin algorithm present pseudocod format subsequ section give detail oper sketch section outlin algorithm given polygon path u v least two edg partit vertex x get two piec u x x v roughli number edg vertex x necessarili vertex hu v partit mere preparatori split u v hull vertex oju vj time comput convex hull u x x v way vertex z u v easili find hx z data structur let us account cost find hx z part cost build hu x hx v detail account appear section 45 next step algorithm locat vertex z convex hull biinfinit chain u v e u e v split u v z vertex z path u x path x v without loss gener let us assum z vertex u x u vertex convex hull z 6 u recurs split u z partit midpoint build convex hull howev key observ much work z v z 6 x alreadi hull hx v easili find hz x data structur hu x thu recurs split z v without recomput convex hull intuit speak full recurs includ convex hull comput piec whose length less half length piec last comput convex hull key algorithm effici avoid recomput convex hull naiv algorithm build hull whose averag size much n2 algorithm also build hull averag size olog n algorithm locat n split vertic olog n time apiec contribut anoth log n term run time two term domin time cost algorithm section 45 show present algorithm formal pseudocod pseudocod repres convex hull hx v use data structur call path hull denot ph x v path hull store vertic hx v linear array algorithm use path hull ph x v produc ph x z effici split vertex z x v algorithm consist two mutual recurs subroutin f p whose name stand full partial routin fu v partit u v x get two equal part build path hull structur call pu x v subroutin pu x v use ph x u ph x v find split vertex z section 43 give detail oper routin split u v z recurs fragment ensur requir path hull built whenev p call start algorithm invok f entir path begin 1 u v singl edg return els begin 2 let x middl vertex u v 3 build ph x u ph x v 4 pu x v pu x v x vertex u v equal u v path hull ph x v ph x u comput begin 5 find vertex z hu v e u e v output z part sequenc split vertic els begin 7 z 2 u x build ph x z ph x u els build ph x z ph x v z vertex u x 8 begin fu z pz x v end els 9 begin pu x z fz v end chainsplit algorithm 43 find split vertex section show use path hull data structur find split vertex z method exploit fact ph x v repres hx v linear array convex hull vertic perform binari search array find split vertex given path u v want find vertex convex hull biinfinit chain u v specifi vertex belong finit convex hull hu v solv problem find vertex hu v guarante belong infinit hull edg infinit hull hu v e u e v slope rang bound slope e u e v vertic hull tangent slope rang simpli find vertex hu v tangent slope rang let u v direct vector ray e u e v e u e v parallel u v defin angular rang less 180 degre defin neg bisector angular rang extrem vertex hu v direct guarante vertex infinit hull 2 see figur 9 exampl figur 9 find extrem vertex direct use binari search two path hull ph u x ph x v find extrem vertex direct compar two vertic pick extrem two break tie consist binari search comparison two extrem vertic say prefer left vertex tie pair vertex find guarante vertex infinit hull 44 implement path hull section describ path hull data structur use previou two section path hull ph x v repres convex hull x v symmetr ar gument implicitli repres hx v 0 vertic v 0 x v repres equal x structur ph x v three essenti properti 1 ph x v repres hx v linear array vertic let v vertex hx v closest v x v array list vertic hx v clockwis order start end v 2 given ph x v transform ph x v 0 vertex v 0 x v destroy ph x v process let vertic v x number success transform ph x v ph x v v sequenc v time proport jx vj 3 ph x v built x v ojx vj time get properti adapt melkman algorithm find convex hull polygon path 15 satisfi requir 2 record action melkman algorithm construct hx v play tape backward avoid comput squar root practic comput bisector angl defin du dv instead find normal du dv point away infinit hull add two get direct strictli normal mani lineartim algorithm propos find convex hull simpl polygon 7 15 11 14 24 algorithm need find vertex hull get start use melkman algorithm requir construct hull polygon path increment process path vertic order step build hull vertic seen far algorithm keep vertic current convex hull doubleend queue dequ dequ list hull vertic clockwis order recent ad hull vertex end dequ let vertic dequ algorithm oper dequ push pop oper specifi end queue bottom top oper algorithm appear assum three point test collinear though restrict easi lift get first three vertic path function nextvertex put dequ correct order v nextvertex return new vertex v outsid angl begin v left gammagammagamma v b v b1 popv b bottom v left gammagammagamma v melkman convex hull algorithm figur lie shade sector sketch proof correct melkman give full proof 15 first consid case vertex v discard happen v insid angl see figur 10 know v b1 connect v tgamma1 polygon path v connect v b polygon path two path intersect v must lie insid current hull v discard lie outsid current hull algorithm pop hull vertic get endpoint tangent v current hull algorithm linear oper path n vertic 2n push pop use algorithm build array represent hull algorithm n push either end dequ implement dequ middl part array size 2n push pop increment decrement array indic end queue push write new element pop read one result dequ contain vertic convex hull contigu chunk array describ far array data structur path hull properti 1 3 obtain properti 2 algorithm build hx v start x work toward v intermedi step produc hx v 0 everi vertex v 0 x v need abl reconstruct intermedi result add code algorithm creat transcript oper perform record vertic push pop step structur ph x v store dequ repres hx v also transcript oper need creat dequ scratch reconstruct ph x v 0 ph x v read transcript revers order perform invers record oper push pop vice versa dequ repres hx v 0 throw away part transcript read ph x v 0 store transcript oper need creat discard everi step read look step transcript playback therefor reconstruct intermedi result take time proport origin cost find ph x v complet proof path hull data structur three requir properti 45 analyz run time section analyz run time chainsplit algorithm given page 10 analysi use credit scheme call f p given number credit pay time use bodi recurs call give log n credit first call f show call enough credit pay work recurs call begin analysi prove f p call time everi call pu x v split u v two nontrivi subpath everi call fu v u v one edg pass u v p initi path split time recurs must call altogeth much work done call fu v exclus recurs call assum vertic store array therefor line 2 f take constant time line 3 step f take nonconst time shown section 44 line 3 take oju vj time defin valu credit say call fu v need ju vj creditson credit per edg u vto pay work exclus call p constanttim step f take time altogeth henc domin rest run time call pu x v account work line 5 7 cost line 5 domin two binari search take olog n time line 5 therefor take log n time whole cours algorithm section 44 show cost build ph x z line 7 account part construct cost path hull ph x z deriv thu ignor work done line 7 p cost domin line 3 f complet analysi run time must bound cost execut line 3 f singl call fu v line 3 use ju vj credit sum credit use line 3 proport time spent execut line give ndlog 2 ne credit first call f show enough pay execut line 3 use follow two invari proof 1 call fu v given least mdlog 2 credit pay recurs call 2 call pu x v given least l pay recurs call lemma 41 call f p given credit accord invari 1 2 pay execut line 3 explicitli recurs call proof let l r defin proof induct call fu v credit need none sinc reach line 3 call p call fu v 1 get least mdlog 2 credit spend execut line 3 mdlog 2 m2e pass call pu x v larger l r dm2e dlog 2 dm2ee call get least mdlog 2 credit requir invari 2 call pu x v split u v two path u z z v b edg respect call pu x v divid credit recurs call evenli accord subpath size z x two call f get least ldlog 2 maxl ldlog 2 le rdlog 2 maxl rdlog 2 credit satisfi invari 1 z 6 x without loss gener assum z belong u x line 8 execut case symmetr call fu z get least adlog 2 maxl adlog 2 ae requir call pz x v get least bdlog 2 maxl bdlog 2 maxb gamma requir invari 2 complet proof altogeth call f p take log n time plu time spent build path hull line 3 preced lemma show execut line 3 take log n time henc entir algorithm run log n time 46 implement algorithm describ section implement implement gener algorithm far describ correctli handl case collinear vertic convex hull parallel ray biinfinit chain improv difficult handl collinear vertic requir two chang program detect merg consecut collinear polygon edg report user loop test melkman algorithm chang v left v left line support chain parallel infinit ray convex hull may bound two infinit line even though hull vertic chain nevertheless valid split vertic hull program find split vertex search extrem vertex direct perpendicular infinit ray use special case avoid select u v input program take list polygon vertic order either clockwis counterclockwis specifi xy coordin pair output program produc figur display polygon list split vertic order comput also produc correctli parenthes boolean formula input polygon program appli polygon shown figur 11 produc follow slightli abbrevi output main call f 817 p split vertex 16 15 9 10 13 11 main call f 1725 08 p split vertex 18 19 20 0 25 24 boolean formula formula number refer edg join vertex vertex n 26 program produc graphic well textual output marc h brown creat graphic display use algorithm anim system develop dec system research center brown thesi 3 provid inform algorithm anim anim show multipl color view state comput updat program run one view show input polygon highlight chain convex hull split vertic algorithm oper anoth view pictori display formula subchain boolean combin halfplan view show increment construct boolean formula pars tree view emphas differ aspect algorithm togeth illumin mani import featur titl page report show blackandwhit snapshot anim algorithm run small exampl snapshot featur three view algorithm geometri view show polygon snapshot view highlight initi split vertic formula view show develop boolean formula time csg pars tree view show pars tree correspond formula node tree display region correspond subtre root node 5 formula polyhedra shown interior simpl polygon repres petersonstyl formula monoton boolean formula use liter would like find formula polyhedron p 3space liter halfspac bound plane support face section prove polyhedra petersonstyl formula figur 12 illustr simplici polyhedron face triangl eight vertic twelv face six face label six unlabel face lie convex hull p edg c c 0 convex angl halfspac defin face b intersect face 0 b 0 similarli halfspac defin 0 b 0 intersect face b establish coupl lemma prove p petersonstyl formula assum one deriv contradict begin observ collect plane divid space sever convex region mathemat literatur divis usual call arrang 5 polyhedron p csg represent term halfspac specifi subset plane bound halfspac deriv represent portion p insid convex region determin subset precis let f boolean formula whose liter halfspac p think f express tree tree f node b denot lowest common ancestor b f lca f b let h hm subset halfspac defin face p point space assign string ff 2 f0 1g ith charact ff 1 point halfspac h point assign string ff said region r ff use f j ff denot formula obtain set h simplifi result use algebra rule express tree f j ff inherit sever import properti express tree f lemma 51 let f formula use halfspac h other let ff string f0 1g deriv formula f j ff follow three properti 1 f monoton f j ff similarli f petersonstyl f j ff 2 express tree f j ff node b c b tree f c figur 12 two view simplici polyhedron petersonstyl formula 3 express tree f j ff contain node c depth k tree f contain node c depth k proof three properti maintain rule form express tree f j ff simplifi express tree f next lemma show interact region r ff boolean formula f j ff lemma 52 polyhedron p formula f use halfspac h other string ff 2 f0 1g portion p insid region r ff describ formula f j ff proof statement simpli say formula f f j ff agre insid region r ff follow definit f j ff fact simplif rule chang valu formula two corollari lemma 52 give us constraint formula polyhedron base edg face corollari discuss follow add argument formula f j ff emphas halfspac fix string ff corollari 53 let p polyhedron petersonstyl formula f face b p meet edg p oper f lowest common ancestor b lca f b b meet convex angl hm halfspac p except two defin b choos interior point edg form face b let ff string twovari formula f j ff ab must describ polyhedron vicin edg lemma 512 lca f b b meet convex angl corollari 54 let p polyhedron petersonstyl formula f use halfspac b halfspac defin face b intersect face point string ff f j ff proof twovari formula f j ff ab must describ face insid outsid halfspac b b appear formula readi look polyhedron p figur 12 suppos p peterson style formula f formula f j 111111 abca describ region insid unlabel face look constraint formula deriv contradict consid three face b c corollari 53 know lca f b lca f 54 appli face c impli formula describ three face string ff 1 appropri fix halfspac except b c similarli formula describ 0 b 0 c 0 consid region insid unlabel halfspac outsid c c 0 portion p within region describ karnaugh map 12 appear four plane cut space fifteen region sinc want monoton forc us make 1 examin petersonstyl formula b 0 b 0 reveal formula map order combin formula 1 2 3 singl formula six variabl must determin oper repeat three formula knew formula 1 2 oper lca f b lca f andsnow know distinct and lca f lca f b lca f or first two formula distinct descend distinct and final lemma 513 formula 3 differ or nest deepli and thu five oper formula six label halfspac appear 3 use nest depth oper know formula look like 22 fill halfspac name give formula portion p insid unlabel face notic howev formula lca c c 0 thu lca f c c contradict corollari 53 formula repres portion p insid convex hull p contradict prove p petersonstyl formula 6 close observ though previou section prove polyhedra petersonstyl formula may still case interior polyhedron n face repres formula use liter trivial upper bound size formula 3 fact interior set cell form collect n plane describ formula repres convex cell bound plane or cell represent togeth size formula worst total number side cell form n plane known 3 5 recent work paterson yao improv upper bound size formula method like trivial one slice polyhedron convex polyhedra cut along plane support face cut along plane particular order cut subpolyhedron plane defin face lie subpolyhedron boundari algorithm produc convex piec whose total number side 2 formula correspond decomposit size 2 neither formula describ monoton everi polyhedron monoton formula howev formula cell trivial decomposit halfspac contain cell cell represent formula use negationsto see defin polyhedron notic first everi point polyhedron cell second move cell polyhedron point outsid polyhedron must cross halfspac first leav polyhedron thu represent interior cell contain point outsid polygon impli formula evalu fals exterior point show monoton formula size 4 would interest character polyhedra repres peterson style formula peterson 21 show represent polygon give formula extrus pyramid would like extend class also consid look formula polygon curv edg edg polygon piec biinfinit curv intersect edg defin halfspac curv boundaryperhap repres polygon formula halfspac suppos restrict curv two intersect one point pseudolin condit prove alway polygon vertex v extens infin v two edg adjac v never intersect boundari polygon sinc vertex v use split vertex polygon petersonstyl formula curv allow intersect one point may imposs formula repres polygon without repres area plane exampl two oval intersect four point region insid first oval outsid second disconnect boolean formula repres one connect compon without includ unless allow introduc auxiliari curv acknowledg thank p peterson jorg stolfi help discuss polyhedra also thank cynthia hibbard martin abadi care read manuscript r interact model design analysi solid algorithm anim comput geometri convex algorithm combinatori geometri polygon properti calcul vertex neighborhood find convex hull simpl polygon time algorithm visibl shortest path problem insid triangul simpl polygon kinet framework comput geometri sort jordan sequenc linear time find convex hull simpl polygon digit logic comput design introduct solid model linear algorithm find convex hull simpl polygon geometr model solid model parametr design medusa system art galleri theorem algorithm binari partit applic hiddensurfac remov solid model analysi set pattern halfspac represent extrus comput geometri represent rigid solid theori convex hull piecewisesmooth jordan curv ration bspline curv surfac represent convex decomposit simpl polygon padl102 system defin display solid object graphic input boolean solid model tr geometr model comput geometri introduct algorithm combinatori geometri onlin construct convex hull simpl polylin convex hull piecewisesmooth jordan curv introduct solid model art galleri theorem algorithm polygon properti calcul vertex neighborhood sort jordan sequenc linear time represent rigid solid theori method system convex decomposit simpl polygon digit logic comput design ctr michael paterson f franc yao optim binari space partit orthogon object proceed first annual acmsiam symposium discret algorithm p100106 januari 2224 1990 san francisco california unit state marc h brown john hershberg color sound algorithm anim comput v25 n12 p5263 decemb 1992 paterson f f yao binari partit applic hidden surfac remov solid model proceed fifth annual symposium comput geometri p2332 june 0507 1989 saarbruchen west germani j friedman j hershberg j snoeyink compliant motion simpl polygon proceed fifth annual symposium comput geometri p175186 june 0507 1989 saarbruchen west germani tamal k dey triangul csg represent polyhedra arbitrari genu proceed seventh annual symposium comput geometri p364371 june 1012 1991 north conway new hampshir unit state j snoeyink j hershberg sweep arrang curv proceed fifth annual symposium comput geometri p354363 june 0507 1989 saarbruchen west germani michael goodrich appli parallel process techniqu classif problem construct solid geometri proceed first annual acmsiam symposium discret algorithm p118128 januari 2224 1990 san francisco california unit state