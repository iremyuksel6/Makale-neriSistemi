fast flexibl word search compress text present fast compress techniqu natur languag text novelti 1 decompress arbitrari portion text done effici 2 exact search word phrase done compress text directli use known sequenti patternmatch algorithm 3 wordbas approxim extend search also done effici without decod compress scheme use semistat wordbas model huffman code code alphabet byteori rather bitori compress typic english text 30 origin size 40 35 compress gzip respect compress time close compress approxim half time gzip decompress time lower gzip one third compress present three algorithm search compress text allow larg number variat basic word phrase search capabl set charact arbitrari regular express approxim match separ stopword discard search time without significantli increas cost search simpl word experi show run algorithm compress text twice fast run best exist softwar uncompress version text search complex approxim pattern algorithm 8 time faster search uncompress text also discuss impact techniqu invert file point logic block argu possibl keep text compress time decompress display purpos b introduct paper present effici compress techniqu natur languag text allow fast flexibl search word phrase search simpl word phrase pattern compress search proce without decod compress text search word phrase match complex express andor allow error done compress text almost cost simpl search reduc size compress text make overal search time much smaller plain uncompress text compress decompress speed amount compress achiev good compar well known algorithm literatur ziv lempel 1977 ziv lempel 1978 compress scheme present paper variant wordbas huffman code bentley et al 1986 moffat 1989 witten et al 1999 huffman codeword assign text word sequenc whole byte huffman tree degre either 128 call tag huffman code 256 call plain huffman code instead 2 tag huffman code byte use 7 bit huffman code 1 bit signal begin codeword show later use byte instead bit significantli degrad amount compress practic byte process much faster bit process bit shift mask oper necessari compress decompress search time decompress start point compress file particular compress scheme allow fast decompress fragment contain search result import featur inform retriev system notic compress scheme design larg natur languag text contain least 1 megabyt achiev attract amount compress also search algorithm word orient pattern sequenc element match sequenc text word pattern element simpl word complex express search exact allow error match context present three search algorithm first algorithm base tag huffman code compress pattern search compress pattern directli compress text search start point compress text byte start codeword mark highest bit set 1 convent pattern match algorithm use exact search multipattern match algorithm use search allow error explain later second algorithm search plain huffman code base wordori shiftor algorithm baezay gonnet 1992 case com fast flexibl word search compress text delta 3 pression obtain better tag huffman code search algorithm need special mark compress text third algorithm combin previou one pattern compress directli search text first algorithm base tag huffman code howev work plain huffman code signal codeword begin therefor second algorithm use check surround area order verifi valid match found three algorithm allow larg number variat basic word phrase search capabl group gener name extend pattern result class charact includ charact rang com plement wild card arbitrari regular express effici search exactli allow error occurr separ common word stopword discard without significantli increas search cost algorithm also allow approxim phrase match abl search compress text approxim occurr phrase pattern allow insert delet replac word approxim phrase match captur differ write style therefor improv qualiti answer queri algorithm abl perform type search cost case extrem difficult uncompress search techniqu use speed sequenti search also use improv index scheme combin invert file sequenti search like glimps manber wu 1993 fact techniqu present nice integr invert file technolog obtain lower spaceoverhead index moreov argu favor keep text compress time text compress consid extra effort anymor algorithm present paper use softwar packag call cgrep cgrep exact approxim compress match tool larg text collect softwar avail ftpdccufmgbrlatincgrep prototyp preliminari partial version articl appear moura et al 1998a moura et al 1998b paper organ follow section 2 discuss basic concept present relat work found literatur section 3 present compress decompress method follow analyt experiment result section 4 show perform exact extend search tag huffman compress text section 5 show perform exact extend search plain huffman compress text section 6 present experiment result search perform final section 7 present conclus suggest futur work 2 basic relat work text compress exploit redund text repres less space bell et al 1990 paper denot uncompress file length byte u compress file denot z length byte n compress ratio use paper denot size compress file percentag uncompress file ie 100 theta nu mani exist compress techniqu known literatur emphas two relev paper first techniqu interest de moura g navarro n ziviani r baezay zivlempel famili compress algorithm repeat substr arbitrari length identifi text repetit replac pointer previou occurr method possibl achiev u even best case second techniqu call zeroord substitut method text split symbol symbol repres uniqu codeword compress achiev assign shorter codeword frequent symbol best known techniqu kind minimum redund code also call huffman code huffman 1952 huffman code codeword symbol sequenc bit codeword prefix anoth codeword total length compress file minim zeroord substitut method even though constant smaller 1 moreov thetau symbol text u charact byte thetan codeword compress text n byte work exampl use ou denot number word compress match problem first defin work amir benson amir benson 1992 task perform string match compress text without decompress given text correspond compress string z uncompress pattern p length compress match problem consist find occurr p use p z naiv algorithm first decompress string z perform standard string match take time oum optim algorithm take worstcas amir et al 1996 new criterion call extra space evalu compress match algorithm introduc accord extra space criterion algorithm use extra space optim om addit nlength compress file first compress pattern match algorithm dealt zivlempel compress text farach thorup 1995 present compress match algorithm lz1 classic compress scheme ziv lempel 1976 run log 2 unm time amir et al 1996 compress match algorithm lz78 compress scheme present find first occurr space log mm time space extens amir et al 1996 multipattern search present kida et al 1998 togeth first experiment result area new practic result appear navarro raffinot 1999 present gener scheme search zivlempel compress text simpl extend pattern implement particular case lz77 lz78 new variant propos competit conveni search purpos similar result restrict lzw format independ found present kida et al 1999 final kida et al 1999 gener exist algorithm nice unifi concept gener framework empir result obtain roughli coincid gener figur search zivlempel compress text take half time decompress text search howev compress search twice slow search uncompress version text search algorithm use text kept compress anyway give extra reason compress compress ratio 30 40 practic fast flexibl word search compress text delta 5 text compress use zivlempel second paradigm zeroord substitut method explain model therefor theoret definit compress pattern match make littl sens base distinguish ou time goal well exist approach practic search directli compress text faster uncompress text take advantag smaller size first text compress scheme allow direct search compress text propos manber manber 1997 approach pack pair frequent charact singl byte lead compress ratio approxim 70 typic text file particularli success trend insid zeroord substitut method huffman code text word consid symbol compos text semistat version model use frequenc text symbol learn first pass text text code second pass tabl codeword assign symbol store togeth compress file model better suit typic inform retriev scenario larg text databas mainli data structur share vocabulari text almost symbol tabl compressor local decompress effici better compress faster search algorithm obtain possibl search faster compress uncompress text need two pass text normal alreadi present index text inform retriev applic overhead store text vocabulari neglig larg text hand approach limit wordbas search larg natur languag text unlik zivlempel approach paradigm belong turpin moffat 1997 work develop independ work paper present algorithm search text compress wordbas huffman method allow exact search oneword pat tern idea search compress pattern codeword compress text work base similar idea use byte instead bit code alphabet use byte present small loss compress ratio gain decompress search effici larg also extend search capabl phrase class charact wild card regular express exactli allow error also call approxim string match approxim string match problem find substr text databas given distanc k less pattern p distanc two string minimum number insert delet substitut singl charact string need make equal case correspond classic exact match problem approxim string match particularli interest case extend pattern search techniqu use recov type spell optic charact recognit error problem search pattern compress text allow error open problem amir et al 1996 partial solv problem sinc allow approxim word search find text word match pattern word k error note limit 6 delta e de moura g navarro n ziviani r baezay statement singl error insert space middl flower result sequenc two word flo wer none retriev pattern flower allow one error similar problem appear space delet convert mani flower singl word best known softwar search uncompress text without error agrep wu manber 1992 show compress pattern match algorithm compar favor agrep 8 time faster depend type search pattern cours agrep limit word search need compress file prior search howev last argument fact use direct argu thank search algorithm new techniqu updat compress text text file kept compress time decompress display purpos lead economi space improv overal effici experiment result paper use natur languag text trec collect harman 1995 chosen follow text ap newswir 1989 doe short abstract doe public fr feder regist 1989 wsj wall street journal 1987 1988 1989 ziff articl comput select disk ziffdavi publish tabl 1 present statist five text file consid word contigu maxim string charact set fa z z 0 9g test run sun sparcstat 4 96 megabyt ram run solari 251 file text vocabulari vocabtext size byte word size byte word size word ap 237766005 38977670 1564050 209272 065 053 doe 181871525 28505125 1949140 235133 107 082 wsj 262757554 42710250 1549131 208005 059 048 ziff 242660178 39675248 1826349 255107 075 064 tabl 1 statist text file use trec collect 3 compress scheme gener compress method typic adapt allow compress carri one pass need keep separ paramet use decompress time howev natur languag text use fulltext retriev context adapt model effect compress techniqu follow moffat 1989 witten et al 1999 chose use wordbas semistat model huffman code huffman 1952 semistat model encod make first pass text obtain frequenc differ text word perform actual compress second pass one strong reason use combin model code data structur associ includ list word compos vocabulari text use deriv compress match algorithm import fast flexibl word search compress text delta 7 rose00000 rose rose rose origin text compress text fig 1 canon tree compress exampl use binari huffman code spaceless word reason text retriev applic decompress faster semistat model compress text access randomli without decompress whole text adapt method furthermor previou experi shown wordbas method give good compress ratio natur languag text bentley et al 1986 moffat 1989 horspool cormack 1992 sinc text compos word also separ model must also chosen moffat 1989 bell et al 1993 two differ alphabet use one word one separ sinc strict altern properti hold confus alphabet use known text start word separ use variant method deal word separ call spaceless word word follow space encod word encod word separ decod time decod word assum space follow except next symbol correspond separ case altern properti hold singl code alphabet use idea firstli present moura et al 1997 shown spaceless word model achiev slightli better compress ratio figur 1 present exampl compress use huffman code spaceless word method set symbol case fa rose tg whose frequenc 2 1 1 1 3 1 respect number huffman tree given probabl distribut quit larg prefer choic applic canon tree defin schwartz kallick schwartz kallick 1964 huffman tree figur 1 canon tree allow effici decod time less memori requir mani properti canon code mention hirschberg lelew 1990 zobel moffat 1995 witten et al 1999 31 byteori huffman code origin method propos huffman huffman 1952 mostli use binari code symbol input stream code sequenc bit work huffman codeword assign text word sequenc whole byte huffman tree degre either 128 case eighth de moura g navarro n ziviani r baezay bit use special mark aid search 256 instead 2 case except otherwis state consid word separ text symbol separ codifi use spaceless word model canon tree use symbol tabl vocabulari differ text word separ kept compress use classic binari huffman code charact defin differ type huffman code use work adher point binari huffman code sequenc bit assign word separ byte huffman code sequenc byte assign word separ encompass two code scheme follow plain huffman code byte huffman code bit byte use huffman tree degre 256 tag huffman code byte huffman code 7 lower order bit byte use huffman tree degre 128 highest bit byte use follow first byte codeword highest bit 1 byte highest bit 0 use direct search compress text explain later techniqu effici encod decod mention zobel moffat 1995 easili extend case show later experiment result section signific degrad compress ratio experienc use byte instead bit hand decompress byte huffman code faster decompress binari huffman code practic byte process much faster bit process bit shift mask oper necessari decod time search time 32 compress ratio section consid compress ratio achiev scheme first concern huffman code need store togeth compress file tabl text symbol use word compress tabl precis vocabulari text set differ text word tabl principl larg ruin overal compress ratio howev case larg text heap law heap 1978 empir law wide accept inform retriev establish natur languag text ou word vocabulari size typic fi 04 06 araujo et al 1997 moura et al 1997 therefor v close u henc larg text overhead store vocabulari minim hand store vocabulari repres import overhead text small chose compress vocabulari symbol tabl use classic binari huffman charact shown figur 2 fact make compressor better gzip file least 1 megabyt instead fast flexibl word search compress text compress file sizemegabyt plain huffman uncompress vocabulari plain huffmancompress vocabulari compress gzip fig 2 compress ratio wsj file compress gzip compress plain huffman without compress vocabulari need decompress vocabulari search time pose minim process overhead even complet compens reduc io second concern whether compress ratio worsen text grow sinc model number symbol v grow albeit sublinearli text grow could possibl averag length code symbol grow key prove happen show distribut word text bias enough entropi 2 o1 show huffman code put constant overhead entropi final step done dari huffman code includ 7bit tag 8bit case use zipf law zipf 1949 model frequenc word appear natur languag text law wide accept inform retriev state order v word natur languag text decreas order probabl probabl first word time probabl ith word everi mean probabl ith word 1j constant depend text zipf law come two flavor simplifi form assum case v although simplifi form popular simpler handl mathemat follow well real distribut natur languag text strong evid real text fact bias vocabulari perform araujo et al 1997 thorough set experi trec collect find valu roughli 15 20 depend text give experiment evid favor gener zipf law ie 1 assumpt 1 reason zivlempel compressor improv larger text part search repetit rel short window text alreadi seen henc prevent exploit alreadi process part text estim zeroord wordbas binari entropi text gamma rel frequenc ith vocabulari word simplic call measur entropi paper de moura g navarro n ziviani r baezay test distribut separ well find also follow reason well zipf distribut moreov distribut even bias word closer 19 therefor assum word sinc analog proof hold separ hand refin version zipf law exist mandelbrot distribut gonnet baezay 1991 law tri improv fit zipf law frequent valu howev mathemat harder handl alter asymptot result follow analyz entropi ed distribut vocabulari v word digit use code alphabet follow log dp log bound summat integr allow us conclud ed o1 log h also o1 use simpl zipf law instead result would ed olog v ie averag codeword length would grow text grow fact happen 1 gigabyt text independ experiment confirm valid gener zipf law simpl version consid overhead huffman code entropi huffman code optim inabl repres fraction part bit symbol probabl p use exactli log 2 1p bit repres symbol possibl p power 12 effect get wors instead bit use number base give upper bound compress ineffici involv worst case huffman encod symbol probabl p use dlog digit worst case symbol encod use blog digit therefor worst case averag length codeword compress text show regardless probabl distribut spend one extra digit per codeword due round overhead instanc use byte spend one byte per word prove compress ratio degrad text grow even number differ word separ increas fast flexibl word search compress text delta 11 tabl 2 show entropi compress ratio achiev binari huffman plain huffman tag huffman gnu gzip unix compress file trec collect seen compress ratio degrad slightli use byte instead bit case still gzip except fr collect includ larg part nonnatur languag chemic formula compress ratio tag huffman code approxim 3 point ie 3 u plain huffman come extra space alloc tag bit byte method file ap wsj doe ziff fr entropi 2620 2600 2460 2750 2530 binari huffman 2741 2713 2625 2893 2688 plain huffman 3116 3060 3019 3290 3014 tag huffman 3412 3370 3274 3608 3353 gzip 3856 3753 3494 3412 2775 compress 4380 4294 4108 4156 3854 tabl 2 compress ratio achiev differ compress scheme entropi refer optim code space use store vocabulari includ huffman compress ratio 33 compress decompress perform final consid section time taken compress decompress text compress text first pass perform order collect vocabulari frequenc store trie data structur ou total worst case time achiev sinc trie requir non practic amount memori use hash tabl perform step implement averag time collect vocabulari use hash tabl ou vocabulari sort word frequenc ov log v cost case ou fi log sort gener canon huffman code vocabulari word advantag use canon tree space econom canon tree repres use two small tabl size olog v previou work shown decod use canon code reduc decompress time hirschberg lelew 1990 zobel moffat 1995 turpin moffat 1997 canon code construct done ov cost without use extra space use algorithm describ moffat katajainen 1995 final file compress gener codeword text word ou decompress start read vocabulari memori ov cost well canon huffman tree olog v cost word compress text decod output written disk total time ou tabl 3 show compress decompress time achiev binari huffman plain huffman tag huffman compress gzip file trec collect compress 23 time faster gzip 17 slower de moura g navarro n ziviani r baezay compress achiev much wors compress ratio decompress signific improv use byte instead bit bit shift mask necessari use byte 20 faster gzip three time faster compress method compress decompress ap wsj doe ziff fr ap wsj doe ziff fr binari huff 490 526 360 518 440 170 185 121 174 151 plain huff 487 520 356 515 435 106 117 81 112 96 tag huff 491 534 364 527 446 112 121 85 116 99 compress 422 456 308 417 375 367 407 273 373 331 gzip 1333 1526 970 1339 1048 147 161 105 139 111 tabl 3 compress decompress time elaps second whole collect achiev differ compress scheme main disadvantag wordbas huffman method space requir compress decompress text compress time need vocabulari look tabl codeword use speed compress huffman tree construct without extra space use inplac algorithm moffat katajainen 1995 milidiu et al 1998 time need store vocabulari main memori therefor space complex method ou fi method use gzip compress constant space complex amount memori use configur method memorydemand compress gzip constitut drawback applic exampl method need 47 megabyt memori compress 37 megabyt memori decompress wsj file gzip compress need 1 megabyt either compress decompress file howev text search system interest advantag method ie allow effici exact approxim search compress text fast decompress fragment import space requir 4 search tag huffman compress text first search scheme work tag huffman compress text recal tag huffman compress use one bit byte compress text mark begin codeword gener huffman code prefix free code mean codeword prefix anoth codeword featur suffici decod compress text suffici allow direct search compress word due possibl fals match see problem consid word ghost exampl present figur 3 although word present compress text codeword fals match avoid compress text codeword prefix suffix anoth codeword add featur tag huffman code scheme set 1 highest bit first byte codeword bit fast flexibl word search compress text delta 13 real word word ghost compress text origin text code ghost real word fig 3 exampl codeword word present compress text word present origin text codeword shown decim notat tag sinc compress pattern match first byte first byte codeword text know possibl match correctli align permit use convent text search algorithm directli compress text provid search whole word gener abl search phrase pattern phrase pattern sequenc element element either simpl word extend pattern extend pattern match singl text word includ abil set charact posit unbound number wild card arbitrari regular express approxim search combin appendix give detail descript pattern support system search pattern compress text made two phase first phase compress pattern use structur use compress text second phase search compress pattern exact pattern search first phase gener uniqu pattern search convent search algorithm approxim extend pattern search first phase gener possibl compress codeword match origin pattern vocabulari compress text last case use multipattern algorithm search text explain method detail show extend phrase 41 preprocess phase compress pattern perform exact search similar code phase huffman compress search element pattern huffman vocabulari gener compress codeword element pattern vocabulari occurr pattern text approxim extend search need gener compress codeword symbol huffman vocabulari match element pattern element pattern make list compress codeword vocabulari symbol match done sequenti travers vocabulari collect word match pattern techniqu alreadi use block address indic uncompress text manber wu 1993 araujo et al 1997 baezay navarro 1997 sinc vocabulari small compar text size sequenti search time vocabulari neglig addit cost allow complex queri difficult achiev onlin plain text search sinc take advantag knowledg vocabulari store part huffman tree 14 delta e de moura g navarro n ziviani r baezay depend pattern complex use two differ algorithm search vocabulari phrase pattern allow k error k 0 contain set charact posit use algorithm present baezay navarro 1999 v size vocabulari w length word w algorithm run ov w time search w complic pattern allow error k 0 contain union wild card regular express use algorithm present wu manber 1992 run okv time search w simpl word search ow time use eg hash tabl 42 search phase exact search obtain compress codeword sequenc byte choos known algorithm process search experiment result present paper use sunday sunday 1990 algorithm boyermoor famili good practic perform case approxim extend search convert problem exact multipattern search problem obtain set codeword match pattern use multipattern search algorithm propos baezay navarro baeza yate navarro 1999 algorithm extens sunday algorithm work well number pattern search larg case larg number pattern search best option would ahocorasick aho corasick 1975 allow search time independ number pattern assum compress codeword pattern length c boyermoor type algorithm inspect nc byte compress text best case best case close averag case alphabet larg size 128 256 uniformli distribut compar small pattern length c typic 3 4 hand best case uncompress text search inspect um charact sinc compress ratio nu roughli hold pattern averag nu cm therefor number inspect byte compress uncompress text roughli howev three reason make compress search faster first number byte read disk n smaller u second compress search best case close averag case true search uncompress text third argument say cm close nu assum search pattern taken randomli text practic model select randomli vocabulari match realiti much better model yield larger c valu averag improv search time compress text search phrase pattern complic simpl case aris phrase sequenc simpl word found even separ case concaten codeword word separ phrase search result singl pattern hand want disregard exact separ phrase element simpl word appli differ techniqu gener case origin pattern repres sequenc list compress codeword match ith element origin fast flexibl word search compress text delta 15 pattern start search compress text choos one list use algorithm oneword pattern find occurr text occurr one element first list search found use list verifi occurr entir pattern text posit choic first list search fundament perform algorithm heurist choos element phrase maxim minim length codeword l choic come directli cost search list pattern longer codeword less probabl occurr text translat less verif occurr element list moreov text search algorithm work faster longer pattern type heurist also common use invert file solv conjunct queri baezay ribeironeto 1999 witten et al 1999 particularli bad case filter aris search long phrase form common word problem get wors error allow match search even less stringent pattern gener uniform cost solut type search depict next section 5 search plain huffman compress text disadvantag first search scheme describ loss compress due extra bit use allow direct search second disadvantag filter may effect type queri show search plain huffman compress text code special mark give better compress ratio tag huffman scheme also show much flexibl search carri eleg uniform way present two distinct search algorithm first one call plain filterless automatonbas algorithm elegantli handl possibl complex case may aris albeit slower previou scheme second call plain filter combin algorithm tri direct pattern match plain huffman compress text use automatonbas algorithm verif engin fals match 51 automatonbas algorithm previou scheme make heavi use vocabulari text avail part huffman code data huffman tree regard trie leav word vocabulari path root leaf spell compress codeword shown left part figur 4 word rose first explain solv exact word phrase extend idea extend approxim search pattern preprocess consist search vocabulari mark correspond entri gener howev pattern phrase preprocess phrase pattern simpli perform procedur word pattern word vocabulari set bit mask indic element pattern word match figur 4 show mark phrase pattern rose 01 indic word match second element pattern 10 de moura g navarro n ziviani r baezayates47 131 huffman tree vocabulari rose 10mark nondeterminist search automaton fig 4 search scheme pattern rose exampl word rose threebyt codeword 47 131 8 nondeterminist finit automaton stand 0 1 indic word rose match first element pattern word 00 sinc match nowher word pattern found vocabulari immedi know pattern text next scan compress text byte byte time travers huffman tree downward decompress text 3 new symbol occur whenev reach leaf huffman tree word symbol obtain send correspond bit mask nondeterminist automaton illustr figur 4 automaton allow move state state 1 whenev ith word pattern recogn notic automaton depend number word phrase queri reach leaf return root tree proceed compress text automaton simul shiftor algorithm baezay gonnet 1992 perform one transit automaton text word shift algorithm simul effici nondeterminist automaton use two oper per transit 32bit architectur search phrase element use singl comput word bit mask longer phrase use mani comput word need complex pattern preprocess phase correspond sequenti search vocabulari mark word match pattern search symbol vocabulari use algorithm describ section 41 correspond mask bit match word vocabulari set indic posit pattern figur 5 illustr phase pattern ro rose allow 1 error per word ro mean word start ro instanc word rose vocabulari match pattern posit 1 2 compress text scan phase chang cost preprocess phase section 41 differ mark bit mask instead collect match word search phase take time final show deal separ stopword onlin search 3 howev much faster decompress gener uncompress text fast flexibl word search compress text delta 1747 131 huffman tree vocabulari rose110100row road mark nondeterminist search automaton fig 5 gener search scheme phrase ro rose allow 1 error nondeterminist finit automaton stand 0 1 ing algorithm effici deal problem match phrase disregard separ among word eg two space word instead one happen stopword usual disregard search index text difficult disregard onlin search compress scheme know element vocabulari correspond fact separ user defin compress even search time correspond stopword therefor mark leav huffman tree correspond separ stopword search algorithm ignor produc symbol arriv leav therefor disregard separ stopword sequenc search pattern neglig cost cours remov sequenc compress time want abl recov origin text 52 filter algorithm show section search plain huffman compress text improv upon automatonbas algorithm describ previou section central idea search compress pattern directli text done tag huffman code scheme present section 4 everi time match found compress text must verifi whether match inde correspond word mandatori due possibl fals match illustr figur 3 section 4 verif process consist appli automatonbas algorithm region possibl match found avoid process text begin make verif divid text small block size compress time codeword align begin block codeword cross block boundari therefor need run basic algorithm begin block contain match block size must small enough slower basic algorithm use small area larg enough extra space lost block boundari signific ran number experi wsj file arriv 256byte block good timespac tradeoff extens algorithm complex queri phrase follow idea search section 4 use automatonbas algorithm check de moura g navarro n ziviani r baezay error error fig 6 nondeterminist automaton approxim phrase search 4 word 2 error compress text dash transit flow without consum text input vertic diagon unlabel transit accept bit mask stand 0 1 match case howev use multipattern search perform may degrad reason section 4 also possibl verifi mani text block number match word vocabulari larg effici filter may degrad use scheme filter might prefer 53 even flexibl pattern match shiftor algorithm much search simpl sequenc element instanc enhanc search regular express allow error match flexibl pattern wu manber 1992 baezay navarro 1999 power type search basi softwar agrep wu manber 1992 new hand choic appear use abil wordbas compress text scenario consid automaton figur 6 search compress text phrase four word allow two insert delet replac word apart well known horizont transit match word vertic transit insert new word pattern diagon transit replac word dash diagon transit delet word pattern automaton effici simul use extens shiftor algorithm search compress text approxim occurr phrase instanc search identifi potenti relev match could find occurr identifi number relev match text one replac error assum stop word disregard explain moreov allow three error charact level well could find occurr identifi number relev match text sinc algorithm occurr identifi identifi effici implement setup insensit order word phrase phrase queri could fast flexibl word search compress text delta 19 found match consid potenti relev identifi one delet error consid final proxim search interest ir effici solv goal give phrase find word rel close text would permit find occurr identifi tag potenti relev match text approxim search tradit oper charact level aim recov correct syntax type spell mistak error come optic charact recognit softwar misspel foreign name approxim search word level hand aim recov correct semant concept written differ word quit usual languag common factor prevent find relev document kind search difficult sequenti algorithm index scheme permit proxim search oper list exact word posit scheme describ simpl program eleg extrem effici charact exclus featur compress method open new possibl aim recov intend semant rather syntax queri capabl may improv retriev effect ir system 6 search perform perform evalu three algorithm present previou section obtain consid 40 randomli chosen pattern contain 1 word 40 contain 2 word 40 contain 3 word pattern use three search algorithm experi run wsj text file result obtain 99 confid interv size uncompress wsj 2628 megabyt compress version 804 megabyt plain huffman method 886 megabyt tag huffman tabl 4 present exact search time use agrep wu manber 1992 tag direct search tag huffman plain filterless basic algorithm plain huffman plain filter filter plain huffman sunday filter block 256 byte seen tabl three algorithm almost insensit number error allow pattern agrep plain filterless algorithm realli insensit map queri automaton depend k filter start take 23 filterless version becom closer k grow experi also show tag plain filter faster agrep almost twice fast exact search nearli 8 time faster approxim search time present constant io time factor approxim 8 second algorithm read wsj compress file approxim 20 second agrep read wsj uncompress file time alreadi includ tabl follow test complex pattern time experi specif pattern instead select number random reason establish model random complex pattern instead focus show effect differ pattern featur follow de moura g navarro n ziviani r baezay algorithm agrep 238 sigma 038 1179 sigma 014 1461 sigma 013 1746 sigma 016 tag 141 sigma 018 150 sigma 033 170 sigma 071 227 sigma 223 plain filterless 221 sigma 009 231 sigma 014 247 sigma 021 250 sigma 049 plain filter 151 sigma 030 162 sigma 052 194 sigma 121 234 sigma 179 tabl 4 search time elaps second wsj text file use differ search techniqu differ number error k simpl random pattern search 1 prob mean charact consid zero time one possibl answer problemat exampl pattern match lot word vocabulari 2 local televis station phrase pattern compos common word 3 hydraul forg phrase pattern compos uncommon word 4 braszil ecua phrase pattern compos complex express tabl 4 present exact search time pattern present algorithm agrep 743 1177 1460 230 1176 1451 tag 184 206 211 165 190 260 plain filterless 228 235 236 211 233 255 plain filter 214 214 221 152 171 223 algorithm pattern 3 pattern 4 agrep 219 1171 1451 743 1176 1458 tag 145 150 160 182 183 187 plain filterless 217 215 216 242 242 246 plain filter 150 157 165 176 176 180 tabl 5 search time elaps second wsj text file use differ search techniqu differ number error k note case result complex pattern differ much simpl pattern agrep hand take much time complex pattern pattern 1 pattern 4 7 conclus futur work paper investig fast compress decompress scheme natur languag text also present algorithm allow effici search exact extend word phrase pattern show achiev 30 compress ratio 40 35 compress gzip respect fast flexibl word search compress text delta 21 typic text compress time close time compress approxim half time gzip decompress time lower gzip one third compress search time better compress text origin text twice fast moreov lot flexibl provid search pattern complex pattern search much faster uncompress text 8 time faster typic make heavi use vocabulari inform kept compressor algorithm present paper implement softwar system call cgrep publicli avail exampl power cgrep search pattern contain 3 word allow 1 error compress file approxim 804 megabyt correspond wsj file 2628 megabyt cgrep run 54 megabyt per second equival search origin text 175 megabyt per second agrep search origin text 225 megabyt per second cgrep 78 time faster agrep result good encourag keep text compress time textual document user databas kept perman compress singl text collect search interest document done without decompress collect fast decompress relev file present purpos done effici complet pictur convert viabl altern mechan updat compress text collect must provid document ad remov alter effici techniqu studi moura 1999 shown effici updat compress text possibl viabl final remark sequenti search viabl solut text collect larg case index scheme consid techniqu use speed sequenti search fact use index scheme retriev text usual scan find byte posit index term algorithm valu task witten et al 1999 particular also use improv index scheme combin invert file sequenti search like glimps manber wu 1993 glimps divid text space logic block build invert file list word occurr point correspond block search done first search vocabulari invert file sequenti search select block use block indic 24 space overhead significantli speed search combin compress scheme block address invert file obtain much better result work uncompress text navarro et al 2000 acknowledg wish acknowledg mani fruit discuss marcio araujo help particularli algorithm approxim search text vocabulari also thank mani comment refere help us improv work 22 delta e de moura g navarro n ziviani r baezay complex pattern present type phrase pattern support system word pattern allow singl letter pattern set letter digit call charact posit exactli allow error follow rang charact eg tazxt az mean letter arbitrari set charact eg taeixt mean word taxt text complement eg tabxt ab mean singl charact except b tadxt ad mean singl charact except b c arbitrari charact eg tdeltaxt mean charact second charact word case insensit pattern eg text text consid word addit singl string arbitrari size class charact describ system support pattern combin exact match part approxim match part unbound number wild card arbitrari regular express combin exactli allow error follow union eg teaixt mean word text taixt teaixt mean word begin follow e ai zero time follow xt case word seen regular express arbitrari number repetit eg tabxt mean ab consid zero time case word seen regular express arbitrari number charact middl pattern eg txt mean charact consid zero time case word consid regular express effici note equival delta eg txt tdeltaxt obtain match latter consid regular express combin exact match part approxim match part text exact occurr te follow occurr xt 1 error match nonuniform cost eg cost insert defin twice cost delet emphas system perform wholeword match pattern sequenc word complex express match whole text word possibl write singl regular express return phrase also extens describ section 53 yet implement r effici string match aid bibliograph search commun acm second ieee data compress confer march let sleep file lie pattern match zcompress file larg text search allow error new approach text search block address indic approxim text retriev faster approxim string match modern inform retriev data compress fulltext retriev system local adapt data compress scheme string match lempelziv compress string handbook algorithm data structur overview third text retriev confer inform retriev comput theoret aspect effici decod prefix code construct wordbas text compress algorithm method construct minimumredund code unifi framework compress pattern match multipl pattern match lzw compress text text compress scheme allow fast search directli compress file glimps tool search entir file system technic report 9334 octob aplicaco de compressao de dado sistema de recuperacao de informacao index compress text direct pattern match compress text fast search compress text allow error ad compress block address invert indic gener practic approach pattern match zivlempel compress text gener canon prefix encod fast substr search algorithm fast file search use text compress manag gigabyt second fast text search allow error human behaviour principl least effort complex finit sequenc univers algorithm sequenti data compress compress individu sequenc via variabler code ieee transact inform theori ad compress fulltext retriev system tr local adapt data compress scheme wordbas text compress effici decod prefix code text compress fast substr search algorithm handbook algorithm data structur new approach text search fast text search data compress fulltext retriev system ad compress fulltext retriev system string match lempelziv compress string let sleep file lie text compress scheme allow fast search directli compress file block address indic approxim text retriev fast search compress text allow error effici string match gener canon prefix encod inform retriev modern inform retriev ad compress block address invert index inplac calcul minimumredund code shiftand approach pattern match lzw compress text gener practic approach pattern match zivlempel compress text unifi framework compress pattern match multipl pattern match lzw compress text ctr falk scholer hugh e william john yianni justin zobel compress invert index fast queri evalu proceed 25th annual intern acm sigir confer research develop inform retriev august 1115 2002 tamper finland robert p cook heurist compress english word list research articl softwarepractic experi v35 n6 p577581 may 2005 dana shapira ajay daptardar adapt knuthmorrispratt algorithm pattern match huffman encod text inform process manag intern journal v42 n2 p429439 march 2006 nivio ziviani edleno silva de moura gonzalo navarro ricardo baezay compress key nextgener text retriev system comput v33 n11 p3744 novemb 2000 shmuel klein dana shapira pattern match huffman encod text inform process manag intern journal v41 n4 p829841 juli 2005 r yugo kartono isal alistair moffat alwin c h ngai enhanc wordbas blocksort text compress australian comput scienc commun v24 n1 p129137 januaryfebruari 2002 vo ngoc anh alistair moffat invert index compress use wordalign binari code inform retriev v8 n1 p151166 januari 2005 edleno de moura clia f do santo daniel r fernand altigran silva pavel calado mario nascimento improv web search effici via local base static prune method proceed 14th intern confer world wide web may 1014 2005 chiba japan alistair moffat r yugo kartono isal wordbas text compress use burrowswheel transform inform process manag intern journal v41 n5 p11751192 septemb 2005 niev r brisaboa antonio faria gonzalo navarro jo r param effici decod searchabl natur languag adapt compress proceed 28th annual intern acm sigir confer research develop inform retriev august 1519 2005 salvador brazil kimmo fredriksson szymon grabowski gener compress algorithm support fast search inform process letter v100 n6 p226232 31 decemb 2006 kimmo fredriksson onlin approxim string match natur languag fundamenta informatica v72 n4 p453466 decemb 2006 kimmo fredriksson jorma tarhio effici string match huffman compress text fundamenta informatica v63 n1 p116 januari 2004 gonzalo navarro jorma tarhio lzgrep boyermoor string match tool zivlempel compress text research articl softwarepractic experi v35 n12 p11071130 octob 2005 gonzalo navarro niev brisaboa new bound dari optim code inform process letter v96 n5 p178184 decemb 2005 gonzalo navarro regular express search compress text journal discret algorithm v1 n56 p423443 octob juha krkkinen gonzalo navarro esko ukkonen approxim string match zivlempel compress text journal discret algorithm v1 n34 p313338 june joaqun adiego gonzalo navarro pablo de la fuent use structur context compress semistructur text collect inform process manag intern journal v43 n3 p769790 may 2007 p ferragina f luccio g manzini muthukrishnan compress search xml data via two zip proceed 15th intern confer world wide web may 2326 2006 edinburgh scotland adam cannan hugh e william generalpurpos compress scheme larg collect acm transact inform system toi v20 n3 p329355 juli 2002 andrei arion angela bonifati ioana manolescu andrea puglies xquec queryconsci compress xml databas acm transact internet technolog toit v7 n2 p10e may 2007 marco andr gonalv edward fox layn watson neill kipp stream structur space scenario societi 5s formal model digit librari acm transact inform system toi v22 n2 p270312 april 2004