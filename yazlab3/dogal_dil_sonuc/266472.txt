sequenti optimis without state space explor propos algorithm area optim sequenti circuit redund remov algorithm find compat redund impli valu net circuit potenti exponenti cost state space travers avoid redund found remov optim circuit safe delay replac origin circuit algorithm comput set compat sequenti redund simplifi circuit propag circuit demonstr efficaci algorithm even larg circuit experiment result benchmark circuit b introduct sequenti optimis seek replac given sequenti circuit anoth one optimis respect criterion area perform power way environ circuit detect replac work deal problem optimis sequenti circuit area present algorithm comput sequenti redund circuit propag implic net redund comput compat sens form set remov simultan algorithm work larg circuit scale better algorithm depend state space explor start point work 1 method describ identifi sequenti redund without explor state space basic algorithm net two case consid net valu 0 net valu 1 case constant well unobserv condit learnt net net either set constant case constant one case unobserv identifi redund exampl consid trivial circuit shown figur 1 valu net n2 unobserv valu net n2 1 thu net n2 stuckat1 redund howev redund found method 1 compat sens remain redund even univers california berkeley berkeley ca 94720 cadenc berkeley lab berkeley ca 94704 univers texa austin austin figur 1 exampl incompat redund presenc instanc redund identif algorithm declar input n 1 n 2 stuckat1 redund howev logic optimis incorrect replac net constant 1 straightforward applic iyer method redund remov identifi one redund implic procedur remov redund iter con vergenc goal learn compat implic circuit one step use compat implic remov redund simultan sens method find compat unobserv relat work 2 3 comput compat odc observ dont care first contribut sec ondli generalis implic procedur combin recurs learn 4 enhanc capabl redund identif procedur recurs learn let us perform case split unjustifi gate possibl learn implic expens comput time consid circuit figur 2 set net 0 impli net f 0 set 1 a1 becom 1 andgat connect remain unjustifi perform recurs learn two justif former case net f becom 0 latter case f becom unobserv e 1 thu possibl case either f 0 unobserv henc f declar stuckat0 redund recurs learn help identifi kind new redund present data show abl gain signific optimis larg benchmark circuit use two new improv fact circuit find recurs learn give us optimis even faster sinc previou recurs learn step make circuit simpler later stage assum design initi state circuit sequenti optimis use notion cdelay replac 1 5 notion guarante everi possibl inputoutput behaviour observ new circuit clock c cycl powerup must present old circuit contrast work 5 6 synthesi method present requir state space e c f figur 2 exampl recurs learn c o1 c figur 3 circuit graph travers therefor appli larg sequenti cir cuit recurs learn use earlier optimi sation describ 7 method appli combin circuit use unobserv condit anoth procedur redund remov describ 8 9 show notion replac composit may also identifi redund destroy initialis circuit therefor chosen use notion safe delay replac preserv respons initi sequenc interest composition would like notion replac valid without make assumpt environ circuit replac notion safer use 10 identifi sequenti redund preserv weak synchron se quenc work implicitli assum environ circuit total control suppli arbitrari sequenc redund identif tool mind approach pose restrict rest paper organis follow section 2 present algorithm comput compat redund combin sequenti circuit section 3 present experiment result larg circuit isca benchmark set section 4 conclud direct futur work redund remov present algorithm sequenti circuit map use edgetrigg latch invert 2input gate note combin implement map circuit contain invert 2input gate use notion circuit graph explain algorithm circuit graph label direct graph whose vertic correspond primari input primari output logic gate latch edg correspond wire element circuit label vertex identifi type ele figur 4 rule impli constant ment repres eg twoinput gate invert latch refer edg circuit graph net figur 3 show exampl circuit graph 21 combin redund explain algorithm prove correct combin circuit later extend sequenti circuit consid circuit graph circuit v set vertic e set net assumpt subset p e label net p valu set f01g let n 2 p net label net n valu v assumpt denot order tupl set possibl assumpt set p net denot p consid set assumpt label 0 n 1 denot hm 7 0n 7 1i 1ihm 7 1n 7 0ihm 7 1n 7 1ig assumpt 2 p inconsist satisfi assign primari input circuit instanc assumpt 0 input 1 output gate inconsist algorithm valu impli net e np assumpt p impli either constant unobserv indic net indic unobserv net impli symbol valueomega let set possibl valu impli net implic label n net r 2 r figur 4 illustr rule impli constant rule c1 c2 c3 c5 selfexplanatori rule c4 state gate 0 output 1 input impli 0 input rule c6 state constant fanout net gate impli constant fanout net figur 5 illustr rule implyingomega rule o1 state 0 input gate impli aomega input rule o2 state aomega everi fanout net gate impli aomega everi fanin net gate note constant impli direct across gate whileomega propag backward shown rule invert gate similar rule easili formul gate well use rule label edg circuit graph constant 0 1 label net indic omega omega omega omega omega omega figur 5 rule impli unobservability0a e1 c b omega omega omega figur overwrit constant unobserv indic net assum respect constant valu current assumpt aomega label indic net observ primari output henc freeli assign either 1 current assumpt suppos everi assumpt p net n label either constant v withomega safe replac n constant v shown everi possibl assump tion either net take valu v valu affect output therefor conclud net n stuckatv redund concern compat label otherwis run danger mark net label label consist exampl consid circuit figur 1 purpos identifi redund 1 would infer implic assumpt hn 7 1i addit assumpt hn 7 0i impli hn 7 0i impli notic use symbolomega denot compat observ oppos simpli denot observ 1 would rightli claim n1 stuckat1 redund isola tion howev redund remov easi see want make label compat suffici condit redund compat ensur procedur comput implic assumpt return compat implic ie everi implic valid presenc implic easi see label edg circuit graph done invok rule describ label ever overwritten set learnt implic compat ibl instanc circuit figur 1 n1 label aomega infer n1 overwritten 0 approach conserv miss redund figur 6 show exampl overwrit constant aomega yield redund could found otherwis propag implic assumpt net redund remov find remov redund circuit graph unvisit net n circuit graph f learn implic g hn 7 1i learn implic g hn 7 0i r everi implic set net n constant v propag constant simplifi learn implic propag implic circuit graph given assign f foral n n 7 v f label n v rule invok f b new implic b label n b conflict current label return els label n b return set current label figur 7 combin redund remov algorithm implic ha 7 0i written ha 7 1i written wire note propag implic ha 7 1i a2 initi label 1 label c 0 label a2 success overwritten henc a2 found stuckat0 redund result gate move prove later section overwrit make previous learnt implic invalid ie compat implic maintain overwrit allow constant unobserv indic algorithm remov combin redund given figur 7 function learn implic take input assumpt arbitrari subset net label net valu f01 learnt implic initi net n n 7 v assumpt la bell deriv new label invok rule c1c6 o1o2 similar rule kind two input gate note time net uniqu label constant overwritten withomega viceversa return set final label function redund remov take input circuit graph g call learn implic success assumpt hn 7 0i hn 7 1i singleton subset fn g two set label use comput pair n v n stuckatv redund later show label procedur learn implic guarante redund remov f c e f c e figur 8 implic graph simultan redund use simplifi network process repeat net con sider note function redund remov consid assumpt singl net gener number net could use gener assumpt later show result case consid assumpt two net second one correspond unjustifi node closest instanc recurs learn formalis notion valid label one implic graph exist use notion implic graph prove compat set label gener algorithm let assumpt set p net implic graph label assumpt direct acycl graph g v l set label form net 2 f01 label everi vertex v 2v ffl everi root 1 vertex label 7 ffl exactli one leaf 2 vertex v 2v label ffl vertex v 2 v v root node implic label obtain implic label parent invok infer rule exampl implic graph label assumpt hn8 7 1i shown figur 8 set label c deriv assumpt compat everi label c2c exist implic graph c lc c prove compat implic return label procedur step label procedur either label node first time overwrit constant aomega prove invari time current set implic c compat must prove label overwritten new label everi label must implic graph depend overwritten label claim prove follow lemma need current label simultan valid 1 vertex incom edg vertex outgo edg note overwrit 0 1 viceversa impli inconsist assumpt procedur exit lemma 21 let consist assumpt label overwritten label omega current set label label n implic graph label vertex graph proof call net parent net n node v circuit graph incom arc n outgo arc v also say n child say sibl n node v n outgo edg v prove claim contradict suppos fals let replac omega first instanc make fals therefor implic graph current implic happen let implic valid implic graph consid path old implic graph net n j n ith implic path consid case b j constant henc b k path constant sinc aomega net impli aomega anoth case omega consid later show assumpt consist possibl replac n implic graph n j three case relat case 1 circuit edg n igamma1 child n omega infer n either n omega current implic current implic n 0 n input gate first case fact implic graph exist n igamma1 label constant contradict second case n igamma1 output gate whose two input n n 0 sinc n either case case 2 n igamma1 n sibl n applic rule c6 n i1 either parent sibl n remov implic graph implic n i1 child n thenomega infer omega current implic n current implic n n input gate first case fact implic graph exist n i1 label constant contradict second case clearli n i1 label 0 ie b otherwis assumpt inconsist path n replac path n note get new implic graph need implic graph n exist affect overwrit previou label withomega e g x c f figur 9 sequenti circuit c case 3 n igamma1 parent n reason case 2 thu shown assumpt consist vertex label n implic graph current implic n replac current implic show replac n omega falsifi claim contradict consid case b j omega greatest k b k constant b l constant omega k l j proof know exist implic graph n k use yield implic graph n use lemma 22 let consist assumpt set label return algorithm compat proof step algorithm either valu impli net first time constant overwritten aomega proof lemma follow induct number step algorithm use lemma 21 prove induct step theorem 21 let n stuckatv redund 1 set redund fault report algorithm circuit obtain set combin equival origin 22 sequenti redund extend algorithm combin circuit describ previou section find sequenti redund propag implic across latch implic may valid first clock cycl sinc latch powerup nondeterminist random boolean valu initi nevertheless use notion k delay replac requir modifi circuit produc behaviour origin k clock cycl elaps thu exampl impli constant v latch output constant v input yield redun danci 1delay replac 3 guarante remov redund 3 latch reset valu guarante first cycl oper suffici ensur constant v equal reset valu case replac 0delay replac figur 10 sequenti implic graph assumpt circuit c figur 11 incorrect sequenti implic graph assumpt circuit c notion label implic graph modifi also contain integ time offset respect global symbol time step rule learn implic exactli addit new rule allow us propag implic across latch go across latch modifi time offset accord ingli eg output latch label 1 offset 2 input latch label 1 offset 3 exampl implic graph circuit c figur 9 shown figur 10 exampl also show potenti problem learn sequenti implic consid circuit c figur 9 two assumpt ha 7 0i 0 denot global symbol time ha 7 1i get two implic graph figur 10 11 impli c might lead us believ dundanc howev new circuit obtain replac c 0 power state 11 latch 1 remain forev 11 circuit output x 1 howev origin circuit produc matter state power thu kdelay replac k reason incorrect redund identif order infer c assumpt need c 0 ie time c could 1 1 one way solv problem ensur net label differ label differ time label net one label net label associ list integ label denot time offset label valid thu exampl implic propag phase assumpt never infer get second implic graph figur 10 label one net one label also obviat need valid step describ 1 algorithm replac net n constant v time offset 0 either label v unobserv assumpt replac associ time k follow 1 valid redund n stuckatv time 0 set implic graph one assumpt impli either n 0 omega let 00 least time offset label implic graph net 00 label constant say n kcycl stuckatv redund use follow theorem claim circuit obtain replac net n constant v kdelay safe replac lemma 23 1 let net n kcycl stuckatv redund circuit obtain set net result k delay safe replac origin circuit combin case allow overwrit constant unobserv indic make sure label net n time overwritten new label isomega net n label time offset prevent problem shown figur 11 may make algorithm depend order applic rule explor variou option proof follow two lemma follow easi extens lemma 21 22 lemma 24 let consist assumpt label replac omega current set label label implic graph label graph lemma 25 let consist assumpt set label return algorithm compat henc redund report algorithm compat redund remov simultan get delay safe replac theorem 22 let n k cycl stuckatv redund 1 set redund fault report algorithm circuit obtain set net kdelay safe replac origin proof lemma 25 know 1 redund circuit obtain set shown 5 circuit c e c adelay replac bdelay replac e c delay replac e desir result follow easili induct n properti delay replac 3 experiment result present experiment result algorithm demonstr approach identifi sequenti redund yield signific reduct area better circuit redund remov recurs learn name red lr a1 red lr a2 cordic legend see tabl 2 tabl 1 experiment result combin redund approach remov combin redund also show exampl recurs learn give better result simpl implic propag scheme fact mani circuit recurs learn could identifi redund simpl implic propag scheme unabl find algorithm implement si 11 circuit first optimis use scriptrug perform combin optimis network optimis circuit map librari consist 2input gate invert sequenti redund remov algorithm run map circuit propag implic allow propag 15 time step forward 15 timestep backward global symbol time tabl 2 show map mcnc91 librari area circuit obtain run scriptruggedand obtain start result appli redund remov algorithm larg circuit s15850 larger bdd oper full simplifi step scriptruggedwer per form report result circuit algorithm abl find redund mention earlier algorithm start assumpt net impli valu net circuit implement two flavor select assumpt first case conflict assign assum one net valu impli net second case similar first except implic could propag assumpt net perform nave circuit attribut redund remov recurs learn name pi po l red c lr a1 time red c lr a2 time s953 43 26 183 3775 28 7035 84 669 92 733 70 6317 178 321 43 9380 100 4937 s38417 28 106 1464 33055 591 887 42 31943 34 11394 1129 9245 97 29718 101 17637 full simplifi run time report alpha 21164 300mhz dual processor 2g memori pi number primari input po number primari output l number latch map area scriptrug a1 map area redund remov a2 map area redund remov recurs learn red number redund remov lr number latch remov c upper bound c new circuit cdelay replac time cpu time percentag area reduct tabl 2 experiment result sequenti redund version case split net closest origin net implic propag implic common two case also ad set implic learnt origin net 4 enabl us propag implic larger set net network henc discov redund expens cpu time tabl 2 indic area reduct obtain simpl propag perform recurs learn find even nave recurs learn get reduct area circuit obtain without case split instanc s5378 abl obtain 375 area reduct recurs learn 196 without medium size circuit abl obtain reduct area without recurs learn larg circuit also abl obtain approxim 510 area reduct s35952 except obtain reduct area except circuit cpu time recurs learn less twice cpu time redund remov without suggest sophist recurs learn 4 node unjustifi forward propag implic casesplit perform set output net 0 1 node unjustifi backward propag case split achiev set one two input input control valu 0 nand gate 1 gate time propag implic backward base techniqu could yield larger area reduct without prohibit overhead term cpu time sinc algorithm also identifi combin redundan cie want quantifi mani redund pure combin verifi ran algorithm circuit combin redund remov tabl 1 show area reduct due combin redund without recurs learn case number redund identifi tabl 2 significantli larger set combin redund identifi algorithm s35952 s953 combin redund remov result approxim area reduct sequenti redund case exampl circuit present abl achiev 037 area reduct number case algorithm abl remov signific number latch case new circuit cdelay safe replac origin circuit c report tabl 2 actual upper bound delay replac circuit c 10000 howev practic circuit oper speed exceed 100 mhz present technolog c 10000 circuit would requir user wait 100 use oper begin sever restrict unabl compar sequenti redund remov result previou work entrena cheng 8 note earlier notion sequenti replac ment base conserv 01xvalu simula tion composit unlik notion delay replac use 4 futur work redund remov algorithm find complet set redund extend scheme sever way identifi larger set instanc instead analyz two assumpt due case split singl net could case split multipl net intersect implic learnt larger set assumpt one method increment select frontier first phase implic die addit split multipl net possibl detect pair net one replac anoth circuit function chang current approach split singl net one net pair alway 1 0 mean identifi stuckatconst redund algorithm map given circuit use librari two input gate invert differ approach would use origin circuit propag implic forward backward build bdd node function term immedi fanin intend compar run time area reduct number approach bdd base approach addit bdd base approach may allow us redund remov multivalu logic circuit well rel inexpens way extend notion redund multivalu circuit identifi case net take subset allow valu latch kind encod use fewer bit acknowledg use discuss mahesh iyer miron abramovici cours work comment refere also help improv paper r identifi sequenti redund without search transduct method design logic network base permiss function dont care multilevel network optimiza tion recurs learn new implic techniqu effici solut cad problem test verif optim ex ploit powerup delay sequenti optim latch redund remov without global reset lot logic optim testabl new transform use recurs learn sequenti logic optim redund addit remov redund untest sequenti circuit remov redund synchron sequenti circuit synchron sequenc si system sequenti circuit synthesi tr transduct methoddesign logic network base permiss function dont care multilevel network optim exploit powerup delay sequenti optim remov redund synchron sequenti circuit synchron sequenc redund untest sequenti circuit sequenti redund without search sequenti logic optim redund addit remov latch redund remov without global reset ctr vigyan singhal carl pixley adnan aziz shaz qadeer robert brayton sequenti optim absenc global reset acm transact design autom electron system toda v8 n2 p222251 april