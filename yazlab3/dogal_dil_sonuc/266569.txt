satbas implic engin effici atpg equival check optim netlist paper present flexibl effici approach evalu implic well deriv indirect implic logic circuit evalu deriv implic essenti atpg equival check netlist optim contrari method approach base graph model circuit claus descript call implic graph combin flexibl satbas techniqu high effici structur base method propos algorithm oper implic graph independ chosen logic evalu implic comput indirect implic perform simpl effici graph algorithm experiment result variou applic reli implic demonstr effect approach b introduct recent substanti progress achiev field boolean equival check optim netlist techniqu deriv indirect implic origin develop atpg tool play key role develop indirect implic success appli algorithm optim netlist task either set permiss transform deriv 1 2 3 promis transform appli permiss later verifi atpg tool 4 5 6 furthermor great import atpgbas approach boolean equival check combin sequenti circuit 7 8 9 10 11 help identifi equival intern signal circuit compar late 1980 schulz et al incorpor comput indirect implic atpg tool socrates12 indirect implic indispens deal redund fault help effici prune search space branch andbound search order deriv indirect implic origin static techniqu socrat author refer static learn extend dynam learn 13 14 recurs learn 7 propos kunz et al 1992 first complet algorithm determin indirect implic problem find indirect implic npcomplet small depth recurs feasibl recent shown recurs learn adequ model andor reason graph 3 anoth complet method deriv indirect implic base bdd suggest mukherje et al 15 recent zhao et al present approach combin iter static learn recurs learn constrain recurs level one 16 base set algebra similar singl pass deduct fault simul contrari method work structur descript circuit approach use boolean satisfi base model satmodel allow eleg problem formul easili adapt variou log ic abstract howev often imped develop effici algorithm structur inform lost larrabe includ claus base formul schulz algorithm nemesis17 approach improv iter method tegu 18 transit closur algorithm suggest chakradhar et al reli relat model binari claus 19 silva et al propos anoth form dynam learn grasp 20 indirect implic determin conflict analysi backtrack phase satsolv mani area logic synthesi formal verif binari decis diagram bdd becom wide use data structur provid mani advantag properti eg canon high flexibl besid exponenti memori complex use atpg equival check optim larg netlist bdd suffer drawback implic deriv effici data structur given signal assign decid anoth signal assign impli find possibl implic given signal assign expens theoret possibl combin signal pair check therefor bddbase approachessuch function learn 15 restrict search potenti learn area identifi non bddbase implic consequ structur hybrid approach ie bdd combin method predomin atpg equival check optim netlist even though approachesmak heavi use implica tion data structur use deriv evalu implic often suboptim inflex propos flexibl data structur specif optim respect implic paper introduc framework implic base algorithm inherit advantag structur well satbas approach approach combin flexibl eleg satbas algorithm effici structur method work graph model claus system call implic graph memori complex linear number modul circuit due structur inform avail graph fundament problem justif propag particularli implic carri effici graph search indirect implic reduc graph algorithm execut fast easili extend exploit bitparallel implic graph automat gener arbitrari logic present algorithm remain valid independ chosen logic allow rapid prototyp implic base tool new multivalu logic remaind paper organ follow sec 2 show deriv implic graph next discuss implic evalu indirect implic comput sec 3 4 respect order demonstr high effici approach experiment result variou applic use propos implic engin present sec 5 sec 6 conclud paper implic graph perform implic one promin time consum task atpg equival check optim netlist utmost import use data structur best suit unlik graphic represent claus system data structur repres inform contain structur netlist claus databas implic graph use nemesis17 tran19 model binari claus claus higher order sole includ claus databas sinc approach gener natur combin circuit automat compil implic graph rep resent inform logic encod well truth tabl descript support modul type provid basic step compil given fig 1 first support modul type individu compil encod tabl claus modul databas circuit implic subgraph logic encod modul optim implic graph figur 1 deriv implic graph encod truth tabl tabl optim twolevel logic optim eg espresso step explain sec 21 next set claus extract optim ta ble shown sec 22 shown sec 23 set claus transform implic subgraph store modul databas everi modul circuit appropri gener subgraph taken modul databas person input output signal given modul final ident node merg singl node result complet implic graph follow section consid 3valu logic l f01xg order present basic idea approach gener implic graph arbitrari multivalu logic eg 10valu logic l 10 known robust path delay atpg discuss 21 21 encod signal variabl x 2l 3 requir two encod bit c x c x intern represent complet scheme encod l 3 shown tabl 1 order easili detect inconsist encod interpret x signal x 1 signal x unknown conflict signal x tabl 1 3valu logic encod conflict signal assign denot c properti express follow definit definit 1 assign call nonconflict iff c x c hold signal variabl x base encod truth tabl support modul type convert encod tabl exampl truth tabl 2input andgat found tabl 2 convert encod tabl tabl 2 encod tabl truth tabl b c encod tabl c c c b c c optim tabl c c c b c c tabl 2 andgat truth tabl encod tabl optim tabl interpret specifi onset well offset two boolean function c c c c conflict assignmentsbelong dontcareset explicitli check implic engin exploit dontcar function c c c c encod tabl optim espresso 22 claus descript characterist function describ andgat respect given encod easili given conjunct normal form cnf analyz individu row optim tabl tabl 2 everi row tabl correspond claus contain cnf cnf compris three claus c c c c c c c b c c valid valu assign input output andgat implicitli given nonconflict satisfi assign characterist equat cnf c c 23 build implic graph exploit follow equival claus descript eq 1 convert correspond implic graph xy suffici provid equival binari ternari claus claus system higher order decompos system binari ternari claus 21 transform claus binari ternari claus subgraph shown fig 2 use represent claus graph contain two type node first type rep z x figur 2 implic subgraph binari ternari claus resent encod signal valu second one symbol conjunct oper latter type depict shade triangl everi ternari claus three associ node uniqu repres ternari claus implic graph come back 2input andgat cnfdescript transform implic graph shown fig 3 everi bit encod signal x repres correspond node implic graph eg node c c fig 3 give bit c c signal requir nonconflict assign liter x replac c x node correspond nonneg encod bit contain fig 3 far implic graph captur logic function circuit sinc structur inform indispens task justif propag provid inform within implic graph mark edg three differ tag f b edg denot implic input output signal modul mark f forward edg relat output input signal tag b backward edg edg eg input input relat indirect implic given tag tag 2input andgat found fig 3 mean tag direct acycl graph dag extract implic graph edg forward edg move obtain dag form base effici algorithm backtrac justif simpl circuit three differ circuit descript introduc present ex 21 pleas observ claus base approach work cnf l 2 approach oper cnf variabl encod respect given logic l 3 denot edg omit later exampl c c c c c c c f f f f figur 3 implic graph 2input andgat 24 advantag use propos implic graph core data structur cad algorithm mani advantag 1 import task implic justif carri implic graph manner arbitrari logic peculiar chosen logic includ graph implic deriv indirect implic reduc effici graph algorithm shown sec 33 44 2 satbas algorithm use static order variabl assign search satisfi assign 17 19 furthermor algorithm assign valu intern signal justif sinc podem well known assign valu primari input signal help reduc search space obvious primari input special properti given instanc sat exploit algorithm solv arbitrari sat problem algorithm tegu tri mimic podem order claus special manner 18 approach need techniqu structur inform provid edg tag 3 algorithm work implic graph easili exploit bitparallel statu everi node repres one bit exampl 64bit machin 64 valu assign process parallel make bitparallel implic effici sequenti circuit often model iter logic array ila model time domain unfold multipl copi combin logic block logic block compil correspond implic graph use bitparallel techniqu 64bit machin allow keep 64 timefram without increas size implic graph 3 perform implic 31 structur base structur base implic special form eventdriven simul contrari ordinari simul start primari input implic start arbitrari signal circuit therefor proceed toward primari output well primari input implic often categor forward backward implic obvious techniqu requir mani tabl lookup evalu modul function becom particularli costli multivalu log ic eg one use path delay atpg 32 claus base claus base implic reli boolean constraint propag bcp bcp correspond iter applic exampl 21 circuit descript structur claus implic graph c e f ffl cnf c c e c c c c c c ffl implic graph f f f f f f f f f f f f f c c e c f c c c e c c c c c c c b unit claus rule propos davi et al 1960 22 bcp unari claus use simplifi claus simplif possibl claus becom unsatisfi implic start ad unari claus repres initi signal assign cnf unari claus comput bcp correspond implic initi assign forc correspond signal certain logic valu time consum task bcp search claus simplifi unit claus rule search necessari work implic graph sinc claus share common variabl connect graph 33 implic graph base implic graph base implic simpl effici requir partial travers implic graph impli signal assign mean first correspond node mark implic graph implic procedur travers implic graph obey follow rule start initi set mark node successor node j mark ffl node j node predecessor mark ffl node j repres encod bit least one predecessor mark rule appli propag mark possibl node mark repres signal valu impli initi assign given conflict signal assign easili detect implic sinc caus node c x c x mark let us use circuit ex 21 sake explan assign logic valu 0 signal e correspond mark node c e implic graph run implic proce dure follow node mark c c c f final obtain impli signal valu respect given logic mark node decod accord given encod ie determin deriv indirect implic contrari direct implic detect indirect implic requir special analysi logic function circuit repres inform circuit obviou descript method comput indirect implic subject order depend indirect implic found certain indirect implic alreadi discov order avoid problem suggest iter comput 18 41 structur base socrat algorithm 12 first introduc comput indirect implic use follow tautolog eq 4 law contraposit may gener candid indirect implic eq 5 identifi fix valu indirect implic primarili comput preprocess phase idea temporarili set given signal certain logic valu possibl direct implic signal assign comput impli signal valu check contraposit deduc direct implic learn criterion case contraposit indirect implic indirect implic repres within data structur use describ circuit structur algorithm store extern data structur add addit complex structur base algorithm 42 claus base claus base comput 17 18 similar structur algorithm sec 41 free liter contain cnf temporarili set 1 bcp use deriv possibl direct implic ie unari claus gener unari claus b check contraposit b indirect im plicat case correspond claus b ad claus databas therebi indirect implic enrich data structur use repres circuit function indirect implic ad claus databas longer requir special attent one import advantag claus base algorithm structur base approach 18 43 andor enumer differ approach known recurs learn taken kunz et al 3 7 indirect implic deduc search 23 possibl implic result signal assign search perform recurs inject revers signal assign correspond differ possibl justifi gate follow deriv direct implic signal valu common justif gate yield indirect implic simpl structur algorithm execut implic appli let us illustr principl andor enumer circuit ex 21 andor tree found fig 4 level 2 level 0 initi assign f level 1 figur 4 andor enumer root node andor tree reflect initi assign andtyp 2 exampl logic 0 assign signal f signal valu impli ornod successor root node justif 0g order deriv indirect implic search impli signal valu common justif impli justif repres new ornod level 0 andor tree gener new ornod level 0 correspond indirect implic examin gate level 2 becom unjustifi set b 0 yield addit indirect implic 44 implic graph base implic graph base method comput indirect implic inherit advantag claus base techniqu elimin costli search process requir bcpbase implic moreov approach integr comput indirect implic base law contraposit andor enumer framework gener andnod mark arc repres signal assign due justif unjustifi gate wherea ornod denot signal valu impli chosen justif justifi gate correspond orleav unjustifi gate intern ornod andor graph 3 441 reconverg analysi basic idea determin indirect implic search reconverg shown fig 5 implic c c b c indirect direct c c x c x c c figur 5 learn contraposit implic graph deduc direct implic c form indirect impli cation node pass predecessor mark ie form reconverg node implic start implic node c b howev pass node predecessor c x mark appli law contraposit c c b deduc c c impli c b observ express follow lemma assign reconverg structur c implic graph yield indirect implic c x ffl c x fanout node implic graph ffl node c mark via node predecessor node mark impli along disjoint path implic graph proof 21 use lemma 1 shown search reconv genci implic graph detect indirect implic found claus structur base approach implic found bcp en code claus descript identifi search reconverg structur defin lemma 1 proof 21 explain reconverg analysi implic graph ex 21 let assum fanout node c b mark implic procedur sec 33 invok c c e mark succeed node c f mark node reach via two disjoint path graph indic dash solid line respect contraposit c b form indirect implic indirect implic includ graph form grey edg lead node c f node c b appli graph analysi offer follow advantag 1 search reconverg region implic graph reduc set candid signal may yield indirect im plicat claus base method temporarili assign valu liter contain cnf 2 reconverg analysi carri fast adapt version algorithm present 24 3 method requir learn criterion approach 12 442 extend reconverg analysi contrari reconverg analysi sec 441 extend reconverg analysi detect condit reconverg signal node correspond andor search implic graph need follow definit claus c c 1 c 2 c n call unjustifi evalu 1 least one complement c liter c 1 unjustifi ternari claus found implic graph without effort repres node exactli one two predecessor mark unspecifi liter unjustifi let v 1 denot assign valu set nonconflict assign call justif claus c valu assign j makec evalu 1 claus base framework complet set justif j c unjustifi claus c easili given j 1gg approach set j c even simpler ternari claus unjustifi 3 therefor j c alway consist exactli two justif explain two justif deriv implic graph fig 6 given ternari claus c c x c z c x c z c figur unjustifi ternari claus c x c c z due assign c z unjustifi due assign c indic two node exactli one predecessor ternari claus justifi set c z c 1 consid subgraph denot ternari claus c x c c z straightforward graphic represent follow formula c x c x c c becom appar possibl justif j c found consequ implic liter make claus unjustifi ie c x anteced consequ correspond successor two node let us explain extend reconverg analysi correspond effici andor search implic graph help fig 7 show implic graph ex 21 initi assign c claus c unjustifi next possibl justif j determin successor two node 1 2 belong claus c node correspond andnod j 1 j 2 andor tree respec 3 binari claus unjustifi accord definit 2 reduc unari claus unari claus repres necessari assign impli signal valu given signal assign tive distinguish consequ two justif one assign differ color thu node c marker repres dash line fig 7 signal impli c mark green done c use red marker dot line fig 7 node assign color ie node marker reconverg impli independ chosen justif node therefor elev previou level andor tree exampl node c b mark color deriv indirect implic c b analysi unjustifi claus c b c g level 2 andor tree yield addit indirect implic exampl indic trace extend reconverg analysi ident andor tree gener andor enumer mark node convert andnod mark signal node ornod obvious extend reconverg analysi capabl determin indirect implic given enough color ie complet effici procedur implement extend reconverg analysi given 21 take advantag implic graph encod color local node use bit slice full machin word thu subtre andor tree store parallel differ bitlevel addit bitparallel version implic algorithm introduc sec 33 use algorithm support depth r level andor tree 2 r bit architectur decalphast exampl maxim depth 6 level avail let us briefli summar advantag 1 implic graph model allow full word size exploit mean bitparallel techniqu search indirect implic requir effici set oper ornod may elev successor andnod belong unjustifi claus set oper carri effect implic graph perform local bitoper signal node separ data structur need pleas note advantag effici set oper remain extend algorithm handl arbitrari depth andor enumer alreadi done 2 notion unjustifi gate necessari 3 7 reduc simpl concept unjustifi ternari claus due concept uniform descript andor enumer easili perform arbitrari logic appli pro cedur alreadi done logic l 10 contrari higher valu logic complic deal structur approach 7 3 3 detect indirect implic includ graph immedi often facilit comput indirect implic 4 indirect implic easili comput law contraposit requir high depth andor search approach integr method one framework indirect implic identifi best suit techniqu 5 experiment result implic engin present paper implement c languag librari function appli success sever cad problem pleas note c c e c f c c c e c c c c c c c b level 2 level 1 level 0 j initi assign fc c c c c c c 3 1 j 2 figur 7 extend reconverg analysi implic graph present result alreadi publish paper deal applic specif issu underli implic engin discuss includ result order show effici flexibl approach experi atpg netlist optim carri decstation3000600 experi equival check perform decalphastation250 4266 atpg netlist optim reli earlier version implic engin support techniqu sec 442 far advanc techniqu use equival check tabl 3 present result atpg consid variou fault model 25 26 27 due flexibl implic graph nonrobust robust stuckat c5315 342117 6434 81435 52518 5291 12 c7552 277244 14994 86252 57460 7419 52 tabl 3 result test pattern gener variou logic l 3 requir differ fault model could easili handl tabl 3 give number test fault cpu time requir perform atpg nonrobust robust path delay fault well stuckat fault combin circuit sequenti circuit enhanc scan design excel qualiti achiev result seen fur circuit gate liter delay time c1908 488 402 933 803 412 339 1364 red 81 32 188 tabl 4 result delay optim ther tabl 25 26 27 extens comparison stateoftheart tool made result optim map netlist respect delay provid tabl 4 basic idea approach appli implic engin verifi permiss circuit transform describ 6 number gate liter circuit delay optim well requir cpu time given result equival check netlist present tabl 5 list total time requir equival check ie circuit time level max total indirect implic c432 13 12 1 tabl 5 result verifi redund free circuit atpg plu comput indirect implic time consum latter column 2 3 respect maxim depth andor search necessari success verif also given column 4 provid earli result order show implic engin form suitabl data structur build effici equival checker straightforward approach adopt basic idea wellknown equival checker hannib 28 includ advanc heuri tic eg observ implic heurist candid se lection nevertheless result shown tabl 5 compar one report 28 indic implic engin well suit equival check pleas note easili incorpor stateoftheart implic base hy brid ie bdd combin implic equival checker approach benefit 6 conclus paper propos effici implic engin work flexibl data structur call implic graph shown indirect implic effect comput analysi graph experiment result confirm effici flexibl approach futur preliminari equival checker extend deriv observ implic directli implic graph furthermor investig hybrid techniqu use bdd implic graph advantag equival check acknowledg author grate prof kurt j antreich mani valuabl discuss advic like thank bernhard rohfleisch hann wittmann use implic engin netlist optim tool develop path delay atpg tool respect r multilevel logic optim implic analysi lot logic optim testabl new transform use recurs learn andor reason graph determin prime implic multilevel combin network combin sequenti logic optim redund addit remov perturb simplifi multilevel boolean network optim logic claus analysi delay optim recurs learn new implic techniqu effici solut cad problem test veri ficat optim advanc verif techniqu base learn novel framework logic verif synthesi environ verilat verif use logic augment transform aquila equival verifi larg sequenti circuit socrat highli effici automat test pattern gener system improv determinist test pattern gener applic redund identif acceler dynam learn test pattern gener combin circuit function learn new approach learn digit circuit static logic implic applic redund identif test pattern gener use boolean satisfi com binat test gener use satisfi transit closur algorithm test gener grasp new search algorithm satisfi satbas implic engin comput procedur quantif theori method fault simul base stem region formal nonheurist atpg approach bit parallel test pattern gener path delay fault path delay atpg standard scan design hannib effic tool logic verif base recurs learn tr artifici intellig perturb simplifi multilevel logic optim implic analysi advanc verif techniqu base learn logic claus analysi delay optim path delay atpg standard scan design formal nonheurist atpg approach verilat graspmyampersandmdasha new search algorithm satisfi comput procedur quantif theori bit parallel test pattern gener path delay fault static logic implic applic redund identif ctr joo marquessilva lu guerra e silva solv satisfi combin circuit ieee design test v20 n04 p1621 januari f lu k iyer g parthasarathi lc wang kt cheng k c chen effici sequenti sat solver improv search strategi proceed confer design autom test europ p11021107 march 0711 2005 alexand smith andrea veneri anastasio vigla design diagnosi use boolean satisfi proceed 2004 confer asia south pacif design autom electron design solut fair p218223 januari 2730 2004 yokohama japan paul tafertshof andrea ganz sat base atpg use fast justif propag implic graph proceed 1999 ieeeacm intern confer computeraid design p139146 novemb 0711 1999 san jose california unit state sean safarpour andrea veneri rolf drechsler joann lee manag dont care boolean satisfi proceed confer design autom test europ p10260 februari 1620 2004 ilia polian bernd becker multipl scan chain design twopattern test journal electron test theori applic v19 n1 p3748 februari christoph scholl bernd becker check equival partial implement proceed 38th confer design autom p238243 june 2001 la vega nevada unit state ilia polian hideo fujiwara function constraint vs test compress scanbas delay test proceed confer design autom test europ proceed march 0610 2006 munich germani lu guerra e silva l miguel silveira joa marquessilva algorithm solv boolean satisfi combin circuit proceed confer design autom test europ p107e januari 1999 munich germani e goldberg prasad r brayton use sat combin equival check proceed confer design autom test europ p114121 march 2001 munich germani joo marquessilva thoma glass combin equival check use satisfi recurs learn proceed confer design autom test europ p33e januari 1999 munich germani ilia polian hideo fujiwara function constraint vs test compress scanbas delay test journal electron test theori applic v23 n5 p445455 octob 2007 ilia polian alejandro czutro bernd becker evolutionari optim codebas test compress proceed confer design autom test europ p11241129 march 0711 2005 joo p marquessilva karem sakallah boolean satisfi electron design autom proceed 37th confer design autom p675680 june 0509 2000 lo angel california unit state ilia polian bernd becker scalabl delay fault bist use lowcost ate journal electron test theori applic v20 n2 p181197 april 2004