demonstr automat data partit techniqu parallel compil multicomput approach problem automat data partit introduc notion constraint data distribut present shown base perform consider compil identifi constraint impos distribut variou data structur constraint combin compil obtain complet consist pictur data distribut scheme one offer good perform term overal execut time result studi perform fortran program taken linpack eispack librari perfect benchmark determin applic approach real program present result encourag demonstr feasibl automat data partit program regular comput may static analyz cover extrem signific class scientif applic program b introduct distribut memori multiprocessor multicomput increasingli use provid high level perform scientif applic distribut memori machin offer signific advantag share memori counterpart term cost scalabl wide accept fact much difficult program share memori machin one major reason difficulti absenc singl global address space result programm distribut code data processor manag commun among task explicitli clearli need parallel compil reliev programm burden area parallel compil multicomput seen consider research activ last year number research develop compil take program written sequenti sharedmemori parallel languag base userspecifi partit data gener target parallel program multicomput research effort includ fortran compil project rice univers 9 superb project bonn univers 22 kali project purdu univers 13 dino project colorado univers 20 deal imper languag extens fortran c crystal project yale univers 5 compil 19 also base idea target function languag parallel program gener system correspond spmd singl program multipledata 12 model processor execut program oper distinct data item current work parallel compil multicomput larg concentr autom gener messag commun among processor use term paralleliz ing compil somewhat mislead context sinc parallel decis realli left programm specifi data partit method data partit determin interprocessor commun take place independ comput actual get execut differ processor distribut data across processor critic import effici parallel program distribut memori system sinc interprocessor commun much expens comput processor essenti processor abl much comput possibl use local data excess commun among processor easili offset gain made use parallel anoth import consider good data distribut pattern allow workload evenli distribut among processor full use made parallel inher comput often tradeoff involv minim interprocessor commun balanc load processor good scheme data partit must take account commun comput cost govern underli architectur machin goal automat parallel sequenti code remain incomplet long programm forc think issu come right data partit scheme program task determin good partit scheme manual extrem difficult tediou howev exist project parallel system multicomput far chosen tackl problem compil level known difficult problem mace 16 shown problem find optim data storag pattern parallel process even 1d 2d array npcomplet anoth relat problem compon align problem discuss li chen 15 shown npcomplet recent sever research address problem automat determin data partit scheme provid help user task ramanujan sadayappan 18 work deriv data partit restrict class program howev concentr individu loop strongli connect compon rather consid program whole hudak abraham 11 socha 21 present techniqu data partit program may model sequenti iter parallel loop balasundaram et al 1 discuss interact tool provid assist user data distribut key element tool perform estim modul use evalu variou altern regard distribut scheme li chen 15 address issu data movement processor due crossrefer multipl distribut array also describ explicit commun synthes commun cost estim analyz refer pattern sourc program 14 estim use evalu differ partit scheme approach seriou drawback associ problem restrict applic appli program may model singl multipli nest loop other requir fairli exhaust enumer possibl data partit scheme may render method ineffect reason larg problem clearli strategi automat data partit expect work well applic regular comput structur static depend pattern determin compil time howev even though exist signific class scientif applic properti data show effect method real program paper present novel approach call constraintbas approach 7 problem automat data partit multicomput approach compil analyz loop program base perform consider identifi constraint distribut variou data structur referenc loop qualiti measur associ constraint captur import respect perform program final compil tri combin constraint data structur consist manner overal execut time parallel program minim restrict partit array idea underli approach appli distribut memori machin intel ipsc2 ncube warp systol machin exampl written fortranlik languag present result fortran program howev idea develop partit array equal applic similar program languag rest paper organ follow section 2 describ abstract machin kind distribut array may scheme section 3 introduc notion constraint describ differ kind constraint may impos array distribut section 4 describ compil analyz program refer record constraint determin qualiti measur associ section 5 present strategi determin data partit scheme section 6 present result studi fortran program perform determin applic approach real program final conclus present section 7 2 data distribut abstract target machin assum ddimension maximum dimension array use program grid n 1 n 2 processor topolog easili embed almost distribut memori machin processor topolog repres tupl correspond tupl p processor number rang 0 establish scheme emb virtual processor grid topolog real target machin make notat describ replic data simpler extend represent processor tupl follow manner processor tupl x appear ith posit denot processor along ith grid dimens thu 2 2 grid processor tupl 0 x repres processor 0 0 0 1 tupl x x repres four processor scalar variabl small array use program assum replic processor array use separ distribut function dimens indic array distribut across processor turn conveni singl distribut function associ multidimension array refer kth dimens array k array dimens k get map uniqu dimens processor grid number processor along grid dimens one say array dimens k sequenti sequenti array dimens impli element whose subscript differ dimens alloc processor distribut function k take argument index return compon tupl repres processor own element agamma denot arbitrari valu index appear k th dimens array dimens k may either partit replic correspond grid dimens distribut function form ae b igammaoffset block cmodn replic squar parenthes surround modn indic appear part express option higher level given formul distribut function thought specifi follow paramet 1 whether array dimens partit across processor replic 2 method partit contigu cyclic 3 grid dimens kth array dimens get map 4 block size distribut ie number element resid togeth block processor 5 displac appli subscript valu map exampl data distribut scheme possibl array 4processor machin shown figur 1 number shown figur indic processor part array alloc machin consid n 1 n 2 mesh processor number correspond tupl p distribut function correspond differ figur given array subscript assum start valu 1 fortran c f last exampl illustr notat allow us specifi partial replic data ie replic array dimens along specif dimens processor grid array replic complet processor distribut function dimens take valu x dimension processor topolog greater dimension array need gamma distribut function order complet specifi processor own given element array function provid remain gamma number processor tupl restrict function take constant valu valu x array replic along correspond grid dimens array use real scientif program routin linpack eispack librari perfect benchmark program 6 fewer three dimens believ even program higher dimension array restrict number dimens distribut across processor two usual lead loss effect parallel consid complet parallel loop nest shown even though loop parallel three level twodimension grid topolog z 1 z 2 distribut z 3 sequenti would give perform threedimension topolog number processor z distribut order simplifi strategi observ provid justif shall assum underli target topolog twodimension mesh sake notat describ distribut array dimens grid dimens shall continu regard target topolog conceptu ddimension grid restrict valu n later set one 3 constraint data distribut data refer associ loop program indic desir properti final distribut variou array formul desir characterist constraint data distribut function use term differ slightli common usag sens constraint data distribut repres requir met requir necessarili met correspond statement assign valu array paralleliz loop two kind constraint parallel constraint commun constraint former kind give constraint distribut array appear left hand side assign statement distribut array element assign valu paralleliz loop distribut evenli mani processor possibl get good perform due exploit parallel commun constraint tri ensur data element read statement resid processor one own data element written motiv owner comput rule 9 follow almost parallel system multicomput accord rule processor respons comput one own data item assign valu comput whenev comput involv use valu avail local processor need interprocessor commun commun constraint tri elimin need interprocessor commun whenev possibl gener depend kind loop singl loop may correspond one categori rule impos follow kind constraint 1 paralleliz loop array get assign valu parallel constraint distribut 2 loop assign array use valu array b commun constraint specifi relationship distribut b 3 loop assign certain element use valu differ element commun constraint distribut 4 loop singl assign statement use valu multipl element array b commun constraint distribut b constraint distribut array may specifi relev paramet number processor array dimens distribut whether distribut contigu cyclic block size distribut two kind constraint relationship distribut array one kind specifi align dimens differ array two array dimens said align get distribut processor grid dimens kind constraint relationship formul one distribut function term align dimens exampl consid loop shown data refer loop suggest 1 align b 1 2 sequenti secondli suggest follow distribut function b 1 term 1 bic 2 c 1 thu given paramet regard distribut like block size offset number processor determin correspond paramet regard distribut b look relationship two distribut intuit notion constraint provid abstract signific loop respect data distribut distribut array involv take decis regard number paramet describ earlier constraint specifi basic minim requir distribut henc paramet relat distribut array left unspecifi constraint may select combin constraint other specifi paramet combin lead improv distribut scheme program whole howev differ part program may also impos conflict requir distribut variou array form constraint inconsist order resolv conflict associ measur qualiti constraint depend kind constraint use one follow two qualiti measur penalti execut time actual execut time constraint final either satisfi satisfi data distribut scheme refer boolean constraint exampl constraint one specifi align two array dimens use first measur estim penalti paid execut time constraint honor constraint specifi distribut array dimens number processor use second measur express execut time simpl function number proce sor depend whether constraint affect amount parallel exploit interprocessor commun requir express qualiti measur term comput time commun time one problem estim qualiti measur constraint may depend certain paramet final distribut known beforehand express qualiti measur function paramet known stage instanc qualiti measur constraint align two array dimens depend number processor two dimens otherwis distribut express function number determin constraint qualiti measur success strategi data partit depend greatli compil abil recogn data refer pattern variou loop program record constraint indic refer along qualiti measur limit attent statement involv assign array sinc scalar variabl replic processor comput time compon qualiti measur constraint determin estim time sequenti execut base count variou oper estim speedup determin commun time compon rel tougher problem develop methodolog compiletim estim commun cost incur program 8 base identifi primit need carri interprocessor commun determin messag size commun cost obtain function number processor variou array distribut method partit name contigu cyclic qualiti measur variou commun constraint base estim obtain follow methodolog shall briefli describ detail found 8 commun primit use array refer pattern determin commun routin given librari best realiz requir commun variou loop idea first present li chen 14 show explicit commun synthes analyz data refer pattern extend work sever way abl handl much comprehens set pattern describ 14 assum follow commun routin support oper system runtim librari send messag singl sourc singl destin processor onetomanymulticast multicast messag processor along specifi dimens processor grid reduc sens apl reduct oper data use simpl associ oper processor lie specifi grid dimens manytomanymulticast replic data processor given grid dimens tabl 1 show cost complex function correspond primit hypercub architectur paramet denot messag size word seq sequenc number repres number processor variou dimens aggreg commun primit carri function num appli sequenc simpli return total number processor repres sequenc name product number sequenc gener parallel system written given machin must knowledg actual time figur associ primit machin one possibl approach obtain time figur train set method recent propos balasundaram et al 2 subscript type array refer pattern character loop statement appear kind subscript express use index variou dimens array subscript express assign one follow categori subscript express evalu constant compil time subscript express reduc form c 1 constant loop index note induct variabl correspond singl loop index also fall categori ffl variabl default case signifi compil knowledg subscript express vari differ iter loop subscript type index variabl defin paramet call changelevel level innermost loop subscript express chang valu subscript type index simpli level loop correspond index appear express method statement loop assign array use valu differ array shall refer array appear left hand side right hand side assign statement lh rh array express estim commun cost function number processor variou dimens array distribut assign statement refer multipl array procedur repeat rh array sake breviti shall give brief outlin step procedur detail algorithm associ step given 8 1 loop enclos statement loop need perfectli nest insid one anoth determin whether commun requir taken loop step ensur whenev differ messag sent differ iter loop combin recogn opportun use cost function associ aggreg commun primit rather associ repeat transfer oper algorithm take decis also identifi program transform loop distribut loop permut expos opportun combin messag 2 rh refer identifi pair dimens array rh lh align commun cost determin assum align array dimens determin qualiti measur align constraint simpli obtain differ cost case given dimens align 3 pair subscript lh rh refer correspond align dimens identifi commun term repres contribut pair overal commun cost whenev least one subscript pair type index variabl term repres contribut enclos loop identifi valu changelevel kind contribut loop depend whether loop identifi step 1 one commun taken outsid commun taken outsid term contribut loop correspond aggreg commun primit otherwis correspond repeat transfer 4 multipl refer statement rh array identifi isomorph refer name refer subscript correspond dimens type commun cost pertain isomorph refer obtain look cost correspond one refer step 3 determin get modifi adjust term remain refer 5 commun term repres contribut variou loop variou loop independ subscript pair obtain compos togeth use appropri order determin overal commun cost involv execut given assign statement program exampl present exampl program segment show kind constraint infer data refer associ qualiti measur obtain appli methodolog along exampl provid explan justifi qualiti measur deriv constraint express qualiti measur howev obtain automat follow methodolog exampl 1 parallel constraint distribut 1 2 cyclic manner exampl show multipli nest parallel loop extent variat index inner loop vari valu index outer loop simplifi analysi indic 1 2 distribut cyclic manner would obtain speedup nearli n otherwis imbal caus contigu distribut would lead effect speedup decreas factor two c p estim time sequenti execut given program segment qualiti measur exampl 2 commun constraint align 1 ensur distribut relat follow manner j 2 b c 3 dimens pair mention align relationship hold element b resid processor may need processor henc n 1 n 2 n n j element held processor replic processor commun constraint ffl align 1 seen previou exampl valu b held n n j processor replic indic dimens align distribut n 1 processor processor need get element boundari row two neighbor processor given term indic transfer oper take place condit n 1 analysi similar previou case contigu manner distribut cyclic processor need commun b element two neighbor processor contigu manner analysi similar previou case note loop also parallel constraint associ c p indic estim sequenti execut time loop combin comput time estim given parallel constraint commun time estim given get follow express execut time n j interest see express captur rel advantag distribut array b row column block differ case correspond differ valu n 1 n 2 5 strategi data partit basic idea strategi consid constraint distribut variou array indic import segment program combin consist manner obtain overal data distribut resolv conflict mutual inconsist constraint basi qualiti measur qualiti measur constraint often express term n number element along arri dimens n number processor dimens distribut compar numer need estim valu n n valu n may suppli user assert specifi interact environ may estim compil basi array declar seen program need valu variabl form pose circular problem valu becom known final distribut scheme determin need stage decis data distribut taken break circular assum initi array dimens distribut equal number processor enough decis data distribut taken boolean constraint know whether satisfi start use express execut time function variou n determin actual valu execut time minim strategi determin data distribut scheme given inform constraint consist step given step involv take decis aspect data distribu tion manner keep build upon partial inform describ data partit scheme complet pictur emerg approach fit natur idea use constraint distribut sinc constraint look upon partial specif data distribu tion step present simpl enough autom henc discuss realli refer parallel compil 1 determin align dimens variou array problem refer compon align problem li chen 15 prove problem npcomplet give effici heurist algorithm adapt approach problem use algorithm determin align array dimens undirect weight graph call compon affin graph cag construct sourc program node graph repres dimens array everi constraint align two dimens edg weight equal qualiti measur constraint gener correspond two node compon align problem defin partit node set cag maximum dimens array disjoint subset total weight edg across node differ subset minim restrict two node correspond array subset thu approxim solut compon align problem indic dimens variou array align establish onetoon correspond class align array dimens virtual dimens processor grid topolog thu map array dimens virtual grid dimens becom known end step 2 sequenti array dimens need partit given class align array dimen sion dimens necessarili distribut across one processor get speedup determin look parallel constraint sequenti dimens class lead signific save commun cost without loss effect parallel 3 determin follow paramet distribut along dimens contiguouscycl rel block size class dimens sequenti array dimens number element given kind distribut contigu cyclic array dimens compar sum total qualiti measur constraint advoc contigu distribut favor cyclic distribut choos one higher total qualiti measur thu collect decis taken dimens class maxim overal gain array dimens distribut certain number processor contigu manner block size determin number element along dimens howev distribut cyclic flexibl choos size block get cyclic distribut henc cyclic distribut chosen class align dimens look constraint rel block size pertain distribut variou dimens class constraint may mutual consist henc strategi adopt partit given class align dimens equival subclass member subclass block size assign dimens subclass done follow greedi approach constraint impli relationship two distribut consid nonincreas order qualiti measur two concern array dimens yet assign subclass assign done basi rel block size impli constraint dimens alreadi assign respect subclass present constraint ignor sinc assign must done use constraint higher qualiti measur rel block size determin use heurist smallest block size fix one relat block size determin accordingli 4 determin number processor along dimens point boolean constraint know whether satisfi ad togeth term comput time commun time qualiti measur constraint satisfi obtain express estim execut time let 0 denot number virtual grid dimens yet sequenti point express obtain execut time function variabl repres number processor along correspond grid dimens real program expect valu 0 two one 0 2 first sequenti except two given dimens base follow heurist evalu execut time express program c 0case case correspond 2 differ n variabl set n set 1 n total number processor system case give smallest valu execut time chosen correspond dimens sequenti get two dimens execut time express function one variabl 1 sinc n 2 given nn 1 evalu execut time express differ valu variou factor n rang 1 n select one lead smallest execut time 5 take decis replic array array dimens take two kind decis step first kind consist determin addit distribut function onedimension array final chosen grid topolog two real dimens kind involv decid whether overrid given distribut function array dimens ensur replic rather partit processor correspond grid dimens assum enough memori processor support replic array deem necessari assumpt hold strategi simpli modifi becom select choos array array dimens replic second distribut function onedimension array may integ constant case array element get map uniqu processor may take valu x signifi element get replic along dimens array look constraint correspond loop array use array candid replic along second grid dimens qualiti measur constraint satisfi show array multicast dimens exampl array array b exampl loop shown section 3 2 sequenti decis favor replic taken time array written cost processor second grid dimens carri comput less sum cost perform comput singl processor multicast result note cost perform comput processor turn less valu need comput replic everi onedimension array replic second distribut function given constant valu zero decis overrid distribut function array dimens partit replic grid dimens taken sparingli replic done array element written program loop involv send valu element array processor along grid dimens simpl exampl illustr strategi combin constraint across loop shown first loop impos constraint align 1 sinc variabl use subscript dimens also suggest sequenti 2 regardless valu c 1 c 2 element may resid processor second loop impos requir distribut cyclic compil recogn rang inner loop fix directli valu outer loop index henc would seriou imbal load processor carri partial summat unless array distribut cyclic constraint consist get accept step 1 4 3 respect strategi henc final combin constraint lead follow distribut rowwis cyclic columnwis cyclic b gener conflict step strategi differ constraint impli variou loop consist conflict get resolv basi qualiti measur 6 studi numer program approach automat data partit presuppos compil abil identifi variou depend program current process implement approach use parafrase2 17 sourcetosourc restructur develop univers illinoi underli tool analyz program prior perform extens studi use well known scientif applic program determin applic propos idea real program one object determin extent stateoftheart parallel compil provid inform data refer program system may infer appropri constraint distribut array howev even complet inform program comput structur avail problem determin optim data decomposit scheme nphard henc second object find strategi lead good decis data partit given enough inform data refer program applic program five differ fortran program vari complex use studi simplest program chosen use routin dgefa linpack librari routin factor real matrix use gaussian elimin partial pivot next program use eispack librari routin tred2 reduc real symmetr matrix symmetr tridiagon matrix use accumul orthogon similar transform remain three program perfect club benchmark suit 6 program trfd simul comput aspect twoelectron integr transform code mdg provid molecular dynam model water molecul liquid state room temperatur pressur flo52 twodimension code provid analysi transon inviscid flow past airfoil solv unsteadi euler equat methodolog testb implement evalu scheme intel ipsc2 hypercub system object obtain good data partit program run 16processor configur obtain actual valu qualiti measur variou constraint requir us knowledg cost variou commun primit arithmet oper machin use follow approxim function 10 estim time taken microsecond complet ransfer oper l byte ae parallel code implement manytomanymulticast primit repeat call onetomani multicast primit henc estim qualiti measur former function express term latter one onetomanymulticast oper send messag p processor assum pe time expens transfer oper messag size time taken execut doubl precis float point add multipli oper taken approxim 5 microsecond float point divis assum twice expens simpl assign load store onetenth expens overhead make arithmet function call five time much time overhead associ variou control instruct ignor studi apart use parafrase2 indic loop paralleliz step approach simul hand use studi opportun gain insight data decomposit problem examin feasibl approach result larg major loop parafrase2 abl gener enough inform enabl appropri formul constraint determin qualiti measur approach loop inform parallel adequ base examin program identifi follow techniqu underli parallel compil use implement approach need augment ffl sophist interprocedur analysi need constant propag across procedur 3 case need addit refer inform variabl procedur inlin expans procedur ffl extens idea scalar expans name expans small array essenti get benefit approach like scalar variabl also treat small array replic processor help remov antidepend outputdepend loop number case often save compil get fool parallel smaller loop involv array expens leav bigger paralleliz loop sequenti ffl recognit reduct oper loop oper may get parallel appro priat exampl addit min max oper sinc none featur beyond capabl parafrase2 get fulli develop matter stateoftheart parallel compil assum remain part studi capabl present parallel compil support implement present distribut scheme variou array arriv appli strategi program variou constraint associ qualiti measur record tabl 2 summar final distribut signific array program use follow inform notat descript array indic number element along dimens specifi dimens distribut cycliccontiguousrepl also indic number processor dimens distribut special case number one indic dimens sequenti exampl first entri tabl show 2d array z consist 512 x 512 element distribut cyclic row processor choos tred2 routin illustr step strategi greater detail sinc small yet reason complex program defi easi determin right data partit scheme simpl inspect remain program explain basi certain import decis relat formul constraint array distribut taken sometim help sampl program segment tred2 program show effect strategi actual result perform differ version parallel program implement ipsc2 use differ data partit strategi tred2 sourc code tred2 list figur 2 along code list shown probabl take branch variou condit go statement probabl assum suppli compil also correspond statement loop impos constraint indic four categori describ section 3 constraint belong base align constraint compon affin graph cag shown figur 3 construct program node cag 15 repres array dimens weight edg denot commun cost incur array dimens repres two node correspond edg align edg weight cag follow onetomanymulticastnn hn j line 83 along term indic line number program constraint correspond qualiti measur may trace total number processor denot n n n j refer number processor along variou array dimens initi assum distribut appli algorithm compon align 15 graph get follow class dimens class 1 consist 1 consist 2 z 2 class get map dimens 1 2 respect processor grid step 2 strategi none array dimens sequenti parallel constraint favor distribut dimens z 1 z 2 step 3 distribut function array dimens two class determin cyclic numer constraint dimens array z e favor cyclic distribut block size distribut align array dimens set one henc end step distribut variou array dimens move step 4 determin valu n 1 valu n 2 simpli get fix nn 1 ad togeth actual time measur given variou constraint penalti measur variou constraint get satisfi get follow express execut time program part depend n 1 c fact valu n rang 4 16 see express execut time get minim valu n 1 set n easi see sinc first term appear boldfac domin express vanish n incident term come qualiti measur variou constraint sequenti z 2 real processor grid therefor one dimens array dimens second class get sequenti henc distribut function array dimens end step sinc use processor grid one singl dimens need second distribut function array e uniqu specifi processor variou element array none array dimens chosen replic step 5 specifi formal definit distribut function data distribut scheme final emerg distribut array z row cyclic fashion distribut array e also cyclic n processor dgefa dgefa routin oper singl n x n array factor use gaussian elimin partial pivot let n 1 n 2 denot respect number processor row column array distribut loop comput maximum element column pivot element one scale element column yield execut time term show commun time part increas comput time part decreas due increas parallel increas n 1 loop involv exchang row due pivot suggest constraint sequenti 1 ie set n 1 1 intern commun correspond exchang row doublynest loop involv updat array element correspond triangular column show parallel potenti commun parallel done level nest paralleliz loop nest insid singl inher sequenti loop program number iter execut vari directli valu outer loop index henc loop impos constraint distribut along dimens cyclic better load balanc compil need know valu n evalu express execut time n 1 unknown present result two case 256 analysi show first case compil would come n 1 16 second case would 8 thu given inform valu n compil would favor columncycl distribut smaller valu n gridcycl distribut larger valu n trfd trfd benchmark program goe seri pass pass essenti involv set data array make repeat call loop particular subroutin appli approach get distribut array use subroutin nine array get use shown tabl 3 actual alias give flavor distribut get arriv show program segment 70 70 continu first loop lead follow constraint align xrsiq 1 v 2 sequenti xrsiq 2 v 1 second loop advoc align xij 1 v 2 sequenti v 1 cyclic distribut xij 1 sinc number iter inner loop modifi xij vari valu outer loop index constraint cyclic distribut get pass xij 1 v 2 v 2 xrsiq 1 constraint togeth impli columncycl distribut v rowcycl distribut xrsiq cyclic distribut xij similarli appropri distribut scheme determin array xijk xkl refer involv array xrspq xijr xrsij xijkl somewhat complex variat subscript mani refer analyz compil distribut array specifi contigu reduc certain commun cost involv broadcast valu array mdg program use two import array var vm number small array replic accord strategi array vm divid three part get use differ array name xm ym zm variou subroutin similarli array var get partit twelv part appear differ subroutin differ name tabl 3 show distribut individu smaller array array fx fy fz correspond two differ part var differ invoc subroutin interf program numer paralleliz loop three distinct contigu element array correspond var get access togeth iter lead constraint distribut array use block size multipl three doubli nest loop subroutin interf poteng oper array number iter inner loop vari directli valu outer loop index seen earlier program lead constraint array cyclic distribut combin previou constraint get distribut scheme array partit block three element distribut cyclic show part program segment use slightli chang syntax make code concis illustr relationship distribut part var x part vm 1000 1000 continu loop variabl iwo iw1 iw2 get recogn induct variabl express term loop index refer loop establish correspond element xm threeelement block x yield similar relationship involv array ym zm henc array xm ym zm given cyclic distribut complet cyclic distribut block size one flo52 program comput involv number signific array shown tabl 3 mani array declar main program realli repres collect smaller array differ size referenc differ step program name instanc array w declar big 1d array main program differ part get suppli subroutin euler paramet formal paramet 3d array w differ step program case alway refer smaller array pass variou subroutin describ distribut array also size array w vari differ step program entri size array tabl indic largest array number paralleliz loop referenc 3d array w x access element vari along third dimens array togeth singl assign statement henc third dimens array sequenti numer paralleliz loop establish constraint 2d array list tabl ident distribut moreov two dimens array align first two dimens list 3d array dictat refer pattern sever loop interest issu illustr follow program segment 38 continu loop impos constraint first two dimens array contigu rather cyclic distribut commun involv p valu occur across boundari region array alloc variou processor let n 1 n 2 denot number processor first second dimens distribut first part program segment specifi constraint sequenti p 1 second one give constraint sequenti p 2 qualiti measur constraint give term commun cost vanish n 1 n 2 respect set one order choos actual valu n 1 n 2 given n 1 compil evalu express execut time differ valu n 1 n 2 requir know valu array bound specifi program segment variabl il jl sinc valu actual depend user input compil would assum real array bound given array declar base simplifi analysi expect compil final come given accur inform differ assumpt array bound valu chosen n 1 n 2 may differ distribut 1d array indic tabl get determin appropri case base consider align array dimens other due contigu distribut processor default mode distribut experiment result tred2 program implement show result perform differ version parallel tred2 program implement ipsc2 use differ data partit strategi data distribut scheme select strategi shown tabl 2 distribut array z row cyclic fashion distribut array e also cyclic manner n processor start sequenti program wrote target host node program ipsc2 hand use scheme suggest parallel compil 4 22 handoptim code first implement version use data distribut scheme suggest strategi ie row cyclic altern scheme also look reason look variou constraint one distribut array z column instead row get idea gain made perform sequenti class dimens ie distribut z block gridlik manner also gain made choos cyclic rather contigu distribut array implement two version program version correspond bad choic data distribut user might make care enough program run two differ data size correspond valu 256 512 n plot perform variou version program shown figur 4 sequenti time program shown case sinc program could run singl node due memori limit data partit scheme suggest strategi perform much better scheme data size shown figur 7 b smaller data size figur 7 scheme use column distribut array work slightli better fewer processor use approach identifi number constraint favor column distribut scheme get outweigh constraint favor rowwis distribut array regard issu strategi clearli advoc use cyclic distribut rather contigu also sequenti class dimens suggest numer constraint sequenti variou array dimens fact observ inde crucial seen poor perform program correspond contigu rowwis z distribut array also one correspond block gridlik distribut array z result show program approach abl take right decis regard certain key paramet data distribut suggest data partit scheme lead good perform conclus present new approach constraintbas approach problem determin suitabl data partit program approach quit gener appli larg class program refer analyz compil time demonstr effect approach reallif scientif applic program feel major contribut problem automat data partit ffl analysi entir program look data distribut perspect perform entir program individu program segment notion constraint make easier captur requir impos differ part program overal data distribut sinc constraint associ loop specifi basic minim requir data distribut often abl combin constraint affect differ paramet relat distribut array studi numer program confirm situat combin possibl aris frequent real program ffl balanc parallel commun consider take account commun cost parallel consider overal execut time reduc ffl varieti distribut function relationship distribut formul distribut function allow rich varieti possibl distribut scheme array idea relationship array distribut allow constraint formul one array influenc distribut array desir manner approach data partit limit guarante optim result obtain follow strategi given problem nphard procedur compiletim determin qualiti measur constraint base number simplifi assumpt instanc assum loop bound probabl execut variou branch condit statement known compil expect user suppli inform interact form assert futur plan use profil suppli compil inform regard frequent variou basic block code execut mention earlier process implement approach intel ipsc2 hypercub use parafrase2 restructur underli system also explor number possibl extens approach import issu look data reorgan program might desir partit data one way particular program segment repartit move next program segment also plan look problem interprocedur analysi formul constraint may done across procedur call final examin better estim could obtain qualiti measur variou constraint presenc compil optim like overlap commun comput elimin redund messag via live analysi array variabl 9 import problem data partit bound continu grow machin larger number processor keep get built number issu need resolv research truli autom high qualiti system built data partit multicomput howev believ idea present paper lay effect framework solv problem acknowledg wish express sincer thank prof constantin polychronopoulo give us access sourc code parafrase2 system allow us build system top also wish thank refere valuabl suggest r interact environ data partit distribut static perform estim guid data partit decis interprocedur constant propag compil program distributedmemori multiprocessor compil parallel program optim perform perfect club automat data partit distribut memori multiprocessor compil support machineindepend parallel program fortran messag pass coprocessor distribut memori multicomput compil techniqu data partit sequenti iter parallel loop program parallel compil transform nonshar memori machin gener explicit commun sharedmemori program refer index domain align minim cost crossreferenc distribut array memori storag pattern parallel process methodolog parallel program multicomput complex memori multiprocessor process decomposit local refer dino parallel program languag approach compil singlepoint iter program distribut memori com puter superb tool semiautomat mimdsimd parallel tr program parallel memori storag pattern parallel process process decomposit local refer methodolog parallel program multicomput complex memori multiprocessor static perform estim guid data partit decis messag pass coprocessor distribut memori multicomput gener explicit commun sharedmemori program refer compil techniqu data partit sequenti iter parallel loop ctr kueip shih jangp sheu chuahuang huang statementlevel communicationfre partit techniqu parallel compil journal supercomput v15 n3 p243269 mar12000 rohit chandra dingkai chen robert cox dror e maydan nenad nedeljkov jennif anderson data distribut support distribut share memori multiprocessor acm sigplan notic v32 n5 p334345 may 1997 tom bennet distribut messag rout runtim support messagepass parallel program deriv ordinari program proceed 1994 acm symposium appli comput p510514 march 0608 1994 phoenix arizona unit state manish gupta edith schonberg static analysi reduc synchron cost dataparallel program proceed 23rd acm sigplansigact symposium principl program languag p322332 januari 2124 1996 st petersburg beach florida unit state zaafrani r ito partit global space distribut memori system proceed 1993 acmiee confer supercomput p327336 decemb 1993 portland oregon unit state zaafrani mabo robert ito effici execut doacross loop distribut memori system proceed ifip wg103 work confer architectur compil techniqu fine medium grain parallel p2738 januari 2022 1993 chen j p sheu communicationfre data alloc techniqu parallel compil multicomput ieee transact parallel distribut system v5 n9 p924938 septemb 1994 ernesto su daniel j palermo prithviraj banerje processor tag descriptor data structur compil distributedmemori multicomput proceed ifip wg103 work confer parallel architectur compil techniqu p123132 august 2426 1994 ram subramanian santosh pand framework performancebas program partit progress comput research nova scienc publish inc commack ny 2001 ram subramanian santosh pand framework performancebas program partit progress comput research nova scienc publish inc commack ny 2001 manish gupta prithviraj banerje paradigm compil automat data distribut multicomput proceed 7th intern confer supercomput p8796 juli 1923 1993 tokyo japan manish gupta prithviraj banerje methodolog highlevel synthesi commun multicomput proceed 6th intern confer supercomput p357367 juli 1924 1992 washington c unit state tatsuya shindo hidetoshi iwashita shaun kaneshiro tsunehisa doi junichi hagiwara twist data layout proceed 8th intern confer supercomput p374381 juli 1115 1994 manchest england chihzong lin chienchao tseng yilin chen tsowei kuo systemat approach synthes data align direct distribut memori machin nordic journal comput v3 n2 p89110 summer 1996 skew data partit align techniqu compil program distribut memori multicomput journal supercomput v21 n2 p191211 februari 2002 data parallel program numa multiprocessor usenix system usenix experi distribut multiprocessor system p1313 septemb 2223 1993 san diego california zaafrani r ito express crossloop depend hyperplan data depend analysi proceed 1994 acmiee confer supercomput novemb 1418 1994 washington dc kandemir 2d data local definit abstract applic proceed 2005 ieeeacm intern confer computeraid design p275278 novemb 0610 2005 san jose ca zaafrani r ito express crossloop depend hyperplan data depend analysi proceed 1994 confer supercomput p508517 decemb 1994 washington dc unit state paul feautrier toward automat partit array distribut memori comput proceed 7th intern confer supercomput p175184 juli 1923 1993 tokyo japan kandemir j ramanujam choudhari p banerje layoutconsci iter space transform techniqu ieee transact comput v50 n12 p13211336 decemb 2001 nicla andersson peter fritzson gener parallel code object orient mathemat model acm sigplan notic v30 n8 p4857 aug 1995 gwanhwan hwang chengwei chen jenq kuen lee roy dzching ju segment align enhanc model align data parallel program hpf journal supercomput v25 n1 p1741 may anant agarw david kranz venkat natarajan automat partit parallel loop data array distribut sharedmemori multiprocessor ieee transact parallel distribut system v6 n9 p943962 septemb 1995 dean engelhardt andrew wendelborn partitioningindepend paradigm nest data parallel proceed ifip wg103 work confer parallel architectur compil techniqu p224233 june 2729 1995 limassol cypru byoungro mari w hall heidi e ziegler custom data layout memori parallel proceed intern symposium code gener optim feedbackdirect runtim optim p291 march 2024 2004 palo alto california chauwen tseng jennif anderson saman p amarasingh monica lam unifi compil techniqu share distribut address space machin proceed 9th intern confer supercomput p6776 juli 0307 1995 barcelona spain edouard bugnion jennif anderson todd c mowri mendel rosenblum monica lam compilerdirect page color multiprocessor acm sigplan notic v31 n9 p244255 sept 1996 waime ching alex katz experiment apl compil distribut memori parallel machin proceed 1994 confer supercomput p5968 decemb 1994 washington dc unit state wai mee ching alex katz experiment apl compil distribut memori parallel machin proceed 1994 acmiee confer supercomput novemb 1418 1994 washington dc peizong lee effici algorithm data distribut distribut memori parallel comput ieee transact parallel distribut system v8 n8 p825839 august 1997 jennif anderson monica lam global optim parallel local scalabl parallel machin acm sigplan notic v28 n6 p112125 june 1993 vikram adv alan carl elana granston seema hiranandani ken kennedi charl koelbel ulrich kremer john mellorcrummey scott warren chauwen tseng requir dataparallel program environ ieee parallel distribut technolog system technolog v2 n3 p4858 septemb 1994 david garzasalazar wim bhm reduc commun honor multipl align proceed 9th intern confer supercomput p8796 juli 0307 1995 barcelona spain mahmut kandemir alok choudhari nagaraj shenoy prithviraj banerje j ramanujam linear algebra framework automat determin optim data layout ieee transact parallel distribut system v10 n2 p115135 februari 1999 chauwen tseng compil optim elimin barrier synchron acm sigplan notic v30 n8 p144155 aug 1995 mario nakazawa david k lowenth wendou zhou execut model heterogen cluster proceed 2005 acmiee confer supercomput p7 novemb 1218 2005 john plevyak vijay karamcheti xingbin zhang andrew chien hybrid execut model finegrain languag distribut memori multicomput proceed 1995 acmiee confer supercomput cdrom p41e decemb 0408 1995 san diego california unit state mahmut kandemir alok choudhari j ramanujam meenakshi kandaswami unifi framework optim local parallel commun outofcor comput ieee transact parallel distribut system v11 n7 p648668 juli 2000 mahmut taylan kandemir compil techniqu improv wholeprogram local acm sigplan notic v36 n3 p179192 march 2001 jennif anderson saman p amarasingh monica lam data comput transform multiprocessor acm sigplan notic v30 n8 p166178 aug 1995 micha cierniak wei li unifi data control transform distribut sharedmemori machin acm sigplan notic v30 n6 p205217 june 1995 ismail kadayif mahmut kandemir quasidynam layout optim improv data local ieee transact parallel distribut system v15 n11 p9961011 novemb 2004 mahmut taylan kandemir improv wholeprogram local use intraprocedur interprocedur transform journal parallel distribut comput v65 n5 p564582 may 2005 pedro c diniz martin c rinard dynam feedback effect techniqu adapt comput acm sigplan notic v32 n5 p7184 may 1997 peizong lee zvi meir kedem automat data comput decomposit distribut memori parallel comput acm transact program languag system topla v24 n1 p150 januari 2002 mahmut kandemir alok choudhari prithviraj banerje j ramanujam nagaraj shenoy minim data synchron cost oneway commun ieee transact parallel distribut system v11 n12 p12321251 decemb 2000 mahmut kandemir prithviraj banerje alok choudhari j ramanujam eduard ayguad static dynam local optim use integ linear program ieee transact parallel distribut system v12 n9 p922941 septemb 2001 pascal fradet julien mallet compil special function languag massiv parallel comput journal function program v10 n6 p561605 novemb 2000 kandemir p banerje choudhari j ramanujam n shenoy global commun optim techniqu base dataflow analysi linear algebra acm transact program languag system topla v21 n6 p12511297 nov 1999 mahmut kandemir compilerdirect collectiveio ieee transact parallel distribut system v12 n12 p13181331 decemb 2001 mahmut kendemir j ramanujam data relat vector new abstract data optim ieee transact comput v50 n8 p798810 august 2001 pedro c diniz martin c rinard elimin synchron overhead automat parallel program use dynam feedback acm transact comput system toc v17 n2 p89132 may 1999 akimasa yoshida kenichi koshizuka hironori kasahara dataloc fortran macrodataflow comput use partial static task assign proceed 10th intern confer supercomput p6168 may 2528 1996 philadelphia pennsylvania unit state p banerje peerci design evalu hardwar strategi reconfigur hypercub mesh fault ieee transact comput v43 n7 p841848 juli 1994 henri e bal fran kaashoek object distribut orca use compiletim runtim techniqu acm sigplan notic v28 n10 p162177 oct 1 1993 ken kennedi ulrich kremer automat data layout distributedmemori machin acm transact program languag system topla v20 n4 p869916 juli 1998