comput complex knowledg complex studi comput complex languag interact proof logarithm knowledg complex show languag recogn cal bppcal np prior work languag greaterthanzero knowledg complex trivial comput complex bound known cours proof relat statist knowledg complex perfect knowledg complex specif show honest verifi hierarchi coincid logarithm addit term b introduct notion knowledgecomplex introduc semin paper goldwass micali rackoff gmr85 gmr89 knowledgecomplex kc intend measur comput advantag gain interact satisfactori formul knowledg complex case zero recent appear gp91 natur suggest made goldwass micali rackoff classifi languag accord knowledgecomplex interactiveproof gmr89 feel worthwhil give suggest fair tri lowest level knowledgecomplex hierarchi class languag interact proof knowledgecomplex zero better known zeroknowledg actual three hierarchi extend three standard definit zeroknowledg name extend abstract paper appear 26th acm symposium theori comput stoc 94 held montreal quebec canada may 2325 1994 depart appli mathemat comput scienc weizmann institut scienc rehovot israel email odedwisdomweizmannacil support grant 9200226 unit state israel binat scienc foundat jerusalem israel z comput scienc divis univers california berkeley intern comput scienc institut berkeley ca 94720 email rafailcsberkeleyedu support nsf postdoctor fellowship icsi x comput scienc depart technion israel institut technolog haifa 32000 israel email erezcstechnionacil perfect statist comput let us denot correspond hierarchi pkcdelta skcdelta ckcdelta assum exist oneway function third hierarchi collaps name differ zero level comput knowledgecomplex extend maximum possibl anyhow rest paper interest two hierarchi previou work provid inform concern zero level hierar chi fortnow pioneer attempt investig comput complex perfectstatist zeroknowledg f89 follow aiello hastad ah87 result summar follow theorem bound comput complex languag zeroknowledg proof theorem f89 ah87 coam henc languag statist zeroknowledg must lie second level polynomialtim hierarchi needless say function k particular k j 0 hand allow polynomi amount knowledg reveal everi languag ip proven theorem lfkn90 sh90 indic gp91 first equal properti adequ definit knowledg complex rather result paper studi class languag interactiveproof logarithm knowledgecomplex particular bound comput complex languag show recogn probabilist polynomialtim machin access np oracl main theorem recal bpp np contain third level polynomialtim hierarchi ph believ ph proper subset pspace thu assum ph ae pspace result yield first proof exist languag pspace proven interactiveproof yield olog n bit knowledg word exist languag interact proof interact proof superlogarithm knowledgecomplex prior work solid indic 1 would contradict possibl languag pspace interactiveproof yield one bit knowledg ala one will assum languag pspace interact proof logarithm mani round assumpt consid unreason result bp92 would yield proof pspace contain skc1 provid ph ae pspace attempt bound comput complex languag interact proof low knowledgecomplex done bellar petrank yet work refer languag interact proof round low knowledg complex bp92 specif show languag l rnround interactiveproof knowledgecomplex log n languag recogn bpp np proof main theorem consist two part first part show procedur describ bellar petrank bp92 suffic recogn languag interact proof logarithm perfect knowledg complex end use care analysi one use bp92 second part proof transform interact proof statist knowledg complex kn interact proof perfect knowledg complex knlog n transform refer knowledgecomplex respect honest verifi suffic sinc first part proof appli knowledgecomplex respect honest verifi yet transform interest sake word place question whether statist zeroknowledg equal perfect zeroknowledg one better known open problem area question open also case zeroknowledg respect honest verifi show everi polytim comput function k n7n particular k j result may consid indic two hierarchi may collid techniqu use state first part proof consist present care analysi exist procedur name procedur suggest bellar petrank bp92 procedur turn culmin two sequenc work discuss bellow first sequenc origin fortnow definit simulatorbas prover f89 fortnow f89 consequ aiello hastad ah87 use simulatorbas prover order infer way contradict bound size specif set explicit usag simulatorbas prover introduc bellar micali ostrovski specif suggest use pspaceimplement simulatorbas prover instead use origin prover unbound complex wit exist zeroknowledg interact proof system thu obtain bound complex prover requir zeroknowledg proof system ostrovski ost91 suggest use implement interact verifi simulationbas prover procedur decid languag furthermor assum oneway function exist use univers extrapol procedur ilu90 ile90 approxim behavior simulatorbas prover thu assum oneway function exist present effici procedur decid languag skc0 infer oneway function essenti nontrivi statist zeroknowledg bellar petrank distil decis procedur context oneway function show simulatorbas prover implement use perfect univers extrapol also known uniform gener procedur bp92 error implement directli relat deviat uniform gener procedur second sequenc work deal two relat problem approxim size set uniformli gener element problem relat jerrum et al jvv86 procedur approxim size set invent sipser si83 stockmey st83 improv gs89 ah87 use hash paradigm hash techniqu basi univers extrapo lation procedur ilu90 ile90 howev output procedur deviat object ie uniform distribut target set nonneglig amount ie 1polyt run time hand jerrum et al also point perfect uniform gener done bpp sigma p bellar petrank combin hashingbas approxim method idea jvv86 obtain bpp np procedur uniform gener exponenti vanish error probabl bp92 actual procedur allow halt output constant exponenti vanish probabl output distribut exactli uniform target set motiv studi kc addit selfevid fundament appeal knowledg complex wish point practic motiv consid knowledgecomplex greater zero particular cryptograph protocol releas small ie logarithm amount knowledg may practic valu especi appli one obtain subaddit bound knowledg complex repeat execut note typic singl applic subprotocol leak logarithm mani bit knowl edg compromis secur entir protocol reason logarithm mani bit guess nonneglig probabl turn mean attack due leak bit simul nonneglig probabl without use low knowledgecomplex protocol one use zeroknowledg one see gmw86 gmw87 reason nonzeroknowledg protocol may effici andor may requir weaker comput assumpt see exampl ovy91 remark remark concern two definit throughout paper skckdelta pkckdelta denot class knowledgecomplex respect honest verifi note main theorem strengthen wherea transform mention inde weaker furthermor interact proof mean one error probabl neglig ie smaller polynomi fraction word justif appear section 2 remark concern fortnow paper f89 cours research found proof skc0 coam appear f89 correct particular flaw amprotocol present f89 complement languag see appendix howev paper aiello hastad provid necessari machineri prove fortnow result well ah87 h94 needless say basic approach present fortnow ie look simulatorbas prover valid inspir subsequ work eg ah87 bmo90 ost91 bp92 ow93 well current one preliminari let us state definit convent use paper throughout paper use n denot length input x function f call neglig everi polynomi p suffici larg ns pn 21 interact proof let us recal concept interact proof present gmr89 formal definit motiv discuss reader refer gmr89 protocol comput unbound prover p probabilist polynomialtim verifi v constitut interact proof languag l exist neglig function ffl 1 complet x 2 l 2 sound x 62 l prover p remark usual definit interact proof robust sens set error probabl bound away 1doe chang express power sinc error probabl reduc repetit howev standard procedur applic knowledgecomplex measur sinc even sequenti repetit may increas knowledgecomplex question thu right definit definit use quit standard natur certainli less arbitrari set error favorit constant eg 1 function eg 2 gamman yet techniqu yield nontrivi result also case one defin interact proof nonneglig error probabl eg constant error probabl exampl languag interact proof error probabl 14 perfect knowledg complex 1 also bpp np detail see appendix b also note allow twosid error probabl strengthen main result weaken statist perfect transform 2 suppos transform onesid case given twosid interact proof statist knowledg complex could transform onesid error proof knowledg complex cf gms87 appli transform onesid case would yield even better result 22 knowledg complex throughout rest paper refer knowledgecomplex respect honest verifi name abil simul honest verifi view interact prover stronger definit one consid abil simul point view effici verifi interact prover let denot random variabl repres v view interact p common input x view contain verifi random tape well sequenc messag exchang parti begin briefli recal definit perfect statist zeroknowledg perfect zeroknowledg resp statist zeroknowledg languag l probabilist polynomi time simul everi x 2 l random variabl mx distribut ident statist differ mx p v x neglig function jxj next present definit perfect resp statist knowledgecomplex use sequel definit extend definit perfect resp statist zero knowledg sens knowledgecomplex zero exactli zeroknowledg actual two altern formul knowledgecomplex call oracl version fraction version formul coincid zero level differ addit constant otherwis gp91 intuit motiv see gp91 conveni use definit paper 3 oracl formul knowledgecomplex protocol number oracl bit queri need simul protocol effici definit 21 knowledg complex oracl version let k n n say interact proof languag l perfect resp statist knowledg complex kn oracl sens exist probabilist polynomi time oracl machin oracl 1 input x 2 l machin queri oracl kjxj bit 2 x 2 l machin produc output probabl least 1 given halt output x ident distribut resp statist close fraction formul simul given explicit help instead one measur densiti largest subspac simul execut ie coin ident resp close definit 22 knowledg complex fraction version let ae n 0 1 say interact proof languag l perfect resp statist knowledgecomplex log 2 1aen fraction sens exist probabilist polynomialtim machin follow good subspac properti x 2 l subset ms possibl random tape x 3 analysi bp92 procedur easier use fraction version wherea transform statist perfect easier use oracl version 1 set x contain least aejxj fraction set possibl coin toss mx 2 condit event mx coin fall x random variabl mx ident distribut resp statist close x name perfect case mean everi c mx denot output simul input x coin toss sequenc mention two measur almost equal theorem gp91 fraction measur oracl measur equal addit constant sinc none result sensit differ addit constant measur ignor differ subsequ definit well statement result definit 23 knowledg complex class languag interact proof perfect knowledg complex kdelta languag interact proof statist knowledg complex kdelta 23 simul base prover import ingredi proof notion simul base prover introduc fortnow f89 consid simul output convers interact prover p verifi v defin new prover p call simul base prover select messag accord condit probabl induc simul name partial histori h convers p output messag ff probabl denot distribut induc tlong prefix convers length prefix mean number messag import note behavior p necessarili close behavior origin prover p specif knowledg complex greater 0 consid simul guarante fraction definit p p might quit differ behavior main object show even case p still behav manner benefit 3 perfect case section prove main theorem hold special case perfect knowledg complex combin result transform theorem 2 subsequ section get main theorem theorem 1 pkcolog n bpp np proof follow procedur suggest bp92 turn follow approach f89 bmo90 ost91 introduc new uniform gener procedur build idea si83 st83 gs89 jvv86 see introduct suppos interact proof perfect knowledg complex olog n languag l let simul guarante fraction formul ie definit 22 consid convers origin verifi v simulationbasedprov p see definit section 23 go show probabl interact p accept neglig x 62 l greater polynomi fraction x 2 l proof differ bp92 analysi case x 2 l thu get stronger result although use procedur separ case x 62 l x 2 l amplifi sequenti repetit protocol p remain observ sampl p probabilist polynomialtim access np oracl observ origin bp92 justifi follow clearli v part interact produc polynomialtim also uniform gener procedur bp92 implement probabilist polynomi time machin access np oracl actual implement may fail neglig probabl matter thu remain prove follow lemma lemma 31 1 x 2 l probabl p output accept convers least2 2 x 62 l probabl p output accept convers neglig remark bp92 weaker lemma proven specif show probabl p output accept convers x 2 l relat 2 gammak deltat number round protocol note proof could arbitrari polynomi number round proof second part lemma follow sound properti thu concentr first part fix arbitrari x 2 l rest proof allow mention sequel discuss notat let q number coin toss made denot q set possibl coin toss good subspac ie densiti 2 gammak inomega chosen uniformli simul output exactli distribut interact consid convers output simul 2 probabl get convers simul run uniformli select omegagamma least 2 gammak claim probabl get convers interact p also least 2 gammak obviou sinc distribut produc p ident distribut produc uniformli select 2 omegagamma necessarili ident distribut produc uniformli select 2 howev prover move p distribut case simul select uniformli omegagamma wherea verifi move p distribut case simul select uniformli thu surpris claim proven howev need claim enough p convers origin must accept well note obviou sinc simul interact proof may twosid error densiti accept convers good subspac high ie need show case also p actual show probabl p convers accept origin least let us begin formal argument notat possibl histori interact h defin subset random tape simul ie subset omegagamma h set 2omega caus simul output convers prefix h h subset inomega h also h set h also accept thu let denot tmessag long prefix output simul coin get h let c random variabl repres p indic convers c accept aim prove note c c express exactli expect valu jac j thu need show expect possibl convers c produc interact equat 1 proven done denot empti histori prove equat 1 suffic prove sinc use ja j proof equat 2 induct number round name round show expect valu ja h j possibl histori h round ie length greater equal expect valu express histori h 0 round order show induct step consid two case 1 current step prover ie p 2 current step verifi ie v case show histori h expect possibl current move given histori h produc interact p technic claim follow technic claim use deriv inequ case posit real proof cauchyschwartz inequ assert set sinc posit b rearrang term get desir inequ 2 prover step denot ff given histori h prover p send ff next messag probabl thu ff ff inequ justifi use technic claim note verifi step denot fi perfect simul restrict good subspac know given histori h verifi v send fi next messag probabl js hffifi j thu inequ justifi use technic claim note jomega h j proven equat 3 case equat 2 follow lemma 2 4 transform section show transform statist knowledg complex perfect knowledg complex incur logarithm addit term transform combin theorem 1 yield main theorem theorem 2 everi polytim comput k n 7 n stress knowledg complex class refer honest verifi dont know whether result hold analog knowledg complex class refer arbitrari polytim verifi proof use oracl formul knowledg complex see definit 21 start overview proof suppos given simul produc output statist close real proververifi interact chang interact proof simul produc exactli distribut space take advantag fact prover interact proof oracl assist simul infinit power thu modif prover program augment oracl need effici comput stress modif simul effici comput also maintain origin verifi interact proof thu result interact proof still sound furthermor result interact statist close origin one x 2 l therefor complet properti origin interact proof maintain although error probabl may increas neglig amount preliminari guarante interact proof without loss gener aliti may assum messag length 1 messagelength convent mere matter encod recal definit 21 guarante simul produc output probabl 1 yet employ proposit 38 gp91 get exist oracl machin ask kn log log n queri alway produc output output statist close interact p v let denot associ acl let simulationbas prover verifi 4 induc 0 ie rest present fix gener input x 2 l omit notat notat let b random variabl repres imessag ibit long prefix interact b common input x implicit notat denot ah random variabl repres messag sent interactionhistori h thu th messag sent write b denot fact random variabl x statist close use notat may write everi h 2 f0 1g oe 2 f0 1g similarli 41 distribut induc p statist close distribut induc proof definit distribut produc statist close thu prove p statist close p induct length interact assum p wish prove 1 distinguish two case case st move prover get use induct hypothesi case st move verifi get 4 simulatorbas verifi defin analog simulatorbas prover fictiti entiti necessarili coincid v first justifi induct hypothesi two other eq 4 stress sinc induct hypothesi use induct step statist distanc linear number induct step rather exponenti 2 motiv discuss note statist differ interact p simul due sole differ proper verifi ie verifi induc simul ie v 0 differ due v 0 put much probabl weight certain move thu also littl weight sibl messag recal messag interact contain one bit follow deal two case first case differ behavior v 0 induc 0 behavior verifi v tini case receiv attent go use oracl order move weight verifi messag fi get much weight histori h sibl messag fi phi 1 get littl weight histori h simul specif new simul 00 invok 0 come convers h ffi fi prefix simul 00 help oracl output differ convers prefix h ffi fi phi 1 instead output origin convers simul 00 probabl exactli compens differ v 0 v leav one problem new simul 00 come convers prefix h ffi fi phi 1 cost let oracl suppli rest convers known prefix hffifi phi1 high adopt brutal solut truncat convers prefix truncat take place interact p stop convers fi phi 1 special stop messag simul oracl recogn case simul 00 output truncat convers chang make 00 v behav exactli messag differ v 0 v tini natur v immedi reject p 00 stop interact abruptli make sure chang foil abil p 00 convinc v input x 2 l turn truncat happen neglig probabl sinc truncat need differ v v 0 tini thu p 00 convinc v x 2 l almost probabl p 0 second possibl case differ behavior v v 0 tini case look full convers c get tini differ sum small differ probabl c distribut 0 distribut correct differ lower probabl convers new simul probabl convers lower rel weight rel convers equal rel weight interact p technic done 00 produc output certain case 0 produc output technic remark oracl use allow simul toss bia coin simul know bia suppos simul need toss coin comesup head probabl n n integ simul suppli oracl uniformli chosen r 2 f0 1g oracl answer head r among first n string f0 1g tail otherwis similar procedur applic implement lotteri two apriori known valu use procedur get extrem good approxim probabl space cost relat apriori known upper bound size support ie oracl answer logarithm size support ot number round interact ffl let h partial histori interact fi possibl next move verifi say fi weak respect h ffl convers respect igood note convers iweak th move verifi move ffl convers iweak jgood everi convers icocrit convers obtain c complement th bit icrit note convers icrit singl yet may icocrit mani ffl convers weak iweak otherwis good convers neglig probabl proof recal p hold also prefix conver sation name 1 p us defin prefix h 2 f0 1g convers bad either ffl claim follow combin two fact fact 43 probabl p output convers bad prefix neglig set bad prefix length statist close get neglig fraction fl hand delta bound bellow definit b least thu fact follow 2 fact 44 convers contain bad prefix proof suppos fi bad prefix done otherwis hold use fact fi weak respect h get impli h ffi fi bad prefix c 2 combin fact 43 44 claim 42 follow 2 convers probabl c output 0 least 1 gamma ffl dt2e delta probp igood everi proof see case write probabl step step condit histori far note prover step happen equal probabl side inequ therefor reduc sinc relev verifi step weak get mention inequ actual proof proce induct k gamma l clearli claim hold note k gamma l 1 claim also hold sinc step k convers either prover step kgood verifi step show induct step use induct hypothesi 2 name includ one prover messag one verifi messag assum without loss gener prover step k gamma 1 sinc p 0 simul base prover get sinc step k verifi good also combin equat 5 6 7 induct step follow done 2 deal weak convers start modifi prover p 0 result modifi prover denot p 00 stop get verifi messag weak respect current histori otherwis name definit modifi prover p 00 stop fi weak respect assum verifi v stop reject immedi upon receiv illeg messag prover particular upon receiv stop messag next modifi simul output either good convers truncat convers origin icrit jump ahead stress truncat icrit convers gener icrit icocrit convers modifi simul denot 00 proce follow 5 first invok 0 obtain convers queri augment oracl c oracl answer probabilist answer form oe 2 f1 tg oe 2 f0 1g probabl distribut specifi point wish remark oracl return pair oe one follow three condit hold 1 c good good icocrit oracl alway answer way 2 c icrit 3 c icocrit oe 1 final new simul 00 halt output case prefix c note may smaller case 00 output truncat convers alway icrit otherwis 00 output nontrunc convers note oracl messag contain 1 log bit length interact p 0 v remain specifi oracl answer distribut let us start consid two special case first case convers gener 0 icrit jcocrit j case oracl alway answer 0 consequ simul alway output ibit long prefix howev prefix still output low probabl correct second case herebi describ second case convers c gener 0 good icocrit singl mean ibit long prefix given much probabl weight wherea prefix obtain compliment th bit get littl weight correct oracl output 1 probabl q q specifi happen 00 output icompli prefix higher probabl appear 0 valu q determin follow denot set q allow simul output prefix right probabl 5 stress p 00 necessarili simulatorbas prover 00 gener case convers gener 0 may icocrit mani well jcritic singl j case jcritic icocrit us consid sequenc indic 1 l gener convers critic cocrit ie convers k cocrit k l either l critic l cocrit consid two case case q k set exampl name q phi 1 phi 1 1 gener convers cocrit everi k l l critic case distribut oracl answer follow everi l pair k 1 return probabl pair appear probabl stress pair appear distribut 6 2 gener convers cocrit everi k l case distribut oracl answer follow everi k l pair return probabl pair 0 appear probabl appear distribut 1 p 2 convers p convers truncat ie critic one output 00 probabl least 3fraction probabl appear p proof weak convers neglig output distribut p 42 differ p origin differ behavior p 00 weak convers specif p 00 truncat p 0 yet distribut good convers remain unchang therefor distribut p statist close distribut p done part 1 part 2 let us start intuit discuss may help read formal proof follow first recal behavior simul 0 prover step ident behavior interact p step follow simpli fact p 0 simul base prover 0 show properti still hold new interact p new simul 00 note two differ case one case prover step conduct p 00 exactli done p 0 00 behav exactli 0 second possibl case prover step contain special messag stop shall note occur exactli probabl distribut p distribut 00 next consid verifi step construct 00 p 00 consid behavior 0 v verifi step made chang differ tini call messag fi weak respect histori h simul assign messag fi output h probabl smaller factor probabl verifi v output messag fi histori h 6 inde reader easili verifi probabl sum 1 make chang messag whose differ weight simul 0 interact smaller proof consid two case first messag fi weak respect histori h clearli sibl messag fi phi 1 get much weight simul 0 definit 00 made adjust move weight prefix h ffi fi phi 1 prefix h ffi fi show transfer weight exactli cancel differ behavior v behavior 0 name weak messag sibl assign exactli probabl 00 v thu show weak step involv behavior behavior 00 exactli equival remain deal messag differ condit behavior v 0 tini consid far case 00 behav like 0 howev sinc differ tini get even accumul differ throughout convers sum multipl factor 34 state claim let us begin formal proof write probabl p 00 c product condit probabl step name probabl 00 output convers c show induct step convers produc 00 least time probabl step p interact shown done clearli claim hold null prefix prove induct step consid two possibl parti make st step st step prover consid condit behavior 00 given histori far show behavior ident behavior p 00 partial histori delic point note may talk behavior 00 prefix prefix appear posit probabl output distribut 00 howev induct hypothesi prefix output p appear posit probabl 00 partit analysi two case 1 first consid case last messag verifi weak respect histori preced name fi weak respect h 0 case interact p simul 00 next messag prover set stop probabl 1 name 2 possibl case last messag verifi weak respect preced histori case simul 00 behav like 0 prover note chang critic cocrit step appli verifi step thu summar condit behavior 00 prover step condit behavior p 00 exactli equal st step verifi consid condit behavior 00 given histori far let us recal second modif appli 0 deriv 00 modif chang condit probabl verifi step distribut 0 order add weight step low probabl simul note modif made critic cocrit step verifi consid histori h might appear interact p possibl respons fi v h induct hypothesi h posit probabl output simul 00 therefor may consid condit behavior 00 histori h three case consid correspond whether either fi fi phi 1 none weak respect h start simplest case neither fi fi phi 1 weak wrt h case behavior 00 ident behavior 0 sinc oracl never send messag case howev fact fi weak get done simpl case turn case fi weak wrt h case given 00 produc prefix h produc h ffifi whenev 0 produc prefix h ffifi furthermor condit probabl q defin 00 produc prefix h ffi fi also case produc prefix h ffi fi phi 1 defin simul 0 base verifi may also write also recal q defin pgammap 0 use notat use equat 8 get final turn case fi phi 1 weak wrt h mean fi cocrit c given 00 produc prefix h produc h ffi fi 0 produc prefix h ffi fi furthermor 00 probabl q defin denot p p 0 respect critic messag fi phi 1 name thu recal complet proof claim 46 2 lower probabl simul output handl differ 0 p tini make last modif deal tini differ lower probabl simul output convers case output convers frequent appear p 00 v modifi simul denot 000 run 00 obtain convers c note 00 alway produc output use furtheraug oracl 000 output c probabl c note p c 1 hold due part 2 claim 46 1 000 produc output probabl 3 2 output distribut 000 ie case output ident distribut proof probabl 000 produc output exactli part 2 note probabl convers c output 000 exactly4 simul halt output probabl exactli 3 get given 000 halt output output c probabl exactli done 2 import point explicitli address far whether modif appli simul preserv abil implement probabilist polynomialtim bound access oracl clearli case respect 00 expens addit regard last modif subtl point need address specif need verifi definit 000 implement name 000 help augment oracl siev convers exactli desir probabl note method present technic remark may yield exponenti small deviat desir probabl get close perfect simul yet achiev end modifi siev process suggest technic remark deal specif case first modifi p 00 make random choic case flip polynomi number unbias coin 7 round chang bit behavior p 00 deviat made small assert specif claim 46 still hold consid specif siev probabl need cd observ c number coin toss lead 00 output c ie use notat previou section j observ b size probabl space p use modif p 00 rewrit p c 3ad c nonneg integ note oracl allow simul siev convers probabl e c follow way 000 send oracl random tape toss 00 oracl siev e possibl c random tape lead 00 output c gener case p c2 f deal write c implement siev 000 suppli oracl uniformli chosen fbit long string addit oracl siev q randomtap 00 use extra bit order decid siev case equal specif differ randomtap combin claim 41 46 part 1 47 conclud p 00 interact proof system perfect knowledg complex olog n l complet proof theorem 2 7 implement p 00 discuss explicitli possibl p 00 use infinit number coin toss select next messag either 0 1 howev infinit number coin toss realli need sinc round probabl polynomi number coin suffic caus exponenti small round error conclud remark consid main result first step toward classif languag accord knowledg complex interact proof system inde much known first mention two question seem ambiti first tri provid evid npcomplet languag proven within low say logarithm even constant knowledg complex possibl avenu prove conjectur show languag logarithm knowledg complex coam rather bpp np recal np unlik coam see also bhz87 second suggest tri provid indic languag pspace interact proof linear rather logarithm knowledg complex reader easili envis moder ambiti challeng direct anoth interest question whether level greater zero knowledg complex hierarchi contain strictli languag previou level partial collaps occur exampl open whether constant even logarithm knowledg complex class collaps zero level regard transform statist knowledg complex perfect knowledg complex ie theorem 2 interest question aris firstli cost transform reduc bellow olog n bit knowledg result special case statist zeroknowledg almost interest secondli one present analog transform preserv onesid error probabl interact proof note transform introduc neglig error probabl complet condit final one present analog transform appli knowledg complex respect arbitrari verifi transform appli knowledg complex respect honest verifi 6 acknowledg thank leonard shulman provid us simpler proof claim 32 r true complex statist zeroknowledg make zeroknowledg prover effici complex perfect zeroknowledg interact proof system prover never fail random select proof yield noth valid methodolog cryptograph protocol design play mental game complet theorem protocol honest major quantifi knowledg complex knowledg complex interact proof knowledg complex interact proof public coin interact proof system better way gener hard np instanc pick uniformli random direct minimumknowledg comput random gener combinatori structur uniform distribut algebra method interact proof system fair game allpow adversari complex theoret approach random complex approxim count tr ctr amo beimel paz carmi kobbi nissim enav weinreb privat approxim search problem proceed thirtyeighth annual acm symposium theori comput may 2123 2006 seattl wa usa ode goldreich salil vadhan avi wigderson interact proof lacon prover comput complex v11 n12 p153 januari amit sahai salil vadhan complet problem statist zero knowledg journal acm jacm v50 n2 p196249 march