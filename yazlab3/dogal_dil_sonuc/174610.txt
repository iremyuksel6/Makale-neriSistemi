nestedgraph model represent manipul complex object three recent trend databas research objectori deduct databas graphbas user interfac draw trend togeth data model call hypernod model singl data structur model hypernod graph whose node graph hypernod type type nest graph give theoret foundat hypernod type show type check tractabl show also convent typeform oper simul graph type includ cyclic type hypernod model come equip rulebas queri languag call hyperlog complet respect comput updat defin oper semant hyperlog show evalu perform effici discuss also use hyperlog support databas brows essenti featur hypertext databas compar work graphbas data modelsunlik previou graphbas model hypernod model provid inher support data abstract via nest graph final briefli discuss implement dbm base hypernod model b introduct recent databas research focuss deduct 7 14 26 objectori 5 22 databas deduct databas extend relat data model rulebas comput rule enabl deriv intent tupl store extension tupl deriv tupl use pure queri purpos insert databas convers objectori databas start semant data model 16 20 31 typic support object ident inherit complex object extend featur method encapsul objectori program 32 37 thu deduct objectori databas larg complementari former support extension intent defin relat fundament data abstract concept classif identif inherit encapsul convers latter support abstract concept support relat natur alli henc recent research aim integr two paradigm integr gener taken rout extend logicbas deduct databas languag featur object ident set function method inherit 1 2 3 14 contrast paper report upon graphbas approach integr use graph two firstli graph formal defin wellunderstood structur secondli wide accept graphbas formal consider enhanc usabl complex system 19 graph use conjunct number convent data model exampl hierarch network model 35 entityrelationship model 9 recent extens thereof complex object 27 variou semant data model 16 20 31 graph hypergraph 6 also use recent 12 17 23 25 33 36 data model tool right give comparison recent work approach section 4 paper direct graph also foundat hypertext databas 11 33 databas graph consist node refer unit store inform typic text name link link connect two node sourc destin link travers either forward sourc destin backward destin sourc process travers name link examin text associ node call brows typic simpl queri facil consist stringbas search provid use identifi initi set node prior brows featur hypertext dynam creation new node link motiv previou research outlin develop graphbas data model call hypernod model support object ident arbitrarili complex object wellsuit implement hypertext databas contrast graphbas model use nest possibl recurs defin graph term hypernod hypernod pair ne node direct edg node hypernod thu unlik graphbas model hypernod model provid inher support nest inform label hypernod uniqu serv object identifi illustr hypernod figur 1 repres coupl c consist two peopl per1 per2 whose children nest within hyper node figur 2 show children person per1 would becom visibl expos hypernod label per3 per4 observ figur hypernod differ hypergraph generalis node hypernod oppos generalis edg hyperedg name bob surnam smith child per3 person name mari surnam jone child per3 person fig 1 exampl hypernod name jill surnam smith child none person per3 person name jack surnam jone child none person fig 2 hypernod note label c per1per4 figur 1 superscript tag coupl person respec tive explain sequel tag indic type associ hypernod type give us mean defin databas schema enforc constraint structur content hypernod type repres nest graph queri updat use formal hypernod also note use node none person figur 2 denot present hypernod model come equip comput power declar languag call hyperlog model languag share featur deduct objectori databas common deduct databas languag hyperlog rulebas support deriv databas updat common objectori databas hypernod model support arbitrarili complex object data abstract concept classif via type identif via uniqu label encapsul via nest graph 25 show structur inherit also support natur nest graph structur paper use nest hypergraph treatment equal applic simpler nest graph hypernod model 24 also show method support parametris hyperlog program hypernod model support main featur hypertext databas string arbitrari length support primit type unstructur text repres text node hypernod encapsul within number hypernod henc text share set text fragment easili repres node hypernod annot link repres hypernod singl incom edg sourc node singl outgo edg destin node hypernod encapsul annot inform exampl actual link label descript semant link creator link date creation nest hypernod abstract tool greatli facilit design brows dens connect databas graph uniqu model final hyperlog support databas brows generalpurpos declar queri latter facil use creat context brows first introduc hypernod model 24 present paper expand upon work sever direct includ express represent comput effici infer support hypertext implement issu also describ recent work extend model includ type extend hyperlog perform delet well insert outlin paper follow section 2 discuss fundament hypernod model name hypernod type also discuss represent express type check complex section 3 give syntax semant hyperlog discuss complex evalu hyperlog program comput updat express also show hyperlog use databas brows section 4 compar work graphbas languag model section 5 briefli describ prototyp implement conclud section 6 summari result 2 hypernod model section discuss fundament model name hypernod type defin hypernod repositori section 21 defin type type repositori section 22 also examin effici type check section 23 illustr use type via extend exampl base upon flight book databas final section 24 discuss represent express model 21 hypernod hypernod repositori section introduc underli data structur hypernod model name hypernod defin hypernod repositori set graphdefin equat defin hypernod valu assign indetermin set equat solv begin recal definit direct graph direct graph order pair n e n finit set node e n n finit set direct edg simplic use term graph direct interchang similarli term edg direct edg also use notat n 1 n 2 interchang n 1 edg purpos hypernod model need two disjoint set constant finit set primit node p countabl infinit set label l assum set p includ alphanumer string element p denot identifi start lowercas letter element l denot identifi start uppercas letter graph hypernod model defin equat form e g l ne graph n p l term equat hypernod equat exampl follow p1 p2 n1 n2 label name spous titl ms mr b floyd tring primit node hypernod repositori simpli repositori finit set hypernod equat satisfi follow two condit two equat left hand side h2 label appear right hand side equat exist equat label left hand side given hypernod repositori hr denot labelshr set label appear equat hr primhr set primit node appear equat hr exampl four equat satisfi criteria hypernod repositori note condit h1 correspond entiti integr requir 10 sinc equat view repres realworld entiti similarli condit h2 correspond referenti integr requir 10 sinc requir exist entiti referenc hypernod repositori view store set graph may refer graph via label altern sinc hypernod repositori set equat would like uniqu solut indetermin ie label g l welldefin domain domain univers wellfound set sinc hypernod equat may cyclicli defin exampl equat defin p1 p2 howev appeal aczel theori nonwellfound set 4 solv hypernod repositori non wellfound set subsum wellfound set includ circular set ie set may contain shown 4 set setdefin equat hypernod repositori special case uniqu solut univers nonwellfound set thu hypernod repositori hr uniqu solut univers nonwellfound set solut assign label g left hand side equat nonwellfound set term set hypernod denot hyp hr g simpli hypg hr understood context hypernod hypg order pair ne n set primit node hypernod e n n note order pair ab view set aab exampl given hypernod repositori consist four equat p1p2n1 n2 ignor node set graph simplic spousenametitlemrinitialbsurnametringspous spousenametitlemsinitialasurnamefloydspous note set hypn1 hypn2 wellfound one set hypp1 hypp2 non wellfound one sinc contain 22 type type repositori next two section extend model incorpor type also graph defin type repositori type analog hypernod equat hypernod repositori hypernod defin mean hypernod particular type show test hypernod repositori welltyped perform polynomi time respect size repositori section 23 illustr type via extend exampl base upon flight book databas purpos defin type assum avail two disjoint set constant finit set primit type tp everi primit node n p uniqu primit type tp countabl infinit set type label tl everi label hypernod repositori tag uniqu type label cf type object identifi objectori databas analog primit node label distinguish primit type type label use identifi start lowercas letter former identifi start uppercas letter latter assum everi type primit otherwis distinguish primit node none denot present see node use model miss incomplet inform final assum set primit type includ type string type defin mean equat form mf graph tp tl call equat type equat type reposi tori tr finit set type equat satisfi condit h1 h2 hypernod repositori section 21 appeal theori nonwellfound set solv type repositori ie assign valu univers nonwellfound set call valu type denot hyp tr hypt tr understood context valu take form pair mf set primit type type f also make reason assumpt primit node label distinct primit type type label ie p l tp thu overlap data hypernod meta data type hypernod type repositori merg one repositori well uniform storag data meta data mean meta data queri updat use formal data name hyperlog type hypernod defin recurs follow given hypernod ne type mf say ne type mf exist homomorph f n preserv type satisfi follow condit condit stipul hypernod must contain node edg conform node edg intend type condit t3 t4 stipul hypernod must contain least one instanc everi node edg intend type last two condit restrict sinc primit node none use place miss inform type individu hypernod generalis type hypernod repositori follow hypernod reposi tori hr welltyp respect type repositori tr everi label g labelshr hyp hr g type hyp tr follow theorem state test hypernod repositori welltyped tractabl result follow observ order test hypernod repositori welltyped fix homomorph f map primit node label type check criteria equat hr equat hr check maximum n node e edg right hand side hypernod type equat test achiev time proport mn 2 e 2 theorem 1 test whether hypernod repositori hr welltyp respect type repositori tr perform time polynomi number equat hr maximum size individu equat 23 flight book databas exampl illustr type consid databas store inform book flight passeng schema databas specifi type flightbookingsschema figur 3 use equationbas pictori represent graph interchang also omit type tag label understood context fig 3 exampl schema rf flightbookingsschema airlin airport flightbookingsschema contain six type rf shown figur 4 repres rout flight fli rout follow number flight ii pt shown figur 5 repres passeng ticket passeng bought one ticket iii tc shown figur 6 repres ticket coupon ticket consist number coupon notic share graph ticket graph tc pt iv fc shown figur 7 repres flight coupon flight book number coupon v airlin airport shown figur 8 contain known airlin airport respect fig 4 rout flight fli rf airport toatt airlineatt flight dateofdepatt timeofdepatt time fig 5 passeng ticket passeng dependentsatt nameatt passeng dateofissueatt fig 6 ticket coupon class statusatt classatt dateofissueatt coupon fig 7 flight coupon timeofdepatt dateofdepatt flight class statusatt classatt coupon fig 8 set type airlin airport airport airlin remain type need fulli specifi flightbookingsschema airlin airport shown figur 9 time date fare name shown figur 10 final nat shown figur 11 fig 9 type airport airlin airport nameatt codeatt string nameatt codeatt string fig 10 type date fare time name string string hoursatt initialatt amountatt currencyatt monthatt dayatt make sever observ type fig 11 natur number type edg type use repres attribut exampl flightnoattnat rout adopt convent primit type end att repres attribut name one primit node primit type node appear instanc exampl primit node flightno airlin appear figur 12 assum type flightnoatt airlineatt respect practic user introduc new primit type set tp time popul type introduc new primit node set p ii edg type also use repres binari relationship exampl routeflight rf gen eral relationship manytomani due fact instanc defin homomorph type howev cardin constraint enforc within updat program give exampl section 33 iii possibl defin recurs type exampl passeng whose depend also type passeng nat contain iv type nat use repres natur number hypernod model 0 repres hypernod contain primit node none nat success natur number success nest 0 see figur 13 describ calcul perform number section 36 v hypernod type flightbookingsschema flight book databas typic instanc one node type rf pt tc fc airlin airport repres routeflight passengerticket ticketcoupon flightcoupon relat also airlin airport note flightbookingsschema schema design use hypernod model compar entityrelationship er approach 9 howev two fundament differ two model approach stress firstli type directli model complex object may hierarch cyclic model directli use er diagram secondli type encapsul type exampl flightbookingsschema encapsul rf tc fc pt airlin airport ticket encapsul date fare encapsul encourag stepwis schema design case schema larg mani interconnect render schema much easier display comprehend illustr specif instanc type figur 12 show four hypernod r1 two version r3 note r1 type rout first version r3 sinc condit t1 t2 t3 t4 section 22 violat r31 amend type rout replac name flightno ad edg airlin air2 specifi edg attribut fromatt toatt result r32 r31 r32 fig 12 rout r1 pari london air1to airlin flightno london athen air2flightno airlin air2airlin name none airport air2flightno airlin figur 13 show first three natur number figur 14 show hypernod air1 air2 type airlin note air2 two code fig 13 first three natur numbers0 none1fig 14 two airlin ba british airway name code code oa olymp olymp airway namenam figur 15 show hypernod european american asian european american type airlin asian violat condit t3 type correct ad primit node none airlin fig 15 set airlin european an american incorrectli type asian asian american none airlin figur show hypernod pt1 pt2 type pt note depend nest finit depth final figur 17 show hypernod n1 n2 type name f1 type fare d1 type date enforc meaning date either achiev defin appropri primit type day fig 16 two instanc passengerticket relationship passeng f1 none fare dateofissu name depend depend name dateofissu fare month year via updat program fig 17 name n1 n2 fare f1 date d1 smith mr smith mr amount currenc titl initi surnam surnam initi titleyearday month 6 24 express represent type type check constitut power data model integr check tool sinc allow databas schema repres enforc also storagelevel optimis carri base type informa tion hypernod model typecomplet sens allow typeform oper graph definit appli arbitrarili mani time also cyclic type passeng figur 5 cyclic hypernod p1 p2 section 21 support bear two point mind show convent typeform oper simul use graph definit given type repres set type hypernod type contain one node type empti set type repres hyper node empti type airlin airport figur 8 instanc european american figur 15 illustr set type given type 1 2 n attribut name 1 2 n flightnoatt airlineatt fromatt toatt repres record type type rout flight figur 4 time date fare name shown figur 10 illustr record type note record type bipartit graph also note construct differ usual idea record sinc attribut multivalu ie may one edg eman instanc type enforc singl valu encod updat program hyperlog given record type repres relat type sett compon type record type may record type nest relat 30 also repres type flight figur 4 ticket figur 5 illustr nest relat type given type 1 2 repres map type type rf pt tc fc shown figur 4 5 6 7 illustr map type exampl type exampl instanc nattonat ident function id map natur number map greater map natur number smaller natur note partial map repres without violat type correct long least one edg map exampl map greater element 0 sourc edg maxim number maxnum sink edg final given type record type attribut type 1 2 n contain primit constant first second nth respect gener given type 1 2 n type defin r1 r instanc heterogen set isol node aris particip edg edg aris edg 3 manipul hypernod section introduc hyperlog declar queri updat languag hypernod model hyperlog program consist set rule bodi rule consist number graph call queri may contain variabl act templat match equat hypernod repositori head rule also queri indic updat undertaken match graph bodi evalu program compris repeat match set rule hypernod repositori updat infer section 31 describ syntax hyperlog section 32 defin match queri rule bodi hypernod repositori section 33 describ infer updat queri head rule section 34 defin oper semant hyperlog program via fixpoint oper address effici express issu hyperlog section 35 36 35 address effici infer 36 comput updat express conclud section 37 brief discuss databas brows support hyperlog chosen rulebas languag hypernod model two main reason firstli highlevel declar natur languag blend well graphbas data model secondli languag express see fact complet respect comput databas updat consequ program frequent invok optimis builtin without compromis semant languag candid optimis arithmet function databas brows function 31 syntax hyperlog purpos hyperlog assum countabl infinit set variabl v avail denot element v uppercas identifi end alphabet assum set variabl v set label l disjoint also assum variabl type superscript type tp tl howev often omit superscript understood context hyperlog rule possibl empti set graph bodi singl graph head call graph queri queri may variabl label may variabl node set also node edg may negat mean absent intuit formal queri equat form e ne graph ii n disjoint union two set n n n contain posit node n contain neg node iii e disjoint union two set e e e contain posit edg e contain neg edg condit iv restrict edg posit node clearli posit edg contain neg ie absent node imposs also sinc edg contain neg node neg edg contain neg node meaningless simplic denot node n n n edg three exampl queri inform find rout flight number rout airlin air1 inform check whether rout flight number 301 greater nattonat 10x nat 10 x find number greater equal 10 use greater map section 24 hyperlog program finit set rule rule express form queri exampl give program ignor node set graph simplic gener transit depend passeng place inform map transdep passeng passeng hyperlog program p repres label graph follow rule p add node set n two graph q 0 r bodi add edg set e edg r bodi q 0 assum label p r bodi drawn set program rule name prog whose member distinct set hypernod label l set type label tl exampl program repres graph shown figur 18 depsprog body1 body2 uniqu identifi drawn prog subsequ figur program often dispens outer program label note figur 18 rule head share rule graphic represent program figur 23 give exampl rule bodi also share semant share rule head di junction head infer bodi true convers semant share rule bodi conjunct rule head infer rule bodi true final note graphic represent program hypernod type graph encapsul within requir uniqu label exampl two graph label transdep figur 18 32 queri rule bodi queri bodi rule act templat match equat hypernod repositori defin match process need concept substitut variabl constant appropri type substitut q set assign x 1 x distinct variabl v c distinct element l p type x applic substitut q queri e equat eq result substitut x left hand side right hand side queri c given hypernod repositori hr queri match queri respect repositori substitut q variabl queri constant drawn exist equat extend definit set queri q 1 q 2 q n substitut q match set queri match queri q taken separ note definit assum herbrand univers close world assumpt 29 allow us infer negat node edg absenc posit match cf nonmonoton formal 28 exampl given hypernod repositori contain follow rout set possibl match four queri xr1 y605 xr3 y400 xr2 respect 33 queri rule head queri head rule indic updat undertaken match queri bodi rule rule r program p may thu modifi equat hypernod repositori ad delet node edg right hand side accord posit neg node edg head r furthermor may variabl appear head r appear bodi denot set variabl new r case head r match exis equat repositori set new equat gener one posit variabl new r label left hand side new equat hitherto unus hypernod repositori program p chosen nondeterminist also p consist number rule r 1 r r set new label gener set variabl new r 1 new r pairwis disjoint clearli new label may left dangl refer execut program p thu relax condit h2 definit hypernod repositori section 21 assum equat dangl label g null graph nullt defin follow type illustr hypernod program program depsprog figur 18 gener transit depend passeng place inform map transdep passtopass transdep transdep fig 18 program gener depend passeng depend passeng passeng passeng depend x z z program figur 19 gener greater relat natur number assum natur number contain node set distinguish hypernod label number program figur place result hypernod passeng pay fare 200 ticket program figur 21 add passeng p3 depend passeng p1 delet null valu might fig 19 program gener greater relat greater number greater z z greater number nat fig 20 program find passeng pay 200 usdollar passeng amount z nat passeng fare greaterz nat currenc passeng result amount z nat passeng fare greaterz nat currenc passeng result p3 first record depend p1 note edg p1 none passeng also delet also note semant updat program passeng number depend fig 21 program add p3 depend p1 passeng none passeng depend passeng program figur 22 replac old time departur flight fl1 flight new time typecorrect fl1 must old time fl1 program illustr cardin timeofdep attribut limit 1 fig 22 program replac time departur flight fl1 t1 timeofdep flight final program figur 23 restructur inform passeng store number map cf function data model 31 rather one hypernod per passeng cf relat data model fig 23 program restructur passeng inform number map passtostr passtostr passtostr passtopass surnam titl string string string z surnam initi titl passeng name depend initi conclud section note possibl write hyperlog rule delet equat thu practic garbag collect achiev outsid hyperlog 34 oper semant hyperlog program section specifi oper semant hyperlog via 2ari oper inferphr p hyperlog program hr hypernod repositori inferphr return new hypernod repositori differ hr insert delet infer hr fire parallel rule p oper fixphr comput fixpoint p respect hr success applic inferphr begin defin two binari oper set equat given two set equat hr hr consist everi equat hr hr g labelshr labelshr ii everi pair equat hr left hand side g equat hr hr consist everi equat hr g labelshr ii everi pair equat hr left hand side g equat let r rule q 0 q 1 q 2 q n program p head q 0 queri q match set queri q 1 q 2 q n given q let q new substitut new r defin follow new ii one match q 0 q let q new arbitrari one match new label superscript appropri type denot singleton set qqq new n eq po r q singleton set qqq new n eq r q note equat neg r q may right hand side graph sinc may case edg n 1 n 2 e case n 1 n n 2 n final defin main oper inferphr provid set infer insert set infer delet intersect ie provid wish infer made presenc conflict sinc want declar semant equal hold defin inferphr old hypernod repositori hr conclud defin oper fixphr comput fixpoint hypernod program p respect hypernod repositori hr fix k1 follow proposit state fixphr inde hypernod repositori ie satisfi condit h1 h2 section 21 proof proposit follow easili definit inferphr proposit 1 fixphr hypernod repositori cours comput fixpoint might termin exampl follow program gener successor nat natur number x nat assum represent natur number use assum 0 alreadi repositori clearli program carri gener successor ad infinitum rule contain variabl head bodi way nontermin aris exampl follow program insert delet per1 c ad infinitum follow proposit state comput fixphr termin result repositori uniqu gener new label choic substitut q new proof follow observ nondeterminist step inferphr proposit 2 fixphr uniqu draw new label l choic q new conclud section note fixphr defin ignor typecorrect new repositori fact static type check program perform fixpoint comput program p typecorrect rule r p typecorrect rule q 0 q 1 q 2 q n typecorrect queri q partial type final queri q partial type graph n n e e satisfi condit t1 section 22 respect type make number observ firstli verifi queri bodi rule partial type prevent evalu program priori typeincorrect secondli queri head rule partial type contain insert hypernod repositori fixphr must well type recal section 33 null graph nullt assum dangl label type thirdli delet rule head may caus condit t3 t4 section 22 violat situat allow occur either signal runtim error insert part oper partial type graph appropri node edg nullt order simplifi program specif adopt latter solut 35 effici infer section examin effici inferphr oper begin observ inferphr decid sinc given repositori hr finit number match q queri q respect hr due fact finit number constant drawn hr furthermor rule match q bodi r q new either chosen arbitrarili finit number exist substitut obtain finit number new label consid two aspect effici inferphr complex find match queri respect hypernod repositori potenti number match queri next theorem state find match queri respect hypernod repositori gener npcomplet theorem 2 find substitut q match queri q respect repositori hr npcomplet proof first show nphard show problem contain subgraph isomorph known npcomplet 15 subproblem let q posit queri form g n e element n variabl type let equat hr result follow sinc q requir onetoon map ne ne next show problem np given queri first guess substitut q queri respect hr equat hr left hand side qq done remain show test whether equat match queri perform time polynomi size ne ne result follow sinc examin definit match given section 32 see test perform time proport nn despit neg result find match less expens case certain graph exampl case graph repositori graph queri tree problem solv polynomi time size repositori 15 practic much data recordbas correspond graph repositori forest see exampl graph previou exampl forest equival one tree whose root label graph match queri tractabl respect number match queri may exist exponenti number match exampl given queri n element n variabl type equat number match nn n negat node queri also lead complex consid exampl match follow rule bodi string clearli may larg number match string constant databas name person per1 problem avoid allow variabl appear neg bodi rule without also appear posit given rule q 0 q 1 q 2 q n variabl appear n also appear n j construct substitut q q 1 q 2 q n match posit inform first techniqu commonli known rang restrict 2 exampl rang restrict string rule bodi name peopl thu string x neg variabl problem neg inform neg constant node also lead addit complex occur within queri variabl label consid exampl match follow case hyperlog evalu least make use type inform search match within hypernod type person reduc cost find match posit inform problemat clearli given queri variabl n greater number possibl substitut variabl type tag variabl narrow number choic edg inform also help addit recordbas data whose attribut valu polynomi bound eg singlevalu attribut number match queri polynomi size repositori 36 express comput clearli hyperlog power languag respect express comput updat fact comput complet updat complet first demonstr comput complet hyperlog show simul counter program known comput complet 18 counter program manipul natur number store variabl call counter four oper allow counter x counter denot assign addit counter program support sequenti composit goto statement condit upon counter variabl 0 simul counter hyperlog equat distinguish left hand side ctr nat ctr1 nat ctr2 nat say recal natur number repres success nest primit node none nat sequenc fire rule counter program use set distinguish label current step contain node set hypernod label seq step step start program hypernod assum exampl assign zero counter ctr achiev insert 0 node set delet nonzero element alreadi assign valu ctr counter ctr1 achiev follow rule ad one ctr achiev follow rule may gener new natur number nat subtract one ctr achiev follow rule test ctr zero achiev use queri bodi rule final sequenti fire rule condit goto achiev associ step rule updat seq hypernod current step exampl assum program four step goto statement step2 simul follow rule conclud section examin express hyperlog respect databas updat first defin updat context defin concept updat complet analog previou work relat databas 1 8 given type repositori tr defin set insttr contain hypernod repositori welltyp respect tr defin updat partial recurs map insttr insttr cgener c gener introduc 21 intuit mean apart set distinguish constant c may empti set structur databas relev updat valu constant data base case updat u cgener follow hold given finit set c constant whose type contain primtr labelstr hr insttr isomorph r map primit node primit node label label invari c ruhr equal urhr renam newli gener label set c may thought constant primit node label appear explicitli updat program thu queri languag updat complet hypernod model precis defin set updat defin updat complet hyperlog particular follow similar result 1 2 8 21 logicbas languag compar semant 37 use hyperlog databas brows consid queri updat databas partial specifi content hypernod contrast brows allow user navig structur databas independ actual valu case hypernod model navig follow edg either forward backward descend node parent graph ascend parent graph node show navig oper implement hyperlog gener difficult user predict type hypernod encount brows databas order facilit brows introduc type supertyp everi type ie consid hypernod primit node type first defin three type instanc type context typic contain two node one type currenthyp contain hypernod type currentnod contain specif node within hypernod current context thu record hypernod curhyp contain current hypernod navig curnod contain specif node within current hypernod current brows current hypernod updat hypernod old say hypernod new rule similarli current node updat old new rule observ rule verifi new current node inde node set current hypernod order navig forward store hypernod curout currentnod node connect current node edg outgo initialis previou content curout use rule store next node curout use rule similarli order navig backward store hypernod curin currentnod node connect current node edg incom initialis previou content curin curout store previou node curin use rule order navig upward store hypernod curup currentnod hypernod contain current hypernod initialis previou content curup use rule final order navig downward store hypernod curdown currentnod node contain node set current node primit node initialis previou content curdown use rule brows use hyperlog investig 13 particular shown hyperlog support declar queri content structur hypertext databas databas construct associ hypernod fragment text use hypernod store name link fragment histori hypernod record user navig databas number altern trail set store navig function support includ display hypernod associ text four oper describ 4 comparison relat work section compar hypernod model hyperlog relat languag model begin logicbas databas languag iql 2 semant hyperlog partli deriv next consid three recent graphbas data model 12 17 23 final consid recent work hypergraphbas model 25 33 36 iql incorpor objectident type rulebas queri languag updat complet fixpoint semant hyperlog similar discuss 2 3 label gener semant differ iql invent object ident gener new label necessari consequ new graph infer wherea iql gener object ident assign valu independ event also iql type construct use tupl set union intersect constructor hyperlog one generalpurpos graph constructor simul next compar hypernod model three recent graphbas data model logic data model ldm 23 good 17 graphlog 12 ldm databas schema direct graph instanc consist 2 column tabl associ entiti particular type valu also ldm schema graph use three type node basic primit data type composit tupl type collect set type wherea repres tupl type set type one generalpurpos graph constructor graphlog 12 queri languag oper databas compris direct label graph semant net edg graph repres predic unlik hyperlog graphlog queri formul graph whose edg annot predic transit closur thereof gener regular express queri graph match databas graph return subgraph thereof good 17 graphicallyrepres function data model 31 associ transform languag good emb semant node edg graph node printabl nonprint edg singlevalu multivalu queri good transform languag graph call pattern match subgraph total instanc graph cf match queri hypernod repositori contrast hyperlog rulebas updat good instanc graph updat five graphicallyrepres primit oper add delet node edg oper call abstract incorpor pattern summari featur common model databas consist singl flat graph drawback practic complex object consist mani interconnect node hard present user clear way contrast hypernod databas consist set nest graph uniqu featur model provid inher support data abstract abil repres realworld object separ databas entiti good allow abstract oper gener nonprint entiti connect relat entiti level cf nest set graph within graph unlik good graphlog label edg hypernod model howev attain data model express encapsul edg would label good graphlog within one hypernod similar label exampl repres set good edg hypernod conclud section review recent work hypergraphbas data model 25 33 36 comparison work model first observ hypergraph model hypernod encapsul content hyperedg within hypernod contrast multilevel nest provid hypernod easili captur hypergraph 33 hypergraph use model pageori hypertext databas node hypergraph associ page inform hyperedg consist relat set label direct edg node direct edg share hyperedg queri hypergraph navig use number predefin brows forward backward along direct edg set mark node mark new set node read set page associ current mark node queri current state save reset current state view creat databas hypergraph updat number primit oper unlik hypernod model hypergraph type updat semant con strain also unlik hyperlog queri databas content support 36 hypergraphbas model data access present aim integr brows queri model entiti repres node relationship hyperedg result hypergraph transient last durat queri session start consist one hyperedg contain databas entiti hyperedg ad respons user queri stage hypergraph travers move within hyperedg hyperedg hyperedg via common node number differ work firstli databas entiti assum type store tupl singl flat relat secondli attribut entiti repres graphic within hypergraph exist underli relat thirdli although brows graphbas queri consist specifi booleanvalu express valu attribut henc hybrid model brows queri obtain 25 describ data model call groovi graphicallyrepres objectori data model valu groovi realworld entiti repres mean instanc object schema show represent object schema mean hypergraph lead natur formalis notion subobject share structur inherit also show instanc object schema repres hypergraph label object identifi groovi conceptu data model influenc develop hypernod model supersed recent work type hyperlog implement 5 system architectur implement current come end twoyear project whose goal implement prototyp dbm base hypernod model tailor need hypertext databas architectur system shown figur graphbas user interfac hyperlog evalu transient hypernod store storag manag figur 24 hypernod databas system architectur architectur storag manag store hypernod type program index manag support effici three oper given label g return uniqu graph ne ii given primit node n return set label g 1 g r equat g iii given label g return set label g 1 g r equat g detail descript storag manag appear 34 briefli storag manag support number object store object store contain graph one type two object store reserv storag type program associ object store label tabl map label physic address graph defin therebi implement oper oper ii implement use simpl prefix btree oper iii implement extend hash scheme oper invok hyperlog evalu match queri evalu comput fixpoint program respect repositori verifi program correctli type updat hypernod amass transient hypernod store infer step evalu current use bottom 9up naiv 35 evalu hyperlog program although look optimis fixpoint comput draw exist optimis techniqu logic databas languag semina evalu 35 6 present hypernod model graphbas data model store nest graph form equat manipul via rulebas languag key innov model formal foundat graph set theori use graph throughout level user interfac physic level inher support data model concept object ident complex object encapsul provis type type check associ queri languag hyperlog support queri brows allow deriv databas updat uniform storag data hypernod meta data type procedur data hyperlog program examin effici type check shown perform polynomi time also examin express represent comput updat model shown hyper log comput updat complet although evalu hyperlog program intract gener case discuss case evalu becom tractabl compar model graphbas model comparison highlight advantag nest graph type instanc lev el final briefli discuss prototyp dbm architectur implement current research effort direct toward tailor hypernod dbm need hypertext includ optimis hyperlog support version provis specialpurpos access method implement effici brows text retriev oper acknowledg hypernod project support financi uk scienc engin research council grant number grg26662 r procedur declar databas updat languag object ident queri languag primit fixpoint extens firstord logic dataloglik languag formal model object orient databas logic program databas ps entityrelationship model toward unifi view data extend databas relat model captur mean introduct survey mendelzon hypertext databas implement use hypernod model johnson three principl represent semant network graphori object databas model visual formal databas model hypernod model associ queri languag objectori data model formalis hypergraph logic languag data knowledg base complex object model semant issu deduct databas logic program close world databas relat model relationvalu attribut function data model data languag daplex research direct objectori program data model flexibl hypertext databas system storag manag hypernod model principl databas knowledgebas system transient hypergraphbas model data access tr relat model relationvalu attribut hypertext introduct survey algorithm spirit comput visual formal principl databas knowledgebas system vol databas model survey applic research issu logic languag data knowledg base data model flexibl hypertext databas system object ident queri languag primit untyp set invent comput queri fixpoint extens firstord logic dataloglik languag logic program databas complex object model entityrelationship approach transient hypergraphbas model data access hypernod model associ queri languag objectori data model formalis hypergraph graphlog graphori object databas model procedur declar databas updat languag function data model data languag daplex three principl represent semant network extend databas relat model captur mean entityrelationship modelmyampersandmdashtoward unifi view data comput intract new approach databas logic objectori databas storag manag hypernod model ctr stefan g hild alexandra poulovassili hyperlog system databas queri brows proceed workshop advanc visual interfac may 2729 1996 gubbio itali sankhayan choudhuri nabendu chaki swapan bhattacharya gdm new graph base data model use function abstractionx journal comput scienc technolog v21 n3 p430438 may 2006 mark leven alexandra poulovassili kerima benkerimi sara schwartz eran tuv implement graphbas data model complex object acm sigmod record v22 n4 p2631 dec 1993 manoj chavda peter wood toward odmgcompli visual object queri languag proceed 23rd intern confer larg data base p456465 august 2529 1997 alexandra poulovassili stefan g hild hyperlog graphbas system databas brows queri updat ieee transact knowledg data engin v13 n2 p316333 march 2001 mark leven georg loizou graphbas data model ramif ieee transact knowledg data engin v7 n5 p809823 octob 1995 giorgio busatto hansjrg kreowski sabin kusk abstract hierarch graph transform mathemat structur comput scienc v15 n4 p773819 august 2005 salvator march charl wood gove n allen research frontier object technolog inform system frontier v1 n1 p5174 juli 1999