time asynchron distribut system model abstractw propos formal definit thetim asynchron distribut system model present extens measur actual messag process schedul delay hardwar clock drift measur confirm model adequ describ current distribut system network workstat also give explan practic need servic consensu leader elect implement timefre model implement time asynchron system model b introduct depend whether underli commun process manag servic provid certain com munic distribut system classifi either synchron asynchron 7 certain commun mean 1 time minimum number correct process 2 messag sent correct process correct destin process receiv process destin within known amount time ie probabl receiv process time neglig author 28 5 explain mean failur neglig synchron system guarante certain commun system asynchron achiev certain commun one assum frequenc failur occur system bound bound failur frequenc assumpt allow system design use space 8 time redund 32 mask lower level commun failur provid abstract certain commun howev almost distribut system reason assum failur frequenc bound depend system character strict stochast specif 5 henc even one tri fix unpredict system achiev certain commun eg admiss control resourc alloc redund commun channel etc probabl commun failur might still neglig mani depend system therefor necessarili reason assum commun certain paper defin asynchron system model make much simpler assumpt synchron sy depart comput scienc uc san diego la jolla ca 92093gamma0114 email flaviucsucsdedu cfetzercsucsdedu short version paper appear proceed proceed 28th annual intern symposium faulttoler comput 1998 research support grant f4962093 f4962096 air forc offic scientif search inform time model avail http wwwcsucsdeducfetzermodel model henc probabl one assumpt violat much smaller probabl violat assumpt synchron sy tem nevertheless asynchron system model still strong enough serv foundat construct depend applic publish research asynchron system base timefre model 21 model character follow properti 1 servic time free ie specif describ output state transit occur respons input without place bound time take output state transit occur 2 interprocess commun reliabl research relax condit ie messag sent two noncrash process eventu deliv destin process crash failur semant ie process fail crash ing 4 process access hardwar clock timefre model process distinguish noncrash slow crash process servic import practic consensu elect membership therefor implement 21 2 time asynchron distribut system model shorter time model defin formal paper assum 1 servic time specif prescrib output state transit occur respons input also time interv within client expect output transit occur 2 interprocess commun via unreli datagram servic omi sionperform failur semant failur messag suffer omiss messag drop perform failur messag deliv late crashperform failur semant failur process suffer crash perform fail ure access hardwar clock proceed within linear envelop realtim 5 bound exist frequenc commun process failur occur system feel model adequ describ exist distribut system built network workstat contrast timefre model time model allow practic need distribut servic clock synchron mem bership consensu elect atom broadcast implement 4 10 14 6 13 sinc assum exist hardwar clock time servic timefre model may appear gener time model howev workstat current market highprecis quartz ieee transact parallel distribut system appear 1999 clock presenc clock time model practic restrict moreov true mani servic encount practic unix process udp make responsetim promis also true servic becom de facto time whenev higher level abstract depend highest level human user fix timeout decid fail therefor practic point view requir servic time process access hardwar clock make time model less gener timefre model fact failur semant interprocess commun timefre model defin 21 much stronger time model timefre model exist system run correct process disconnect entir run time model allow run correct process perman di connect thu timefre model exclud possibl correct process partit time model allow partit natur model occurr suffici mani messag omiss perform failur characterist time model reflect situat commun partit observ hour even day real sy tem especi base wide area network like internet thu practic point view time model gener timefre one allow partit model natur assumpt servic time process access hardwar clock restrict practic point view goal paper 1 propos formal definit time asynchron distribut system model extens measur actual messag process schedul delay clock drift confirm model adequ describ current runofthemil distribut system built network workstat give intuit explan practic import servic consensu leader elect implement timefre asynchron system model implement time model ii relat work distribut system model classifi accord assum network topolog synchroni failur model messag buffer 23 accord taxonomi time asynchron model character follow ffl network topolog process know complet set process send messag process problem rout messag irregular topolog assum solv lower level rout protocol ffl synchroni servic time process access local hardwar clock whose drift rate realtim bound time servic specif allow definit timeout delay messag transmiss process schedul delay ffl failur model process suffer crash perform failur commun servic suffer omiss perform failur ffl messag buffer finit messag buffer nonfifo deliveri messag buffer overflow block sender result messag omiss failur import differ time model timefre model 21 exist local hardwar clock mani distribut applic specifi use realtim constraint exampl compon fail within x time unit applic perform action hardwar clock allow one implement applic level timeout time asynchron system model introduc without name 4 refin 10 renam avoid confus timefre model 21 particular 10 introduc system stabil predic condit timeli properti captur intuit long system stabl number failur affect system certain threshold system make progress within bound time welltun system expect altern long period stabil short period instabl failur frequenc increas beyond assum threshold 14 formal progress assump tion progress assumpt option extens core time asynchron system model see section iv progress assumpt state unstabl period alway exist time interv given minimum length system stabl progress assumpt allow one solv problem like consensu origin specifi use uncondit termin condit defin section via oppos use condit timeli properti see section via one view progress assumpt formal way requir paramet time model oneway timeout delay section iiib schedul timeout delay section iiic2 well chosen progress assumpt similar global stabil requir 11 postul eventu system must perman stabil sens must exist time beyond messag noncrash process becom time howev progress assumpt requir infinit often exist major set process certain minimum amount time time commun time manner progress assumpt also certain similar failur detector 3 mechan strengthen timefre model certain failur detector class provid desir behavior base observ system eventu stabil main differ model 3 time model follow ing 1 time model allow messag drop process recov crash 2 time model provid process access hardwar clock model 3 provid process access failur de tector note hardwar clock use detect cristian fetzer time asynchron distribut system model 3 failur highlight similar differ exist synchron time asynchron system model 7 compar properti fundament synchron asynchron servic membership atom broadcast sketch section vi certain problem implement synchron system implement time asynchron system previous author address possibl issu exampl 24 27 address issu problem simul asynchron system section vi howev address simul issu exampl concern one ensur two leader point realtim interest solut two leader virtual time differ import realtim system interact extern process 15 introduc notion failawar systemat mean transform synchron servic specif failawar specif becom implement time asynchron system idea process provid synchron prop erti long failur frequenc given bound whenev properti guarante detect time manner correct client depend properti claim weaken failawar specif still use implement time system failawar depend time detect messag perform failur introduc 19 mechan allow receiv r messag detect suffer perform failur basic idea 1 one use local hardwar clock measur transmiss delay messag roundtrip 2 one use durat roundtrip contain upper bound tranmiss delay introduc 19 sever optim provid better upper bound 12 describ use time model failawar datagram servic fulli autom train control system quasisynchron model 31 anoth approach defin model synchron system timefre asynchron system requir p1 bound known process speed p2 bound known messag deliveri time p3 bound known drift rate correct clock p4 bound known load pat tern p5 bound known deviat among local clock model allow least one properti px incomplet assumpt coverag nonzero probabl bound postul px violat runtim 28 comparison time asynchron system model assum coverag p3 1 coverag p1 p2 valu make assumpt load pattern deviat local clock iii model time asynchron distribut system consist finit set process p commun via datagram servic process run comput node network see figur 1 lower level softwar node network implement datagram servic two process said remot run separ node otherwis local process p access local hardwar clock process manag servic run node use clock manag alarm clock allow local process request awaken whenev desir use p q r denot process u v denot realtim u v denot clock time n denot messag node 724 hardwar c lock r process networkfig 1 process time asynchron system access local hardwar clock commun via datagram messag across network hardwar clock process run node access node hardwar clock simplest hardwar clock consist oscil count regist increment tick oscil tick increment clock valu posit constant g call clock granular iti hardwar clock implement describ 26 correct clock display strictli monoton increas valu denot set realtim valu rt set clock valu ct clock h p process p repres function h p realtim clocktim denot valu display clock p realtim local process access clock remot process access differ clock thu process p q run node h due imprecis oscil temperatur chang age hardwar clock drift apart realtim intuit drift rate hardwar clock indic mani microsecond hardwar clock drift apart realtim per second exampl drift rate 2 mean clock increas valu 1sec everi second assum exist constant maximum drift rate ae 1 bound absolut valu drift rate correct clock thu drift rate correct clock least gammaa ae see figur 2 constant ae known process correct clock measur durat time interv error within gammaaetgamma g g term g account error due granular clock factor ae error due drift clock defin predic correct u hp true iff ps hardwar clock h p correct time u definit base intuit h p measur durat time interv u absolut error correct u ae bound drift rate caus correct clock within narrow linear envelop realtim see figur 2 r dt dt dt dt dt r realtim clocktimet fig 2 point time drift rate correct hardwar clock hp within aeae note drift rate constant sinc chang time assum valu within aeae one analyz drift error clock possibl distinguish 1 systemat drift error due imprecis oscil 2 drift error due reason age chang environ speed calibr hardwar clock chang constant factor c reduc systemat drift error relat uncalibr clock h p calibr counterpart h calibr p express follow calibr hardwar clock calibr done automat system internet access local access extern time provid gp receiv clock extern synchron instant deviat correct clock realtim bound known constant clock intern synchron deviat two correct clock bound known constant correct clock system extern synchron known ffl clock also intern synchron 2ffl clock calibr done lifetim system howev account age clock make sens recalibr clock occasion intern extern clock synchron need perform period account ongo drift clock time asynchron system model requir clock calibr extern intern synchron drift rate bound ae howev advantag calibr hardwar clock sinc allow reduct maximum drift rate see a1 measur common oper system provid process access realtim clock realtim clock less synchron realtim eg utc univers time gp time mani unix domain one tri maintain good synchron realtim use time servic like ntp 25 howev process alway know good synchron realtim might even exist upper bound drift rate realtim clock oper chang speed realtim clock 1 recent oper system provid process access hardwar clock subject adjust ie neither softwar oper chang speed clock exampl solari provid c librari function gethrtim get highresolut realtim return clock valu express nanosecond highresolut realtim clock exampl hardwar clock provid oper system also ideal suit implement calibr hardwar clock current workstat technolog granular hardwar clock order 1n 1s constant ae order 10 gamma4 10 gamma6 measur drift rate uncalibr unsynchron hardwar clock sever sun workstat run solari 25 period sever week figur 3 show drift rate four hardwar clock measur drift rate use nist timeserv clock extern synchron via ntp averag drift rate four hardwar clock stay almost constant measur period comput locat aircondit room comput subject higher temperatur chang one expect higher varianc clock drift note assum clock drift constant assum clock drift within gammaa ae interv chosen larg enough account unsteadi environment condit day rate uss fig 3 measur drift rate four hardwar clock period 70 day drift rate determin everi hour use extern synchron clock measur rel drift rate two calibr hardwar clock interv sever day ie mea cristian fetzer time asynchron distribut system model 5 sure mani two calibr hardwar clock drift apart everi second calibr clock implement top highresolut realtim clock solari variat messag transmiss delay introduc error read remot clock distribut system read remot clock use failawar datagram servic 19 calcul upper bound transmiss delay messag deliv 1 allow us calcul lower upper bound remot clock read error bound calcul lower upper bound drift rate minim measur error measur everi minut averag rel drift rate last 100 minut figur 4 show lower upper bound rel drift rate two calibr hardwar clock period 2 day summari calibr hardwar clock allow us decreas maximum drift rate two order magni tude 10 gamma4 10 gamma6 exampl clock calibr allow us reduc measur averag drift one clock 155 0 use protocol calibr hardwar clock use maximum drift rate ae 2 instead ae 200 sinc ae small quantiti ignor term ae 2 exampl equat 1 ae also assum clock granular g neglig 04 03 02 010103 time hour rel drift rate lower bound upper bound fig 4 rel drift rate two calibr hardwar clock stay within 1 measur a2 clock failur assumpt assum noncrash process access correct hardwar clock ie access hardwar clock drift rate ae assumpt simplifi applic sinc deal crash failur anyhow deal faulti clock like fast slow clock let predic crash p true iff process p crash realtim formal express clock assumpt ca follow hp 1 servic requir upper bound drift rate clock chose constant base measur absolut drift rate calibr clock use extern synchron clock henc circular measur practic one actual weaken assumpt follow sens hardwar clock h p fail time process p tri read clock p crash incorrect clock valu return p sinc p read incorrect clock inform relax assumpt actual equival ca particular process determin h p fail one implement relax assumpt detect clock failur lower protocol level transpar applic process transform process crash failur two basic realtim clock implement oper system 1 oscil increment long hardwar counter typic 64 bit long valu realtim clock current valu hardwar counter 2 period timer use increment softwar counter valu realtim clock first case properti clock determin physic properti oscil second case interrupt prioriti might affect properti realtim clock system timer interrupt highest prioriti system loos timer interrupt howev exist system interrupt sourc eg serial line higher prioriti timer interrupt system might loos timer interrupt ie clock go slower mani interrupt higher prioriti system one find reason ae probabl hardwar clock fail ie drift rate bound ae low whether probabl classifi neglig depend stochast requir applic see 28 5 explan failur neglect probabl neglig one even detect clock fail ure howev requir applic stringent neglect probabl singl hardwar clock fail one use redund hardwar clock make sure clock failur assumpt valid show 20 one use commerci shelf compon build faulttoler clock make clock failur neglig exampl one use two redund hardwar clock two 64 bit counter connect separ oscil avail pc card detect singl hardwar clock failur detect even mask clock failur least three hardwar clock use local one clock read procedur becom transpar higher level pro cess whenev process want read hardwar clock process call clock read procedur procedur read two redund clock procedur use two valu determin rel drift rate two clock within accept rang failur hardwar clock independ one detect failur clock high probabl thu stochast applic requir stringent redund clock allow detect clock failur probabl process read faulti clock becom neglig 6 ieee transact parallel distribut system appear 1999 b datagram servic datagram servic provid primit transmit unicast see figur 5 broadcast messag see figur 6 primit ffl sendmq send unicast messag process q ffl broadcastm broadcast process includ sender initi datagram servic deliv messag sent process p time clock real time td send mq deliv mp fig 5 process p send unicast messag q realtim q receiv realtim transmiss delay tdq simplifi specif datagram servic assum datagram messag uniqu identifi word two messag differ even sent process two differ point time content let msg denot set messag use follow predic denot datagram relat event q mp datagram servic deliv messag sent p q realtim say process q receiv unicast messag q realtim invok primit sendmq broadcast broadcast messag realtim invok primit broadcastm time clock real time r r broadcast td td deliv deliv r fig 6 process p send broadcast messag q receiv r receiv u transmiss delay let messag p send see figur 5 broadcast see figur 6 let q receiv call send receiv time denot stm rt q respect transmiss delay td q defin td q function senderm return sender sendermp 9sq send mqbroadcast destin destm messag set process sent mqbroadcast requir datagram servic valid duplic mindelay defin follow ffl valid datagram servic deliv p identifi q ms sender q inde sent broadcast q ffl nodupl messag uniqu sender deliv destin process ffl mindelay assum messag sent two remot process p q transmiss delay least td q ffi min mindelay requir restrict minimum transmiss delay messag n sent two local process transmiss delay n smaller ffi min intuit ffi min know minimum messag size maximum network band width one know lower bound messag transmiss delay one use ffi min improv calcul posteriori upper bound transmiss delay remot messag tighter ffi min real minimum transmiss delay tighter posteriori upper bound get see 19 detail howev ffi min chosen big ie remot messag transmiss delay less calcul bound small sinc network configur system might chang lifetim safest choic assum datagram servic ensur exist upper bound transmiss delay messag sinc servic model time defin oneway timeout delay ffi chosen actual messag sent broadcast like 5 deliv within ffi messag transmiss delay less ffi min call earli see figur 7 time model assum earli messag ie ffi min well chosen see mindelay requir messag whose transmiss delay ffi ie ffi min td q ffi call time ms transmiss delay greater ffi ie td q ffi say suffer perform failur late messag never deliv say suffer omiss failur drop realt ime time late drop sdm sd fig 7 time model messag either time late drop time model assum messag earli cristian fetzer time asynchron distribut system model 7 b1 measur time model assum exist oneway timeout delay ffi use defin messag perform failur choic ffi determin frequenc messag perform failur time model put upper bound frequenc failur henc choic ffi affect correct protocol design time model describ 17 sever techniqu allow time detect messag process perform failur abl detect certain applic properti hold anymor 19 describ mechan allow receiv detect messag time good select ffi might system applic depend first applic choic ffi natur deriv applic quirement exampl 1 applic might achiev someth good within time unit 2 protocol use implement applic achiev someth good within say kffi time unit case failur frequenc within given bound case make sens defin ffi ffi delta k second applic might constrain ffi practic point view applic good choic ffi crucial protocol stabil speed 1 choos small ffi increas frequenc messag perform failur henc qualiti servic might degrad often 2 choos larg ffi might increas respons time servic sinc servic timeout take longer choic good ffi alway easi sinc messag transmiss delay increas messag size see figur 8 network load see figur 9 also depend messag transmiss pattern use protocol see figur 10 determin good ffi ensur like stabil progress might requir measur protocol specif transmiss delays233343 byte ms fig 8 measur minimum delay roundtrip messag pair differ messag size use 20000 roundtrip 156 measur messag size perform measur cluster 9 sun ipx workstat connect 10mbit ethernet depend system laboratori ucsd seven comput run suno 412 2 machin run solari 25 measur program use differ servic provid fortress toolkit 18 fortress use udp interprocess commun model depend messag transmiss time messag size see figur 8 could replac constant two function increas size messag actual use 19 function increas size messag tighter lower bound allow receiv calcul better upper bound transmiss delay receiv messag simplic howev assum time model ffi ffi min constant 70 75 80 85 90 95 100 messag delaym 704 kbyte 580kbyte 232kbyte fig 9 transmiss delay messag increas network load network load 232 kbytesec 99 messag deliv within 60m 580 kbytesec within 74 ms network load 704 kbytesec less 99 messag deliv measur distribut messag transmiss time differ network load measur use 8 sun ipx workstat connect 10mbit ethernet workstat group 4 pair two process pair sent pingpong messag size 1448byte without udp header estim network load averag number byte 8 workstat sent per second expect likelihood messag deliv within given time decreas network load see figur 9 measur show minimum experienc messag transmiss delay slightli decreas increas network load explain decreas cach miss network protocol code increas network traffic demonstr transmiss delay protocol depend measur transmiss time experienc local leadership servic 13 measur involv one process p period broadcast messag five process send immedi repli messag p receiv repli p spend time process receiv next repli henc transmiss delay success repli increas process time preced repli distribut transmiss delay therefor show five peak five repli process see figur 10 8 ieee transact parallel distribut system appear 199950015002500350011 21 31 41 ms nomessag fig 10 distribut transmiss delay unicast messag sent local leader elect protocol distribut base 500000 replies0011300 500 700 900 1100 network load kbytesec drop fig 11 likelihood messag drop respect network load network oper system drop me sage exampl ethernet base system messag drop messag collis cabl checksum error howev like oper system drop messag buffer overrun occur deliv messag fast enough receiv process measur likelihood udp packet drop differ network load use setup network load measur 8 sun ipx workstat group 4 pair measur process pair send pingpong unicast messag fix schedul wait time send messag chang network load chang schedul wait time network load 1090 kbytesec approxim 35 messag drop load 300 kbytesec decreas 0003 see figur 11 also perform experi test commun omiss failur independ use 8 comput setup note omiss failur independ probabl two consecut messag drop squar probabl messag suffer omiss failur sent 3000000 messag 8 process high network load 1000 kbytesec 29 these051525 length dropsequ dropseq length measur independ fig 12 messag omiss failur independ messag suffer omiss failur measur ment one process experienc drop 53 consecut messag sent process figur 12 show measur likelihood messag part sequenc x 2 f1 20g consecut drop messag also plot curv would look omiss failur independ show messag omiss failur independ b2 datagram failur assumpt variou experi test system detect messag corrupt far sent 10 8 messag known random content system deliv corrupt messag also test messag duplic none messag deliv probabl undetect messag corrupt duplic might neglig system howev one use addit softwar layer reduc probabl degre becom neglig softwar layer transpar process ie process need know exist sourc address spoof occur process p send messag process q make q believ differ process r 6 p sent valid assumpt impli assum probabl sourc address spoof neglig one neglect probabl one use messag authent 30 reduc probabl becom neglig done manner transpar process note messag authent increas transmiss time substanti special hardwar assist summari asynchron datagram servic assum omissionperform failur semant 5 drop messag fail deliv messag time manner one neglect probabl sourc address spoof messag deliv system corrupt deliv multipl time broadcast messag allow asymmetr performanceomiss failur sens process might receiv broadcast messag time manner process cristian fetzer time asynchron distribut system model 9 might receiv late sinc ae ffi min ffi small quantiti equat c process manag servic c1 process mode process p one follow three mode see figur ffl p execut standard program code ffl crash process stop execut code ie take next step algorithm lost previou state recov p execut state initi code 1 creation 2 restart crash process either crash recov said follow event caus process p transit mode specifi see figur 13 ffl start p creat start recov mode crash time exampl underli oper system crash ffl readi p transit mode finish initi state ffl recov p restart crash cover mode defin predic crash p true iff p crash time p crash execut step algorithm defin predic recov p true iff p recov time process recov consequ start recov event occurr crash readi crash crash recov ere recov ere crash recov start fig 13 process mode transit c2 alarm clock process p set alarm clock awaken specifi futur clock time 2 p request awaken clock time process manag servic awak p h p show valu least call alarm time process p take step set alarm clock unless 1 awaken alarm time 2 receiv messag awaken time assum process p set alarm clock awaken previou alarm time assum process signal error case request awaken time alreadi pass avoid process defin posit alarm time rel current time instead specifi absolut alarm time happen receiv messag awaken alarm time overwritten ie p awaken alarm time word time process p one activ alarm time ie alarm time overwritten p awaken note process maintain multipl alarm time base alarm clock provid time asynchron system model use follow predic specifi behavior alarm clock request realtim awaken futur realtim u h p u ie p want take next step hardwar clock show least valu unless receiv messag ffl wakeup u p process manag servic wake p realtim u alarm clock time process p crash process manag servic forget activ alarm time p set crash ing p never crash assum eventu awaken activ alarm time behavior alarm clock constrain follow requir process p awaken alarm clock time realtim u 1 hardwar clock show least u 2 p request previou awaken u process p crash overwritten alarm time awaken sinc formal ac requir express follow 8pust wakeup u scrash v let earliest realtim ie smallest valu h p tt call real alarm time specifi setalarm event consid process manag awak process p alarm time realtim u ie wakeup u hold delay call schedul delay experienc process p process manag servic ensur exist upper bound schedul delay howev time servic defin schedul timeout delay oe actual schedul delay like 5 smaller oe sinc ae oe small quantiti equat say noncrash process p suffer perform failur awaken within oe last time specifi see figur 14 ie awaken local hardwar clock h p show alreadi valu greater oe case say p late otherwis p awaken hardwar clock show valu said time p awaken h p show p said earli sinc easi avoid earli time failur check h p go sleep h time model assum process suffer earli time failur formal process p suffer perform failur realtim u exist alarm time caus wakeup event u pfail u tcrash v defin predic time u p true iff p time u time u extend notion process p time time interv follow time time note includ process time messag definit time process reason conceptu protocol time model add process time messag transmiss delay messag sent process see 17 detail descript slow process messag therefor transform messag perform failur clocktim time late alarm time fig 14 process p time awaken within oe tick alarm time process p suffer perform failur late awaken oe time model exclud earli time failur ie process never awaken time c3 measur implement alarm clock unix famili oper system one use select system call call allow specif maximum interv process wait specifi io event kernel return unix tri awak process specifi time interv expir use intern timer suno timer resolut 10m thu schedul delay timeout oe chosen least 10m figur 15 show distribut schedul delay experienc process execut membership protocol 16 measur perform normal daytim use system low load c4 process failur asssumpt time model assum process crashperform failur semant 5 howev execut process might stop prematur crash failur process might awaken within oe time unit activ alarm time perform failur process recov crash applic probabl processor execut program process incorrectli neglig system probabl neglect one use redund lower protocol level guarante crashperform process failur semant exampl consid processor suffer measur fig 15 distribut show differ time process awaken time request awaken base 350000 measur failur case one use processor pair execut program process lock step two processor disagre result instruct processor stop execut way processor failur transform crash failur dual processor approach transpar process thu assumpt process crashperform failur semant reason iv extens core time asynchron system model assum datagram servic process manag ser vice local hardwar clock introduc two option extens model stabl storag progress assumpt extens reason network workstat howev system might need actual access stabl storag progress assumpt state infinit often major process stabl ie behav like synchron sy tem bound amount time progress assumpt valid local area network base sy tem necessarili valid larg scale system connect wide area network moreov servic specif need progress assumpt enabl implement time asynchron sy tem sometim use term core model ex tend model distinguish model includ assumpt stabl storag progress assumpt addit core assumpt datagram ser vice process manag servic local hardwar clock stabl storag lose memori state crash allow process store inform crash introduc extens time asynchron system model local stabl storag servic servic provid follow two primit local process p ask valu val store address addr cristian fetzer time asynchron distribut system model 11 ask read recent valu store address addr p yet store valu addr valu undefin return predic denot invoc primit realtim store addrval read addrval respect stabl storag servic guarante address process p read return recent valu p store address read 8utvstor u 9ststore av stabl storag servic implement top unix use unix file system implement servic perform describ 9 b stabil progress assumpt timeli requir encount specif protocol design time asynchron system model often condit sens system stabil predic true system achiev someth good see eg 7 condit timeli requir express set process sp p stabl ie behav like synchron system failur affect sp commun bound frequenc occurr server sp guarante progress within bound amount time call set sp stabl partit 13 iff ffl process sp time ffl bound number messag sent process sp deliv time ffl partit either messag late messag arriv sp concept stabl partit formal stabil predic defin set process sp form stabl partit given time interv multipl reason definit stabil predic exampl stabl predic 10 major stabl predic 14 paper formal defin stabil predic deltafpartit introduc inform 17 first formal gener notion connected disconnected introduc 10 deltafpartit two process p q fconnect time interv iff 1 p q time 2 f messag sent two process deliv within ffi time unit denot fact p q fconnect predic time u time u process p deltadisconnect process q iff messag deliv p q transmiss delay unit common situat two process delta disconnect network overload least one process slow one use failawar datagram servic 19 detect messag transmiss delay delta guarante messag transmiss delay ffi wrongli suspect transmiss delay delta use predic deltadisconnectedpqst denot p deltadisconnect q deltadisconnectedpqst delta deliv u say nonempti set process deltafpartit interv iff process fconnect process delta disconnect process deltafpartit 8p2s8r2p deltadisconnectedprst exampl util stabil pred icat consid atom broadcast protocol design achiev group agreement semant 6 messag possibl lost late resent f time group process form deltafpartit suffici long time group make progress success broadcast messag time b2 progress assumpt lifetim distribut system base local area network character long period exist major process stabl stabil period altern short instabl period explain bursti behavior network traffic caus temporari instabl exam ple traffic burst caus occasion core dump file transfer via network base observa tion introduc concept progress assumpt 14 show classic servic consensu origin specifi use uncondit termin requir ment implement extend time model progress assumpt state system infinit often stabl exist constant j time exist major process sp sp form stabl partit b3 measur first measur show transmiss delay distribut time see figur 16 use experi 4 process process receiv send 36 udp messag per second henc sent 144 messag everi second ethernet messag contain payload 1448 byte ie induc network load 208 kbytesec also measur behavior six process run sun workstat depend system lab period day normal load condit see figur 17 set six pro realtim transmiss time fig 16 graph show transmiss delay messag receiv one process period 100 second transmiss delay messag stay long period time well 10m howev sporad delay increas well 10m cess averag delta1st 218 ie six process form deltafpartit 30m averag distanc two delta1st period 340m typic behavior experienc unstabl phase one six process slow measur use modifi membership servic 16 whenev process declar keep membership upto date six process stay membership knew fp 1 p 6 g delta1st theoret point view one determin perfectli system delta1st howev one determin system look process like delta1st practic point view equival system delta1st note membership servic allow fast process continu make progress even system delta1st temporarili remov slow process membership word system instabl might result remov slow disconnect process experi almost case remain process still provid safeti timeli properti v commun time synchron system commun time ie commun inform achiev measur passag time import exampl correct process p hear time iamal messag q p know q crash commun uncertainti character time asynchron system make commun time difficult restrict form still possibl exampl time model p hear q time iam aliv messag q p know q crash howev p know q iamal suffer failur mani applic suffici sinc p103050700 200 400 600 800 1000 ms unstabl phase fig 17 observ time two delta1st period six pro cess 30m period 24 hour typic failur behavior observ consecut stabil period one process slow care commun q time manner exampl leader elect pro process p might support elect q long p commun q time manner otherwis might tri support elect anoth process commun time man ner howev leader elect exampl make sure one leader time synchron system enforc properti straight forward sinc process detect perfectli current leader crash henc replac new leader asynchron system enforc properti easi sinc one decid current leader l crash slow commun l slow illustr two process p q use commun time ensur time one leader use lock mechan 17 view leas mechan 22 system without synchron clock mechan enabl commun time even local clock synchron mechan work follow send inform messag process q p say inform valid certain amount time ffl q receiv calcul upper bound transmiss delay determin long use ffl p determin consult local hardwar clock time beyond q longer make use inform contain concret consid pseudocod figur 18 exampl use commun time enforc one correct process p eventu leader ensur one leader time even though q might leader bound amount time concentr main aspect ie p detect q leader cristian fetzer time asynchron distribut system model 13 anymor q get one chanc becom leader p send q messag say q leader certain amount time complet leader elect protocol use time lock mechan found 13 process p send messag q inform q becom leader durat clock time unit transmiss delay delta realtim unit process q calcul upper bound transmiss delay determin use failawar datagram servic introduc 19 calcul upper bound transmiss delay messag deliv fast transmiss delay delta process q use fast set variabl expira tiontim qs leadership expir exactli durat time unit recept local clock time rt process p wait duration12aedelta1a clock time unit becom leader 1 factor 1 2ae necessari ps qs hardwar clock drift apart 2ae 2 factor 1ae sinc ps clock drift apart realtim deltaa maximum transmiss delay delta fast messag process r 2 fp qg leader iff function leader evalu true call valu rs hardwar clock argument ie leader r process p q never leader time sinc 1 q leader transmiss delay delta leader durat local clock time unit receiv 2 p sent wait least duration12aedelta1a local clock time unit becom leader note leader implicitli demot advanc hardwar clock sinc process might delay immedi check leader demot process might immedi detect demot howev leader use proper way process detect messag demot leader follow way ffl process r first read hardwar clock h r show valu ffl r determin leader queri function leader time r leader process send messag n set send timestamp n ffl process receiv n calcul transmiss time n base ie delay r ad transmiss time n exampl r swap read leader send n delay swap ad transmiss delay n receiv n reject n transmiss delay n slow summari typic transform delay demot leader messag perform failur detect receiv messag const time durat delta boolean leadertim expirationtim return true return fals process p begin leader q select event wakeupt select process q begin select event fagammadeliverm p fast rt fast endif select fig 18 pseudocod use commun time enforc correct p eventu leader ensur one leader time even though q might leader bound amount time vi possibl imposs issu address section issu problem like elect consensu implement actual distribut comput system allow determinist solut 1 timefre model 2 extent core time model fix idea use elect problem illustr issu whether leader problem determinist solut depend 1 exact specif problem 2 use progress assumpt whether underli system model allow commun time main intuit 1 one weaken problem one solv problem system well behav 2 one requir instead system well behav time time henc one solv problem system well behav one use commun time circumv imposs one decid perfectli remot process crash eg one use local hardwar clock decid time quantum remot process expir termin vs condit timeli condit commonli agreedupon rigor specif elect problem exampl 29 specifi elect problem timefre system model follow realtim exist one leader 14 ieee transact parallel distribut system appear 1999 infinit often exist leader ie realtim exist realtim process p becom leader typic problem specifi time system use strong uncondit termin condit like requir someth good eventu hap pen instead use condit timeli condit requir system stabil priori known durat someth good happen within bound time introduct deltafst predic earlier gener specif given 13 elect highli avail leadership problem time asynchron system follow realtim exist one leader tt major process deltafst time interv exist process p becom leader specif tf implement timefre system even one process allow crash 29 tt implement time system 10 13 explain consid timefre system contain least two process p q implement one solv follow problem process p becom leader realtim stay leader crash later time remain process detect p crash elect new leader time u satisfi requir tf sinc process commun messag one find run indistinguish remain process p crash still leader u word one find run least one two requir stf violat implement tt time asynchron system explain follow first ensur properti process decid current leader crash slow process leader bound amount time demot see section v process therefor wait certain amount time without exchang messag make sure leader demot particular process abl decid remot process crash imposs timefre time asynchron system model second system stabl major process time commun time fashion suffici elect one process leader bound amount time ensur timeli requir also satisfi 13 note specif tf implement core time model even one process allow crash explain consid run r process commun process caus datagram servic drop messag one process l r leader construct run r 0 l alway crash r 0 r 0 indistinguish r remain process therefor r 0 otherwis exist least two process q r becom leader time respect construct run r 00 indistinguish r process p q leader point realtim sinc p q commun process r b commun time import fault toler one interest question tt could implement timefre system sinc notion stabil defin timefre system sketch follow altern result instead tt implement time system hardwar clock remov even one process crash omiss failur occur note process access local hardwar clock determin upper bound transmiss delay messag leader enforc demot within bound time also known process particu lar mean interprocess commun like timefre model explicit messag thu proof sketch tf implement timefre model also appli tt time system model without hardwar clock thu essenti understand access local clock run within linear envelop realtim enabl commun time process allow us circumv time model imposs result 29 state timefre model c progress assumpt anoth observ tf determinist solut core time model implement practic network workstat reason time asynchron system model allow principl run system never stabl actual system one encount practic make behavior extrem unlik ffi oe well chosen mention earlier system like altern long stabil period rel short instabl period describ system therefor reason use progress assumpt see section ivb2 assum exist j system infinit often stabl least j time unit j progress assumpt ensur solut tt elect leader infinit often thu introduct progress assumpt impli solut tt also solut tf servic specif defin asynchron servic implement time model alway use condit timeli condit never use termin condit like tf gener need progress assumpt enabl implement servic condit timeli condit time asynchron system ie servic implement core time system model furthermor progress assumpt reason local area system necessarili valid wide area system frequent partit long time thu includ progress assumpt part cristian fetzer time asynchron distribut system model 15 core time asynchron system model vii conclus given rigor definit time asynchron system model base measur report previous perform network workstat depend system laboratori unpublish measur lab awar believ time asynchron system model accur descript actual distribut comput system particular believ set problem solvabl time model extend progress assumpt close approxim set problem solvabl system workstat link reliabl possibl local area base network realworld applic soft realtim con straint henc applic need notion time neither origin timefre model 21 extens failur detector 3 provid model therefor necessarili adequ foundat construct applic soft realtim constraint time model instead provid applic suffici strong notion time time model also good foundat construct failsaf hard realtim applic see 17 12 r evalu quorum system internet imposs group membership unreli failur detector asynchron system probabilist clock synchron understand faulttoler distribut system synchron asynchron group communica tion atom broad cast simpl messag diffus byzantin agreement implement perform stabl storag servic unix agre processorgroup membership asynchron distribut system consensu presenc partial synchroni padr protocol asymmetr duplex redund highli avail local leader servic possibl consensu asynchron system approach construct failsaf applic system support fail awar realtim applic build faulttoler hardwar clock imposs distribut consensu one faulti process effici faulttoler mechan distribut file cach consist distribut comput model method simul synchron processor time synchron network time protocol model analysi comput network clock simul synchron clock common knowledg distribut system failur mode assumpt assumpt coverag elect vs consensu asynchron system appli cryptographi quasisynchron step away tradit faulttoler realtim system model highli parallel atom multicast protocol tr ctr jeanfranoi hermant grard le lann fast asynchron uniform consensu realtim distribut system ieee transact comput v51 n8 p931944 august 2002 christof fetzer flaviu cristian failawar approach construct failsaf system realtim system v24 n2 p203238 march robert miller anand tripathi guardian model primit except handl distribut system ieee transact softwar engin v30 n12 p10081022 decemb 2004 roy friedman achour mostefaoui michel raynal asynchron bound lifetim failur detector inform process letter v94 n2 p8591 ying zhao wanlei zhou elicia j lanham shui yu mingjun lan selfadapt clock synchron base clock precis differ proceed twentysixth australasian confer comput scienc research practic inform technolog p181187 februari 01 2003 adelaid australia yun wang emmanuel anceaum francisco brasileiro fabola greve michel hurfin solv group prioriti invers problem time asynchron system ieee transact comput v51 n8 p900915 august 2002 christof fetzer perfect failur detect time asynchron system ieee transact comput v52 n2 p99112 februari keidar sergio rajsbaum cost faulttoler consensu fault preliminari version acm sigact news v32 n2 june 2001 ittai abraham gregori v chockler idit keidar dahlia malkhi byzantin disk paxo optim resili byzantin share memori proceed twentythird annual acm symposium principl distribut comput juli 2528 2004 st john newfoundland canada taisuk izumi akinori saitoh toshimitsu masuzawa adapt timeli consensu presenc crash time fault journal parallel distribut comput v67 n6 p648658 june 2007 keidar alexand shraer timeli failuredetector consensu perform proceed twentyfifth annual acm symposium principl distribut comput juli 2326 2006 denver colorado usa p v van der stok h janssenraemaek realtim atom multicast algorithm implement share memori multiprocessor realtim system v24 n1 p5591 januari roberto baldoni carlo marchetti threetier replic ftcorba infrastructur softwarepractic experi v33 n8 p767797 10 juli jian yin jeanphilipp martin arun venkataramani lorenzo alvisi mike dahlin separ agreement execut byzantin fault toler servic proceed nineteenth acm symposium oper system principl octob 1922 2003 bolton land ny usa shivak mishra christof fetzer flaviu cristian timewheel group commun system ieee transact comput v51 n8 p883899 august 2002 gregori chockler dahlia malkhi lightweight leas storagecentr coordin intern journal parallel program v34 n2 p143170 april 2006 christof fetzer flaviu cristian highli avail local leader elect servic ieee transact softwar engin v25 n5 p603618 septemb 1999 massimo franceschetti jehoshua bruck group membership algorithm practic specif ieee transact parallel distribut system v12 n11 p11901200 novemb 2001 sandeep kulkarni ravik stabil causal determinist merg journal high speed network v14 n2 p155183 april 2005 p cicotti taufer andrew chien dgmonitor perform monitor tool sandboxbas desktop grid platform journal supercomput v34 n2 p113133 novemb 2005 paul ezhilchelvan francisco v brasileiro neil speir timeoutbas messag order protocol lightweight softwar implement tmr system ieee transact parallel distribut system v15 n1 p5365 januari 2004 gregori v chockler idid keidar roman vitenberg group commun specif comprehens studi acm comput survey csur v33 n4 p427469 decemb 2001 xavier dfago andr schiper pter urbn total order broadcast multicast algorithm taxonomi survey acm comput survey csur v36 n4 p372421 decemb 2004