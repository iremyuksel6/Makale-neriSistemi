effici pointsto analysi wholeprogram analysi function program written languag c make extens use pointer autom softwar engin tool requir safe alia inform exist aliasanalysi techniqu suffici effici analysi larg softwar system may provid alia inform imprecis tool use imprecis alia inform may 1 reduc precis inform provid tool 2 increas cost tool paper present flowinsensit contextsensit pointsto analysi algorithm comput alia inform almost precis comput andersen algorithm precis flow contextinsensit algorithm almost effici steensgaard algorithm effici flow contextinsensit algorithm empir studi show algorithm scale larg program better andersen algorithm show flowinsensit alia analysi algorithm algorithm andersen algorithm comput alia inform close precis comput expens flow contextsensit alia analysi algorithm b introduct mani autom tool propos use softwar engin function program written languag c make extens use pointer tool requir alia inform determin set memori locat access derefer pointer variabl atkinson griswold discuss issu must consid integr alia inform wholeprogram analysi tool argu effect appli tool larg program aliasanalysi algorithm must fast thu propos approach use steensgaard algorithm 16 flow contextinsensit aliasanalysi algorithm 1 run nearlinear time provid flowsensit algorithm consid order statement program flowinsensit algorithm contextsensit algorithm consid legal callreturn sequenc procedur program contextinsensit algorithm alia inform tool howev experi show mani case steensgaard algorithm comput imprecis alia inform 13 18 imprecis advers impact perform wholeprogram analysi wholeprogram analysi affect imprecis alia inform two way first imprecis alia inform decreas precis inform provid wholeprogram analysi preliminari experi show size slice comput use alia inform provid steensgaard algorithm almost ten percent larger size slice comput use precis alia inform provid landi ryder algorithm 11 flowsensit contextsensit aliasanalysi algorithm sec ond imprecis alia inform greatli increas cost wholeprogram analysi empir studi show take slicer five time longer comput slice use alia inform provid steensgaard algorithm comput slice use alia inform provid landi ryder algorithm similar result report 13 result indic extra time requir perform wholeprogram analysi less precis alia inform might exceed time save alia analysi steensgaard algorithm one way improv effici wholeprogram analysi tool use precis alia inform precis alia inform provid flowsensit contextsensit algorithm eg 5 11 17 potenti larg number iter requir algorithm howev make costli time space thu expens applic larg program andersen algorithm 1 anoth flowinsensit contextinsensit aliasanalysi algorithm provid precis alia inform steensgaard algorithm less cost flowsensit contextsensit al gorithm algorithm howev may requir iter among pointerrel assign 2 3 program size requir entir program memori analysi thu algorithm may still expens time space applic larg program approach provid alia inform suffici precis use wholeprogram analysi maintain effici incorpor callingcontext flowinsensit aliasanalysi algorithm comput procedur alia inform hold statement proce dure algorithm three phase first phase algorithm use approach similar steensgaard process pointerrel assign comput alia inform procedur program second phase algorithm use bottomup approach propag alia inform call procedur calle call procedur caller final third phase algorithm use topdown approach propag alia inform caller calle 3 pointerrel assign statement chang valu pointer variabl 3 futur work includ extend algorithm handl function pointer use approach similar discuss refer 2 paper present aliasanalysi algorithm main benefit algorithm effici comput alia solut high precis like steensgaard algorithm algorithm effici provid safe alia inform process pointerrel assign howev algorithm comput separ pointsto graph procedur singl procedur typic contain pointerrel variabl signment algorithm comput alia set much smaller comput steensgaard algorithm provid alia inform almost precis comput andersen algorithm anoth benefit algorithm modular procedur stronglyconnect compon call graph memori thrice phase algorithm suitabl andersen analyz larg program paper also present set empir studi investig effici precis three flowinsensit algorithm algorithm steensgaard algorithm andersen algorithm landi ryder flowsensit algorithm 11 b impact alia inform provid four algorithm wholeprogram analysi studi show number interest result program studi algorithm andersen algorithm comput solut close precis comput flow contextsensit algorithm program andersen algorithm requir larg amount time algorithm comput alia inform time close steen gaard algorithm thu may scale larg program better dersen algorithm alia inform provid algorithm andersen algorithm landi ryder algorithm greatli reduc cost construct systemdepend graph perform dataflow base slice algorithm almost effect andersen algorithm landi ryder algorithm improv perform construct system depend graph perform dataflow base slice result indic algorithm provid suffici precis alia inform wholeprogram analysi effici way thu may effect algorithm among four support wholeprogram analysi larg program flowinsensit contextinsensit aliasanalysi algorithm flowinsensit contextinsensit aliasanalysi algorithm comput alia inform hold everi program point algorithm process pointer relat assign program arbitrari order replac call statement set assign repres bind actual paramet formal paramet algorithm comput safe alia inform point relat pointerrel assign set locat point int incrptrint ptr return ptr1 22 incrptr buf2 p input ptr buf1 q r incrptr buf2 p input ptr buf1 q r incrptr buf2 p input ptr buf1 q r 3 int input10 input input input h17 h18 incrptr ptr input buf2 buf1 q r incrptr ptr input buf2 buf1 q r incrptr ptr input buf2 buf1 q r b input input c fig 1 exampl program pointsto graph use steensgaard algorithm b pointsto graph use andersen algorithm c lefthand side superset set locat point righthand side view steensgaard algorithm andersen algorithm build pointsto graph 14 4 vertic pointsto graph repres equival class memori locat ie variabl heapalloc object edg repres pointsto relat among locat steensgaard algorithm forc locat point pointer equival class process pointerrel assign forc lefthand righthand side assign point equival class use method new pointerrel assign process pointsto graph remain safe previouslyprocess pointer relat assign method let steensgaard algorithm safe estim alia inform process pointerrel assign figur 1b show variou stage construct pointsto graph exampl program figur 1a use steensgaard algorithm top graph label b1 show pointsto graph initi stage pointer except input point empti equival class steensgaard 4 point graph similar alia graph 3 algorithm process statement 6 merg equival class point input equival class point p merg equival class illustr dot box steensgaard algorithm process statement 7 similarli merg equival class illustr dash box algorithm process statement 10 11 14 simul bind paramet return valu assign shown solid box figur 1 middl graph label b2 show pointsto graph steensgaard algorithm process main repres object return malloc steensgaard algorithm process statement 17 18 use h hstatement numberi bottom graph label b3 show pointsto graph steensgaard algorithm process entir program graph illustr steensgaard algorithm introduc mani spuriou pointsto relat andersen algorithm use vertex repres one memori locat algorithm process pointerrel assign ad edg forc lefthand side point locat pointsto set righthand side exampl algorithm process statement 6 add edg forc p point input ad edg way howev may caus alia inform previouslyprocess pointerrel assign unsaf pointsto set ss lefthand side superset pointsto set ss righthand side provid safe solut andersen algorithm iter previous process pointerrel assign pointsto graph provid safe alia solut figur 1c show variou stage construct pointsto graph use andersen algorithm exampl program top graph label c1 show pointsto graph construct andersen algorithm process main algorithm process statement 10 11 14 simul bind paramet use assign shown solid box middl graph label c2 show pointsto graph andersen algorithm process statement 17 algorithm forc h 17 point buf1 caus alia inform unsaf statement 7 provid safe solut andersen algorithm process statement 7 subsequ requir statement 11 14 reprocess bottom graph label c3 show complet solut graph illustr andersen algorithm comput smaller pointsto set steensgaard algorithm pointer variabl howev andersen algorithm requir step steensgaard algorithm 3 flowinsensit contextsensit pointsto analysi algorithm flowinsensit contextsensit pointsto analysi algorithm fic comput separ alia inform procedur program section first present definit use discuss algorithm next give overview algorithm discuss detail algorithm input buf2 r buf1 input buf2 r buf1 input buf2 r buf1 incrptr ptr incrptr buf1 buf2 global global buf1 buf2 ptr incrptr ptr incrptr phase 1 phase 2 phase 3 input input buf1 buf1 buf2 buf1 buf2 incrptr incrptr buf2 fig 2 pointsto graph construct fic algorithm 31 definit refer memori locat program object name 11 consist variabl possibl empti sequenc derefer field access say object name n 1 extend anoth object name construct appli possibl empti sequenc derefer field access n 2 case denot n 1 e hn 2 n formal paramet object name actual paramet bound n call site c defin function c return object name e hai n global c return e hni exampl suppos p pointer point struct field c languag e hpi lambdap e hlambdapi p e hpi lambdapa anoth exampl p formal paramet function f lambdaq actual paramet bound p call site c f c lambdapa return qa extend pointsto graph repres structur variabl field access edg label field name connect vertex repres structur vertex repres field structur pointsto edg label repres pointsto relat pointsto graph label uniqu among edg leav vertex given object name n fic find access path phngi pointsto graph g first fic locat creat vertex n 0 g n variabl correspond fic locat creat sequenc vertic path g label edg p match sequenc derefer field access n refer n k end vertex phngi associ vertex n g denot n k vhn gi note set memori locat associ vhn gi set memori locat alias n 32 overview fic comput separ alia inform procedur use pointsto graph fic first comput pointsto graph gp procedur p process pointerrel assign p use approach similar steen gaard algorithm none pointer variabl appear p global variabl formal paramet none pointer variabl use actual paramet gp safe estim alia inform p ever pointer variabl appear p global variabl formal paramet pointer variabl use actual paramet pointerrel assign procedur also introduc alias relat variabl gp must process captur alias three case pointerrel assign procedur introduc alias relat pointer variabl appear p first case pointerrel assign anoth procedur forc e hgi g global variabl appear p alias memori lo cation fic consid order statement must assum alia pair hold throughout program thu fic must consid alia pair p exampl figur 1a statement 17 forc lambdabuf 1 alias h 17 alia pair must propag main main use buf1 fic captur type alia pair gp two step 1 comput global pointsto graph g glob estim memori locat alias possibl global object name program 2 updat gp use alia inform repres g glob second case assign procedur call p forc e1 hf 1 alias e2 hf 2 f 1 formal paramet f 2 either formal paramet global variabl return valu function view formal paramet alia pair e 1 hf 1 ie 2 hf 2 propag call procedur p forc c e 1 hf 1 alias c e 2 hf 2 call site c exampl figur 1a statement 21 function incr ptr forc lambdaincr ptr alias lambdaptr alia pair propag back main forc lambdar alias lambdaq fic map alia pair relat formal paramet alia pair relat actual paramet updat gp alia pair actual paramet third case assign procedur call p forc locat l alias e hai actual paramet bound f call site c p alia pair propag p forc e hfi alias l exampl statement 6 forc lambdap input alia pair main figur propag incr ptr statement 10 forc lambdaptr input alia pair fic propag type alia pair call procedur p updat gp fic three phase phase 1 process pointerrel assign procedur initi build pointsto graph procedur phase 2 phase 3 handl three case discuss phase 2 propag alia inform call procedur call procedur also build pointsto graph global variabl use alia inform avail far procedur phase 2 process procedur revers topolog bottomup order stronglyconnect compon call graph within stronglyconnect compon phase 2 iter procedur pointsto graph procedur stabil phase 3 propag alia inform pointsto graph global variabl proce dure phase 3 also propag alia inform call procedur call procedur phase 3 process procedur topolog top order stronglyconnect compon call graph phase 3 iter procedur compon pointsto graph procedur stabil fic propag inform call procedur call procedur phase 2 propag inform call procedur call procedur phase 3 never propag inform invalid callreturn sequenc therefor fic contextsensit bottom graph figur 2 depict pointsto graph comput fic exampl program figur 1 graph show use fic variabl divid equival class differ pointsto graph differ procedur exampl incr ptr h 17 h 18 input one equival class howev main input differ equival class h 17 h 18 fic creat separ pointsto graph main init incr ptr comput precis alia solut steensgaard algorithm exampl program graph also show fic comput smaller pointsto set p q andersen algorithm consid callingcontext solut comput andersen algorithm p must point locat point incr ptr call context solut comput fic p point locat point incr ptr incr ptr invok statement 10 call context incr ptr point input 33 algorithm descript figur 3 show fic input p program analyz output l list pointsto graph one procedur one global variabl phase 1 creat pointsto graph individu procedur first phase line 17 fic process pointerrel assign procedur p p comput pointsto graph gp fic first find creat gp pointerrel assign rh algorithm use merg variant join oper steensgaard algorithm merg v 1 v 2 one vertex merg also merg successor v 1 v 2 properli label uniqu among edg leav new vertex phase fic ignor call site except call site memoryalloc function call site algorithm use h hstatement numberi repres object return function final fic add p w 1 w 2 add gp l algorithm fic input p program analyz output l list pointsto graph one procedur one global variabl declar gp list procedur sort reversetopolog stronglyconnect compon call graph list procedur sort topolog stronglyconnect compon call graph begin fic 1 foreach procedur p p phase 1 2 foreach pointerrel assign lh rh 3 find creat v1 lh v2 rh gp 4 mergegp 5 endfor l 7 endfor 8 w1 6 oe phase 2 9 remov procedur head w1 10 foreach call site c p j p 11 bindactualsc gp 12 endfor 13 bindglobalglobalsgp g glob gp 14 bindlocglobalsgp 15 gp updat foreach p caller pk 17 pk w1 add pk w1 endif 18 endfor 19 endif 20 endwhil 21 w2 6 oe phase 3 22 remov procedur head w2 24 foreach call site c p p j 26 endfor 27 gp j updat 28 foreach p j calle p l 29 p l w2 add p l w2 endif 30 endfor 31 endif 32 endwhil fig 3 fic flowinsensit contextsensit aliasanalysi algorithm pointsto graph top figur 2 construct fic first phase main left init middl incr ptrright exampl program note pointsto relat introduc init pointsto relat buf1 h 17 yet repres main pointsto graph follow two phase fic gather alia inform calle caller p build gp phase 2 comput alias introduc callsit creat global pointsto graph second phase line 820 procedur p fic comput alias introduc p call site call site c procedur call bind find alia pair e 1 hf 1 ie 2 hf 2 f 1 p j formal pointer paramet use depthfirst search gp j search begin vertic associ p j formal paramet pointer type look possibl pair phe1 hf 1 vertex impli e1 hf 1 alias e2 hf 2 bind map type alia pair back p captur alia pair gp merg end vertic pha c e 1 hf 1 gp pha c e 2 hf 2 gp gp exampl fic call bind process call site statement 14 figur 1 bind find alia pair lambdaptr lambdaincr ptr g incr ptr substitut ptr q incr ptr r creat alia pair lambdaq lambdar merg also search phe1 hfi gp j phe2 hgi gp j f formal pointer paramet g global variabl end vertex similarli bind merg end vertic pha c e 1 hfi gp phe2 hgi gp gp phase fic also call bindglob comput global pointsto graph g glob alia inform p bindglob find alia pair global variabl use depthfirst search gp search begin associ vertic global variabl gp look pair access path phe1 hg 1 one vertex bindglob merg end vertic phe1 hg 1 phe2 hg 2 exampl fic process main phase call bindglob search g main find p hlambdabuf p hlambdabuf 2 g main end vertex thu fic merg v hlambdabuf v hlambdabuf 2 g glob fic also comput memori locat alias e hgi g global locat l equival class repres vhe hgi gp alia pair fic call bindloc look vhe hgi gp use depthfirst search locat l associ vhe hgi gp merg vhl g glob vhe hgi g glob captur alia pair exampl fic process init phase merg vhh 17 g glob v hlambdabuf associ phase g glob complet phase 3 comput alias introduc call environ third phase line 2132 fic comput set locat repres vertic gp j complet comput gp j fic first comput locat vertic gp j g glob let g global variabl appear gp j fic call bindloc look vhe hgi gp j use depthfirst search bindloc copi memori locat vhe hgi g glob vhe hgi gp j exampl fic process main exampl figur 1 copi h 17 h fic also comput locat vertic gp j gp given p call p j call site c suppos bound formal paramet f c fic call bindloc copi locat vhe hai gp vhe hfi gp j captur fact alias locat e hai also alias e hfi exampl fic copi input v hlambdap g main v hlambdaptr g incr ptr p bound ptr statement 11 phase set memori locat repres vertex complet complex fic algorithm 5 theoret possibl construct program p o2 n distinguish locat 15 n size p make aliasanalysi algorithm discuss paper exponenti time space size p practic howev total distinguish locat p structur p typic limit number field let p number procedur p worstcas actual size pointsto graph comput procedur space complex fic op n absenc recurs procedur p process phase thu bind bindglob bindloc invok onumofcal time presenc recurs singl chang gp might requir one propag p caller one propag p calle gp chang os time thu bind bindglob bindloc invok onumofcallp time pointsto graph implement fast findunion structur invoc bind bindglob bindloc requir os find oper fast findunion structur size op let n numofcal absenc recurs n numofcal presenc recurs time complex fic sp sffn ff invers ackermann function practic expect numofcal thu expect run fic time almost linear size program practic 4 empir studi investig effici precis fic impact wholeprogram analysi alia inform variou precis level perform sever studi compar algorithm steensgaard algorithm st 16 andersen algorithm 1 landi ryder algorithm lr 11 use prolang analysi framework paf 6 implement pointsto graph fic steensgaard algorithm ander sen algorithm use implement landi ryder algorithm provid paf none implement handl function pointer setjumplongjump construct lefthand side tabl 1 give inform subset subject program use studi 6 allow algorithm captur alias introduc call librari function creat set stub simul effect function alias howev creat stub function would introduc alias call function preliminari studi observ use stub forc steensgaard algorithm introduc mani addit pointsto relat exampl dixi 5 detail complex analysi fic found 12twmc moria use studi 2 3 slicer requir 10 hour time limit set slice collect data tabl 1 subject program time second comput alia solut line number number number program code cfg node procedur pra st fic lr loader 1132 819 ansitap 1596 1087 37 59 006 016 019 054 dixi 2100 1357 52 149 01 022 03 092 learn 1600 1596 50 129 008 02 035 147 smail simul 3558 2992 114 83 011 038 034 143 flex 6902 3762 93 231 014 042 053 41028 space 11474 5601 137 732 062 177 464 11339 bison 7893 6533 134 1170 033 078 127 larn 9966 11796 295 642 037 12 12 mpeg play 17263 11864 135 1782 092 318 492 espresso 12864 15351 306 2706 421 1069 95716 moria 25002 20316 482 785 234 368 52182 use stub function would introduc alias call fic com pute averag thruderef mod 18 2945 wherea use stub comput averag thruderef mod 2210 see studi 1 studi 1 studi 1 compar perform precis steensgaard algorithm fic andersen algorithm landi ryder algorithm subject program record time requir comput alia inform time averag number locat modifi derefer righthand side tabl 1 show run time algorithm subject program 7 collect data run system sun ultra 1 workstat 128mb physic memori 256 mb virtual memori tabl show subject program flowinsensit algorithm run significantli faster landi ryder algorithm tabl also show small program fic andersen algorithm run time close steensgaard algorithm howev larg program andersen algorithm take larg amount time fic still run time close steensgaard algorithm result suggest larg program fic effici time andersen algorithm figur 4 show averag number thruderef mod four algorithm graph show mani program steensgaard algorithm comput imprecis alia inform might limit applic dataflow analys graph also show subject program fic comput alia solut thruderef mod close comput andersen algorithm smail espresso fic comput smaller thrud mod andersen algorithm two program function similar incr ptr figur 1 andersen algorithm lose precis consid call context graph show 7 data landi ryder algorithm avail seven program analysi requir 10 hour limit set analysi 62 433 fig 4 thruderef mod subject program tabl 2 averag number summari edg per call averag time second comput summari edg call system depend graph raw data steensgaard program st fic lr fic lr loader 465 23 195 11 195 11 199 11 419 474 419 478 428 500 ansitap 880 26 533 17 431 12 400 12 606 667 490 485 455 458 dixi 821 25 314 15 227 11 206 10 383 584 277 425 252 400 learn 1578 76 209 13 173 11 159 10 133 171 110 141 101 129 unzip 1979 94 738 40 687 34 402 21 373 429 347 364 203 221 smail simul 979 20 736 12 736 12 535 10 751 624 751 626 546 503 flex 1156 121 620 80 579 75 550 74 536 661 501 619 476 613 space 7562 194 5639 104 5525 102 3839 75 746 534 731 527 508 385 bison 679 26 653 16 520 11 962 624 766 434 larn 36726 1829 9582 382 8087 309 261 209 220 169 mpeg play 1306 322 946 239 940 218 724 742 720 677 solut comput fic andersen algorithm close comput landi ryder algorithm result suggest mani dataflow problem alias obtain use fic andersen algorithm might provid suffici precis note landi ryder algorithm use klimit techniqu collaps field structur handl recurs data structur 11 pointsto set pointer p comput landi ryder algorithm may contain locat pointsto set p comput three flowinsensit algorithm thu andersen algorithm provid smaller alia solut landi ryder algorithm loader space studi 2 studi 2 investig impact alia inform provid four algorithm size cost construct one program represent systemdepend graph 10 8 studi averag number summari edg per call cost comput summari edg system depend graph summari edg comput slice procedur respect memori locat modifi procedur use harrold ci slicer 7 thu time requir comput summari edg might differ time requir comput summari edg use method eg 10 nevertheless approach provid fair way compar cost comput summari edg use alia inform differ precis level tabl 2 show result studi obtain result sun ultra workstat 640mb physic memori 1gb virtual memori tabl show use precis alia inform provid fic andersen algorithm landi ryder algorithm effect reduc averag number summari edg per call time comput summari edg construct systemdepend graph 9 tabl show subject program use alia inform provid fic almost effect use alia inform provid andersen algorithm algorithm even effect andersen algorithm espresso algorithm comput smaller pointsto set pointer variabl result suggest fic prefer andersen algorithm build systemdepend graph larg program fic run significantli faster andersen algorithm larg program studi 3 studi 3 investig impact alia inform provid four aliasanalysi algorithm size slice cost comput slice obtain slice run harrold ci slicer slice criterion interest without store reus inform tabl 3 show result studi obtain result sun ultra workstat 640mb physic memori 1gb virtual memori tabl show subject program use precis alia inform comput steensgaard algorithm significantli reduc time comput slice tabl also show four program use precis alia inform significantli 10 reduc size slice four program illustr except conclus drawn shapiro horwitz 13 size slice hardli affect precis alia inform note five program slicer comput larger slice use alia inform provid landi ryder algorithm use provid fic andersen algorithm pointsto set comput landi ryder algorithm pointer p contain memori locat pointsto set comput steensgaard fic andersen algorithm p tabl show use alia inform 8 systemdepend graph use slice program comput summari edg expens part construct graph 9 similar result time report 13 steensgaard shapiro andersen algorithm compar tabl 3 averag size slice averag time second comput slice raw data steensgaard program st fic lr fic lr loaderi 207 53 192 34 192 33 194 35 930 641 930 634 938 665 ansitapey 290 166 284 96 277 53 300 49 981 581 957 322 1035 297 dixiey 705 255 704 83 704 59 699 55 999 327 999 231 992 217 learni 442 254 442 176 442 114 440 168 1000 690 999 449 995 660 unzipi 808 375 807 131 807 108 805 93 999 350 998 289 996 249 smaili 738 1765 637 961 635 754 863 545 861 427 simulatori 1258 548 1087 225 1087 227 1151 242 864 411 864 413 915 442 flexz 2025 2202 2019 1673 2019 1538 2002 1598 997 760 997 699 989 726 spacez 2234 13739 1936 5735 1936 5698 2086 4673 867 417 867 415 934 340 bisonz 2394 949 2394 841 2338 410 1000 886 977 432 larnz 6626 34773 6602 10756 6592 9024 996 309 995 260 mpeg playz 5708 3255 3935 1346 3935 1395 689 413 689 429 espressoz 6297 83321 6291 37765 6264 53671 999 453 995 644 data collect slice program z data collect one slice provid fic almost effect use alia inform provid andersen algorithm comput slice support conclus fic prefer andersen algorithm wholeprogram analysi 5 relat work mani dataflow analysi algorithm eg 9 10 includ fic use twophas interprocedur analysi framework first phase inform propag call procedur call procedur call statement encount summari call procedur use avoid propag inform call procedur second phase inform propag call procedur call procedur recent chatterje et al 4 use unknown initi valu paramet global variabl summari procedur comput flowsensit alia analysi 10 use twophas interprocedur analysi framework comput flow contextsensit alia inform although algorithm improv worst case complex landi ryder algorithm 11 comput alia inform precis still costli practic furthermor comparison two algorithm report known much chatterje et al algorithm outperform landi ryder algorithm number attempt design algorithm comput alia inform effici close steensgaard algorithm precis close andersen algorithm shapiro horwitz 14 propos method divid program variabl k categori allow variabl belong categori equival class thu similar fic method comput smaller equival class provid smaller pointsto set pointer variabl steensgaard algorithm fic differ method howev use independ set equival harrold rothermel use similar approach 8 class procedur thu fic benefit fact procedur refer small set program variabl fic also differ method fic contextsensit inform propag invalid callreturn sequenc final fic differ shapiro horwitz algorithm fic handl field structur wherea al gorithm assign field structur treat assign structur last differ difficult compar experiment result howev experiment result report refer 14 appear averag fic comput alia inform closer andersen precis algorithm 6 conclus present flowinsensit contextsensit pointsto analysi algorithm conduct sever empir studi 20 c program compar algorithm aliasanalysi algorithm empir result show although steensgaard algorithm fast alia inform comput algorithm imprecis use wholeprogram analysi empir result show use precis alia inform provid algorithm andersen algorithm landi ryder algorithm effect improv precis reduc cost wholeprogram anal ysi howev empir result also show andersen algorithm landi ryder algorithm could costli analyz larg program contrast empir result show algorithm comput alia inform almost precis comput andersen algorithm run time within six time steensgaard algorithm thu algorithm may effect algorithm support wholeprogram analysi futur work includ perform addit empir studi especi larg subject program compar algorithm alia analysi algorithm also conduct studi see imprecis alia inform comput algorithm affect variou wholeprogram analys acknowledg work support part grant microsoft inc nsf nyi award ccr9696157 ess award ccr9707792 ohio state univers thank anonym review made mani help suggest improv present paper r program analysi special c program lan guag effect wholeprogram analysi presenc pointer relev context infer program languag research group separ comput alia inform reus effici comput interprocedur definitionus chain interprocedur slice use depend graph safe approxim algorithm interprocedur pointer alias effect precis pointer analysi fast accur flowinsensit pointsto analysi effici contextsensit pointer analysi c program program decomposit pointer analysi step toward practic analys tr interprocedur slice use depend graph safe approxim algorithm interprocedur alias effici comput interprocedur definitionus chain contextsensit interprocedur pointsto analysi presenc function pointer effici contextsensit pointer analysi c program separ comput alia inform reus pointsto analysi almost linear time program decomposit pointer alias fast accur flowinsensit pointsto analysi effect wholeprogram analysi presenc pointer relev context infer reusedriven interprocedur slice flowinsensit interprocedur alia analysi presenc pointer effect presis pointer analysi pointsto analysi type infer program structur union ctr donglin liang maikel pen mari jean harrold evalu precis static refer analysi use profil acm sigsoft softwar engin note v27 n4 juli 2002 atana rountev satish chandra offlin variabl substitut scale pointsto analysi acm sigplan notic v35 n5 p4756 may 2000 donglin liang mari jean harrold lightweight context recoveri effici accur program analys proceed 22nd intern confer softwar engin p366375 june 0411 2000 limerick ireland manuel fhndrich jakob rehof manuvir da scalabl contextsensit flow analysi use instanti constraint acm sigplan notic v35 n5 p253263 may 2000 manuvir da unificationbas pointer analysi direct assign acm sigplan notic v35 n5 p3546 may 2000 donglin liang maikel pen mari jean harrold extend evalu flowinsenstit contextinsensit pointsto analys java proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p7379 june 2001 snowbird utah unit state donglin liang mari jean harrold equival analysi gener techniqu improv effici dataflow analys presenc pointer acm sigsoft softwar engin note v24 n5 p3946 sept 1999 marku mock manuvir da craig chamber susan j egger dynam pointsto set comparison static analys potenti applic program understand optim proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p6672 june 2001 snowbird utah unit state ana milanova atana rountev barbara g ryder precis call graph c program function pointer autom softwar engin v11 n1 p726 januari 2004 jamieson cobleigh lori clark leon j osterweil right algorithm right time compar data flow analysi algorithm finit state verif proceed 23rd intern confer softwar engin p3746 may 1219 2001 toronto ontario canada marku mock darren c atkinson craig chamber susan j egger program slice dynam pointsto set ieee transact softwar engin v31 n8 p657678 august 2005 david j pearc paul h j kelli chri hankin effici fieldsensit pointer analysi c proceed acmsigplansigsoft workshop program analysi softwar tool engin june 0708 2004 washington dc usa marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data acm sigsoft softwar engin note v27 n6 novemb 2002 marku mock darren c atkinson craig chamber susan j egger improv program slice dynam pointsto data proceed 10th acm sigsoft symposium foundat softwar engin novemb 1822 2002 charleston south carolina usa donglin liang mari jean harrold equival analysi applic improv effici program slice acm transact softwar engin methodolog tosem v11 n3 p347383 juli 2002 sigmund cherem radu rugina region analysi transform java program proceed 4th intern symposium memori manag octob 2425 2004 vancouv bc canada ami l souter lori l pollock omen strategi test objectori softwar acm sigsoft softwar engin note v25 n5 p4959 sept 2000 michael hind anthoni pioli pointer analysi use acm sigsoft softwar engin note v25 n5 p113123 sept 2000 chri lattner andrew lenharth vikram adv make contextsensit pointsto analysi heap clone practic real world acm sigplan notic v42 n6 june 2007 brian hackett radu rugina regionbas shape analysi track locat acm sigplan notic v40 n1 p310323 januari 2005 g ryder safe approxim algorithm interprocedur pointer alias acm sigplan notic v39 n4 april 2004 alessandro orso saurabh sinha mari jean harrold classifi data depend presenc pointer program comprehens test debug acm transact softwar engin methodolog tosem v13 n2 p199239 april 2004 sandrin blazi specifi automat gener special tool fortran 90 autom softwar engin v7 n4 p345376 decemb 2000 jongdeok choi manish gupta mauricio j serrano vugranam c sreedhar samuel p midkiff stack alloc synchron optim java use escap analysi acm transact program languag system topla v25 n6 p876910 novemb chri lattner vikram adv automat pool alloc improv perform control data structur layout heap acm sigplan notic v40 n6 june 2005 david binkley mark harman analysi visual predic depend formal paramet global variabl ieee transact softwar engin v30 n11 p715735 novemb 2004 martin hirzel daniel von dincklag amer diwan michael hind fast onlin pointer analysi acm transact program languag system topla v29 n2 p11e april 2007 michael hind pointer analysi havent solv problem yet proceed 2001 acm sigplansigsoft workshop program analysi softwar tool engin p5461 june 2001 snowbird utah unit state david binkley nicola gold mark harman empir studi static program slice size acm transact softwar engin methodolog tosem v16 n2 p8e april 2007 david j pearc paul h j kelli chri hankin onlin cycl detect differ propag applic pointer analysi softwar qualiti control v12 n4 p311337 decemb 2004 barbara g ryder william landi philip stock sean zhang rita altuch schema interprocedur modif sideeffect analysi pointer alias acm transact program languag system topla v23 n2 p105186 march 2001 baowen xu ju qian xiaofang zhang zhongqiang wu lin chen brief survey program slice acm sigsoft softwar engin note v30 n2 march 2005