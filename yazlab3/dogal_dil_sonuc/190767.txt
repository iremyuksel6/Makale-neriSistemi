index transform algorithm linear algebra framework present linear algebra formul class index transform asgray code encod decod matrix transpos bit revers vector reversalshuffl index dimens permut formul unifi simplifiesand use deriv algorithm hypercub multiprocessor show wide known properti gray code wellknown properti well deriv use framework use framework relat hypercub commun algorithm gaussjordan elimin matrix 0s 1s b introduct present theori class index transform algorithm properli thought matrixvector product though rare class strictli superset class known bcp bitpermutecompl 20 21 spirit theori link idea van loan new book 26 particularli notion matrix factor defin algorithm princip idea discuss matrix factor algorithm per se idea differ way view gener algorithm loan 26 cover comput framework fast fourier transform despit differ approach quot firmli agre proper way discuss matrixvector product discret fourier transform matrixvector notat vector subscript multipl summat repel scalar notat assembl languag code retard algorithm develop although alway clear bcp larger class commun problem formul matrixvector product rare keohan stearn address similar class permut 19 formul problem matrixvector product notabl except contemporan work cormen 2 permut data disk array motiv stem commun algorithm real applic hypercub multiprocessor connect machin model cm2 multiprocessor though believ idea wider applic matric contain 0s 1s describ transform vector length 2 n indirectli binari encod familiar exampl bit revers oper use conjunct fft bit revers permut vector length 2 n induc permut n object n bit vector indic one repres transform 2 n theta 2 n permut matrix compon vector 11 26 purpos conveni consid compact represent n theta n matrix describ index transform bit revers case 1s northeastsouthwest diagon otherwis 0 also familiar socal dimens transform index permut arbitrari permut n bit indic induc permut 2 n element use matric order 2 n matric order n suffic defin linear index transform bit vector n compon n theta n 01 matrix matrixvector multipli perform modulo 2 long nonsingular n theta n matrix induc permut indic dimens permut trivial exampl transform exampl includ gray code encod decod arbitrari axe mani real applic hypercub multiprocessor requir complic composit transform show matter notat rather exist certain kind conveni algorithm hypercub perform data movement given linear index transform equival abil perform gaussjordan elimin without pivot abil turn relat familiar condit princip submatric thu complic combinatori problem devis algorithm reduc algebra problem decompos matrix believ first time exist hypercub commun algorithm relat abil perform gaussjordan elimin section 2 fix notat use throughout paper section 3 contain main result section 4 appli result toward special case gray code encod decod section 5 consid dimens permut conclud section 6 notat let f 2 field element f0 1g addit multipl defin modulo 2 paper addit multipl alway perform modulo 2 denot vector space nvector element f 2 f n similarli set theta n matric element f 2 denot f mn 2 clariti sometim display matric empti space entri 0 sometim consid binari encod node address hypercub usual manner integ 0 identifi element f n 2 use binari encod number thu identifi vector notic vector written least signific bit first cours f ncan natur includ subset f n1 2 append extra zero admit vector notat binari represent number seem clash usual represent order appear backward definit present appropri consist matrixvector notat resist temptat refer first row matrix f mn 2 first compon vector f n 2 0th rather chose familiar index origin one use vector e nth compon 1 j first n compon 1 vector thought element f k 2 use natur embed also avoid difficulti let e order sequenc number revers sequenc 3 linear affin index transform defin transform interest us refer affin linear definit 31 index transform defin affin data node sent node fi cormen 2 call class transform bmmc bitmatrixmultiplycompl definit 32 index transform defin linear data node sent node fi thu linear index transform affin transform fix data node 0 simplest hypercub commun uncondit exchang data across fix dimens algebra describ anoth simpl hypercub commun send data opposit corner hypercub vector revers anoth exampl linear index transform dimens permut consid author stone 22 fraser 6 nassimi sahni 20 21 flander 5 johnsson ho 14 stout wagar 23 24 swarztraub 25 dimens permut defin map permut matrix sinc permut matric orthogon pp also symmetr squar root ident thu symmetr permut matrix correspond disjoint set dimens pair exchang hand circul permut matric correspond relabel dimens way preserv circular order indic shuffl unshuffl oper give two matric circul permut matric form subset irreduc permut matric matrix said irreduc nontrivi invari subspac irreduc permut matric correspond dimens exchang repres cycl section 4 consid exampl gray code encod decod basic theorem algebra tell us nonsingular map onetoon otherwis rank r map hypercub rdimension subcub map send data 2 ngammar node one definit 33 condit exchang across dimens k denot e k commun pattern defin fi ai matrix whose diagon consist 1s whose offdiagon may possibl 1 kth row exampl condit exchang across dimens 3 repres matrix map describ condit chang third bit depend first fourth bit extend use term condit exchang also refer associ matrix without loss clariti lemma 31 e k condit exchang e k nonsingular proof form matrix clear determin e k 1 e k e thu notic kth diagon entri 0 kth column 0 matrix would singular fact rank matrix would exactli n gamma 1 commun might term condit project condit exchang implement directli hypercub node either send data across dimens specifi exchang noth one dimens hypercub travers oper algorithm achiev fifti percent overal util dimens hypercub commun oper use dimens simultan call cube swap oper node send one messag along hypercub dimens n theta n matrix decompos sequenc condit exchang matric describ algorithm implement linear index transform given sequenc condit exchang oper across dimens 1 n respect gener admit factor form reorder dimens 1 n factor defin algorithm implement linear index transform sequenc condit exchang differ order sequenc exchang disjoint dimens implement pipelin fashion hypercub sequenc ident cube swap oper long nontrivi amount data node pipelin one startup one winddown step dimens travers pipe start algorithm achiev fifti percent util total bandwidth avail cours leav us short factor two total use cube swap bandwidth allow us consid gener situat present main theorem relat hypercub commun algorithm algebra gaussjordan elimin perform columnwis modulo 2 instead real theorem 31 follow statement equival 1 may decompos product condit exchang 2 index transform defin accomplish hypercub pipelin sequenc cube swap accomplish sequenc condit exchang travers dimens 1 n consecut 3 columnwis gaussjordan elimin algorithm modulo 2 run complet without need pivot 4 n princip submatric nonsingular proof equival 1 2 discuss theorem columnwis gaussjordan elimin mean algorithm whose ith step consist ad multipl column column result matrix match ident first row modulo 2 arithmet one verifi algorithm take follow simpl form i12n ea j denot matrix ident except jth row defin match wellknown gaussjordan algorithm requir pivot ith step igamma1 ii 6 0 exactli condit ea nonsingular gaussjordan algorithm run complet without gener singular matric e convers suppos decompos 1 product right side 31 chang bit 1 thu matrix agre ident matrix first row determin e uniqu matrix describ ith step columnwis gaussjordan elimin without pivot establish equival 1 3 final sinc step gaussjordan procedur add multipl column column determin princip submatric chang thu gaussjordan algorithm run complet princip submatric nonsingular convers princip submatric nonsingular ith pivot 0 product first pivot determin ith princip submatrix establish equival 3 4 proof complet corollari 31 lu l u nonsingular lower upper triangular matric decompos thu gaussian elimin rather gaussjordan elimin use test whether decomposit though gaussjordan need construct decomposit corollari 32 let reorder number 1 n decompos diagon submatric given row column nonsingular equival plup p permut matrix index transform correspond perform sequenc condit exchang order specifi p proof gaussjordan algorithm run consecut row 1 n give desir decomposit exist break need pivot corollari 33 nonsingular upper lower triangular matrix algorithm exist travers dimens order proof diagon minor determin upper lower nonsingular triangular matric corollari 34 cycl matrix diagon entri equal 0 written product condit exchang order proof princip submatrix equal 1 corollari 35 permut matrix written product condit exchang order proof princip submatric includ exactli one row column one compon cycl singular corollari 36 nonsingular defin index transform perform pipelin sequenc condit exchang follow dimens permut algorithm proof nonsingular written plu perform gaussian elimin partial pivot sinc shown construct algorithm correspond lu sinc algorithm accomplish address permut exist accomplish linear transform corollari 37 form u 1 pu 2 u 1 u 2 upper triangular 0 nonsingular princip submatric therefor 0 implement sequenc condit exchang standard order proof let upper triangular everi diagon minor u 1 henc nonzero kth princip submatrix 0 given product kth princip submatrix p u 1 pu 2 u 2 henc nonsingular tripl product u 1 pu 2 aris cm2 multiprocessor transpos matrix collaps separ axe chang layout array machin case u 1 u 2 denot gray code decod oper respect gray code decod address bit permut bit encod possibl new way type oper explor next section gray code hypercub multiprocessor gray code decod arbitrari axe import commun pattern hypercub multiprocessor outlin section follow 1 brief digress histori gray code wellknown perhap ought 2 deriv wide known properti gray code use linear algebra framework 3 applic theori previou section toward new result gray code binaryreflect gray code curiou histori appear mani differ applic invent french engin emil baudot 18451903 purpos send receiv telegraph 10 1872 appear solut socal chines ring puzzl see gardner 7 also solut famou tower hanoi puzzl frank gray develop code bear name 1940 though first publish 1953 patent socal puls code modul tube later gray code use mani way analogtodigit convert though probabl obviou mani believ gilbert 8 1958 first point explicitli consecut number gray code sequenc form hamiltonian path hypercub time fashion enumer hamiltonian path hypercub well invent multiprocessor comput hypercub network becam possibl first time make use path real physic hypercub mani author independ observ util properti embed ring higher dimension mesh cm2 system softwar use embed store grid manner invis programm inde would easi believ erron cm2 separ network grid commun cm2 data consid grid order also known news order data label locat processor label gi g gray code oper data cube order also known send order data label fact locat node sinc certain algorithm run effici data grid order algorithm run faster cube order need routin convert two order scheme commun pattern convert singl onedimension axi cube grid order gi grid cube order given g g gamma1 given key point linear index transform numer linear algebra 9 common emb household reflect given rotat insid larger ident matrix oper select compon vector analo gousli one gray code certain compon vector hypercub usual associ block compon variou axe one refer gray code axi gray code encod oper g decept simpl defin condit g linear oper vector modulo 2 let g n denot restrict gray code encod oper g finit dimension space f n 2 g n linear transform f n whose n theta n matrix represent gray code decod oper g gamma1 uniqu defin restrict g gamma1 finit dimension space f n 2 n theta n matrix represent let n sequenc 2 n element f n 2 numer increas order obtain sequenc revers order add j n element henc name vector revers let sequenc gray code element n sinc prove import properti binaryreflect gray code often taken part standard definit theorem 41 revers properti revers sequenc gs n equal sequenc bit nth posit complement relat observ theorem 42 consecut member sequenc gs n differ exactli one bit proof two consecut number alway written gi 1 k least signific bit sinc gj bit gray code differ kth follow gilbert 8 revers properti readili grasp eye diagram 0 repres blank space 1 black squar 1000 1100 sinc g g gamma1 upper triangular corollari 33 gray code decod accomplish order exampl 4 express algorithm johnsson 12 notat notic algorithm perform encod loword bit highord bit decod perform highord bit loword bit algorithm revers order first develop johnsson 16 exist use algorithm order discuss johnsson ho 15 17 one particularli interest exampl decod start least signific bit case f p k 1 row pk column n readili follow edg use subcub defin v use subcub v 1 basi new algorithm given johnsson ho 15 take better advantag avail bandwidth gener decompos product condit exchang e distinct dimens element ith row jth column e 1 everi jth row match ident matrix wire along dimens j use take better advantag avail bandwidth defin code chang oper g 1 g gamma1 combin exampl treat twodimension matrix onedimension vector hypercub involv code chang corollari 41 code chang oper pipelin algorithm proof sinc decod encod oper upper triangular composit corollari 42 code chang oper pipelin algorithm permut dimens 5 dimens permut hypercub multiprocessor seen previous dimens permut correspond permut matric use n 2 element describ object requir n two answer one hypercub multiprocessor frequent desir combin code decod dimens permut oper 13 matrix notat allow us put oper set answer deriv result matric without actual explicitli write entri matrix latter context realli deriv algebra result symmetr group n object hypercub multiprocessor dimens permut induc fairli complic motion machin rememb dimens permut index transform n object induc complic permut 2 n object factor permut matrix simpler matric allow compact way think algorithm dimens permut dimens form shuffl repres circul matrix shown five dimens unshuffl also repres circul matrix next definit precis defin shuffl permut definit 51 shuffl permut indic transform whose matrix ij given ident except column e word appropri column shift left circularli hypercub multiprocessor conveni implement dimens permut sequenc elementari bitexchang definit 52 index transform defin elementari bitexchang matrix represent permut matrix ident except two row column denot matrix e ij j distinguish row column definit 53 index transform defin bitexchang matrix represent symmetr permut matrix lemma 51 bitexchang matrix express product independ elementari bit exchang matric convers product independ elementari bitexchang matric reduc bitexchang matrix lemma 52 shuffl permut express product two bitexchang matric proof renumb shuffl necessari 1n 1n product follow two bitexchang matric lemma 53 permut matrix express product two bitexchang matric proof proof similar proof lemma 52 permut matrix separ disjoint cycl fact quit use practic code written cm2 accomplish bitrevers oper 4 easili gener bitexchang oper use lemma 53 dimens permut implement motiv larg softwar project known twuffler accomplish oper form g notic wellknown 14 shuffl unshuffl carri sequenc dimens exchang two conveni way illustr follow exampl 5 exampl 1 exampl 2 fact exactli n factor shuffl matrix elementari bitexchang elementari bitexchang invers factor gamma1 obtain revers order factor 15 gener two exampl see product increas order equat 56 decreas order equation57 note exampl 1 dimens first last use twice exampl 2 dimens 1 use total use dimens must exampl 1 best load balanc dimens exampl 2 repres worst case load balanc dimens howev data motion exampl 1 account factoroftwo differ two approach unnecessari elimin 14 furthermor even though exampl 2 appear unfavor fix dimens dimens local node bitexchang adjac node binari cube factor given exampl 1 requir commun node distanc two factor given exampl 2 basi algorithm swartztraub 25 sever algorithm johnsson ho 14 18 algorithm base follow observ 56 see e ii1 i1j combin 57 obtain thu shuffl dimens express product n exchang dimens use everi bitexchang dimens fact repres local memori advantag approach clear elementari bitexchang repres onehop commun hypercub anoth approach prove conveni express shuffl permut composit sever shuffl permut fewer dimens method use devis algorithm optim concurr commun 20 21 14 18 use equat 56 57 take advantag fact jk ij gamma1 commut thu sever element per node element permut accord jk first other accord ij gamma1 first 6 conclus cast index transform algorithm linear algebra framework applic toward hypercub algorithm framework multipl purpos one express idea alreadi commonli known concis languag anoth import purpos shed light exist algorithm construct automat demonstr acknowledg would like thank think machin corpor particularli marshal isman ted tabloski support work relat project connect machin provid financi support sens spirit make project pleasur addit first author would like thank think machin corpor third author invit work project relat twuffler project summer 1990 earliest version paper draft 3 final would like thank emili stone excel assist edit r optim commun algorithm hypercub fast permut disk array algebra shuffl graycod hypercub optim matrix transposit bit revers hypercub alltoal person commun unifi approach class data movement array processor array permut indexdigit permut curiou properti gray code use solv puzzl gray code path ncube matrix comput origin binari code fast algorithm transpos larg multidimension imag data set commun effici basic linear algebra comput hypercub archi tectur algorithm matrix transposit boolean ncube configur ensembl architectur optim algorithm stabl dimens permut boolean cube convers binari code binaryreflect gray code boolean cube optim commun distribut share memori model comput network architectur complex reshap array boolean cube gener shuffl permut boolean cube rout linear permut omega network two pass optim rout algorithm mesh connect parallel comput optim bpc permut cube connect simd comput parallel process perfect shuffl pass messag linkbound hypercub intens hypercub commun prearrang commun linkbound machin journal parallel comput comput framework fast fourier transform tr unifi approach class data movement array processor commun effect basic linear algebra comput hypercub architectur algorithm matrix transposit boolean italicncub configur ensembl architectur optim algorithm stabl dimens permut boolean cube optim matrix transposit bit revers hypercub comput framework fast fourier transform matrix comput 3rd ed array permut indexdigit permut optim rout algorithm meshconnect parallel comput ctr mounir hamdi siang w song embed hierarch hypercub network hypercub ieee transact parallel distribut system v8 n9 p897902 septemb 1997 chri h q ding optim index reshuffl algorithm multidimension array applic parallel architectur ieee transact parallel distribut system v12 n3 p306315 march 2001 leonard f wisniewski structur permut place parallel disk system proceed fourth workshop io parallel distribut system part feder comput research confer p128139 may 2727 1996 philadelphia pennsylvania unit state mayez almouham array organ parallel memori intern journal parallel program v32 n2 p123163 april 2004