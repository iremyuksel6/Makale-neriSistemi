activ manag data cach exploit reus inform abstracta microprocessor speed continu outpac memori subsystem speed minim averag data access time grow import multilater cach afford opportun reduc averag data access time activ manag block alloc replac decis evalu compar perform tradit cach multilater cach three activ block alloc scheme mat nt pc also compar perform nt pc multilater cach nearoptim nonimplement polici pseudoopt employ futur knowledg achiev activ alloc activ replac nt pc evalu rel pseudoopt respect miss ratio accuraci predict refer local actual usag accuraci tour length block cach result show multilater scheme outperform tradit cach manag scheme fall short pseudoopt increas predict accuraci incorpor activ replac decis would allow close approach pseudoopt perform b introduct minim averag data access time paramount import design highperform machin unfortun access time ochip memori measur processor clock cycl increas dramat dispar main memori access work done univers michigan time processor clock speed widen eect dispar compound multipleissu processor continu increas number instruct issu cycl mani approach minim averag data access time common solut incorpor multipl level cach memori onchip still alloc replac block manner essenti cach rst appear three decad ago recent studi 231610818 explor better way congur manag resourc preciou rstlevel l1 cach activ cach manag activ block alloc replac improv perform given size cach maintain use block cach activ manag retain reus inform previou tour block use manag block alloc andor replac subsequ tour 1 order partit alloc block within cach structur sever propos scheme 1610818 incorpor addit data store within l1 cach structur intellig manag state result multilater 2 17 cach exploit reus pattern inform structur perform activ block alloc still releg block replac decis simpl hardwar replac algorithm processor design typic design largest possibl cach still ever grow processor die multilater design shown perform well better larger singl structur cach requir less die area 1722 given die size reduc die requir attain given rate data suppli free space resourc exampl dedic space branch predict data forward instruct suppli instruct reorder buer paper evalu perform three propos cach scheme perform activ block alloc compar perform one anoth tradit singlestructur cach implement mat 10 nt 16 pc 18 scheme use 1 tour cach block time interv alloc block cach subsequ evict given memori block mani tour cach use term multilater refer level cach contain two data store disjoint content oper parallel hardwar similar possibl order fair comparison block alloc algorithm use experi show make placement decis base eectiv addressbas block reus nt scheme outperform macroblock base pcbase approach mat pc respect three scheme perform compar larger directmap cach better associ cach similar size examin perform optim nearoptim multilater cach determin perform potenti multilater scheme optim nearoptim scheme excel block replac decis block alloc decis direct consequ replac decis compar perform two implement multilater scheme nearoptim scheme determin reason perform implement scheme perform better improv need made block alloc replac choic rest paper organ follow section 2 discuss techniqu aid reduc averag data access time section 3 discuss activ cach manag detail present past eort perform activ block alloc section 4 present simul methodolog section 5 evalu perform three multilater scheme section 6 present perform optim nearoptim multilater scheme perform nearoptim replac block compar decis made nearoptim scheme made two implement scheme conclus given section 7 background mani techniqu reduc toler averag memori access time promin among 1 store buer use delay write bu idl cycl order reduc bu content 2 nonblock cach overlap multipl load miss fulll request hit cach 1912 hardwar softwar prefetch methodolog attempt preload data memori cach need 514615 cach 11 improv perform direct map cach addit small fulli associ cach l1 cach next level hierarchi scheme contribut reduc averag data access time paper approach problem premis averag data access time reduc exploit reus pattern inform activ manag state l1 cach approach use techniqu reduc averag data access time 3 activ cach manag activ cach manag use improv perform given size cach structur control data placement manag cach keep activ work set resid even presenc transient refer activ manag cach consist two part alloc block within cach structur demand miss 3 replac block current resid cach structur 4 block alloc today cach passiv straightforward block demand fetch place correspond set within cach structur howev decis take consider block use usag characterist examin past histori given block one method aid futur alloc block decis rang simpli cach target block bypass place block particular portion cach structur hope make best use target cach block block remain cach simpl block replac polici use choos block evict today cach choic often suboptim multilater cach alloc replac problem coupl particular block avail replac direct consequ alloc demandmiss block recent sever approach ecient manag l1 data cach via block 3 alloc decis block load demand miss eg prefetch block stream buer scheme propos 11 bypass scheme consid howev scheme make proper bypass decis alloc decis prefetch data improv upon perform scheme evalu herein 4 consid writealloc cach paper write noalloc cach follow subset rule write subject alloc decis alloc decis emerg literatur nt 16 mat 10 dualselect 8 pc 18 howev none approach make sophist block replac decis instead releg decis respect cach substructur 31 nt model nt nontempor stream cach 16 locationsensit cach manag scheme use hardwar dynam partit cach block two group tempor nontempor nt base reus behavior past tour block consid nt tour l1 word block reus block classi nt subsequ alloc separ small cach place parallel main l1 cach block mark prior inform avail handl main cach data placement decid use reus inform associ eectiv address request block eectiv nt reduc miss ratio memori trac averag access penalti demonstr primarili mostli numer program 32 mat model mat memori address tabl cach 10 anoth scheme base use eectiv address howev dynam partit cach data block two group base frequenc reus block becom tag either frequent infrequ access memori address tabl use keep track reus inform granular group macroblock dene contigu group memori block consid usag pattern characterist block determin infrequ access alloc separ small cach scheme shown signic speedup gener cach due improv miss ratio reduc bu trac result reduct averag data access latenc 33 dual cacheselect cach model dual cach 8 two independ cach structur spatial cach tempor cach cach block dynam tag either tempor spatial local predict tabl use maintain inform recent execut loadstor instruct block tag neither spatial tempor nd place cach bypass cach method use handl vector oper random access pattern larg stride introduc self interfer howev two cach necessarili maintain disjoint content tempor cach design smaller line size compar spatial cach requir data found cach read tempor cach written parallel order overcom replic coher problem author propos simpli version dual cach call select cach select cach one memori unit like convent cach incur hardwar cost due local predict tabl dual cach data exhibit spatial local tempor local selfinterf cach benchmark studi scheme shown perform better convent cach size select cach improv bypass cach 7 reli compil hint decid whether block cach bypass 34 pc model pc program counter select cach 18 multilater cach design evolv cna cach scheme 23 pc cach decid data placement block base program counter valu memori instruct caus current miss rather eectiv address block nt cach thu pc tour perform block recent brought cach memori access instruct rather recent tour perform current block brought cach use determin placement block perform pc best program refer behavior given datum wellcorrel memori referenc instruct bring block cach 35 multilater cach scheme sever cach scheme consid multilater cach assist cach 13 use hp pa7200 victim cach 11 howev neither scheme activ manag cach structur use reus inform obtain dynam program execut assist cach use small data store stage area data enter l1 potenti prevent data enter l1 indic compil hint victim cach excel perform major cach miss con ict miss result limit associ main cach buer victim scheme serv dynam increas associ hot spot typic directmap main cach scheme shown perform well 22 requir costli data path two data store perform data migrat requir without intercach data path present scheme oper use previou tour inform activ decid data store alloc block victim cach shown perform well rel activelymanag scheme main cach directmap 18 paper evalu multilater scheme use dynam inform alloc data among two data store direct data path 4 simul methodolog simul set benchmark program use compar perform multilater cach strategi section describ dynam superscalar processor memori simul use evalu cach memori structur system congur use method metric benchmark constitut simul environ 41 processor memori subsystem processor model studi modic simoutord simul simplescalar 3 toolset simul perform outoford ooo issu execut complet deriv mip instruct set architectur schemat diagram target processor memori subsystem shown figur 1 summari chosen paramet architectur assumpt memori subsystem model mlcach tool discuss consist separ instruct data cach perfect secondari data cach main memori instruct cach perfect respond singl cycl data cach model fetch mechan fetch 16 instruct program order per cycl branch predictor perfect branch predict issu mechan outoford issu 16 oper per cycl 256 entri instruct reorder buffer ruu 128 entri loadstor queue load may execut prior store address known function unit multdiv 8 fp multdiv 8 ls unit f u latenc int alu11 int mult31 int fp div1212 ls11 instruct cach perfect cach 1 cycl latenc data cach multilater l1 writealloc latenc latenc nonblock ing 8 memori port processor cach data cach secondari cach main memori figur 1 processor memori subsystem characterist convent data cach split two subcach disjoint content place parallel within l1 multilater cach subcach uniqu congur size setassoci replac polici etc b cach probe parallel equidist cpu b nonblock 32byte line singl cycl access time standard singlestructur data cach model would simpli congur cach desir paramet set b cach size zero l2 cach access latenc bu l1 l2 bytescycl data bandwidth l1 l2 access fulli pipelin miss request sent l1l2 bu everi cycl 100 pend request l2 cach model perfect cach order focu studi manag strategi l1 42 mlcach simul tool mlcach 22 eventdriven timingsensit cach simul base latenc eect le cach time model discuss depth 21 easili congur model variou singl multilater cach structur use librari cach state data movement routin interact model librari routin user write support routin descript checkforcachehit check see access block present cach updat place access block cach moveov move access block one cach anoth doswap move access block cache1 cache2 move evict block cache1 doswapwithinclus place access block cache1 cache2 move evict block cache2 cache1 dosaveevict move block evict cache1 cache2 findandremov remov block cach checkforreus determin block exhibit tempor behavior word reus tabl 1 basic support routin provid mlcach simul user call routin congur le control cach state interact manag routin call simul tool easili join wide rang eventdriven processor simul describ processor model work base simplescalar toolset togeth combin processorand cach simul simplescalarmlcach provid detail evalu multipl cach design run target workload propos processorcach congur mlcach easili retarget due provis librari routin user choos perform action take place cach situat routin access singl c le name congc user simpli modi congc describ desir interact cach processor memori user also control action occur via delay updat mechan built cach simul delay updat use allow behavior cach simul dineroiii 9 account latenc latenc latencyad eect use delay updat caus eect access ie access placement cach remov replac block etc occur calcul latenc access pass tabl 1 show routin provid brief descript interact need addit librari routin ad howev brief exampl easi see modular librarybas simul alreadi allow signic rang cach congur examin evalu perform three multilater scheme mat nt pc compar perform three tradit singlestructur cach 16k directmap cach 16k 2way associ cach 32k directmap cach cong urat evalu cach shown tabl 2 43 simul cach scheme perform realist comparison among program counter eectiv address scheme requir detail memori simul mat nt pc cach manag scheme describ chose omit select cach block alloc decis similar made pc pc hardwar implement simpler ensur fair comparison evalu place manag scheme platform within uniform multilater environ use mlcach tool congur includ 32entri structur store reus inform describ scheme follow subsect describ implement mat nt pc cach manag scheme main cach label cach auxiliari buer label cach b cach place equidist cpu three scheme congur similar possibl one anoth perform dierenc attribut primarili dierenc among block alloc decis make 431 structur oper nt cach nt cach use model 18 adapt scheme propos 16 activ alloc data within l1 base block usag characterist particular block known exhibit nontempor reus place b other presum tempor block sent done hope allow tempor data remain larger cach longer period time shorter lifetim nontempor data short quickli access small associ b cach memori access desir data found either b data return processor 0 ad latenc block remain cach singl mat nt pc cach b b b size 16k16k32k 16k 2k 16k 2k 16k 2k associ 121 1 full 1 full 1 full replac polici lru lru lru lru latenc next level tabl 2 characterist four congur studi timeslat cycl found miss block enter l1 check see entri detect unit du du contain tempor inform block recent evict l1 manag follow entri du describ one block contain block address match tnt bit indic tempor recent tour evict block check see exhibit tempor reus ie word block referenc least twice justcomplet tour l1 cach structur tnt bit set accordingli du correspond du entri found evict block new du entri creat made mru du structur miss new miss block address match entri du tnt bit entri check block place indic tempor b du entri made mru du better chanc remain du futur alloc predict thu creation access entri du treat use du 32 entri simul maintain lru replac match du entri found miss block assum tempor place 432 structur oper pc cach pc cach 18 decid data placement base program counter valu memori instruct caus current miss rather eectiv address block nt cach thu perform block miss individu memori access instruct rather individu data block determin placement data pc scheme pc cach structur model similar nt cach du index memori access instruct program counter updat manner similar nt scheme block replac tempor bit entri associ pc memori access instruct brought block cach begin tour set accord block reus characterist justcomplet tour cach du entri match pc valu one creat replac lru entri du instruct subsequ miss load block place b instruct pc hit du predict bit indic nt otherwis block place instruct miss du data place 433 structur oper mat cach mat cach 10 structur memori address tabl mat keep track reus inform guid data block placement b cach l1 structur implement mat 32entri fulli associ structur like du nt pc note howev origin implement mat report 10 use 1k entri direct map tabl mat entri consist macroblock address nbit satur counter 8bit counter 1kb macroblock size use origin studi memori access cach b check parallel request data time counter correspond mat entri access block increment correspond entri one creat counter set 0 lru entri mat replac counter serv indic use given macroblock use decid whether block macroblock place b cach next tour cach miss macroblock address incom block use index mat entri exist counter valu increment compar decrement counter macroblock correspond block would replac incom block place cach counter decrement ensur data eventu replac counter resid data continu decreas reaccess often enough continu con ict recent access block counter valu incom block higher con ict block current cach incom block replac block cach situat indic incom block macroblock shown use earlier tour macroblock con ict block resid thu given higher prioriti resid larger main cach counter valu incom block less current resid block incom block place smaller b cach final entri correspond incom block block place cach default new entri creat mat counter initi zero entri correspond con ict block current cach counter valu assum 0 permit new block replac easili entri found mat resid block cach anoth macroblock map set mat must access recent current block therefor less like use near futur nt pc scheme direct data path b cach unlik scheme howev mat structur updat everi access cach instead replac 44 benchmark tabl 3 show 5 integ 3 oat point program spec95 benchmark suit use studi program vari memori requir simul done use train data set program run complet except perl termin rst 15 billion instruct 45 rel cach eect ratio import metric evalu cach manag scheme cach hitmiss ratio howev ooo processor multiport nonblock cach eectiv memori latenc seen processor vari accord number outstand miss request sinc main focu studi evalu eectiv l1 cach instruct count memori refer million perfect memori perform program million load store cycl count million ipc spec95 integ benchmark compress 3568 737 599 535 66644 gcc 26385 6115 3624 4350 60648 go 54813 11579 4140 9133 60049 perl 150000 39682 26983 23289 64408 float point benchmark hydro2d 97450 19611 6090 12763 76353 su2cor 105409 26220 8474 15234 69192 tabl 3 eight benchmark memori characterist structur use special manag techniqu rel cach eect ratio rcr develop 17 rcr given processor run cach congur x rel cach congur base given cyclecount base cyclecount p erfectcach 1 cyclecount p erfectcach total number cycl need execut program processor perfect cach congur rcr normal metric base cach perfect cach 1 base cach congur 0 perfect cach congur cach congur perform better base rcr 0 1 lower rcr better cach congur perform wors base rcr 1 rcr give indic nite cach penalti reduct obtain use given cach congur rcr mirror perform indic speedup number isol cach penalti cycl total run time rescal fraction penalti tradit base cach thu give direct indic well memori subsystem perform rel ideal perfect cach addit overal perform speedup metric use measur rel perform gain cach manag approach section 5 46 block tour reus concept eectiv cach manag scheme also measur abil minim cumul number block tour program run individu cach block tour monitor classi base reus pattern exhibit tour see reus word block consid dynam tempor tour see word reus dynam nontempor dynam tempor dynam nontempor tour classi either spatial one word use nonspati one word use allow us classifi tour one four data reus group 1 nontempor nonspati ntn 2 nontempor spatial nt nonspati tn manag scheme result fewer longer tour consequ higher percentag data refer block make ts tour ntn nt tour problemat frequent refer data like caus cach pollut minim impact bad tour good multilater cach manag scheme util accur block behavior predict mechan data alloc decis 5 experiment result miss ratio often use rank perform benet particular cach scheme howev miss ratio weakli correl perform latencymask processor nonblock cach furthermor fail captur latencyad eect delay hit overal perform delay hit discuss 2221 access data current return cach behalf earlier miss cach block delay hit incur latenc larger cach hit gener less full cach miss request data alreadi transit next level memori two program exhibit similar miss ratio may thu quit dierent overal execut time due dier number delay hit extent latenc mask shown 22 avoid oversimplifi cach scheme impact overal perform instead concentr two metric timingsensit experi overal speedup rel compress gcc go hydro2d li perl su2cor swim tabl 4 miss ratio 6 cach scheme run 8 benchmark base cach rel cach eect ratio present 51 miss ratio tabl 4 show miss ratio six cach congur run eight benchmark figur 2 show correspond speedup rel 16k directmap cach naiv might assum compar two congur particular applic higher miss ratio would impli lower speedup sinc cach stall account portion run time rel speedup would less rel miss ratio howev comparison tabl 4 figur 2 show assumpt valid compress exampl miss ratio pc 101x nt run time 104x longer gcc 32k directmap cach actual higher miss ratio less run time 16k 2way associ cach swim nt higher miss ratio less run time mat 16k 32k directmap 16k 2way cach thu rel miss ratio alon inadequ indic rel perform latenc mask miss latenc overlap delay hit must incorpor time model get accur perform assess therefor concentr perform analysi latencysensit metric speedup rcr 52 speedup speedup achiev scheme program shown figur 2 singl directmap 16k1w cach taken base overal speedup obtain use multilater cach scheme rang virtual none hydro2d 16 go nt clearli benchmark test benet improv oer cach scheme evalu ie better manag l1 200 400 600 800 1000 1200 1400 1600 compress gcc go hydro2d li perl su2cor swim nt pc figur 2 overal execut time speedup evalu cach scheme rel singl directmap data store multilater scheme increas associ singl cach 16k2w larger cach 32k1w benchmark appreci perform gain base cach multilater scheme often perform well better either higherassoci singl cach larger directmap cach compress gcc benchmark larger work set benet larger overal cach space provid directmap structur although even benchmark multilater scheme abl obtain signic part perform boost via better manag cach despit smaller size multilater cach gener perform well compar larger directmap cach gener faster 2way associ cach multilater scheme larger directmap cach oer fast access smaller associ b cach still access quickli due small size experi show use 8way associ b cach instead fulli associ b cach would reduc perform less 1 among multilater scheme see nt scheme provid greatest speedup benchmark except li mat perform best su2cor swim pc perform best best multilater cach speedup order 1 three benchmark mat pc scheme perform well group block exhibit similar reus behavior consecut tour cach nt scheme may howev fail detect reus pattern correl reus inform individu cach block oppos macroblock memori region mat memori access instruct pc thu mat pc scheme perform well program exhibit simd singleinstruct multipledata behavior refer behavior nearbi memori block block referenc memori access instruct may better indic reus behavior usag individu block last tour howev nt scheme still competit three benchmark thu give best overal perform scheme full suit benchmark 53 rcr perform figur 3 show rcr perform mat nt pc two singlestructur cach 16k directmap cach serv base comparison see nt pc elimin 50 nite cach penalti experienc go perl compress gcc li 32k singlestructur directmap cach perform best howev dierenc rcr bestperform multilater scheme larg except li reduc nite cach penalti twice much mat best multilater scheme benchmark none cach show signic improv rcr remain three benchmark hydro2d su2cor swim instanc multilater scheme experi poor perform eg mat perl benchmark rel multilater scheme block alloc scheme mat well match characterist perl benchmark mani block shortliv frequent access block place smaller fullyassoci cach behavior continu mani block contend space smaller 2k fulli associ cach larger 16k cach badli underutil phenomenon occur multilater cach scheme extrem multilater scheme perform may degrad b cach 010030050070090compress gcc go hydro2d li perl su2cor swim rcr nt pc figur 3 rcr perform evalu congur run eight benchmark rcr near 10 perform similar base 16k directmap cach rcr closer 0 approach perform perfect cach perform degrad address improv block alloc mechan discuss section 6 54 perform dierenc caus though mat nt make block alloc decis base eectiv address block access perform dier mat may make poor alloc decis either miss block block would replac cach markedli dierent desir perceiv desir macroblock resid dispar desir occur blockbas desir mechan use nt perform better tabl 5 present tour analysi go su2cor perform nt rel mat well demonstr go nt appear manag tour program better actual reduc number tour mat experi 32 case su2cor perform dierenc mat nt small term rcr clear applic much nontempor spatial data 17 neither scheme reduc tour seen 16kb directmap cach 6 tour analysi two singlestructur cach also shown two wide dispar benchmark analys use compar mat nt also use compar multilater cach singlestructur cach go 32k directmap cach manag scheme total tour reduct tour total percentag refer tour group cach manag scheme total tour reduct tour total percentag refer tour group tabl 5 tour analysi go top su2cor bottom cach best singlestructur cach perform though slightli lower percentag ts tour nt cach substanti overal tour thu wors overal perform mat nt su2cor 2way associ directmap cach fail signicantli improv perform base cach due high percentag nt data access nt perform better pc overal speedup rcr dierent basi decis make use pc nt pc eectiv address respect result dierent perform pc scheme may place block suboptim cach sinc placement uenc block previous referenc request pc exampl set block may brought cach one instruct begin larg routin block may reus dierent way dierent part program execut eg tempor initi phase nontempor main program execut block usag characterist may attribut singl entri du tie pc instruct brought block cach tour end instruct entri du updat particular tour behavior directli aect placement next block request instruct eect alloc decis pc uenc recent replac block associ load instruct question characterist recent replac block persist discuss section 634 alloc decis made pc load instruct vari often potenti degrad perform howev program counter manag scheme may good given instruct load data whose usag strongli bias 14 one direct ie tour almost tempor almost nontempor case accur behavior predict futur tour result good block placement instruct howev data block load instruct dier usag characterist ie weakli bias 14 placement decis block poor block usag histori tnt kept singl bit nt pc macroblock access frequenc kept nbit counter mat reduc counter size mat gener lead decreas perform 10 howev keep tour histori use 2 3bit counter nt pc show virtual perform benet 1bit scheme 6 use reus inform data cach manag multilater scheme oper assumpt reus inform use activ manag cach section assess valu reus inform make placement decis multilater l1 cach structur rst examin optim cach structur determin exploit reus inform cach manag outlin experi perform valid use reus inform compar perform multilater scheme perform nearoptim manag cach size 61 optim nearoptim manag cach beladi min 2 optim replac algorithm singlestructur cach ie result fewest miss 5 interest see reus inform use 5 note consid time model section min optim algorithm manag singl cach interest determin optim replac algorithm multilater cach make replac decis reus inform might best exploit howev direct extens min multilater cach known except b cach multilater congur fulli associ block free move two cach necessari order retain use block cach structur multilater cach howev degener reduc singl fulli associ cach size equal total cach plu cach b case min use optim manag hardwarepartit fulli associ singl cach refer beladi min algorithm appli dual associ cach opt opt give upper bound perform multilater cach given size associ compar opt implement scheme yield direct comparison replac decis base reus inform sinc multilater cach typic cach b dier associ perform dierenc implement scheme opt may due replac decis also map restrict place implement scheme limit associ would instead like compar perform implement scheme optim manag multilater congur b cach dier associ order better attribut dierenc placement replac decis manag polici rather associ congur pseudoopt 20 multilater cach manag scheme congur associ greater b congur opt free movement block b allow scheme provid content b disjoint manag adapt beladi min algorithm follow miss incom block ll empti slot correspond set cach cach b one exist empti slot exist set cach extend set block dene consist block cach cach b map set cach refer b c f b e f c hitmiss figur 4 exampl show pseudoopt suboptim extend set includ block current resid cach b ie set whose extend set larger associ cach block extend set whose next refer farthest futur found block current resid cach b swap one cach b block extend set incom block place cach block set next referenc farthest futur move cach b overl one block cach b block next referenc farthest futur replac choic optim case illustr follow exampl refer pattern figur 4 consid design directmap cach size 2 block 2 set one block cach b refer shown gure block address upper case letter map set 0 lower case letter map set 1 cach gure show content set 0 set 1 cach cach b memori access use pseudoopt incur 7 miss rst 3 compulsori miss empti block replac c time 4 sinc c next referenc futur f b time replac b replac f rather final f c miss howev minimum possibl number miss 6 achiev replac f set 0 cach instead c cach b time 4 e replac b time 6 swap b c nalli f miss c hit case b cach fulli associ pseudoopt reduc opt although pseudoopt also implement polici perform seen tabl 6 close opt furthermor pseudoopt perform much better implement multilater scheme perform perform dierenc implement scheme opt thu due nonoptim alloc replac decis small portion perform dierenc dierenc opt pseudoopt due restrict associ implement scheme therefor use pseudoopt comparison implement scheme order elimin associ dierenc evalu give better idea realiz perform limitedassoci multilater cach dierenc placement replac decis seen implement scheme provid insight perform rel nearoptim scheme 62 simul environ evalu opt pseudoopt scheme collect memori refer trace gener simplescalar processor environ 3 trace entri contain eectiv address access type access load store program counter instruct respons access skip rst 100 million instruct avoid initi eect analyz subsequ 25 million memori refer limit number memori refer evalu due space process time requir perform opt pseudoopt cach evalu experi use spec95 integ benchmark compress gcc go li perl sinc sampl small portion oat point program like gener refer form part regular loop result low miss rate howev sampl trace integ program reason mirror actual memori refer behavior complet program execut shown section 5 trace annot includ inform necessari perform opt pseudoopt replac decis counter mani use statist includ outcom access hit miss would occur optpseudoopt congur usag inform block tour seen scheme number block reus categori cach instant time ie number ntn nt tn ts block resid cach statist gather inform regard perform opt pseudoopt manag scheme compar perform implement scheme optim scheme accessbyaccess basi due smaller size input set section compar full program execut perform section 4 chose directmap 8kb cach fulli soci 1kb b cach 32b blocksiz pseudoopt congur opt congur simpli 9k fulli associ cach use larger 162k cach section 4 evalu would use determin scheme perform spec benchmark alreadi small moder size work set 5 rel short trace would show littl perform benet activ manag larg cach wherea benet activ manag highlight use smaller cach mlcach simul use section deal cach memori processor without processor eect time littl signic mlcach use behaviorallevel simul 63 result 631 analysi opt vs pseudoopt analyz annot trace produc opt pseudoopt run determin rel perform base miss ratio measur block usag inform particular count number tour show reus pattern number type block resid cach given instant often block prior reus characterist chang usag pattern subsequ tour 632 miss ratio miss ratio tabl 6 show perform pseudoopt rel close opt except go note miss ratio experi straightforward perform metric simul behavior includ access latenc processor latencymask eect go perform dispar opt pseudoopt due limit associ cach possibl also compress gcc go li perl pseudoopt tabl miss ratio 81kb 16kb cach congur trace input pon pseudoopt noswap scheme suboptim replac polici pseudoopt replac number swap done opt rearrang cach content least desir cach block replac howev pseudoopt movement choic limit map requir directmap cach one block map set b associ incom block need swap replac despit limit choic block replac perform pseudoopt still close opt except go dierenc perform pseudoopt opt alway much smaller dierenc implement congur pseudoopt actual perform implement scheme discuss section 64 addit advantag futur knowledg pseudoopt dier implement scheme freeli allow block move b cach order obtain best block replac howev movement actual account littl perform dierenc seen pseudoopt implement scheme verifi claim creat version pseudoopt call pon pseudoopt swap disallow data movement cach manag scheme use pon pseudoopt except block swap cach b time incom block replac block b set next referenc farthest futur pon thu possibl replac block cach b referenc sooner futur block set extend set cach b could replac swap allow howev see tabl 6 miss ratio pseudoopt pon actual compressopt compresspo gccopt gccpo goopt gopo liopt lipo perlopt perlpo benchmarkschem block cach ts tn nt ntn figur 5 dynam cach block occup opt pseudoopt denot po group ntn nt tn ts usag pattern close indic omiss intercach data movement small eect nearoptimum perform particular perform dierenc pseudoopt pon much smaller dierenc pseudoopt implement scheme show major advantag pseudoopt come manag use futur knowledg oppos abil move block cach sinc multilater scheme allow data movement b cach use pseudoopt basi comparison implement multilater cach scheme 633 cach block local analysi examin local cach block resid cach structur given time count number block categori time miss take averag durat program local cach block opt pseudoopt congur shown figur 5 opt pseudoopt manag cach expect data exhibit tempor reus occupi larg portion cach space nontempor data occupi 23 cach compress pseudoopt furthermor vast major block l1 tempor spatial though block rel small size 32 byte nd spatial reus exploit well cach manag properli expect pseudoopt congur vs opt congur gener hold fewer ts block compress gcc go li perl compress gcc go li perl tour opt pseudoopt persist persist figur usag persist within opt pseudoopt cach due pseudoopt congur limit placement option suboptim replac decis howev perl except observ opt pseudoopt perl data cach spatial ts nt seen figur 5 keep nt block cach long enough obtain ts statu done pseudo opt slightli increas miss ratio perl benchmark opt indic maxim number ts block cach alway best polici 634 block usag persist presenc certain type block cach show potenti benet manag cach reus inform manag base inform straightforward block dierent usag characterist dierent portion program execut make block usag hard predict predict particular block usag pattern similar branch predict problem howev branch outcom easier predict optim block usag characterist aid placement decis assess valu reus inform examin persist cach block behavior opt pseudoopt scheme ie block exhibit given usag characterist current tour like maintain characterist next tour high correl past futur use ie block usag characterist persist predict futur usag behavior easier block persist term notsam therefor analog samedirect terminolog use branch predict studi 14 predict path specic branch take given behavior histori instead determin block persist term four usag pattern ntn nt tn ts decid examin persist nt pattern coarser granular group directli relev placement decis 2unit cach structur figur 6 present data block usag persist success tour gener block exhibit nt usag behavior prior tour strong likelihood exhibit nt behavior futur tour opt scheme likelihood rang 63 perl 95 compress evalu benchmark howev pseudoopt scheme show somewhat less persist rang 57 go 87 compress nt block persist nt block opt pseudoopt scheme well 50 block exhibit usag behavior less persist thu less predict block persist opt scheme rang 40 go 97 li similar pseudoopt 45 compress 92 li li skew number somewhat regardless type usag characterist block exhibit tour next tour highli like exhibit tempor reus tempor block persist li much less persist three benchmark compress gcc go perl repres wider rang program execut li alon see futur tour tempor block harder predict nontempor block ie tempor tag block weakli bias toward exhibit usag pattern next tour 64 multilater scheme perform given perform reus inform opt pseudoopt congur determin implement scheme perform result restrict evalu implement scheme nt pc two multilater congur activ place data within l1 base individu block reus inform 641 miss ratio perform nt pc compar pseudoopt congur use congur nt pc structur 8kb directmap cach 1kb fulli associ lrumanag cach 32b block size 32entri detect unit du miss ratio perform two congur shown tabl 6 along perform opt pseudoopt pon directmap 16kb singl structur cach concurr result earlier analys multilater congur 161722 nt pc cach perform well directmap cach nearli twice size howev perform pseudoopt indic still room improv 642 predict accuraci nt make placement decis base given block usag recent past block exhibit nontempor reus place smaller b cach next tour otherwis place cach pc make placement decis base reus block load memori access instruct recent replac block load particular pc exhibit nontempor reus next block load pc predict place smaller b cach otherwis place larger cach scheme access block match entri du place cach default accuraci predict determin base actual usag block pseudoopt scheme instanc predict behavior block classi correct actual usag block pseudoopt scheme note section 62 annot trace fed tracedriven cach simul modi version mlcach contain actual block usag inform tour seen pseudoopt scheme simul provid inform select scheme block predict actual usag accuraci given inform easi determin well congur predict block usag consequ whether properli place within tour predict accuraci actual usag accuraci nt pc nt pc compress 0240 0210 0402 0412 total total 0527 0595 0696 0675 go 0588 0621 0646 0652 total 0561 0596 0624 0609 total 0786 0723 0787 0758 perl 0326 0382 0727 0738 total 0327 0510 0861 0875 tabl 7 tour predict actual usag accuraci nt pc broken nt overal total accuraci accuraci rel actual block usag pseudoopt l1 cach structur tabl 7 show predict accuraci nt pc benchmark examin gener ignor li due excess high tempor reus predict accuraci rel low rang 25 compress nt 60 go pc despit larger granular block type two categori nt rather complet four categori breakdown nt pc scheme show poor predict accuraci directli impact block alloc decis result overal perform improv block usag predict scheme may result better block placement higher perform 643 actual usag accuraci regardless predict accuraci given block exhibit reus characterist base durat time tour cach examin actual usag block evict cach implement scheme see usag compar block usag pseudoopt scheme comparison shed light eect elimin movement block cach l1 tour compress gcc go li perl pseudoopt 12933 26695 17312 25946 11778 222973 44004 342215 957 54749 nt 41 441 20 520 14 261 33 663 77 1304 pc 37 489 21 498 13 241 32 661 79 1340 8k1w 36 354 20 357 12 140 26 480 37 359 tabl 8 averag tour length pseudoopt nt pc directmap singl cach tour length measur number access handl block cach tour broken nt see tabl 7 rel low predict accuraci saw section 642 actual usag block cach closer actual usag block pseudo opt thu despit placement decis block still exhibit reus behavior akin seen pseudoopt congur furthermor although nt exhibit lower tour predict accuraci pc benchmark except li exhibit higher actual usag accuraci benchmark except perl 644 tour length accuraci interest block tour length implement scheme directli relat tour length pseudoopt scheme pseudoopt elabor replac polici dispar tour length aect comparison two way first tour shorter pseudoopt congur implement scheme implement scheme may keep block l1 longer necessari permit exhibit seemingli beneci usag pattern ie tn ts make particular block seem use longer presenc block l1 implement scheme may unduli shorten tour signic number block lead misclass preclud optim placement convers tour longer pseudoopt implement scheme correspond block implement scheme may replac exhibit optim usag characterist caus poor usag accuraci poor predict accuraci poor placement small b cach henc shorter tour length tabl 8 show averag tour length block show nt usag characterist expect nt tour much shorter tour tour pseudoopt averag much longer tour either nt pc due futur knowledg greater exibl manag data enter l1 cach structur nt pc block place l1 remain cach replac thu subject replac polici inher correspond cach instanc block deem either nt pc place directmap cach subsequ block map set also mark earlier evict possibl exhibit optimum usag characterist pseudoopt deem desir time block would simpli move b cach result tour length block would tend much longer pseudoopt nt pc see clear gap averag tour length block pseudoopt vs implement scheme dierenc tour length howev much larger dierenc miss ratio implement vs pseudoopt scheme perform dierenc much smaller averag tour length pseudoopt increas greatli tour length con ict block may help much better manag scheme block may chosen remain cach nearli entir program execut access regularli though necessarili frequent would thu long tour length longliv block greatli increas averag tour length seen benchmark though may reduc overal number miss small amount studi see improv upon predict usag characterist block manag block place l1 cach structur might improv perform nt pc scheme reduc perform gap exist scheme pseudoopt see tabl 8 multilater scheme increas tour length rel singl directmap cach structur nearli size indic scheme make decis improv data usag perform rel convent cach conclus paper evalu three dierent implement methodolog mat nt pc manag onchip data cach base activ block alloc via captur exploit reus inform gener activ manag cach structur signi cantli improv upon perform tradit passivelymanag cach structur similar size compet one nearli twice size individu eec tive address reus histori scheme use nt gener give better perform macroblock eectiv addressbas mat pcbase pc approach compar perform pc nt scheme perform nearoptim manag cach structur pseudoopt dierenc perform block usag predict actual block usag tour length implement scheme pseudoopt show much room improv activelymanag cach thu multilater cach structur activ place data within cach show promis improv cach space usag howev predict strategi use current scheme simpl improv predict algorithm well activ manag block place l1 cach structur activ replac help improv perform implement scheme may enabl approach optim cach space usag acknowledg research support nation scienc foundat grant mip 9734023 gift ibm simul facil provid intel technolog educ 2000 grant r studi replac algorithm virtual storag comput evalu futur microprocessor simplescalar tool set prefetch memori system behavior spec95 benchmark suit reduc memori latenc via nonblock prefetch cach improv cach perform select cach bypass data cach multipl cach strategi tune di document improv directmap cach perform addit small fulli associ cach prefetch buer reduc con ict directmap cach temporalitybas design util reus inform data cach manag improv perform l1 cach associ bu earli design cycl time simul cach mlcach exibl multilater cach simul tr ctr prabhat jain sriniva devada daniel engel larri rudolph softwareassist cach replac mechan embed system proceed 2001 ieeeacm intern confer computeraid design novemb 0408 2001 san jose california salvador petit julio sahuquillo jose david kaeli exploit tempor local drowsi cach polici proceed 2nd confer comput frontier may 0406 2005 ischia itali mark brehob richard enbodi eric torng stephen wagner onlin restrict cach journal schedul v6 n2 p149166 marchapril mark brehob stephen wagner eric torng richard enbodi optim replac nphardfor nonstandard cach ieee transact comput v53 n1 p7376 januari 2004 mark brehob richard enbodi eric torng stephen wagner onlin restrict cach proceed twelfth annual acmsiam symposium discret algorithm p374383 januari 0709 2001 washington dc unit state wang nelson passo improv cach hit ratio extend referenc cach line journal comput scienc colleg v18 n4 p118123 april martin kamp per stenstrom michel duboi selfcorrect lru replac polici proceed 1st confer comput frontier april 1416 2004 ischia itali j sahuquillo petit pont v milutinovi explor perform split data cach scheme superscalar processor symmetr multiprocessor journal system architectur euromicro journal v51 n8 p451469 august 2005 zhigang hu stefano kaxira margaret martonosi timekeep memori system predict optim memori behavior acm sigarch comput architectur news v30 n2 may 2002 youfeng wu ryan rakvic lile chen chyichang miao georg chryso jess fang compil manag microcach bypass high perform epic processor proceed 35th annual acmiee intern symposium microarchitectur novemb 1822 2002 istanbul turkey