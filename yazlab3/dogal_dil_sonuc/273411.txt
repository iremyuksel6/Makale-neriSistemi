automat determin initi trust region nonlinear program paper present simpl effici way find good initi trust region radiu itrr trust region method nonlinear optim method consist monitor agreement model object function along steepest descent direct comput start point improv start point also deriv inform glean initi phase numer result larg set problem show impact initi trust region radiu may trust region method behavior use propos strategi b introduct trust region method unconstrain optim first introduc powel 14 sinc method enjoy good reput basi remark numer reliabl conjunct sound complet converg theori intens studi appli unconstrain problem see instanc 11 14 15 also problem includ bound constraint see 4 7 12 convex constraint see 2 6 18 nonconvex one see 3 5 19 instanc iter trust region method nonlinear object function replac simpl model center current iter model built use first possibl second order inform avail iter therefor usual suitabl certain limit region surround point trust region thu defin model suppos agre adequ true object function trust region approach consist solv sequenc subproblem model approxim minim within trust region yield candid next iter candid determin guarante suffici decreas model insid trust region object function evalu candid object valu decreas suffici candid accept next iter trust region possibl enlarg otherwis new point reject trust region reduc updat trust region directli depend certain measur agreement model object function good choic trust region radiu algorithm proce crucial inde trust region larg compar agreement model object function approxim minim model like poor indic improv iter true object function hand small trust region may lead slow improv estim solut implement trust region method question aris appropri choic initi trust region radiu itrr clearli reflect region around start point model object function approxim agre howev algorithm author awar use rather ad hoc valu itrr mani algorithm user expect provid depart mathemat facult universitair n de la paix 61 rue de bruxel b 5000 namur belgium asmathfundpacb work support belgian nation fund scientif research choic base knowledg problem see 8 9 case algorithm initi trust region radiu distanc cauchi point see 13 multipl fraction gradient norm start point see 8 9 case itrr may adequ even updat strategi use thereaft gener allow recov practic bad initi choic usual undesir addit cost number iter perform therefor itrr select may consid import especi linearalgebra requir per iter costli paper propos simpl effici way determin itrr consist monitor agreement model object function along steepest descent direct comput start point improv start point also deriv inform glean initi phase numer experi use modifi version nonlinear optim packag lancelot see 8 set rel larg test exampl cute test suit see 1 show merit propos strategi section 2 paper develop propos automat determin suitabl itrr detail algorithm describ x3 comput result present discuss x4 final conclud x5 2 automat determin initi trust region 21 classic trust region updat consid solut unconstrain minim problem function f assum twicecontinu differenti trust region method use whose iter index k solv problem iter k quadrat model fx around current iter x k denot symmetr approxim hessian subsequ use notat f k g k fx k gx k respect trust region defin region delta k denot trust region radiu k delta k given norm candid next iter x say comput approxim minim 22 subject constraint 23 classic framework trust region radiu updat set select fi k satisfi 25 quantiti repres ratio achiev predict reduct object function reader refer 8 9 10 instanc trust region updat use 2425 22 initi trust region determin problem determin itrr delta 0 find cheap way test agreement model 22 object function start point x 0 method present base use inform gener avail point name function valu gradient extra cost function evalu reliabl itrr determin whose use hope reduc number iter requir find solut shown x4 possibl save produc case larg warrant extra cost need improv itrr basic idea determin maxim radiu guarante suffici agreement model object function direct gammag 0 use iter search along direct iter search given radiu estim delta 0 model object function valu comput point x write ratio ae 0 also calcul algorithm store maxim valu among estim whose associ ae 0 close enough one follow given criterion final updat current estim delta 0 updat phase delta 0 follow framework present 2425 includ gener test ae 0 predict chang 28 unlik 26 guarante posit set delta 0 note updat 29 take adequaci object function model consider without take care minim object function f may happen radiu estim decreas fi 0 close enough one jae 0 even though big reduct made object function f hand radiu estim could augment fi 0 close enough one jae 0 actual object function increas f instanc contradictori far forget temporarili minim f concentr exclus adequaci object function model find good itrr next section shall consid extra featur take account possibl decreas f process order select suitabl valu fi 0 satisfi 29 care strategi detail appli take advantag current avail inform strategi use quadrat interpol alreadi done exist framework trust region updat see 9 inspir trust region updat rule develop 8 univari function fx first model quadrat fi fit f 0 f 0 direct deriv gammadelta 0 0 assum quadrat coincid univari quadrat 0 use provid candid fi 0 ratio ae 0 would close one slightli smaller slightli larger one respect f quadrat q 0 fi equat solv 0 small posit constant yield candid respect two candid consid possibl choic suitabl satisfi 29 provid care analysi base two principl first perform first principl select exploit much possibl relev inform may drawn fi 0 i1 andor fi 0 i2 instanc fi 0 i1 greater one radiu estim must decreas jae 0 ignor second principl consist favour maxim valu fi 0 among relev one base observ linearalgebra cost trust region iter gener less trust region contract part comput may reus contract expans correspond favour itrr choic larg rather small side 29 distinguish three mutual exclus case first case fi 0 occur jae 0 possibl consid first case produc choic 214 ffl fi 0 i1 fi 0 irrelev recommend increas radiu estim case realiti decreas valu ignor fi 0 set fix constant ffl avail relev inform provid smaller valu lower bound fl 1 set fi 0 ffl either fi 0 i1 fi 0 belong appropri interv fi 0 i2 fi 0 respect irrelev small relev one select ffl fi 0 i1 fi 0 i2 within accept bound maximum chosen possibl yield minfi 0 second case ie jae 0 choic 215 perform select suitabl fi 0 base follow reason ffl fi 0 i1 fi 0 irrelev recommend decreas radiu estim fi 0 set fix constant ffl least one avail piec relev inform provid larger valu upper bound fl 2 sinc maxim pertin inform favour set bound ffl either fi 0 i1 fi 0 i2 belong appropri interv irrelev fi 0 set relev one ffl fi 0 i1 fi 0 i2 within accept bound maximum select give follow final three situat consid third case select fi 0 note sinc clear valu ae 0 radiu estim decreas increas fi 0 i1 fi 0 trust indic decreas increas perform ffl fi 0 i1 fi 0 i2 advis decreas radiu estim smaller lower bound allow lower bound fl 3 adopt ffl least one among fi 0 i1 fi 0 i2 recommend increas radiu es timat larger upper bound allow fl 4 upper bound use ffl maxim valu maxfi 0 belong appropri interv defin fi 0 radiu estim thu either increas decreas depend valu 3 algorithm posit defin algorithm full detail use 25 29 212 213 itrr algorithm depend constant 0 0 one determin lowest accept level agreement model object function must reach radiu estim becom candid itrr iter algorithm itrr denot index algorithm proce delta max record current maxim radiu estim guarante suffici agreement model object function fi nalli impos limit number iter denot imax fix degre refin use determin itrr itrr algorithm step 0 initi let start point x 0 given comput b 0 choos comput itrr estim delta 0 0 set step 1 maxim radiu estim updat comput defin 27 28 set step 2 radiu estim updat imax go step 3 otherwis comput i1 fi 0 use 212 213 respect comput use use use 216 otherwis set increment one go step 1 step 3 final radiu updat otherwis set stop itrr algorithm trust region algorithm may begin delta 0 itrr end section introduc extra featur scheme take advantag comput f 0 function valu trial point 0 see step 1 search improv radiu estim simpli monitor possibl decreas object function trial point end algorithm itrr rather updat final radiu move trial point produc best decreas object function least one decreas observ point becom new start point algorithm itrr repeat comput good itrr cours limit need number time start point allow chang denot limit j correspond counter initi one step 0 extra featur may incorpor algorithm itrr use two instruct first one ad end step 1 ffi denot current best decreas observ object function oe store associ radiu two quantiti initi zero step 0 second instruct come begin step 3 increment j one go step 0 start trust region algorithm rather crude approxim solut kind improv exploit steepest descent direct may use particularli benefici cost evalu function reason similar concept use truncat newton method see 16 17 note chang start point requir comput new gradient new model cost determin itrr estim term function evalu suitabl choic limit imax jmax constant use algorithm itrr may depend problem type discuss x4 4 numer result good understand result necessari give rapid overview framework algorithm itrr emb ded name largescal nonlinear optim packag lancelotsbmin see 8 design solv boundconstrain minim problem minim x2r n fx subject simpl bound constraint l x u bound 42 may infinit sbmin iter trust region method whose version use test follow characterist ffl exact first second deriv use ffl trust region defin use infin norm 23 k ffl trust region updat strategi follow framework 2425 implement mechan contract trust region sophist expand see 8 p 116 ffl solut trust region subproblem iter accomplish two stage first exact cauchi point obtain ensur suffici decreas quadrat model point defin first local minim k x k k quadrat model along cauchi arc k defin l k u k project oper p x l defin componentwis l k l k cauchi arc 43 continu piecewis linear exact cauchi point found investig model behaviour success pair breakpoint point trust region bound true bound encount along cauchi arc model start increas variabl lie bound cauchi point either trust region bound true bound fix ffl second stage appli truncat conjug gradient method 11band precondition use reduc quadrat model chang valu remain free variabl reader refer 8 chapter 3 complet descript sbmin select 77 test exampl major larg andor difficult nonlinear unconstrain boundconstrain test exampl cute see 1 collect problem took excess cpu time 5 hour excess number iter 1500 exclud sinc clear would ad much result experi made doubl pre cision dec 5000200 workstat use optim fortran 77 code decsuppli bla valu constant algorithm itrr use test 025 valu inspir trust region updat strategi use 8 suitabl valu constant determin extens test note fortun slight variat constant signific impact behaviour algorithm itrr set mean one move allow start point 4 5 radiu estim includ first one examin per start point valu result compromis minimum number radiu estim sampl produc reason itrr maximum number extra function evalu may amount imax 41 quadrat case introduc result gener nonlinear case preliminari studi lancelot behaviour quadrat problem present section intend enlighten characterist specif trust region method implement help set adequ framework reliabl interpret test gener nonlinear case becom possibl object function f problem 4142 quadrat function model 22 ident f sinc exact second deriv use 22 region model trust therefor infinit stage trust region algorithm henc logic choic itrr case delta ever particular choic specifi user itrr lancelot make distinct solv quadrat problem set delta hand equat 211 solut case f quadrat fore order circumv possibl next instruct ad algorithm itrr 31 step 1 ae 0 go step 3 note test ensur f quadrat need care strategi rather develop properli detect special situat order compar issu test quadrat problem collect use lancelot delta algorithm itrr 44 ad see lan itrr respect tabl result present tabl 1 2 repres sampl quadrat problem 6 unconstrain 6 boundconstrain tabl follow one n denot number variabl problem number major iter need solv problem cg report number conjug gradient iter perform beyond cauchi point last column give cpu time second note test report section one addit function evalu need algorithm itrr set delta tabl comparison unconstrain quadrat problem lan itrr lan itrr lan itrr lan itrr testquad 1000 tabl 1 show expect infinit choic best f quadrat function problem unconstrain hand substanti increas number conjug gradient iter observ tabl 2 except problem torsionf bound constraint impos number major iter decreas first glanc result may quit surpris close depend lancelot packag packag includ branch conjug gradient procedur allow reentri conjug gradient procedur converg criterion base rel residu satisfi step comput small rel trust region radiu model gradient norm intend save major iter possibl tabl comparison boundconstrain quadrat problem lan itrr lan itrr lan itrr lan itrr absenc bound constraint avoid earli termin conjug gradient process allow attain solut singl major iter see tabl 1 presenc bound howev possibl numer reentri may justifi long correct set activ bound yet identifi behaviour detail tabl 3 sequenc increas initi radii exhibit particular high sensit variat itrr rather undesir featur tabl comparison sequenc increas initi trust region radii lancelot problemn initi radiu delta 0 time obstclal 1024 cg 48 55 70 76 93 117 time 1464 1573 1852 1828 2097 2475 4 3 3 3 3 3 time 10063 512 527 539 537 551 comparison purpos tabl 4 5 present result remov aforement branch lancelot time infinit larg valu itrr justifi conjug gradient time result algorithm itrr much closer lancelot tabl 4 tabl 2 slightli better perform problem obstcla slightli wors perform problem jnlbrng1 even though clear improv occur due branch remov problem jnlbrng1 other test set limit trust region act extra safeguard stop conjug gradient correct activ set yet detect effect trust region may consid advantag trust region method order complet analysi consid problem torsionf tabl 2 problem character larg number activ bound optim solut variabl free start point small itrr identif process correct activ set cauchi point determin hinder earli major iter trust region bound activ cauchi point without freedom left conjug gradient procedur trust region slightli enlarg besid trust region bound true bound also identifi cauchi point much fewer number would case trust region larg enough conjug gradient procedur lancelot restart time true bound encount occur almost everi conjug gradient iter order maintain conjugaci direct iter stop trust region bound reach produc extra linearalgebra cost greatli deterior algorithm perform hand start larg itrr good approxim correct activ set immedi detect cauchi point littl work perform conjug gradient process observ strengthen prioriti given larg choic itrr possibl tabl comparison boundconstrain quadrat problem modifi version problemn cg time lan itrr lan itrr lan itrr tabl comparison sequenc increas initi trust region radii lancelot modifi ver sion problemn initi radiu delta 0 9 6 6 6 time 3343 3038 3057 3033 8 8 8 8 time 1421 1424 1428 1419 5 4 4 4 time 10202 566 561 555 light analysi test 77 nonlinear problem origin version lancelot versu modifi version extra featur improv small step output conjug gradient process ignor slight differ result gener observ often favour modifi version reason order avoid excess sensit method trust region size well prevent larg choic itrr especi choic reflect real adequaci f model decid use modifi version test nonlinear case present next section 42 gener case order test algorithm itrr ran lancelot success ffl algorithm itrr start delta 0 comput lancelot choic made user distanc unconstrain cauchi point suggest powel 13 except quadrat model indefinit wich case omit test detail result summar tabl 6 7 64 unconstrain problem possibl includ fix variabl tabl 8 13 bound constrain problem see itrr lan cau respect case number major iter cpu time second time port note number function evalu may easili deduc lancelot without algorithm itrr number major iter plu 1 lancelot algorithm itrr number major iter plu 12 start point refin point asterisk first column plu 6 otherwis tabl also present rel perform number function evalu number major iter cpu time see f time respect comput theta 100 theta 100 turn number function evalu time tabl indic perform favour algorithm itrr gamma note differ less five percent cpu time regard insignific result first show algorithm itrr improv overal cpu time perform lancelot larg number problem improv 13 deterior tie compar improv 19 deterior 12 tie compar cau importantli exist improv may quit signific 19 greater 30 compar lan 21 greater 30 compar cau confirm impact itrr choic may method behaviour hand damag rather limit occur except case note larger number improv observ compar lan mean itrr comput lancelot wors distanc unconstrain cauchi point actual improv compar algorithm itrr cau gener signific result show averag lan cau may consid equival compar togeth point number asterisk first column tabl 6 8 chang start point occur often make signific contribut good perform observ column 4 7 detail rel extra cost term function evalu produc algorithm itrr note current case start point refin fix extra cost incur 11 extra function evalu quit high averag compar total number function evalu howev consid rel perform cpu time extra cost gener cover sometim handsom save produc number major iter posit time gener posit case produc save balanc extra comparison unconstrain problem problemn itrr lan cau itrr lan cau f f time time time time time broydn7d 92 74 gamma39 gamma24 73 gamma41 gamma26 878 725 gamma21 711 gamma23 brybnd 14 dqrtic 1000 28 28 gamma17 0 28 gamma17 0 183 182 1 182 1 errinro 59 67 gamma4 12 68 gamma3 13 29 32 9 31 6 genros 1194 1290 7 7 1100 gamma10 gamma9 10238 11156 8 9203 gamma11 liarwhd 14 lminsurf 306 272 gamma16 gamma12 157 gamma101 gamma95 4124 3808 gamma8 2797 gamma47 msqrtal msqrtbl 31 34 gamma23 9 65739 69255 5 comparison unconstrain problem end problemn itrr lan cau itrr lan cau f f time time time time time nondia 1000 power 1000 28 28 gamma17 0 28 gamma17 0 183 182 1 raybend 70 52 gamma55 gamma35 tabl comparison boundgammaconstrain problem problemn itrr lan cau itrr lan cau f f time time time time time 43 56 23 90 52 qrtquad 118 173 25 32 315 59 63 119 162 27 284 58 function evalu see problem 0 0 time 5 never save occur counterbal addit work hand deterior occur cpu time time 0 rare due extra cost algorithm itrr exclus 0 consequ except function expens use algorithm itrr may consid effici rel cheap compar overal cost problem solut observ 4 problem test termin algorithm itrr use updat 33 success maxim radiu satisfi condit 31 select 73 case also experi simpler choic fi 0 ae 0 close enough one fi 0 result markedli perform compar algorithm itrr prove necess sophist select procedur fi 0 allow swift recoveri bad initi valu ratio ae 0 conclud analysi comment neg result algorithm itrr problem tquartic see tabl 7 compar cau problem linvers see tabl 8 especi compar lan problem tquartic quartic itrr comput lancelot algorithm itrr quit small prevent rapid progress solut trust region henc need enlarg sever time minim algorithm hand distanc cauchi point suffici larg allow solv problem one major iter problem linvers itrr select algorithm itrr correspond excel agreement function model steepest descent direct howev start point produc algorithm itrr although reduc significantli object function valu requir work trust region method find solut due higher nonlinear object function region new point locat sens bad luck test algorithm itrr problem itrr lancelot select henc produc perform hand also test seri slightli perturb initi trust region radii observ rapid deterior perform method problem linvers thu sensit itrr choic note sensit observ problem test lead conclus good itrr sometim may suffici condit guarante improv method final would like note modif made algorithm itrr constrain cauchi point cau consid solv boundconstrain problem report paper purpos simpli illustr propos method larger sampl unconstrain problem cours author awar presenc bound constraint reliabl version algorithm itrr includ project trial point onto bound constraint end section briefli comment choic constant upper bound iter counter algorithm itrr although reason choic use test present paper specif one could adapt depend priori knowledg given problem instanc function evalu costli lower valu bound imax jmax could select note howev imax chosen excess small order fairli sure condit 31 satisfi unless condit suitabl relax choos valu 0 hand start point known far away solut may worthwhil increas valu jmax provid function cheap evalu improv valu remain constant close depend knowledg level nonlinear problem 5 conclus perspect paper propos automat strategi determin reliabl itrr trust region type method strategi mainli investig adequaci object function model steepest descent direct avail start point includ specif method refin start point exploit extra function evalu perform itrr search numer test report discuss show effici propos approach give addit insight trust region method unconstrain boundconstrain optim encourag result suggest direct futur research use truncat newton direct comput start point rather steepest descent direct search itrr adapt algorithm method design solv gener constrain problem present studi acknowledg author wish thank anonym refere suggest comparison algorithm itrr choic set itrr distanc cauchi point 13 thank also due andi conn nick gould philipp toint michel bierlair contribut improv present manuscript r cute constrain unconstrain test environ trust region algorithm nonlinearli constrain optim trust region strategi nonlinear equal constrain optim global converg class trust region algorithm optim use inexact project convex constraint global converg class trust region algorithm optim simpl bound numer method unconstrain optim nonlinear equat practic method optim unconstrain optim fortran subroutin solv system nonlinear algebra equat conjug gradient method trust region larg scale optim toward effici sparsiti exploit newton method minim trust region algorithm equal constrain minim converg properti implement tr ctr wenl zhao changyu wang valu function error bound trust region method journal appli mathemat comput v24 n1 p245259 may 2007 stefania bellavia maria macconi benedetta morini affin scale trustregion approach boundconstrain nonlinear system appli numer mathemat v44 n3 p257280 februari nichola gould dominiqu orban philipp l toint cuter sifdec constrain unconstrain test environ revisit acm transact mathemat softwar tom v29 n4 p373394 decemb