probabilist loop schedul applic uncertain execut time abstracton difficulti highlevel synthesi compil optim obtain good schedul without know exact comput time task involv uncertain comput time task normal occur condit instruct employ andor input task influenc comput time relationship task repres dataflow graph node model task associ probabilist comput time set edg repres depend task research studi schedul optim algorithm take account probabilist execut time two novel algorithm call probabilist retim probabilist rotat schedul develop solv underli nonresourc resourc constrain schedul problem respect experiment result show probabilist retim consist produc graph smaller longest path comput time given confid level compar tradit retim algorithm assum fix worstcas averagecas comput time furthermor consid resourc constraint probabilist environ probabilist rotat schedul give schedul whose length guarante satisfi given probabl requir schedul better schedul produc algorithm consid worstcas averagecas scenario b introduct mani practic applic interfac system fuzzi system artici intellig system other requir task normal uncertain comput time call uncertain probabilist task breviti task normal contain condit instruct andor oper could take dierent comput time dierent input dynam schedul scheme may consid address problem howev decis runtim schedul depend local onlin knowledg may give good overal schedul although mani static schedul techniqu thoroughli check best assign depend task exist method abl deal uncertainti therefor either worstcas averagecas comput time task usual assum assumpt howev may applic real oper situat may result ineci schedul iter applic statist uncertain task dicult collect paper two novel loop schedul algorithm probabilist retim pr probabilist rotat schedul pr propos static schedul task nonresourc assum unlimit number target processor resourc constrain assum limit number target processor system respect algorithm expos parallel probabilist task across iter well take advantag inher statist data system without resourc constraint pr appli optim input graph ie reduc length longest path graph probabl longest path comput time less equal given comput time c greater equal given condenc probabl result graph impli schedul nonresourc constrain system longest path comput time determin schedul length hand pr algorithm use schedul uncertain task xed number multipl process element produc schedul length given graph increment reduc length probabl less previou length greater equal given condenc probabl order compat current high perform parallel process technolog assum synchron requir end iter parallel comput style also known synchron parallel 10 19 pr pr take input applic model probabilist dataow graph pg gener version dataow graph dfg node correspond task collect statement set edg repres depend task determin schedul loopcarri depend depend distanc task dierent iter repres short bar line correspond edg sinc comput time node either xed vari probabl model employ repres time task figur 1b show exampl pg consist 4 node note graph model code segment present figur 1a exampl pg correspond 1 2 code segment two bar line edg node repres depend distanc two node comput time node c known xed 2 time unit code uncertainti occur comput node b assum arithmet oper assign oper take 1 time unit furthermor comput time comparison random number gener oper assum neglig henc may take either 4 2 time unit execut node b put anoth way 20 time 51 256 statement b 2 execut node b take 4 time unit otherwis node b take 2 time unit b 3 one oper likewis approxim 25 64 256 node take 4 time unit 75 take 2 time unit entri figur 1c show probabl associ node possibl comput time probabl distribut take account vari time characterist propos techniqu appli wide varieti applic highlevel synthesi compil optim code segment b pg time node c time inform retim pg figur 1 sampl code segment correspond pg comput time retim graph consider research conduct area nding schedul directedacycl graph dag multipl process system note dag obtain dfg ignor edg contain one depend distanc mani heurist propos schedul dag eg list schedul graph decomposit 11 13 etc method howev consid neither explor parallel across iter address problem probabilist task instruct level parallel ilp schedul trace schedul 9 use global schedul dag rearrag oper graph percol schedul use develop environ 1 microcod compact ie parallel extract horizont microcod nevertheless graph model use techniqu ect uncertainti node comput time class global cyclic schedul softwar pipelin 16 use overlap instruct wherebi parallel expos across iter techniqu howev expand graph unfold unrol 22 result larger code size loop transform also common techniqu use construct parallel compil restructur loop repetit code segment order reduc total execut time schedul 2 3 20 27 28 techniqu howev consid target system limit number processor task comput time uncertain modulo schedul 2426 popular techniqu compil design exploit ilp loop result optim code framework speci lower bound call initi interv ii start strive schedul node base knowledg much research introduc improv andor expand capabl modulo schedul exampl research present improv modulo schedul produc schedul consid limit number regist 7 8 21 17 combin modulo schedul loop unrol introduc appli impact compil 4 ilp approach howev limit solv problem without consid uncertain comput time probabilist graph model research consid uncertainti inherit comput time node ku de mich 14 15 propos rel schedul method handl task unbound delay nevertheless approach consid dag input explor parallel across iter furthermor even statist comput time uncertain node collect method exploit inform framework abl handl imprecis propag delay propos karkowski otten 12 approach fuzzi set theori 29 employ model imprecis comput time although approach equival nding schedul imprecis task nonresourc constrain system model restrict simpl triangular fuzzi distribut consid probabl valu schedul resourc constraint rotat schedul techniqu present chao lapaugh sha 5 6 extend handl multidimension applic passo sha bass 23 rotat schedul attempt pipelin loop assign node loop system limit number process element implicitli use tradit retim 18 order reduc total comput time node along longest path also call critic path dfg word graph transform way parallel expos behavior graph preserv paper rotat schedul techniqu extend deal uncertain task sinc comput time node pg random variabl total comput time graph also random variabl concept control step synchron task within iter longer applic schedul convey execut order pattern task execut function unit andor dierent unit order comput total comput time order probabilist taskassign graph ptg construct ptg obtain pg nonzero depend distanc edg ignor node assign specic function unit system ptg also contain addit edg call owcontrol edg connect u v mean u execut immedi v use function unit note nonresourc constrain scenario ptg dag portion pg subgraph contain depend distanc edg let us use exampl figur 1b assum term longest path comput time entail nd ing maximum summat comput time node along path contain depend distanc examin possibl longest path graph like 60 longest path comput time less equal 8 detail valu determin given section 3 note node graph assign worstcas valu longest path comput time schedul length nonresourc constrain system graph 10 one might wish reduc longest path graph nearli case exampl reduc chanc clock period greater 6 appli probabilist retim longest path comput time graph may improv respect given constraint modi graph retim shown figur 1d longest path comput time graph less equal 6 20 chanc need schedul node pg two homogen function unit possibl ptg construct shown figur 2a sinc input graph cyclic execut pattern ptg repeat synchron appli end iter shown figur 2a solid edg ptg repres zero depend distanc edg call depend edg input graph see figur 1b gure node b assign pe 0 node c bound pe 1 note implicitli execut therefor direct edg origin input graph omit correspond static schedul show one iter execut pattern shown figur 2c ptg b initi execut pattern c schedul figur 2 exampl ptg correspond repeat pattern static execut order result longest path comput time ptg less 9 unit 90 certainti longest path time probabl also known schedul length resourc constrain system improv result schedul length appli probabilist rotat schedul algorithm pg ptg case algorithm rst select root node reschedul one depend distanc incom edg node move outgo edg figur 3a show result transform graph pg new graph use refer later updat ptg new execut pattern equival reshap iter window present figur 3b rotat b reshap iter window figur 3 correspond retim pg repeat pattern chang iter window appli pr algorithm node next iter see figur 3b introduc static execut pattern note node interiter depend associ therefor reschedul avail function unit one possibl schedul assign node immedi node c pe 1 result ptg new execut order shown figur 4a 4b respect dot arrow c new ptg repres owcontrol edg ptg result schedul length less 7 higher 90 condenc remaind paper organ follow section 2 present graph model use work requir terminolog fundament concept also present section 3 discuss probabilist retim algorithm comput total comput time probabilist graph probabilist rotat schedul algorithm support routin discuss section 4 experiment result discuss section 5 final section 6 draw conclus research ptg b static execut order figur 4 result ptg execut order reschedul preliminari section graph model use repres task uncertain comput time introduc terminolog notat relev work also discuss begin examin dfg contain task uncertain comput time model probabilist graph pg follow give formal denit graph denit 21 probabilist graph pg vertexweight edgeweight direct graph ti v set vertic repres task e set edg repres data depend vertic function e set nonneg integ repres number depend distanc edg v random variabl repres comput time node v 2 v note tradit dfg special case pg probabl equal one vertex weight probabl distribut comput time given v v discret random variabl correspond comput time v 8x 1 notat probabl random variabl assum valu x probabl distribut assum discret paper granular result probabl distribut necessari depend need degre accuraci edg e 2 e u v u v 2 v denot u e v path p start u end v indic notat u v number depend distanc path p dp exampl figur 1b set edg ag number depend distanc edg 2 execut order execut pattern pg determin preced relat graph one iter graph vertex execut order comput exactli one time multipl iter identi index start 0 interiter depend repres weight edg depend distanc iter j edg e u v depend distanc convey comput node v iter j depend execut node u iter edg depend distanc repres data depend within iter legal data ow graph must strictli posit depend distanc cycl ie summat along cycl less equal zero 21 retim overview retim oper rearrang regist circuit depend distanc dataow graph way behavior circuit preserv achiev faster circuit tradit retim 18 optim synchron circuit graph ti nonprobabilist function element ie vertic associ xed numer time valu optim goal normal reduc clock period cycl period g also known longest path comput time cycl period repres execut time longest path refer critic path zero depend distanc edg dene equat retim graph ti transform function vertic set integ z retim function describ movement depend distanc respect vertic transform g new graph g repres number depend distanc edg g r posit neg valu retim function determin movement depend distanc retim number depend distanc push incom outgo edg node outgo incom edg singl depend distanc push incom edg node u 2 v outgo edg node u convers one depend distanc push outgo incom edg u absolut valu retim function convey number depend distanc push algorithm nd set retim function minim clock period graph present 18 polynomi time algorithm time complex ojv jjej log jv j consid figur 5a illustr simpl graph four vertic b c number next vertic gure repres requir comput time figur 5b repres retim version figur 5a case movement depend distanc follow equival remov two depend distanc incom edg vertex e ad onto edg e retim function node c b 1 mean one depend distanc e push vertex b edg b e similarli one depend distanc edg e push vertex c c e equival set retim figur 5b equival set retim produc graph push depend distanc backward node b c instead forward node b c dot line figur 5a repres critic path graph critic path becom illustr dot line figur 5b follow summar essenti properti retim transform 1 r legal retim r e 0 8e 2 e 2 edg u e 3 path u 4 direct cycl l g g r r guarante retim graph edg contain neg number depend distanc properti 2 3 explain movement distanc rv v 2 v b figur 5 retim transform retim dot edg repres critic path posit valu distanc delet incom edg v insert onto outgo edg vice versa rv neg valu final properti 4 ensur number depend distanc loop graph remain constant requir cycl least one depend distanc sinc retim optim techniqu subject unlimit number target resourc result longest path comput time transform underli schedul length consid dag part retim graph edg nonzero depend distanc retim graph ignor iter boundari schedul root node begin iter leaf node end iter 22 rotat schedul 5 chao lapaugh sha propos algorithm call rotat schedul use retim algorithm deal schedul cyclic dfg resourc constraint input rotat schedul algorithm dfg correspond static schedul ie synchron order node dfg rotat schedul reduc schedul length number control step need execut one iter schedul exploit parallel iter accomplish shift scope static schedul one iter call iter window one control step look static iter rotat schedul analog rotat task top schedul iter end process equival retim task node dfg one depend distanc delet incom edg ad outgo edg result intermedi retim graph parallel extract algorithm reassign rotat node new posit schedul length shorter exampl cyclic dfg figur 6a schedul use two process element figur present one possibl static schedul graph use rotat schedul schedul optim first algorithm use node next iter origin graph retim depend distanc e e move outgo edg see figur 6c node execut control step new iter window assum rotat schedul use remap strategi place node immedi node c pe 1 result static schedul length reduc one control step shown figur 6d section 4 concept schedul length remap strategi extend handl probabilist input cyclic dfg iter th iter b static schedul c retim result schedul figur exampl present rotat schedul optim underli schedul length 3 nonresourc constrain schedul assum innit avail resourc pg optim respect desir longest path comput time condenc level eect attempt reduc longest path comput time graph distribut depend distanc pg done accord probabilist time constraint probabl obtain time result longest path comput time less equal given valu c greater condenc probabl valu result time inform essenti schedul length nonresourc constrain problem section present ecient algorithm optim probabilist graph respect desir comput time c correspond condenc probabl order evalu modi graph need know probabl distribut associ comput time remain subsect discuss issu 31 comput maximum reach time let g dag dag portion subgraph edg depend distanc probabilist graph g assum two dummi node v vd ad g dag v connect sourc node root vd connect sink node leav tradit longest path comput time graph comput maxim summat comput time node along critic longest path dummi node likewis probabilist graph comput summat comput time path v vd graph case largest summat valu call maximum reach time mrt graph mrt pg exhibit possibl longest path comput time graph associ probabl therefor unlik tradit approach summat maximum function comput time along path pg becom function multipl random variabl comput mrt pg need modifi graph v vd connect dag portion origin graph formal set zero depend distanc edg use connect vertex v root connect leav vertex vd sinc nontrivi ecient comput function depend random variabl algorithm 1 comput mrtg assum random variabl independ algorithm travers input graph breadthrst fashion start v end vd gener algorithm accumul probabilist comput time along travers path reach node one parent valu associ parent maxim algorithm 1 calcul maximum reach time graph g requir probabilist graph pg ensur 2 e e 3 8 4 queue 6 5 get node u top queue 7 u e 8 decrement incom degre node v one 10 incom degre node v becom 0 11 insert node v queue 12 end 13 end 14 end line 1 2 produc dag g 0 g contain edg e 2 e addit zero depend distanc edg connect v everi root node v 2 v r g connect everi leaf node l g vd line 3 initi temp mrt v u valu vertex u new graph set comput time vs vd zero line 412 travers graph topolog order comput mrt v respect v temp mrt v vd note temp mrt node v respect v origin set zero store current maximum comput time node vs visit parent rst parent v dequeu v indegre reduc one line 8 temp mrt updat line 9 vertex vs parent turn dequeu process repeat eventu last parent node v dequeu maxim point node v insert queue sinc parent consid ie indegre v equal zero line 10 node v eventu dequeu line 5 line 6 add v temp mrt node v produc nal mrt respect path reach node v note initi comput time integ probabl associ time greater given valu c accumul one valu algorithm oc need store vertex therefor time complex calcul summat line 6 maximum line two vertic oc 2 sinc algorithm comput result breadth rst fashion run time algorithm 1 oc 2 jvjjej space complex bound ocjv j 32 probabilist retim use concept mrt algorithm 2 present probabilist retim algorithm reduc longest path comput time given pg meet time constraint constraint c desir longest path comput time graph condenc probabl requir rewritten prmrtv algorithm retim vertic whose comput time greater c probabl larger accept probabl valu initi retim valu node set zero nonzero depend distanc edg elimin v connect rootvertic result dag vd connect leafvertic dag line 717 travers dag breathrst search manner updat temp mrt node algorithm 1 updat vertex result temp mrt test see requir prtemp mrt g c met line 19 decreas retim valu vertex v violat requir unless vertex previous retim current iter algorithm repeat process use retim graph obtain previou iter algorithm nd solut given clock period nal retim graph impli number requir resourc achiev schedul length line 19 push depend distanc onto incom edg node violat time con straint sinc descend node also retim line 19 essenc move depend distanc vd node word node u vd henc incom edg vertex u addit depend distanc node retim current iter requir prmrtv vd c met algorithm stop report result retim function associ node graph requir met algorithm repeat jvj time sinc comput maximum reach time perform everi iter time complex algorithm oc 2 jvjjej space complex remain maximum reach time algorithm result retim function return algorithm 2 guarante necessari condit follow theorem 31 given desir cycl period c condenc probabl algorithm 2 probabilist retim algorithm nd solut result retim graph g r satis requir prmrtg c 33 exampl consid pg probabl distribut associ node graph figur 7 experi let 6 desir longest path comput time 02 accept probabl algorithm 2 work rst check comput mrt v e topolog calcul mrt adjac node e comput mrt node three iter algorithm 2 comput result maximum reach time v v includ vd tabul tabl 13 rst iter retim valu associ node f h shown column rv tabl 1 valu column 28 show probabl algorithm 2 probabilist retim requir probabilist graph requir prtemp mrt g c ensur retim function r node meet requir 1 8 node v 2 v initi retim function rv 0 2 3 retim graph g r retim function rv 4 g direct acycl portion dag g r 5 prepend dummi node v g 0 fconnect root nodesg append dummi node vd g 0 fconnect leaf nodesg 7 node g 0 8 temp mrt v 9 insert v queue time two dummi zerog 11 end 12 queue 6 13 get node u queue 14 temp mrt v fad two random variablesg 15 u e decrement number incom degre node v one fmaxim two random variablesg u retim depend distanc outgo edg incom edgesg 20 end 21 number incom edg node v 0 22 insert node v readi queue 23 end 24 end 25 end 26 end g f time node b figur 7 exampl 9node graph correspond probabilist time inform mrtv v 8v 2 v rang 1 6 greater 6 respect retim graph associ retim valu tabl 1 rst iter present figur 8a tabl 2 present maximum reach time dummi node v node v 2 v well retim function vertex second iter figur 8b present retim graph correspond retim function present tabl 2 comput mrtv v retim graph figur 8b becom appar node b c need retim figur 8c illustr nal retim graph accord retim function present tabl 3 note tabl 3 also present nal maximum reach time retim valu vertex satis requir congur nal retim graph one could therefor alloc minimum process element order comput graph six time unit 80 condenc g f g f b g f c figur 8 retim graph correspond tabl 13 tabl 1 first iter show probabl distribut mrtv resourceconstrain schedul section present probabilist schedul algorithm consid environ limit number resourc tradit rotat schedul framework extend handl probabilist environ call algorithm probabilist rotat schedul pr given pg algorithm iter optim pg respect condenc probabl number resourc present algorithm rst discuss two import concept make schedul probabilist environ dierent tradit schedul problem first probabilist model tabl 2 second iter show probabl distribut mrtv tabl 3 third iter show probabl distribut mrtv synchron control step avail node begin execut parent alreadi execut similar asynchron model data request handshak signal use commun node schedul view direct graph edg show either data requir execut node order node execut particular function unit note synchron appli end iterationsecond task remap strategi pr take probabilist natur problem account follow subsect discuss concept detail 41 schedul length subject condenc concept mrt use comput underli schedul length henc convent way calcul schedul length reden includ mrt notion order updat probabilist data ow graph ad resourc inform extra edg two node execut consecut function unit data depend graph call probabilist taskassign graph ptg repres schedul probabilist model denit 41 probabilist taskassign graph bi vertexweight edg weight direct acycl graph v set vertic repres task e set edg repres data depend vertic w edgetyp function e 2 e f0 1g 0 repres type depend edg 1 repres type random variabl repres comput time node v 2 v b processor bind function v 2 v fpe process element n total number process element figur 9 exampl probabilist taskassign graph ptg node assign pe 0 pe 1 exampl figur 9 show exampl ptg two function unit pe 0 pe 1 node b assign pe 0 edg consist c exist edg node schedul processor edg true depend edg ignor note also remov redund edg simpl util speed calcul mrt figur 9 edg c e1 controltyp sinc depend c execut c due resourc constraint edg repres data depend appli mrt algorithm ptg dene probabilist schedul length length express term condenc probabl follow denit 42 probabilist schedul length ptg respect condenc level pslg smallest longest path comput time c prmrtg c 1 exampl consid probabl distribut mrtg possibl comput time prob given condenc probabl 08 probabilist schedul length pslg 08 14 smallest possibl comput time 14 prmrtg 14 02 ie 004365 007818 02 therefor 80 condenc comput time g less 14 42 task remap heurist templat schedul subsect propos heurist call templat schedul ts search place reschedul task remap phase play import role reduc probabilist schedul length pr sinc comput time random variabl xed control step within iter long node place parent schedul locat legal templat schedul schedul templat comput use expect comput time node templat impli execut order also expect control step node start execut order determin expect control step node ptg visit topolog order follow comput denit 43 expect control step node v ptg comput e repres expect comput time node denit assum node v start execut right parent nish execut observ templat one ascertain long number control step process element would idl templat schedul decid reschedul node use degre exibl denit 44 given ptg degre exibl node u respect process element pe exu comput u v assign pe degre exibl convey expect size avail time slot within pe figur 10 show typic case node v one parent u 1 u 2 u 3 parent node v parent figur 10 exampl obtain expect control step expect comput time 1 4 3 respect order expect control step node 3 47 37 respect therefor expect control step accord denit 43 degre exibl u respect pe 0 87 3 valu convey long pe 0 wait v execut note degre exibl node execut last pe unden follow step comput new g reschedul node v algorithm 3 reschedul rotat node use templat schedul heurist requir ptg reschedul node v condenc probabl ensur result new ptg shortest psl 1 assum node ptg expect comput time precomput 2 8 node u 2 v comput ecsu exu 3 target processor pe 4 use maximum dlfex select node x schedul pe 5 schedul v x reconstruct new ptg associ pe assign 7 compar other ptg get one best psl 8 end reschedul polici hope place node processor expect biggest idl time slot result least potenti increas total execut time comput time node much smaller expect time slot approach may allow next reschedul node place also similar worstt polici schedul strive schedul node biggest slot section 5 demonstr eectiv heurist method exhaust nd best place node note exhaust search perform global rather search done local remap iter call heurist local search ls 43 rotat phase discuss reschedul heurist follow present probabilist rotat schedul pr note previou heurist reschedul heurist use reschedul part pr algorithm experi section 5 show ecaci pr framework dierent reschedul heurist algorithm 4 probabilist rotat schedul requir pg design condenc probabl ensur ptg shortest psl 1 2 g nd initi schedul fnding initi schedul pg keep g g 3 4 r root dag portion g fthese node rotatedg 5 retim node r reschedul node one one use heurist previous present 7 comput psl new graph respect 8 pslg 9 g best g fconsid g best initi g rstg 11 end order use templat schedul expect comput time task precomput initi schedul construct nd initi schedul note algorithm creat initi schedul dag schedul eg probabilist list schedul discuss previous rotat schedul loop 2jv j time reschedul node graph least like tradit rotat schedul node incom edg nonzero depend distanc select reschedul one depend distanc drawn edg place outgo edg rotat node reschedul one one use templat schedul techniqu rotat node schedul result ptg better current one algorithm 4 save better ptg 44 exampl let us revisit pg exampl section 33 shown figur 11a correspond comput time figur 11b condenc probabl given list schedul appli initi execut order determin shown figur 12a correspond ptg present figur 12b node b h assign pe 0 node e f schedul pe 1 node c g assign pe 2 edg b e g g e owcontrol edg g f time node b figur 11 exampl comput time graph figur 1b assign mrt ptg comput follow possibl comput time therefor higher 80 condenc probabl pslg accord structur ptg either e reschedul rst rotat pr select reschedul one depend distanc move incom edg push outgo edg result retim graph pg shown figur 13a graph node requir direct data depend node therefor place posit schedul figur 13b show expect comput time expect control step degre exibl node ptg base valu tabl figur 13b obviou expect wait time b h pe 0 would 22 unit templat schedul howev decid place posit b h pe 0 psl reduc result ptg execut order shown figur 14 pslg run pr iter shortest possibl schedul length found 15 th iter figur 15 present result schedul length trial less 9 probabl greater 80 pslg static execut order b ptg figur 12 initi assign correspond execut order g f new pg ex b ec ex figur 13 probabilist graph rotat templat valu g ptg b execut order figur 14 ptg execut order mrt rst rotat pslg g f pg g f b ptg c final execut order figur 15 nal pg ptg execut order pslg 9 5 experiment result section perform experi use nonresourc resourc constrain schedul two gener class problem rst class real applic may combin node probabilist comput time xed comput time second well known dsp lter benchmark sinc benchmark contain two uniform type node name multipl addit basic time inform consist three probabl distribut assign benchmark graph order show usabl propos algorithm three applic prole get probabilist time inform proler report process time requir applic correspond frequenc time valu frequenc time occur use obtain node probabl distribut node graph may repres larg number oper caus uncertain comput time well oper xed time inform time inform discret smaller unit nanosecond dsp lter benchmark use experi includ biquadrat iir lter 3stage iir lter 4 th order jaunmann wave digit lter 5 th order ellipt lter unfold 5 th order ellipt lter unfold factor equal 4 4 allpol lattic lter unfold allpol lattic lter unfold allpol lattic lter dierenti equat solver volterra lter rest benchmark applic imag process floydsteinberg applic search solut maxim unknown function use genet algorithm famou exampl applic fuzzi logic area invert pendulum problem experi perform use sun ultrasparc tm 51 nonresourc constrain experi experi given condenc level use search best longest path comput time order current desir longest path comput time c vari base whether feasibl solut found instanc c small algorithm report feasibl solut exist case c increas algorithm 2 reappli process repeat smallest feasibl c found tabl 4 show result tradit retim use worstcas comput time assumpt column c worst probabilist model two high condenc probabl averag run time experi determin second includ inputoutput interfac algorithm implement straightforward way array use store probabl distribut column 3 tabl present optim longest path comput time obtain appli tradit retim use worstcas comput time node graph benchmark column 08 probabilist retim algorithm appli benchmark condenc probabl use input number show column given c prmrtg c valu c requir smallest input valu algorithm 2 nd solut satisfi requir notic benchmark longest path comput time still smaller comput time column 3 order quantifi improv probabilist retim algorithm column list percent comput time reduct respect valu column 3 benchmark node c worst c c biquad iir 8 78 di equat 11 118 81 31 77 35 3stage direct iir 12 54 44 19 41 24 allpol lattic 15 157 120 24 117 25 4 th order wdf 17 156 116 26 112 28 volterra 5 th ellipt 34 330 240 28 236 29 allpol lattic uf2 allpol lattic uf6 105 1092 811 26 806 26 5 th ellipt uf4 170 1633 1185 27 1174 28 genet applic fuzzi applic 24 19 17 11 17 11 tabl 4 probabilist retim versu worst case tradit retim averag complet time run probabilist retim benchmark 5310 second tabl 5 compar probabilist retim algorithm tradit retim algorithm averag comput time use node graph first probabilist node input graph convert xed time node result g avg ie node assum averag comput time rather probabilist comput time tradit retim appli result graph result graph g r purpos tabl compar g r avg obtain run tradit retim g avg retim pg order compar result produc propos algorithm placement depend distanc g r avg preserv origin probabilist comput time replac averag comput time put anoth way transform g r avg back probabilist graph algorithm 1 use evalu graph expect valu result shown tabl column 4 5 present expect valu result obtain run probabilist retim pg condenc probabl 09 08 consid note result consist better smaller valu result obtain run tradit retim g avg henc approach use expect valu node neither good heurist initi design phase give quantit condenc result graph 52 resourceconstrain experi test probabilist rotat schedul pr algorithm select lter applic bench mark 5 th ellipt lter 3 stageiir lter volterra lter lattic lter floydsteinberg genet algorithm fuzzi logic applic tabl 6 demonstr eectiv approach 2adder 1multipli 2adder 2multipli system lter benchmark specic 3 4 gener purpos processor pe adopt three applic benchmark perform pr evalu compar result schedul length schedul length obtain tradit algorithm 2 benchmark mrtg r avg biquad iir 7040 5264 5230 di equat 7605 7307 7250 3stage direct iir 4190 3770 3836 allpol lattic 11445 11177 11140 4 th order wdf 10673 10644 10598 volterra 20400 20244 20200 5 th ellipt 23330 22841 22759 allpol lattic uf2 34217 33811 33762 allpol lattic uf6 80051 79402 79339 5 th ellipt uf4 80051 79402 79339 genet applic 15089 14401 11246 fuzzi applic 1803 1608 1608 tabl 5 probabilist retim versu averagecas analysi modi list schedul techniqu capabl handl probabilist graph also show eectiv templat schedul ts compar result heurist name local search ls aslatea possibl schedul al averag execut time al ts compar 12 second run ultrasparc tm ls take much longer time give outstand result compar ts reschedul phase pr ls approach strive reschedul node possibl legal locat local search return assign yield minimum pslg method simpl give good schedul howev time consum practic tri possibl schedul place everi iter pr furthermor ptg need temporarili updat everi trial order comput possibl schedul length contrari al method reduc number trial attempt schedul task farthest legal posit function unit processor ts heurist remap schedul node node highest degre exibl function unit column show result consid probabilist situat condenc probabl 08 09 column pl present probabilist schedul length psl modi list schedul appli benchmark column ls al ts show result psl run pr benchmark use remap heurist ls al ts respect among three heurist ts scheme produc better result al use simplest criteria yield good sometim even better result given ls approach ts take less time select reschedul posit node iter ls method nd local optim place howev schedul node posit alway result global optim schedul length tabl 7 base system 2 adder 1 multipli lter benchmark 3pe applic benchmark present comparison result obtain appli follow techniqu benchmark modi list schedul tradit rotat schedul probabilist rotat schedul spec benchmark node pl pr pl pr di equat 11 169 152 133 133 165 147 131 131 add 3stage iir 12 188 184 151 151 184 179 147 147 allpol lattic 15 229 225 142 141 225 220 138 138 volterra 5 th ellipt 34 318 298 293 293 314 294 289 289 28 28 27 genet applic fuzzi applic 24 52 46 43 43 di equat 11 120 103 83 90 117 100 83 91 add 3stage iir 12 124 120 87 87 120 110 83 82 mul allpol lattic 15 229 225 140 139 225 220 136 136 volterra 5 th ellipt 34 288 288 274 271 284 274 270 267 26 28 38 24 24 24 genet applic fuzzi applic 24 tabl comparison result obtain appli follow benchmark modi list probabilist rotat schedul use dierent remap heurist averag complet time run al ls ts heurist benchmark 1196 4258 1246 second respect use templat schedul heurist tradit rotat schedul consid averag comput time column l r show schedul length obtain appli modi list schedul tradit rotat schedul respect benchmark probabilist comput time convert worstcas comput time obvious consid probabilist case give signic improv schedul length worst case scenario column pl present initi schedul length obtain use modi list schedul ap proach result column pr obtain tabl 6 pr use templat schedul heurist column avg psl comput use graph ptg retriev run tradit rotat benchmark averag comput time assign node result demonstr consid probabilist situat perform rotat schedul consist give better schedul consid worstcas averagecas comput time spec benchmark node worst case di equat 11 228 180 169 133 136 165 131 131 allpol lattic 15 312 204 229 141 153 225 138 149 volterra 5 th ellipt 34 438 396 318 293 299 314 289 294 genet applic fuzzi applic 24 69 55 52 45 66 52 43 63 tabl 7 compar probabilist rotat tradit rotat run graph averag comput time 6 conclus present schedul optim algorithm oper probabilist environ probabilist dataow graph use model applic take probabilist natur account probabilist retim algorithm use optim given applic nonresourc constrain environ assum given accept probabl desir longest path comput time algorithm reduc comput time given probabilist graph desir valu concept maximum reach time use calcul time valu probabilist graph limit number process element consid probabilist rotat schedul algorithm probabilist concept loop pipelin integr optim task schedul propos base maximum reach time notion probabilist schedul length use measur total comput time task schedul one iter given probabilist graph schedul construct use taskassign probabilist graph probabilist schedul length comput respect given condenc probabl probabilist rotat schedul appli initi schedul order optim schedul produc best optim schedul respect condenc probabl remap heurist templat schedul incorpor algorithm order nd schedul posit node r develop environ horizont microcod optim loop parallel unimodular transform doubl loop impact architectur framework multipl instruct issu processor rotat schedul loop pipelin algorithm static schedul synthesi dsp algorithm variou model stage schedul techniqu reduc regist requir modulo schedul minimum regist requir modulo schedul trace schedul techniqu global microcod compact design build parallel program concept tool parallel softwar engi neer dynam listschedul nite resourc retim synchron circuitri imprecis delay comparison multiprocessor schedul heurist rel schedul time constraint algorithm highlevel synthesi softwar pipelin retim synchron circuitri art parallel program singular loop transform framework base nonsingular matric static rateoptim schedul iter dataow program via optimum unfold loop pipelin schedul multidimension system via rotat schedul techniqu easili schedul horizont architectur high perform scienti iter modulo schedul algorithm softwar pipelin loop high perform compil parallel comput loop transform theori algorithm maxim parallel fuzzi set basi theori possibl tr ctr meikang qiu zhipe jia chun xue zili shao edwin hm sha voltag assign guarante probabl satisfi time constraint realtim multiproceesor dsp journal vlsi signal process system v46 n1 p5573 januari 2007 jose l aguilar ernst l leiss data depend loop schedul base genet algorithm distribut share memori system journal parallel distribut comput v64 n5 p578590 may 2004 rehab f abdelkad resourceconstrain loop schedul highlevel synthesi proceed 43rd annual southeast region confer march 1820 2005 kennesaw georgia