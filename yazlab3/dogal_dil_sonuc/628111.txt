find interest associ without support prune abstractassociationrul mine heretofor reli condit high support work effici particular wellknown priori algorithm effect rule interest relationship occur frequent howev number applic data mine identif similar web document cluster collabor filter rule interest compar instanc data case must look highli correl item possibl even causal relationship infrequ item develop famili algorithm solv problem employ combin random sampl hash techniqu provid analysi algorithm develop conduct experi real synthet data obtain compar perform analysi b introduct preval problem largescal data mine associationrul mine first introduc agraw imielinski swami 1 challeng sometim refer marketbasket problem due origin studi consum purchas pattern retail store although applic extend far beyond specif set suppos relat r contain n tupl set boolean attribut 1 l g two set attribut say j associ rule follow two condit satisfi support set j appear least sfraction tupl confid amongst tupl appear least cfraction also j appear goal identifi valid associ rule given relat extent rel popular problem attribut paradigmat natur simplic problem statement wide applic identifi hidden pattern data gener applic origin marketbasket motiv arguabl though success much avail surprisingli effici algorithm lack stymi model patterndiscoveri data mine algorithm effici deriv idea due agraw et al 1 2 call apriori exploit support requir associ rule key observ set attribut appear fraction tupl subset also appear fraction tupl principl enabl follow approach base prune determin list l k kset attribut high support first comput list l kgamma1 1set attribut high support consid candid l k kset subset l kgamma1 variant enhanc approach underli essenti known effici algorithm comput associ rule variant note worst case problem comput associ rule requir time exponenti apriori algorithm avoid patholog real data set observ also confid requir play role algorithm inde complet ignor endgam highsupport set screen high confid work motiv longstand open question devis effici algorithm find rule extrem high confid extrem support exampl marketbasket data standard associationrul algorithm may use commonlypurchas ie highsupport item beer diaper essenti useless discov rule beluga caviar ketel vodka alway bought togeth peopl purchas either two item develop bodi techniqu reli confid requir alon obtain effici algorithm two possibl object remov support requir first may increas number rule produc make difficult user pinpoint rule interest note applic describ next output rule intend human analysi rather autom analysi case intent seek lowsupport rule confid extrem close 100 latter substanti reduc output size yet leav rule interest second may argu rule low support inher uninterest may true classic marketbasket applic mani applic essenti discov rule extrem high confid without regard support discuss applic briefli give support experiment evid turn detail descript result one motiv seek associ high confid without support renam phrase misc relat dalai lama pneumocysti carinii avant gard encyclopedia britannica meryl streep meseo oceania mach papier salman satan bertolt brecht fibrosi cystic cosa nostra mardi gra bueno air hor oeuvr emperor hirohito darth vader press agenc figur 1 exampl differ type similar pair found news articl quirement rule high support obviou wellknown rule lowsupport provid interest new insight supportfre associ natur class pattern data mine right also aris varieti applic copi detect identifi ident similar document web page 4 13 cluster identifi similar vector highdimension space purpos cluster data 6 9 collabor filter track user behavior make recommend individu base similar prefer user 8 16 note applic formul term tabl whose column tend spars goal identifi column pair appear similar without support requir also form data mine eg detect causal 15 import discov associ column natur notion support describ experiment result one applic mine pair word occur togeth news articl obtain reuter goal check whether lowsupport highconfid pair provid interest inform inde similar pair prove extrem interest illustr repres sampl provid figur 1 larg major output pair name famou intern person citi term medicin field phrase foreign languag miscellan item like authorbook pair organ name also obtain cluster word ie group word pair high similar exampl cluster chess timman karpov soviet ivanchuk polger repres chess event note pair discov low support would discov standard definit associ rule cours run apriori algorithm low support definit would realli slow indic run time comparison provid section 5 2 summari result notion confid asymmetr unidirect conveni purpos work symmetr bidirect measur interest conceptu level view data 01 matrix n row column typic matrix fairli spars assum averag number 1s per row r r applic mind n could much could larg 10 6 r could small set row 1 column c also defin densiti column c defin similar two column c c j similar c c j fraction row amongst contain 1 either c c j contain 1 c c j observ definit similar symmetr respect c c j contrast confid rule fc g fc j g given identifi pair column similar exceed prespecifi threshold easi matrix small fit main memori sinc bruteforc enumer algorithm requir om 2 n time interest case larg data diskresid paper primari focu problem identifi pair column similar exceed prespecifi threshold restrict basic version problem enabl us clearli showcas techniqu deal main issu achiev algorithm effici absenc support requir possibl gener techniqu complex set discuss briefli move techniqu easi verifi basic approach gener problem identifi highconfid associ rule pair column discuss section 6 omit analysi experiment result version paper result practic highsimilar pair note sever recent paper 3 14 15 express dissatisfact use confid measur interest associ rule suggest variou altern measur idea applic new measur interest well major restrict work deal pair column howev believ possibl appli techniqu identif complex rule matter discuss detail section 6 algorithm identifi pair similar column follow natur threephas comput signatur gener candid prune candid first phase make pass tabl gener small hashsignatur column goal deal largescal tabl sit secondari memori phase produc summari tabl fit main memori second phase oper main memori gener candid pair column signatur final third phase make anoth pass origin tabl determin candid pair whether inde high similar last phase ident algorithm scan tabl data maintain candid columnpair count number row 1 least one two column also number row 1 column consequ limit ensu discuss proper implement first two phase key ingredi cours hash scheme comput signatur one hand need extrem fast produc small signatur abl singl pass data compet goal requir mani falseposit ie candid pair realli highlysimilar sinc time requir third phase depend number candid screen relat requir extrem ideal none falseneg ie highlysimilar pair make list candid section 3 present famili scheme base techniqu call minhash mh inspir idea use cohen 5 estim size transit closur reachabl set see also broder 4 idea implicitli defin random order row select column signatur consist first row index order column 1 show probabl two column signatur proport similar reduc probabl falseposit falseneg collect k signatur independ repeat basic process pick first k row column 1s main featur minhash scheme suitabl larg choic k number falseposit fairli small number falseneg essenti zero disadvantag k rise space time requir second phase candid gener increas second famili scheme call localitysensit hash lsh present section 4 inspir idea use gioni indyk motwani 7 highdimension nearest neighbor see also indyk motwani 11 basic idea implicitli partit set row comput signatur base pattern 1s column subtabl exampl could comput bit column subtabl denot whether number 1s column greater zero famili scheme suffer disadvantag reduc number falseposit increas number falseneg vice versa unlik previou scheme tend produc falseposit falseneg advantag much lower space time requir minhash conduct extens experi real synthet data result present section 5 expect experi indic scheme outperform apriori algorithm order magnitud also illustr point made tradeoff accuraci speed two algorithm import avoid falseneg recommend use minhash scheme tend slower howev speed import complet accuraci gener rule local sensit hash scheme prefer conclud section 6 discuss extens work allud earlier provid interest direct futur work minhash scheme minhash scheme use idea due cohen 5 context estim transit closur reachabl set basic idea minhash scheme randomli permut row column c comput hash valu hc index first row permut 1 column reason effici wish explicitli permut row inde would like comput hash valu column singl pass tabl end scan row simpli associ row hash valu number chosen independ uniformli random rang r assum number row 2 suffic choos hash valu random 32bit integ avoid birthday paradox 12 two row get ident hash valu furthermor scan tabl assign random hash valu row column c keep track minimum hash valu row contain 1 column thu obtain minhash valu hc column c singl pass tabl use om memori proposit 1 column pair easi see sinc two column minhash valu random permut row defin hash valu first row 1 column c also first row 1 column c j word hc restrict permut row c c j first row belong c order abl determin degre similar columnpair necessari determin multipl say independ minhash valu column end singl pass input tabl select parallel k independ hash valu row defin k distinct permut row use omk memori singl pass also determin correspond k minhash valu say h c j k row permut effect obtain matrix c k row column c entri column minhash valu matrix c view compact represent matrix show theorem 1 similar columnpair captur similar c fraction minhash valu ident c c j ie defin b fraction row b minhash entri column c c j ident show b good estim sc recal set threshold two column said highlysimilar sc assum lower bound constant c follow theorem show unlik get mani falseposit falseneg use b determin similar columnpair origin matrix theorem 1 let column c follow two properti sc probabl least 1 gamma ffl probabl least 1 gamma ffl sketch proof first part theorem proof second part quit similar omit fix two column c c j similar sc l random variabl take valu 1 h l proposit 1 ex l ks appli chernoff bound 12 random variabl x obtain ks establish first part theorem simpli notic b theorem 1 establish suffici larg k two column high similar least agre correspondingli larg fraction minhash valu c convers similar low c agre correspondingli small fraction minhash valu c sinc c comput singl pass data use okm space obtain desir implement first phase signatur comput turn task devis suitabl implement second phase candid gener 31 candid gener minhash valu comput signatur first phase discuss previou section wish gener candid columnpair second phase point k theta matrix c contain k minhash valu column sinc k n assum c much smaller origin data fit main memori goal identifi columnpair agre larg enough fraction least 1 gamma ffi minhash valu c bruteforc enumer requir ok time columnpair total okm 2 present two techniqu avoid quadrat depend consider faster typic case averag similar rowsort algorithm view row c list tupl contain minhash valu correspond column number sort row basi minhash valu group togeth ident minhash valu sequenc run maintain column index posit minhash valu sort row estim similar column c column use follow algorithm use counter column c jth counter store number row minhash valu column c c j ident row run contain min hash valu c column repres run increment correspond counter avoid om 2 counter initi reus om counter process differ column rememb reiniti counter increment least estim run time algorithm follow sort row requir total time okm log thereaft index column built time okm remain time amount total number counter increment process row column c number counter increment fact length run expect length run equal sum similar henc expect counterincr cost process c ok expect combin increment cost ok oksm 2 thu expect total time requir algorithm okm log note averag similar typic small fraction latter term run time realli quadrat appear hashcount next section introduc kminhash algorithm signatur column c set sig exactli k minhash valu similar columnpair estim comput size sig clearli suffic consid order pair task accomplish via follow hashcount algorithm associ bucket minhash valu bucket index use hash function defin minhash valu store columnindex column c element sig hash bucket consid column c column c use counter jth counter store minhash valu v 2 sig access hashbucket find index column c j j v 2 sig j column c j bucket increment counter final add c bucket hashcount easili adapt use origin minhash scheme instead want comput pair column number c row two column agre end use differ hash tabl set bucket row matrix c execut process kminhash argument use rowsort algorithm show hashcount minhash take oksm 2 time run time hashcount kminhash amount number counter increment number increment made counter exactli size jsig sig j j simpl argument see lemma 1 show expect size efjsig thu expect total run time hashtabl scheme oksm 2 case 32 kminhash algorithm one disadvantag minhash scheme outlin choos k independ min hash valu column entail choos k independ hash valu row neg effect effici signaturecomput phase hand use k minhash valu per column essenti reduc number falseposit fals neg present modif call kminhash kmh use singl hash valu row set k minhash valu column hash valu first k row induc row permut contain 1 column approach also mention 5 without analysi word column pick k smallest hash valu row contain one column column c fewer 1s k assign minhash valu hash valu correspond row 1s column result set k minhash valu form signatur column c denot sig proposit 2 kminhash scheme column c signatur sig consist hash valu uniform random sampl distinct row c remark number 1s column significantli larger k hash valu may consid independ analysi minhash appli situat slightli complex column spars case interest us let sig ij denot k smallest element c view sig ij signatur column would correspond c c j observ sig ij obtain ok time sig sig j sinc fact set smallest k element correspond set row select uniformli random element c c j expect number element sig ij belong subset c exactli jsig ij jthetajc sinc signatur smallest k element henc obtain follow theorem theorem 2 unbias estim similar sc given express consid comput cost algorithm scan data gener one hash valu per row column maintain minimum k hash valu correspond row contain 1 column maintain k minimum hash valu column simpl data structur allow us insert new valu smaller current maximum delet current maximum olog time data structur also make maximum element amongst k current minhash valu column readili avail henc comput row constant time 1 entri addit log k time column 1 entri hash valu row amongst k smallest seen far simpl probabilist argument show expect number row kminhash list column c get updat ok log jc log n follow total comput cost singl scan data ojm log k jm j number 1s matrix second phase gener candid need comput set sig ij columnpair use merg join ok oper merg also find element belong sig henc total time phase okm 2 quadrat depend number column prohibit caus need comput sig ij columnpair instead first appli consider effici bias approxim estim similar bias estim comput pair column use hashcount time next perform mainmemori candid prune phase unbias estim theorem 2 explicitli comput pair column approxim bias estim exce threshold choic threshold bias estim guid follow lemma altern bias estim choic threshold deriv follow analysi let column c choos set sig k minhash valu let sig expect size sig ij sig ji given kjc ij j henc comput expect valu assum probjsig ij j jsig ji j 0 equat becom thu obtain estim ejsig use estim calcul use estim similar sinc know jc j jc j j comput jsig use hash tabl techniqu describ earlier section 31 time requir comput hash valu ojm j mk log n log describ earlier time comput 4 localitysensit hash scheme section show obtain signific improv run time respect previou algorithm resort local sensit hash lsh techniqu introduc indyk motwani 11 design mainmemori algorithm nearest neighbor search highdimension euclidean space subsequ improv test 7 appli lsh framework minhash function describ earlier section obtain algorithm similar columnpair problem differ nearest neighbor search data known advanc exploit properti show optim run time algorithm given constraint qualiti output optim inputsensit ie take account characterist input data set key idea lsh hash column ensur hash function probabl collis much higher similar column dissimilar one subsequ hash tabl scan columnpair hash bucket report similar sinc process probabilist fals posit fals neg occur order reduc former lsh amplifi differ collis probabl similar dissimilar pair order reduc fals neg process repeat time union pair found iter report fraction fals posit fals neg analyt control use paramet algorithm although main focu paper mention lsh algorithm adapt onlin framework 10 particular follow analysi iter algorithm reduc number fals neg fix factor also add new fals posit remov small addit cost thu user monitor progress algorithm interrupt process time satisfi result produc far moreov higher similar earlier pair like discov therefor user termin process output produc appear less less interest 41 minlsh scheme present minlsh mlsh scheme find similar columnpair matrix c minhash valu mlsh algorithm split matrix c l submatric dimens r theta recal c dimens k theta assum l submatric repeat follow column repres r minhash valu current submatrix hash tabl use hash key concaten r valu two column similar high probabl agre r minhash valu hash bucket end phase scan hash tabl produc pair column hash bucket amplifi probabl similar column hash bucket repeat process l time let p rl probabl column c c j hash bucket least sinc valu p depend upon notat write p assum column c c j similar also let similar threshold 0 1 choos paramet r l ffl ffl proof proposit 1 probabl column c c j agre one minhash valu exactli probabl agre group r valu r repeat hash process l time probabl hash least bucket would lemma follow properti function p state larg valu r l function p approxim unit step function translat point use filter pair similar hand timespac requir algorithm proport increas valu r l subject qualityeffici tradeoff practic will allow number fals neg n gamma fals posit optim valu r l achiev qualiti specif assum given estim similar distribut data defin ds number pair similar unreason assumpt sinc approxim distribut sampl small fraction column estim pairwis similar expect number fals neg would expect number fals posit would therefor problem estim optim paramet turn follow minim problem subject easi problem sinc two paramet optim feasibl valu small integ also histogram ddelta typic quantifi 1020 bin one approach solv minim problem iter small valu r find lower bound valu l solv first inequ perform binari search second inequ satisfi experi optim valu r 5 20 42 hamminglsh scheme propos anoth scheme hamminglsh hlsh find highlysimilar columnpair idea reduc problem search columnpair small ham distanc order solv latter problem employ techniqu similar use 7 solv nearest neighbor problem start establish correspond similar ham distanc proof easi follow consid pair sum high valu sc correspond small valu dh versa henc partit column group similar densiti group find pair column small ham distanc first briefli describ search pair column small ham distanc scheme similar techniqu 7 analyz use tool develop scheme find highlysimilar column assum densiti column roughli done partit row databas p subset partit process previou algorithm declar pair column candid agre subset thu scheme exactli similar earlier scheme except deal actual data instead minhash valu howev two problem scheme one problem matrix spars subset contain zero also column similar densiti assum follow algorithm call hlsh improv basic algorithm basic idea follow perform comput sequenc matric increas densiti denot matrix i1 obtain matrix randomli pair row place i1 pair 1 one see i1 contain half row illustr purpos assum initi number row power 2 algorithm appli matric set pair column becom candid matrix suffici dens densiti belong certain rang fals neg control repeat 1 notic oper give similar result hash column set increasingli smaller hash tabl provid altern view algorithm number similar pair histogram sun data set number similar pair histogram sun data set figur 2 first figur show similar distribut sun data second show distribut focus region similar interest sampl l time take union candid set across l run henc kr row extract compress matrix note oper may increas fals posit present algorithm implement experi show scheme better minhash algorithm term run time number fals posit much larger moreov number fals posit increas rapidli tri reduc number fals neg case minhash algorithm decreas number fals neg increas k number fals posit would also decreas algorithm describ 2 0 select k set r sampl row 3 column pair candid exist column pair densiti 1t gamma 1t ii ident hash valu essenti ident rbit represent least one k run note paramet indic rang densiti candid pair use experi 5 experi conduct experi evalu perform differ algorithm section report result differ experi use two set data name synthet data real data synthet data data contain 10 4 column number row vari 10 4 column densiti vari 1 5 everi 100 column pair similar column 20 pair similar column whose similar fall rang 85 95 75 85 65 75 55 65 45 55 real data real data set consist log http request made period 9 day sun microsystem web server wwwsuncom column case url support number column apriori mh kmh hlsh mlsh threshold support prune sec sec sec sec sec 01 15559 714 876 156 107 015 11568 9605 448 520 67 97 02 9518 7994 258 360 60 51 figur 3 run time news articl data set row repres distinct client ip address recent access server entri set 1 least one hit url particular client ip data set thirteen thousand column 02 million row column spars densiti less 001 histogram figur 2 show number column pair differ valu similar typic exampl similar column extract data url correspond gif imag java applet load automat client ip access parent url compar algorithm exist techniqu implement execut apriori algorithm 1 2 cours apriori design set low support exist techniqu give us benchmark compar improv afford algorithm comparison done news articl data mention section 1 conduct experi news articl data result summar figur 3 apriori algorithm run origin data sinc run memori therefor perform support prune remov column one evid techniqu give nearli order magnitud improv run time support threshold 01 apriori run memori system lot thrash note although algorithm probabilist report set pair report apriori 51 result implement four algorithm describ previou section name mh kmh hlsh mlsh algorithm compar term run time qualiti output due lack space report experi give graph sun data case interest also perform test synthet data algorithm behav similarli qualiti output measur term fals posit fals neg gener algorithm plot curv show ratio number pair found algorithm real number pair comput offlin given similar rang eg figur 7 result typic sshape curv give good visual pictur fals posit neg algorithm intuit area curv left given similar cutoff correspond number fals posit area curv right cutoff correspond number fals neg describ behavior algorithm paramet vari mh kmh algorithm two paramet user specifi similar cutoff k number minhash valu extract repres signatur column fig fraction pair found perform mh sun data set f80 total time sec run time mh sun data setf80 b fraction pair found perform mh sun data setk500 total time sec run time mh sun data setk500 c figur 4 qualiti output total run time mh algorithm k vari ure 4a 5a plot scurv differ valu k mh kmh algorithm k valu increas curv get sharper indic better qualiti figur 4c 5c fix chang valu similar cutoff expect curv shift right cutoff valu increas figur 4d 5d show given valu k total run time decreas margin sinc gener fewer candid figur 4b show total run time mh algorithm increas linearli k howev case kmh algorithm depict figur 5b sublinear increas run time due sparsiti data specif number hash valu extract column upper bound number one column therefor hash valu extract increas linearli k similar explor paramet space mlsh hlsh algorithm paramet algorithm r l figur 7a 6a illustr fact r increas probabl column map buck decreas therefor number fals posit decreas tradeoff consequ number fals neg increas hand figur 7c 6c show increas l correspond increas collis probabl therefor number fals neg decreas number fals posit increas figur 7d 6d show total run time increas l sinc fraction pair found perform kmh sun data setf80 total time sec run time kmh sun data setf80 b fraction pair found perform kmh sun data setk500 total time sec run time kmh sun data setk500 c figur 5 qualiti output total run time kmh algorithm k vari hash column time also result increas number candid implement mlsh extract min hash valu domin total comput time increas linearli valu r shown figur 7b hand implement hlsh check candid domin run time result total run time decreas r increas sinc less candid produc shown figur 6b compar differ algorithm implement compar time requir algorithm compar cpu time algorithm sinc time spent io algorithm import note algorithm number fals neg import quantiti requir kept control long number fals posit larg ie candid fit main memori alway elimin prune phase compar algorithm fix percentag fals neg toler algorithm pick set paramet number fals neg within threshold total run time minimum plot total run time number fals posit fals neg threshold consid figur 8a 8c figur show total run time fals fraction pair found perform hlsh sun data set 5680120160200valu paramet r total time sec run time hlsh sun data set b fraction pair found perform hlsh sun data set valu paramet l total time sec run time hlsh sun data set c figur qualiti output total run time hlsh algorithm r l vari neg threshold see hlsh algorithm requir lot time fals neg threshold less better limit high gener mlsh hlsh algorithm better mh kmh algorithm howev note hlsh algorithm use interest similar cutoff low graph show best perform shown mlsh algorithm figur 8 give number fals posit gener algorithm toler limit fals posit plot logarithm scale case hlsh mlsh algorithm number fals posit decreas readi toler fals neg sinc case hash everi column fewer time howev fals posit graph kmh mh monoton exist tradeoff time spent candid gener stage prune stage maintain number fals neg less given threshold could either increas k spend time candid gener stage els decreas similar cutoff spend time prune stage get fals posit henc point graph correspond differ valu similar cutoff algorithm run get candid similar certain threshold result observ monoton behavior case algorithm fraction pair found perform mlsh sun data time sec valu paramet r run time mlsh sun data set b fraction pair found perform mlsh sun data set time sec valu paramet l run time mlsh sun data set c figur 7 qualiti output total run time mlsh algorithm r l vari would like comment result provid analyz caution reader note whenev refer time refer cpu time expect io time domin signatur gener phase prune phase awar natur data smart choic algorithm instanc kmh algorithm use instead mh spars data set sinc take advantag sparsiti 6 extens work briefli discuss extens result present well direct futur work first note result present discoveri bidirect similar measur howev minhash techniqu extend discoveri columnpair form highconfid associ rule type fc without support requir basic idea gener set minhash valu column determin whether fraction valu ident c c j proport ratio densiti j analyt experiment result qualit similar columnpair total time sec fals neg threshold time vs fals neg mh kmh hlsh mlsh fals neg threshold fals posit vs fals neg mh kmh hlsh mlsh b time sec fals neg threshold time vs fals neg mh kmh hlsh mlsh number fals posit fals neg threshold fals posit vs fals neg mh kmh hlsh mlsh c figur 8 comparison differ algorithm term total run time number fals posit differ neg threshold also use minhash scheme determin complex relationship eg c highlysimilar c j c j 0 sinc hash valu induc column c j c j 0 easili comput take componentwis minimum hash valu signatur c j c j 0 extend difficult work follow first observ c impli c j c mean c impli latter two implic gener conclud c impli c j c cardin c roughli c j c j 0 present problem cardin c realli small difficult otherwis case small c may interest anyway sinc difficult associ statist signific similar case also possibl defin anticorrel mutual exclus pair column howev statist valid would requir impos support requir sinc extrem spars column like mutual exclus sheer chanc interest note hash techniqu extend deal situat unlik apriori effect even support requir extens three column complex boolean express possibl suffer exponenti overhead number column r mine associ rule set item larg databas fast algorithm mine associ rule dynam itemset count implic rule market basket data resembl contain document pattern classif scene analysi similar search high dimens via hash use collabor filter weav inform tapestri onlin aggreg approxim nearest neighbor toward remov curs dimension random algorithm build scalabl accur copi detect mechan beyond market basket gener associ rule depend rule scalabl techniqu mine causal structur cacm special issu recommend system tr ctr masao nakada yuko osana document cluster base similar subject use integr subject graph proceed 24th iast intern confer artifici intellig applic p410415 februari 1316 2006 innsbruck austria yan huang hui xiong shashi shekhar jian pei mine confid coloc rule without support threshold proceed acm symposium appli comput march 0912 2003 melbourn florida girish k palshikar mandar kale manoj apt associ rule mine use heavi itemset data knowledg engin v61 n1 p93113 april 2007 yipe ke jame cheng wilfr ng mine quantit correl pattern use informationtheoret approach proceed 12th acm sigkdd intern confer knowledg discoveri data mine august 2023 2006 philadelphia pa usa zahid hossain sk ahad ali unifi descript languag associ rule data mine second intern workshop intellig system design applic p227232 august 0708 2002 atlanta georgia sunita sarawagi alok kirpal effici set join similar predic proceed 2004 acm sigmod intern confer manag data june 1318 2004 pari franc yishan jiao maintain stream statist multiscal slide window acm transact databas system tod v31 n4 p13051334 decemb 2006 edith cohen amo fiat haim kaplan case associ peer peer overlay acm sigcomm comput commun review v33 n1 p95100 januari jian zhang joan feigenbaum find highli correl pair effici power prune proceed 15th acm intern confer inform knowledg manag novemb 0611 2006 arlington virginia usa david johnson shankar krishnan jatin chhugani subodh kumar suresh venkatasubramanian compress larg boolean matric use reorder techniqu proceed thirtieth intern confer larg data base p1323 august 31septemb 03 2004 toronto canada wenyang lin mingcheng tseng autom support specif effici mine interest associ rule journal inform scienc v32 n3 p238250 june 2006 changhung lee chengru lin mingsyan chen slide window filter effici method increment mine timevari databas inform system v30 n3 p227244 may 2005 edith cohen haim kaplan bottomk sketch better effici estim aggreg acm sigmetr perform evalu review v35 n1 june 2007 zan huang wingyan chung hsinchun chen graph model ecommerc recommend system journal american societi inform scienc technolog v55 n3 p259274 februari 2004 edith cohen amo fiat haim kaplan associ search peer peer network har latent semant comput network intern journal comput telecommun network v51 n8 p18611881 june 2007