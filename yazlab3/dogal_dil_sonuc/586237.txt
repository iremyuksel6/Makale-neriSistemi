databas support evolv data product design argu databas support design process still inadequ despit mani transact model put forth fill defici opinion substanti improv gain introduc yet anoth transact model question basic paradigm transact process instead usual view transact destruct oper replac outdat databas state current one propos view design transact nondestruct oper import addit knowledg essenti unchang final design solut lead model design constraint natur way concurr design give formal present model discuss implement techniqu central distribut constraint manag b introduct product design like busi process today requir databas support simpl take yet design process differ ordinari busi process easili decompos seri independ step would lend acid paradigm classic databas transact process instead variou subtask design task tend highli interrel design process best view set cooper activ pursu subtask simultan consequ research databas support design process mostli focus develop altern strict isol properti classic databas transac tion varieti mechan defin control cooper transact propos propos sometim consider depart notion serializ classic correct criterion basic paradigm transact fund german research council dfg project number sfb346 process remain transact effect state transit consist databas state defin complet unambigu descript current state miniworld consider point view amount inform databas essenti constant consist databas state provid complet descript exactli one state miniworld transact switch state dictat evolut miniworld gener increas amount inform avail state thu transact essenti non monoton inform old state destroy replac inform new state nonmonoton follow noncommut therefor import serializ design process howev inform predominantli ad inform alreadi avail ideal design mean continu refin specif uniqu artifact singl word state world artifact eventu result design never chang instead amount knowledg avail state increas monoton cours real design process less straightforward propos design may prove infeas case specif must retract nevertheless fundament oper design narrow solut space monoton henc commut oper believ therefor databas system use design process support notion specif constraint admiss artifact refin releas specif primit data model leeway offer commut refin exploit transact model first step direct propos constraintbas data model thu adopt perspect origin introduc constraint logic program taken constraint databas system perspect databas provid explicit character singl state world assign precis valu state variabl instead databas contain set constraint variabl delin admiss valu therebi possibl state world put less abstract term design databas hold requir design decis gather far therebi constrain set possibl design solut design proce constraint ad either contradict reach backtrack becom necessari specif progress point inform need eventu product artifact avail suffici precis fundament primit data model finement queri releas constraint demonstr primit play togeth collabor design given databas alway denot approxim design solut notion consist becom rather simpl constraint must contradictori least level system detect constraint introduc one parti must releas anoth parti without proper author case singl central databas data model associ consist guarante implement straightforward way use techniqu known constraint databas situat becom difficult data replic taken account eg sale repres load set product specif onto laptop make chang offlin custom meet reintegr data main databas maintain consist case chang replic data must certain extent arrang advanc present lock protocol design announc anticip chang replic data prevent pessimist fashion conflict reintegra tion howev even protocol observ unanticip chang need made conflict specif detect reintegr time resolv manual summar contribut paper fol low demonstr notion data constraint lend natur way concurr design present protocol necessari coordin concurr access maintain consist central distribut constraint store 2 relat work view design refin specif fairli common design theori see eg 2 gener set specif given arbitrari concept concept denot famili relat artifact result design artifact defin intersect suffici number concept 13 howev hope treat specif gener algo rithmic limit specif constrain valu attribut certain rang specif cover common case practic admit effici satisfi test point introduct constraint paradigm put fruit use constraint databas system 7 10 8 primari motiv line research desir gener ordinari relat ie finit collect tupl infinit relat maintain finit descript consequ constraint databas system becom popular geograph tempor applic region interv contain infinit number point need manipul transact conduct applic howev rather convent particular nonmonoton constraint databas yet abl realiz potenti increas parallel inher constraint framework quit contrari parallel main focu saraswat work parallel constraint program 11 notion share constraint store propos eleg mean commun synchron cooper agent data model rather simpl applic gener framework laid thesi saraswat come program languag background mostli concern central constraint store although address distribut constraint system discuss mechan maintain consist set gap fill protocol present section 6 fuzzi set 14 may view gener constraint allow vari degre satisfact fuzzi databas system 1 3 propos captur uncertainti specif inher earli design stage 12 15 thu fuzzi databas system share view design refin reduct uncertainti howev research appli fuzzi technolog design process focus model aspect semant fuzzi set wherea mainli concern coordin parallel access design inform yet data model protocol present appli equal well crisp fuzzi constraint provid effici consist check algorithm class constraint consider avail eg 6 constraint fuzzi databas system may regard combin nonstandard data model standard transact model convers also mani attempt graft advanc transact model onto convent objectori relat databas system seek provid better support long run cooper transact typic design pro cess space limit forbid detail discuss rather larg bodi work see 5 survey gener transact model trade strong consist guarante offer serializ transact process flexibl control transact isol notion consist howev flexibl come price complex transact manag scheme wors perhap depend user provid inform desir semant along transact view bad tradeoff consist guarante semant databas system simpl possibl much less drastic modif classic acid paradigm notion fflserializ introduc 9 mean trade precis concurr fflseriali zabil applic data possess numer quantifi degre uncertainti extend ordinari serializ permit transact histori whose result differ accord suitabl metric quantiti ffl serializ histori unfortun ffl serializ handl write transact well absenc knowledg intern work write transact one must assum small variat input lead arbitrarili larg variat output henc accept possibl unbound diverg databas state result serial execut 4 address problem suggest transact went far astray period un done design set transact easili repres day work may prove costli 3 formal model constraintbas design view design manipul specif specif pose restrict admiss design solut specif impos extern agent ie design requir specif result decis intern design process treat alik model design space finit collect x 1 design paramet type 1 2 n everi possibl design outcom uniqu character assign valu x 1 x 2 xn type 1 2 n arbitrari thu entir conceiv design paramet describ say complex geometri specif gener syntact character subset 1 theta 2 theta delta delta delta theta n point section 2 notion broad algorithm tractabl limit specif restrict valu singl design paramet x rang syntact character languag l onedimension specif henceforth call condit exact languag l use express rang left unspecifi exampl might defin explicit enumer numer interv logic formula etc make certain assumpt l 1 rang 1 2 sm express l express l well exist reason effici procedur comput correspond express 2 exist reason effici procedur decid whether intersect collect 1 rang express l empti 3 rang express l convex follow sens 1 2 sm express l technic particularli essenti condit constrain oper introduc assumpt obvious true rang defin numer interv also power logic framework cf 8 exampl associ condit princip ie abstract represent agent impos condi tion could individu design design team manag custom entiti author particip design process combin condit princip call constraint design state design databas given collect constraint togeth describ valu consid admiss x 1 x 2 xn particular state design state call consist least one assign valu x 1 x 2 xn satisfi constraint notion consist admittedli naiv take interact design paramet due physic law technolog limit ac count exampl microprocessor design condit clock rate 1000mhz power dissip 1w formal consist refer differ design paramet current simultan achiev desir depend design paramet could introduc model multidimension condit expens increas overhead consist check believ howev even simplemind consist check defin prove benefici practic design proce mean three basic oper oper carri atom add new constraint condit x 2 invok agent princip design state oper succe new state consist fail set constraint conflict x 2 return set well defin convex properti assum remov specifi constraint design state exist note affect constraint x oper succe invok agent author remov constraint introduc princip p specif scheme wherebi author obtain left open peekx return condit describ set valu admiss x current state ie intersect current constraint x let us briefli comment oper invari impli constrain monoton oper use establish new design requir new design decis case discuss next section stake exist decis releas invers oper use retract requir decis come fruition peek serv queri current state typic begin design task definit oper clear follow two properti hold constraint consist cc design state alway consist particular result peek oper never denot empti set constraint durabl cd constraint success establish constraint satisfi design solut unless explicitli releas properli author agent presum notif constraint princip worth point notion durabl describ quit differ one offer acid transact latter refer protect system media failur effect transact valu written acid transact safe transact yet commit commit may overwritten time contrari semant commit design de cision suppos stabl unless explicitli retract 4 concurr design constraint illustr constraint manipul primit play togeth concurr design design process usual begin determin major design requir enter correspond constraint design databas soon suffici set requir establish allow meaning subdivis design task design subtask may formul assign meanwhil acquisit requir continu result constraint impos design charg certain design task initi use peek oper obtain current constraint relev design paramet three outcom possibl 1 constraint solut possibl case design process reach dead end constraint need releas 2 problem underspecifi extent noth use done case design task must postpon inform forthcom 3 constraint admit one solut case solut determin constraint describ solut ad databas togeth constraint describ assumpt solut base simplest case addit constraint simpli copi constraint obtain initi peek oper ation thu redund frequent though design solut requir stronger assumpt design requir addit constraint describ design assumpt actual narrow solut space way mani design task proceed parallel virtu constraint durabl design rest assur assumpt result design remain valid throughout entir process unless explicitli retract cours also mean attempt establish constraint may fail conflict assumpt result anoth design activ attempt made resolv conflict automat resolut typic requir domainspecif expertis recours conflict contact princip offend constraint return unsuccess constrain negoti solut note consist durabl guarante offer constraint store requir lock protocol besid execut primit oper atomi calli follow simpli definit monoton constrain 5 implement central constraint store current prototyp system standalon implement use mainmemori databas system layer implement top convent relat databas system envis rather straightforward way first design paramet describ design space need identifi hardli feasibl submit everi singl dimens occur engin draw everi line code program constraint paradigm therefor one would tri identifi set paramet repres inform truli need share among concurr design activ use transact manag facil underli databas system coupl nonshar paramet govern ing share paramet exampl two design group work mechan assembl need exchang bound box inform respect com ponent coordin bound box would consid design paramet access dimens would wrap acid transact ensur bound box data remain consist true geometri data second domain condit languag need chosen everi design paramet mechan de sign inform numer lower upper bound usual suffic condit hand softwar engin usual deal freetext specifica tion sort symbol represent must found eg pick salient keyword defin condit explicitli enumer requir keyword third design paramet associ set constraint repres relat model exampl numer design paramet constraint defin interv might repres threecolumn tabl tupl princip lower bound upper bound constraint design paramet final oper constrain releas peek need implement acid transact procedur constrain peek would presum invok custom procedur satisfi test intersect respect note scheme applic continu use ordinari acid transact fact wrapper transact written access nonshar param ter transpar insert call constrain releas govern share paramet outlin applic need awar constraint framework 6 handl distribut replic goal extend cc cd guarante distribut replic constraint system assum replica may oper temporarili disconnect mode without abl exchang oper replica case two incompat constrain oper may execut differ replica rais conflict replica eventu merg cc cd maintain assumpt conflict allow henc constrain oper must execut pessimist releas peek oper less critic never rais conflict merg 61 intent lock introduc intent lock mean protect disconnect replica incompat constrain oper intent lock acquir replica still con nect held reconnect occur idea behind intent lock announc chang anticip period disconnect oper obvi ousli advanc knowledg chang necessari acquir proper lock unreason assumpt sale repres copi data notebook meet custom discuss design probabl rough idea data may chang formal intent lock condit sens section 3 ie onedimension specif express languag l intent lock alway associ replica unlik constraint princi pal also two kind intent lock semant somewhat differ condit two kind intent lock correspond classic share exclus lock reflect two differ attitud design may exhibit toward design paramet firstli design paramet x may view input design task case design presum use peek obtain current rang x use constrain reimpos rang perhap rang somewhat nar rower design assumpt semant constraint prepar accept outcom design process long design assumpt satisfi particular prepar accept arbitrari constraint impos x princip perhap replica long constraint nonempti intersect express attitud enter disconnect mode would request share intent lock x rang equal minimum rang accept share intent lock x rang held replica prohibit replica impos constraint x rang disjoint similar constraint except share intent lock immedi global publish wherea constraint eventu publish see section protocol implement second design paramet x may view yet unknown output design task case design may forese need impos certain constraint x yet know constraint order keep design restrict freedom choic want impos lock prohibit princip introduc constraint x elimin valu consid potenti interest attitud express request exclus intent lock x rang union constraint design might want introduc later exclus intent lock x rang held replica prohibit replica impos constraint x rang includ entir lock protocol determin follow rule first two rule govern acquisit lock last rule govern execut constrain oper releas peek oper alway permit ted share lock acquisit request share intent lock design paramet x rang grant iff follow condit met 1 anoth replica hold exclus intent lock x rang x x 2 anoth replica hold share intent lock x rang 0 0 6 exclus lock acquisit request exclus intent lock design paramet x rang x grant iff follow condit met 1 replica hold exclus intent lock x 2 anoth replica hold share intent lock x rang x constraint introduct request constrainx execut replica succeed iff follow condit met 1 replica hold share intent lock x rang 0 exclus intent lock x rang x 6 2 intersect constraint current impos x replica nonempti replica hold exclus intent lock x meet rang lock note admiss constrain oper decid local wherea acquisit lock requir global commun exactli global commun implement discuss next 62 protocol implement protocol acquisit intent lock may seem simpl first detail somewhat complex note first constrain oper execut local replica without commun result constraint propag eventu repli ca along releas lock cover opera tion difficult part set releas intent lock call oper global must propag replica global oper execut asynchron long replica execut order particular disconnect replica see execut global oper origin replica reconnect time long order preserv protocol remain correct set replica usual divid set connect partit easi show one parti tition permit execut global oper problem decid partit allow initi global oper usual done use quorum consensu algorithm howev scenario major replica might offlin partit big enough achiev quorum case requir quorum modifi accordingli eg quorum could partit contain half member last quorum last least even insid quorum one replica initi global oper replica initi global oper preced global oper complet replica within quorum 7 conclus open problem start observ design unlik busi process process success refin monoton inform accret led us adopt constraint basic design object investig concurr design achiev within constraint framework show basic guarante constraint model combin explic design assumpt lead natur coordin model requir addit transact manag final present implement mechan central distribut constraint system thu demonstr basic feasibl approach interest continu work certainli handl multidimension constraint constraint specifi depend sever design paramet unfortun time need comput intersect satisfi multidimension constraint tend grow rather fast number dimens work necessari identifi constraint languag implement techniqu handl multidimension constraint reason perform r fuzzi databas manag system mathemat theori de sign foundat fuzzi logic data model asynchron consist restor epsilon serializ databas transact model methodolog reduct imprecis engin design process constraint queri languag constraint databas relax limit serializ transact distribut system constraint databas survey concurr constraint program fuzzi set engin design configur gener design theori cad system fuzzi set zimmermann editor practic applic fuzzi technolog tr nest transact approach reliabl distribut comput rcsmyampersandmdasha system version control saga cooper transact hierarchi transact model support design applic toward unifi framework version model engin databas acta framework specifi reason transact structur behavior principl realiz strategi multilevel transact manag flexibl adapt tool kit approach transact manag non standard databas system multilevel transact open nest transact concurr constraint program implement extend transact model use transact group fuzzi logic data model constraint queri languag preliminari report relax limit serializ transact distribut system practic applic fuzzi technolog fuzzi databas manag system mathemat theori design constraint databas constraint databas