recent develop highlevel synthesi survey recent develop high level synthesi technolog vlsi design need higherlevel design autom tool discuss first describ basic techniqu variou subtask highlevel synthesi techniqu propos past year sinc 1994 variou subtask highlevel synthesi survey also survey new synthesi object includ testabl power effici reliabl b introduct larg scale integr circuit vlsi technolog provid densiti multipl million gate random logic per chip chip complex difficult imposs design use tradit captureandsimul design methodolog furthermor vlsi technolog also reach matur level well understood longer provid competit edg instead time market usual equal import area speed industri start look product develop cycl comprehens reduc design time gain competit edg time tomarket race autom entir design process conceptu silicon describeandsynthes design methodolog becom necessari 20 complex chip increas need design autom higher level abstract function easier understand tradeoff influ ential sever advantag autom part design process move autom higher level first autom assur much shorter design cycl second allow explor differ design style sinc differ design gener evalu quickli final synthesi algorithm well understood design autom tool may outperform averag human design meet design constraint requir synthesi translat process behavior descript structur descrip tion similar compil high level languag program c pascal assembl program compon structur descript turn defin lower level behavior descript synthesi sometim call design refin add addit level detail provid inform need next level synthesi manufactur design detail design must satisfi design constraint suppli along origin behavior descript gener previou synthesi step defin high level synthesi hl translat process behavior descript registertransf level rtl structur descript high level synthesi hot research topic past fifteen year comprehens discuss specif research approach hl found 6 20 63 96 concentr develop past three year rest paper organ follow section 2 describ design flow vlsi hl use section 3 outlin task basic techniqu section 4 sever new target architectur hl survey advanc algorithm techniqu describ section 5 section 6 survey new object function recent hl system tri optim section 7 describ applic hl final section 8 specul futur direct hl design flow use hl behavior descript use start point hl specifi behavior term oper assign statement control control construct hardwar descript languag hdl eg vhdl 37 verilog 90 hdl differ softwar program languag eg c pascal capabl express time concurr hardwar output high level synthes consist two part datapath structur registertransf level rtl specif finit state machin control datapath rtl level datapath compos three type compon function unitseg alu multipli shifter storag unitseg regist memori interconnect unitseg buss multiplexor finit state machin specifi everi set microoper datapath perform everi control step first step hl behavior descript compil intern repr sentat process usual includ seri compilerlik optim code motion dead code elimin constant propag common subexpress elimin loop unrol addit may also appli hardwarespecif transform syntact varianc minim retim take advantag associ commut properti certain oper controldata flow graph cdfg commonli use intern represent captur behavior controlflow graph cfg portion cdfg captur sequenc condit branch loop construct behavior descript dataflow graph dfg portion captur datamanipul activ describ set assign statement opera tion follow three step form core transform behavior structur schedul alloc bind schedul assign oper behavior descript control step control step usual correspond cycl system clock basic time unit synchron digit system alloc choos function unit storag element compon librari may sever altern among synthes must select one best match design constraint maxim optim object bind assign oper function unit variabl storag element data transfer wire buse data correctli move around accord schedul three task close interdepend one anoth exampl optim schedul oper control step without explicit perform cost inform compon alloc imposs similarli optim alloc compon perform without exact inform oper concurr furthermor exist performancecost tradeoff appli task exampl area effici design consist minimum number slow compon larger number control step requir execut desir function hand alloc compon allow exploit parallel execut oper higher perform achiev expens higher area cost adjust constraint paramet design space explor one primari applic hl help design explor design space henc evalu multipl implement altern quickli 3 basic techniqu given cdfg perform schedul alloc bind get datapath byproduct task specif behavior control finit state machin section survey basic techniqu schedul alloc bind 31 schedul schedul assign oper behavior descript control step within control step separ function unit requir execut oper assign step thu total number function unit requir control step directli correspond number oper schedul oper schedul control step function unit necessari result fewer control step design implement hand fewer oper schedul control step fewer function unit suffici control step need thu schedul import task hl larg determin tradeoff design cost perform two class schedul problem timeconstrain schedul resourceconstrain schedul timeconstrain schedul minim hardwar cost oper schedul fix number control step hand resourceconstrain schedul minim number control step need execut oper given fix amount hardwar integ linear program ilp formul resourceconstrain schedul timeconstrain schedul 36 propos howev execut time algorithm grow exponenti number variabl number inequ practic ilp approach applic small problem nevertheless ilp approach made problem better understood sinc ilp method impract larg design heurist method run effici expens design optim develop heurist schedul algorithm usual use two techniqu construct approach iter refin mani approach construct schedul differ select criteria use choos next oper schedul simplest construct approach soon possibl asap schedul first oper sort list accord topolog order oper taken list one time place earliest possibl control step simpl approach late possibl alap schedul alap valu oper defin latest control step oper possibl schedul approach given time constraint term number control step algorithm determin latest possibl control step oper must begin execut critic path within flow graph found take intersect asap alap schedul oper appear control step schedul critic path asap alap schedul prioriti given oper critic path oper may mistakenli delay resourc limit impos schedul list schedul overcom problem use global criterion select next oper schedul one exampl global prioriti function mobil 70 defin differ asap asap valu oper exampl urgenc 22 defin minimum number control step bottom oper schedul time constraint violat list schedul list readi oper order accord prioriti function process state forcedirect schedul fd 72 anoth exampl use global select criteria choos next oper schedul fd algorithm reli asap alap schedul algorithm determin rang control step everi oper distribut graph creat repres probabilist number oper perform control step type oper control step main goal fd algorithm reduc total number function unit use implement design algorithm achiev object uniformli distribut oper type avail state call algorithm similar fd construct construct solut without perform backtrack decis schedul oper control step made basi partial schedul dfg take account futur schedul oper control step due lack lookahead scheme lack compromis earli late decis result solut may optim cope weak iter reschedul oper given schedul one exampl approach propos 73 base paradigm origin propos graphbisect problem kernighan lin kl 41 approach initi schedul obtain use schedul algorithm new schedul obtain reschedul sequenc oper maxim reduc schedul cost improv attain process halt preced discuss block straight line code consid ever addit block straight line code realist design descript usual contain condit loop construct mani approach 43 99 propos schedul condit construct exampl 99 condit vector use identifi mutual exclus oper oper schedul differ control step differ execut instanc anoth approach pathbas fast possibl afap schedul 5 first extract possibl execut path given behavior schedul independ schedul differ path combin resolv conflict among execut path loop construct differ approach pipelin 71 loop fold 23 propos 32 alloc bind schedul datapath construct two step unit alloc unit bind research call unit alloc unit bind collect datapath alloc unit alloc determin number type rt compon use design sinc real rt compon librari may contain multipl type function unit differ characterist eg function size delay power dissip unit alloc need determin number type differ function storag unit compon librari unit bind map oper variabl data transfer schedul cdfg function storag interconnect unit respect ensur design behavior oper correctli select set compon unit bind consist three interdepend task functionalunit bind storag bind interconnect bind functionalunit bind involv map oper behavior descript set select function unit storag bind map data carrier eg constant variabl data structur like array behavior descript onto storag element eg rom regist memori unit datapath interconnect bind map everi data transfer behavior set interconnect unit data rout three approach solv alloc problem construct approach progress construct design travers cdfg decomposit approach es decompos alloc problem constitu part solv separ iter method tri combin interleav solut alloc subproblem construct approach start empti datapath build datapath gradual ad function storag interconnect unit necessari exampl emuc 33 mabal 46 use global criterion base function storag interconnect cost determin next element assign assign although construct algorithm simpl solut find far optim order improv qualiti result research propos decomposit approach alloc process divid sequenc independ task task transform welldefin graphtheoret problem solv proven techniqu follow describ alloc techniqu base three graphtheoret method cliqu partit leftedg algorithm weight bipartit match algorithm tseng siewiorek 92 divid alloc problem three task storag functionalunit interconnect alloc solv independ map task well known problem graph cliquepartit graph formul oper valu interconnect repres node edg two node indic two node share hardwar thu alloc problem storag alloc solv find minim number cliqu graph find minim number cliqu graph nphard problem 92 heurist approach taken although cliquepartit method appli storag alloc minim storag requir total ignor interdepend storag interconnect alloc paulin knight 72 extend previou method augment graph edg weight reflect impact interconnect complex due regist share among variabl kurdahi parker appli leftedg algorithm 45 solv registeralloc problem unlik cliquepartit problem npcomplet leftedg algorithm polynomi time complex moreov algorithm alloc minimum number regist howev take account impact regist alloc interconnect cost weight version cliquepartit algorithm regist functionalunit alloc problem also transform weight bipartitematch algorithm 30 approach bipartit graph first creat contain two disjoint subset eg one subset regist one variabl one subset oper one function unit edg connect two node differ subset repres node one subset assign node subset eg variabl variabl subset assign regist regist subset thu problem match variabl regist equival classic jobassign problem 30 polynomi time maximum weight match algorithm employ solv problem match algorithm like leftedg algorithm alloc minimum number regist also take partial consider impact regist alloc interconnect alloc sinc associ weight edg given datapath synthes construct decomposit method improv may achiev realloc iter refin approach straightforward approach could simpl assign exchang use pairwis exchang simul anneal method addit sophist branchandbound method appli realloc group differ type entiti datapath refin 91 41 multiport memori multiport memori support multipl read andor write access simultan use multiport memori give hl flexibl bind variabl storag tradit alli variabl group regist regist regist filesmemori modul synthes interconnect memori modul function unit kim propos place emphasi interconnect tri minim interconnect first group variabl form memori modul later lee hwang 52 propos take multiport memori account earli schedul defin multiport access variabl mav control step let schedul algorithm equal mav across control step order achiev better util memori 42 distribut storag tradit hl system target toward central storag unit everi oper must access input operand write output operand storag unit regular iter algorithm architectur may optim aloqe chen 3 propos sequencerbas datapath architectur sequenc stack queue connect one function unit anoth let variabl intellig stay flow sequenc datapath futur use high qualiti datapath synthes mani signal process matrix comput algorithm furthermor less traffic need function unit central storag unit result simpl interconnect complex similar concept call data rout propos hl code gener 48 43 partit bu ewer 16 propos parameter architectur call partit buss buss partit segment function unit storag unit connect one segment data transfer occur within segment interseg transfer made possibl switch segment sinc load bu light synthes circuit fast schedul alloc done amount interseg data transfer minim quit signific advanc hl algorithm heurist variou method propos transform cdfg highqual circuit easier synthes sever group extend ilp formul gener schedul problem capabl handl larg design problem besid schedul algorithm origin develop problem employ hl sever group propos variou neural network model variou hl task solut techniqu get power longer necessari divid synthesi problem multipl subtask notabl develop perform task togeth singl task order achiev better qualiti design 51 behavior transform transform appli design represent variou stage hl compil input behavior descript controldata flow graph sever compilerlik optim perform remov extran syntact construct redund flowgraph transform use convert part represent one style eg control flow anoth eg data flow chang degre parallel hardwarespecif transform use properti registertransf rt logic compon perform optim eg replac dataflow graph segment increment variabl increment oper sinc flowgraph represent typic come imper languag de scription sever standard compil optim techniqu constant fold redund oper elimin perform represent 2 array variabl anoth rich sourc compil level optim hl 24 68 sinc array behavior represent get map memori reduct number array access decreas overhead result access memori structur 42 certain compil transform specif hdl use describ design exampl vhdl use design descript sever approach propos 4 identifi specif syntact construct replac attribut signal net indic function furthermor order reduc syntact variat descript semant chaiyakul et al 8 propos transform techniqu use assign decis diagram add minim syntact varianc descript graph captur behavior restructur tree height reduct one commonli use flowgraph transform improv parallel design tree height reduct use commut distribut properti languag oper decreas height long express chain expos potenti parallel within complic dataflow graph 31 67 pipelin anoth frequent appli transform hl 71 commonli use transform includ loop fold 23 88 softwar pipelin 26 77 retim hardwarespecif transform logic rt system level appli intermedi represent gener local transform use properti hardwar differ design level optim intermedi represent exampl logic level appli local boolean optim techniqu 13 intermedi represent rt level use pattern match detect replac portion flow graph simpler flowgraph segment pattern match transform base rt semant hardwar compon correspond flowgraph oper 85 system level transform use divid part flow graph separ process run concurr pipelin fashion 98 52 advanc ilp formul achatz 1 propos extens ilp formul handl multifunct unit well unit differ execut time differ instanc oper type wang grainger 97 show number constraint origin ilp formul reduc without reduc explor design space therefor comput effici formul applic larger size problem chaudhuri et al 10 perform indepth formal analysi structur assign ment time resourc constraint evalu structur schedul polytop describ constraint show exploit structur welldesign ilp formul also propos improv wellstructur formul ad new valid inequ oscar system 50 01 integ program model propos solv schedul alloc bind togeth geboti 21 propos integ program model synthesi multichip architectur model simultan deal partit schedul alloc search space reduc use polyhedr theori wilson et al 95 gener ilp approach integr solut schedul alloc bind datapath synthesi modul may execut arbitrari combin oper possibl use differ number control step differ type oper oper may bound varieti modul possibl requir differ number control step depend modul chosen 53 new approach ly et al 49 propos idea behavior templat schedul templat lock number oper rel schedul respect one anoth eas handl time constraint sequenti oper model prechain certain oper hierarch schedul mani neural net base schedul algorithm propos ansa 93 threephas neural network schedul kawaguchi tokada 40 combin simul anneal neural network schedul problem genet algorithm also find applic high level synthesi dhodhi et al 12 propos problemspac genet algorithmpsga datapath synthesi perform concurr schedul alloc object minim cost function hardwar resourc total execut time heijlig et al 32 genet algorithm use encod techniqu capabl alloc supplementari resourc schedul also paid attent runtim effici mean carefullydesign analyz method ly mowchenko 56 propos adapt simul evolut high level synthesi simul evolut success appli cad area includ rout par tition placement sebas synthesi explor design space repeatedli rip part design probabilist manner reconstruct use applicationspecif heurist combin rapid design iter probabilist hill climb achiev effect design space explor object subject rip reconstruct operationtostep assign variou bind insyn 87 combin alloc schedul function storag interconnect unit singl phase use concept regist state free busi undecid optim regist partial schedul lifetim data valu yet avail allevi bu content use reusabl data valu broadcast select slow noncrit oper insyn trade distinct resourc set concurr ie trade function unit regist vice versa estim tool util resourc alloc design space prune evalu synthes result 6 advanc object function 61 accur estim tradit hl system character synthesi result base crude estim area estim sum area function unit storag unit intercon nect time estim assum wire delay insignific move deep submicron era wire area time longer ignor mani estim method propos moreov interact hl layout rim jain 84 propos perform estim tool given data flow graph set resourc resourc delay clock cycl tool comput lowerbound complet time nonpipelin resourceconstrain schedul problem chaudhuri walker 9 propos algorithm comput lower bound number function unit type requir schedul data flow graph specifi number control step bound found relax either preced constraint integrati constraint schedul problem bound method use estim fu area gener resourc constraint reduc search space conjunct exact formul design space explor mecha et al 57 propos high level area estim method target toward standard cell implement emphas predict interconnect area fang wong 17 propos simultan perform function unit bind floorplan munch et al 66 propos analyt approach captur placement bind problem singl mix ilp model target toward linear bitslic architectur model capabl minim overal interconnect structur datapath 62 hl testabl testabl high level enhanc minim number selfloop self adjac regist main concern tradeoff testabl improv area overhead sinc multiplexor buse behav switch help reduc test cost gupta breuer 27 propos take advantag multiplexor buse reduc area overhead test gener cost analyz locat switch select partial scan regist also util switch setup path transport test data flott et al 18 propos method improv testabl incorpor test constraint regist alloc interconnect network gener analyz testabl design behavior level presenc loop control construct dhodhi et al 14 propos problemspac genet algorithm psga perform simultan schedul alloc testabl function unit regist area perform testabl constraint mujumdar et al 65 propos twostag approach bind testabl first use binder test cost gener nearli loopfre design use loopbreak method identifi selfloop design elimin loop altern regist modul bind et al 75 propos method transform behavior descript synthesi new descript requir less area overhead partial scan cost propos twostag object function estim area testabl well evalu effect transform use random branchandbound steepest decent algorithm search best sequenc transform testabl improv via better control design hsu rudnick patel 34 propos control measur high level circuit descript high level synthesi fortest techniqu improv circuit testabl enhanc control control flow 63 hl low power due low power requir mani portabl applic notebook mobil phone well packag cost consider low power design technolog becom import everi aspect vlsi design great deal research effort spent circuit logic design low power 74 activ research past year hl low power low power hl high level power estim techniqu need raghunathan et al 79 propos techniqu estim switch activ power consumpt registertransf level take account presenc glitch activ variou data path control signal rabaey et al 80 propos approach high level design guidanc low power use properti given algorithm architectur sever relev properti oper coun ratio critic path avail time spatial local regular identifi signific emphasi place exploit regular spatial local optim interconnect power schedul assign alloc techniqu 61 exploit regular common comput pattern algorithm reduc fanin fanout interconnect wire result reduc bu capacit simplifi bu structur raghunathan jha 81 propos datapath alloc method low power also take account control effect datapath power dissip goodbi et al 25 propos achiev low power via pipelin modul select musol cortadella 64 propos schedul resourcebind algorithm reduc activ function unit minim transit input operand kumar et al 38 measur activ oper carrier behavior specif simul dfg usersuppli profil stimuli select modul set schedul minim switch activ martin knight 58 appli sever low power techniqu behavior synthesi includ lower suppli voltag disabl clock idl compon architectur tradeoff 64 hl reliabl mani critic applic faulttoler import desir system capabl selfrecoveri presenc transient fault selfrecov microar chitectur intermedi result compar regular interv correct save regist checkpoint hand detect fault roll back checkpoint retri orailoglu karri 69 propos selfrecov microarchitectur synthesi system propos algorithm select good checkpoint low overhead meet constraint number clock cycl retri period selftest carri concurr normal oper use otherwis idl function unit singh knight 86 propos method test hardwar element use gener circuit cycl test vector idl hardwar produc signatur builtin self test achiev reduc testtim overhead hotcarri reliabl issu also dealt high level synthesi karnik et al 39 propos iter redesign method improv longterm reliabl given high level circuit use macromodel standard circuit element develop use reliabl simul tool reliabl improv due capacit reduct 65 control issu tradit control unit specif gener datapath synthesi com plete recent author observ exist tradeoff control datapath rao kurdahi 82 propos hierarch approach control logic overhead taken account level hierarchi datapath fulli synthes approach suitabl behavior consist regular algo rithm huang wolf 35 studi datapath alloc affect control delay propos alloc approach consid control effect critic path delay therefor abl minim system clock length alloc 7 applic hl year hl success appli design sever narrow applicationspecif domain exampl mani hl system cathedr 55 hyper 11 phideo 54 provid design environ target toward digit signal process dsp applic variou level throughput requir contrast comput intens dsp design mani hl system 7 calla 53 olympu 62 target toward controldomin circuit design addit hl system mimolahoneywel 101 target toward instruct set processor design system architect workbench cmu 89 use design automot applic 19 high level synthesi tool even find use educ 83 datapath synthes capabl exploit design space student abl tri differ architectur decis evalu effect recent hl use embed system design environ typic embed system consist offtheshelf instruct set processor memori asic applic partit two interact part softwar instruct set processor hardwar asic sever approach 15 29 develop tackl hardwaresoftwar codesign problem hl tool definit need quickli give cost perform figur synthes asic advent fieldprogramm hardwar field programm gate array field programm interconnect compon fpic mani design implement fpga fast turnaround import fpga asicbas implement use hl provid unmatch fast turnaround time take advantag reprogramm fpga fpic hardwar emul provid fast mean design verif current hardwar emul take input logiclevel structur descript hl extens verif perform earlier design process exampl 100 hl scheme use automat map behavior descript onto asic emul board custom comput hardwar resourc configur accord characterist applic program hl essenti convert algorithm code segment fpgafpic program bitstream 8 futur direct although seen mani applic hl today still indispens layout logic synthesi high level synthesi move mainstream design practic area effici perform level must competit tradit approach possibl approach emb domain knowledg synthes instanc mani dsporient hl system develop unfortun approach one seriou drawback domainspecif tool smaller custom base sinc hl develop difficult complic task small custom base may abl support healthi growth deep submicron era wire delay domin gate delay therefor wire delay must taken account earli design process possibl work deal interact logic synthesi layout survey work simultan alloc floorplan futur shall see interact high level synthesi layout everi step hl take layout account rapid increas integr level must prepar deal com plicat systemonachip issu impract design multimillion gate chip scratch therefor essenti make good use exist design success hl tool provid smooth mechan user reus wide varieti compon also pay attent design verif although hl inde effect reduc time synthesi quit signific portion design time spent simul valid hl provid help date sinc verif higher level effici lower level correctnesspreserv hl design flow significantli save valid time therefor give design incent use hl tool r extend 01 lp formul schedul problem high level synthesi compil principl sequencerbas datapath synthesi regular iter algorithm optim hardwar synthesi pathbas schedul synthesi high level vlsi synthesi ibm high level synthesi system high level transform minim syntact varianc comput lower bound function unit schedul analyz exploit structur constraint ilp approach schedul problem hyper interact synthesi environ high perform real time applic datapath synthesi use problemspac genet algorithm new look logic synthesi high level synthesi data path easi testabl hardwaresoftwar codesign embed control base hardwar extract automat high level synthesi partit buss simultan functionalunit bind floorplan ning high level synthesi easi testabil iti industri extens univers high level synthesi tool make work real world high level synthesi introduct chip system design optim approach synthesi multichip architec ture applic subset ada algorithm hardwar descript languag graphbas hardwar compil loop wind data flow approach function pipelin address gener array access base modulu counter microarchitectur synthesi perform constrain lowpow vlsi design effici microcod compil applic specif dsp processor partial scan design registertransf level circuit partit function model synchron digit system system level synthesi use reprogramm compon data path alloc base bipartit weight match treeheight minim pipelin architectur high level synthesi schedul alloc use genet algorithm method automat data path synthesi enhanc highlevel controlflow improv testabl datapath alloc affect control delay formal approach schedul problem high level synthesi standard vhdl languag refer manual profiledriven behavior synthesi lowpow vlsi system highlevel hot carrier reliabilitydriven synthesi use macromodel oper schedul anneal neural network effici heurist procedur partit graph integr program transform memorybas synthesi imag video algorithm schedul algorithm condit resourc share hierarch reduct approach new approach multiport memori alloc problem datapath synthesi real program regist alloc data path tradeoff use mabal chop constraintdriven system level par tition data rout paradigm effici datapath synthesi code gener schedul use behavior tem plate oscaroptimum simultan schedul ing alloc resourc bind base integ program architectur partit system level partition schedul algorithm multiport memori minim datapath synthesi siemen high level synthesi system calla phideo silicon compil high speed algorithm architectur synthesi medium high throughput signal process new cathedr environ appli simul evolut high level synth si method area estim data path high level synthesi powerprofil optim asic power consumpt behavior level use bottomup design techniqu synthesi digit hardwar abstract behavior descript incorpor bottomup design hardwar synthesi exploit regular lowpow design olympu synthesi system digit design synthesi approach digit system design schedul resourc bind low power incorpor testabl consider high level synthesi optimum simultan placement bind bitslic architectur increment tree height reduct high level syn thesi flow graph represent coactiv schedul checkpoint determin high level synthesi selfrecov microarchitectur design tool intellig silicon compil sehwa softwar packag synthesi pipelin behavior specif forcedirect schedul behavior synthesi asic fast near optim schedul automat data path synthesi power minim ic design principl applic synthesisfortest use transform optim resourc util use transform rephas transform techniqu manipul time constraint estim power dissip vlsi signal process chip pfa techniqu registertransf level estim techniqu switch activ power consumpt design guidanc power dimens behavior synthesi low power control datapath tradeoff hierarch rtlevel synthesi use hyper teach datapath design techniqu asic design cours lowerbound perform estim high level synthesi schedul problem optim high level synthesi concurr test high level synthesi insyn integr schedul dsp applic transformationbas method loop fold algorithm registertransf level synthesi system architect workbench verilog hardwar descript languag data path construct refin automat synthesi data path digit sy tem ansa new neural net base schedul algorithm high level synthesi specif partit system design ilp solut optimum schedul modul regist alloc oper bind datapath synthesi survey high level synthesi reduct number equat ilp formul schedul problem high level synthesi behavior transform algorithm level ic design resourc share control synthesi method condit branch high level synthesi rapidprototyp environ mechantron system md mimola design method tr compil principl techniqu tool optim high level synthesi real program regist alloc data path alloc base bipartit weight match data path tradeoff use mabal industri extens univers high level synthesi tool fast near optim schedul automat data path synthesi increment tree height reduct high level synthesi highlevel synthesi specif partit system design highlevel synthesi rapidprototyp environ mechatron system highlevel transform minim syntact varianc integr program transform memorybas synthesi imag video algorithm simultan functionalunit bind floorplan analyz exploit structur constraint ilp approach schedul problem sequencerbas data path synthesi regular iter algorithm incorpor testabl consider highlevel synthesi oscar powerprofil schedul use behavior templat rephas partial scan design registertransf level circuit new approach multiport memori alloc problem data path synthesi schedul resourc bind low power highlevel synthesi schedul alloc use genet algorithm schedul algorithm multiport memori minim datapath synthesi synthesisfortest use transform power minim ic design comput lower bound function unit schedul registertransf level estim techniqu switch activ power consumpt exploit regular lowpow design enhanc highlevel controlflow improv testabl data rout concurr test highlevel synthesi control datapath tradeoff hierarch rtlevel synthesi datapath alloc affect control delay verilog hardwar descript languag 4th ed use bottomup design techniqu synthesi digit hardwar abstract behavior descript flow graph represent synthesi approach digit system design highlevel vlsi synthesi algorithm registertransf level synthesi optim hardwar synthesi olympu synthesi system profiledriven behavior synthesi lowpow vlsi system behavior synthesi low power microarchitectur synthesi performanceconstrain lowpow vlsi design highlevel synthesi easi testabl method automat data path synthesi new look logic synthesi address gener array access base modulu counter phideo ctr david bruni alessandro bogliolo luca benini statist design space explor applicationspecif unit synthesi proceed 38th confer design autom p641646 june 2001 la vega nevada unit state yoichi yuyama masao aramoto kazutoshi kobayashi hidetoshi onodera soc architectur design methodolog use unifunct heterogen processor array proceed 2004 confer asia south pacif design autom electron design solut fair p737742 januari 2730 2004 yokohama japan gang wang wenrui gong brian derenzi ryan kastner design space explor use time resourc dualiti ant coloni optim proceed 43rd annual confer design autom juli 2428 2006 san francisco ca usa hashem hashemi najafabadi procedur obtain behavior descript control logic nonlinear pipelin proceed 2004 confer asia south pacif design autom electron design solut fair p8691 januari 2730 2004 yokohama japan g economako p oikonomako panagopoulo poulaki g papakonstantin behavior synthesi systemc proceed confer design autom test europ p2125 march 2001 munich germani j ramanujam sandeep deshpand jinpyo hong mahmut kandemir heurist clock select highlevel synthesi proceed 2002 confer asia south pacif design automationvlsi design p414 januari 0711 2002 narasimhan j ramanujam fast approach comput exact solut resourceconstrain schedul problem acm transact design autom electron system toda v6 n4 p490500 octob 2001 apostolo kountouri christoph wolinski hierarch condit depend graph unifi design represent codesi highlevel synthesi system proceed 13th intern symposium system synthesi septemb 2022 2000 madrid spain g economako g papakonstantin p tsanaka agenda attribut grammar driven enviorn design autom digit system proceed confer design autom test europ p933934 februari 2326 1998 le palai de congr de pari franc c zawada n l seed p ivey continu high coverag selftest dynam reconfigur system parallel comput v28 n78 p11551178 august 2002 apostolo kountouri christoph wolinski effici schedul condit behavior highlevel synthesi acm transact design autom electron system toda v7 n3 p380412 juli 2002 alexand g dean softwar thread integr embed system display applic acm transact embed comput system tec v5 n1 p116151 februari 2006