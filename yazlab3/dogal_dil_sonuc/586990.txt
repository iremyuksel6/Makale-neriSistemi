take walk planar arrang present random algorithm comput portion arrang n arc plane pair intersect point use algorithm perform onlin walk insid arrang ie comput face curv given onlin manner cross comput level arrang outputsensit manner expect run time algorithm olambdat2mnlog n number intersect walk given arc similarli effici algorithm known gener case arc case line certain restrict case involv line segment algorithm improv best known algorithm h overmar j van leeuwen j comput system sci 23 1981 pp 166204 almost logarithm factor b introduct set n xmonoton arc plane comput whole part arrang induc arc one fundament problem comput geometri receiv lot attent recent year sa95 one basic techniqu use problem base random increment construct vertic decomposit arrang see by98 exampl interest comput part arrang eg singl face zone random increment techniqu still use requir nontrivi modif intuit ad complex caus need trim part plane algorithm advanc wast energi region longer relev fact requir impli algorithm know advanc region interest stage random increment construct variat theme exist algorithm cope effici follow onlin scenario start point find face f contain p0 point p start move trace connect curv fptg t0 walk continu wish keep track face contain current point work support grant usisra binat scienc foundat work part author phd thesi prepar telaviv univers supervis prof micha sharir school mathemat scienc tel aviv univers tel aviv 69978 israel sarielmathtauacil httpwwwmathtauacil sariel pt collect face constitut zone curv pt howev function pt assum known advanc may chang cross new face abruptli chang direct middl face see bdh97 applic scenario aris work awar deal problem effici due overmar van leeuwen ovl81 appli case line simpl modif case segment well comput walk determinist log 2 n time insid arrang n line number intersect walk line done maintain dynam intersect halfplan correspond current face algorithm ovl81 somewhat complic probabl practic actual implement paper propos new random algorithm comput zone walk gener arrang arc t2 nm log n expect time t2 nm maximum length davenportschinzel sequenc order sa95 new algorithm interpret third onlin altern algorithm ceg dbds95 algorithm rather simpl appear practic matter fact current implement experi variant algorithm applic new algorithm present new algorithm comput level arrang arc comput singl level t2 n log n expect time complex level result improv almost logarithm factor best previou result ovl81 case line case gener arc awar similarli effici previou result paper organ follow section 2 describ algorithm section 3 analyz perform section 4 mention applic algorithm includ comput singl level conclud remark given section 5 2 algorithm section present algorithm perform onlin walk insid planar arrang random increment construct zone use oracl given set n xmonoton arc plane pair arc intersect time fix constant denot arrang name partit plane face edg vertic induc arc see sa95 detail assum gener posit mean three arc common point xcoordin intersect endpoint arc pairwis distinct vertic decomposit denot vd partit plane vertic pseudotrapezoid obtain erect two vertic segment vertex ie point intersect pair arc endpoint arc extend either reach arc otherwis way infin see by98 detail concern vertic decomposit simplifi though slightli abus notat refer cell vd trapezoid select r order sequenc distinct element slight abus notat also denot r unord set element let oe denot set select permut let denot subsequ consist first element comput decompos arrang vd done follow pick random permut comput increment decompos arrang vd insert ith arc vd comput district vd igamma1 set trapezoid vd igamma1 intersect split trapezoid o1 trapezoid trapezoid intersect interior sa95 final perform pass newli creat trapezoid merg vertic trapezoid adjac ident top bottom arc merg step guarante result decomposit vd independ insert order element let fl curv walk select r 2 let z fl r denot zone fl ar set face ar nonempti intersect fl let flvd denot union trapezoid cover z goal comput assum moment suppli oracl os delta decid constant time whether given vertic trapezoid delta flvd equip oracl comput flvd fairli easi use variant random increment construct outlin algorithm depict figur 1 present algorithm conceptu level algorithm shall actual use given help us describ analyz actual onlin algorithm shall describ later note set trapezoid maintain algorithm ith iter superset flvd might trapezoid c longer z howev impli trpaezoid elimin first time arc belong conflict list handl moreov algorithm compzonewithoracl augment comput histori dag sa95 whose node trapezoid creat algorithm trapezoid destroy execut algorithm point trapezoid creat let ht fl denot structur ith iter algorithm definit trapezoid creat split oper compzonewithoracl call transient trapezoid later merg iter form larger trapezoid trapezoid gener compzonewithoracl final transient rank rankdelta trapezoid delta maximum indic j arc contain bottom top edg delta permut denot ddelta defin set final trapezoid delta minim set delta 2 vd easi verifi jddeltaj 4 also defin ddelta transient trapezoid delta minim set delta trnasient incrament construct vd easi verifi jddelta 6 index indexdelta trapezoid delta minimum ddelta trapezoid delta denot cldelta conflict list delta set arc intersect delta interior let nextdelta denot first element cldelta accord order trapezoid delta gener compzonewithoracl merg larger trapezoid denot fatherdelta trapezoid delta gener vertic side algorithm compzonewithoracl input set n arc curv fl oracl output flvd begin choos random permut 1 n delta 2 int splitdelta oper split vertic trapezoid delta cross arc constant number vertic trapezoid dbvkos97 new trapezoid cover delta intersect interior end merg adjac trapezoid temp top bottom arc let temp 1 result set trapezoid let temp 2 set trapezoid temp 1 flvd comput set use jt emp 1 j call end return c n compzonewithoracl figur 1 random incrament algorithm construct zone walk arrag ment arc use oracl vertic trapezoid delta call splitter splitter transient incid intersect point endpoint induc vertic edg contain mean two trapezoid adjac transient merg larger final trapezoid figur 2 illustr definit easi verifi trapezoid delta transient least one bound splitter transient thu one decid whether trapezoid transient inspect splitter constant time onlin algorithm construct zone let us assum random permut fix advanc note predetermin ht key observ onlin algorithm order construct specif leaf ht fl maintain entir dag suffic comput part dag lie path connect leaf root ht fl might sever path sinc structur dag tree facilit comput maintain partial histori dag node two type final node node whose correspond trapezoid appear ht fl l 1 l 2 l 3 l 4 l 5 figur 2 illustr defint transient splitter thu 0 transient rank ii transient node leav whose correspond trapezoid transient name intern node copi ident node ht fl whose correspond trapezoid final leav might transient intuit store portion ht fl comput explicitli far transient leav delimit porit ht fl expand yet insid node also maintain conflict list correspond trapezoid suppos wish comput leaf ht fl contain given point p first locat leaf contain p done travers path start root go downward step child current trapezoid contain p requir o1 time outdegre node ht fl bound constant depend end either reach final leaf requir leaf ht fl encount transient leaf v latter case need expand v first step replac v corespond node v ht fl obtain merg transient trapezoid v adjac transient trapezoid form final trapezoid associ v assum moment suppli method describ shortli gener transient trapezoid whose union form final trapezoid store v ht fl follow merg transient trapezoid new final trapezoid delta ii comput conflict list cldelta conflict list transient trapezoid 1 iii comput first element delta cldelta accord permut iv comput transient trapezoid final gener delta split delta gener o1 new trapezoid overal requir ok number transient trapezoid merg l total length conflict list transient trapezoid thu upgrad transient node v final node v denot oper expandv continu go pass child delta contain p repeat recurs procedur child reach desir leaf ht fl contain p let newli creat trapezoid transient one splitter must transient let denot transient splitter let us assum right edg impli either top arc bottom arc caus split gener particular next f either top bottom arc f denot trapezoid gener perform merg conflict list linear time one may use either hashtabl bitvector one maintain conflict list consist order see by98 comput transient trapezoid 0 lie right take te midpoint p perform pointloc queri p pointloc process alway go trapezoid delta contain p interior left edg stop soon encount transient trapezoid 0 left edg ident right edg happen 0 top bottom edg name stop intuit trapezoid 0 rank smaller rank left edg longer right edg first time 0 indent connect edg top bottom edg ident name rank continu process collect adjac transient trapezoid use pointloc queri midpoint transient splitter two extrem splitter left right nontransi take union trapezoid new expand trapezoid see figur 2 cours pointloc process might forc go part ht fl appear yet case comput part onlin manner perform expand call relev transient trapezoid might encount go thu process turn transient trapezoid final trapezoid recurs process might quit substanti let g denot adjac graph vd graph vertex trapezoid vd edg connect two vertic correspond trapezoid share common vertic side moreov gener posit assumpt vertex g degre 4 easi verifi connect compon g correspond face perform pointloc queri describ point p comput node v g whose trapezoid delta v contain p furthermor carri pointloc queri similar use expand oper comput node u g inde pointloc queri travers reach leaf u ht fl ie conflict list correspond trapezoid empti node u node g adjac v ie uv edg g repeat process perform df g correspond entir face contain p let fl curv onlin walk whose zone wish comput consid fl direct curv suppli us user function escapepoint fl function escapepoint fl p delta receiv input point p 2 fl trapezoid delta contain p output next intersect point fl delta follow p reach end fl function return nil assum although crucial algorithm fl intersect thu given walk fl comput zone algorithm depict figur 3 note time algorithm termin final part contain ht fl proper inclus might aris see remark 36 analyz perform algorithm first bound overal expect time requir comput ht fl done bound expect run time compzonewithoracl appropri model computaiton next bound addit time spent algorithm travers adjac trapezoid ie time spent perform pointloc queri remark 21 skip expans face contain current point p compzoneonlin get effici algorithm comput walk might case suffici algorithm compzoneonlin input set n arc start point p walk function escapepoint fl repres walk output decompos zone fl begin choos random permut partial histori dag root correspond whole plane leafht leaf ht fl whose associ trapezoid contain p path ht fl v root exist comput face f contain delta v flvd add output zone z comput v next leaf ht fl done perform pointloc queri describ text enlarg accordingli comput face f delta v flvd comput alreadi add output zone z return z compzoneonlin figur 3 algorithm construct zone walk arrag arc onlin manner 21 correct section tri prove correct compzoneonlin observ 22 execut compzoneonlin union trapezoid leav form pairwis disjoint cover plane vertic trapezoid corollari 23 conflict list comput trapezoid delta procedur compzoneonlin list arc cross delta proof induct step compzoneonlin observ region delta gener cover delta thu union conflict list must contain conflict list delta corollari 24 trapezoid delta creat compzoneonlin curv ddelta appear curv k delta lemma 25 pointloc queri middl transient splitter never fail name queri alway gener transient trapezoid whcih adjac current transient trapezoid save top bottom arc proof let current transient trapezoid let transient splitter let p point locat middl assum without loss gener right edg pointloc queri must end trapezoid delta current node contain left edg point algorithm refin delta go perform sequenc split expans oper sequenc trapezoid creat visit p left side comput hunt transient trapezoid adjac first note process perform insert arc endpoint interior sinc either contradict gener posit assumpt impli transient splitter let delta trapezoid rank maximl clearli left edg delta must contain otherwis arc l igamma1 intersect interior impli comput conflict list incorrect contradict coroallari 23 thu must top bottom arc impli left side delta conclud pointloc process comput delta definit 26 permut let hist hist denot historydag gener comput whole vertic decomposit vd increment construct insert curv order lemma 27 final trapezoid delta creat expand procedur execut compzoneonlin exist 0 delta trapezoid vd matter fact proof induct depth node depth node defin length longest path root node inde base induct node depth 0 must root comput initi algorithm thu trapezoid vd 0 let delta final trapezoid depth k gener directli trapezoid procedur expand let final trapezoid split gener induct hypthesi f trapezoid vd l corollari 23 conflict list f comput correctli final trapezoid vd namley nextfath otherwis transient expans comput sever transient trapezoid use pointloc queri note pointloc queri perform place point transient splitter name soon encount nontransi splitter abort expans direct thu must two arc floor ceil otherwis either algorithm perform pointloc middl nontrnasi splitter comput conflict list incorrect let clearli delta trapezoid two splitter nontransi claim two splitter delta induc intersect index gener father split caus father conflict list comput correctli induct hypothesi moreov left splitter delta either empti ie delta left vertic side intersect point final final adjac intersect point induc defin three arc must appear sm similarli right splitter delta final defin three arc appear sm thu delta trapezoid intersect arc sm interior top bottom arc belong sm two splitter final defin arc sm impli delta vd sm lemma 28 final node comput compzoneonlin appear ht fl proof let delta final trapezoid comput compzoneonlin trapezoid delta gener sequenc recurs call expand let set final trapezoid creat direcli recurs call order accord recurs call order let l trapezoid delta 1 creat perform pointloc queri point p appear zs sinc zs i1 moreov delta i1 comput comput delta must point p lie insid vertic trapezoid comput delta i1 initi pointloc queri must also lie insid delta i1 impli p 2 zs l thu follow delta i1 appear ht fl l i1 induct follow delta k 2 ht fl 3 analysi 31 construct histori dag follow analyz perform compzonewithoracl assum maintain trapezoid conflictlist store set arc cross thu cost oper trapezoid proport size conflict list also assum call oracl take o1 time lemma 31 algorithm compzonewithoracl comput zone fl vd t2 n log n expect time expect number trapezoid gener t2 n proof proof straightforward adapt proof ceg omit easi detail observ 32 trapezoid comput compzoneonlin either final trapezoid comput compzonewithoracl thu appear ht fl transient trapezoid split trapezoid ht fl lemma 33 expect number transient trapezoid gener compzoneonlin t2 n expect total size conflict list t2 n log n proof final trapezoid gener compzoneonlin might split o1 transient trapezoid final trapezoid comput compzoneonlin also comput compzonewithoracl lemma 31 expect number trapezoid t2 nm second part lemma follow similar argument definit 34 curv fl local xmonoton decompos insid face constant number xmonoton curv theorem 35 algorithm compzoneonlin comput zone fl t2 n log n expect time provid fl local xmonoton curv proof time spent compzoneonlin bound time requir construct histori dag time spent maintain conflict list trapezoid time spent perform pointloc queri move one trapezoid anoth flvd lemma 31 33 expect time spent maintain conflict list trapezoid comput algorithm t2 n log n sinc total time spent handl conflict list proport total length lemma 33 expect total size conflict list t2 n log n moreov depth histori dag construct algorithm olog n probabl polynomi close 1 mul94 thu expect time spent directli perform singl pointloc queri ignor time spent maintain conflict list move one trapezoid next olog n curv fl local xmonoton impli intersect splitter trapezoid flvd o1 time thu expect number pointloc queri perform algorithm proport expect number transient trapezoid creat plu om lemma 33 expect run time remark 36 note compzonewithoracl comput zone fl vd fact might comput trapezoid delta 2 flvd intersect zone fl flvd particular trapezoid delta comput compzoneonlin slack analysi current know whether exploit improv analysi algorithm suspect remark 37 result type awar classic result due overmar van leeuwen ovl81 maintain dynam convex hull n point plane olog 2 n time insert delet oper dual variant result maintain intersect halfplan use perform walk insid line arrang determinist log 2 n time number intersect walk line algorithm ovl81 requir somewhat involv rebalanc tree repres current intersect halfplan algorithm somewhat simpler faster appli gener arrang segment gener arc awar result type literatur cours curv fl known advanc simpl sens one comput quickli intersect arc comput singl face modifi arrang proof gener planar zone theorem sa95 theorem xx use algorithm dbds95 ceg 93 algorithm slightli simpler algorithm theorem 35 although expect perform howev algorithm useless onlin walk applic section present sever applic algorithm compzoneonlin 41 comput level arrang arc subsect show modifi algorithm previou section comput level arrang xmonoton arc definit 41 let set n xmonoton arc plane pair intersect time fix constant assum gener posit level point plane number arc lie strictli consid closur l set point arc level l 0 l n e l xmonoton necessarili connect curv polygon case line segment call level l arrang xcoordin vertic line intersect less l line consid e l undefin level fundament structur comput combinatori geometri subject intens research recent year see aacs98 dey98 tt97 tt98 tight bound complex singl level even arrang line prove surprisingli hard obtain current best known upper bound case line onl1 13 dey98 lower bound omegagamma n log l bound class arc first note set line know leftmost ray belong e l level l local defin move left right along e l time encount intersect point vertex chang line travers also depict figur 4 particular comput level e l 3 n use compzoneonlin procedur use comput level arrang gener arc nonloc behavior watch jump discontinu level caus endpoint arc appear current level figur 4 first level arrang segment vertic edg show jump discontinu level part level current level reach endpoint arc see figur 4 see detail concern handl jump follow let l 0 l n prescrib paramet let e l denot level l arrang follow adapt compzoneonlin set rather straightforward includ sake complet sort endpoint arc x coordin time walk reach xcoordin next endpoint updat e l jump next arc need addit work requir log n time walk maintain invari top edg current trapezoid part l comput first trapezoid walk comput intersect level l yaxi done sort arc accord intersect yaxi let 0 start point perform pointloc queri p 0 virtual histori dag comput start trapezoid delta 0 walk right delta 0 comput part e l lie right yaxi inde let delta current trapezoid maintain algorithm top edg part e l let pdelta denot top right vertex delta perform pointloc queri partial histori dag comput trapezoid vd contain pdelta gener posit assumpt number trapezoid 6 number materi pdelta lie intersect two xmonoton arc inspect set trapezoid one decid e l continu right delta determin next trapezoid e l roof algorithm set delta trapezoid algorithm reach xcoordin endpoint arc updat e l jump right endpoint arc lie level left endpoint lie level name set delta trapezoid lie current delta algorithm continu manner reach last edg e l algorithm perform symmetr walk left yaxi comput portion level let complevel denot modifi algorithm summar result theorem 42 algorithm complevel comput level l t2 n expect time remark 43 sinc complevel onlin use comput first 0 point e l expect t2 n 0 log n time remark 44 straightforward extens complevel allow us comput connect path within union ie restrict walk arc onlin manner random expect time t2 n log n number vertic path extend version also handl jump adjac arc walk 42 applic subsect provid addit applic compzoneonlin theorem 45 let l set n line plane let prescrib constant one comput 1rcut al 1 8r random expect time log n ffn invers ackermann function sa95 proof follow plug algorithm theorem 42 remark 43 algorithm describ hp98 discuss cut small asymptot size applic see mat98 hp98 remark 46 theorem 45 improv previou result hp98 almost logarithm factor remark 47 comput level l arrang gener arc clip arc portion level suppli clip arc comput arrang level l omn log n r time complex level l r complex first l level thu comput first l level t2 mn log nr expect time use random increment construct mul94 improv previou result ervk96 comput portion arrang log n note run time output sensit byproduct techniqu compzoneonlin abil perform pointloc queri use partial histori dag mechan definit 48 point set p set arc denot connect polygon set ii number intersect arc minimum let wm denot number intersect set interpret minimum span steiner tree p metric intersect arc lemma 49 given set n arc plane one answer pointloc queri set p point onlin manner overal expect time answer queri t2 n log n time proof precomput random permut let partial histori dag answer pointloc queri comput relev part histori dag vd compzoneonlin time algorithm termin contain flvd howev expect total weight trapezoid zs t2 n logn lemma 31 bound overal expect queri time remark 410 result lemma 49 somewhat disappoint sinc wm aga91 case line face comput roughli 23 23 ams98 ie j awar algorithm better run time algorithm lemma 49 case line queri point given onlin fashion current case gener arc better bound known complex face arrang n arc see egp algorithm lemma 49 simpl favor addit properti adapt name wm smaller ie queri point close togeth overal queri time improv furthermor alot queri close togeth first queri slow later one fast sinc later queri use part path alreadi exist partial histori dag conclus paper present new random algorithm comput zone planar arrang onlin fashion algorithm first effici algorithm case planar arc perform faster nearli logarithm factor algorithm ovl81 case line segment consider simpler also present effici random algorithm comput level arrang arc plane whose expect run time faster previou algorithm problem main result paper reli applic pointloc queri comput relev part offlin structur ie histori dag author believ techniqu addit applic particular approach might use also algorithm higher dimens leav open question research acknowledg author wish thank pankaj agarw danni halperin micha sharir help discuss concern problem studi paper relat problem r level arrang line intersect decomposit algorithm planar arrang area bisector polygon forc equilibria programm vector field algorithm geometri comput face arrang line segment lazi random increment construct comput geometri algorithm applic improv bound planar kset relat problem algorithm combinatori geometri arrang curv plane topolog optim algorithm construct cut theori practic complex mani cell overlay mani arrang comput geometri introduct random algorithm mainten configur plane character planar graph pseudolin arrang cut pseudoparabola segment tr ctr nisheeth shrivastava subhash suri csaba tth detect cut sensor network proceed 4th intern symposium inform process sensor network april 2427 2005 lo angel california naoki katoh takeshi tokuyama note comput peak klevel parametr span tree proceed seventeenth annual symposium comput geometri p241248 june 2001 medford massachusett unit state