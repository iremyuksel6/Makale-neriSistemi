reduc virtual call overhead java vm justintim compil java objectori languag use virtual method support extens reus class unfortun virtual method call affect perform thu requir effici implement especi justintim jit compil done inlin cach type feedback solut use compil dynamicallytyp objectori languag self 1 2 3 virtual call overhead much critic perform java inlin cach virtual call would otherwis translat indirect jump two load translat simpler direct jump singl compar type feedback combin adapt compil virtual method inlin use check code verifi target method equal inlin onethi paper evalu perform impact techniqu actual java virtual machin new open sourc java vm jit compil call latt 4 also discuss engin issu implement techniquesour experiment result specjvm98 benchhmark indic monomoprh inlin cach polymorph inlin cach achiev speedup much geometr mean 3 9 respect type feedback improv polymorph inlin cach even degrad perform program b introduct java recent creat objectori program languag 5 objectori program languag support virtual method allow differ code execut object dierent type call virtual method call java incur perform penalti target call determin runtim base actual type object requir runtim type resolut exam ple extra code need gener justintim jit compil mani java jit compil like kae 6 cacao 7 latt 8 virtual method call translat sequenc load follow indirect jump rather direct jump static method call dynamicallytyp objectori languag self howev virtual call implement use simpl sequenc load follow indirect jump like java 1 furthermor virtual call much frequent java two aggress techniqu employ reduc virtual call overhead inlin cach type feedback techniqu virtual method call translat simpler sequenc compar direct jump even inlin type check code although techniqu certainli applic java littl known perform impact sinc virtual method call less frequent less costli java techniqu involv addit translat overhead import evalu technqu separ sinc result self may appli paper evalu techniqu actual java jit compil compil includ open sourc java virtual machin call although implement techniqu straightforward trade os optim opportun want discuss paper also provid detail analysi perform impact java program rest paper organ follow chapter review method call java summar virtual method call mechan use jvm chapter 3 describ implement inlin cach type feedback latt chapter 4 show experiment result relat work describ section 5 summari follow section 6 background 21 method invoc java java program languag provid two type method instanc method class method 9 class method invok base class declar via invokestat bound static jit compil know method invok compil time instanc method hand alway invok respect object sometim call receiv via invokevirtu actual type object known runtim ie bound dynam jit compil gener determin target compil time instanc method bound static though exampl nal method privat meth od method nal class instanc method call invokespeci bytecod eg instanc method special handl superclass pri vate instanc initi 9 gener method invoc incur overhead creat new activ record pass ar gument case dynam bind addit overhead nding target method call method dispatch head 22 latt jit compil virtual method tabl latt virtual machin abl execut java bytecod includ novel jit compil target risc machin specic ul trasparc jit compil gener code good qualiti clever map java stack operand regist neglig overhead 8 also perform tradit optim common subexpress elimin loop invari code motion addit runtim compon latt includ thread synchron 10 except handl 11 garbag collect 12 optim result perform latt competit sun hotspot 13 sun jdk 12 product releas 14 maintain virtual method tabl vmt load class tabl contain start address method dene class inherit superclass due use singl inherit java start address method place oset n virtual method tabl class also place oset n virtual method tabl subclass class consequ oset n translationtim constant sinc object includ pointer method tabl correspond class virtual method invoc translat indirect function call two load load virtual tabl index tabl obtain start ad dress indirect call staticallybound method call latt gener direct jump call site inlin target method unless bytecod size huge invoc overhead would neglig inlin depth larg prevent recurs call inlin innit 3 inlin cach type feedback section review techniqu inlin cach type feedback describ implemen tation use exampl class hierarchi figur 1 throughout section class b c subclass addit eld well one inherit class class b inherit method getfield1 class class c overrid assembl code section sparc assembl class int field1 int getfield1 return field1 class b extend int field2 int getfield2 return field2 class c extend int field3 int getfield1 return 0 int getfield3 return field3 figur 1 exampl class hierachi 31 inlin cach 311 monomorph inlin cach jit compil translat objgetfield1 figur 2a know version getfield1 actual call obj object class c well class b even class c exist jit compil sure whether getfield1 call class c dynam load later vmt call translat sequenc loadloadindirect jump shown figur 2b index mean oset vmt denot translationtim constant void dummi o0 contain object obj ld o0 g1 index vmt ld g1index g1 b figur 2 exampl virtual call java correspond vmt sequenc inlin cach total dierent method dispatch mechan inlin address last dispatch method call site figur 3a show translat code use monomorph inlin cach mic call site jump system lookup routin call method dispatch via stub stub code set regist g1 index thu method dispatch determin call method call empti inlin cach histori target method yet call execut rst time method dispatch nd target method base type receiv translat translat yet updat call site point translat method prepend type check code 1 figur 3b show state inlin cach rst encount receiv object class inlin cach includ histori one method invoc target method detail type check code shown gure 4 call trampolinecod mov o7 g2 mov indix g1 trampolin code translat method methoddispatch call dispatch translat method failhandl typecheck code bne failhandl cmp g2 avmt ld o0 g2 empti inlin cach b monomorph inlin cach call agetfield1 figur 3 monomorph inlin cach receiv dierent type encoun tere state inlin cach chang receiv encount fail handler oper like method dispatch nd target method translat translat yet updat call site 312 polymorph inlin cach polymorph inlin cach pic dier mic deal failur type check instead updat call site repeatedli creat pic stub code make call site point stub code pic stub code compos sequenc com pare branch direct jump instruct previous encount receiv type correspond method address inlin figur 5a show statu call site correspond pic stub code call site encount object class class c detail pic stub code shown figur 6 possibl method multipl type check code due inherit type check code separ correspond method bodi avmtvmt pointer class translationtim constant sethi hiavmt g3 load 32bit constant valu g3 loavmt g3 cmp g2 g3 compar two vmt pointer bne failhandl branch failhandl code two vmt equal mov o7 g2 delay slot instruct check code locat front method bodi code requir jumptotarget call address agetfield1 mov g2 o7 prevent return back implement failhandl locat front code failhandl index call method vmt translationtim constant call failhandl call failhandl mov index g1 delay slot instructoin index valu pass fixup function via g1 regist figur 4 detail type check code translat method call picstub pic stub code ld o0 g1 ld g1indexg1 nop polymorph inlin cach translat method call vmt code vmt code b handl megamorph site figur 5 polymorph inlin cach practic pic stub code grow without limit number entri pic stub code exce predetermin valu correspond call site call megamorph site use vmt style code instead sinc code depend index valu vmt share among mani call site figur 5b explain megamorph site handl although mic use self megamorph site vmtstyle mechan use self think vmtstyle code appropri megamorph site mic sinc latter may caus frequent updat call site frequent icach ush result sever variat pic space tight pic stub share among ident call site 2 type pic call share pic former type call nonshar pic distinct requir pic stub code contain count code type test hit reorder base frequenc reduc number type test need nd target reorder perform pic stub reorder without count code use call count pic also possibl reorder perform period pic stub alway 2 possibl set target method call call site ident mov o7 g1 save return address g1 regist avmtvmt pointer class translationtim constant sethi hiavmt g3 load 32bit constant valu g3 loavmt g3 cmp g2 g3 compar two vmt pointer bne next1 nop delay slot instruct call address agetfield1 jump agetfield1 two vmt equal mov g1 o7 set correct return address cvmtvmt pointer class c translationtim constant next1 g3 locvmt g3 cmp g2 g3 bne next2 nop call address cgetfield1 mov g1 o7 next2 call fixupfailedcheckfromp call fixup function nop figur 6 detail pic stub code count code type pic call period pic 313 vmt vs inlin cach inlin cach favor vmt two reason first vmt mechan requir indirect jump easili schedul modern superscalar microprocessor 3 15 16 wherea inlin cach faster modern microprocessor branch predict second vmt provid inform call site inlin cach get inform receiv encoun tere though mic give last one inform use optim method inlin 32 type feedback although inlin cach reduc method dispatch overhead virtual call site call overhead 3 cost indirect jump higher ultrasparc due lack btb branch target buer still remain order reduc call overhead need inlin method idea type feedback 3 extract type inform virtual call previou run feed back compil optim type feed back virtual call inlin guard veri target method equal inlin method call condit inlin 321 framework type feedback implement type feedback base pic sinc provid accur inform call site mic vmt type feedback also requir adapt compil framework implement adapt version latt select method aggress optim base method run count method call rst time translat regist alloc tradit optim 4 virtual method call 4 optim even initi translat isol perform impact inlin fair comparison congur experi see section 41 within handl pic number time method call exce certain threshold retransl condit inlin also done 322 condit inlin compil decid whether call site inlin base statu inlin cach exampl call site gure 3b remain monomorph site retransl time inlin type check code follow objvmt avmt els call site point pic stub code one target method stub code condit inlin except time comparison base address receiv type exampl pic stub code figur 5a compos type check class class b class class c address getfield1 ident inlin method type check replac address check includ access vmt two load follow objvtmindex method getfield1 address agetfield1 loadload els frequenc inform type method avail use count pic improv allornoth strategi even though multipl receiv multipl target method inlin call site type test address test one case domin among case pic stub current criteria valu decid whether case domin 80 count type test hit pic stub exce 80 total count pic stub inlin type check code 323 static type predict call site locat untaken execut path initi run inform probabl receiv type collect even retransl howev class object virtual call made subclass translat time easili predict receiv type would class runtim althouth java allow dynam class load found predict quit accur program follow case exampl inlin call site even inform inlin cach retransl 324 inlin heurist singl vs multipl previou section inlin method virtual call site possibl call site two target method neither domin case might lose inlin opportun restrict number inlin method call site howev found case java program use test program 95 virtual call site call singl calle enabl inlin multipl method call site increas number inlin virtual call signicantli 4 experiment result section evalu perform impact inlin cach type feedback 41 experiment environ benchmark compos specjvm98 benchmark suit 5 17 tabl 1 show list program short descript benchmark descript byte compress compress util 24326 jess expert shell system 45392 213 javac java compil 92000 222 mpegaudio mp3 decompressor 38930 228 jack parser gener 51380 tabl 1 java benchmark descript translat bytecod size tabl 2 list congur use experi ment lattevmt lattem lattep except handl virtual call use vmt mic pic respect lattetf inlin virtual call use type feedback adapt version latt initi translat ident lattep describ section 32 variat pic denot variat surround 5 200 check exclud sinc correct test bracket exampl share pic denot pic count pic picc period pic picp default version pic denot pic distinct need system descript virtual call handl vmt virtual call handl mic virtual call handl pic virtual call inlin use type feedback retransl time tabl 2 system use benchmark test machin sun ultra5 270mhz 256 mb memori run solari 26 test singleus mode ran benchmark 5 time took minimum run time 6 includ jit compil overhead garbag collect time 42 characterist virtual call tabl 3 show characterist virtual call tabl vcall mean total count virtual call mcall mean total count monomorph call starget mean total count virtual call target method one runtim 85 virtual call monomoph call 90 virtual call one target method program like 213 javac 227 mtrt 228 jack mani call site target method one even though multipl receiv tyep thu expect address check inlin may eec tive program also expect compress much aect virtual call implement sinc number virtual call extrem small 43 analysi monomorph inlin cach tabl 4 show characterist mic tabl vcall mean total count virtual call pcall mean total count call call polymorph call site miss mean total count type check miss trend miss ratio program 209 db 228 jack low miss ratio compar v call type check miss common 202 jess 213 javac sinc type check miss requir invalid part icach miss ratio greatli 6 specjvm98 benchmark total elaps run time compar specjvm98 metric aect overal perform expect perform 202 jess 213 javac may wors monomorph inlin cach 44 analysi polymorph inlin cach tabl 5 6 7 8 show averag number type check pic stub congur pic column tabl divid maximum number possibl entri pic stub threshold valu determin reorder take place valu appli picc picp although reorder take place former take place period latter threshold valu zero mean count rst glanc nd number averag type check small even though monomorph site includ number averag number calcul everi inlin cach includ monomorph site number even closer 1 howev count enabl number less 2 everi case tabl 5 6 clear count pic eectiv reduc number type check pic stub except 228 jack although number gener reduc threshold valu increas unchang even increas program seem satur certain valu simpli increas threshold guarante improv 228 jack dierent characterist program come singl polymorph site 7 account half total polymorph call exhibit strang behavior call site switch polymorph inlin cach monomorph inlin cach newli encount type receiv repetit thousand time thereaft former type use repetit 1 million time default pic scheme without count better count case also see eect inaccuraci caus share pic stub tabl 5 6 although seem natur nonshar version would accur share version dierenc appar noncount version congu ration number tabl 5 better tabl 6 except 213 javac pic stub chang vmtstyle code share increas number entri howev dierenc lower 03 case 7 call site indexof method javautilvector class call equal method benchmark vcall mcall starget mcallvcal stargetvcal compress 129 116 118 0897 0912 jess 34306 27718 28435 0808 0829 222 mpegaudio 10025 8781 8841 0876 0882 228 jack 17247 14094 16959 0817 0983 geomean 0854 0904 tabl 3 characterist virtual call benchmark vcall1000 pcall1000 miss1000 missvcal misspcal compress 129 13 058 0045 0433 jess 34306 6587 3201 0093 0486 222 mpegaudio 10025 1244 54 0005 0044 tabl 4 characterist monomorph inlin cach tabl 7 8 shown comparison tabl 5 6 although period reorder pic hard use real implement alway incur count overhead involv loadaddstor sequenc seen somewhat ideal cong urat term number type check dierenc period version nonperiod version lower 02 program thu qualiti count pic quit accept tabl 9 show space overhead pic nonshar share version tabl n mean number pic stub max mean possibl maximum number entri pic stub overhead seem small program except 213 javac share version greatli reduc overhead sinc share pic stub degrad perform sever program share pic use space tight 45 analysi type feedback tabl 10 11 12 show eect type feedback term number inlin virtual call base system four dierent pic variat pic picsc pic picc use main purpos pic provid prole inform larger number maximum entri pic 10 use threshold count pic set 1000 order aect accuraci much 8 gener number inlin virtual call reduc retransl threshold increas although accur prole inform avail high retransl threshold low translat threshold opportun miss delay retransl seem high addit number inlin call mani program constant regardless type pic two rea son one possibl method big inlin case inlin method relat inlin heurist beyond scope paper possiblil singl method domin call site howev case specjvm98 benchmark shown follow section program like 213 javac 227 mtrt aect type pic use count version prefer noncount version call site multipl receiv type thu inlin address check inlin type check count inform avail one receiv type domin call site involv two target method thu inlin implement inlin one method domin 213 javac uenc eect ie amount type check inlin address check inlin increas 8 sinc pic reus call site method inlin done valu larg benchmark pic compress 1540 1480 1498 1526 1540 1540 1480 1498 1526 1540 jess 1517 1488 1507 1486 1486 1517 1488 1507 1486 1486 222 mpegaudio 2120 1359 1267 1266 1269 2120 1359 1267 1266 1269 228 jack 1209 1800 1800 1800 1800 1209 1800 1800 1800 1800 tabl 5 averag number type check nonshar count pic lattepicc benchmark pic compress 1790 1693 1711 1728 1769 1790 1693 1711 1728 1769 jess 1579 1570 1578 1576 1576 1579 1570 1578 1576 1577 222 mpegaudio 2161 1358 1267 1267 1269 2161 1358 1267 1267 1269 228 jack 1051 1980 1980 1981 1981 1398 1895 1895 1895 1895 tabl 6 averag number type check share count pic lattepicsc former eect domin 227 mtrt increas amount type check inlin almost decreas address check inlin 46 analysi inlin heurist tabl 13 14 15 show total number inlin virtual call dierent inlin heurist inlin singl method call site inlin possibl method call site number column singl method inlin sum type check inlin address check inlin tabl previou section number column method inlin obtain inlin method encount initi run inlin inlin rule size depth 9 expect fact 90 virtual call site one target method littl improv term number inlin virtual call even though possibl method permit inlin 213 javac op portunit improv inlin multipl method call site think inlin method call site sucient program mani call site still remain inlin due factor like method size inlin depth 9 count version exclud sinc dierenc noncount version possibl method inlin share version also exclud sinc caus code explos 213 javac 47 perform impact inlin cach type feedback tabl show total run time tot program 4 congur latt translat overhead tr also includ total run time sinc littl dierenc run time dierent congur pic tf one instanc list exact congur like 1 pic nonshar count pic maximum number entri 5 reorder threshold 100 2 tf base nonshar count pic maximum number entri 10 reorder threshold 1000 retransl threshold whole mic improv perform latt geometr mean 30 pic 90 type feedback 74 compar latt vmt point previou section mic exhibit poor perform 202 jess 213 javac high ratio type check miss pic expect solv problem experienc mic expos program without sever degrad program improv perform almost program compar vmt howev type feedback seem eectiv 227 mtrt number inlin virtual call much larger program number benchmark pic compress 1480 1498 1526 1540 1480 1498 1526 1540 jess 1366 1366 1367 1367 1366 1367 1367 1367 222 mpegaudio 1264 1265 1267 1270 1264 1265 1267 1270 228 jack 1019 1019 1019 1020 1019 1019 1019 1020 tabl 7 averag number type check nonshar period pic lattepicp benchmark pic compress 1693 1711 1728 1769 1693 1711 1728 1769 jess 1429 1429 222 mpegaudio 1265 1266 1267 1269 1265 1266 1267 1269 228 jack 1030 1030 1030 1031 1114 1114 1114 1114 tabl 8 averag number type check share period pic lattepicsp inlin virtual call program seem low compens retransl overhead creas translat time inlin overhead creas code size regist pressur sinc perform type feedback depend inlin heurist well retransl framework care implement measur eect type feedback correctli implement could improv point howev result 227 mtrt give us expect eect type feedback 227 mtrt getter method getx geti getz frequent perform benchmark greatli improv inlin meth od common code style use accessor method eectiv type feedback could 5 relat work work base polymorph inlin cach type feedback polymorph inlin cach studi ur holzl et al 2 self compil achiev median speedup 11 monomorph inlin cach type feedback propos ur holzl david ungar 3 implement type feedback self compil use pic improv perform factor 17 compar nonfeedback compil sinc virtual call frequent self also sinc default dispatch overhead much larger vmt use java achiev larger speedup furthermor measur compar execut time exclud translat time overhead relev studi done david detlef ole agesen 18 also target java use condit inlin propos method test ident address test howev mainli concentr inlin rather inlin cach use prole inform inlin virtual call gerald aigner ur holzl 19 implement op timiza sourcetosourc c compil use static prole inform inlin virtual call improv perform median 18 reduc number virtual function call median factor karel driesen et al 16 extens studi variou dynam dispatch mechan sever modern architectur mainli compar inlin cach mechan tablebas mechan employ indirect branch show latter perform well current hardwar also expect tablebas approach may perform well futur hardwar olver zendra et al 20 implement polymorph smalleiel compil also elimin use vmt use static variat pic inlin monomorph call site howev reli static type infer use runtim feedback benchmark nonshar share compress 6 536 536 5 512 512 jess 24 2368 2648 14 1708 1988 222 mpegaudio 25 3008 3008 228 jack 19 1856 1856 12 1380 1380 tabl 9 size pic stub code benchmark typecheck inlin 1000 addresscheck inlin 1000 jess 12036 12036 12036 12036 tabl 10 inlin call type feedback retransl threshold base experi c program brad caler dirk grunwald 21 propos use con version similiar type feedback except use static prole inform 6 conclus futur work implement inlin cach type feedback latt jit compil evalu techniqu although program suer frequent cach miss mic achiev speedup 3 geometr mean vmt polymorph inlin cach solv problem experienc mic without incur overhead elsewher achiev speedup 9 geometr mean vmt use count pic also test sever variat pic shown characterist pic java program count pic reduc averag number type check pic stub compar noncount version achiev averag number type check close period version within 02 program memori matter concern share pic save space reason degrad perform eect type feedback fulli shown studi overal perform even wors count pic although true program littl opportun improv term virtual call result partli appli optim select bene cial howev perform 227 mtrt mani virtual call small method greatli improv type feedback give us insight perform impact type feedback code style use abstract make call becom domin java program type feedback eectiv studi type feedback also expos prob lem adapt compil method inlin avoid degrad due type feedback import estim cost incur retransl inlin appli condit inlin hotspot r latt fast ecient java vm justintim com piler java languag speci kemal ebcio java virtual machin speci kemal ebcio kemal ebcio kemal ebcio java hotspot perform engin httpwww inlin virtual method gerald aigner ur h reduc indirect function call overhead c tr