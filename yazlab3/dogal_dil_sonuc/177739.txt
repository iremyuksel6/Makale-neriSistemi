coordin firstord multiparti interact firstord multiparti interact abstract mechan defin commun among set formal process role actual process particip firstord interact enrol role execut interact proceed role fill distinct process csp enrol statement serv guard altern command enrol guardschedul problem enabl execut firstord interact judici schedul role process current readi execut enrol guard present fulli distribut messageeffici algorithm enrol guardschedul problem first solut awar also describ sever extens algorithm includ gener role dynam chang environ process creat destroy run time nestedenrol allow interact nest b introduct multiparti interact set io action execut jointli number process must readi execut action action set occur attempt particip interact delay process particip avail action execut particip process continu local comput usual asynchron languag like csp ada support interact two process ever mani applic higher level abstract obtain permit interact among arbitrari number process exampl consid wellknown dine philosoph problem natur unit process interact set philosoph two neighbor fork ie multiparti synchron involv three process use distinguish zerothord multiparti interact particip fix advanc firstord multiparti interact particip may vari dynami calli exampl zerothord multicast interact process p send messag q r captur code research support nation scienc foundat grant ccr8704309r notat use base ip 7 8 b interact name x variabl local p q r respect interact describ action taken process engag interact eg x mean assign x nonloc valu mani exist construct multiparti interact zerothord includ share action 16 joint action 1 interact raddl 4 interact ip interact type 13 firstord multiparti interact abstract mechan defin activ among set role serv formal process param eter actual process particip interact enrol 1 role first consid partnersunnam enrol 9 process permit name potenti particip interact question scheme instanc interact activ role fill distinct process enrol commun manner describ interact notion script 9 team construct raddl ip support firstord multiparti interact consid multicast exampl defin firstord interact three role transmitt two recipi follow firstord interact 2cast role recipi 1 role recipi 2 z n francez r forman suggest new word en role mean enter role execut follow en rolement statement activ instanc firstord interact transmitterm2cast x2cast r enrol recipi 2 y2cast three process reus 2cast interact commun thu decis must made whether allow concurr activ firstord interact rad dle script firstord interact reentrant therebi permit concurr activ ip decis current left unspecifi paper also view firstord interact reentrant potenti concurr lead increas perform point n francez 5 absenc sequenti activ leav interact sole sourc process synchron howev also point 5 accompani proof system may becom complex light concurr activ csp multiparti interactionsboth zerothord firstordercan serv guard altern repetit command zerothord case interact statement appear guard execut particip agreement exampl consid follow program r execut q r agre execut action guardschedul problem zerothord interact elegantli character chandi misra one committe coordin 3 professor univers serv one committe member fix furthermor committe conven member present two committe common member conven simultan firstord case enrol statement appear guard process p execut set process includ p self agre fill role target interact 2 illustr consid follow program r u firstord interact role respect p execut en role 1 two process agre enrol 2 3 follow issu peculiar implement firstord guard ffl sinc particip firstord interact vari dynam determin set process togeth enrol instanc interact complex zerothord case fact show close relat maximum match problem 11 ffl instanc firstord interact concurr activ ffl one process enrol role failur one preclud other fill role thu firstord interact inher faulttoler distribut algorithm 17 3 2 13 15 multiparti interact guard schedul zerothord natur algorithm 3 2 15 employ fix coordin interact ip situat somewhat differ ip team abstract mechan multiparti interact zerothord construct ip enrol team delay process rather multiparti interact execut first within role 6 thu realiz concurr activ firstord interact toler failur coordin algorithm 17 13 employ mutual coordin among particip highli depend fact particip interact fix therefor straightforward way adapt algorithm firstord set summari technic result main contribut paper section 3 distribut algorithm enrol guard schedul problem first firstord solut awar algorithm admit possibl process upon reach altern command behav coordin firstord interact thu unlik zerothord algorithm permit concurr activ activ coordin also faulttoler coordin design advanc moreov algorithm low messag complex 6m messag per process per interact guard number process potenti enrol interact algorithm bipartit graph data structur use associ process potenti role coordin requir perform maximum match graph decid process schedul bestknown bound problem current 25 time n number node graph 11 section 5 show set process target one role interact one time maximum match safe avoid instead coordin decid process schedul linear time moreov use gener role argu restrict altern command quit palat practic section 6 consid partnersnam enrol enrol name particip firstord interact type enrol initi present context script 9 show gen eral enrol guard schedul set npcomplet even enrol statement act guard howev partnersnam enrol desir applic exampl process p may time desir multicast particular group g recipi ensur messag receiv process g p name exactli process recipi present two restrict name convent seem reason practic problem solv effici final section 7 extend algorithm work dynam chang environ process may creat destroy run time problem suggest 9 6 simpl model firstord multiparti interact consid distribut system set concurr process interact engag firstord multiparti interact interact 3 fix set ri role process enrol role r 2 ri fix set pr process potenti enrol role r let ie set process potenti enrol role assum ri pr finit known everi process pi time time process enter enrol ment phase readi enrol singl role set potenti role possibl differ interact defin quorum set enrol r g addit pair quorum requir componentwis mutual distinct p togeth leav enrol phase activ instanc p fill role r firstord guard schedul problem establish quorum involv mutual disjoint set process process current enrol phase 3 sequel unless state otherwis interact mean firstord type 3 descript algorithm assum underli network process complet connect via reliabl fifo commun channel process commun exclus messag pass furthermor messag timestamp process use timestamp maintain logic clock 14 31 overview process p enter enrol phase choos interact readi enrol attempt establish quorum p build quorum increment initi partial quorum readi assum role r g call coordin partial quorum tri captur process fill role role r p choos process p j pr send captur request p j readi assum role r will captur p request provid p set r j role p j readi assum p add pair p r 2 r j partial quorum howev request readi assum role wish captur p p must find anoth process role r succeed partial quorum contain quorum direct process quorum assum role quorum releas addit process may cap ture howev p determin role captur process abort attempt releas member partial quorum p anoth interact 0 readi enrol attempt build quorum 0 otherwis enter idl state wait captur reduc messag complex algo rithm allow coordin captur older process measur age process uniqu entri time obtain content processs logic clock enter current enrol phase 4 larger entri time process possess younger process allow coordin captur older process mean youngest process quorum assembl quorum prevent process wast mani messag attempt build quorum learn younger process yet readi ensur coordin establish quorum involv mutual disjoint set process process captur one coordin time obvious requir differ coordin may conflict conflict resolv use uniqu entri time obtain coordin techniqu also proven use implement dynam structur multiparti interact 12 conflict aris coordin attempt captur process alreadi belong anoth coordin conflict resolv favor older coordin order prevent coordin lock captur pro cess let older two coordin captureretain process say p content younger coordin find altern process role play p wait hope p eventu releas older coordin either older coordin could build quorum decid quorum exclud p coordin p wait captur process p j releas older coordin say captur request defer maintain wait ing relat either one follow occur finish succe abort coordin withdraw captur request p j success build quorum involv build quorum involv p j p j grant p captur request 4 entri time made uniqu addit consid process id show section 4 algorithm guarante quorum contain partial quorum p involv p prevent p coordin one quorum anoth given enrol phase assum p old enough win content allow p coordin mani quorum could sever limit system concurr fact show given enrol phase exist least k quorum involv mutual disjoint set process least k coordin establish quorum involv mutual disjoint set process 32 algorithm process p execut concurr two compo nent coord slave use coord realiz behavior p p act coordin partial quorum describ earlier slave behavior react captur request algorithm coordin commun exclus slave vice versa recal coordin p start partial quorum involv slave initi captur coord strategi resolv conflict guarante slave remain captur coord coord establish quorum enter idl state due inabl build quorum coord j attempt captur slave p j older allow captur slave howev p j younger coord win content retain slave therefor never case two compon get outof synch eg coord still busi build quorum slave alreadi advanc next enrol phase coord proce follow coord maintain follow variabl current partial quorum contain pair r p j readi assum role r slave j captur coord set pair p r p j readi assum role r slave j defer captur request coord r set slave coord request captur coord start quorumbuild activ process p enter enrol phase begin select interact process p readi enrol set readi assum role r g g coord execut follow procedur build quorum suc cess ie p contain quorum q coord send successi r j slave j p direct p j enrol role r j coord also releas addit slave may captur send slave releas messag withdraw captur request made slave send withdraw messag coord fail establish quorum releas everi captur slave except slave withdraw captur request made slave coord anoth yettobetri interact 0 continu attempt build quorum build activ becom idl procedur build quorum follow contain quorum q must involv vers coord fail build quorum ei ther exist role r everi slave pr request coord readi assum role everi slave pi either captur coord reject captur coord p contain quorum ffl coord yet succeed fail proceed conservativelybi wait slave process grant reject defer captur request aggress send new captur request slave process p r hope p readi fill role would assist coord reach quorum choic constitut fine tune algorithm conserv approach may result fewer messag aggress approach may give better respons time slave j grant coord defer request coord move pair form p r p slave j reject coord defer request coord delet pair coord wish captur anoth slave k add p k r send requestt slave k wait respons slave k entri time p respons coord add p k r p r 2 r respons defer r add p k rs otherwis noth meanwhil coord receiv switch messag captur slave j ask releas slave j coordin older coord wish captur slave j coord repli switch ok request move pair p slave proce follow slave maintain prioriti queue tripl p slave defer captur request highest prioriti given tripl smallest timestamp slave wait captor coord k establish quorum slave initi captur coord coord start quorumbuild ac tiviti slave receiv successi r coord k send tripl p queue ie defer request ject slave enrol role r ever coord k send releas messag slave without place p quorum slave delet queue tripl p smallest 0 set role p assum interact 0 slave grant oldest defer captur request consist strategi resolv conflict queue empti slave idl wait captur slave may also receiv requestt j 0 coordin coord j p readi enrol 0 p younger p j slave reject coord j request otherwis two case slave captur coordin grant coord j request 2 slave captur coord k p k older p j slave remain captur coord k insert tripl p prioriti queue send defer r 0 coord j r 0 set role p assum interact 0 els slave send switch coord k ask releas slave receiv confirm switch ok slave grant coord j request insert tripl p queue therebi defer coord k captur request also slave receiv withdraw coord l simpli delet coord l captur request queue algorithm coord slave given figur 1 2 respect togeth constitut algorithm firstord guard schedul problem algorithm present csplike repetit construct guard command number eas refer assum weakfair ie everi command whose guard continu enabl eventu exe cute note coordin slave process p logic separ guard command compon combin singl repetit construct figur 1 2 entri time process respect current enrol phase given variabl also variabl g repres set role p readi assum contain pair r p readi assum set r role g updat enrol phase reset p leav phase 33 exampl illustr algorithm behavior consid interact three role r 1 r 3 assum readi role r 1 r 2 p 5 r 3 furthermor entri time six process increas youngest follow give possibl scenario event six process 11 activ abort send releas slave j send withdraw slave j tri send releas slave activ fals 12 activ target recruit send r 13 activ contain quorum q gamma p send slave j send releas slave j send withdraw slave j activ fals 14 receiv yest r 0 slave j gamma r 2 r r 2 r p target els gamma skip receiv 0 slave j gamma target els gamma skip 16 receiv switch slave j gamma contain quorum send switch ok slave j els gamma skip 17 receiv defer r slave j gamma r 2 r f p target current partial quorum set pair p r p j readi assum role r slave j defer captur request coord r set slave p request captur activ flag true iff coord coordin quorum interact activ denot interact coord coordin target slave coord sent captur request yet receiv respons tri flag true iff coord tri establish quorum abort return true iff attempt build quorum fail ie either 9r 2 p contain quorum initi abort true command 11 appli recruit return slave process p j coord attempt captur return nil otherwis fewer messag return nil whenev 6 better respons time return slave process role r coord need process assum r figur 1 algorithm coord 21 receiv successi r coord j gamma p send queue enrol role 22 receiv releas coord j gamma captur fals 23 receiv requestt gamma queue captur gamma let captor p gamma repli repli send switch coord k swflag true gamma send defer coord j captur gamma repli repli els gamma send 24 receiv switch ok coord j gamma queue captur fals 25 receiv withdraw coord j gamma captor gamma captur fals queue repli gamma repli repli els gamma skip delet p j queue send coord j captor p j repli gamma repli repli repli let send defer repli swflag fals captur flag true iff slave captur slave set captur true upon enter enrol ment phase swflag flag true iff slave alreadi sent switch current captor coordin older slave captor wish captur slave captor tripl p slave captur entri time j coordin interact slave set captor p upon enter enrol phase queue prioriti queue tripl p captur request requestt defer slave highest prioriti given tripl smallest oldest j delet oper return tripl repli set coordin slave yet repli captur request figur 2 algorithm slave execut algorithm request captur slave 3 ject issu request slave 4 reject p 1 older p 3 p 4 coord 1 releas slave 1 idl ffl similarli coord 2 coord 3 releas companion slave becom idl reject slave 5 slave 6 captur slave 1 coord 6 request captur slave 4 belong coord 4 request defer slave 4 younger p 4 request captur slave 5 slave 6 reject releas slave 1 slave 4 idl slave 4 grant coord 5 captur request captur slave 1 request captur slave 1 sinc p 5 older p 6 captur slave 1 coord 6 captur request defer slave 1 coord 5 establish quorum involv p 5 ffl captur slave 2 slave 3 coord 6 establish anoth quorum 4 analysi algorithm section prove algorithm satisfi requisit safeti live properti analyz messag complex theorem 1 safeti time process particip one establish quorum proof consequ fact coordin establish quorum captur process involv quorum process captur one coordin time request defer forev infinit often proof captur request issu coordin slave p j may grant reject defer p j howev captur request grant may later need defer order resolv conflict defer p captur request forev infinit often must exist p k older p p j remain captur p k ever p k continu recaptur p j infinit ten howev p k must stay enrol ment phase time recaptur younger p p k obtain new entri time therefor slave would also defer p k captur request forev infinit often would impli exist infinit sequenc coordin strictli increas age con tradict 2 theorem 2 live whenev exist quorum within finit amount time process quorum enrol interact proof sketch suppos exist quorum q interact let p youngest process q either 1 process q particip establish quorum 2 eventu establish q sinc process q reject p lemma 1 eventu process q captur p either case theorem proven 2 establish process must involv p fact p youngest process quorum proof process p captur differ process unless p enter idl state due inabl build quorum exist quorum q interact p youngest process process captur p p attempt build quorum proof theorem 2 succeed establish q unless process q particip establish quorum 2 analyz algorithm messag complex defin p number messag transmit p gener process respons p messag p coordin consid worstcas scenario 1 coord send request messag slave j 2 slave j captur coord k younger coord slave j send switch messag coord k 3 coord k send confirm switch ok slave j coord k captur request defer slave j 4 slave j send ye messag coord 5 coord establish quorum involv p j send success messag slave j 6 p j place quorum slave j send coord k reject coord k defer captur request somewhat differ scenario coord fail place p j quorum thu send releas slave j slave j would send coord k ye messag grant defer captur request therefor attempt captur slave j coord gener 6 messag theorem 3 let p number messag transmit p gener process respons p messag p coordin p 6 j pi j 5 maximum match symmetr role activ instanc interact requir role fill distinct process howev process enrol phase may readi differ role interact let p partial quorum coordin p decid whether p contain quorum p need find p subset q size jrij two element q specifi role process instanc maximum match problem thu solv om 25 time number process captur coordin p clearli avoid perform maximum match therefor reduc time complex linear allow process readi one role interact fact mani multiparti applic certain role interact symmetr sens process enrol one without observ differ process tri symmetr role unawar target process want avoid lock exampl recipi role firstord multicast interact section 1 symmetr deadlock could aris two process specifi unwittingli role recipi 1 even though role recipi 2 would equal suffic avoid dilemma process attempt particip recipi would somewhat unnatur target recipi role facilit pleasant form enrol ment symmetr role replac singl gener role constant indic number instanc role fill process target gener role without concern instanc actual fill constant could even parameter suppli run time anoth enrol consid multicast exampl defin firstord interact transmitt gener recipi role fill process transmitt would suppli actual valu therefor instanc interact activ somewhat differ role structur within set gener role reason restrict process readi one role interact time without rais risk deadlock 6 partnersnam enrol partnersnam enrol process name enrol 9 set process activ interact name specif must consist sens fill role r k p j inde enrol r k note name need bilater unfortun guard schedul problem becom intract even process readi one interact enrol ment phase ie enrol statement act guard theorem 4 given set partnersnam en rolement statement specifi distinct pro cess problem decid whether subset consist name partner npcomplet proof reduct monoton oneinthre discuss introduct partnersnam enrol desir applic follow present two less sever form scheme effici implement even enrol statement serv guard first defin commun graph interact undirect graph node set ri edg r directli commun partnersfullynam enrol process want name partner name directpartnersnam enrol process name process commun directli moreov set enrol guard altern command must satisfi disjointed condit two guard target role name common partner first restrict simpler formul second may use practic exampl multicast reason transmitt name recipi recipi requir name transmitt fellow recipi disjointed condit second form crucial allow enrol statement serv guard otherwis one show guard schedul problem still intract regard two restrict form partner name enrol find set enrol statement consist name specif done linear time assum interact commun graph connect algorithm present section 3 easili extend implement two form 7 dynam chang environ algorithm also extend dynam chang environ process creat destroy run time assum model time process spawn new process howev process destroy parent enrol phase process p j creat new child capabl play role r inform exist process p 2 pi ident new process p updat pr return p send p j acknowledg messag timestamp p j set logic clock new process larger wait parent set clock new child defer captur request may arriv defer request reject new process clock final set similarli process p j 2 pi destroy inform exist process pi remov p j pi sinc process destroy enrol phase safeti properti theorem 1 still guarante live properti hold well newli creat process p j alway younger exist coordin p henc unabl contend p captur slave see section 3 also need attempt captur p j attempt doom fail anyway coordin captur younger slave therefor p need request captur process creat current enrol phase tunat set process finit 8 conclus present effici distribut algorithm firstord guard schedul problem first algorithm awar also describ sever extens algorithm includ gener role directpartn name enrol dynam chang environ address possibl allow enrol statement within role lead notion nest enrol nthorder interact nest enrol ment exist form alreadi ip script algorithm safe appli level enrol level n enrol involv role level eventu fill actual process reduc problem firstord en rolement futur work focu lower constant messag complex current o6m find probabilist complet symmetr solut problem acknowledg thank prof nissim francez provid us sever refer ip valuabl insight languag shaji bhaskar construct comment present algorithm r distribut cooper action system process synchron design perform evalu distribut algorithm foundat parallel program design design larg distribut system privat commun conflict propaga tion interact pro cess multiparti approach coordin distribut program interact pro cess languag coordin distribut pro gram script commun abstract mecha nism comput intract guid theori np complet n 52 algorithm maximum match bipartit graph effici dynam structur multiprocess commun implement nparti synchron use token time clock order event distribut system distribut synchron scheme fair multiprocess hand shake new class highlevel program distribut comput system new effici implement multiprocess synchron tr script commun abstract mechan verif multiway rendezv new effici implement multiprocess synchron apprais fair distribut languag distribut cooper action system parallel program design foundat commun concurr synchron asynchron process csp process synchron multiparti interact interprocess commun synchron distribut synchron scheme fair multiprocess handshak fair hyperfair multiparti interact interact process languag coordin distribut program design implement multiparti interact comprehens studi complex multiparti interact interact process time clock order event distribut system commun sequenti process solut problem concurr program control new class high level program distribut comput system ctr yuhjzer joung scott smolka strong interact fair via random ieee transact parallel distribut system v9 n2 p137149 februari 1998 yuhjzer joung strongfeas equivalencecomplet proceed fifteenth annual acm symposium principl distribut comput p156165 may 2326 1996 philadelphia pennsylvania unit state yuhjzer joung scott smolka comprehens studi complex multiparti interact journal acm jacm v43 n1 p75115 jan 1996