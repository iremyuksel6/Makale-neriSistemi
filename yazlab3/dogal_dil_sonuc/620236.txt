implic classic schedul result realtim system import classic schedul theori result realtim comput identifi implic result perspect realtim system design discuss uni processor multiprocessor result address well import issu futur releas time preced constraint share resourc task valu overload static versu dynam schedul preemption versu nonpreempt multiprocess anomali metric exampl schedul algorithm use actual applic given b introduct everi realtim system design familiar set import classic schedul theori result ie result larg taken literatur complex theori oper research knowledg result rare provid direct solut design implic result provid import insight choos good design schedul algorithm system avoid poor even erron choic literatur schedul theori vast make pretens comprehens paper minimum set result togeth implic present exampl schedul theori result present includ jackson rule smith rule mcnaughton theorem liu layland rate monoton rule mok theorem richard anomali besid learn import result want reader abl answer least follow question work done first author sabbat comput scienc dept univ massachusett work support part nsf grant iri 9208920 cda 8922572 onr grant n0001492j1048 iri itali ffl realli know earliest deadlin schedul ffl known uniprocessor realtim schedul problem ffl known multiprocess realtim schedul problem ffl anomal behavior occur avoid ffl boundari polynomi nphard schedul problem ffl task set characterist caus nphard type bound analysi use realtim system ffl impact overload schedul result ffl metric use theori impact use result realtim comput system ffl differ result exist static dynam schedul mani dimens schedul problem accept tax onomi paper divid schedul theori uniprocessor section 2 multiprocessor section result uniprocessor section begin independ task consid preced constraint share resourc overload multiprocessor case sinc result address preced share resourc togeth divid work static dynam algorithm preliminari present major schedul result basic concept must clearli understood discuss differ static dynam offlin onlin schedul well variou metric implic npcomplet nphard term use throughout paper defin 21 static versu dynam schedul classic schedul theori deal static schedul static schedul refer fact schedul algorithm complet knowledg regard task set constraint deadlin comput time preced constraint futur releas time set assumpt realist mani realtim system exampl realtim control simpl laboratori experi simpl process control applic might fix set sensor actuat well defin environ process requir type realtim system static schedul algorithm oper set task produc singl schedul fix time sometim confus regard futur releas time futur releas time known algorithm develop schedul still static algorithm contrast dynam schedul algorithm context paper complet knowledg current activ set task new arriv may occur futur known algorithm time schedul current set schedul therefor chang time dynam schedul requir realtim system team robot clean chemic spill militari command control applic see paper theoret result known realtim dynam schedul algorithm offlin schedul often equat static schedul wrong build realtim system offlin schedul analysi alway done regardless whether final runtim algorithm static dynam mani realtim system design identifi maximum set task worst case assumpt appli static schedul algorithm produc static schedul schedul fix use onlin well understood properti given assumpt remain true task meet deadlin case offlin analysi might produc static set prioriti use run time schedul fix prioriti drive schedul fix common rate monoton approach discuss later realtim system oper dynam environ feasibl meet assumpt static schedul ie everyth known priori case algorithm chosen analyz offlin expect dynam environment condit usual less precis statement overal perform made onlin dynam algorithm execut gener schedul algorithm possibl modif appli static schedul dynam schedul use offlin onlin import differ known perform algorithm case exampl consid earliest deadlin first edf schedul appli static schedul know optim mani situat enumer appli dynam schedul multiprocessor optim fact known algorithm optim 22 metric classic schedul theori typic use metric minim sum complet time minim weight sum complet time minim schedul length minim number processor requir minim maximum late case deadlin even consid result deadlin consid usual ad constraint exampl one creat minimum schedul length subject constraint task must meet respect deadlin one task miss deadlin feasibl solut classic metric deadlin includ constraint interest realtim system design sum complet time gener interest direct assess time properti deadlin period howev weight sum import task differ valu impart system upon complet use valu often overlook mani realtim system focu simpli deadlin combin valu deadlin minim schedul length secondari import possibl help minim resourc requir system directli address fact individu task deadlin true minim number processor requir minim maximum late metric use design time resourc continu ad maximum late less equal zero case task miss deadlin hand metric alway use minim maximum late doesnt necessarili prevent one mani even task miss deadlin see figur 1 d1 d2 d3 d4 d5 d1 d2 d3 d4 d5 maximum late maximum late first schedul minim max late task miss deadlin second schedul greater max late four task five complet deadlin figur 1 minim maximum late exampl rather mention metric much realtim comput work minim number task miss deadlin look optim algorithm defin follow manner optim schedul algorithm one may fail meet deadlin schedul algorithm paper metric mention either directli applic realtim system show even though nice theoret result exist limit applic realtim system relat metric complex variou schedul problem shall see mani schedul result npcomplet nphard np class decis problem solv polynomi time nondeterminist machin recognit problem r npcomplet r 2 np problem np polynomi transform r recognit optim problem r nphard problem np polynomi transform r cant show r 2 np 3 uniprocessor system gener follow notat 18 problem definit form ff j fi j fl ff indic machin environ section paper indic uniprocessor machin fi indic job characterist preemptabl nonpreempt independ preced constrain deadlin etc fl indic optim criterion maximum late total tardi etc note optim criterion depend metric chosen strongli reli system object task model 31 preemption vs nonpreempt jackson rule suppos n independ job word job process task use interchang throughout schedul literatur job j process time due date j given sequenc schedul job defin complet time c j let us defin late job j l want minim maximum late assum job execut nonpreempt want solv problem 1 stand singl machin nopmtn stand nonpreempt object function minim simpl solut problem earliest due date edd algorithm follow theorem 31 jackson rule 16 sequenc optim put job order nondecreas due date 2 proof theorem given simpl interchang argument 18 present argument beyond scope paper first result may seem use realtim system design often requir task miss deadlin sinc static schedul algorithm maximum late greater zero design know must increas comput power system meet requir miss deadlin shall see edd optim mani situat also note sinc task known readi execut time zero preemption would improv situat realtim system requir sophist program model one first extens consid introduct releas time say job j releas time r j execut start time r j unfortun problem extend releas time nphard 19 case obtain great benefit permit job preempt instant fact problem easi algorithm solut exist polynomi complex algorithm base jackson rule slightli modifi order take releas time account theorem 32 sequenc instant schedul job earliest due date among elig job ie whose releas time less equal current time optim respect minim maximum late 2 result easili proven interchang argument proof obtain way similar time slice swap techniqu use 9 24 show optim earliest deadlin first edf least laxiti first llf algorithm respect one implic result practic consider prevent us use preemption usual give greater benefit nonpreempt term schedul complex unfortun deal share resourc realtim system address critic section one techniqu creat nonpreempt code creat nphard problem anoth implic theorem minim maximum late impli optim even deadlin must met maximum late requir less equal zero fact wellknown paper liu layland 21 focuss aspect edf schedul set independ period process show full processor util alway achiev give simpl necessari suffici condit schedul task j period task j edf algorithm also shown optim variou stochast condi tion result impli edf work well mani differ situat recent variat edf use multimedia applic robot realtim databas note howev none classic result edf preced constraint share resourc overload taken account address aspect subsequ section anoth import common area realtim schedul schedul period task rate monoton algorithm often use algorithm assign task static prioriti invers proport period ie task shortest period get highest prioriti fix set independ period task deadlin period know theorem 33 liu layland 21 set n independ period job schedul rate monoton polici period worst case execut time respect larg n obtain util bound 69 mean long cpu util less 69 task make deadlin often refer schedul test deadlin period task less period rule longer optim rather must use deadlin monoton polici 20 period process shortest deadlin assign highest prioriti scheme optim sens static prioriti scheme schedul set period process deadlin monoton algorithm note deadlin monoton pure edf schedul task may differ period assign prioriti fix rate monoton algorithm extend mani way import deal share resourc see section 33 schedul test formul deadlin monoton algorithm 1 rate monoton schedul algorithm chosen space station freedom project faa advanc autom system aa influenc specif ieee futurebu dod 1991 softwar technolog strategi say rate monoton schedul major payoff system design use theori predict whether task deadlin met long costli implement phase project begin 1992 act deputi administr nasa state develop rate monoton schedul system allow space station freedom comput budget time choos varieti task decid one first much time spend process rate monoton also use simpl applic realtim control simpl experi might contain sensor whose data must process period chemic plant larg number period task alarm alarm treat period task whose minimum interarriv time equal period static schedul use rate monoton algorithm appli 32 preced constraint mani system practic interest expect task independ rather cooper achiev goal applic cooper among task achiev variou type commun semant depend chosen semant applic task experi preced constraint block access share resourc preced relat among task make schedul problem complex sinc task readi schedul time simpl edf rule longer optim follow preced constraint express notat j associ digraph gve v set task e set edg edg connect task ij task preced task j simpl schedul problem set task nopreempt ident arriv time preced relat among describ solv lawler 17 edflik algorithm work backward start leaf task preced graph algorithm work follow schedul list built start bottom revers topolog order ad list step task minimum valu chosen metric whose successor schedul lawler algorithm optim run 2 lawler algorithm give solut task ident start time unfortun suffici system practic interest period task dynam aris task common start time problem nonpreempt schedul job differ releas time gener preced constraint simpl one fact problem correspond proven nphard lenstra 19 np hard gener preced constrain problem major obstacl nonpreempt schedul spite fact optim result polynomi algorithm exist similar problem gener assumpt constrain exampl polynomi algorithm found unit comput time task arbitrari preced constraint interest result relat preced constraint obtain work subclass gener preced relat polynomi algorithm found preced relat form intre everi task one predecessor outtre task one successor preced relat seriesparallel graph easi show intre outtre case includ gener class seriesparallel graph seriesparallel graph interest subset gener preced relat optim result found seriesparallel graph defin recurs way ffl gfjg0 seri parallel graph seriesparallel graph seri parallel graph altern graph seriesparallel graph transit closur contain z graph z graph graph contain subgraph 4 node f ijkl g follow edg figur graphic depict intre outtre seriesparallel graph z graph seri parallel graph effici solut exist seriesparallel graph exist z graph unfortun z graph aris practic detail result follow theorem 34 lawler 18 given set task relat seriesparallel preced graph optim solut exist everi cost function admit string interchang relat 2 formal cost function string interchang relat given two string job ff fi quasi total order among follow relat hold intuit formula mean cost function admit string interchang relat lower valu obtain individu task lower valu schedul first theorem say interest minim maxim cost function admit intre outtre zgraph figur 2 preced relat string interchang relat eg minim late possibl find optim schedul polynomi time everi set task relat seriesparallel preced graph algorithm solv problem work decomposit tree tree show subgraph connect seri parallel relat form global preced graph decomposit tree found oj number node number edg algorithm start task successor decomposit tree everi node calcul string sequenc combin string job come son final node repres origin graph reach whole optim schedul list comput common featur algorithm also found similar algorithm literatur deal intre outtre work preced graph relat decomposit tree start job successor predecessor build sequenc suboptim schedul techniqu use variou schedul heurist extent lawler optim algorithm seriesparallel graph even optim algorithm work intre outtre help us realtim system unfortun high level commun semant found program languag give rise preced constrain job z graph mean optim algorithm dont appli heurist need use one exampl z graph aris simpl pair task link asynchron send synchron receiv see figur 3 note remot procedur call rpc give rise z graph preemption allow classic result go provid solut gener preced constraint preemption reduc complex schedul problem preced relat task differ arriv time problem fact solvabl 2 baker algorithm 2 asynchsend synchrec process process b process process b messag figur 3 program exampl give rise z graph baker procedur recurs comput complex seem suit offlin schedul due difficulti describ algorithm space limit describ algorithm howev import featur algorithm number preemption limit n1 n number job thu make preemption overhead bound practic situat schedul preemption overhead must bound taken account rare see issu address classic schedul theori solut schedul list explicitli creat anoth techniqu encod preced relat paramet use schedul algorithm exampl deadlin releas time blazewicz 4 show adjust deadlin preced constraint encod deadlin priori run time simpli use edf schedul result come fact task deadlin depend deadlin successor deadlin task start time depend start time predecessor start time theorem assum share resourc among task theorem 35 blazewicz 4 edf optim task gener preced relat differ releas date deadlin start time revis accord follow formula start task successor process everi step task whose successor process r start task predecessor 2 result allow us transform set depend task set independ one obtain equival problem edf polici optim techniqu revis deadlin arriv date use onlin 7 offlin algorithm 24 unfortun optim techniqu lost task preced constraint also share resourc exclus way moreov arbitrari protocol use access share resourc revis task deadlin releas time longer suffici guarante correct order job without addit constraint gener problem schedul set task preced constraint arbitrari resourc conflict nphard offlin algorithm face np hard gener problem tri find accept solut mean heurist branch bound techniqu exampl given algorithm xu parna 32 everi step suboptim schedul obtain even exampl onlin system driven heurist spring system 26 schedul list built onlin 33 share resourc share resourc commonli use multitask applic gener purpos system wellknown problem solv exampl mutual exclus primit realtim system straightforward applic solut hold defin runtim schedul total onlin knowledg futur arriv time task follow proven theorem 36 mok 24 mutual exclus constraint imposs find total onlin optim runtim schedul 2 proof simpli given adversari argument furthermor author show much neg result theorem 37 mok 24 problem decid whether possibl schedul set period process use semaphor enforc mutual exclus nphard 2 transform 3partit problem schedul problem shown prove theorem mok opinion reason nphard schedul problem lie possibl mutual exclus schedul block differ comput time confirm point view problem minim maximum late n independ unittim job arbitrari releas time easi 18 moreov add preced constraint want minim maximum complet time makespan want solv problem still easi 11 algorithm solv make use forbidden region interv time task start schedul feasibl idea nonpreempt schedul task certain point time could forc late task miss deadlin point sever choic possibl one follow mok enforc use mutual exclus schedul block comput time anoth exampl sha et al 27 baker 2 effici find suboptim solut clever alloc polici guarante time minimum level perform former solut call kernel monitor key idea assign processor time quantum length q length ith critic section word grain system made coarser furthermor readi time deadlin task previous modifi accord partial order task adjust edf schedul techniqu forbidden region mention follow theorem proven theorem 38 mok 24 feasibl schedul exist instanc process model preced constraint critic section kernel monitor schedul use produc feasibl schedul 2 27 sha et al introduc prioriti ceil protocol pcp alloc polici share resourc work rate monoton schedul success chen lin 5 extend util protocol edf schedul main goal similar protocol bound usual uncontrol prioriti invers situat higher prioriti job block lower prioriti job indefinit period time recal block occur job tri enter critic section alreadi lock job find bound prioriti invers allow evalu worst case block time eventu experienc job account schedul guarante formula word mean evalu worst case loss perform key idea behind pcp prevent multipl prioriti invers mean earli block task could caus prioriti invers minim much possibl length prioriti invers allow temporari rise prioriti block task done follow way defin ceil critic section prioriti highest prioriti task current lock could lock critic section allow lock critic section prioriti request task higher ceil critic section current lock case block task hold lock inherit prioriti request task leav critic section follow properti shown ffl job block enter first critic section ffl pcp prevent occurr deadlock cours former properti use evalu worst case block time job 2 baker describ similar protocol stack resourc polici srp handl gener situat multiunit resourc static dynam prioriti scheme share runtim stack allow protocol reli follow two condit ffl prevent deadlock job permit start resourc current avail suffici meet maximum requir ffl prevent multipl prioriti invers job permit start resourc current avail suffici meet maximum requir singl job might preempt key idea behind protocol job need resourc avail block time attempt preempt rather later actual may need share resourc main advantag earlier block save unnecessari context switch possibl simpl effici implement srp mean stack summari deal share resourc realtim system utmost import classic result given section provid good mean handl resourc uni processor mani research feel techniqu work well multiprocessor distribut system system share resourc typic address onlin plan algorithm 26 28 33 static schedul develop offlin heurist altern approach avoid block share resourc schedul compet task differ point time 34 overload valu edf llf algorithm shown optim respect differ metric howev overload condit algorithm perform poorli experi carri lock 22 other shown edf llf rapidli degrad perform overload interv due fact algorithm give highest prioriti process close miss deadlin typic phenomenon may happen edf system overload domino effect sinc first task miss deadlin may caus subsequ task miss deadlin situat edf provid type guarante task meet time constraint undesir behavior practic system sinc realworld applic intermitt overload may occur due except situat modif environ arriv burst task cascad system failur real world exampl situat could caus flexibl manufactur applic produc complet product deadlin order gain control tardi task overload condit valu usual associ task reflect import task within set deal task set valu task schedul smith rule theorem 39 smith rule 29 find optim schedul given sequenc put job order non decreas ratio ae smith rule resembl common shortest process time first spt rule equival task equal weight howev suffici solv problem schedul gener preced constraint problem turn np complet 19 true even simpler one interest solut found particular kind preced relat fact optim polynomi algorithm found problem unfortun realtim system preced constraint impos task often gener heurist propos spring project deadlin cost driven algorithm combin togeth rule dynam revis valu deadlin accord preced relat 6 number heurist algorithm also propos deal overload 30 13 improv perform edf baruah et al 3 shown exist upper bound perform onlin preemptiv algorithm work overload condit good onlin algorithm measur respect clairvoy schedul one know futur mean competit factor ratio r cumul valu achiev onlin algorithm cumul valu achiev clairvoy schedul valu associ task equal task execut time task request success schedul complet valu zero given task termin within deadlin accord metric prove follow theorem theorem 310 baruah et al 3 exist onlin schedul algorithm competit factor greater 025 theorem say onlin schedul algorithm guarante cumul valu greater 14th valu obtain clairvoy schedul bound true load refin given load exampl load less 1 bound 1 load surpass 1 bound drop immedi 385 load greater 1 2 bound gradual drop 385 25 load greater 2 bound 25 worth point bound achiev restrict assump tion task set zero laxiti overload arbitrari finit durat task execut time arbitrarili small task valu equal comput time sinc real world applic task characterist much less restrict 14th bound theoret valid work need deriv bound base knowledg task set 35 summari uniprocessor result mani basic algorithm theoret result develop schedul uni processor mani base earliest deadlin schedul rate monoton schedul ing extens result handl preced resourc share occur work design realtim system wealth inform concern uniprocessor schedul still requir result schedul overload fault toler although fault toler usual requir multipl processor well also necessari develop integr comprehens schedul approach address period aperiod task preemptiv nonpreempt task sy tem task valu combin cpu io schedul name issu exampl oper flight program a7e aircraft 75 period 172 aperiod process signific synchron requir extens rate monoton integr period aperiod task could use applic 4 multiprocessor realtim schedul realtim system reli multiprocessor unfortun less known schedul multiprocessor base realtim system uniprocessor partli due fact complex result show almost realtim multiprocess schedul nphard partli due minim actual experi exist system even number heurist exist rel low spite neg implic complex analysi provid import understand complex result ffl understand boundari polynomi nphard problem provid insight develop use heurist use design tool onlin schedul algorithm ffl understand algorithm achiev polynomi result provid basi upon base heurist ffl fundament limit onlin algorithm must understood better creat robust system avoid oper misconcept ffl seriou schedul anomali avoid section present multiprocess schedul result determinist static schedul without preemption dynam onlin schedul without preemption identifi variou anomali briefli discuss similar problem bin pack import implic theori stress throughout section summari global pictur multiprocessor realtim schedul given 41 determinist static schedul 411 nonpreempt multiprocess result let model multiprocess set p processor task r resourc processor ident task worst case execut time nonpreempt task may relat partial order indic eg task ti must complet task tj import note schedul theori result task consid constant execut time comput applic task never constant execut time must understand implic fact exampl fact give rise one interest multiprocess anomali realtim schedul see section 43 resourc rk number indic much exist task requir portion resourc directli model resourc like main memori also model mutual exclus resourc requir task access 100 resourc complex result determinist schedul theori multiprocess task nonpreempt partial order among resourc constraint even singl resourc constraint singl deadlin show almost problem npcomplet delin boundari polynomi nphard problem present basic result everi realtim design know list follow theorem without proof compar tabl 1 metric use follow theorem amount comput time requir determin schedul satisfi partial order resourc constraint complet requir process given fix deadlin theorem 41 coffman graham 8 multiprocessor schedul problem 2 processor resourc arbitrari partial order relat everi task unit comput time polynomi 2 theorem 42 garey johnson 10 multiprocessor schedul problem 2 pro cessor resourc independ task arbitrari comput time npcomplet 2 theorem 43 garey johnson 10 multiprocessor schedul problem 2 pro cessor resourc arbitrari partial order task comput time either 1 2 unit time npcomplet 2 proc re order comp complex arbitrari unit polynomi arbitrari 1 2 unit npcomp forest unit npcomp forest unit polynomi arbitrari unit npcomp tabl 1 summari basic multiprocessor schedul theorem theorem 44 garey johnson 10 multiprocessor schedul problem 2 pro cessor 1 resourc forest partial order comput time everi task equal 1 npcomplet 2 theorem 45 garey johnson 10 multiprocessor schedul problem 3 processor one resourc independ task task comput time equal 1 npcomplet 2 theorem 46 hu 15 multiprocessor schedul problem n processor sourc forest partial order task unit comput time polynomialtheorem 47 ullman 31 multiprocess schedul problem n processor resourc arbitrari partial order task unit comput time npcompletefrom theorem see nonpreempt multiprocess schedul almost problem npcomplet impli heurist must use problem basic see nonuniform task comput time resourc requir caus npcomplet immedi implic result design use local resourc object base system function languag base system schedul base unit time slot signific advantag far schedul complex concern cours realtim system unit task attempt carv process unit time creat difficult mainten problem possibl wast process cycl task consum less alloc unit time note result refer singl deadlin task task deadlin problem exacerb 412 preemptiv multiprocess realtim schedul gener true task schedul preemptabl schedul problem easier certain situat advantag preemption follow classic result pertain multiprocess schedul task preemptabl ie theorem 48 mcnaughton 23 instanc multiprocess schedul problem p ident machin preemption allow minim weight sum complet time exist schedul preemption valu sum comput time small schedul finit number preemption 2 see exampl given metric may advantag preemption howev find schedul without preemption nphard note metric sum complet time shortest process time first greedi approach solv problem np advantag preemption result import implic creat static schedul certainli prefer minim preemption practic reason run time know advantag preemption design would creat static schedul preemption theorem 49 lawler 18 multiprocess problem schedul p processor task preemption allow tri minim number late task nphard 2 theorem indic one common form realtim multiprocess schedul ie u j late task requir heurist 42 dynam multiprocessor schedul realtim classic schedul result dynam multiprocess schedul treat preemptiv nonpreempt case togeth first consid certain condit uniprocessor dynam earliest deadlin schedul optim algorithm optim multiprocessor answer theorem 410 mok 24 earliest deadlin schedul optim multiprocessor case 2 illustr true consid follow exampl 3 task execut 2 processor task characterist given tasknumbercomput time dead schedul earliest deadlin would execut 1 p1 2 p2 3 miss deadlin howev schedul 3 first p1 1 2 p2 task make deadlin optim algorithm exist static version problem task exist time one consid deadlin comput time 14 algorithm complic present dynam earliest deadlin schedul multiprocessor optim next question whether dynam algorithm optim gener answer theorem 411 mok 24 two processor deadlin schedul algorithm optim without complet priori knowledg 1 deadlin 2 comput time start time task 2 impli classic schedul theori algorithm requir knowledg start time optim use onlin also point hope develop optim onlin algorithm gener case optim algorithm may exist given set condit one import exampl situat assum worst case situat exist simultan scenario schedul also schedul run time even arriv time differ later arriv cant make condit wors worst case analysi approach possibl given system usual suffici condit develop ensur condit costli probabilist approach need number good heurist exist dynam multiprocessor schedul begin see much need stochast analysi condit especi valuabl abl creat algorithm oper level guarante exampl even though system oper stochast nonoptim might abl provid minimum level guarante perform mention variou heurist exist realtim multiprocessor schedul resourc constraint 26 howev gener heurist use nonpreempt model advantag nonpreempt model context switch higher understand easier test preemptiv model avoid block possibl main disadvantag nonpreempt model usual less effici util pro cessor heurist also exist preemptiv model 33 advantag preemptiv model high util low latenc react newli invok work disadvantag mani context switch difficulti understand run time execut test block common heurist whether preemptiv nonpreempt case fairli expens term absolut onlin comput time compar simpl algorithm edf sometim requir addit hardwar support term schedul chip mention earlier overload perform bound analysi import issu assum situat sporad task preemption permit task meet deadlin valu equal execut time obtain els valu obtain let system oper normal overload condit let 2 processor theorem 412 baruah et al 3 onlin schedul algorithm guarante cumul valu greater onehalf dual processor case 2 bound result uniprocessor case present section 34 implic theorem pessimist pessim aris assumpt made concern lack knowledg task set realiti signific knowledg know arriv new instanc period task flow control may know maximum arriv rate cap know minimum laxiti task system greater valu exploit knowledg bound may pessimist requir algorithm directli address perform multiprocess system overload condit 43 multiprocess anomali design must awar sever import anomali call richard anomali occur multiprocess schedul avoid assum set task schedul optim multiprocessor prioriti order fix number processor fix execut time preced constraint theorem 413 graham 12 state problem chang prioriti list increas number processor reduc execut time weaken preced constraint increas schedul length 2 implic result mean task deadlin accompani increas schedul length due anomali caus previous valid schedul becom invalid ie task miss deadlin initi counter intuit think ad resourc extra processor relax constraint less preced among task less execut time requir make thing wors insidi natur time constraint multiprocess schedul exampl best illustr theorem true consid optim schedul reduc time requir first task t1 first processor mean second task t2 processor begin earlier howev may caus task anoth processor block share resourc miss deadlin execut earlier block would occur task would made deadlin origin optim schedul see figur 4 schedul length schedul length task 2 task 4 share resourc exclus mode task static alloc task 1 task 2 processor 1 task 3 task 4 task 5 processor 2 figur 4 one exampl richard anomali especi import note onlin schedul algorithm must deal problem task complet worst case time simpl solut avoid anomali task complet earli simpli idl often ineffici howev algorithm 28 strive reclaim idl time care address anomali occur 44 similar bin pack anoth tremend activ area schedul research bin pack algorithm bin processor maximum capac box job task place bin requir percentag capac goal either given fix number bin pack job minim maximum length bin rather fill bin capac minim number bin requir bin comput multiprocessor provid comput capac deadlin set job job requir amount process time realtim schedul usual assum memori requir implicitli met common algorithm best fit bf first fit ff first fit decreas best fit decreas bfd latter two algorithm arrang list job nonincreas list respect capac requir appli first fit best fit respect theoret bound exist describ eg minimum number bin requir worst case bound ff bf larg task set 1710l l optim minimum number bin 12 ffd bound 119l known bound bfd less equal ffd bound 12 work limit valu realtim system sinc singl deadlin issu preced constraint real consider taken account howev use implic ffl know worst case avoid design ffl obtain estim number processor requir applic ffl sinc averag behavior also import sinc analysi offlin good pack achiev permut pack use averag case inform put constraint job size etc bin pack result extend incorpor realtim design tool 45 summari multiprocessor result multiprocessor schedul problem np determinist schedul major problem either specif problem npcomplet use polynomi algorithm develop optim schedul use offlin heurist search techniqu base classic theori impli offlin techniqu usual find feasibl schedul optim one mani heurist perform well averag case deterior exponenti complex worst rare case good design tool would allow user provid feedback redesign task set avoid rare case static multiprocessor schedul problem larg solv sens know proceed must point howev good tool implement heurist still necessari mani extens treat sophist set task system characterist still possibl onlin multiprocess schedul must reli heurist would substanti help special schedul chip heurist must avoid richard anomali 28 better result oper overload better bound account typic priori knowledg found realtim system algorithm guarante variou level perform requir dynam multiprocess schedul infanc 5 conclus classic schedul theori provid basic set result use realtim system design mani result known uniprocessor multiprocessor complex fundament limit perform bound import schedul problem known anomali must avoid identifi still necessari realtim design take basic fact appli problem difficult engin problem mani case mani new result need deal directli metric interest realtim applic realist task set characterist typic much theori present mani issu outsid scope paper includ distribut schedul integr cpu schedul commun schedul io schedul group task singl deadlin placement constraint impact placement run time schedul fault toler need kind time requir besid simpl deadlin period integr critic noncrit task interact schedul algorithm system design implement includ run time overhead area wide open area research r hard realtim schedul deadlin monoton approach stackbas schedul realtim process competit onlin realtim task schedul schedul depend task differ arriv time meet dead line dynam prioriti ceil concurr control protocol realtim system dynam schedul group task preced constraint distribut hard realtim system dynam schedul realtim task preced constraint optim schedul twoprocessor system control robot procedur control physic process complex result multiprocessor schedul resourc constraint schedul unittim task arbitrari releas time deadlin bound perform schedul algorithm earliest deadlin schedul realtim databas system simpl schedul algorithm parallel schedul assembl line problem schedul product line minim maximum tardi optim sequenc singl machin subject preced con straint recent result theori machin schedul optim approxim determinist sequenc schedul survey complex fix prioriti schedul period realtim task schedul algorithm multiprogram hardreal time environ besteffort decis make realtim schedul schedul deadlin loss function fundament design problem distribut system hardreal time environ n job one machin sequenc algorithm minim number late job effici schedul algorithm realtim multiprocessor system prioriti inherit protocol approach realtim synchron resourc reclaim multiprocessor realtim system variou optim singl stage product transient overload faulttoler realtim system polynomi complet schedul problem schedul process releas time deadlin preced exclus relat preemptiv schedul time resourc constraint tr ctr kaiyu chen sharad malik david august retarget static time analysi embed softwar proceed 14th intern symposium system synthesi septemb 30octob 03 2001 montral pq canada anup k bhattacharje k ravindranath pal r mall ddsched distribut dynam realtim schedul algorithm progress comput research nova scienc publish inc commack ny 2001 anup k bhattacharje k ravindranath pal r mall ddsched distribut dynam realtim schedul algorithm progress comput research nova scienc publish inc commack ny 2001 david bartholomew stewart richard mortier virtual privat machin usercentr perform proceed 11th workshop acm sigop european workshop beyond pc septemb 1922 2004 leuven belgium laura e jackson georg n rouska determinist preemtiv schedul realtim task comput v35 n5 p7279 may 2002 enrico vicario static analysi dynam steer timedepend system ieee transact softwar engin v27 n8 p728748 august 2001 karl j gramp comparison differ task architectur use mobil satellit commun ground station softwar proceed confer triada 96 disciplin softwar develop ada p2328 decemb 0307 1996 philadelphia pennsylvania unit state geoff coulson configur multimedia middlewar platform ieee multimedia v6 n1 p6276 januari 1999 dirk ziegenbein jan uerpmann rolf ernst dynam respons time optim sdf graph proceed 2000 ieeeacm intern confer computeraid design novemb 0509 2000 san jose california darko kirovski miodrag potkonjak systemlevel synthesi lowpow hard realtim system proceed 34th annual confer design autom p697702 june 0913 1997 anaheim california unit state chunho lee miodrag potkonjak wayn wolf systemlevel synthesi applic specif system use search gener forcedirect heurist proceed 9th intern symposium system synthesi p2 novemb 0608 1996 louchka popovazeugmann matthia werner extrem runtim schedul model time petri net fundamenta informatica v67 n13 p163174 januari 2005 babak hamidzadeh yacin atif dynam schedul realtim task assign ieee concurr v6 n4 p1425 octob 1998 megerian milenko drinic miodrag potkonjak watermark integ linear program solut proceed 39th confer design autom june 1014 2002 new orlean louisiana usa hsungpin chang rayi chang weikuan shih rueichuan chang gsr global seekoptim realtim diskschedul algorithm journal system softwar v80 n2 p198215 februari 2007 sanjoy k baruah jayant r haritsa schedul overload realtim system ieee transact comput v46 n9 p10341039 septemb 1997 babak hamidzadeh yacin atif krithi ramamritham schedul execut decis support performanceimpl realtim system v16 n23 p281313 may 1999 sorin manolach petru ele zebo peng schedul analysi multiprocessor realtim applic stochast task execut time proceed 2002 ieeeacm intern confer computeraid design p699706 novemb 1014 2002 san jose california yanb li wayn h wolf hardwaresoftwar cosynthesi memori hierarchi read hardwaresoftwar codesign kluwer academ publish norwel 2001 jayanta k dey jame kuros towsley onlin schedul polici class iri increas reward increas servic realtim task ieee transact comput v45 n7 p802813 juli 1996 g waddington hutchison resourc partit gener purpos oper system experiment result window nt acm sigop oper system review v33 n4 p5274 oct 1999 wan yeon lee sung je hong jong kim onlin schedul scalabl realtim task multiprocessor system journal parallel distribut comput v63 n12 p13151324 decemb zhang yipe fan miodrag potkonjak jason cong gradual relax techniqu applic behavior synthesi proceed ieeeacm intern confer computeraid design p529 novemb 0913 yungchia lin yipe chungwen huang jenq kuen lee weikuan shih tingt hwang energyawar schedul simul methodolog parallel secur processor multipl voltag domain journal supercomput v42 n2 p201223 novemb 2007 marco di natal john stankov schedul distribut realtim task minimum jitter ieee transact comput v49 n4 p303316 april 2000 victor c lee kamyiu lam ben kao prioriti schedul transact distribut realtimedatabas realtim system v16 n1 p3162 jan 1999 martin trngren fundament implement realtim control applicationsin distribut comput system realtim system v14 n3 p219250 may 1 1998 p v van der stok h janssenraemaek realtim atom multicast algorithm implement share memori multiprocessor realtim system v24 n1 p5591 januari rayi chang weikuan shih rueichuan chang realtim disk schedul multimedia applic withdeadlinemodificationscan scheme realtim system v19 n2 p149168 sept 2000 miguel felder mauro pezz formal design notat realtim system acm transact softwar engin methodolog tosem v11 n2 p149190 april 2002 peter buhr ashif harji philipp e lim jiongxiong chen objectori realtim concurr acm sigplan notic v35 n10 p2946 oct 2000 bharadwaj veerav xiaolin li chi chung ko influenc startup cost schedul divis load bu network ieee transact parallel distribut system v11 n12 p12881305 decemb 2000 antonio pessoa magalh joo gabriel silva stabil preruntim schedul help gracetim realtim system v17 n1 p6586 juli 1999 jia xu inspect verif softwar time requir ieee transact softwar engin v29 n8 p705720 august hadad sarit krau yakov gal raz lin tempor reason collabor plan agent dynam environ annal mathemat artifici intellig v37 n4 p331379 april miodrag potkonjak wayn wolf methodolog algorithm design hard realtim multitask asic acm transact design autom electron system toda v4 n4 p430459 oct 1999