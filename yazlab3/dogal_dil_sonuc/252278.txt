find even cycl even faster describ effici algorithm find even cycl undirect graph main result follow everi k geq 2 ov2 time algorithm decid whether undirect graph gve contain simpl cycl length 2k find one ii ov2 time algorithm find shortest even cycl undirect graph gve b introduct throughout work term cycl refer simpl close walk term path refer simpl nonclos walk even odd cycl cycl whose length even odd even odd path path whose length even odd problem find cycl given length find shortest shortest even shortest odd cycl undirect direct graph among basic natur algorithm graph problem problem consid mani research see 10 survey work consid almost exclus undirect version problem direct version believ much harder problem given direct graph e contain direct cycl even length exampl known p known npcomplet see 9 though shed new light direct version problem obtain surprisingli fast algorithm undirect version monien 7 present ove algorithm find pair vertic connect path length fix integ note k part input problem nphard simpl consequ algorithm ove algorithm find cycl length k one exist 1 omv log v algorithm obtain problem complex boolean matrix multipl algorithm effici g dens algorithm work direct well undirect graph work work support part basic research foundat administr israel academi scienc human preliminari version paper appear proceed 21st intern colloquium automata languag program jerusalem israel 1994 page 532543 depart comput scienc school mathemat scienc tel aviv univers tel aviv 69978 israel email address author fraphyzwickgmathtauacil show k even graph undirect bound improv obtain ov 2 algorithm find cycl given even length undirect graph ov 2 algorithm find quadrilater cycl length four part folklor cf 8 case new obtain ov 2 algorithm util combinatori theorem bondi simonovit 4 state roughli dens enough undirect graph contain mani even cycl also prove construct version theorem ov 2 algorithm find cycl given even length lead follow strang state affair decid whether given undirect graph contain cycl length say 100 asymptot faster decid use known algorithm whether graph contain triangl cycl length 3 term asymptot stress ov 2 bound well monien ove bound hide huge multipl factor depend exponenti k exponenti depend k probabl unavoid problem nphard k part input shortest cycl direct undirect graph e easili found ove time conduct bf breadth first search vertex itai rodeh 5 show shortest cycl also found omv time undirect case omv log v time direct case also notic halt bf conduct vertex ove algorithm first nontre edg found impli ov run time bf almost shortest cycl cycl whose length exce length shortest cycl one undirect graph found ov 2 time monien 6 describ sophist ov 2 ffv algorithm find shortest even cycl selc short undirect graph n function invers ackermann function algorithm use fast unionfind data structur describ ov 2 algorithm find selc algorithm somewhat simpler use sophist data structur heart algorithm lie combinatori lemma interest right lemma state c shortest even cycl graph exist vertex v c path cycl vertic cycl almost shortest possibl fact path length one greater distanc endpoint path path cycl v vertex u either shortest path exce length shortest path almost shortest possibl also describ simpl omv find shortest odd cycl solc short undirect graph e simpl ove algorithm find solc direct undirect graph e monien 7 describ ove algorithm undirect case paper organ follow section 2 present algorithm find fix length even cycl undirect graph section 3 investig combinatori structur selc section 4 describ algorithm find selc prove correct section 5 describ simpl algorithm find solc direct undirect graph end section 6 conclud remark find even cycl given length throughout section use c l denot cycl length l main result section follow theorem theorem 21 everi k 2 o2k decid whether undirect graph e contain c 2k find one also obtain follow result algorithm version result bondi simonovit 4 theorem 22 let l 2 integ let e undirect graph jej 100l delta jv j 11l g contain c 2k everi k 2 l l delta jv j 1l furthermor c 2k found ok particular cycl length exactli bl delta jv j 1l c found ov 21l time interest comment relat two theorem undirect graph e k 2 find c 2k one exist o2k run time ov 2 everi fix k 2 run time exponenti howev k part input graph e dens enough ie contain c 2k c 2k found ok deltav 2 note polynomi v k dens enough graph therefor find extrem long cycl effici graph contain exampl find ov 25 time cycl length thetav 12 compar fact problem decid whether undirect graph e contain cycl even cycl first ingredi use proof theorem 21 22 combinatori lemma bondi simonovit 4 see also 3 proof lemma nonconstruct slightli alter argument obtain construct version lemma requir proof theorem 22 state lemma need follow definit definit 23 color vertic undirect graph e said tperiod endpoint everi path length color color note color definit requir proper ie adjac vertic may color color state lemma bondi simonovit 4 present algorithm proof lemma 24 let posit integ let e connect undirect graph color vertic g use least three distinct color tperiod furthermor g nonbipartit color vertic g use least two distinct color tperiod bipartit nonbipartit case two vertic distinct color path length connect found oe time proof begin show g contain two adjac vertic join two vertexdisjoint path length least subgraph call thetagraph found oe time easi see g contain subgraph g 0 whose minim degre least 2t subgraph easili found oe time sequenti remov g vertic whose degre less 2t let maxim path g 0 ie path extend path greedili construct oe time vertex v 1 adjac least 2t vertic 2t path path along edg v 1 desir thetagraph thetagraph found contain three distinct cycl respect 2 everi vertex v thetagraph four distinct path length thetagraph start v easili check ov time whether v endpoint path color color v case done sinc found two vertic color distinct color path length connect assum therefor thetagraph tperiod easi see one cycl l 3 period cycl therefor thetagraph must also period let smallest integ thetagraph period follow also smallest period cycl consequ jl l 1 get number color use color thetagraph 2 everi vertex g connect simpl path whose length multipl vertex say color color appear l 1 simpl path whose endpoint color distinct color easili found ov time final note 2period color graph e use two color necessarili proper color graph e 2period color use two color must therefor bipartit 2 second ingredi use proof theorem 21 follow result monien 7 lemma 25 ok delta e time algorithm given direct undirect graph e integ k 2 vertex 2 v find vertic connect path length k exhibit one path v follow immedi consequ lemma 25 corollari 26 let e direct undirect graph let k 3 integ ok gamma 1delta time algorithm given vertex 2 v decid whether c k pass find c k one exist proof find vertic connect path length check whether one also connect edg 2 corollari 27 let e direct undirect graph let k 1 integ ok e time algorithm given two disjoint subset b vertic determin whether path length k connect vertex vertex b find path one exist proof assum graph direct replac undirect edg two antiparallel direct edg add new vertex connect vertic find vertic direct path length alon yuster zwick 1 recent describ 2 ok perform task lemma 25 2 ok delta expect time algorithm task corollari 26 27 depend k complex bound improv therefor k 2 ok random extra log v factor allow readi prove theorem 21 prove fact follow slightli stronger result theorem 28 let k 1 fix integ o2k given undirect graph e vertex 2 v either verifi contain c 2k find c 2k g necessarili pass proof algorithm start bf vertex distanc v g let l ig set vertic level bf tree stage algorithm scan adjac list vertic l scan algorithm keep count number edg found far insid l edg insid l endpoint l similarli keep count number edg found far l l i1 use i1 denot set vertic l i1 alreadi discov search search halt one follow condit hold 1 stage k gamma 1 complet bf end 2 least 4k delta jl j edg found insid l 3 least 4k delta jl sinc l disjoint total number edg scan search halt 12k delta jv j henc search take ok bf vertex v 2 l discov let v vertex l igamma1 discov way shortest path tree root consist discov vertic maintain algorithm continu one three possibl way accord condit caus bf halt case 1 bf halt stage case first k1 level l discov subgraph g 0 induc contain edg insid l k contain 12k delta jv j edg c 2k c 2k complet contain g 0 corollari 26 check whether cycl exist o2k case 2 bf halt 4k delta jl j edg found insid l k stage search left incomplet first alreadi complet discov consid subgraph g induc l subgraph contain least one connect compon whose vertex set u l whose number edg least 4k delta ju j denot subgraph compos connect compon h subgraph easili found ok delta time note ju j 1 assum first h nonbipartit easili verifi okdeltav time sinc h contain okdeltav edg let c lowest common ancestor bf tree vertic u vertex c easili found okdeltau follow fcg ju j 1 c must least two children u h1 let one let x 1 ae u descend u let color vertic x 1 red vertic x 2 blue lemma 24 subgraph h nonbipartit connect color two distinct color must therefor path length red vertex blue vertex explain proof lemma 24 find path p okdeltau time path also found use corollari 27 run time would o2kdeltav path p extend cycl length 2k ad disjoint path bf tree c two endpoint p length note cycl contain similar action taken h bipartit let b vertex class h ie disjoint u edg h b assum without loss gener jaj 1 let c lowest common ancestor bf tree vertic vertex c found use way describ assum c level h must least two children level h 1 let one let x 1 ae descend let color vertic x 1 red vertic x 2 blue vertic b green lemma 24 subgraph h connect color three distinct color must therefor path p length two differ color vertic path must red vertex blue vertex path even length start green vertex also end green vertex path found ok extend cycl length 2k case 3 bf halt 4k delta jl find connect subgraph h subgraph g induc l l 0 vertex set u least 4kdeltaju j edg subgraph easili found ok deltav time note h bipartit vertex class algorithm proceed previou case one three case run time o2k delta v fact run time algorithm second third case ok delta v case c 2k found algorithm c 2k pass complet proof theorem 2 theorem 21 follow immedi theorem appli algorithm describ vertex turn proof theorem 22 proof bondi simonovit actual show jej 100l delta jv j 11l k 2 l l delta jv j 1l exist vertex 2 v algorithm theorem 28 stop complet stage k gamma 1 immedi lead desir ok deltav 2 theorem 28 anoth interest consequ theorem 29 c 2k undirect graph e jej 101k delta jv j 11k found expect time proof graph jv j vertic least 100k delta jv j 11k edg contain c 2k follow immedi number edg graph e contain c 2k 100k delta jv j 11k e contain least 101k delta jv j 11k edg randomli chosen edg probabl least 1101 belong c 2k random algorithm simpli choos random edg appli algorithm theorem 28 one endpoint expect number applic desir c 2k found o1 expect run time o2k 3 structur shortest even length cycl let g undirect graph let c selc shortest even length cycl suppos vertic cycl consecut label denot dx distanc two vertic x g clearli dv c selc easili found use bf v 0 howev path c v 0 v v 0 v 2kgammai necessarili shortest path g exampl consid k 4 complet graph four vertic even cycl k 4 length 4 distanc two vertic 1 may therefor dv k immedi clear find c selc case main result section follow lemma state everi selc c vertex v 0 path c vertic c almost shortest path almost shortest path path whose length exce length correspond shortest path one specif lemma 31 let c selc g vertic c consecut label lemma cornerston ov 2 algorithm find selc present next section think also lemma interest right present proof lemma 31 present follow simpl use lemma lemma 32 p 1 p 2 two distinct necessarili disjoint shortest path g x c contain even cycl whose length 2dx two distinct shortest path minim index minim index j two shortest path connect j whose inner vertic disjoint thu obtain cycl length proof lemma 31 let h minim subgraph g respect contain contain c dh x denot distanc x h let eh edg set h done otherwis let path p whose two endpoint b c none inner vertic c satisfi length p call b shortcut first claim p collect vertex disjoint shortcut c b x figur 1 one cycl c c e f j figur 2 shortcut p see let p 0 connect compon p minim h impli edg p 0 contain shortcut compon p 0 must therefor contain b shortcut p 1 b 2 c p 0 compos sole shortcut done otherwis let x vertex incid edg e p 0 p 1 x may b edg e contain shortcut p 2 shortcut p 1 p 2 meet x met vertex shorter even cycl would exist lemma 32 graph let p 3 portion p 2 connect x vertex c c consid cycl c shown left fig 1 cycl size less 2k c 1 follow fact show jc 2 j 2k follow let c 4 cycl compris p 1 part c b contain c sinc jp jc 4 p 3 shortest path c x get jc 2k fact jc 3 2k follow similar argument sum length cycl 2k even thu one must even contradict minim c contradict show p 0 must simpli shortcut shown set disjoint shortcut shortcut contain two vertic c claim everi two distinct shortcut p p j must cross one anoth ie two path c endpoint p contain endpoint p j see left fig 2 assum contradict shortcut p p j cross one anoth shown right fig 1 length cycl c less 2k sum length 2k one must even contradict minim c shown mutual posit p p j must shown middl fig 2 let b c denot four segment c determin endpoint shortcut minim c impli jp odd sinc length cycl smaller 2k turn impli jp even two express length twist cycl b consequ length least 2k particular third claim two vertic x cycl c exist shortest path use one shortcut consid shortest path x contain least two shortcut let p p j two consecut shortcut appear path let c portion path connect shown middl fig 2 1 get jp jdj therefor replac portion path path b c without increas length continu way obtain shortest path use one shortcut view lemma 32 shortest path use one shortcut must connect two antipod vertic ie two vertic whose distanc k cycl conveni point fix consecut number 0 vertic cycl c identifi vertic c number let b two endpoint shortcut p everi shortcut p attach follow interv endpoint interv integr b gamma jp j differ pariti otherwis c would selc jp subset vertic c claim v 2 c everi vertex u c shortest path v u use shortcut p shortcut path v u along cycl c almost shortest path v u recal almost shortest path v u path whose length dv u 1 see suppos v 2 c shortest path v u use p shortcut shortest path must either go along portion e cycl c v use p go along c go along portion f cycl c v b use p go along c case shown right figur 2 definit c impli howev path e p therefor replac path f path f p replac path e increas length one requir final task show intersect interv empti v path along c v 0 vertic cycl almost shortest path requir c interv enough show two intersect let c c j two interv j fact p p j cross one anoth impli show c c j intersect show first inequ equival jp length twist cycl shown middl fig 2 length cycl least 2k 1 prove first inequ second inequ follow immedi fact shown therefor interv c c j therefor interv intersect vertex play role v 0 statement lemma complet proof lemma 2 selc c edg disjoint selc sharp inequ hold 1 use show interv c 0 everi vertex v 0 intersect properti shortest path along cycl c v 0 vertic fact shortest path intersect may howev empti c edg disjoint selc order c satisfi condit lemma 31 view lemma 32 imposs dv yield two shortest path length may assum therefor without loss gener dv call v 0 root c dv cycl type one wrt v 0 dv call c cycl type two wrt v 0 everi cycl type two wrt v 0 uniqu dv index c wrt root v 0 final note v 0 v 2kgamma1 order c satisfi condit lemma 31 also order ie v k play role v 0 4 ov 2 algorithm find shortest even cycl reli lemma 31 obtain ov 2 algorithm find selc undirect graph e algorithm start bf everi vertex stop soon even cycl detect ensur time spent bf ov show shortest even cycl found way algorithm inde selc graph bf perform augment version standard bf capabl detect even cycl let vertex augment bf perform call root bf record everi vertex v set four variabl first two variabl standard two use detect even cycl four variabl distanc v ie level v bf tree yet discov v parent v bf tree v yet discov v match v v 6 0 v vertex level v v v 2 e vertex v said match v 6 0 v match v also match v set edg fv v j v 6 0g therefor match aev highest proper ancestor v bf tree match v match proper ancestor describ process vertex v pop bf queue start scan vs neighbor assum aev dv v correctli set v may may match point depend whether adjac vertex level process action taken edg v u depend valu du v u follow way 1 noth edg process opposit direct 2 enqueu u bf queue 3 bf even cycl found let c lowest common ancestor bf tree v u c v c u tree path edg v u form even cycl length 2dv cycl shown fig 3 4 also mean noth edg process opposit direct 5 u zero halt bf even cycl found assum exampl c lowest common ancestor bf tree x u c x c u tree path edg x v v u form even cycl length 2dv cycl shown fig 3 6 test whether aeu equal let v u u v equal halt bf even cycl found follow assum exampl c lowest common ancestor bf tree u c tree path follow edg x follow path follow edg v u follow u c tree path close even cycl length 2dv cycl shown fig 3 note cycl ie simpl sinc x ancestor u finish scan neighbor v rescan set aeu everi u becom child v put aeu aev unless case put aeu v complet descript algorithm theorem 41 augment bf scan 3jv j2 edg therefor run ov time furthermor c selc length 2k v 0 root augment bf start v 0 find even cycl length 2k proof bf halt either complet even cycl found edg scan bf tree edg edg match vertic c c c x figur 3 even cycl detect rule 35 6 wm figur 4 aev k edg form match possibl edg close even cycl jv tree edg jv edg match root bf never match total number edg scan therefor 3jv j2 complex claim obviou scan edg entail constant number oper prove second part theorem consid augment bf start root v 0 selc c note accord six rule bf halt scan neighbor vertex v even cycl found length 2dv 1 suppos c selc type one wrt v 0 type one type two selc defin end previou section v level bf suppos v k1 process v kgamma1 even cycl found edg v length must 2k shorter cours otherwis even cycl length 2k found use rule 3 edg v suppos c selc type two index level bf even cycl length 2k found process vertex v k cycl found use rule 5 v k process adjac two vertic level final suppos c selc type two level bf v k1 level k gamma 2 claim aev therefor even cycl found use rule 6 edg v cycl found first note v 2kgammaj level j edg halt level j second note v shortest path g refer fig 4 shortest path connect vertic whose distanc less k must uniqu shortest path vertic cf lemma 32 path must therefor tree path ie must contain bf tree follow ancestor v k level j therefor aev k 6 0 aev done otherwis proper ancestor v unmatch assum contradict aev k match ancestor ancestor v 2kgammaj gamma1 let match v let v 2kgammar lowest common ancestor bf tree wm v 2kgammaj v 2kgammar may v 0 obtain follow even cycl cycl c 1 fig 4 g v denot tree path vertic edg match vertic tree path v may coincid initi caus problem cycl c 1 inde cycl ie simpl compos tree path interset one anoth length c 1 contradict minim c 2 corollari theorem 41 get graph contain 3v gamma 12 edg contain even cycl simpl exampl show bound best possibl take connect graph whose biconnect compon triangl furthermor check whether graph contain even cycl exhibit one done ov time perform one augment bf arbitrari vertex final point result section impli result section 2 afford check whether graph contain c 2k length smallest even cycl may larg 5 find shortest odd cycl undirect direct graph shortest odd length cycl solc found polynomi time direct undirect graph object section describ simpl yet effici algorithm problem monien 6 obtain simpl ove time algorithm find solc undirect graph use fast boolean matrix multipl algorithm obtain omv task algorithm effici monien algorithm dens graph theorem 51 omv find shortest odd cycl undirect graph e proof let adjac matrix g assum g nonbipartit otherwis contain odd cycl recal k close walk length k multipl use obtain k assum boolean sinc close walk odd length contain odd cycl length solc g minim odd k exist k g undirect 1 therefor look minim k use follow approach start comput 3 binari search along odd number 2 use find k number boolean matrix multipl requir clearli olog v specif solc length k found without increas complex algorithm 2 turn attent find shortest odd cycl direct graph unlik undirect case subpath solc necessarili shortest path therefor simpl bf everi vertex suffic let edu v length shortest even length direct walk u v similarli let odu v length shortest odd length direct walk u v odd length walk exist set odu 1 note exist walk length edu v odu v impli exist simpl walk length edu v odu v lemma 52 direct graph g edv proof close walk odd length contain odd cycl odd length close walk contain v 0 whose length edv 2i minim c impli edv howev path length 2i v 0 v 2i therefor edv 2i second equal statement lemma follow use similar argument 2 given vertex easili comput ed v od v everi v 2 v follow construct graph g graph g 0 direct bipartit graph contain even repres v e odd repres v everi vertex easili seen edu denot distanc u 0 v 0 g 0 perform bf g 0 e therefor find ed v od v everi assum graph contain isol vertic everi 2 v find oe time shortest odd length close walk contain simpli comput eg oc 6 1 close walk length oc minim possibl odd length easili found trace shortest odd path vertex minimum achiev shortest odd length close walk found way must solc thu obtain follow theorem 53 shortest odd length cycl direct graph one exist found ove time 6 conclud remark shown interest combinatori properti even cycl undirect graph lead effici algorithm find even cycl given length find shortest even cycl note input graph given use adjac matrix ov 2 algorithm optim seem plausibl conjectur ov 2 best possibl bound term v problem even adjac list graph given input note ov 2 time current best known time even find quadrilater c 4 base result paper alon yuster zwick 2 recent obtain find c 4 undirect graph gener c 4k found algorithm better ov 2 present rel spars graph interest note hardest case c 4 problem exampl graph thetav 32 edg author would like thank noga alon mani help discuss r colorcod journal acm find count given length cycl extrem graph theori cycl even length graph find minimum circuit graph complex determin shortest cycl even length find long path effici find cycl given length even cycl direct graph graph algorithm tr ctr friedrich eisenbrand fabrizio grandoni detect direct 4cycl still faster inform process letter v87 n1 p1315 juli harold n gabow shuxin nie find long direct cycl proceed fifteenth annual acmsiam symposium discret algorithm januari 1114 2004 new orlean louisiana