parallel algorithm mesh smooth maintain good mesh qualiti gener refin unstructur mesh finiteel applic import aspect obtain accur discret wellcondit linear system articl present meshsmooth algorithm base nonsmooth optim techniqu scalabl implement algorithm prove parallel algorithm provabl fast runtim bound execut correctli parallel random access machin pram comput model extend pram algorithm distribut memori comput report result two threedimension simplici mesh demonstr effici scalabl approach number differ test case also examin effect differ architectur parallel algorithm present result ibm sp supercomput atmconnect network sparc ultra b introduct unstructur mesh proven essenti tool numer solut largescal scientif engin applic complex comput domain problem mesh shape element mesh vari significantli variat affect accuraci numer solut exampl twodimension triangul classic finit element theori shown element angl approach limit 0 discret error condit number element matric advers affect 3 12 poorli shape element frequent produc automat mesh gener tool particularli near domain boundari addit adapt refin techniqu use solut problem tend produc highli distort element contain initi mesh particularli adapt occur along curv boundari 18 obtain highqual mesh often one must repair improv mesh solut process improv base element qualiti measur appropri particular problem solv two mesh improv techniqu proven success sequenti comput face edg swap mesh smooth 2 6 7 8 15 16 22 ever sequenti mesh optim method appropri applic use distributedmemori comput 1 mesh usual distribut across processor 2 mesh may fit within memori avail singl processor 3 parallel algorithm significantli reduc runtim compar sequenti version applic parallel algorithm mesh improv techniqu requir paper present effici robust parallel algorithm mesh smooth organ paper follow section 2 briefli review variou local mesh smooth techniqu includ laplacian smooth number optimizationbas ap proach parallel algorithm theoret result correct execut parallel runtim bound discuss section 3 section 4 present numer result obtain ibm sp atmconnect network sparc ultra demonstr scalabl algorithm 2 local meshsmooth algorithm meshsmooth algorithm strive improv mesh qualiti adjust vertex locat without chang mesh topolog local smooth algorithm adjust posit singl grid point mesh use inform assist comput scientist mathemat comput scienc divis argonn nation laboratori ar gonn il assist professor comput scienc depart univers tennesse knoxvil knoxvil tn z comput scientist mathemat comput scienc divis argonn nation laboratori argonn il incid vertic rather global inform mesh typic vertex v adjac set adjv shown figur 21 vertic adjac set shown solid circl figur vertex v move qualiti element incid v shown shade triangl figur chang vertic adjac v shown unfil circl qualiti element contain vertic affect chang locat v one sweep mesh perform improv overal mesh qualiti thu critic individu adjust inexpens comput fig 21 vertex v element whose qualiti affect chang posit neighbor v shown solid circl qualiti shade element affect chang posit vertex v specif repres local smooth techniqu function smooth given locat x v vertex v neighbor locat x adjv return new locat thu sequenti form local mesh smooth algorithm given simpl loop figur 22 v set vertic mesh smooth posit choos order vn enddo fig 22 local smooth algorithm sequenti implement vertic sweep uniqu determin order vertic smooth aspect local mesh smooth techniqu discuss detail section 24 action function smooth determin particular local algorithm chosen section briefli review sever previous propos techniqu 21 laplacian smooth perhap commonli use local meshsmooth techniqu laplacian smooth 9 20 approach replac posit vertex v averag neighbor posit method comput inexpens guarante improv element qualiti fact method produc invalid mesh contain element invert neg volum exampl show laplacian 1 smooth function might requir inform addit neighbor vertex posit exampl nonisotrop problem function may requir deriv approxim solut v adjv specif inform element contain vertic howev inform still local includ within framework smooth lead invalid mesh shown figur 23 fig 23 set element laplacian smooth center vertex v result invalid triangu lation shade squar mark averag posit vertic adjac v variant laplacian smooth guarante valid improv mesh allow vertex v move 1 local submesh still contain valid element 2 measur mesh qualiti improv note evalu rule significantli increas cost laplacian smooth techniqu 10 22 optimizationbas smooth optimizationbas smooth techniqu offer altern laplacian smooth inexpens guarante valid element final mesh effect wide varieti mesh qualiti measur sever techniqu propos recent briefli review method method differ primarili optim procedur use quantiti optim bank 4 describ smooth procedur twodimension triangular mesh use element shape qualiti measur given area triangular element l length edg maximum valu qt correspond equilater triangl local submesh improv use line search procedur search direct determin line connect current posit v posit result worst element becom equilater line search termin least one element shape qualiti valu equal improv element one variant techniqu attempt directli comput new locat use two worst element local submesh case line search procedur use case new posit result third element differ origin two worst element smallest shape measur shephard georg describ similar approach tetrahedr mesh 23 shape function element incid v comput use formula v volum element area face paramet chosen qt maximum one correspond equilater tetrahedron line search similar done bank perform search direct determin line connect current posit v posit improv worst element local submesh equilater line search subproblem done use golden section procedur termin worst element improv beyond specifi limit freitag et al 10 11 propos method two threedimension mesh base steepest descent optim techniqu nonsmooth function goal optim approach determin posit maxim composit function 1il function f base variou measur mesh qualiti maxmin angl andor element aspect ratio l number function defin local submesh exampl twodimension triangular mesh maxim minimum angl local submesh contain evalu qualiti measur interest function continu differenti deriv composit function oex discontinu discontinu occur chang set function obtain minimum valu search direct step comput solv quadrat program problem give direct steepest descent possibl convex linear combin gradient activ set line search subproblem solv predict point set activ function chang base firstord taylor seri approxim f x amenta et al show optim techniqu use 10 11 equival gener linear program techniqu expect linear solut time 1 convex level set criterion solut uniqu gener linear program appli smooth techniqu determin convex level set number standard mesh qualiti measur two three dimens techniqu mention previous optim mesh accord element geometri bank smith 5 propos two smooth techniqu minim error finit element solut comput triangular element linear basi function method use damp newton method minim 1 interpol error 2 posteriori error estim ellipt partial differenti equat quantiti minim case requir comput approxim second deriv solut element well shape function qt triangular element mention previous 23 combin laplacian optimizationbas smooth shephard georg 23 freitag olliviergooch 10 present experiment result demonstr effect combin variant laplacian smooth respect optimizationbas procedur variant laplacian smooth use shephard georg allow vertex move centroid incid vertic worst element maintain shape measur qt fix limit otherwis line connect centroid initi posit bisect bisect point use target posit freitag olliviergooch accept laplacian step whenev local submesh improv case laplacian smooth step follow optimizationbas smooth worst element experi 10 show use optimizationbas smooth minimum angl dihedr angl 3d less degre two dimens 15 degre three dimens significantli improv mesh small comput cost result also show three sweep mesh offer minim improv mesh test 24 nonuniqu smooth vertex locat mention earlier locat vertic mesh pass smooth uniqu determin order vertic smooth exampl nonuniqu shown figur 24 simpl twodimension mesh origin mesh shown left v q vertic smooth posit vertex given top seri mesh vertex q reloc use optimizationbas smooth describ 11 follow adjust vertex v shown highlight submesh middl rightmost mesh bottom seri mesh vertic smooth revers order result final mesh consider differ final mesh result minimum maximum averag angl two order present tabl 21 higherqu mesh obtain move vertex q move vertex v v q q q fig 24 order vertic smooth significantli affect final mesh qualiti seri mesh show intermedi final mesh vertex q smooth follow vertex v top vice versa bottom tabl minimum maximum averag angl mesh shown figur 24 singl pass optimizationbas smooth two differ order vertic order min angl max angl avg angl origin mesh 1736 v q 10445 q v 19038 gener vertic incid poorqual element like significantli chang locat smooth process larg chang advers affect qualiti neighbor submesh effect mitig subsequ adjust neighbor vertic therefor order vertic would tend effect random order would smooth vertic incid element lowest qualiti first 3 parallel meshsmooth algorithm section present framework correct parallel implement local meshsmooth algorithm present preced section parallel smooth algorithm formul within context graph mesh defin follow let ng set vertic mesh mg set mesh element either triangl tetrahedra let e graph associ mesh g first consid problem coordin inform mesh processor ensur mesh remain valid smooth invalid mesh creat smooth two adjac vertic simultan differ processor consid triangul shown first mesh figur 31 vertic q v smooth own differ processor new locat vertic simultan smooth indic follow mesh v 0 q 0 posit determin assum locat q v fix given first mesh shade region second mesh show invert triangl creat new locat v 0 q 0 defin correct execut parallel algorithm follow let qualiti initi valid mesh 0 q 0 parallel algorithm execut correctli smooth mesh 1 valid qualiti q 1 greater equal q 0 note requir qualiti mesh smooth parallel equal qualiti mesh smooth serial differ vertex order may use v q fig 31 exampl invalid mesh creat adjac vertic differ processor smooth simultan invert triangl indic shade region element incid v affect chang locat vertex v ensur correct execut parallel algorithm prevent two vertic adjac mesh differ processor simultan smooth defin independ set vertic subset mesh vertic v adji approach parallel smooth algorithm 1 select independ set mesh vertic 2 smooth vertic parallel 3 notifi neighbor new posit procedur repeat new independ set approach avoid synchron problem processor first formul algorithm use parallel random access machin pram comput model prove algorithm correct give parallel runtim bound formul practic variant distribut memori architectur 31 pram comput model pram comput model assum processor commun common share memori essenti aspect pram model use analysi processor access data comput anoth processor store share memori constant time use model assum mani processor vertic smooth vertex v assign processor p parallel algorithm give correct implement mesh smooth given figur 32 minimum number step requir correct execut parallel pram algorithm given lemma 1 lemma 1 number step requir guarante correct execut smooth algorithm least joe opt j oe opt color g v e joe opt j minim among color g proof parallel smooth algorithm set vertic smooth time step two vertic v j v k e jk exist two neighbor vertic smooth initi set vertic mark smooth choos independ set k v 2 enddo endwhil fig 32 pram parallel smooth algorithm simultan shown earlier may result invalid mesh mesh lesser qualiti initi mesh guarante correct execut requir independ set algorithm requir disjoint sequenc independ set 1 2 found j thu parallel smooth algorithm requir step sequenc independ set mcolor g definit must least joe opt j determin optim color gener graph known nphard problem 13 effect heurist effici choos independ set parallel develop implement describ two heurist approach 1 vertex color method 2 random scheme color method assum color vertic oe necessarili optim label oev 6 oeu u 2 adjv clearli vertic color constitut independ set use purpos parallel algorithm maximum degre graph delta number color found color heurist bound delta 1 second approach base assign distinct random number aev vertex step algorithm choos independ set accord rule given 17 base 21 v 2 color approach yield run time bound independ size graph smooth howev effici parallel comput color requir use random algorithm 17 therefor color approach cost effect use enough time amort initi expens comput color maintain purpos typic use small number smooth pass random approach use experiment result present next section addit random approach memori effici color vertex oev must store wherea random num ber aev comput need practic implement use pseudorandom number gener determin aev base sole global number vertex evalu parallel runtim pram comput model assum mesh gener finit element finit volum solut physic model graph mesh local edg connect vertic physic close gener maximum degre vertex mesh bound independ size system given local natur graph assumpt vertex assign uniqu independ random number aev expect number independ set gener loop figur 32 bound eolognlog logn n number vertic system bound consequ corollari 35 17 maximumtim requir smooth vertex max also bound follow expect runtim bound lemma 2 algorithm figur 32 expect runtim pram comput model eo logs0 log logs0 number vertic initi mark smooth proof assumpt pram comput model run time parallel smooth algorithm proport number synchron step multipli maximum time requir smooth local submesh step k upper bound time given maximum time max smooth local submesh algorithm number synchron step equal number independ set chosen 31 expect number eo logs0 loglogs0 32 practic implement distribut memori comput practic implement distribut memori comput assum number vertic far greater number processor modifi pram algorithm accordingli assum vertic partit disjoint subset v j distribut across processor processor own v j base partit v element mesh also distribut processor parallel comput given processor own set vertic rather one case pram model choos independ set accord slightli differ rule use figur 32 independ set chosen accord rule v 2 incid vertex v j 62 modifi rule allow two vertic own processor smooth step vertex locat distribut across mani processor share common memori must add commun step algorithm given figur 32 commun asynchron requir global synchron 2 independ set smooth commun new vertex locat processor contain vertic adji smooth next independ set vertic show addit step ensur practic algorithm avoid synchron problem mention begin section incid vertex inform correct step algorithm lemma 3 vertex inform correctli updat execut parallel smooth algorithm proof proof induct assum initi incid vertex locat correct incid vertex locat correct follow step k gamma 1 posit vertex v adjust step k properti independ set none incid vertic v j adjust thu follow step k parallel smooth algorithm incid vertic notifi reposit vertex v given new locat note find requir processor commun processor store incid vertex inform commun random number necessari seed given pseudorandom number gener determin aev base sole global number thu commun requir practic algorithm notif new vertex posit processor contain nonloc incid vertic global reduct requir check whether k empti 4 experiment result illustr perform parallel smooth algorithm two three dimens consid two finiteel applic 1 scalar poisson problem gaussian point charg sourc circular domain pcharg 2 linear elast problem elast upper right quadrant domain twodimension elast problem shown figur 41 threedimension test case solv regularli shape sixsid solid mesh problem gener coars mesh global synchron expens practic distribut memori architectur adapt refin element refin rivara bisect algorithm refin indic function base local energi norm estim parallel adapt refin algorithm test problem describ detail 19 mesh partit use unbalanc recurs bisect urb algorithm strive minim number processor neighbor ensur vertic equal distribut 19 case compar two differ smooth approach one use optimizationbas smooth approach optimizationbas one use combin laplacianoptim techniqu combin 10 combin approach use laplacian smooth first step accept new grid point posit whenev qualiti incid element improv qualiti incid element exce userdefin threshold 30 10 algorithm termin otherwis optimizationbas smooth perform attempt improv mesh qualiti measur use case maxim minimum sine angl dihedr angl 3d elimin extrem angl near 0 measur consid 10 maxmin angl maxmin cosin measur produc highest qualiti mesh comput cost test case consid paper perform two smooth sweep mesh grid point vertic maintain queue process order illustr qualit effect mesh smooth present figur 41 result optimizationbas approach describ 11 twodimension elast problem mesh left show initi mesh seri refin step global minimum angl mesh 113 averag minimum element angl 357 initi edg coars mesh still clearli evid mani level refin contrast mesh right obtain smooth grid point locat refin step bisect line longer evid element mesh less distort global minimum angl mesh 217 averag minimum element angl 411 fig 41 typic smooth result optimizationbas approach twodimension elast prob lem mesh left show refin without smooth mesh right show result interleav smooth refin experi describ section design examin scalabl parallel smooth algorithm therefor problem adjust element error toler number vertic per processor remain roughli constant number processor vari show scalabl two threedimension algorithm ran four test case 164 processor ibm sp system sp3 thin node tb3 switch examin effect differ architectur algorithm also ran twodimension test case network 12 sparc ultra connect via atm network messag pass accomplish use mpich implement mpi particular p4 devic sparc ultra atm network mpl devic ibm sp 14 tabl smooth result 2d problem ibm sp optimizationbas combin max max vtx max vtx number number total smooth smooth smooth smooth local number time per time per proc vtx vtx sec second sec second 48 10384 498379 125 8307 571 1818 48 4198 201392 410 1023 160 2623 tabl 41 give experiment result optimizationbas combin smooth techniqu twodimension test case ibm sp differ number processor use show maximum number vertic assign processor total number vertic final mesh maximum smooth time longest time taken processor perform two smooth pass mesh vertic vertic smooth per second averag rate per processor vertic smooth smooth algorithm scale perfectli number would remain constant expect combin approach obtain much higher averag rate smooth applic comput expens optim procedur perform subset mesh vertic averag smooth rate two applic differ amount work requir smooth two mesh differ point charg problem averag vertex smooth rate slowli decreas number processor increas smooth techniqu elast problem qualiti mesh vari significantli number processor chang result nonmonoton chang smooth rate combin approach exampl one processor 165 percent vertic requir optimizationbas smooth wherea four processor 10 percent requir optimizationbas smooth number vertic assign processor roughli equal therebi impli variat smooth rate due primarili two factor 1 increasingli unbalanc load caus vari comput cost requir smooth local submesh 2 increas commun cost implementationoverhead associ parallel smooth algorithm let time requir comput new locat vertic own processor p let time associ commun cost implement overhead processor time thought time requir smooth vertic local subproblem construct includ overhead associ determin adjac set vertex quantifi effect averag smooth rate defin follow ffl work load imbal ratioth maximum time requir comput new locat vertic processor divid averag time ffl efficiencyth maximum amount time requir comput new locat vertic processor divid maximum time includ overhead cost theta 100 note implement overhead cost includ comput set adjac inform local submesh determin independ set thu even sequenti case overhead associ global comput effici thought percentag time solv local smooth problem therefor good parallel implement nearli constant effici indic littl addit overhead associ parallel quantiti valu 10 impli processor perfectli balanc valu impli overhead cost associ sequenti parallel algorithm work load imbal ratio parallel effici correspond test case tabl 41 given tabl 42 number processor increas work load stay roughli balanc 18 processor becom increasingli unbalanc especi true combin approach work load imbal ratio increas 17 64 processor test case larger imbal associ combin approach result fact processor requir optimizationbas smooth other parallel effici calcul take imbal account effici optimizationbas combin approach eo ec remain roughli constant respect p conclud parallel algorithm scale well despit increas imbal work load gener effici optimizationbas approach higher combin approach higher comput cost smooth step better amort overhead cost number monoton vari mesh correspond work load differ number processor perform parallel smooth algorithm could improv repartit mesh account imbal work load howev approach practic applic smooth small portion overal solut process would comput effici repartit mesh mesh smooth effici result show parallel algorithm perform well even though partit determin aspect solut process work load imbal parallel effici parallel smooth algorithm twodimension test case ibm sp optimizationbas combin number max max max max total smooth io eo total smooth ic ec proc time time time time 4 826 78 11 944 287 24 12 836 8 772 73 11 945 278 23 11 827 48 125 12 14 960 571 50 17 875 4 266 25 10 939 115 94 10 817 8 267 24 10 898 124 98 12 790 48 410 37 15 902 160 14 18 875 tabl 43 give number vertic averag vertex smooth rate smooth techniqu appli threedimension applic problem cost smooth threedimens roughli ten time twodimension cost increas cost result roughli fivefold increas number function evalu requir vertex due higher vertex degre addit function evalu approxim twice expens 3d 2d trend evid twodimension test case appar threedimension test case particular combin approach roughli two three time faster optimizationbas approach averag smooth rate slowli decreas function number processor work load imbal effici result given tabl 44 see combin approach tend produc imbalanc load number processor increas optimizationbas smooth approach effici combin approach higher comput cost optimizationbas smooth effici slowli decreas function number processor test case consid contrast effici result combin approach slightli variabl differ ratio optimizationbas smooth laplacian smooth roughli constant effici demonstr algorithm scale well despit imbal work load figur 42 graphic summar result two threedimension test case ibm sp show averag rate vertic smooth effici test set smooth techniqu show parallel algorithm achiev roughli result whether run parallel sequenti twodimension elast problem tabl 45 show test case result singl mesh contain 76118 vertic initi minimum angl 590 sor smooth techniqu improv minimum angl roughli 13 column label smooth result 3d problem ibm sp optimizationbas combin max max vtx max vtx number number total smooth smooth smooth smooth local number time per time per proc vtx vtx sec second sec second 48 6377 305414 7281 8758 2532 2519 48 4121 196332 3626 1136 1716 2401 timecal give maximum averag time smooth local submesh across processor time constant techniqu 18 processor number slightli increas 16 processor increas work one processor work increas clearli reflect combin approach maximum percentag cell requir optim processor percentag increas approxim 10 percent 18 processor 1421 2079 percent 16 32 processor respect final show parallel smooth algorithm scalabl twodimension applic problem switch atmconnect network sparc ultra tabl 46 show number vertic averag smooth rate 112 processor averag rate result sporad atm network ibm sp gener trend evid particular parallel smooth algorithm effect handl higher messag startup latenc lower bandwidth atm network deliv scalabl perform 5 conclus paper present parallel algorithm class local mesh smooth techniqu numer experi perform two algorithm mention section 2 parallel framework present suitabl use techniqu theoret result show parallel algorithm provabl fast parallel runtim bound pram comput model present variant pram algorithm implement distribut memori comput prove correct numer experi perform optimizationbas smooth techniqu combin laplacianoptimizationbas techniqu two differ distribut memori architectur result show parallel smooth algorithm scale well despit varianc processor work load associ smooth individu submesh work load imbal ratio effici optimizationbas combin smooth techniqu threedimension test case ibm sp optimizationbas combin number max max max max total smooth io eo total smooth ic ec processor time time time time 48 7281 69 15 947 2532 20 13 788 28 11 863 1372 11 13 801 48 3626 tabl mesh qualiti smooth inform parallel algorithm ibm sp optim combin number pre min min call min call percent processor angl angl ms angl ms optim acknowledg work first third author support mathemat inform comput scienc divis subprogram offic comput technolog research us depart energi contract w31109eng38 work second author support nation scienc foundat grant asc9501583 cda9529459 asc9411394 r optim point placement mesh smooth method improv 3d solid angl condit finit element method pltmg softwar packag solv ellipitc parit differenti equat mesh smooth use posteriori error estim optismooth optimizationdriven approach mesh smooth optim tetrahedr mesh increment topolog flip work regular triangul commun appli numer meth od comparison tetrahedr mesh improv techniqu effici parallel algorithm mesh smooth condit finit element matric gener nonuniform mesh comput intract portabl parallel program messagepass interfac parallel graph color heurist new mesh gener scheme arbitrari planar domain simpl parallel algorithm maxim independ set problem constrain optim approach finit element mesh smooth ing automat threedimension mesh gener finit octre techniqu tr ctr qiang du max gunzburg grid gener optim base centroid voronoi tessel appli mathemat comput v133 n23 p591607 15 decemb 2002 hen biermann ioana martin fausto bernardini deni zorin cutandpast edit multiresolut surfac acm transact graphic tog v21 n3 juli 2002 shuli sun jianfei liu effici optim procedur tetrahedr mesh chao search algorithm journal comput scienc technolog v18 n6 p796803 novemb