lambda calculu type theori formal survey substanti bodi knowledg lambda calculu pure type system formal develop construct type theori use lego proof system lambda calculu work abstract simplifi proof standard beta reduct mention redex posit residu outlin meta theori pure type system lead strengthen lemma one novelti use name variabl formal along way point feel learn gener issu formal mathemat emphas search formal definit conveni formal proof convincingli repres intend inform concept b introduct paper hobbi first sentenc mp93 first report formal develop lambda calculu type theori written autumn 1992 continu pursu hobbi ever sinc develop substanti bodi formal knowledg includ churchross standard theorem beta reduct basic theori pure type system pt lead strengthen theorem type check algorithm pt work report mp93 vbjmp94 pol94b pol95 present paper survey work includ new proof point feel learn gener issu formal mathemat technic side describ abstract simplifi proof standard beta reduct previous publish mention redex posit residu gener issu emphas search formal definit conveni formal proof convincingli repres intend inform concept lego proof develop system lp92 use check work implement extend calculu construct induct type luo94 lego refin style proof checker publicli avail ftp www user manual lp92 larg collect exampl section 13 contain submit journal autom reason version paper appear technic report ecslfcs97359 univers edinburgh z laboratori foundat comput scienc univers edinburgh x basic research comput scienc univers aarhu centr danish nation research foundat inform access formal develop describ pa per interest exampl formal lego includ program specif data refin luo91 strong normal system f alt93 synthet domain theori reu95 reu96 oper semant imper program sch97 11 pt beauti metatheori develop inform bar92 ber90 gn91 vbj93 geu93 paper unusu clear mathemat littl doubt correct sult write machinecheck develop inform present leav mani decis unspecifi mani fact unprov far detail represent need write comput program typecheck pt lemma need prove correct program start longterm goal fill gap order increas confid proofcheck program lego base type theori goal larg met pol95 also basic inform theori pt well stood difficulti formal suggest reformul clarifi present anoth goal project develop realist exampl formal mathemat mathemat comput scienc prove one big theorem throw away work lead theorem want build bodi formal knowledg continu extend suggest design criteria formal represent definit must suitabl whole develop special singl theorem theori structur like comput program abstract provid isol compon sever part theori work simultan perhap sever worker inevit wrong decis underli represent later fix without affect serious larg theori depend bodi knowledg want formal still grow ing eg vbjmp94 report advanc typecheck pt done later origin formal becam part formal develop work typecheck benefit basic formal pt sinc proof sever relat system could easili adapt proof alreadi done pt new subject includ eg standard theorem use type theori formal first author hand claim type theori realist exampl formal math emat especi suitabl formal object induct construct properti prove induct structur littl equal reason perhap compel reason continu fascin work lure complet concret yet simpl proof result whose convent present seem requir notion messi formal eg standard theorem discuss section 34 see proof beauti simplic concret tendenc formal throw simplic wind frustrat get proof work check beautifi rel easili improv definit argument mechan check easili point new glitch suggest fix also formal develop easi come back year later detail would otherwis written explicit dont rediscov 12 relat work mani formal churchross theorem sha85 hue94 nip96 pfe92 formal standard theorem know coq96a lazi combin express formal type theori includ db93 bar96 address limit aspect special type theori essenti calculu construct although bar96 interest work program extract mechan coq use extract execut typecheck proof decid typecheck contrast cite work except bar96 develop hasnt termin reach one specifi theorem continu grow variou direct guid interest work come across feel need check exampl author check part type theori paper ask refere novelti present use name variabl formal type theori lambda calculu know use de bruijn indic nameless variabl sha85 alt93 hue94 nip96 bar96 higher order abstract syntax pfe92 avoid formal renam variabl prevent unintend captur substitut de bruijn notat concret suitabl formal reason formal theori name variabl one thing implement must use name level whether intern pars print either case use name must formal explain interest insight gain mean bind mani research agre de bruijn represent realli inform mean lambda term sens need quotient term alphaconvers ie intension equal de bruijn term correspond inform meant ident term nonetheless de bruijn represent code inform notion bind doesnt address relationship free bound variabl name free variabl becom bound formal syntact term use name variabl concret name bound variabl actual occur parametr metaformula contain name free variabl done use formul suggest coquand coq91 base syntact distinguish free bound variabl 1 work formal bind substitut use name includ coq96b gm96 owe95 sat83 sto88 work larg exampl use bind notion would interest compar develop similar exampl use term upto alpha convers gm96 present type theori base treat term name variabl concret martinlof calculu explicit substitut tas93 present close alphaconvers present section 553 view failur concret martinlof system 13 paper formal develop sourc file develop describ paper along readm file explain check avail lego www homepag httpwwwdcsedacukhomelego lego use modul system describ jp93 base cardelli mock modul car91 sourc file modul modul header say modul depend thu directori modul associ paper contain parallel even incompat develop type load strengthen file strengtheningl contain proof strengthen pt load preceed everi modul depend 2 distinct alreadi present gentzen gen69 page 712 1167 141 2167 prawitz pra65 2 depend determin modul header examin 70 proof sourc file extens l contain 1500 definit lemma larg amount formal knowledg survey paper use inform mathemat notat almost everi definit lemma mention given formal name typewrit font often parenthes use grep find file defin file use particularli eleg keep track larg amount formal knowledg seriou problem address well 131 notat mention paper use inform notat arriv manual translat formal lego notat l e x translat pure syntact chose surpress technic detail readabl present error quit like aris translat interpret paper may inform outlin formal work want believ one result must read formal statement formal definit use statement see pol97 discuss believ larg formal develop mp93 use formal notat verbatim text manual extract lego sourc file translat error occur reason believ verbatim text paper actual appear file inde document file drift apart time pol94b use formal notat mechan extract mark section sourc file follow idea knuth web could rerun extract updat document formal sourc mani reader complain document unread formal sourc present formal develop seriou problem perhap mechan extract mechan translat inform notat right direct pursu better wors sanitis present littl pure formal detail show exampl mostli sur press distinct boolean valu proposit valu howev dont want hide fact formal requir mani detail dont appear inform present actual depend file 3 l file one wrote lego gener compil file extens fulli annot term gener lego tactic call l file basic notat develop use lego builtin librari impred definit usual logic connect properti use standard notat connect quantifi type ecc reserv symbol rang certain type drop type label almost everywher eg p reserv rang paramet pp well known comput scienc notat use eg ifthenels list type list sometim concaten list append funtion ecc total oppos function object theori lambda term pt oper take extra argument failur valu eg assoc b l return b first element pair occur l pure languag section discuss formal languag pt includ term occurr substitut deriv strong induct principl wellform term pure languag pl tripl pp vv ss ffl pp infinit set paramet rang p q r global free variabl ffl vv infinit set variabl rang v x local bound variabl ffl ss set sort rang u constant pp vv ss decid equal pp vv infinit captur assumpt everi list paramet variabl exist paramet variabl occur list eg assum mathemat principl work parametr type pp vv ss state properti instanti particular type provabl properti eg natur number list finit enumer type work parametr preserv abstract state properti use proof 4 formula memberp l decid pp decid equal 21 term term pl trm rang n e b given grammar atom variabl paramet sort binder lambda pi applic precis trm induct gener six constructor everi term thought wellfound tree whose leav variabl paramet sort whose interior node lambda pi three branch applic two branch often defin function trm structur primit recurs induct definit usual intend vab fvagb bind v b howev intend bind structur determin definit trm made explicit definit substitut occurr equal term defin recurs trm inherit decid pp vv ss remark 21 notat often case analysi term structur want say binder lambda pi behav way introduc notat hvaia allow combin case actual formal notat would save much cut past develop proof length term use measur wellfound induct two properti measur use applic proper subterm b use induct length term everi term posit length use reason pt induct sum length term context 22 occurr paramet sort list paramet occur term comput primit recurs term structur boolean judgement whether given paramet occur given term decid member function list paramet paramsp p paramshvaia paramsa paramsa similarli defin 23 substitut machineri term need two kind substitut paramet variabl defin primit recurs term structur write apm formal psub substitut paramet p entir textual prevent captur sinc paramet bind instanc term hide paramet name binder apq ifpq q apff ff ff 2 vv ss aphvbib hvapbiapb substitut variabl v written avm formal vsub respect hide bound instanc substitut prevent captur avx ifvx x avff ff ff 2 pp ss avhxbib hxavbiifvx b avb use safe way type theori theori reduct convers prevent unintend captur variabl note oper total function renam variabl also occurr share regardless whether occur within differ bind scope contrast situat de bruijn indic import lemma prove vclatom vclosedff ff 2 pp ss vclbind tabl 1 induct definit relat vclose readi suppli term shape pvm mani properti oper prove formal develop 24 free occurr variabl intuit paramet free name term variabl intend bound name consid term free variabl well form defin induct predic vclose variableclos term tabl 1 analag way type relat specifi anoth kind wellformed turn everi pt typabl term vclose thu vclose use induct principl well form term relat simpl case idea recur mani time follow discuss length cours term form p vclose rule vclatom term shape v vclose rule introduc vclosedv defin vclose binder approach go binder central idea formal handl name hvaia vclose requir vcloseda vclose pva paramet p go binder first fill hole paramet p p doesnt appear conclus rule vclbind paramet use definit vclose say paramet anoth possibl choic vclose pvb deriv p formal question one task reader formal mathemat decid formalis correctli captur inform understand formalis help reader point altern formal prove relationship especi interest altern definit lead easier proof case see vclose remark 22 vclose equival free variabl vclose vclose vclose vclose observ may inform interest definit vclose reason use formal vclose allow us avoid talk vclose gener lemma suppos proof examin know must construct vclbind proof vcloseda rule vclose conclus shape vclose hvaib fact relat induct defin mean judgement deriv use rule often call case analysi gener lemma express properti call gener lemma bar92 invers principl dfh 93 note invers principl determin shape definit extens lego new use tactic autom use invers mcb96 describ paper done tactic avail frequent use invers induct definit rest paper without comment gener lemma definit vclose notic existenti quantifi case binder express failur subformula properti vclose 241 better induct principl vclose three obviou fact vclose alpha vclose lem vclose alpha directli provabl appear need length induct appeal wellfound induct subsidiari case analysi eg proof claim avclos alpha usual reason statement chang name prove length induct rather structur induct eg qvm gener subterm n shorter n deriv new induct principl packag argument consid altern definit call avclos differ rule binder right premis requir avclbind show vclose avclos deriv judgement induct avclos principl melham gordon rediscov gm96 section 32 worth say vclose type finit branch wellfound tree ie vclatom leav vclbind vclapp binari branch node hand avclos contain infinit branch wellfound tree avclbind creat branch paramet p notic also term one deriv avcloseda may mani deriv vcloseda differ paramet use left premis instanc avclbind equival vclose avclos avclos vclose vclose avclos direct follow easili structur induct follow claim avclos alpha proof claim prove induct lngthb work everi term appear premis rule avclos shorter term appear conclus type relat consid later properti subtl proof requir section 521 wellfound induct lngthb goal use term structur induct case sort vari abl paramet binder applic case analysi necessari dont use structur induct hypothes consid case binder must show avclos qv hnaib ie assumpt ie avclosedhnpvaiifvn b pvb avclos invers appli assumpt vclp also know avclbind suffic show notic pv doesnt chang lngth first hold ih h1 second let r arbitrari paramet consid case done h2 ie qvb doesnt actual appear goal pvb doesnt actual appear h2 final interest case v 6 n use straightfoward lemma alpha commut alpha rewrit goal avclos qv rnb ih suffic show avclos pv rnb follow h2 rewrit order substitut p r gain defin avclos show extension equival vclose view induct principl avclos induct principl extens vclose clearli stronger induct principl vclose insist extens point avclosedinduct may use prove statement judgement vclose deriv judgement notic could directli prove analogu claim avclos alpha vclose proof outlin work stronger premis avclos ie gener lemma stronger induct hypothes 25 technic digress renam sequenti oper use notion simultan substitut except follow special case renam finit function paramet paramet renam repres formal graph list order pair rp pp theta pp renam pair renam listrp ae oe rang renam action renam rentrm paramet lookup repres list extend composit term aep assoc p p ae aeff ff ff 2 vv ss aehvaia hvaeaiaea aem n aem aen tricki represent first pair p q ae return p action renam alway total finit support also assumpt renam graph function relat action renam func tional assoc find first match pair convers cons new pair front renam shadow old pair first compon formal observ renam commut substitut natur way renam iter substitut analys action renam term substitut rentrm conjug psub lemma easi show renam respect relat substitut paramet respect psub resp rentrm resp similar result hold n ari relat r inject surject renam use biject renam eg section 521 definit standard surprisingli difficult construct biject renam gener tricki represent mention howev clear renam swap paramet biject swap sur swap inj enough purpos 3 reduct convers section outlin theori reduct convers pure languag main result churchross standard theorem definit vclose section 24 interest point defin reduct relat goe binder understand reduct work consid inform onestep betareduct untyp lambda calculu style fi rule substitut nxm rh fi prevent captur restrict requir obviou captur occur n close usual inform sens distinguish paramet variabl enough n vclose actual restrict want reason vclose term anyway wellform term use fi binder allow must preserv invari fi appli vclose term fill hole left strip binder fresh paramet instanc incorrect captur might occur contract underlin redex remov outer binder x replac bound instanc fresh paramet q contract vclose redex thu obtain must rebind hole occupi q sinc q fresh instanc q mark hole rebound accord requir variabl term n qyn contractum vclose redex xq exampl pair xy one use z xz z 6 x howev deriv incorrect judgement thu incorrect captur avoid 31 parallel reduct rather use ordinari fi reduct take parallel reduct la taitmartinlof basic reduct relat parallel reduct conveni churchross standard theorem emphasis takahashi beauti account tak95 develop follow tak95 refin 311 onestep parallel reduct relat par red1 defin tabl 2 vclose depend congruenc rule binder choic paramet p appar howev someth new aris name side condit p 62 eigenvari pr1atom ff pr1beta vclosedu pr1bind pr1app tabl 2 1step parallel reduct condit 5 ensur paramet p correctli indic posit bound variabl compound term vclose term particip par red1 vclose reflex vclose term par red1 refl stronger induct principl rule pr1atom pr1 bind pr1app congruenc rule languag vclose section 241 introduc strong congruenc rule binder pr1 bind prove extension equival give us stronger induct invers principl eigenvari condit pr1bind techniqu use renam requir 5 kleen kle52 x78 notion pure variabl proof explain treat condit howev must explicitli consid oper deriv henc depend elimin wherea method requir rule induct ie nondepend elimin second author grate n shankar refer show equival omit detail similar argument use section 521 strong induct principl use show close substitut par red1 psub manystep parallel reduct par redn transit closur inherit properti par redn vclose par redn refl correspond properti mention 312 alphaconvers defin ff convers ff least congruenc ie ff exactli without rule pr1beta ff definit symmetr inspect show transit requir stronger induct principl ff prove way henc ff equival relat 6 decid vclose term decid alpha conv ff straightfoward messi proof doubl induct avclosedb inform alphaconvers use chang name vari abl hxaib ff prevent captur howev true alpha conv pi closur ff convers one coquand origin motiv distinguish variabl paramet avoid need reason ff convers mani argument churchross standardis subject reduct achiev goal namecarri syntax regard abbrevi quotient modulo ff convers formalis relat r parallel reduct realli intend r modulo quotient structur ie ff say relat r 6 contrast gallier meticul longwind treatment gal90 close ff ffffir rffiff strongli close ffffir r full wrt ff rffiff ffffir strongli full rffiff r remark 31 strongli close ff convers proof transit ff addit case redex handl observ ff variant redex redex howev full wrt ff class exampl ff variant lh reduc 1 qy 1 although ff variant rh 313 churchross theorem use argument tait martinlof modern tak95 prove first cr theorem par redn dp usual strip lemma argument diamond properti comp dev par red1 dp introduc induct characteris complet develop gamma comp dev 7 given rule except applic rule cdapp gamma ab gamma lambda side condit cdapp forc contract redex determinist subrel theorem finit develop becom combin ffl induct definit gamma may think partial correct assert ffl exist vclose term complet develop comp dev exist may think termin argument 7 cf definit gamma function structur recurs term tak95 separ concern give us advantag takahashi inform proof consid proof gamma subsidiari induct caseanalysi resolv redexnon redex distinct case applic handl exist proof induct definit gamma alreadi delin redexnonredex distinct price pay longer work objectlevel function rather function relat cours simplifi matter consid develop entir set redex term suffici purpos refin analysi eg hue94 would take us beyond simpl datastructur term diamond properti comp dev par red1 dp follow easili follow takahashi lemma comp dev precr whose proof induct gamma 0 invers n usual interest case redexredex appeal par red1 psub remark 32 proof make appeal ff convers gamma relat strongli close ff convers inde may show follow two properti strengthen comp dev exist name comp dev uniqu comp dev exist uniqu 32 convers defin convers conv symmetr transit closur inherit properti conv vclose conv refl mention second churchross theorem straightfoward prove convers convcr 33 normal form term beta normal beta norm beta redex may defin rule avclos except rule applic bnapp beta norm beta norm b beta norm ab lambda beta norm term vclose beta norm vclose relat reduct normal form defin n beta norm n normal reflex reduct normal form everi reduct normal form normal form parrednbnormisbnorm reduct normal form alphaconvert normal form parrednbnormisalphaconv henc churchross normal form term uniqu alphaconvers nfuniqu sinc ff convers also hold nfalphaclass thu class normal form vclose term either empti exactli alphaconvers equival class decid convers convers decid normal term proof depend churchross sinc normal form uniqu alphaconvers also depend decid alphaconvers section 312 34 standard theorem work typecheck requir us go beyond theorem churchross analysi reduct particular talk syntaxdirect system must consid determinist reduct relat weakhead reduct simplest typic wh 0 tabl 3 one step weakhead reduct properti requir relat follow counterpart quasinormalis theorem wh standardis lemma takahashi show approach theorem analysi parallel reduct head reduct follow intern reduct socal semistandard lemma mit79 adapt method case weakhead reduct correspond modifi notion intern reduct simplifi somewhat particular remov need complex invari n moreov argument employ replic context head reduct intern reduct classic sens recent round line develop prove standard theorem pure languag main novelti remov mention residu reader may unconvinc formalis standard theorem thing observ desir consequ standard requir analys typecheck lemma alreadi corollari semistandard lemma three main ingredi theorem weakhead reduc tion intern parallel reduct standard reduct 341 weakhead reduct one step weakhead reduct wh red1 shown tabl 3 invers see weakhead reduct lambda may assum without loss gener lambda rule wh1app built vclose assumpt definit alway use context term vclose reader may valid definit consid weak head normal form tabl 4 variou lemma relat wh whatom whnfff ff 2 pp ss whbind lambda tabl 4 weakhead normal form ip1atom ff ip1bind tabl 5 one step intern parallel reduct whnf wh red1 determin wh nf nf1 alpha conv resp wh nf manystep weakhead reduct iwh wh redn defin reflex transit closur wh close renam ing substitut psub resp wh redn applic right 342 intern parallel reduct classic notion head reduct lead notion intern redex nonhead redex adapt notion weakhead duction give us definit intern parallel reduct ipar red1 shown tabl 5 allow arbitrari parallel reduct compound term except rator posit applic restrict intern reduct immedi structur induct intern parallel reduct parallel reduct also import abstract properti ipar red1 refl wh nf preserv reflect weak head normal form fortiori shape outermost constructor term reflect weakhead normal form togeth lemma key proof quasinormalis result open discuss semistandard par red1 wh redn ipar red1 proof proof proce induct tricki case parallel fi step induct hypothesi obtain introduc skolem constant aw bw requir show exist mw sinc psub resp wh redn psub vsub alpha may conclud result stitch weakhead reduct sequenc togeth provid establish follow claim easi base case lemma 24 tak95 wh ipar red1 psub prove way show closur parallel reduct substitut induct detail observ must explicitli assum reduct n n 0 parallel takahashi build invari wherea use wh ipar red1 psub obtain assumpt free premis associ reduct show case applic b induct hypothesi exist pa npa iwh pa proof claim henc whole lemma complet take p def pa npb appeal psub resp wh redn ipar red1 app par red1 psub establish full semistandard result must also show commut result ipar wh redn commut corollari induct mw iwh 0 follow lemma ipar wh red1 commut proof induct ancillari hypothesi case trivial except applic show case whredex use fact ipar red1 reflect weakhead normal form infer uu 000 moreov sinc invers u v 8p pua 000 pva 00 choos p 62 00 p 62 000 appli pr1sub obtain bua 000 appeal lemma 342 final conclud p requir throughout use induct definit variou reduct relat establish lemma contrast takahashi treatment induct term structur invers relat hypothes lead slightli weaker argument consequ need stronger induct variant refin argument would inconceiv without machin support 343 standard reduct properti standard reduct gamma usual state eg mitschk mit79 term highli intension geometr definit term formalis definit directli would enrich datatyp term order abl speak stdatom ffgamma ff ff 2 pp ss stdbind stdapp stdwh tabl standard reduct standard adapt plotkin redex posit term approach taken hue94 chosen instead present tabl 6 adapt plotkin notion standard sequenc plo75 essenc present defin standard reduct least congruenc close prefix weakhead reduct leav implicit sequenc redex contract may comput recurs lefttoright charact thu avoid mention residu redex posit remark 33 defin standard reduct arbitrari length without consider reduct normal note furthermor howev may easili achiev end ad side condit 0 6 stdapp rule whnfb stdwh rule also definit strongli close ff convers strongli full final aim follow standard theorem standardis lemma induct suffic show notion standard reduct absorb singl step parallel reduct lemma 342 stdwh suffic prove follow lemma standard reduct absorb singl step intern parallel reduct standard absorb ipar red1 proof proof induct b gamma c avoid reconsid tricki applic case commut lemma may exploit fact preserv reflect shape term price pay need strong induct b gamma c ancillari hypothesi expans step nonatom case make subsidiari appeal semistandard order abl exploit induct hypothes give rather mechan abstract nonsens flavour argument emphasis real complex lie proof lemma 342 focu case binder hypothes invers h conclud 8p pwb c pub semistandard c iwh aw induct hypothesi iha aw gamma 0 use stdwh fold back reduct c iwh aw final obtain c gamma 0 exactli way modulo choic paramet obtain pwb c gamma pvb 0 c gamma hva 0 ib 0 construct conclud proof standard reduct absorb intern reduct henc parallel reduct final may conclud everi parallel fi reduct sequenc may standard 4 pure type system pt class type theori given set deriv rule tabl 7 parameter pl pp vv ss two relat inform ax 1 2 start weak lda app tabl 7 type rule pt formal name gt ffl rule rl ss theta ss theta ss written inform rl usual intend ax rl decid assumpt use basic theori pt interest algorithm typecheck pol94b pol95 even stronger assumpt decid need type judgement shape mean type formal name relat gt old name gener type system call gamma subject predic judgement context rang gamma delta bind paramet type context formal list pp theta trm gamma particip deriv judgement 41 gener abstract convers gener pt parameter rule tabl 7 anoth relat call abstract convers occur side condit rule tconv convent present pt bar92 actual relat betaconvers use sever reason interest parameter pt convers relat one thing type theori ecc implement lego actual pt use gener notion convers call cumul ecc special interest us formal extens pt includ ecc formal develop includ typecheck algorithm ecc pol94b even pt notori open problem expans postpon problem vbjmp94 pol94b ask convers relat tabl 7 replac betareduct without chang typabl term know one work pt use abstract convers relat bm properti necessari prove substitut lemma section 54 reflex transit invari substitut cnv tran 8a prove subject reduct theorem section 55 final need convers relat contract redex inter nal churchross properti notic contravari last properti easi prove properti formal instanti cumul ecc discharg assumpt work abstractli make assumpt equival relat partial order use asymmetr symbol signific properti gener hold includ differ abstractconvers pt fi convers detail pol94b kind analysi properti actual use bodi work greatli aid formal 42 rule formal pt leav asid abstract convers rule tabl 7 differ standard inform present bar92 sever way first handl paramet variabl pi lda rule similar rule tabl 2 differ restrict weaken atom subject lda rule bind substitut treatment oper binder tabl 7 analog reduct relat consid see discuss rule lda substitut use rule app may caus captur variabl must show n vclose fact gt vclose lem structur induct also follow easili valid context vclose obviou sens atom weaken standard present weaken pt allow term subject weaken restrict atom term ff see rule weak rule deriv judgement weaken seen admiss section 53 allow fewer deriv deriv weaken push leav give cleaner meta theori induct deriv treat fewer case exampl given applic subject confus whether deriv app weak thu atom weaken judgement may deriv tconv exactli one remain rule lambda rule rule type lambda inform present bar92 geu93 convent understand bound variabl x doesnt realli occur conclus rule notat refer alphaequival class 8 thu concret notat subject predic lambda rule may bind differ variabl formal rule lda one might instead rule first attempt surprisingli system deriv judgement system tabl 7 lemma rlt gt gt rlt howev use lda subject reduct theorem difficult prove deriv distort need use convers rule alphaconvers see pol94b detail 5 pt abstract convers survey develop lead subject reduct theo rem main differ section present bar92 use atom weaken rule section 42 simpler proof subject reduct section 55 51 basic fact sampl mani small fact establish usual simpl structur induct paramet lemma paramet occurr judgement bound context bind instanc valid context distinct paramet free param lem1 8 howev left premis rule free instanc actual symbol intend refer context entri xa thu convent read rule doesnt make sens concret notat start lemma everi axiom deriv everi valid context global bind valid context deriv 52 better induct principl pt previou relat defin altern type relat apt identifi deriv judgement inessenti differ paramet occur deriv conclus differ right premis pi rule left premis lda rule alda premis avoid choos particular paramet requir premis hold paramet reason hold suffici fresh paramet show deriv judgement interest compar side condit pi api pi need side condit p 62 b unintend occurr p ie aris occurr variabl x bound right premis need p valid gammapa obviou right premis api requir right premis p gammapa remain valid ie p occur gamma howev condit requir gener right premis api must hold infinit mani paramet occur finit mani instanc occur b 521 equival previou relat equival give us stronger induct principl stronger gener invers lemma apt gt gt apt proof direct straightfoward structur induct prove direct first prove lemma biject renam respect bij ren resp apt structur induct 9 proceed prove structur induct deriv case trivial except rule pi lda consid case pi must prove assumpt l prem prem rule api use l ih suffic show gammara arbitrari paramet r 62 gamma thu use free paramet lemma section 51 know l prem noccg prem prem take deriv use bijrenrespapt renam r ih recal section 25 swapp q alway biject thu finish show clear first equat hold nopg noccg nora nopa second equat notic done trivial assum r 6 p henc r 62 pnb r prem noccg use vsub rentrm commut section 25 9 actual inject renam enough preserv prove know requir 53 thin lemma weaken thin lemma import formul show full weaken weaken admiss system justifi use atom weaken definit section 42 subcontext relat defin also say delta extend gamma definit use inform bar92 gn91 vbj93 much complic definit requir express properti represent use de bruijn indic global variabl state thin lemma naiv attempt prove thin lemma structur induct encount seriou difficulti paramet side condit see mp93 pol94b discuss proof straightfoward use induct justifi previou section full weaken rule corollari thin lemma 54 cut type correct substitut lemma substitut lemma prove induct deriv gammap get commonli use case cut rule instanti delta empti context among correct criteria type system everi type well form pt theorem type correct proof structur induct nontrivi case rule app use substitut lemma vsubispsubalpha section 23 subject reduct theorem closur reductio import properti type system term lose type reduct thu type classif term preserv comput fact show entir judgement close reduct need five properti abstract convers section 41 551 nonoverlap reduct goal prove usual call subject reduct theorem naiv strategi show one step reduct preserv type induct critic case rule app applic actual redex contract order simplifi case want avoid overlap redex allow fi rule want reduct relat overlap whose transit closur equal anoth difficulti rule pi lda subterm subject conclus typelabel appear context part premis thu case induct argument reduct subject conclus may result reduct context premis suggest induct hypothesi strengthen simultan treat reduct context subject lead goal ordinari onestep fi reduct approach use gn91 bar92 produc larg number case distinct base subterm subject contain one redex contract subcas inessenti except isol one nontrivi case redex contract applic construct rule app simultan treatment one reduct either context subject suggest us proof would smoother use reduct relat congruent simultan branch forbid overlap redex one step nonoverlap reduct red1 defin rule tabl 2 except fi rule modifi prevent overlap redex nor1beta uu b assum properti cnv conv section 41 extend composit context red1cxt pair context term red1subj write gamma hgamma mi also defin redn transit closur show par redn par redn 552 main lemma subject reduct lem proof structur induct show interest case rule app given l prem prem red must show induct hypothes type correct gtsdm pigener lemma 2 p 62 b cut rule gtsdl gtsdb also use vsubispsubalpha section 23 sever time case two subcas 0 l goal rule app induct hypothes easili use rule tcnv gt dbsub expand l 0 predic back l requir use cnvconv goal lambdagener lemma w b 0 0 cnvcrpi c time use proof gener lemma gtsdpi tcnv cnva gtsdl gtsda tcnv cnvb gtsdbsub suffic show follow cut gtsdl gtsdb 553 closur reduct easi show subject reduct theorem gtssr use corollari predic reduct final extend composit context 10 close betareduct gtsallr relat equival transit close composit extens context trivial use lemma predic conv unlik rule tcnv dont ask evid type side condit use prove lemma requir technic restrict eg ecc type hierarchi chop finit level fail properti sort top hierarchi closur alphaconvers gtsallr fact ff follow judgement preserv ff gt alpha close henc implement may typecheck judgement state user rather search alpha equival judgement deriv see pol94b pol94a 56 anoth present pt sever rule context gamma occur list premis order build complet deriv gamma must construct start weak branch appear much effici assum start valid context check rule extend context ie right premis pi left premis lda maintain valid keep implement actual use work current context mathemat assumpt present system tabl 8 show equival idea origin due martinlof mar71 use hue89 system two judgement type judgment shape lvtyp valid judgement shape gamma lv lvcxt note mutual induct valid depend type convers prove lv character iff gt lvcxt lvtyp direct proof subtl formal use auxiliari mutual induct definit wellfound induct requir depend elimin place entir develop either mutual induct depend elimin use abstractli direct claim termin function replac proof annot omit lv fastgrow function termin strong result proof describ pol94b lvlda lvcon tabl 8 system local valid context lvtyp lvcxt 6 pt fi convers remark littl need theori describ far section 41 pol94b pursu theori pt abstract convers correct typecheck algorithm cumul pt includ luo system ecc point standard theori pt fi convers ie instanti preceed actual relat lego command cut execut admiss rule substitut lemma section 54 theori lead strengthen theorem typecheck algorithm class pt detail vbjmp94 61 strengthen strengthen tricki result pt first prove jut ting vbj93 gammaqc gt strengthen develop formal strengthen corollari work typecheck describ detail vbjmp94 particularli interest prove strengthen lego use discharg command 62 function pt function pt well behav perhap one interest practic function ae function pt ax rl graph partial function necessarili procedur comput function uniqu type definit function pt make sens abstractconvers pt use set give kind uniqu build deriv type judgement guid syntax subject determinist axiom use instanc ax rule use instanc pi pol94b idea behind definit function uniqu mention propag whole deriv give properti type uniqu convers conv uniqu type fi convers pt prove function conv uniqu type type unic structur induct howev proof use properti modifi prove similar properti abstractconvers pt type unic linear partial order correct gener princip type lemma say type princip type hope everi two type compar pol94b subject expans fi pt uniqu type also subject expans properti subject expans conv uniqu type subject reduct say term dont lose type reduc tion lemma say term dont gain type reduct princip premis wellformed premis exampl two differ way subject expans fail nonfunct pt vbjmp94 r formal strong normal proof system f lego lambda calculi type coq en coq type depend construct mathemat ic subject reduct properti algebra type system fsub system algorithm test convers type theori combin share reduct infinit object type theori algorithm typecheck depend type toward check proof checker girard collect paper gerhard gentzen logic type system five axiom alpha con version modular proof strong normal calculu construct construct engin residu theori increment chang lego introduct metamathemat lego proof develop sy tem user manual technic report ecslfcs92211 lfc comput scienc dept univers edinburgh king build program specif data refin type theori comput reason type theori comput scienc per martinlof invert induct defin predic lego standardis theorem pure type system maliz churchross proof isabellehol code bind substitut explicitli abel proof churchross theorem represent logic framework closur alphaconvers theori lego proof checker extend calculu construct verifi typecheck believ machinecheck proof natur deduct program verif synthet domain ori synthet domain theori type theori anoth logic comput function theori symbol express auxiliari variabl recurs procedur mechan proof churchross theorem substitut revisit parallel reduct formul martinlof theori type explicit substitut master thesi tr ctr michael norrish mechanis hankin barendregt use gordonmelham axiom proceed acm sigplan workshop mechan reason languag variabl bind p17 august 26 2003 uppsala sweden christian urban michael norrish formal treatment barendregt variabl convent rule induct proceed 3rd acm sigplan workshop mechan reason languag variabl bind p2532 septemb 3030 2005 tallinn estonia yasuhiko minamid koji okuma verifi cp transform isabellehol proceed acm sigplan workshop mechan reason languag variabl bind p18 august 26 2003 uppsala sweden michael norrish mechanis calculu use classic first order theori term permut higherord symbol comput v19 n23 p169195 septemb 2006 j ambler r l crole alberto momigliano definit approach primitivex recurs higher order abstract syntax proceed acm sigplan workshop mechan reason languag variabl bind p111 august 26 2003 uppsala sweden dimitri hendrik proof reflect coq journal autom reason v29 n34 p277307 2002 jonathan ford ian mason formal foundat oper semant higherord symbol comput v16 n3 p161202 septemb conor mcbride jame mckinna function pearl numberi free variabl proceed 2004 acm sigplan workshop haskel septemb 2222 2004 snowbird utah usa jame cheney scrap namepl function pearl acm sigplan notic v40 n9 septemb 2005 thierri coquand randi pollack makoto takeyama logic framework depend type record fundamenta informatica v65 n12 p113134 januari 2005 ren vestergaard jame brotherston formalis firstord confluenc proof calculu use onesort variabl name inform comput v183 n2 p212244 15 june andrew pitt nomin logic first order theori name bind inform comput v186 n2 p165193 01 novemb conor mcbride jame mckinna view left journal function program v14 n1 p69111 januari 2004 riccardo pucella sigact news logic column 14 acm sigact news v36 n4 decemb 2005