decomposit time decis tabl use presynthesi optim presynthesi optim transform behavior hdl descript optim hdl descript result improv synthesi result introduc decomposit time decis tabl tdt tabular model system behavior tdt decomposit base kernel extract algorithm experi use name benchmark demonstr tdt decomposit use presynthesi optim b introduct presynthesi optim introduc 1 sourcelevel transform produc better hdl descript instanc transform use reduc controlflow redund make synthesi result rel insensit hdl codingstyl also use reduc resourc requir synthes circuit increas compon share behaviorlevel 2 tdt represent consist main tabl hold set rule similar specif fsmd 3 auxiliari tabl specifi concurr data depend serial relat among datapath comput action delay tabl specifi execut delay action rule section model base notion condit action condit may presenc input input valu outcom test condit conjunct sever condit defin rule decis tabl collect rule map condit conjunct set action action includ logic arithmet inputoutputio messagepass oper associ execut delay action action group action set compound action action set associ concurr type serial parallel dataparallel 4 condit stub condit entri action stub action entri figur 1 basic structur tdt structur rule section shown figur 1 consist four quadrant condit stub set condit use build tdt condit entri indic possibl conjunct condit rule action stub list action may appli certain rule action entri indic map rule action rule column entri part tabl consist two halv one condit entri quadrant call decis part rule one action entri quadrant call action part rule addit set rule specifi main tabl rule section tdt represent includ two auxiliari tabl hold addit inform inform specifi auxiliari tabl includ execut delay action serial data depend concurr type pair action exampl 11 consid follow tdt 11 12 21 22 31 32 11 12 21 22 31 p 32 delay action 11 12 select execut sinc action 12 specifi successor 11 action 11 execut one cycl delay follow execut 12 symbol p indic action dataparallel ie parallel modulo data depend parallel action respect arrow row 11 column 12 indic 11 appear 12 contrast arrow row 11 column 12 indic 11 appear 12 2 execut tdt consist two step 1 select rule appli 2 execut action set select rule map two action set may select execut order execut action set determin concurr type serial relat data depend specifi among action set 4 indic p tabl action tdt may anoth tdt refer call tdt contain action tdt correspond hierarchi specifi hdl descript consid follow exampl exampl 12 consid follow call hierarchi c action need invok call tdt 2 forc evalu condit c 2 result action 2 3 execut addit inform concurr type need specifi action 1 tdt 2 sinc lie differ control path reason omit auxiliari tabl tdt 2 2 procedurefunct call hierarchi input hdl descript result correspond tdt hierarchi tdt call hierarchi typic merg increas scope presynthesi optim process presynthesi optim merg flatten call hierarchi specifi origin hdl descript paper present tdt decomposit revers merg process first flatten call hierarchi extract common may find effici behavior represent lead improv synthesi result allow us restructur hdl code code structur similar heurist optim multilevel logic synthesi paper introduc coderestructur addit presynthesi optim techniqu columnrow reduct action share present earlier 1 4 2 rest paper organ follow next section introduc notion tdt decomposit relat problem kernel extract algebra form tdt section 3 present algorithm tdt decomposit base kernel extract section 4 show implement detail algorithm present experiment result final conclud section 5 present futur plan tdt decomposit process replac flatten tdt hierarch tdt repres equival behavior mention earlier decomposit revers process merg togeth merg allow us produc hdl descript optim subsequ synthesi task rel insensit code style sinc decomposit use procedur call abstract arbitrari partit tabl conditionact matric use understand tdt structur requir consid exampl exampl 21 consid follow tdt notic common pattern condit row c 6 c 7 action row 6 7 8 2 exampl 21 flatten tdt first three column ident condit entri c 1 c 2 ident action entri 1 2 column differ row correspond condit fc 4 c 5 g action fa 3 4 5 g appear first three column may result exampl merg subtdt consist condit fc 4 c 5 g action fa 3 4 5 g note common pattern flatten tdt may result merg procedur call twice main program may simpli correspond common origin hdl descript whatev caus extract common part make separ subtdt execut action main tdt figur 2 show hierarchi tdt specifi behavior tdt exampl 21 condit explain later equival verifi merg hierarchi tdt 4 note condit action partit among tdt ie condit action repeat among tdt 9 1 5 8 figur 2 one possibl decomposit tdt exampl 21 alway possibl decompos given tdt hierarch tdt shown figur neither alway valid merg tdt hierarchi flatten tdt 4 two transform valid specifi concurr type data depend serial preserv particular exampl assum order execut action follow order appear condit stub transform valid also requir ffl action 1 2 modifi valu use evalu condit c 4 c 5 ffl action 1 2 modifi valu use evalu condit c 6 c 7 suppos given hierarch tdt shown figur 2 start merg phase get flatten tdt shown exampl 21 decomposit phase choos factor tdt 3 call overal effect merg follow tdt decomposit equival inlin expans procedur correspond lead obviou improv hardwar synthesi howev reduc execut delay descript implement softwar compon overhead associ softwar procedur call common flatten tdt may result multipl call procedur indic tdt 3 figur 2 could also result common input hdl specif case extract lead size reduct synthes circuit structur requir tdt decomposit effici captur twolevel algebra represent tdt 2 represent captur control depend action set henc strictli sub set tdt inform mention earlier tdt base notion condit action condit variabl c defin posit condit liter denot l c correspond valu condit entri also defin neg condit liter denot l c correspond n valu condit entri pair posit neg condit liter relat correspond condit variabl tdt defin delta oper two action liter two condit liter repres conjunct oper oper commut associ tdt set rule consist condit part determin rule select action part list action execut rule select execut condit part rule repres l c l c ncond number condit tdt cei condit entri valu ith condit row rule action part rule repres l nact number action tdt aei action entri valu ith action row rule rule tupl denot becom clear later purpos tdt decomposit rule express product correspond action condit liter call product cube given tdt defin algebra express e consist disjunct cube correspond rule simplic drop delta oper denot use c instead l c l algebra express tdt howev note particular c c shorthand notat l c l c follow boolean law symbol follow algebra law symbol comput treatment algebra reader refer 4 exampl 22 algebra express tdt exampl 21 6 7 8 c 3 1 9 6 7 8 c 3 1 2 7 8 c 3 1 2 8 note specif delay concurr type serial relat data depend also notic c c shorthand notat l c l c l respect 2 21 kernel extract tdt decomposit import keep action liter condit liter within one subtdt decompos tdt must partit condit action liter captur introduc notion support tdt support definit 21 support express set liter appear express definit 22 tdtsupport express e set action liter posit condit liter correspond liter support express e exampl 23 express c 1 c 2 c 3 c 6 c 7 2 8 cube support fc g tdt support fc g 2 consid tdt decomposit subtdt disjoint tdtsupport tdt decomposit use algebra divis tdtexpress use divisor identifi sub tdt defin algebra divis folllow definit 23 let ff dividend remaind g algebra express say f divid algebra divisor f divid f dividend tdtsupport f divisor tdtsupport f quotient disjoint f divisor delta f quotient nonempti algebra divisor call factor remaind void express said factor cube definit 24 kernel express cubefre quotient express divid cube call cokernel express exampl 24 rewrit algebra form tdtexampl 21 follow c 7 8 express c 4 3 4 5 c 5 3 cubefre therefor kernel tdtexampl 21 correspond cokernel c 1 c 2 1 2 similarli c 6 c 7 6 7 8 8 also kernel tdtexampl 21 two correspond cokernel c 1 c 2 c 3 2 c 1 1 2 2 3 algorithm tdt decomposit section present algorithm tdt decomposit core algorithm similar process multilevel logic optim therefor first discuss comput algebra kernel tdtexpress show complet algorithm call kernel comput core address import issu preserv datadepend action tdt decomposit 31 algorithm kernel extract naiv way comput kernel express divid cube correspond power set support set quotient cube free weed other save kernel set 5 procedur improv two way 1 introduc recurs procedur exploit properti kernel kernel express also kernel express 2 reduc search exploit commut delta oper algorithm 31 show method adapt kernel extract algorithm due brayton mcmullen 6 take account two properti reduc comput complex algorithm 31 recurs procedur use kernel extract input tdt express e recurs index j output set kernel tdt express e extractkernelr n j getcubeset l j 2 largest cube set contain l st getcubeset l k 62 c8k endfor algorithm getcubeset c return set cube e whose support includ c order liter condit liter appear action liter use n index last condit liter sinc cokernel contain action liter correspond valid tdt decomposit notic l c l c two differ liter explain earlier algorithm applic cubefre express thu either function e cubefre made divid largest cube factor determin intersect support set cube exampl 31 run algorithm 31 algebra express tdt 21 get follow set kernel c 4 c 5 3 c 7 7 8 c 5 3 c 7 8 note k 6 cube action liter indic tdt rule action select execut k 6 lead valid tdt decomposit howev k 6 elimin kernel set explain later 2 32 tdt decomposit present tdt decomposit algorithm base kernel extract algorithm present earlier decomposit algorithm work follow first algebra express tdt construct set kernel extract algebra express eventu use reconstruct tdt represent hierarch form algebra kernel may use tdt decomposit sinc algebra express carri subset tdt inform use set filter procedur delet kernel set kernel correspond invalid tdt transform transform produc model result inferior synthesi result algorithm 32 tdt decomposit input flatten tdt tdt output hierarch tdt root tdt f return tdt 0 procedur constructalgebraicexpress build algebra express tdt follow algorithm 32 function express build express set set accord data structur choos twolevel algrebra express tdt complex algorithm oar cr number action tdt r number rule tdt c number condit tdt symbol oe algorithm denot empti set algorithm 33 construct algebra express tdt construct posit condit liter l c construct neg condit liter l c endfor construct action liter l endfor r gammao empti set r gammao cei cei endfor return procedur extractkernelsop call recurs procedur extractkernelrsop 1 get set kernel sop algebra express tdt kernel appear algebra express tdt kernel would help reduc resourc requir therefor trim k use procedur trimkernel1 algorithm 34 show detail trimkernel1 function co gamma kernelsk e return set cokernel kernel k express e number cokernel correspond number time subtdt correspond certain kernel call hierarchi tdt algorithm 34 remov kernel correspond singl occurr pattern tdt matric foreach k 2 k j cokernelsk endforeach exampl 32 look kernel exampl 31 kernel k trim trimkernel1 sinc one cokernel 2 sinc inform data depend captur algebra form tdt kernel k may correspond decomposit preserv datadepend specifi origin tdt kernel trim use procedur trimkernel2 algorithm 35 remov kernel correspond invalid tdt transform e tdt f foreach k 2 k flag gamma0 foreach foreach action liter l q action modifi condit correspond condit liter k foreach action liter l ff k l specifi appear l ff flag endforeach endforeach endforeach flag endforeach worst case complex algorithm oarcr sinc program check conditionact liter correspond condit entri action entri tdt exampl 33 suppos exampl 21 2 modifi c 6 result 2 also use 6 2 modifi c 6 hierarch tdt need specifi c 6 come tdt 2 preserv behavior howev violat data depend specif 2 6 therefor condit given kernel k c 7 8 remov trimkernel2 2 express may kernel cokernel 1 kernel free howev kernel use tdt decomposit use procedur trimself delet express kernel set use fro tdt decomposit also mention earlier kernel express kernel kernel express howev paper limit discuss tdt decomposit involv two level call hierarchi reason remov express kernel set also delet smaller kernel also kernel kernel express algorithm 36 kernel trim routin foreach k 2 k comput q r st tdtsupportk tdtsupportr disjoint endforeach g foreach k 2 k foreach q 2 k differ k q kernel k endforeach endforeach exampl 34 look kernel e tdt21 kernel k 5 elimin trimkernel3 sinc 5 8 also use cube reason k 6 k 7 also elimin 2 final reconstruct hierarch tdt represent use remain algebra kernel tdt express algorithm outlin consist two procedur reconstruct tdt kernel constructtdt call procedur build tdt algebra express wors case complex algorithm ocr ar algorithm 37 construct hierarch tdt use kernel input flatten tdt tdt algebra express exp set kernel k exp output new hierarch tdt construct tdt kernelstdt k exp f foreach k 2 k gener new action liter l comput q r st endforeach return constructtdttdt e form condit stub use condit tdt least correspond condit liter e form condit matrix accord condit liter appear cube e form action stub use condit tdt least correspond action liter e new action liter correspond extract subtdt form action matrix accord action liter appear cube e use compon return exampl 35 assum express c 6 c 7 6 7 8 8 kernel left trim procedur perform kernel set k algebra express tdtexampl 21 hierarch tdt shown construct run reconstruct tdt kernel 9 1 4 implement experiment result show effect use tdt decomposit presynthesi optim incorpor decomposit algorithm pumpkin tdtbase presynthesi optim tool 4 figur 3 show flow diagram process presynthesi optim ellips titl kernel extract figur 3 show tdt decomposit algorithm fit global pictur presynthesi optim use tdt assert parser merger merg tdt optim optim tdt code gener optim hdl input hdl assert user specif b merg tdt column reduct row reduct kernel extract optim tdt action share figur 3 flow diagram presynthesi optim whole pictur b detail optim experiment methodolog follow hdl descript compil tdt mod el run optim final output hardwarec descript output provid olympu highlevel synthesi system 7 hardwar synthesi minimum area object use olympu synthesi result compar effect optim hardwar size hdl descript hardwar synthesi perform target technolog lsi logic 10k librari gate result compar final circuit size term number cell addit merg algorithm column row optim algorithm origin implement pumpkin 1 ad anoth optim step tdt decomposit evalu effect step turn column reduct row reduct action share pahs run pumpkin sever highlevel synthesi benchmark design tabl 1 synthesi result cell count tdt decomposit carri design modul circuit size cell delta daio phase decod 1252 1232 2 receiv 440 355 19 comm dma xmit 992 770 22 exec unit 864 587 cruiser state 356 308 14 tabl 1 show result tdt decomposit exampl design design daio refer hardwarec design digit audio inputoutput chip daio 8 design comm refer hardwarec design ethernet control 9 design cruiser refer hardarec design vehicl control descript state vehicl speed regul modul design found highlevel synthesi benchmark suit 7 percentag circuit size reduct comput descript list last column tabl 1 note improv depend amount common exist input behavior descript 5 conclus futur work paper introduc tdt decomposit complementari procedur tdt merg present tdt decomposit algorithm base kernel extract algebra form tdt combin tdt decomposit merg restructur hdl descript obtain descript lead either improv synthesi result effici compil code experi name benchmark show size reduct synthes circuit code restructur sequenti decomposit sd propos 10 map procedur separ hardwar compon typic specifi process hdl use sd procedur map offshelf compon fix commun protocol complement protocol construct accordingli rest synthesiz part system therefor futur plan research present paper plan combin sd tdt decomposit obtain novel system partit scheme work tabular represent investig possibl advantagesdisadvantag approach partit approach r hdl optim use time decis tabl limit except model use presynthesi optim specif design embed system system model presynthesi use time decis tabl synthesi optim digit circuit decomposit factor boolean express olympu synthesi system digit design design digit input output chip decomposit sequenti behavior use interfac specif complement tr high level synthesi asic time synchron constraint specif design embed system hdl optim use time decis tabl limit except model use presynthesi optim synthesi optim digit circuit olympu synthesi system ctr jian li rajesh k gupta hdl code restructur use time decis tabl proceed 6th intern workshop hardwaresoftwar codesign p131135 march 1518 1998 seattl washington unit state j li r k gupta algorithm determin mutual exclus oper behavior descript proceed confer design autom test europ p457465 februari 2326 1998 le palai de congr de pari franc sumit gupta rajesh kumar gupta nikil dutt alexandru nicolau coordin parallel compil optim highlevel synthesi acm transact design autom electron system toda v9 n4 p441470 octob 2004