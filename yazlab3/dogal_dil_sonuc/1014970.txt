fast distribut approxim algorithm posit linear program applic flow control studi combinatori optim problem set distribut agent must achiev global object use local inform papadimitri yannakaki proceed 25th acm symposium theori comput 1993 pp 121129 initi studi problem framework distribut decisionmak must gener feasibl solut posit linear program inform local constraint extend model allow distribut decisionmak perform local commun acquir inform time explor tradeoff amount commun qualiti solut linear program decisionmak obtainour main result distribut algorithm obtain 1 approxim optim linear program solut use polylogarithm number round local commun algorithm offer signific improv logarithm approxim ratio previous obtain awerbuch azar proceed 35th annual ieee symposium foundat comput scienc 1994 pp 240249 problem provid compar run time result appli directli applic network flow control applic distribut router must quickli choos alloc bandwidth connect use local inform achiev global object sequenti version algorithm faster consider simpler best known approxim algorithm capabl achiev 1 approxim ratio posit linear program b introduct processor distribut environ must make decis base local data thu fast distribut algorithm must often without global inform system whole exactli comput mani target function distribut model quickli provabl hard 15 howev quit surprisingli interest global optim problem close approxim base local inform modest amount local commun work motiv applic develop flow control polici must achiev global object function flow control mechan router network distribut avail network bandwidth across connect work rout polici determin rout network connect must use transmit packet problem regul rate connect may inject data along fix rout problem flow control connectionori ratebas approach flow control standard rout avail bit rate trac atm network 9 expect becom wide use packetswitch network approach router network must make regulatori decis base local inform typic consist current transmiss rate connect use router exist flow control polici tri satisfi local object function maxmin fair 7 1 11 howev mani practic scenario global object function depart comput scienc hebrew univers jerusalem israel yairbcshujiacil depart comput scienc boston univers boston byerscsbuedu depart comput scienc technion haifa israel dannycstechnionacil much work complet author aliat intern comput scienc institut berkeley california univers california berkeley research support part nsf oper grant ccr9304722 ncr9416101 grant usisrael binat scienc foundat work present paper appear preliminari form 6 10 bartal j w byer raz appropri choic exampl commerci intranetwork user pay use network bandwidth possibl dierent rate administr would want use flow control polici maxim total revenu express flow control polici object posit linear program linear program entri constraint matrix nonneg complic issu problem router must gener feasibl solut linear program lp quickli base avail inform motiv applic relat applic papadimitri yannakaki consid problem distribut decisionmak assign valu set variabl linear program agent limit inform 18 one scenario describ agent act isol must set valu singl primal variabl know constraint aect variabl lp context flow control object maxim total flow network correspond set connect know mani connect share router intend use edg capac 1 safe algorithm set connect flow reciproc maximum number connect share edg connect hard see worstcas approxim ratio achiev safe algorithm maximum number connect share edg also prove safe algorithm achiev best possibl worstcas ratio agent may commun leav open possibl much better ratio obtain agent interact extend model allow comput proceed sequenc round agent commun fixeds messag immedi neighbor agent neighbor share one constraint lp goal determin number round necessari achiev approxim ratio optimum lp solut although focu applic flow control studi could also perform rang resourc alloc problem includ describ 18 note similar model describ interact connect router theoret practic evalu flow control polici suggest 3 1 5 16 cours central administr complet inform could solv problem exactli use one well known polynomialtim algorithm linear program see exampl 14 recent much faster algorithm produc approxim solut posit linear program within factor optim design sequenti algorithm plotkin shmoy tardo 19 repeatedli identifi global minimum weight path push flow along path recent faster approxim algorithm consid sever relat flow binpack problem 8 12 use principl repeatedli choos good flow increment increas rate flow technic diculti balanc amount flow increas requir approxim achiev number need step ie run time algorithm global oper choos appropri unsatisfi constraint use moreov gener multicommod flow problem formul posit linear problem unless number dual variabl number constraint exponenti case one must use separ oracl sinc polynomi mani flow handl posit linear program howev number constraint polynomi bound thu one increas dual variabl simultan approach taken algorithm lubi fast approxim algorithm posit lp 3 nisan 17 algorithm fast sequenti parallel implemen tation repeatedli perform global median select algorithm valu dual variabl choos threshold increas valu dual variabl threshold although algorithm ecient implement perform global oper make unsuit fast distribut impl mentat sinc emul global oper requir polynomi number distribut round interest much timeeci solut previous known result distribut flow control algorithm global object function algorithm awerbuch azar 3 give logarithm approxim ratio also run polylogarithm number round algorithm base fundament result competit analysi 2 4 determinist algorithm present produc 1 solut posit linear program gener flow control problem build idea use algorithm 3 17 19 algorithm close relat algorithm lubi nisan elimin need complex global select oper global normal step upon termin enabl fast implement distribut set simplif carri serial parallel set well dramat simpler implement save 1 factor run time algorithm lubynisan final parameter algorithm quantifi tradeo number round qualiti approxim practic run algorithm number phase guarante constant number phase logarithm factor approxim logarithm number phase 1 rest paper organ follow begin present algorithm first easili understand implement serial algorithm approxim solv posit linear program section 2 section 23 prove algorithm achiev 1 approxim ratio analyz run time formul distribut model give explan correspond flow control polici posit linear program section 3 section 32 present distribut implement applic flow control problem explain modif analysi case 2 sequenti approxim algorithm consid posit linear program repres follow standard form well known gener arbitrari posit linear program assum linear program lp present algorithm normal form ij either 0 satisfi 1 1 4 bartal j w byer raz sequenti case one convert arbitrari lp standard form lp normal form linear time simpli divid constraint set amin 0 describ perform transform ecient distribut set section 3 r f outer loop phase min inner loop iter od od j output fig 21 sequenti posit lp approxim algorithm 21 overview result parameter algorithm approxim solv posit linear program normal form given figur 21 main theorem prove perform algorithm relat qualiti approxim run time follow theorem 21 0 1 0 r lnm algorithm produc feasibl r approxim optimum primal linear program solut run nm ln r time follow corollari clarifi tradeo run time qualiti approxim follow directli theorem 21 corollari 22 1 algorithm produc 1 optimum nm ln time 1 r lnm algorithm produc approxim optimum nm r time proof prove first claim corollari set theorem 21 prove second set choos 0 21 impli r 0 theorem 21 fast approxim algorithm posit lp 5 22 descript algorithm sequenti implement algorithm present figur 21 main bodi program bottom panel run sequenc phase number ultim depend desir approxim ratio within phase valu appropri primal variabl j increas monoton threshold reach refer set increas oper across primal variabl constitut inner loop main program iter algorithm note number iter per phase may vari demonstr time slot end phase nonneg set primal variabl j dual variabl x primal dual feasibl respect satisfi constraint primal feasibl dual feasibl j 221 move pair feasibl solut sinc valu primal variabl increas monoton algorithm crucial care select variabl increas phase end algorithm use exponenti weight function employ varieti relat context includ 2 4 17 19 3 associ dual constraint measur associ primal constraint measur throughout algorithm valu dual variabl x tie valu neighbor primal variabl j exponenti weight function defin updateweight constant depend desir approxim ratio scale factor initi grow geometr phase number reach f termin condit establish connect primal dual variabl valu j less 1 dual constraint ij x 1 violat satisfi sucient increas j relationship suggest follow idea algorithm employ start pair dual primal feasibl solut scale dual feasibl solut multipl factor make solut dual infeas caus dual constraint violat move back dual feasibl solut increas primal variabl j repeat process satisfactori approxim achiev hypothet depict intermedi primal dual feasibl solut end phase rel valu optim solut shown figur 22 maintain invari valu intermedi primal feasibl solut monoton nondecreas time guarante provid intermedi dual feasibl solut linear program feasibl ensur valu intermedi primal feasibl solut necessarili smaller equal valu program denot opt similarli valu intermedi dual feasibl solut necessarili larger 6 bartal j w byer raz equal valu program upon termin prove final maxim primal feasibl solut within desir case 1 factor minim intermedi dual feasibl solut linear program dualiti impli final primal feasibl solut give desir approxim valu program sequenti implement present figur 21 bottleneck oper recomput j iter take onm time fact run time bottleneck oper precis written oe e total number nonzero entri constraint matrix linear program multipli total number iter demonstr polylogarithm section 23 bound total sequenti run time primal solut valu solut opt time dual solut fig 22 intermedi primal dual feasibl solut 23 analysi algorithm section bound approxim ratio approxim algorithm present analysi sequenti run time later extend result straightforward way distribut case first prove claim made earlier end phase primal dual solut feasibl definit algorithm valu primal variabl increas monoton therefor valu intermedi primal solut also increas monoton thu carri analysi approxim ratio remain prove valu final primal feasibl solut valu minim dual feasibl solut 1 factor apart proof use follow three fact follow initi paramet given initializeparamet figur 21 fact 23 fast approxim algorithm posit lp 7 proof immedi follow definit fact 1 fact 24 r r proof definit definit also shorthand 1r suce show sinc r lnm olnm result follow directli fact 25 e proof substitut f multipli e must show e r e r r e r r take natur logarithm side need show recal definit r r therefor enough prove follow sinc p clearli nonneg q 1 show ln qp nonneg need p substitut p use show final inequ follow fact x ln x complet proof 8 bartal j w byer raz 24 feasibl recal algorithm maintain invari dual feasibl achiev prior increas fact 26 dual feasibl end phase j j 1 next prove j primal feasibl throughout execut algorithm use claim 27 help perform induct proof conveni treat initi increas j 0 initi valu iter 27 everi iter feasibl 1 throughout execut algorithm prove two claim simultan induct iter algorithm proof let 0 first step prove claim hold iter 0 sinc also impli claim 28 hold iter 0 consid subsequ iter let v denot chang variabl v iter j j j rate increas iter final inequ hold induct hypothesi claim 28 complet proof claim 27 complet proof claim 28 consid two case separ first consid valu prior iter proof 27 iter 1 give desir result next consid prior iter fix fix j j fact 25 choic e henc j ij 1 definit increas rule algorithm never increas valu primal variabl fact primal variabl j increas iter therefor increas iter remain smaller 1 induct hypothesi complet proof 25 proof 1 approxim ratio turn bound approxim ratio obtain algorithm state first half theorem 21 29 0 1 0 r lnm algorithm produc feasibl r approxim optimum primal linear program solut use notat j denot aggreg chang valu cours iter similar notat variabl begin follow lemma fast approxim algorithm posit lp 9 lemma 210 everi iter proof 1 claim 27 1 follow use inequ e z prior given iter let set indic primal variabl activ upcom iter ie variabl j whose valu increas iter recal variabl j may increas sever time phase lemma follow follow sequenc inequ final inequ hold definit state prove next lemma requir precis descript notat consid chang valu dual variabl x cours phase proof let x denot sum x end current phase let x denot sum x end previou phase ie scale let x denot chang sum x cours current phase defin x minimum dual feasibl solut obtain end phase let yl primal feasibl solut obtain end final phase fact 26 claim 28 respect impli x dual feasibl yl primal feasibl conjunct lemma 211 impli approxim result state claim 29 linear program dualiti lemma 211 proof prove lemma two separ case first easi case initi primal feasibl solut close approxim optimum second repeatedli appli lemma 9 bound ratio x yl let x 0 denot valu x initi j bartal j w byer raz valu x first phase similarli let xl denot valu dual solut end final phase case xl r let 1 denot valu primal solut end first phase appli lemma 9 iter compris first phase give sinc valu primal feasibl solut increas monoton throughout cours algorithm lemma hold follow sequenc inequ case ii xl r valu x scale factor follow end phase earlier definit impli x rewrit express appli inequ e z use x x appli lemma 210 yield l initi valu valu last phase algorithm ie l f use bound repeatedli compar xl x 1 give us sinc xl dual feasibl optim solut bound 1 normal form program xl also note assumpt r lnm r use fact conjunct fact xl r use bound 21 observ get e r r r r r final inequ hold substitut use 1 therefor get yl conclud proof lemma case ii fast approxim algorithm posit lp 11 26 run time algorithm provid far follow run time bound slightli weaker state theorem 21 weaker bound present sinc natur translat time bound preced analysi extend directli distribut algorithm present section 3 prove bound provid simpl improv appli sequenti case use give time bound state theorem 21 212 sequenti algorithm run r1nm r r time proof bound number phase measur chang increas 1 factor per phase definit figur 21 use fact 24 final equal log 1f r r r r bound number iter phase comput maximum number iter need increas j valu 1 given j say j larg j ln show j larg j 1 therefor j longer particip phase let set ik k ln initi everi iter increas factor 1 therefor number iter j particip j becom larg log 1 fact 25 use fact anoth applic fact 24 bound number iter phase r r r r note term r1 r remov sinc r valu satisfi 0 r lnm multipli earlier bound number phase use fact iter comput onm time complet proof claim 212 prove time bound state second half theorem 21 need give sequenti algorithm complet nm ln r time run 12 bartal j w byer raz time achiev algorithm perform exactli one iter per phase sequenti case accomplish increas candid j mere multipl factor 1 per iter increas amount caus j reach valu 1 directli note procedur straightforward implement sequenti case distribut case improv caus phase termin singl iter claim 27 28 still hold claim unaect achiev time bound state theorem 21 3 distribut model consid follow model spirit papadimitri yannakaki 18 distribut agent gener approxim solut posit linear program standard form present section 2 associ primal agent n primal variabl j dual agent dual variabl x agent respons set valu associ variabl j ij 0 say dual agent primal agent j neighbor distribut round comput agent may broadcast fixeds messag neighbor ie one round primal agent j may broadcast one messag set dual neighbor dual agent may broadcast one messag set primal neighbor fix number round agent must choos feasibl valu variabl minim case primal approxim ratio opt opt valu optim solut lp studi tradeo number round qualiti approxim ratio obtain applic flow control network perflow queu motiv follow map model primal agent dual agent n connect transmit data along fix path network connect correspond primal agent path travers order subset router compris network router correspond dual agent given time step connect j transmit given rate network therebi establish valu j primal variabl new flow valu stabil router use local load set valu primal variabl x base simpl function sum valu dual variabl along path sourc use control inform comput new flow valu 1 comput sum connect transmit fixedlength control messag loop router along path back sourc mention earlier simpl natur model commun connect router correspond model previous suggest practic theoret studi flow control 3 1 5 16 router capac c may share among connect util connect accru benefit b j everi unit endtoend capac receiv therefor connect act primal agent router act dual agent follow posit linear program fast approxim algorithm posit lp 13 routeriniti routerupd send routeriniti routerupd j j end phase activ connect call routerupd od end phase od fig 31 distribut algorithm router clearli posit linear program convert standard form local oper synchron model round take time equal maximum roundtrip time experienc connect network howev synchron assumpt subsequ relax chang algorithm propos final note messag size use implement bound number bit polynomi log log 1 31 distribut approxim algorithm sever addit complic must address definit descript distribut algorithm provid figur 31 32 router connect respect sinc global oper perform ecient connect router must abl independ comput valu paramet describ serial implement case paramet fix valu number node network paramet aect approxim ratio r assum valu known advanc connect router assum n number connect global known sequenti case knowledg paramet requir initi variabl j satisfi claim 27 28 distribut set connect j instead comput local estim n comput two distribut round use initi satisfi claim 27 28 final paramet use convert program normal form may global known case linear program normal ecient approxim solv program distribut set add consider complex defer provid techniqu section 32 connect router commun use messagepass model describ 14 bartal j w byer raz send ii j send read ii j defin figur 21 phase counter f iter counter within phase od end phase od output j termin fig 32 distribut algorithm connect j section 3 serial algorithm agent track time term phase erat transmit valu variabl use send primit agent timestamp transmiss current phase number p iter like wise receiv valu variabl use read primit agent specifi phase number p iter wait receiv appropri valu simplic assum control messag reliabl flow path although practic retransmiss would like necessari also strict altern primal dual round elimin possibl deadlock implement messagepass primit enabl control altern connect router local level say control global synchron fact instant time connect separ area network might even work phase howev case given router work singl phase instant time therefor connect router current work phase either activ work phase idl await permiss proceed phase 1 asid messagepass technic obstacl convert central algorithm distribut algorithm condit end phase central algorithm phase termin min k k 1 sinc hope track valu global express distribut model instead let connect j check whether j 1 local independ condit satisfi connect j termin phase increment phase number inform neighbor router analysi feasibl bound qualiti approxim ident central algorithm case valu fast approxim algorithm posit lp 15 primal variabl time correspond connect complet phase satisfi condit place primal variabl phase central implement similar statement hold respect valu dual variabl time correspond router complet phase statement hold primal dual variabl independ irrespect fact phase complet time may occur uniformli across network distribut run time follow corollari claim 212 hold corollari 31 distribut algorithm run r1 r round 32 distribut techniqu convert special form recal convert program standard form normal form divid constraint amax therebi set amin bound valu amax min known advanc exampl connect router bound min max valu edg capac benefit coecient estim bound may global known moreov valu impact run time algorithm depend valu entri matrix show solv problem standard form reduc solv problem special form similar form use lubi nisan 17 valu depend aect approxim ratio obtain significantli aect run time algorithm moreov transform done distribut constant number round without global knowledg amax min precondit transform lp z standard form lp z special form gener feasibl solut z valu c approxim valu optim solut z within factor c opt c precondit satisfi perform follow transform bound valu ij z 2 note valu depend extent bound valu lp rel valu constraint could small c perform follow transform oper constraint c c otherwis transform lp follow properti 1 j primal feasibl solut z otherwis primal feasibl z j 2 j primal feasibl z 1 primal feasibl z 3 properti 3 clearli true two properti requir short proof bartal j w byer raz proof properti 1 take feasibl solut j z let j specifi fix valu 1 final inequ hold feasibl solut j solut feasibl z valu solut satisfi first inequ hold fact feasibl j 1 second inequ hold bound number router network final inequ hold definit proof properti 2 take feasibl solut j z let j specifi fix valu c c c c final line hold bound optim solut z c solut feasibl gener approxim solut z perform transform special form comput 1 use fast approxim algorithm posit lp 17 algorithm transform solut j use transform describ properti 1 get primal feasibl solut lp first inequ properti 1 second base fact j 1 approxim valu z denot opt final inequ properti 2 next need explain choos paramet c guarante precondit c opt c recal j denot set edg incid connect j denot set connect incid edg ki l kl quantiti local comput one round router also let connect j defin rel easi show 1 first inequ hold primal feasibl solut connect j use evalu minimum assign flow second inequ hold dual feasibl solut router assign weight x therefor set sequenti implement give nm lnmr r run time 33 approxim distribut set sequenti case knowledg enough perform transform special form connect router may know valu describ techniqu distribut subdivid lp subprogram base local estim valu subprogram bound work special form recombin solut way assign nonzero rate connect good estim prove reduc sum rate small factor defin set g q integ clear connect belong exactli p set independ valu q router assign flow connect member g q iq minim valu g q nonempti eect mean algorithm run network p success time connect point view run p success algorithm use j approxim p trial reject ie given flow router final flow assign connect j averag flow given p independ trial prove procedur decreas sum rate addit 1 2 factor bartal j w byer raz defin optx valu modifi lp flow assign connect set x dicult show optg q bound thu set g q special form modifi lp connect g q satisfi precondit therefor lp use 21 turn bound approxim ratio consid particular q 0 p 1 let q uniqu integ interv defin g q q q dual feasibl set x g q iii l lg q impli opt g q q qualiti solut obtain therefor bound byp put everyth togeth distribut algorithm assum global knowledg approxim paramet r algorithm find primal feasibl r approxim optim solut termin r1 distribut round 4 discuss studi problem distribut decisionmak local inform gener feasibl solut posit linear program result explor tradeo amount local commun agent may perform qualiti solut obtain measur approxim ratio provid algorithm obtain 1 approxim ratio polylogarithm number distribut commun round prove nontrivi lower bound run time need obtain approxim remain open question challeng problem provid fast approxim algorithm gener linear program acknowledg would like thank christo papadimitri stimul discuss use insight formul stage work also thank dick karp mike lubi dorit hochbaum anonym sicomp refere help comment earlier version result present paper fast approxim algorithm posit lp 19 r converg complex optimist rate base flow control algorithm local optim global object competit distribut deadlock resolut resourc alloc throughput competit onlin rout converg approxim maxmin flow fair logarithm time achiev global object use local inform applic flow control data network potenti function method approxim solv linear program prob lem theori practic ratebas flow control framework avail bit rate atm servic maxim throughput reliabl bulk network transmiss algorithm rate alloc packetswitch network feedback faster simpler algorithm multicommod flow fraction pack problem distribut graph algorithm global solut local data optim flow control basic algorithm converg parallel approxim algorithm posit linear program linear program without matrix fast approxim algorithm fraction pack cover problem tr