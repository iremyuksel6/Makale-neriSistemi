algorithm permut larg entri diagon spars matrix consid bipartit match algorithm comput permut spars matrix diagon permut matrix entri larg absolut valu discuss variou strategi consid implement comput code also consid scale techniqu increas rel valu diagon entri numer experi show effect reorder scale solut spars equat direct method precondit iter techniqu b introduct say n theta n matrix larg diagon absolut valu diagon entri larg rel absolut valu offdiagon entri row column permut larg nonzero entri onto diagon spars matrix use sever way wish solv system nonsingular squar matrix order n x b vector length n preorder kind use whether direct iter method use solut see olschowka neumaier 1996 duff koster 1997 work report continu work report duff koster 1997 present algorithm maxim smallest entri diagon reli repeat applic depth first search algorithm mc21 duff 1981 harwel subroutin librari hsl 1996 report concern bipartit match algorithm permut row column matrix diagon permut matrix larg algorithm central report comput match correspond permut spars matrix product sum diagon entri maxim algorithm alreadi mention use duff koster 1997 fulli describ report describ algorithm detail also consid modifi version algorithm comput permut matrix maxim smallest diagon entri compar perform algorithm duff koster 1997 also investig influenc scale matrix scale use comput match make diagon entri even larger rel offdiagon particular look spars variant bipartit match scale algorithm olschowka neumaier 1996 first maxim product diagon entri scale matrix entri one entri greater one rest report organ follow section 2 describ concept bipartit match need descript algorithm section 3 review basic properti algorithm mc21 mc21 rel simpl algorithm comput match correspond permut matrix put mani entri possibl onto diagon without consid numer valu algorithm maxim product diagon entri describ section 4 section 5 consid modifi version algorithm maxim smallest diagon entri permut matrix section 6 consid scale reorder matrix comput experi algorithm appli practic problem effect reorder scale direct iter method solut present section 7 72 effect precondit also discuss final consid implic current work section 8 match gener n theta n spars matrix matrix associ bipartit graph e consist two disjoint node set v r v c edg set e u v 2 e impli set v r v c cardin n correspond row column respect edg ij 6 0 defin set row c set correspond posit entri row column j spars matrix respect use denot absolut valu signifi number entri set sequenc matrix mean alway clear context subset e call match assign two edg incid node match contain largest number edg possibl call maximum cardin match simpli maximum match maximum match perfect match everi node incid match edg obvious everi bipartit graph allow perfect match howev matrix nonsingular exist perfect match ga perfect match cardin n defin n theta n permut matrix pa ap matric match entri zerofre diagon bipartit match problem view special case network flow problem see exampl ford jr fulkerson 1962 effici algorithm find maximum match bipartit graph make use augment path let match ga node v match incid edg path p ga defin order set edg success edg incid node path p call maltern path edg p altern maltern path p call augment path connect unmatch row node unmatch column node bipartit graph figur 21 exist maugment path column node 8 row node 8 match cardin 7 repres thick edg black entri accompani matrix correspond match connect matrix entri maugment path clear context match associ maltern maugment path simpli refer altern augment path let p subset e defin match p maugment path phi p match jm phi maltern cyclic path ie altern path whose first last edg incid node phi p also match jm phi figur 21 augment path r1368425791368in sequel match often repres pointer array augment path bipartit graph g found construct altern tree altern tree subgraph g root row column node path maltern path altern tree root column node j 0 grown follow way start initi altern tree fj 0 g consid column node j 2 c turn initi node j check row node 2 colj altern path j 0 yet exist node alreadi match add row node column node match extend row node edg path node root form augment path key observ construct maximum perfect match match maximum augment path rel altern tree implement use pointer array c given edg either root node tree edg consecut edg altern path toward root augment path altern tree provid exist thu easili obtain p altern tree uniqu gener one construct sever altern tree start root node equal node set differ edg set differ altern tree gener contain differ augment path match algorithm describ next section impos differ criteria order path altern tree grown order obtain augment path maximum match special properti match asymptot fastest current known algorithm find maximum match hopcroft karp 1973 worstcas complex number entri spars matrix effici implement algorithm found duff wiberg 1988 algorithm mc21 implement duff 1981 theoret worstcas behaviour practic behav like latter algorithm simpler concentr follow although note rel straightforward use algorithm hopcroft karp 1973 similar way use mc21 later section mc21 depthfirst search algorithm lookahead start empti match henc column node unmatch initi see figur 31 unmatch column node j 0 turn altern tree grown augment path respect current match found provid one exist set b use mark match row node visit far initi first row node colj 0 search lookahead unmatch node 0 one found singleton path maugment path unmatch node unmark match node mark node 0 edg ad altern tree set search continu column node node j 1 row node colj 1 first check unmatch node one exist say path form augment path unmatch node remain unmark node 1 pick set j 1 search move node j 2 continu similar depthfirst search fashion either augment path node j 0 k unmatch k 0 colj k contain unmark node latter case mc21 backtrack resum search previous visit column node j kgamma1 remain unmark node 0 backtrack mc21 resum search column node j 0 colj 0 contain unmark node maugment path start node j 0 exist case mc21 continu construct new altern tree start next unmatch column node final maximum match cardin n gamma 1 henc perfect figur 31 outlin mc21 repeat exist 2 colj unmatch els exist els iap 6 null iap 6 null augment along path node iap node j 0 end weight match section describ algorithm comput match permut spars matrix product diagon entri permut matrix maximum absolut valu algorithm determin match correspond permut oe maxim n maxim multipl problem translat minim addit problem defin matrix log maximum absolut valu column j matrix maxim 41 equal minim log log oe log ja ioe log oe log ja ioe minim 42 equival find minimum weight perfect match edg weight bipartit graph known literatur bipartit weight match problem linear sum assign problem linear program combinatori optim numer algorithm propos comput minimum weight perfect match see exampl burkard derig 1980 carpaneto toth 1980 carraresi sodini 1986 derig metz 1986 jonker volgen 1987 kuhn 1955 practic exampl assign problem allot task cost matrix c repres cost benefit assign person task j realvalu n theta n e correspond bipartit graph whose edg weight match gc denot cm defin sum edg weight ie ij2m perfect match said minimum weight perfect match smallest possibl weight ie cm cm 0 possibl maximum match 0 key concept find minimum weight perfect match socal shortest augment path maugment path p start unmatch column node j call shortest cm phi p possibl maugment path p 0 start node j defin length altern path p match call extrem allow altern cyclic path neg length follow two relat hold first perfect match minimum weight extrem second match extrem p shortest maugment path phi p extrem also proof goe roughli follow suppos phi p extrem exist altern cyclic path q cm phi p extrem must exist subset form maugment path shorter p henc p shortest maugment path contradict supposit two relat form basi mani algorithm solv bipartit weight match problem start possibl empti extrem match success augment along shortest augment path maximum perfect literatur problem find minimum weight perfect match often state follow linear program problem find matrix minim x subject x solut linear program one x ij 2 f0 1g exist permut matrix x 1g minimum weight perfect match edmond karp 1972 kuhn 1955 furthermor minimum weight exist dual variabl u v j use reduc weight matrix reduc weight cm match equal reduc length lp maltern path p equal ij2p nm phi p match reduc weight phi p equal thu find shortest augment path graph gc equival find augment path graph g c minimum reduc length edg contain altern path p neg length lead subpath p 0 p shortest augment path weight bipartit graph e obtain mean shortest altern path tree shortest altern path tree altern tree whose path shortest path g node defin length shortest path node root node path exist shortest altern path tree everi edg node j outlin algorithm construct shortest altern path tree root column node j 0 given figur 41 reduc weight c ij nonneg graph g c contain altern path neg length use spars variant dijkstra algorithm dijkstra 1959 set row node partit three set b q w b set mark node whose shortest altern path distanc node j 0 known q set node altern path root known necessarili shortest possibl w set node altern path exist known yet note sinc w defin implicitli v r n b q actual use figur 41 algorithm start shortest altern tree extend tree augment path found guarante shortest augment path respect current match initi length shortest augment path lsap tree set infin length shortest altern path lsp root node q set zero pass main loop anoth column node j chosen closest root j 0 initi row node 2 colj whose shortest altern path root known yet 62 b consid p j 0 ji shortest altern path root node 0 node j length lsp extend edg j node j node length longer tent shortest augment path tree length lsap need modifi tree p j 0 ji length smaller lsap unmatch new shorter augment path found lsap updat match p j 0 ji also shorter current shortest altern path length shorter altern path node found tree updat updat node visit previous move q next q empti node 2 q determin closest root sinc weight c ij bipartit graph nonneg altern path node shorter current one node mark ad b search continu column node j continu column node search new augment path found whose length smaller current shortest one line lsap lsp origin dijkstra algorithm intend dens graph 2 complex spars problem complex reduc log n implement set q kheap node sort increas distanc root see exampl tarjan 1983 gallo pallottino 1988 run time algorithm domin oper heap q delet oper insert oper modif oper necessari time distanc updat insert modif oper run olog k n time delet oper run ok log k n time consequ algorithm find shortest augment path spars bipartit graph run time n total run time spars bipartit weight algorithm n choos 2 algorithm use binari heap obtain time bound n log 2 n choos obtain bound log n n implement heap q similar implement propos derig metz 1986 q pair q array contain row node distanc root shortest lsp separ node q closest root may reduc number oper heap especi situat cost matrix c differ numer valu mani altern path length delet node q smallest see figur 41 consist choos arbitrari element q 1 q 1 empti first move node q 2 closest root q 1 augment reduc weight c ij updat ensur altern path new g nonneg length done modifi figur 41 construct shortest augment path true dnew dnew lsap unmatch lsap dnew isap els choos lsap lsp exit whileloop lsap 6 1 augment along path node isap node j dual vector u v shortest altern path tree construct shortest augment path found u v j updat updat dual variabl u v satisfi 43 new reduc weight c ij nonneg run time weight match algorithm decreas consider mean cheap heurist determin larg initi extrem match use strategi propos carpaneto toth 1980 calcul inspect set colj column node j turn determin larg initi match edg remain unmatch column node j everi node 2 colj consid match column node j say j unmatch row node found c replac repeat unmatch column search shortest augment path start respect current match final note weight match algorithm also use maxim sum diagon entri matrix instead maxim product diagon entri minim 42 redefin matrix c 0 otherwis maxim sum diagon entri equal minim 42 sinc oe oe 5 bottleneck match describ modif weight bipartit match algorithm previou section permut row column spars matrix smallest ratio absolut valu diagon entri maximum absolut valu column maxim modif comput permut oe maxim min 1in oe j maximum absolut valu column j matrix similarli previou section transform minim problem defin matrix j maxim 51 equal minim 1in oe oe 1in given match bipartit graph e bottleneck valu defin ij2m problem find perfect maximum bottleneck match cm minim ie cm cm 0 possibl maximum match 0 match call extrem allow altern cyclic path p cm phip bottleneck algorithm start extrem match initi bottleneck valu b set cm pass main loop altern tree construct augment path p found either cm phi p cm phi p small possibl initi main loop construct augment path figur 41 figur 51 show innerloop weight match algorithm figur 41 modifi case bottleneck object function main differ sum oper path length figur 41 replac max oper soon augment path p found whose length lsap less equal current bottleneck valu b main loop exit p use augment b set maxb lsap bottleneck algorithm modifi edg weight c ij similarli implement discuss section 4 set q implement array q 1 contain node whose distanc root less equal tent bottleneck valu b q 2 contain node whose distanc root larger bottleneck valu infin q 2 implement heap figur 51 modifi inner loop figur 41 construct bottleneck augment path dnew dnew lsap unmatch lsap dnew isap lsap b exit whileloop els larg initi extrem match found follow way defin smallest entri row column j respect lower bound b 0 bottleneck valu extrem match obtain edg j c ij b 0 scan node turn node 2 colj unmatch ad remain unmatch column node j everi node 2 colj consid c ij b match column node j say j unmatch row node 1 2 colj 1 found c replac done unmatch column search shortest augment path start respect current match initi procedur found literatur exampl slightli complic initi strategi use fink smith 1978 context solv transport problem everi use number admiss edg incid row node column node j respect idea behind use g h j admiss edg j ad admiss edg incid node j longer candid ad therefor method tri pick admiss edg number admiss edg becom unus minim first row node minim g determin set row admiss entri provid one exist chosen h j minim j ad delet edg edg k j k 2 colj method repeat anoth row node 0 minim g 0 continu admiss edg delet graph final note instead maxim 51 also could maxim smallest absolut valu diagon maxim min 1in defin matrix c note problem rather sensit scale matrix suppos exampl matrix column contain one nonzero entri whose absolut valu v smallest absolut valu present appli bottleneck algorithm bottleneck valu b equal small valu smallest entri diagon permut matrix maxim algorithm influenc valu diagon valu scale matrix prior appli bottleneck algorithm avoid duff koster 1997 differ approach taken obtain bottleneck match let ffl denot matrix obtain set zero entri ij ja ij denot match obtain remov match entri j ja ij throughout algorithm fflmax fflmin maximum match size jm j exist fflmax exist fflmin step ffl chosen interv fflmin fflmax maximum match matrix ffl comput use variant mc21 match size jm j fflmin set ffl otherwis fflmax set ffl henc size interv decreas step ffl converg bottleneck valu termin algorithm 0 comput bottleneck match ffl correspond bottleneck valu 6 scale olschowka neumaier 1996 use dual solut produc weight match algorithm scale matrix let u v satisfi relat 43 defin equal hold word 1 ad 2 matrix whose diagon entri one absolut valu whose offdiagon entri less equal one olschowka neumaier 1996 call matrix imatrix use context dens gaussian elimin reduc amount pivot need numer stabil domin diagon matrix higher chanc diagon entri stabl enough serv pivot elimin iter method transform matrix imatrix also interest exampl gershgorin theorem know union disc contain eigenvalu n theta n matrix disc k center ii radiu equal sum absolut offdiagon valu row sinc diagon entri imatrix one n disk center 1 estim eigenvalu sharper deviat less diagon matrix smaller radii disc better know eigenvalu situat abl reduc radii disc imatrix ie reduc offdiagon valu tend cluster eigenvalu around one ideal case disc imatrix radiu smaller one case matrix strictli rowwis diagon domin guarante mani type iter method converg exact even simpl one like jacobi gaussseidel method howev least one disc remain radiu larger close one zero eigenvalu small eigenvalu possibl straightforward expens attempt decreas larg offdiagon entri matrix row column equal olschowka neumaier 1996 let imatrix defin matrix simplic assum contain zero entri equal consist repeatedli equal largest absolut valu row largest absolut valu column k n thu defin 1 algorithm minim largest offdiagon absolut valu matrix 1 ad 2 diagon entri chang note scale strategi guarante offdiagon entri imatrix smaller one absolut valu exampl imatrix contain two offdiagon entri kl lk k 6 l whose absolut valu one 7 experiment result section discuss sever case reorder algorithm previou section use includ solut spars equat direct method iter techniqu also consid use gener precondition iter method set matric use experi unsymmetr matric taken harwellbo spars matrix test collect duff grime lewi 1992 spars matrix collect univers florida davi 1997 matric initi row column scale mean matrix scale maximum entri row column one comput use experi sun ultrasparc 256 mbyte main memori algorithm implement fortran 77 use follow acronym mc21 match algorithm harwel subroutin librari comput match correspond permut matrix zero freediagon see section 3 bt bottleneck bipartit match algorithm section 5 permut matrix smallest ratio absolut valu diagon entri maximum absolut valu column maxim bt bottleneck bipartit match algorithm duff koster 1997 mpd weight match algorithm section 4 comput permut product diagon entri permut matrix maximum absolut valu mp equal mpd algorithm permut matrix scale imatrix see section 6 tabl 71 show larg spars matric order number entri time algorithm comput match time mp list almost ident mpd gener mc21 need least time comput match except oneton twoton matric matric search heurist use mc21 depthfirst search lookahead perform well probabl caus order column variabl entri insid column matrix random permut matrix prior appli mc21 might lead result clear winner bottleneck algorithm bt bt although note bt requir entri insid column sort valu sort expens rel dens matric mpd gener expens algorithm explain select way algorithm construct augment path 71 experi direct solut method direct method put larg entri diagon suggest pivot diagon might stabl inde stabil still guarante solut scheme like multifront method duff reid 1983 symbol phase choos initi pivot sequenc subsequ factor phase modifi sequenc stabil mean modif requir less permut appli multifront approach duff reid 1983 later develop amestoy duff 1989 analysi perform structur aa obtain order reduc fillin assumpt diagon entri numer suitabl pivot numer factor guid assembl tree node tree step gaussian elimin perform dens submatrix whose schur complement pass parent node tree assembl tabl 71 time second match algorithm order matrix n number entri matrix goodwin 7320 324784 027 226 417 182 sum schur complement children origin entri matrix howev numer consider prevent us choos pivot algorithm proceed schur complement pass parent larger usual work storag need effect factor logic first permut matrix larg entri diagon comput order reduc fillin tri reduc number pivot delay way therebi reduc storag work factor show effect tabl 72 see even use mc21 benefici although algorithm show signific gain tabl 73 show effect number entri factor clearli mirror result tabl 72 addit abl select pivot chosen analysi phase multifront code ma41 better matric whose structur symmetr nearli defin structur symmetri matrix number entri ij ji also entri divid total number entri structur symmetri permut shown tabl 74 match order case increas symmetri result reorder matrix particularli appar spars system mani zero diagon case reduct number offdiagon entri reorder matrix influenc symmetri notic respect sophist match algorithm may actual caus problem sinc could reorder symmetr structur matrix zerofre diagon wherea mc21 leav unchang tabl 72 number delay pivot factor ma41 indic ma41 need 200 mbyte memori matrix match algorithm use none mc21 bt mpd mp goodwin 536 1622 427 53 41 tabl 73 number entri 10 3 factor ma41 matrix match algorithm use none mc21 bt mpd mp onetone2 14083 2876 2298 2170 2168 goodwin 1263 2673 2058 1282 1281 tabl 74 structur symmetri permut matrix match algorithm use none mc21 bt mpdmp gemat11 final tabl 75 show effect solut time ma41 sometim observ dramat reduct time solut preced permut tabl 75 solut time requir ma41 matrix match algorithm use none mc21 bt mpd mp goodwin 364 1463 798 356 356 implement algorithm describ paper use success li demmel 1998 stabil spars gaussian elimin distributedmemori environ without need dynam pivot method decompos matrix n theta n block matrix a1 use notion unsymmetr supernod demmel eisenstat gilbert li liu 1995 block map cyclic row column dimens onto node processor twodimension rectangular processor grid map step k numer factor column processor factor block column ak n k row process particip triangular solv obtain block row u processor particip correspond multiplerank updat remain numer factor phase method use dynam partial pivot block column allow priori comput nonzero structur factor distribut data structur commun pattern good load balanc scheme make factor scalabl distributedmemori machin factor comput commun task becom appar elimin process ensur solut numer stabl matrix permut scale factor make diagon entri larg compar offdiagon entri tini pivot encount factor perturb step iter refin perform triangular solut phase solut accur enough numer experi demonstr method use implement mp algorithm stabl partial pivot wide rang problem 72 experi iter solut method iter method simpl techniqu like jacobi gaussseidel converg quickli diagon entri larg rel offdiagon row column techniqu like block iter method benefit entri diagon block larg addit precondit techniqu exampl diagon precondit incomplet lu precondit intuit evid larg diagon benefici 721 precondit incomplet factor incomplet factor precondition pivot often taken diagon fillin discard fall outsid prescrib sparsiti pattern see saad 1996 overview incomplet factor use result factor econom store comput solv one reason incomplet factor behav poorli pivot arbitrarili small benzi szyld van duin 1997 chow saad 1997 pivot may even zero case incomplet factor fail small pivot allow numer valu entri incomplet factor becom larg lead unstabl therefor inaccur factor case norm residu u larg l u denot comput incomplet way improv stabil incomplet factor preorder matrix put larg entri onto diagon obvious success factor still guarante nonzero diagon entri may becom small even zero factor reorder may mean zero small pivot less like occur tabl 76 show result reorder appli prior incomplet factor form ilu0 ilu1 ilut iter method gmres20 bicgstab qmr case method converg permut other greatli improv converg howev emphas permut larg entri diagon matrix alway improv accuraci stabil incomplet factor inaccur factor also occur absenc small pivot mani especi larg fillin drop incomplet factor respect may benefici appli symmetr permut match reorder reduc fillin anoth kind instabl incomplet factor occur without small pivot sever illcondit triangular factor situat jjrjj f need larg jji gamma also common situat coeffici matrix far diagon domin tabl 76 number iter requir precondit iter method permut matrix method match algorithm qmr 72 21 12 12 mahinda west0497 also perform set experi first permut column matrix use reorder comput one match algorithm follow symmetr permut gener revers cuthillmcke order cuthil mckee 1969 appli motiv behind number entri drop factor reduc appli reorder matrix reduc fillin experiment result notic addit permut sometim posit well neg effect perform iter solver tabl 77 show result three iter method tabl 76 precondit ilut west matric harwellbo collect tabl 77 number iter requir ilutprecondit iter method match reorder without revers cuthillmcke matrix method match algorithm match algorithm without rcm rcm 722 experi block iter solut method jacobi method particularli current power method focuss experi block cimmino implement arioli duff noaill ruiz 1992 equival use block jacobi algorithm normal equat implement subproblem correspond block row matrix solv spars direct method ma27 hsl 1996 show effect tabl 78 problem mahinda tabl 76 match algorithm follow revers cuthillmcke algorithm obtain block tridiagon form matrix partit 2 4 8 16 block row acceler use block cg algorithm block size 1 4 8 block row chosen equal nearli equal size tabl 78 number iter block cimmino algorithm matrix mahinda acceler match algorithm block row none mc21 bt mpd mp gener notic experi block cimmino method often sensit scale mp less reorder converg properti block cimmino method independ row scale howev spars direct solver ma27 hsl 1996 use solv augment system perform numer pivot factor augment matric row scale might well chang choic pivot order affect fillin factor accuraci solut column scale affect converg method sinc consid diagon precondition detail see ruiz 1992 8 conclus futur work consid section 34 techniqu permut spars matrix diagon permut matrix entri larg absolut valu discuss variou criteria consid implement comput code also consid section 6 possibl scale strategi improv weight diagon respect offdiagon valu section 7 indic sever case permut scale use includ solut spars equat direct method iter techniqu also consid use gener precondition iter method numer experi show multifront solver precondit iter method effect reorder dramat effect block cimmino iter method seem less dramat method discuss scale tend import effect clear reorder matric permut matrix larg diagon signific effect solv spars system wide rang techniqu somewhat less clear univers strategi best case one reason increas size diagon alway suffici improv perform method exampl incomplet precondition use numer experi section 7 size diagon also amount size discard fillin play import role thu start experi combin strategi mention section 34 particularli gener precondition block cimmino approach combin unsymmetr order symmetr order anoth interest extens discuss reorder block approach increas size diagon block instead diagon entri use exampl block jacobi precondition permut matrix particular interest block cimmino method one could also build criteria weight obtain bipartit match exampl incorpor markowitz cost sparsiti would also preserv choic result diagon pivot combin would make result order suitabl wider class spars direct solver final notic experi ma41 one effect match algorithm increas structur symmetri unsymmetr matric explor use order techniqu directli attempt increas structur symmetri acknowledg grate michel benzi lo alamo nation laboratori miroslav tuma czech academi scienc assist precondit iter method daniel ruiz enseeiht help block iter method r order incomplet factor precondit nonsymmetr problem assign match problem solut method fortranprogram experiment studi ilu precondition indefinit matric reduc bandwidth spars symmetr matric univers florida spars matrix collect supernod approach spars partial pivot design use algorithm permut larg entri diagon spars matric user guid harwellbo spars matrix collect releas 1 make spars gaussian elimin scalabl static pivot solut larg spars unsymmetr linear system block iter method multiprocessor environ iter method spars linear system data structur network algorithm tr ctr laura grigori xiaoy li new schedul algorithm parallel spars lu factor static pivot proceed 2002 acmiee confer supercomput p118 novemb 16 2002 baltimor maryland abdou guermouch jeanyv lexcel gil utard impact reorder memori multifront solver parallel comput v29 n9 p11911218 septemb abdou guermouch jeanyv lexcel construct memoryminim schedul multifront method acm transact mathemat softwar tom v32 n1 p1732 march 2006 chi shen jun zhang kai wang distribut block independ set algorithm parallel multilevel ilu precondition journal parallel distribut comput v65 n3 p331346 march 2005 kai shen parallel spars lu factor secondclass messag pass platform proceed 19th annual intern confer supercomput june 2022 2005 cambridg massachusett patrick r amestoy iain duff jeanyv lexcel xiaoy li analysi comparison two gener spars solver distribut memori comput acm transact mathemat softwar tom v27 n4 p388421 decemb 2001 kai shen parallel spars lu factor differ messag pass platform journal parallel distribut comput v66 n11 p13871403 novemb 2006 xiren wang wenjian yu zeyi wang xianlong hong improv direct boundari element method substrat coupl resist extract proceed 15th acm great lake symposium vlsi april 1719 2005 chicago illinoi usa anshul gupta recent advanc direct method solv unsymmetr spars system linear equat acm transact mathemat softwar tom v28 n3 p301324 septemb 2002 timothi davi column preorder strategi unsymmetricpattern multifront method acm transact mathemat softwar tom v30 n2 p165195 june 2004 michel benzi precondit techniqu larg linear system survey journal comput physic v182 n2 p418477 novemb 2002