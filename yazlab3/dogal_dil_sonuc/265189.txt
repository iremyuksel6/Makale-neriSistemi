simpl algorithm nearest neighbor search high dimens abstractth problem find closest point highdimension space common pattern recognit unfortun complex exist search algorithm kd tree rtree grow exponenti dimens make impract dimension 15 nearli applic closest point interest lie within userspecifi distanc epsilon present simpl practic algorithm effici search nearest neighbor within euclidean distanc epsilon use project search combin novel data structur dramat improv perform high dimens complex analysi present help automat determin epsilon structur problem comprehens set benchmark clearli show superior propos algorithm varieti structur unstructur search problem object recognit demonstr exampl applic simplic algorithm make possibl construct inexpens hardwar search engin 100 time faster softwar equival c implement algorithm avail upon request searchcscolumbiaeducav b introduct search nearest neighbor continu prove import problem mani field scienc engin nearest neighbor problem multipl dimens state follow given set n point novel queri point q ddimension space find point set distanc q lesser equal distanc q point set 21 varieti search algorithm advanc sinc knuth first state postoffic problem need new algorithm answer exist techniqu perform poorli high dimension space complex techniqu grow exponenti dimension high dimension mean say 25 high dimension occur commonli applic use eigenspac base appear match realtim object recognit track inspect 26 featur detect moreov techniqu requir nearest neighbor search perform use euclidean distanc l 2 norm hard problem especi dimension high high dimension also observ visual correspond problem motion estim mpeg code estim binocular stereo d2581 optic flow comput structur motion also d2581 paper propos simpl algorithm effici search nearest neighbor within distanc ffl high dimens shall see complex propos algorithm small ffl grow slowli algorithm success tackl nearest neighbor problem origin state find point within distanc ffl novel point properti suffici pattern recognit problem problem state match declar high confid novel point suffici close train point occasion possibl assum ffl known suggest method automat choos ffl briefli outlin propos algorithm algorithm base project search paradigm first use friedman friedman simpl techniqu work follow preprocess step dimension train point order differ way individu sort coordi nate sort coordin array thought 1d axi entir dimension space collaps project onto given novel point q nearest neighbor found follow small offset ffl subtract ad qs coordin obtain two valu two binari search perform sort array locat posit valu axi minimum number point posit chosen final point posit chosen axi exhaust search obtain closest point complex techniqu roughli ondffl clearli ineffici high simpl project search improv upon yunck util precomput data structur maintain map sort unsort origin coordin array addit map indic array n element use element indic array henceforth call indic correspond point begin search indic initi number 1 small offset ffl subtract ad novel point qs coordin obtain two valu two binari search perform sort array locat posit valu map sort unsort array use find point correspond coordin valu indic correspond point binari shift left one bit entir process repeat dimens end point whose indic valu must lie within 2ffl hypercub exhaust search perform hypercub point find nearest neighbor data structur yunck abl find point within hypercub use primarili integ oper howev total number machin oper requir teger float point find point within hypercub similar friedman algorithm roughli ondffl due fact modern cpu significantli penal float point oper improv slight benchmark later section propos data structur significantli reduc total number machin oper requir locat point within hypercub roughli onffl moreov data structur facilit simpl hardwar implement result increas perform two order magnitud previou work search algorithm divid follow broad categori exhaust search b hash index c static space partit dynam space partit random algorithm algorithm describ paper fall categori algorithm categor work vector space work metric space categori bd fall former categori fall later metric space search techniqu use possibl somehow comput distanc measur sampl point piec data space point resid lack explicit coordin structur paper focu vector space techniqu detail discuss search metric space refer exhaust search term impli involv comput distanc novel point everi point set find point minimum distanc approach clearli ineffici complex ond hash index fastest search techniqu run constant time howev space requir store index tabl increas exponenti henc hybrid scheme hash high dimension space low 1 2 dimension space index low dimension space propos dimension reduct call geometr hash problem increas dimension becom difficult construct hash function distribut data uniformli across entir hash tabl index ad drawback aris fact hash inher partit space bin two point adjac bin closer third point within bin search algorithm use hash tabl index correctli find point adjac bin henc hash index realli effect novel point exactli equal one databas point space partit techniqu led eleg solut multidimension search problem method particular theoret signific divid search space polygon voronoi polygon geometr construct obtain intersect perpendicular bisector adjac point 2d search space voronoi polygon allow nearest neighbor found olog 2 n oper n number point databas unfortun cost construct store voronoi diagram grow exponenti number dimens detail found 3 anoth algorithm interest 1d binari search gener dimens 11 run olog 2 n time requir storag 4 make impract n 100 perhap wide use algorithm search multipl dimens static space partit techniqu base k dimension binari search tree call kd tree kd tree data structur partit space use hyperplan place perpendicular coordin axe partit arrang hierarch form tree simplest form kd tree construct follow point databas chosen root node point lie one side hyperplan pass root node ad left child point side ad right child process appli recurs left right children small number point remain result tree hierarch arrang hyperplan induc partit space hyperrectangular region term bucket contain small number point kd tree use search nearest neighbor follow k coordin novel point use descend tree find bucket contain exhaust search perform determin closest point within bucket size queri hyperspher set distanc closest point inform store parent node use determin hyperspher intersect bucket bucket exhaust search size hyperspher revis necessari fix certain assumpt underli data kd tree requir onlog 2 n oper construct olog 2 n oper search kd tree extrem versatil effici use low dimens howev perform degrad exponenti 1 increas dimension high dimens queri hyperspher tend intersect mani adjac bucket lead dramat increas number point examin kd tree dynam data structur mean data ad delet small cost impact ad delet data search perform howev quit unpredict relat amount imbal new data caus tree high imbal 1 although appear contradictori previou statement claim olog 2 n complex made assum fix vari n exact relationship complex yet establish observ us mani other roughli exponenti gener mean slower search number improv basic algorithm suggest friedman recommend partit hyperplan chosen pass median point place perpendicular coordin axi along whose direct spread point maximum 15 sproull suggest use truncat distanc comput increas effici high dimens 36 variant kd tree use address specif search problem rtree also space partit structur unlik kd tree partit element hyperplan hyperrectangular region hierarch rectangular structur use applic search imag content need locat closest manifold cluster novel manifold cluster rtree also address problem involv implement kd tree larg disk base databas rtree also dynam data structur unlik kd tree search perform affect addit delet data number variant rtree improv basic techniqu pack rtree 34 although rtree use implement sophist queri manag larg databas perform nearest neighbor point search high dimens similar kd tree complex grow exponenti static space partit techniqu propos branch bound none significantli improv perform high dimens clarkson describ random algorithm find closest point dimension space olog 2 n oper use rpo random post howev time taken construct rpo tree dd2e1ffl space requir store also dd2e1ffl make impract number point n larg 3 3 algorithm 31 search slice illustr propos high dimension search algorithm use simpl exampl 3d space shown figur 1 call set point wish search closest point point set goal find point point set closest 2e 2e 2e 2e xe xe ze ze z figur 1 propos algorithm effici find point insid cube size 2ffl around novel queri point q closest point found perform exhaust search within cube use euclidean distanc metric novel queri point qx within distanc ffl approach first find point lie insid cube see figur 1 side 2ffl center q sinc ffl typic small number point insid cube also small closest point found perform exhaust search point point insid cube know point within ffl point within cube found follow first find point sandwich pair parallel plane x 1 x 2 see figur 1 add list call candid list plane perpendicular first axi coordin frame locat either side point q distanc ffl next trim candid list discard point also sandwich parallel pair plane 1 2 perpendicular x 1 x 2 locat either side q distanc ffl procedur repeat plane z 1 z 2 end candid list contain point within cube size 2ffl center q sinc number point final trim list typic small cost exhaust search neglig major comput cost techniqu therefor construct trim candid list 32 data structur candid list construct trim done varieti way propos method use simpl preconstruct data structur along 1d binari search effici find point sandwich pair parallel hyperplan data structur construct raw point set depict figur 2 assum point set static henc given point set data structur need construct point set store collect 1d array j th array contain j th coordin point thu point set coordin point lie along row illustr dot line figur 2 suppos novel point q coordin recal order construct candid list need find point point set lie pair parallel hyperplan separ distanc 2ffl perpendicular first coordin axi center need locat point whose first coordin lie limit ffl done help two binari search one limit coordin array sort beforehand end sort coordin array point set independ obtain order set unfortun sort raw coordin leav us inform regard point array order set correspond given point point set vice versa purpos maintain two map backward map map coordin order set correspond coordin point set convers forward map map point point set point order set notic map simpl integ array p dn point set odn order set f dn bdn forward backward map respect use backward map find correspond point point set shown dark shade area add appropri point candid list construct candid list complet next trim candid list iter point set order set dimens point forward map forward map backward map input e e e e e e figur 2 data structur use construct trim candid list point set correspond raw list data point order set coordin sort forward backward map enabl effici correspond point order set follow iter k check everi point candid list use forward map see k th coordin lie within limit limit also obtain binari search point k th coordin lie outsid rang shown light grey discard list end final iter point remain candid list one lie insid hypercub side 2ffl center q discuss propos construct candid list use first dimens perform list trim use dimens 2 3 order wish emphas oper done order still yield desir result next section shall see possibl determin optim order cost construct trim list minim import note oper use trim list integ comparison memori lookup moreov use propos data structur limit use float point oper binari search need find row indic correspond hyperplan featur critic effici propos algorithm compar compet one facilit simpl softwar implement also permit implement hardwar search engin previous state algorithm need suppli appropri ffl prior search possibl larg class problem pattern recognit instanc match declar novel point q suffici close databas point reason assum ffl given priori howev choic ffl prove problemat case one solut set ffl larg might serious impact perform hand small ffl could result hypercub empti determin optim ffl given problem exactli ffl affect perform algorithm seek answer question follow section 4 complex section attempt analyz comput complex data structur stor age construct nearest neighbor search saw previou section construct data structur essenti sort array size n done odn log 2 n time addit storag necessari hold forward bacward map requir space ond nearest neighbor search major comput cost process candid list construct trim number point initi ad candid list depend ffl also distribut data point set locat novel point q henc facilit analysi structur problem assum wide use distribut point set follow notat use random variabl denot uppercas letter instanc q vector bold q suffix use denot individu element vector instanc q k k th element vector q probabl densiti written f q q q continu 2e axi c figur 3 project point set novel point onto one dimens search space number point insid bin b given binomi distribut figur 3 show novel point q set n point 2d space drawn known distribut recal candid list initi point sandwich hyperplan pair first dimens gener c th dimens correspond point insid bin b figur 3 entir point set q project c th coordin axi boundari bin b hyperplan intersect axi c c number point bin b order determin averag number point ad candid list must comput c distanc q c point candid list distribut z c may calcul distribut point set defin p c probabl project point point set within distanc ffl q c possibl write express densiti c term p c irrespect distribut point c binomi distribut 2 equival elementari probabl problem given success point within bin b occur probabl p c number success occur n independ trial point binomi distribut express averag number point bin b em c j q c easili determin note em c j q c random variabl depend c locat q distribut q known expect number point bin comput perform one lookup backward map everi point hyperplan pair main comput effort equat 3 directli estim cost candid list construct next deriv express total number point remain candid list trim dimens sequenc c 1 recal iter k perform forward map lookup everi point candid list see lie c k th hyperplan pair mani point candid list lie hyperplan pair equat 3 use time replac n number point candid list rather entir point set assum point set independ distribut henc n k total number point candid list iter k defin n total cost construct trim candid list trim need perform one forward map lookup two integ comparison henc assign one cost unit oper express n written aid equat 4 averag equat 6 suggest distribut f q q f z z known comput averag cost en term ffl next section shall examin two case particular interest z uniformli distribut b z normal distribut note left cost exhaust search point within final hypercub reason cost exhaust search depend distanc metric use cost howev small neglect case n ae need consid ad equat 6 end section make observ mention earlier advantag examin dimens specif order order expand summat product factor term equat 5 rewritten immedi valu n minimum p c 1 word chosen number sandwich point hyperplan pair ascend order easili ensur simpli sort number sandwich point note number obtain time od simpli take differ indic order set return pair binarysearch cost sort number od log 2 heapsort cost neglig problem reason dimension 41 uniformli distribut point set look specif case point set uniformli distribut x point point set assum independ uniform distribut extent l coordin 1l gammal2 x l2 15e0625e06cost e d5 e50000015e0625e06cost n50000 n150000 b figur 4 averag cost algorithm independ grow linearli small ffl point set case assum uniformli distribut extent l 1 point set contain 100000 point 5d 10d 15d 20d 25d space b point set 15d contain 50000 75000 100000 125000 150000 point use equat 8 fact z express densiti z c written f zc jqc p c written gammaffl f zc jqc zdz gammaffl dz l substitut equat 10 equat 6 consid upper bound worst case get l l l l l l l neglect constant write d5 cost e n50000 cost b figur 5 averag cost algorithm independ grow linearli small ffl point set case assum normal distribut varianc oe 1 point set contain 100000 point 5d 10d 15d 20d 25d space b point set 15d contain 50000 75000 100000 125000 150000 point small ffl observ ffl 0 cost independ figur 4 equat 11 plot ffl differ figur 4a differ figur 1 observ long ffl 25 cost vari littl linearli proport n also mean keep ffl small crucial perform algorithm shall see later ffl fact kept small mani problem henc even though cost algorithm grow linearli n ffl small enough mani real problem better pay price linear rather exponenti depend 42 normal distribut point set next look case point set normal distribut x point point set assum independ normal distribut varianc oe coordin f xc x p 2oe exp use z express densiti z c obtain get f zc jqc 2oe p c written gammaffl f zc jqc zdz oe oe p express substitut equat 6 evalu numer estim cost given q figur 5 show cost function ffl uniform distribut observ ffl 1 cost nearli independ grow linearli n varieti pattern classif problem data take form individu gaussian cluster mixtur gaussian cluster case result serv basi complex analysi 5 determin ffl appar analysi preced section cost propos algorithm depend critic ffl set ffl high result huge increas cost set ffl small may result empti candid list although freedom choos ffl may attract applic may prove nonintuit hard other case automat determin ffl closest point found high certainti distribut point set known first review well known fact l p norm figur 6 illustr norm select valu p point surfac equidist sens respect norm central point formal l p distanc two vector b defin distanc metric also known minkowskip metric relev determin ffl l 2 norm occur frequent pattern recognit problem unfortun candid list trim algorithm find point within l 2 figur illustr variou norm also known minkowski pmetric point surfac equidist central point l1 metric bound l p p within l1 ie hypercub sinc l1 bound l 2 one naiv perform exhaust search insid l1 howev seen figur 7a alway correctli find closest point notic p 2 closer q p 1 although exhaust search within cube incorrectli identifi closest simpl solut problem perform exhaust search impos addit constraint point within l 2 radiu ffl consid see figur 7b howev increas possibl hyperspher empti exampl instanc p 1 discard would abl find point clearli need consid fact automat method determin ffl describ next propos two method automat determin ffl first comput radiu smallest hyperspher contain least one point specifi probabl ffl set radiu algorithm proce find point within circumscrib hypercub side 2ffl method howev effici high dimens reason follow increas dimension differ hyperspher hypercub volum becom great hypercub corner contain far point inscrib hyperspher consequ extra effort necessari perform l 2 distanc comput corner point eventu wast rather find circumscrib hypercub second method simpli find length side smallest hypercub contain least one point specifi probabl ffl set half length side lead problem describ earlier search point outsid hypercub closer l 2 sens point insid shall describ method detail see remedi e r 2e e b figur 7 exhaust search within hypercub may yield incorrect result p 2 closer exhaust search within cube incorrectli identifi closest point b remedi impos constraint exhaust search consid point within l 2 distanc ffl q given length side hypercub 2ffl problem 51 smallest hyperspher method let us see analyt comput minimum size hyperspher given want abl guarante non empti probabl p let radiu hyperspher ffl hs let total number point within hyperspher let q novel point defin kzk l 2 distanc q point point set binomi distribut densiti probabl p least one point hyperspher simpli e hs r b figur 8 ffl comput use two method find radiu smallest hyperspher contain least one point high probabl search perform set ffl radiu constrain exhaust search within ffl b find size smallest hypercub contain least one point high probabl search ffl set half length side addit search perform area mark bold equat suggest know q densiti f z jq z probabl p solv ffl hs exampl consid case point set uniformli distribut densiti given equat 9 cumul distribut function kzk uniform distribut integr within hyperspher simpli volum thu l dgammad2 substitut equat 19 solv ffl hs get l dgammad2 use equat 21 ffl hs plot probabl two case figur 9a fix differ valu 5 25 n fix 100000 figur 9b n fix differ valu 50000 150000 fix 5 figur illustr import properti larg chang probabl p result small probabl success02061epsilon d5 probabl success005015 epsilon n150000 n50000 b figur 9 radiu ffl necessari find point insid hyperspher vari littl probabl mean ffl set knee probabl close uniti point set case uniformli distribut extent l 1 point set contain 100000 point 5 10 15 20 25 dimension space b point 5d contain 50000 75000 100000 125000 150000 point chang ffl hs suggest ffl hs set right hand knee curv probabl close uniti word easi guarante least one point within hyperspher search perform set length side circumscrib hypercub 2ffl hs impos addit constraint exhaust search point within l 2 distanc ffl hs consid 52 smallest hypercub method attempt analyt comput size smallest hypercub given want abl guarante non empti probabl p let number point within hypercub size 2ffl hc defin z c distanc c th coordin point set point novel point q binomi distribut densiti k kc 22 probabl p least one point hypercub simpli probabl success010305 epsilon d5 probabl success005015025035 epsilon n150000 n50000 b figur 10 valu ffl necessari find point insid hypercub vari littl probabl mean ffl set knee probabl close uniti point set case uniformli distribut extent l 1 point set contain 100000 point 5 10 15 20 25 dimension space b point set 5d contain 50000 75000 100000 125000 150000 point n equat suggest know q densiti f zc jqc z probabl p solv ffl hc specif case point set uniformli distribut express ffl hc obtain close form follow let densiti uniform distribut given equat 9 use equat 10 get l substitut equat 23 solv ffl hc get li use equat 25 ffl hc plot probabl two case figur 10a fix differ valu 5 25 n fix 100000 figur 10b n fix differ valu 50000 150000 fix 5 similar graph obtain case hyperspher ffl hc set right hand knee curv probabl close uniti notic valu ffl hc requir hypercub much smaller requir hyperspher especi high precis reason prefer second smallest hypercub method recal suffici simpli search closest point within hypercub point outsid closer point insid remedi problem suggest follow techniqu first exhaust search perform comput distanc closest point within hypercub call distanc r figur 8b closest point within hypercub distanc r q clearli closer point exist within hyperspher radiu r sinc part hyperspher lie outsid origin hypercub also search hyperrectangular region shown bold perform addit list trim perform exhaust search hyperrectangl impos constraint point consid less distanc r q figur 8b p 2 present one hyperrectangular region happen closer q p 1 although method complic give excel perform spars popul high dimension space high dimension uniform distribut conclud wish emphas hypercub hyperspher method use interchang guarante find closest point within ffl howev choic one method use depend dimension space local densiti point dens popul low dimension space hyperspher method perform quit well search hyperrectangular region worth addit overhead spars popul high dimension space effort need exhaust search huge circumscrib hypercub far overhead search hyperrectangular region howev difficult analyt predict one method suit particular class data henc encourag reader implement method use one perform best final although discuss relev l 2 norm equival analysi easili perform norm 6 benchmark perform extens set benchmark propos algorithm look two repres class search problem may benefit algorithm first class data statist structur case instanc point uniformli normal distribut second class problem statist un structur instanc point lie high dimension multivari manifold difficult say anyth distribut section present result benchmark perform statist structur data benchmark statist unstructur data refer reader section 7 test two commonli occur distribut normal uniform propos algorithm compar kd tree exhaust search algorithm algorithm includ benchmark yield compar perform first set benchmark two normal distribut point set contain 30000 100000 point varianc 10 use test per search execut time anoth set point shall call test set construct test set contain 10000 point also normal distribut varianc 10 algorithm execut time calcul averag total time requir perform nearest neighbor search 10000 point test set determin ffl use smallest hypercub method describ section 52 sinc point set normal distribut use close form solut ffl howev numer comput follow substitut equat 16 equat 23 get oe oe pn set p probabl least one point hypercub 99 oe varianc 10 comput ffl search point q use fast simpl bisect technqiu figur 11a 11b show averag execut time per search point set contain 30000 100000 point respect execut time includ time taken search comput ffl use equat 26 time taken 1 addit 3 search necessari point found within hypercub although 3 point found within hypercub increment ffl 01 search time sec dimens propos algorithm kd tree exhaust time sec dimens propos algorithm kd tree exhaust search b005015025035 time sec dimens propos algorithm kd tree exhaust time sec dimens propos algorithm kd tree exhaust search c figur 11 averag execut time propos algorithm benchmark statist structur problem point set normal distribut varianc 10 contain 30000 point b point set normal distribut varianc 10 contain 100000 point propos algorithm clearli faster high c point set uniformli distribut extent 10 contain 30000 point point set uniformli distribut extent 10 contain 100000 point propos algorithm perform well uniform distribut due extrem spars point set high ffl vari q valu ffl sampl point follow valu ffl point correspond respect point valu ffl 024 061 086 104 117 correspond respect valu ffl point correspond respect point valu ffl correspond propos algorithm faster kd tree algorithm figur 11a figur 11b propos algorithm faster 12 also notic kd tree algorithm actual run slower exhaust search 15 reason observ follow high dimens space spars popul radiu queri hyperspher larg consequ hyperspher intersect almost bucket thu larg number point examin along addit overhead travers tree structur make ineffici search spars high dimension space second set benchmark use uniformli distribut point set contain 30000 100000 point extent 10 test set contain 10000 point also uniformli distribut extent 10 execut time per search calcul averag total time requir perform closest point search 10000 point test set determin ffl smallest hypercub method describ section 52 use recal uniformli distribut point set ffl comput close form use equat 25 figur 11c 11d show execut time point set contain 30000 100000 point respect valu ffl correspond tive valu ffl correspond respect uniform distribut propos algorithm perform well although appear slightli faster kd tree exhaust search algorithm reason high dimension space spars popul henc requir ffl quit larg result algorithm end examin almost point therebi approach exhaust search process repeat till point found 7 exampl applic appear match demonstr two applic fast effici high dimension search techniqu desir first real time object recognit requir closest point found among 36000 point 35d space second closest point requir found point lie multivari high dimension manifold problem exampl statist unstructur data let us briefli review object recognit techniqu muras nayar 24 object recognit perform two phase 1 appear learn phase 2 appear recognit phase learn phase imag hundr object pose captur imag use comput high dimension subspac call eigenspac imag project eigenspac obtain discret high dimension point smooth curv interpol point belong object way object get curv univari manifold parameter pose manifold second phase object recognit easi imag object project eigenspac obtain singl point manifold closest point identifi object closest point manifold identifi pose note manifold continu order find closest point manifold need fine sampl obtain discret close space point benchmark use columbia object imag librari along slam softwar packag 28 comput 100 univari manifold 35d eigenspac manifold correspond appear model 100 object 20 100 object shown figur 12a 100 manifold sampl 360 equal space point obtain 36000 discret point 35d space imposs manual captur larg number object imag would need larg test set henc automat gener test set 100000 point sampl manifold random locat roughli equival captur actual imag without imag sensor nois len blur perspect project effect import simul effect caus project point shift away manifold henc substanti affect perform nearest neighbor search algorithm 4 4 instanc kd tree larg queri hyperspher would result larg increas number adjac bucket may search algorithm time sec propos algorithm 0025 kd tree 0045 exhaust search 1533 project search 2924 b figur 12 propos algorithm use recogn estim pose hundr object use columbia object imag librari twenti hundr object shown point set consist 36000 point 360 object 35d eigenspac b averag execut time per search compar algorithm unfortun difficult relat imag nois perspect project distort effect locat point eigenspac henc use simpl model add uniformli distribut nois extent 5 01 coordin point test set found approxim realworld data determin set gave us good recognit accuraci figur 12b show time taken per search differ algorithm search time calcul averag total time taken perform 100000 closest point search use point test set seen propos algorithm outperform techniqu ffl set predetermin valu point found within hyperspher time object recognit use search closest point within ffl provid us mean reject point far manifold like object databas next examin anoth case data statist unstructur closest point requir found point lie singl smooth multivari high dimension manifold manifold appear frequent appear match problem visual track 26 visual inspect 26 parametr featur detect 25 object recognit manifold represent visual appear given novel appear point match involv find point manifold closest point given manifold continu pose appear match nearest neighbor problem sampl manifold dens obtain discret close space point trivari manifold use benchmark obtain visual track experi conduct nayar et al 26 first benchmark manifold sampl obtain 31752 discret point second benchmark sampl obtain 107163 point case test set 10000 randomli sampl manifold point use explain previous nois extent 01 ad coordin test set execut time per search averag test set 10000 point point set determin gave good recognit accuraci figur 13a show algorithm two order magnitud faster algorithm notic exponenti behaviour rtree algorithm also notic yunck algorithm 5 extent eigenspac 10 10 maximum nois amplitud henc 05 extent eigenspac time sec dimens propos algorithm rtree exhaust search project search yunck search a0005001500250035 time sec dimens propos algorithm kd tree0005001500250035 time sec dimens propos algorithm kd tree b c figur 13 averag execut time propos algorithm benchmark unstructur problem point set construct sampl high dimension trivari manifold manifold sampl obtain 31752 point propos algorithm two order magnitud faster algorithm b manifold sampl obtain 31752 point c manifold sampl obtain 107163 point kd tree algorithm slightli faster low dimens degrad rapidli increas dimens slightli faster friedman differ due use integ oper could benchmark yunck algorithm till due use 32bit word indic array figur 13b seen propos algorithm faster kd tree figur 13c propos algorithm faster 21 8 hardwar architectur major advantag algorithm simplic recal main comput perform algorithm simpl integ map lookup backward forward map two integ comparison see point lie within hyperplan boundari cons quentli possibl implement algorithm hardwar use offtheshelf inexpens compon hard envis case competit techniqu kd tree rtree given difficulti involv construct parallel stack machin propos architectur shown figur 14 field programm gate array act algorithm state machin control perform io cpu dynam ram dram hold forward backward map download cpu initi cpu initi search perform binari search obtain hyperplan boundari pass search engin held static ram sram fpga independ begin candid list construct trim candid look backward map forward map integ compar return true candid within rang els discard trim candid point go dimens final point list form point set indic return cpu exhaust search andor process note although describ architectur singl compar number ad run parallel near linear perform scale number compar search engin trim candid list cpu cours free carri task parallel begun implement propos architectur result intend small lowcost scsi base modul plug standard workstat pc estim modul result 100 fold speedup optim softwar implement algorithm control unit backward map forward map cpu compar within limit flag lower limit upper limit control bu fpgapld figur 14 architectur inexpens hardwar search engin base propos algorithm 9 discuss 91 k nearest neighbor search section 5 saw possibl determin minimum valu ffl necessari ensur least one point found within hypercub hyperspher high probabl possibl extend notion ensur least k point found high certainti recal probabl exist least one point hyperspher radiu ffl given equat 19 defin p k probabl least k point within hyperspher write p k express substitut equat 18 given p k numer solv ffl hs similarli substitut equat 22 comput minimum valu ffl hc hypercub 92 dynam point insert delet current algorithm use float point array store order set 2d integ array store backward forward map result possibl effici insert delet point search space limit easili overcom order set store array set binari search tree bst bst correspond array order set similarli forward map replac singl link list backward map done away complet indic made resid within node bst although bst would allow effici insert delet nearest neighbor search would longer effici integ array also order get maximum effici bst would well balanc see 19 discuss balanc techniqu 93 search partial data mani time requir search nearest neighbor absenc complet data instanc consid applic requir featur extract imag match featur featur space possibl extract featur match done partial trivial adapt algorithm situat trim list need look dimens data hard envis case kd tree exampl space partit hyperplan particular dimens travers tree locat bucket contain queri point possibl choos travers direct node data correspond partit dimens node miss queri point acknowledg wish thank simon baker dinkar bhat detail comment critic suggest help greatli improv paper research conduct center research intellig system depart comput scienc columbia univers support part arpa contract daca7692c007 dodonr muri grant n000149510601 nsf nation young investig award r design analysi comput algorithm nearest neighbor search applic diagram survey fundament geometr data struc ture multidimension binari search tree use associ search multidimension binari search tree databas applic data structur rang search optim expectedtim algorithm closest point problem multidimension index recogn visual shape random algorithm closestpoint queri multidimension search problem algorithm combinatori geometri fast nearestneighbor search dissimilar space algorithm find nearest neigh bor algorithm find best match logarithm expect time branch bound algorithm comput knearest neighbor effect way repres quadtre dynam index structur spatial search fundament data structur complex ddimension voronoi diagram sort search new version nearestneighbor approxim elimin search algorithm aesa linear preprocess time memori requir visual learn recognit 3d object appear anc parametr featur detect slam softwar librari appear match digit pictur similar search larg imag databas comput geometri introduct numer recip c direct spatial search pictori databas use pack rtree refin nearestneighbor search kdimension tree reduc overhead aesa metricspac nearest neighbour search algorithm data structur algorithm nearest neighbor search gener metric space techniqu identifi nearest neighbor tr ctr jame mcname fast nearestneighbor algorithm base princip axi search tree ieee transact pattern analysi machin intellig v23 n9 p964976 septemb 2001 david w patterson mykola galushka niall rooney characteris novel index techniqu casebas reason artifici intellig review v23 n4 p359393 june 2005 philip quick david capson subspac posit measur presenc occlus pattern recognit letter v23 n14 p17211733 decemb 2002 freeman thoui r jone egon c pasztor examplebas superresolut ieee comput graphic applic v22 n2 p5665 march 2002 bin zhang sargur n srihari fast knearest neighbor classif use clusterbas tree ieee transact pattern analysi machin intellig v26 n4 p525528 april 2004 jim z c lai yich liaw juli liu fast knearestneighbor search base project triangular inequ pattern recognit v40 n2 p351359 februari 2007 lin liang ce liu yingq xu bain guo heungyeung shum realtim textur synthesi patchbas sampl acm transact graphic tog v20 n3 p127150 juli 2001 fast textur synthesi use treestructur vector quantiz proceed 27th annual confer comput graphic interact techniqu p479488 juli 2000 yongsheng chen yipe hung tingfang yen chioushann fuh fast versatil algorithm nearest neighbor search base lower bound tree pattern recognit v40 n2 p360375 februari 2007 mineichi kudo naoto masuyama jun toyama masaru shimbo simpl termin condit knearest neighbor method pattern recognit letter v24 n910 p12031213 01 june john favata offlin gener handwritten word recognit use approxim beam match algorithm ieee transact pattern analysi machin intellig v23 n9 p10091021 septemb 2001 edgar chvez gonzalo navarro compact space decomposit effect metric index pattern recognit letter v26 n9 p13631376 1 juli 2005 aaron hertzmann steven seitz examplebas photometr stereo shape reconstruct gener vari brdf ieee transact pattern analysi machin intellig v27 n8 p12541264 august 2005 stahlhut extend natur textur multiscal synthesi graphic model v67 n6 p496517 novemb 2005 gonzalo navarro search metric space spatial approxim vldb journal intern journal larg data base v11 n1 p2846 august 2002 edgar chvez jo l marroqun gonzalo navarro fix queri array fast econom data structur proxim search multimedia tool applic v14 n2 p113135 june 2001 jinxiang chai jing xiao jessica hodgin visionbas control 3d facial anim proceed acm siggrapheurograph symposium comput anim juli 2627 2003 san diego california edgar chvez gonzalo navarro ricardo baezay jo lui marroqun search metric space acm comput survey csur v33 n3 p273321 septemb 2001 huzefa neemuchwala alfr hero paul carson imag match use alphaentropi measur entrop graph signal process v85 n2 p277296 februari 2005 gisli r hjaltason hanan samet indexdriven similar search metric space acm transact databas system tod v28 n4 p517580 decemb richard szeliski imag align stitch tutori foundat trend comput graphic vision v2 n1 p1104 januari 2006