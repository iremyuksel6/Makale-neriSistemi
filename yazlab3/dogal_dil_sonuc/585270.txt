alternatingtim tempor logic tempor logic come two varieti lineartim tempor logic assum implicit univers quantif path gener execut system branchingtim tempor logic allow explicit existenti univers quantif path introduc third gener varieti tempor logic alternatingtim tempor logic offer select quantif path possibl outcom game game system environ altern move lineartim branchingtim logic natur specif languag close system alternatingtim logic natur specif languag open system exampl preced tempor oper eventu select path quantifi specifi game system environ system strategi reach certain state problem recept realiz control formul modelcheck problem alternatingtim formula depend whether admit arbitrari nest select path quantifi tempor oper obtain two alternatingtim tempor logic atl atlastatl atlast interpret concurr game structur everi state transit concurr game structur result choic move one player player repres individu compon environ open system concurr game structur captur variou form synchron composit open system augment fair constraint also asynchron composit structur without fair constraint modelcheck complex atl linear size game structur length formula symbol modelcheck algorithm ctl extend modif atl structur weakfair constraint atl model check requir solut 1pair rabin game done polynomi time structur strongfair constraint atl model check requir solut game boolean combin bchi condit done pspace case atlast modelcheck problem close relat synthesi problem lineartim formula requir doubli exponenti time b introduct 1977 pnueli propos use lineartim tempor logic ltl specifi requir reactiv system pnu77 formula ltl interpret comput infinit sequenc state reactiv system satisfi ltl formula comput due implicit use univers quantif set comput express existenti possibl prop erti branchingtim tempor logic ctl ctl provid explicit quantif set comput ce81 eh86 instanc state predic ctl formula 83 requir state satisfi visit computa tion ctl formula 93 requir exist comput visit state satisfi problem model check verifi whether finitest abstract reactiv system satisfi temporallog specif ce81 qs81 effici model checker exist ltl eg spin hol97 ctl eg smv mcm93 increasingli use debug aid industri design logic ltl ctl natur interpret comput close system close system system whose behavior complet determin state system howev composit model design reactiv system requir compon view open system open system system interact environ whose behavior depend state system well behavior environ model open system csp hoa85 io automata lyn96 reactiv modul ah96 distinguish intern nondetermin choic made system extern nondetermin choic made environ ment consequ besid univers comput satisfi properti existenti comput satisfi properti question third question aris natur system resolv intern choic satisfact properti guarante matter environ resolv extern choic altern satisfact view win condit twoplay game system environ altern natur gener existenti univers branch studi extens theoret comput scienc cks81 differ research argu gamelik interpret ltl ctl specif open system list four instanc 1 recept dil89 al93 gssl94 given reactiv system specifi set safe comput typ ical gener transit relat set live comput typic express ltl formula recept problem determin whether everi finit safe comput extend infinit live comput irrespect behavior environ sensibl necessari composition requir affirm answer recept problem 2 realiz pro gram synthesi alw89 pr89a pr89b given set input output signal synthesi problem requir construct reactiv system assign everi possibl input sequenc output sequenc result comput satisfi 3 supervisori control rw89 given finitest machin whose transit partit control uncontrol set safe state control problem requir construct control choos control transit machin alway stay within safe set satisfi gener ltl formula modul check kv96 given open system modulecheck problem determin matter environ restrict extern choic system satisfi approach use temporallog syntax develop specifi close sy tem reformul semant open system paper propos instead enrich tempor logic altern properti specifi explicitli within logic introduc alternatingtim tempor logic specif verif open system formul open system con sider instead system environ gener set set sigma agent correspond differ compon system environ schedul agent consid two polici state synchron sy tem known advanc agent proce state asynchron system sever agent may enabl unknown schedul determin agent take next step latter case schedul requir fair agent infinit comput agent continu enabl without schedul set sigma agent set gamma comput state w system consid follow game protagonist adversari game start state w whenev schedul agent set protagonist choos next state otherwis adversari choos next state result infinit comput belong set gamma protagonist win protagonist win strategi say altern time formula hhaiigamma satisfi state w hhaii path quantifi parameter set agent rang comput agent forc game irrespect agent sigma na play henc parameter path quantifi hhaii gener path quantifi branchingtim tempor logic existenti path quantifi 9 correspond hhsigmaii univers path quantifi 8 correspond hhii par ticular close system view system singl agent sy two possibl parameter path quantifi hhsysii hhii match exactli path quantifi 9 8 requir specifi system depend syntax use specifi set gamma comput obtain two alternatingtim tempor logic logic atl set gamma specifi formula ltl restrict logic atl set gamma specifi singl tempor oper appli state formula thu atl altern gener ctl atl altern gener ctl alternatingtim tempor logic conveni express properti open system illustr follow five exampl 1 multiprocess distribut system requir subset process attain goal irrespect behavior remain process consid exampl cachecoher protocol gigamax verifi use smv mcm93 one desir properti absenc deadlock deadlock state one processor say perman block access memori cell requir specifi use ctl formul captur inform requir precis ctl formula assert alway possibl processor cooper eventu read write collabora tive possibl atl formula stronger guarante memori access processor matter processor system adversari possibl 2 ctl formula 82 assert state predic invari system compon irrespect behavior compon adversari invari atl stand hhsigma n fagii 2 state weaker requir possibl invari compon violat 2 therefor system compon may cooper achiev 2 collabor invari invari complex system necessari suffici check everi compon satisfi atl formula a2 3 recept system whose live comput given ltl formula specifi 4 check realiz program synthesi correspond model check atl formula hhsysii maxim model consid possibl input output 5 control system whose safe state given state predic specifi thesi correspond model check formula gener ltl formula atl requir hhcontrolii assert control strategi ensur satisfact notic atl better suit composit reason ctl instanc compon satisfi ctl formula 93 conclud compound system akb also satisfi 93 hand satisfi atl formula hhaii3 akb modelcheck problem alternatingtim tempor logic requir comput win strategi case synchron atl game finit reachabl game consequ modelcheck complex linear size system length formula case ctl check existenti reachabl correspond iter existenti nexttim oper 9 check univers reachabl correspond iter univers next 8 check altern reachabl correspond iter appropri mix 9 8 govern parameter path quantifi suggest simpl modelcheck procedur synchron atl show exist symbol model checker ctl modifi check atl specif extra cost asynchron model due presenc fair constraint atl model check requir solut infinit game name gener buchi game vw86 consequ modelcheck complex quadrat size system symbol algorithm involv nest fixedpoint comput modelcheck problem atl much harder show complet 2exptim synchron asynchron case 2 alternatingtim logic atl 21 syntax tempor logic atl alternatingtim logic defin respect finit set pi proposit finit set sigma agent atl formula one proposit atl formula set agent atl formula oper hh ii path quantifi next u tempor oper logic atl similar branchingtim logic ctl path quantifi parameter set agent ang known write ii instead hhfa gii 22 synchronousstructur semant formula atl interpret synchron structur set proposit sigma set agent w set state r w theta w total transit relat ie everi state w 2 w exist state rw w 0 function map state w 2 w set w pi proposit true w function oe map state w 2 w agent oew 2 sigma enabl w note precis one agent enabl state set sigma agent denot wa w set state w oew 2 fag singleton write w instead w fag two state w w 0 rw w 0 say w 0 successor w comput infinit sequenc state 0 rw refer comput start state w 0 w 0 comput comput fl index 0 use fli fl0 denot ith state fl finit prefix fl respect order defin semant atl first defin notion strategi strategi agent 2 sigma function f w delta w w f fl delta thu strategi map finit prefix comput possibl extens compu tation intuit strategi f suggest histori fl state w enabl successor f fl delta w w strategi f induc set comput agent enforc given state w set ang agent set g strategi agent defin outcom fa w set outw fa wcomput agent enforc cooper follow strategi fa wcomput fl w fa iff whenev fl visit state whose agent k 2 comput proce accord strategi f ak formal k 2 w particular outcom set outw fa contain singl wcomput outcom set outw fa contain wcomput turn formal definit semant atl write w indic state w synchron structur satisfi subscript clear context omit satisfact relat defin state w 2 w induct follow ffl p 2 pi w exist set fa strate gie one agent comput exist set fa strate gie one agent comput exist index flj train train ctr gate gate request gate grant gate ctr figur 1 synchron traincontrol system note next oper hhaii give local con straint w exist successor w satisfi w 62 wa successor w satisfi denot w set state w w sinc parameter path quantifi hhsigmaii hhii correspond existenti univers path quan tific respect write 9 hhsigmaii 8 hhii logic ctl fragment atl interpret structur singl agent 8 dual hh ii use path quantifi hhsigma n aii rang comput agent strategi enforc path quantifi rang comput agent strategi avoid therefor also ctl tempor oper 3 eventu 2 alway defin oper hhaiitru u exampl 21 consid synchron structur shown figur 1 structur describ protocol train enter gate railroad cross ing moment train either gate gate order enter gate train issu request servic grant reject control next step grant train may enter gate relinquish grant structur two agent train control two state structur label ctr control comput one state control choos next state two state control train choos successor state system satisfi follow specif 1 whenev train outsid gate grant enter gate control prevent enter gate gate grant hhctr ii2out gate 2 whenev train outsid gate control forc enter gate gate ctr2out gate 3 whenev train outsid gate train control cooper train enter gate gate hhctr trainii3in gate 4 whenev train gate control forc singl step gate first two specif state ctl provid inform ctl gate requir exist comput train alway outsid gate atl formula guarante matter train have control prevent enter gate matter control behav train decid stay outsid gate sinc state structur either control state train state third specif equival gate 93 gate 23 asynchronousstructur semant formula atl also interpret asynchron structur pi sigma r l synchron structur function oe map transit r 2 r agent oer 2 sigma own r agent 2 sigma denot r r set transit own two state w w 0 r w w 0 say w 0 asuccessor w note state w may none sever asuccessor state w defin enabl w sigma set agent exist asuccessor w write w set state w 2 enabledw synchron structur comput infinit sequenc state 0 rw given set sigma agent comput fl afair iff agent 2 index 0 exist j either 62 enabl w j r w afair comput agent continu enabl without schedul 1 similar synchron case strategi agent 2 sigma function f w delta w w f fl delta r w w 0 thu agent appli strategi influenc comput whenev schedul howev unlik synchron structur known advanc agent schedul particular state encount given state w set ang agent set g strategi agent defin outcom w fa set wcomput agent enforc follow strategi f f schedul polici fair respect formal comput k 2 w afair definit satisfact atl formula asynchron structur synchron case definit come exampl w everi agent 2 enabl w either 2 exist successor w 0 w w 0 62 asuccessor w 0 w w 0 synchron atl fragment asynchron atl interpret structur state w set enabledw enabl agent singleton set sigma agent singleton synchron asynchron interpret coincid equal ctl exampl 22 consid asynchron structur shown figur 2 structur describ algorithm easili modifi account differ ent stronger type fair gate gate request gate grant gate train ctr train train train train ctr ctr ctr figur 2 asynchron traincontrol system protocol train enter gate protocol similar one describ exampl 21 request train enter gate servic asynchron futur step fair schedul polici ensur request servic grant reject eventu four specif exampl 21 hold also asynchron system check synchron resp asynchron modelcheck problem atl ask given synchron asyn chronou structur atl formula set state satisfi measur complex modelcheck problem two way joint complex model check consid complex term size structur length formula structur complex model check consid complex term structur assum formula fix sinc structur typic much larger formula size common comput bottleneck structurecomplex measur particular practic interest lp85 31 synchron model model check synchron atl similar ctl model check ce81 qs81 bcm first present symbol algorithm manipul state set given synchron structur algorithm shown figur 3 use follow primit oper ffl function sub given return queue sub subformula 1 subformula 2 subformula 1 2 preced 1 queue sub ffl function propcheck given proposit return state set p ffl function pre given two state set ae return set state w either successor w w 62 ae successor w ffl union intersect differ inclus test state set primit implement use symbol represent binari decis diagram state set transit relat given symbol model checker ctl smv mcm93 pre oper need modifi check atl 0 sub case case case case case ae fals 2 6 ae ae case return figur 3 symbol atl model check altern atl modelcheck algorithm implement use enum represent state set w structur subformula 0 everi state w 2 w label 0 iff w 2 0 w label label state formula proce bottomup fashion follow order sub smaller larger subformula 0 gener rule s1 s2 form hhaii label procedur straight forward label procedur correspond solv reachabl problem andor graph state wa ornod remain state andnod need comput set node orplay reach state label 2 stay within state label 1 sinc reachabl problem andor graph solv time linear number edg follow label procedur requir linear time subformula furthermor sinc reachabl andor graph ptimehard problem imm81 reduc model check synchron atl conclud follow theorem theorem 31 synchron modelcheck problem atl ptimecomplet solv time om structur transit formula length structur complex problem also ptimecomplet interest compar modelcheck complex synchron atl ctl problem solv time om ces86 structur complex ctl model check nlogspacecomplet bvw94 model check relat graph reachabil iti synchron atl model check relat andor graph reachabl 32 asynchron model consid asynchron structur state set w formula atl synchron case subformula 0 comput set state satisfi 0 start innermost subformula purpos transform asynchron structur synchron structur 0 follow proposit 0 proposit agent 0 agent plu new agent b call schedul state 0 state plu everi state w 2 w everi agent enabl w new state q wa transit w w 0 own agent replac 0 two transit one w q wa q wa w 0 proposit true state w q wa 0 true state w agent enabl state w 0 b agent enabl state q wa 0 thu synchron structur first schedul choos one enabl agent chosen agent take step consid subformula hhaii3 gener formula handl similarli evalu formula state w 0 2 w correspond follow game protagonist ad versari game play synchron structur start w 0 agent enabl current state protagonist choos successor state 0 otherwis adversari choos next state state w satisfi visit protagonist win game continu forev adversari win iff result comput fair agent contain either infinit mani state form q wa infinit mani state w 2 w enabl state w state w 0 satisfi formula hhaii3 iff protagonist win strategi win condit adversari specifi w w defin state enabl w 0 defin state 0 enabl buchi game set win state adversari comput nest fixedpoint comput ae true ae 6 ae w n w 6 ae 0 od od enum implement complex solv buchi game quadrat number transit structur vw86 transi tion 0 2m transit thu label procedur subformula hhaii3 requir om 2 time subformula ii3 win condit adversari conjunct n buchi condit precis 2 ak w ak game transform game singl buchi condit introduc counter variabl rang set ng vw86 henc label procedur subformula 0 requir om 2 determin complex evalu subformula defin size logic connect 1 size tempor connect number agent correspond path quantifi size connect time complex om 2 n 2 k bound length formula final sinc synchron modelcheck problem special case asynchron problem conclud follow theorem theorem 32 asynchron modelcheck problem atl ptimecomplet solv time om 2 2 structur transit atl formula length structur complex problem also ptimecomplet interest compar modelcheck complex asynchron atl fairctl gener buchi fair constraint latter solv omk time vw86 k number buchi constraint best known algorithm former quadrat model check relat check empti buchi automata asynchron model check relat check empti altern buchi automata 4 alternatingtim logic atl logic atl fragment express logic call two type formula state formula whose satisfact relat specif state path formula whose satisfact relat specif comput formal state formula one follow proposit state formula hhaii sigma set agent path formula path formula one follow path formula path formula logic atl consist set state formula gener rule similar branchingtim tempor logic ctl path quantifi parameter set agent logic atl fragment atl consist formula everi tempor oper immedi preced path quantifi semant atl defin similarli semant atl write fl indic comput fl structur satisfi path subscript usual omit satisfact relat j defin state w comput fl induct follow ffl state formula gener rule s1 s2 definit j atl exist set fa strategi one agent comput state formula iff fl0 exist index 0 fli tempor oper 3 2 defin u usual exampl assert agent strategi enforc whenev request continu issu infinit mani grant given specif express ctl atl singleag structur degener ctl exponenti price paid modelcheck complex move ctl price becom even signific consid alternatingtim version logic theorem 41 synchron asynchron case modelcheck problem atl 2exptimecomplet case structur complex problem ptimecomplet proof sketch given synchron structur state set w atl formula label state state subformula start innermost state subformula state subformula form hhaii employ algorithm modul check kv96 follow let 0 result replac state subfor mula alreadi evalu appropri new proposit state w set fa strategi set outw fa comput induc tree obtain unwind w prune subtre whose root successor state wa chosen strategi fa construct buchi tree automaton twa accept tree induc outw fa set fa strategi rabin tree automaton accept tree satisfi kv96 twa jw j state es84 state 2 ojj accept pair intersect two automata rabin tree automaton contain outcom tree satisfi 8 0 henc semant atl state w satisfi hhaii iff intersect nonempti ej88 pr89a nonempti problem rabin tree automaton n state k pair solv time okn 3n henc evalu subformula hhaii singl state requir time sinc jw j state ojj mani subformula membership 2exptim follow asynchron case reduc synchron case similar proof theorem 32 lower bound use reduct realiz problem ltl 2exptimehard problem ros92 model check synchron atl contrast ctl model check pspacecomplet ces86 structur complex nlogspacecomplet bvw94 verif problem open system correspond modelcheck problem tempor logic correspond case linear time realiz problem alw89 pr89a pr89b case branch time modul check problem kv96 search win strategi regular game gener involv hefti comput price logic atl identifi interest class properti check solv finit game demonstr still great deal reason open system perform effici conclud sever remark variat atl support design choic 51 agent limit memori definit atl atl strategi agent may depend unbound amount infor mation name full histori game current state howev sinc involv game regular exist win strategi impli exist win finitest strategi tho95 depend finit amount inform histori game thu semant atl atl defin equival use outcom finitest strategi terest strategi thought parallel composit system control make sure system follow strat egi appropri definit parallel composit precis finitest strategi implement use control synchron structur inde finit reachabl game gener buchi game atl suffic consid memoryfre strategi tho95 implement control map ie control without state case atl whose formula specifi win posit game tho95 52 agent limit inform model assum agent structur complet inform proposit state satisfi proposit agent agent own transit sometim may appropri assum agent 2 sigma observ subset pi pi proposit strategi f pi pi must 1 depend observ part histori 2 decid observ part next state undecid result multiplay game incomplet inform follow modelcheck problem atl incomplet inform undecid synchron yan97 asynchron pr79 case special case path quantifi parameter singl agent cooper agent differ inform possibl decid follow result modul check incomplet inform kv97 case modelcheck complex synchron asynchron atl exptimecomplet 2exptimecomplet atl structur complex four problem exptimecomplet thu render reason agent incomplet inform infeas even sever restrict 53 game logic modul check parameter path quantifi hhaii first stipul exist strategi agent univers quantifi outcom stipul strategi one may gener atl atl separ two concern strategi quantifi path quantifi say write 99a 8 instead hhaii read 99a exist strategi agent exampl formula assert agent strategi behavior remain agent 1 alway true possibl differ behavior remain agent 2 alway true defin semant strategi quan tifier need consid tree induc outcom set strategi obtain three type formula state formula path formula ctl atl tree formula whose satisfact relat specif outcom tree instanc state formula subformula tree formula refer gener logic strategi quantifi path quantifi tempor oper boolean connect game logic atl fragment game logic consist formula everi strategi quantifi immedi follow path quantifi note 99a 9 equival 9 anoth fragment game logic studi modul check kv96 one consid formula form 99a singl outermost strategi quantifi follow ctl ctl formula express viewpoint alternatingtim logic modul check identifi incompar fragment game logic formula equival atl formula atl formula equival formula singl strategi quantifi kv96 shown modulecheck complex exptimecomplet ctl 2exptim complet ctl structur complex problem ptimecomplet appli method bottomup fashion use solv modelcheck problem game logic result joint complex 2exptim structur complex ptime thu game logic expens atl feel howev unlik state path formula tree formula natur specif reactiv system 54 alternatingtim fixpoint logic tempor properti use oper defin fix point nexttim properti close system give calculu gener tempor logic koz83 similar fashion one gener alternatingtim tempor logic obtain alternatingtim calculu whose primit parameter next construct hhaii least greatest fixedpoint oper posit boolean connect atl proper fragment alternatingtim calculu everi formula equival fixedpoint formula without altern least greatest fix point practic howev design prefer tempor oper fix point bbg ctl ctl captur use friendli subset calculu specif close system atl atl captur use friendli subset alternatingtim calculu specif open system worth note ctl parameter next construct suffici use specifi unbound altern reachabl properti hhaii3 bvw94 henc essenti atl parameter path quan tifier nexttim oper alternatingtim transit system parameter next construct hhaii differ similar oper commonli written 9 interpret agent 2 exist asuccessor rather atl formula hhaii equival 9 8 sigmana abstract specif open system essenti parameter next gamelik interpret standard modal interpret definit synchron asynchron structur approxim real concurr model open system synchron eg ah96 asynchron eg lyn96 struc ture transit correspond step singl agent model transit may result simultan independ decis sever agent gener situat give rise game complex individu move captur abstractli altern transit system see full paper gamelik interpret parameter next make atl robust respect chang definit individu move particular result carri altern transit system therefor appli exampl reactiv modul ah96 acknowledg thank amir pnueli mosh vardi mihali yannakaki help discuss r reactiv modul compos specifica tion realiz unrealiz concurr program specif symbol model check 10 20 state beyond automatatheoret approach branchingtim model check design synthesi synchron skeleton use branchingtim tempor logic automat verif finitest concurr system use tempor logic specif trace theori automat hierarch verif speedindepend circuit branch versu linear time complex tree automata logic program decid branchingtim logic live time untim system commun sequenti pro cess model checker spin number quantifi better number tape cell result proposit calculu modul check modul check visit check finitest concurr program satisfi linear specif distribut algorithm symbol model check tempor logic program synthesi reactiv modul synthesi asynchron reactiv modul specif verif concurr system cesar control discret event system modular synthesi reactiv sy tem synthesi strategi infinit game person commun tr commun sequenti process myampersandldquosometimesmyampersandrdquo myampersandldquonot nevermyampersandrdquo revisit automat verif finitest concurr system use tempor logic specif synthesi reactiv modul trace theori automat hierarch verif speedindepend circuit automata infinit object tempor modal logic symbol boolean manipul order binarydecis diagram symbol model check ectl fragment modal myampersandmgrcalculu conjoin specif model checker spin modal model check extend abstract check finit state concurr program satisfi linear specif menbership problem function multivalu depend relat databas altern reactiv modul automatatheoret approach branchingtim model check modul check jmocha distribut algorithm symbol model check automata infinit object church problem realiz unrealiz specif reactiv system synthesi asynchron reactiv modul fair simul relat pariti game state space reduct bmyampersanduumlchi automata small progress measur solv pariti game control synchron system control synchron system part ii complex branch modular model check extend abstract specif verif concurr system cesar mocha lineartim modelcheck algorithm alternationfre modal mucalculu design synthesi synchron skeleton use branchingtim tempor logic live time untim system tree automata game decid branch time logic ctr xianwei lai shanli hu zhengyuan ning improv formal framework action individu intent group intent multiag system proceed ieeewicacm intern confer intellig agent technolog p420423 decemb 1822 2006 wojciech jamroga thoma gotn agent achiev incomplet inform proceed fifth intern joint confer autonom agent multiag system may 0812 2006 hakod japan thoma gotn wieb van der hoek michael wooldridg logic coalit game proceed fifth intern joint confer autonom agent multiag system may 0812 2006 hakod japan suchismita roy sayantan da prasenjit basu pallab dasgupta p p chakrabarti sat base solut consist problem formal properti specif open system proceed 2005 ieeeacm intern confer computeraid design p885888 novemb 0610 2005 san jose ca luigi sauro jell gerbrandi wieb van der hoek michael wooldridg reason action cooper proceed fifth intern joint confer autonom agent multiag system may 0812 2006 hakod japan krishnendu chatterje luca de alfaro thoma henzing complex quantit concurr pariti game proceed seventeenth annual acmsiam symposium discret algorithm p678687 januari 2226 2006 miami florida van der hoek michael wooldridg dynam deleg cooper control logic account proceed fourth intern joint confer autonom agent multiag system juli 2529 2005 netherland aleksandra nenadi ning zhang qi shi rsabas verifi recover encrypt signatur applic certifi email deliveri journal comput secur v13 n5 p757777 octob 2005 aldewereld wieb van der hoek johnjul meyer ration team logic aspect multiag system fundamenta informatica v63 n23 p159183 april 2004 valentin goranko govert van drimmelen complet axiomat decid alternatingtim tempor logic theoret comput scienc v353 n1 p93117 14 march 2006 thoma henzing game system design verif proceed 10th confer theoret aspect ration knowledg june 1012 2005 singapor van der hoek alessio lomuscio michael wooldridg complex practic atl model check proceed fifth intern joint confer autonom agent multiag system may 0812 2006 hakod japan van der hoek mark robert michael wooldridg knowledg social law proceed fourth intern joint confer autonom agent multiag system juli 2529 2005 netherland alur pavol ern p madhusudan wonhong nam synthesi interfac specif java class acm sigplan notic v40 n1 p98109 januari 2005 van der hoek wojciech jamroga michael wooldridg logic strateg reason proceed fourth intern joint confer autonom agent multiag system juli 2529 2005 netherland krishnendu chatterje thoma henzing marcin jurdziski game secur equilibria theoret comput scienc v365 n1 p6782 10 novemb 2006 alessio lomuscio franco raimondi model check knowledg strategi game multiag system proceed fifth intern joint confer autonom agent multiag system may 0812 2006 hakod japan alur salvator la torr p madhusudan modular strategi recurs game graph theoret comput scienc v354 n2 p230249 28 march 2006 wojciech jamroga wieb van der hoek agent know play fundamenta informatica v63 n23 p185219 april 2004 magdalena kacprzak wojciech penczek fulli symbol unbound model check alternatingtim tempor logic1 autonom agent multiag system v11 n1 p6989 juli 2005 van der hoek michael wooldridg logic cooper proposit control artifici intellig v164 n12 p81119 may 2005 yve bontemp pierreyv schobben christof lding synthesi open reactiv system scenariobas specif fundamenta informatica v62 n2 p139169 april 2004 r ghica murawski ch l ong syntact control concurr theoret comput scienc v350 n2 p234251 7 februari 2006 van der hoek knowledg ration action proceed third intern joint confer autonom agent multiag system p1623 juli 1923 2004 new york new york