support scenariobas requir engin abstractscenario advoc mean improv requir engin yet method tool exist support scenariobas paper report method softwar assist tool scenariobas integr use case approach objectori develop method oper tool illustr financi system case studi scenario use repres path possibl behavior use case investig elabor requir method commenc acquisit model use case use case compar librari abstract model repres differ applic class model associ set gener requir class henc identifi class use case belong gener requir reus scenario path automat gener use case except type appli normal event sequenc suggest possibl abnorm event result human error gener requir also attach except suggest possibl way deal human error type system failur scenario valid rulebas frame detect problemat event pattern tool suggest appropri gener requir deal problem encount paper conclud review relat work discuss prospect scenariobas method tool b introduct sever interpret scenario propos rang exampl behaviour drawn use case 29 descript system usag help understand sociotechn system 30 experi base narr requir elicit valid 39 50 scenario advoc effect mean research fund european commiss esprit 21903 crew cooper requir engin scenario longterm research project commun user stakehold anchor requir analysi real world experi 15 unfortun scenario extrem labourintens captur document 20 44 furthermor concret recommend exist scenariobas requir engin practis even less tool support avail scenario often describ inform instanc exampl level rais question instanc level inform generalis model specif use softwar engin scenario may use valid requir test data collect observ practic oper new system check 40 altern scenario may seen pathway specif system usag repres anim simul new system 14 enabl valid inspect behaviour futur system paper describ method tool support scenario base requir engin use scenario latter sens industri practic scenario use gener situat prompt reus design pattern 8 48 reus knowledg requir engin could potenti bring consider benefit develop product requir reus demonstr domain specif context 31 howev wish extend across domain follow earlier work analog softwar engin problem 51 paper organis four section first previou research review section 3 method softwar assist tool scenario base crewssavr scenario acquisit valid requir describ illustr financi deal system case studi final discuss relat work futur prospect scenario base 2 previou work method advis use scenario process requir analysi valid one except inquiri cycl pott 39 use scenario script identifi obstacl problem goalori requir analysi unfortun inquiri cycl give detail advic problem may discov scenario furthermor leav open human judgement system requir determin paper build concept inquiri cycl aim provid detail advic scenario use requir valid previou work propos scenario base requir analysi method scram recommend combin concept demonstr scenario design rational 50 scram employ scenario script walkthrough method valid design option key point script altern design document design rational explain user demonstr earli prototyp scram prove use facilit requir elabor earli prototyp place 48 howev gave outlin guidanc scenariobas analysi scenario creat project futur system usag therebi help identifi requir rais question mani scenario necessari ensur suffici requir captur safeti critic system accur foresight press problem taxonomi event 24 theori human error 37 42 use investig scenario futur system use previou research 49 extend taxonom approach safeti critic system generalis applic scenario adopt object orient method 29 21 10 project vision interact design system context scenario defin path interact may occur use case howev object orient method make explicit refer requir per se instead requir implicit within model use case class hierarchi failur make requir explicit lead disput error valid 17 38 sever requir manag tool evolv address need requir tracabl eg door requisit pro even though tool could integr system support object orient method eg ration rose syntact level would inadequ semant relationship requir object orient model need establish one motiv work establish bridg develop sound mean integr oo method tool discov requir depend system environ research jackson 26 point domain impos oblig requir system jackson propos gener model call problem frame systemenviron depend event aris human error oblig system user explicitli analys model relationship depend peopl system investig yu mylopoulo 54 chung 7 framework enterpris model facilit investig relationship requir goal agent task howev scenario use explicitli approach method requir unlock potenti scenario base furthermor relationship investig base exampl model one hand system requir impos environ need understood clearli one problem scenario instanc ie specif exampl behaviour mean reus scenario base knowledg difficult link reusabl design might provid scenario could generalis link objectori analysi design pattern 18 although author pattern librari describ context use pattern 8 19 provid guidanc extent context requir reus demonstr lam et al 30 although scope reus limit one applic domain jet engin control system mani problem share common abstract 51 rais possibl common abstract new applic domain could discov earli process may possibl reus gener requir link reusabl design could provid conduit reus wealth softwar engin knowledg resid reusabl compon librari well link requir objectori solut pattern eg 8 19 build bridg requir engin reusabl design anoth motiv research report paper next turn descript method tool support 3 method tool support scenariobas method scenariobas intend integr object orient develop eg oos 29 henc use case employ model system function behaviour separ requir specif document maintain make requir explicit captur divers differ type requir mani locat use case use case requir specif develop iter analysi progress defin scenario one sequenc event one possibl pathway use case henc mani scenario may specifi one use case scenario repres instanc exampl event could happen scenario may describ normal abnorm behaviour method illustr figur 1 use scenario refin valid system requir stage method follow 1 elicit document use case stage use case elicit directli user histori real world system usag creat vision futur system usag use case model valid correct respect syntax semant paper report stage detail 2 analys gener problem requir librari reusabl gener requir attach model applic class provid brows tool match use case input fact acquir design appropri gener applic class suggest high level gener requir attach class design rational tradeoff gener requir propos two level first gener routin handl differ event pattern secondli requir associ applic class held repositori former provid requir develop filter valid process specifi event base softwar engin method eg jackson system develop 25 latter provid target design advic instanc transact handl requir loanshir applic 3 gener scenario step gener scenario walk possibl event sequenc use case appli heurist suggest possibl except error may occur step analysi help analyst elabor pathway use case two pass first normal behaviour secondli abnorm behaviour pathway becom scenario scenario gener support tool automat identifi possibl pathway use case request user select probabl error pathway 4 valid system requir use scenario gener follow toolassist valid detect event pattern scenario present checklist gener requir appropri particular normal abnorm event pattern manner requir refin interact dialogu softwar engin tool outcom set format use case scenario requir specif elabor reusabl requir although method appear follow linear sequenc practic stage interleav iter figur 1 method stage scenariobas requir engin 31 schema scenario base requir model section describ schema scenario base knowledg shown figur 2 use case collect action rule govern action link togeth drawn allen tempor semant 2 calculu albert ii specif languag 14 action central concept scenario use case use case specifi network action link attain goal describ purpos use case use case refin lower level detail complet analysi produc layer collect use case use case userdefin properti indic type activ carri eg decis transact control etc action sub type either cognit eg buyer agre deal price ahvt yvpvr phr 6hyr brrvp whyvqhvahr brrhr whyvqhr key offer physic eg dealer return telephon receiv systemdriven eg deal system store inform current deal commun eg buyer request quot dealer action one start event one end event action link 8 type actionlink rule describ later detail state transit state object action use case agent contain start end result event use involv scenario sequenc goal achiev model primit model gener structur object compos properti 1m ipat figur 2 metaschema model use case scenario base knowledg action involv one agent agent either human eg dealer machin eg dealingsystem composit eg dealingroom unspecifi type agent userdefin properti describ knowledg compet action agent link specifi involv relat subtyp perform start end control respons action use nil one mani object instanc denot use relat subtyp access read oper action also result state transit chang state object state aggreg attribut valu characteris object given time quantit qualit term structur object persist real world object spatial properti model physic logic unit organis structur object import compon reusabl gener domain model call object system model describ section 35 also allow use case model extend describ locat object agent activ introduct case studi case studi base secur deal system major bank london secur deal system buy sell bond giltedg stock client bank bank dealer also buy sell secur account make profit deal may initi either client request transact counterparti anoth bank stockbrok act buyer request quotat dealer offer buy sell secur quot request telephon offer post electron wire servic dealer stockbrok subscrib case studi focu deal initi counterparti viewpoint dealer main activ use case includ agreement dealer buyer deal price number stock enter record deal inform comput system check deal inform enter dealer valid deal case studi contain sever use case howev space preclud complet descript take one use case preparequot exampl illustr figur 3 sequenc initi request event counterparti agent dealer respond provid quotat counterparti assess suitabl counterparti agre quotat deal complet inbound event system deal record updat outbound event display market inform record deal system action ad model first vision deal support system work dealer agent link deal room structur object describ locat work dealer carri prepar quot use case compos sever action involv trade object figur 3 upper level use case illustr agentinteract show task agent action counterparti deal system dealer head dealer 32 tool support method support version 21 crewssavr tool develop windowsnt platform use microsoft visual c access thu make compat loos integr lead commerci requir manag computeraid softwar engin softwar tool support 6 main function correspond architectur compon shown figur 4 1 increment specif use case highlevel system requir domainus case model support method stage 1 2 automat gener scenario use case scenario gener support stage 3 manual descript use case scenario histor data previou system use altern toolbas automat scenario gener use casescenario author compon support stage 1 4 present scenario support userl walkthrough valid system requir scenario present support stage 4 5 semiautomat valid incomplet incorrect system requir use commonli occur scenario event pattern requir valid support stage 4 crewssavr loos coupl requisitepro requir databas make infer content type structur requir anoth compon guid natur languag author use case specif current develop compon use librari sentenc case pattern eg 14 pars natur languag input semant network prior transform action descript crewssavr use case specif space preclud descript compon paper crewssavr tool permit user develop use case describ project histor system usag use algorithm gener set scenario use case scenario describ sequenc normal abnorm event specifi origin use case tool use set valid frame detect event pattern scenario therebi provid semiautomat critiqu suggest requir impli scenario domain use case model scenario gener scenario present requir validat use case author tool crewssavr tool requisitepro requir manag scenario author tool natur languag descript use case fact scenario fact gener scenario gener scenario scenario valid requir user domain expert use case environ model validat systemenv model user softwar engin figur 4 overview crewssavr tool architectur 33 use case specif user specifi use case use crewssavr domain use case model compon first domain softwar engin specifi action domain defin agent object link action assign type eg commun physic etc action specifi permiss action sequenc use actionlink rule initi domain model user choos subset domain action form normal cours use case enabl user specifi one use case domain henc gener scenario domain result use case act contain domain inform relev current scenario analysi scenario use valid differ part domain futur system differ use case contain differ action descript specifi consequ domain model enabl simpl reus action descript across use case two use case includ action eight type actionlink rule avail crewssavr strict sequenc part sequenc inclus includ b evstartaevstartb evendaevendb concurr rule order event altern parallel equal equalstart startswith b evstartaevstartb evendanotevendb equalend event evx repres point time event occur action defin evstartaevenda evstartbevendb action durat start event action must occur end event action link rule type build basic research tempor semant 2 formal tempor semant calculu realtim tempor logic call core underpin albert ii specif languag 23 current version crewssavr provid allen 2 13 actionlink type rather provid set use usabl semant base practic report use case analysi eg 1 29 deal system domain two action buyer request deal dealer dealer retriev price inform dealersystem select actionlink rule meanwhil indic gener dealer begin retriev price inform buyer begin request deal third action time describ system behaviour dealersystem display price inform dealer link rule specifi strict sequenc two action first action must end second action start part deal system domain model shown figur 5 show subset current domain action shown figur 5 specif attribut new action b current actionlink rule c agent type part domain model outsid scope descript one use case specifi domain deal system use case link one highlevel requir statement system action one system requir use case specif 4 part first part specifi identifi action use case second part specifi actionlink rule link action third part contain objectmap rule need handl use synonym action descript fourth part specifi exceptiontyp link use case describ section 36 figur 5 domain model screen dump 34 check use case specif valid rule check integr relationship specifi section 31 repres tupl format model component1 relationshiptyp model component2 tool check integr use case model ensur conform schema addit tool parameteris check use case varieti way enabl user defin valid properti defin schema valid check carri cluster rule call validationfram compos two part first situat detect structur pattern ie combin compon connect relationship use case second part contain requir present part model detect situat frame use valid consist use case model schema detect potenti problem use case detail section 35 former case frame detect inconsist use case latter case frame detect event pattern scenario suggest appropri gener requir two exampl consist check frame follow check agent connect specif relationship type validationfram detect dyadic compon relationship situat modelcomponentx relationship compon z schema requir compon type compon x mandatori compon type j compon mandatori endvalidationfram exampl user decid check action control least one agent first tool find node compon type agent find node connect agent action final whether involv relationship connect two node correct tool configur input paramet j schema primit relationship k defin schema tool detect untyp incorrect relationship use structur match algorithm prepar quot use case see figur 3 valid check detect dealer control givequot action ii valid whether two compon particip relationship specif properti validationfram detect compon relationship correct properti situat modelcomponentx propertyw relationship z compon properti v schema requir compon type compon x mandatori compon type j compon mandatori compon x properti w mandatori compon properti v mandatori endvalidationfram exampl user wish valid agent link use case properti properti properti vw test enter dialogu combin may test case tool search node type agent test relationship connect agent node relationship connect node type use case tool read properti list use case agent agent author properti use case decis properti warn issu user properti sub type lexic search properti list frame test dealer author use case evalu choic decis properti system configur combin type check set node arc conform schema describ figur 2 motiv creat requir advic evolv increas knowledg domain user impos constraint beyond specifi schema use tool valid use case conform constraint 35 use applic class identifi gener requir stage take first cut use case map correspond abstract applic class essenti associ use case describ new system relat system share abstract librari applic class term object system model osm develop valid previou work comput model analog structur match 34 object system model osm organis 11 famili describ wide varieti applic class famili map case studi applic object suppli inventori control account object transfer financi system object logist messag object sens monitor applic objectag control command control system osm compos set cooper object agent action achiev goal facilit reus system level rather isol gener class take object suppli see appendix exampl osm model gener problem handl transact buyer supplier case studi match purchas secur suppli bank counter parti act buyer supplier give price map dealer prepar quotat essenti osm pattern requir specif rather design solut propos 19 osm repres transact cooper set object model class diagram agent behaviour repres use case annot high level gener requir express design rational diagram separ set gener use case model provid function taskrel aspect applic gener use case caus state chang object agent instanc diagnost use case chang state malfunct agent eg human patient unknown caus understood symptom diagnos gener use case also organis class hierarchi specialis specif use case associ applic current seven famili gener use case describ diagnosi inform search reserv match alloc schedul plan analysi model exampl gener use case inform search compos subgoal articul need formul queri evalu result revis queri necessari deal domain map search background inform compani variou databas evalu compani profit loss figur press releas refin queri narrow search specif compani interest longer descript gener use case associ design rational see 53 specif use case new applic may associ object system model either brows osmus case hierarchi select appropri model appli identif heurist see appendix use semiautom match tool retriev appropri model given small set fact describ new applic 51 heurist point toward osm model associ applic howev identif appropri abstract complex complet descript beyond scope paper stage map use case compon correspond abstract osm identifi gener requir attach osm appli new applic unfortun map problem solut rare one one trade off consid evalu merit differ solut design rational 11 provid represent consid altern design may appli requir problem rais osm nonfunct requir present criteria trade off may judg softwar engin judg gener requir recruit requir specif may add action use case therebi elabor specif case studi secur trade system involv five osm object suppli model secur trade account object transfer model settlement part system payment secur purchas object messag describ commun dealer counterparti osm model sub system support trade object sens detect chang secur price market dealer posit agent control describ relationship head dealer dealer addit osm deal system contain gener use case evalu purchas plan strategi describ dealer decis make reason map domain specif use case evalu deal propos plan trade strategi specif use case prepar quot map gener use case price item associ object suppli osm gener model secur trade system express aggreg osm given figur 6 settlement part system account object transfer osm omit osm object instanti deal system compon cluster gener requir repres design rational associ appropri osm compon bank secur stock client transfer ownedbi move request supplier suppli dealer bank world wire servic signal existin quot chang price head dealer strategi bank world transfer movein trade move sourc destin bank quot make deal prep quot eval trade plan strategi counter parti heldbi deal secur transfer existin price agre eval trade custom request instruct locat gener requir cluster gr design rational 1 check custom prefer limit deal 2 calcul price prepar quotat 3 evalu choic deal 4 sampl chang object properti stock price 5 messag transmiss protocol deal notif 6 messag encrypt deal secur 7 commun command head dealer strategi 8 report complianc strategi obeyedfollow 9 calcul replenishment257 81 object messag osm sub class object logist object sens osm sub class object properti object suppli agent control osm figur 6 aggreg osm match secur deal system repres object orient analysi notat 9 figur 7 design rational high level gener requir cluster 2 3 figur 6 attach evalu choiceand prepar quoteus case instanti requir deriv gener version given bracket function requir could appli support two use case evalu deal prepar quot evalu deal rational taken gener use case evalu choic subclass matchingalloc famili propos three option assess purchas set refer level prioritis sever speed oper 9rvtshvhyrvtd7dtihv dr qvv 6tr gener requir evalu choic deal check option matrix tradeoff constraintbas match rapid respons accuraci sophist choic complexitycost 3 b dcrsrhyvbd bdhqrsswuruyqpurpx design altern justif nonfunct calcul price prepar quot calcul volum valu good posit weight matrix calcul use price file display baselin quot rang price user choic posit justif posit argument neg argument posit purchas option simpl hous qualiti style matrix 22 final use sophist multicriteria decis make algorithm hypertext link rational point reusabl algorithm purpos option prepar quot autom quotat simpl calcul base dealer posit desir stock market movement choos weight matrix techniqu quot accord volum request dealer posit leav quotat manual action simpl display bank baselin quotat sinc first two option may time consum dealer third chosen evalu deal simpl calcul taken option facil leav dealer control two high level gener requir ad requir specif action use case elabor system function 36 scenario gener stage gener one scenario use case specif scenario treat one specif order event order depend time start end event action link rule specifi origin use case enter time option absenc time event algorithm use order inher link rule one scenario gener singl use case actionlink rule strict sequenc ie b space possibl event sequenc larg even within rel simpl use case scenario gener algorithm reduc space first determin legal sequenc action space permiss event sequenc reduc applic actionlink userconstraint user enter constraint specifi agent action consid scenario gener process thu restrict permiss event sequenc sequenc es includ event ev start action involv predefin agent ag least given probabl uc evstarta es ev start exampl gener scenario must includ event start action 20 must involv agent dealer action 20 must least 10 likelihood occurr accord probabl calcul inform use case specif prepar quot use case definit lead 3 possibl scenario shown figur 8 differ time event e40 end action 40 whether action 40 action 45 occur depict ignor applic constraint likelihood event sequenc occur scenario1 2 differ time event e40 end request price inform dealersystem scenario3 describ differ event sequenc dealer unabl offer quot deal event event buyer request quot event s50 event e50 dealer system show price time event event e40 event event event event e40 event s50 event e50 event event event event e40 event s50 event e50 part use case gener event event e20 dealer pick event event e20 event event e20 event e40 dealer retriev price event s60 event event e45 dealer refus deal event event event event e45 event event e20 figur 8 diagram illustr 3 normal scenario path gener use case fragment gener mechan two stage first gener permiss normal cours scenario action link rule use case identifi altern path normal sequenc except type summaris tabl divid two group first abnorm event drawn hollnagel 24 event phenotyp classif secondli inform abnorm refer messag contentseg inform incorrect outofd etc follow valid concept propos jackson 27 except associ one gener requir propos high level solut problem except type present whatif question softwar engin choos probabl appropri altern path action step scenario tabl summari except type event origin system gener requir deal abnorm pattern except gener requir event happen omit timeout request resend set default event happen twice iter discard extra event diagnos duplic event happen wrong order buffer process earli halt wait late send remind check task event expect valid vs event set discard invalid event inform incorrect type request resend prompt correct type incorrect inform valu check vs type request resend prompt diagnosi inform late date check data integr datetim check use default inform detail appli filter post process sortgroup inform gener request detail add detail altern sourc set rule constrain gener altern cours scenario use action agent type rule part extens set augment use agent type influenc factor describ two exampl rule ev1 start ac1 ev1 end ac1 ac1typecognit extypehuman appliesto ev1 ensur human except type influenc factor see next section appli cognit action event ev1 action ac1 except type ex ev1 start ac1 ev1 end ac1 ac1typecommun ac1 involv ag1 ag1typemachin ac1 involv ag2 ag2typemachin extypemachinemachinecommun appliesto ev1 ensur machinemachin commun failur appli commun action agent type machin event ev1 action ac1 agent ag1 ag2 except type ex rule identifi particular type failur may occur differ agenttyp combin gener requir propos remedi problem instanc first rule human cognit error appli action1 counteract improv train aid memoir facil eg checklist help system second rule detect network commun error gener requir suggest fault toler design sand backup commun algorithm gener set possibl altern path accord agentact combin use case model allow user select probabl abnorm pathway accord knowledg domain help softwar engin anticip except may occur assign probabl abnorm event set influenc factor propos describ necessari precondit event except happen sub divid 5 group accord agent involv human agent influenc factor give rise user error except deriv cognit scienc research human error 42 norman model slip 37 rasmussen three level humantask mismatch 41 howev human error adequ describ cognit factor includ perform affect properti motiv sick fatigu age base previou research safeti critic system 49 machin agent failur caus hardwar softwar eg power suppli problem softwar crash etc humanmachin interact poor user interfac design lead except inputoutput oper group draw taxonomi interact failur humancomput interact 46 consequ poor user interfac design eg humanhuman commun scenario often involv one human agent commun breakdown peopl import consequ except deriv theori computersupport collabor work 46 exampl includ commun breakdown misunderstand machinemachin commun scenario often involv machin agent except specif commun also give rise altern path interact influenc factor give rise human error describ figur 9 four outer group factor work condit manag taskdomain personnel qualiti effect four inner factor fatigu stress workload motiv turn effect probabl human error manifest event except type humanmachin action human action human error caus environ factor qualiti design two outer group ad personnelus qualiti causal influenc human oper error wherea system properti either treat causal explan error view gener user interfac requir prevent error requir deal problem pose influenc factor deriv sever sourc literatur eg task design train 3 workplac ergonom 45 human comput interfac design 46 47 standard eg iso 9241 25 ultim model event causal complex moreov effort may warrant nonsafeti critic system three approach offer first use influenc factor paperbas tool thought second factor implement hypertext travers explor contextu issu may lead error henc gener requir deal problem howev mani variabl interact eg high stress increas fatigu final mani combin influenc factor possibl domain requir particular model henc provid gener model tool instanti domain specif inform tool allow influenc factor enter rate five point scale eg high task low calcul event probabl rate combin factor rate user control factor describ figur 9 may enter tool simpl weight perform sensit analys set default formula interfactor weight provid choic depend user knowledg domain tool indic error probabl given use defin subset influenc factor type except difficult predict ie mistak may like whether manifest event omit wrong order unpredict reliabl predict made new altern path rule see ad system tool configur valid rule ad system evolv increas knowledg domain current rule provid baselin set recommend gener requir certain type agent eg untrain novic need context sensit help undo facil wherea expert requir short cut abil build macro influenc factor may use agent use case properti valid use frame describ section 34 37 scenario valid crewssavr looselycoupl ration requisitepro requir manag tool enabl scenariobas valid requir store requisitepro data base crewssavr either present scenario user alongsid requir document enabl userl walkthrough valid system requir enabl semiautomat valid requir applic pattern match algorithm scenario approach examin turn figur show userl walkthrough part one scenario deal system use case requisitepro requir document valid lefthand side screen show normal cours scenario sequenc event righthand side altern cours gener except gener automat requir engin earlier select except type select event tool advis requir engin decid whether altern cours relev b handl requir specif user decid altern cours relev handl requir specif retriev crewssavr one candid gener requir instanti add requir document except type crewssavr data base link one gener requir describ solut mitig avoid except thu crewssavr provid specif advic userl scenario walkthrough figur 9 influenc factor except interrelationship urfrhr gvtuvt ivr xxfyhpr qrqvphivyv wyr whvr hyvhxvt fyrqtr frvrpr brrhy6fvqr uhvvt qbvqhpr ghpx rphtrr qqvpvfyvr qxqrvt cvqqrapvhyv hvvtsrrqihpx hvyrhqvtsrrqihpx qfrqvphivyv qrffyshvyr 9vpr chqhrshvyr ahvtr 8tvvooor shp vprhr consid exampl shown figur 10 user explor normal cours event 90 start commun action dealer enter deal inform dealer system shown figur 10 altern cours gac6 inform suspect b user brows candid gener requir c copi past requir system shall crossrefer inform inform sourc ensur integr requisitepro requir document figur also show current hierarch structur requir held requisitepro data base e figur valid frame ad gener requir second approach automat crosscheck requir document scenario use collect pattern encapsul good sociotechn system design requir specif operationalis crewssavr tool appli one valid frame event event pattern userselect scenario determin miss incorrect system requir valid frame specifi pattern action event system requir extend kao goal pattern 12 describ impact differ goal type set possibl system behaviour valid frame two part first defin situat pattern event action express form identifi actiontyp agenttyp agenttyp involv action event express identifi eventtyp action identifi event type defin whether event start end action second part frame defin gener requir need handl eventact pattern frame start ps055 standard 35 type requir perform usabl interfac oper time resourc verif accept test document secur portabl qualiti reliabl maintain safeti requir henc automat requirementsscenario crosscheck possibl use pattern event agent action type scenario requir type requir document exampl valid frame validationfram detect period system inact situat agentagcmachin consecutiveagcevaevb requir requirementperform option link requirementfunct timeoutresend option link endvalidationfram frame detect absenc repli event set time period human agent implicitli signal requir ask resend set time instanti requir request price enter dealer within second access prepar quot option except deal inbound event delay time longer preset limit ie system use period tool recommend reusabl gener requir exampl warn user logout user certain period time valid frame altern cours event provid gener requir handl event except ev link event ev follow validationfram situat agentagamachin requir requirementfunct mandatori link system shall check data entri mistak system shall restrict possibl data entri endvalidationfram attent failur possibl enter dealer inform tool propos gener requir requir engin choos requir gr1 system shall check data entri mistak figur 11 requir engin examin event s90 dealer enter deal inform dealersystem causal influenc factor agent pay poor attent detail b valid frame detect need function requir handl altern link event s90 result user abl add new requir requir document handl altern cours figur valid frame except final tool use valid frame appli osmspecif gener requir similar manner section 34 high level gener requir recruit design rational trade off wherea frame use detect osm specif pattern scenario detail requir indic computeris deal system instanti object suppli object messag agentobject control system model consid valid frame link send commun action object messag system model situat scenario specifi event start commun action involv machin agent match one action object messag osm ie send return messag situat valid frame identifi least 5 gener system requir validationfram comment gener requir send action object messag osm situat agentagamachin requir requirementfunct mandatori link genericrequirementgom1 system shall support identificationretriev receiv agent address system shall enabl user enter receiv agent system shall enabl user enter content messag system shall enabl user send compos messag receiv agent system shall maintain senderag log messag sent receiv senderag endvalidationfram exampl valid frame applic event start action buyer request quot dealer gener requir applic computeris support action whether action undertaken telephon email exampl retriev receiv agent telephon number email address maintain sender log telephon call email messag gener requir instanti ad requir specif 4 discuss contribut report paper threefold first extens reus requir knowledg empow via decis model gener requir secondli mean semiautomat requir valid provid via frame frame extend type check recognis pattern agent behaviour appropri valid question possibl design solut may appli third describ use scenario test pathway simul novel tool support semiautomat scenario gener current statu develop scenario generatorvalid tool implement industri trial commenc clearli coverag term number valid frame gener requir contain tool databas key issu effect util approach approach eclect depend knowledg literatur ergonom human resourc manag user interfac design contribut made implement integr knowledg extens architectur advic current contain retriev valid frame provid requir knowledg summari level although may criticis lack suffici detail initi industri reaction tool encourag particular valu rais design issu address current method eg dsdm 15 far demonstr proof concept term oper follow test util within small scale industri realist applic mani sens strength method propos lie integr previou idea brought concept safeti critic system assess 24 42 bear requir analysi integr scenario base approach acknowledg heritag inquiri cycl 39 howev research contribut advanc method support tool give comprehens guidanc solv problem specif requir deal explicitli implic human error novel contribut broken ground beyond previou approach 30 16 furthermor influenc factor bear caus potenti error use heurist stimul debat mani higher level requir issu task workplac design howev acknowledg difficult provid prescript guidanc heurist may contend formalis analyt heurist captur wealth possibl caus error differ domain answer heurist better none point method increment grow experi failur formalis knowledg hinder part scenario base method report paper relat enterpris model approach yu mylopoulo 54 chung 7 creat model system immedi environ use similar semant trace depend agent goal task limit reason support tradeoff function requir nonfunct requir refer soft goal howev method contain detail event depend analysi report scenario use assess impact technic system sever author 6 30 16 howev report give littl prescript guidanc analysi practition left exampl case studi gener lesson extract instanc ordit method 16 give limit heurist advis check agent role alloc fall far short comprehens guidanc propos depend system environ analys detail jackson zave 28 point input event impos oblig requir system propos formal model depend formal model applic class system implicitli analys eg real time safeti critic applic less clear model deal uncertainti human behaviour deal uncertainti human comput interact believ scenario base approach appropri focus elicit requir repair problem caus unreli human behaviour anoth approach kao specif languag associ grail tool 32 33 formal model refin goalori requir constraint base specif van lamsweerd et al 33 also adopt problem obstacl inquiri cycl 39 furthermor also employ failur concept safeti critic literatur similar manner crewssavr approach anchor goall requir refin use scenario explicitli contrast crewssavr cover wider rang issu kao less formal rigour repres tradeoff model effort coverag formal reason far method partial dealt non function requir scenario could express quantifi term instanc goal questionmetr approach basili et al 4 boehm 5 qualityproperti model scenario sens contain contextu inform repres rich pictur system environ 29 descript could structur includ inform relat nf goal investig metric benchmark test achiev goal valid frame may extend assess rich pictur scenario non function function requir instanc inbound outbound event involv human agent mediat user interfac usabl criteria could attach event pattern design guidelin eg iso 9241 25 perform requir could assess check volum tempor distribut event system requir elabor scenario base approach cover non function requir part ongo research 52 spite advanc scenario base may offer still demonstr effect practic evid approach effect empir studi earlier version method use scenario without support tool 50 valid industri case studi progress acknowledg research fund european commiss esprit 21903 long term research project crew cooper requir engin scenario project partner includ rwthaachen project coordin citi univers london univers pari franc fundp univers namur belgium r object orient analysi dynam system develop method dsdm version 30 analysi pattern reusabl object model design pattern element reusabl objectori softwar iso 9241 human factor engin design human comput interfac design scenariobas analysi nonfunct requir tr ctr lin liu eric yu design inform system social context goal scenario model approach inform system v29 n2 p187203 april 2004 norbert seyff paul grunbach neil maiden amit tosar requir engin tool go mobil proceed 26th intern confer softwar engin p713714 may 2328 2004 stan jarzabek wai chun ong hongyu zhang handl variant requir domain model journal system softwar v68 n3 p171182 15 decemb john van der poll paula kotz ahm seffah thiruvengadam radhakrishnan asmaa alsumait combin ucm formal method repres check valid scenario user requir proceed annual research confer south african institut comput scientist inform technologist enabl technolog p5968 septemb 1719 zhang dan xie wei zou view use case activ object acm sigsoft softwar engin note v26 n2 march 2001 sebastian uchitel greg brunet marsha chechik behaviour model synthesi properti scenario proceed 29th intern confer softwar engin p3443 may 2026 2007 emmanuel letier jeff kramer jeff mage sebastian uchitel monitor control scenariobas requir analysi proceed 27th intern confer softwar engin may 1521 2005 st loui mo usa dalal alrajeh alessandra russo sebastian uchitel infer oper requir scenario goal model use induct learn proceed 2006 intern workshop scenario state machin model algorithm tool may 2727 2006 shanghai china nico lass daan rijsenbrij han van vliet well predict chang architectur design time journal system softwar v65 n2 p141153 15 februari giusepp della penna benedetto intrigila anna rita laurenzi sergio orefic xml environ scenario base requir engin journal system softwar v79 n3 p379403 march 2006 julia gallier alistair sutcliff shailey minocha impact analysi method safetycrit user interfac design acm transact computerhuman interact tochi v6 n4 p341369 dec 1999 perolof bengtsson nico lass jan bosch han van vliet architecturelevel modifi analysi alma journal system softwar v69 n12 p129147 01 januari 2004 sascha konrad betti h c cheng laura campbel object analysi pattern embed system ieee transact softwar engin v30 n12 p970992 decemb 2004 idri hsi measur conceptu fit applic comput ecosystem proceed 2004 acm workshop interdisciplinari softwar engin research novemb 0505 2004 newport beach ca usa andrea gregoriad alistair sutcliff scenariobas assess nonfunct requir ieee transact softwar engin v31 n5 p392409 may 2005 colett rolland naveen prakash conceptu model requir engin annal softwar engin v10 n14 p151176 2000 alistair sutcliff effect use reus hci knowledg acm transact computerhuman interact tochi v7 n2 p197221 june 2000 axel van lamsweerd emmanuel letier handl obstacl goalori requir engin ieee transact softwar engin v26 n10 p9781005 octob 2000 robb klashner sameh sabet dss design model complex problem lesson mission critic infrastructur decis support system v43 n3 p9901013 april 2007 marco andr gonalv edward fox layn watson neill kipp stream structur space scenario societi 5s formal model digit librari acm transact inform system toi v22 n2 p270312 april 2004 n robinson suzann pawlowski vecheslav volkov requir interact manag acm comput survey csur v35 n2 p132190 june