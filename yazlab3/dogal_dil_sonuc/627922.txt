perform analysi three textjoin algorithm abstractwhen multidatabas system contain textual databas system ie inform retriev system queri global schema multidatabas system may contain new type joinsjoin attribut textual type three algorithm process type join present io cost analyz paper sinc type join often involv document collect larg size import find effici algorithm process three algorithm differ whether document invert file document use process join analysi simul result indic rel perform algorithm depend input document collect system characterist input queri algorithm type input document collect algorithm like perform well identifi integr algorithm automat select best algorithm use also propos b introduct research multidatabas system intensifi recent year 4 5 9 13 12 16 19 paper consid multidatabas system contain local system manag structur data eg relat dbss local system manag unstructur data eg inform retriev ir system handl text global schema multidatabas system integr local databas schema provid overal pictur sharabl data local system global queri languag use specifi queri global schema refer global queri thereaft retriev data repres global schema exampl global schema relat data model sql use global queri languag sinc multidatabas system consid paper contain 1 depart comput scienc state univers new york binghamton binghamton ny 139026000 email mengcsbinghamtonedu 2 depart electr engin comput scienc univers illinoi chicago chicago il 60607 email yueecsuicedu 3 comput scienc depart ucla lo angel ca 90024 email weiwangcsuclaedu 4 school comput scienc florida intern univers miami fl 33199 email rishenfiuedu compon relat compon global queri languag must capabl accommod structur data unstructur data sqlbase queri languag serv purpos propos 1 paper extend featur languag specifi queri databas frontend global user may submit queri contain join attribut textual type motiv exampl present section 2 like join compar textual attribut similar match object similar textual content base similar function sinc textual object essenti document join pair similar document among two document collect correspond two textual attribut although type compar textual attribut may exist similar oper key oper textual data therefor concentr oper paper process join nontextu attribut studi extens much research report process join textual attribut literatur 6 author report case studi autom assign submit paper review report studi requir match abstract submit paper number profil potenti review problem essenti process join two textual attribut sinc document collect involv small effici process strategi join concern instead emphasi work accuraci autom match somewhat relat problem consecut retriev problem 7 17 determin given set queri q set record r whether exist organ record queri q relev record loos similar record store consecut storag locat interpret q r two document collect consecut retriev problem deal storag aspect effici retriev relev document one collect document anoth collect howev major differ consecut retriev problem join process problem former assum knowledg document r relev document q latter need find document one collect similar document anoth collect anoth relat problem process set queri document collect batch sever differ batch queri problem join problem 1 former mani statist queri import queri process optim frequenc term queri avail unless collect explicitli unlik sinc batch may need process unlik cost effect collect statist 2 special data structur commonli associ document collect invert file unlik avail batch reason given see paper avail invert file mean applic certain algorithm cluster problem ir system 14 requir find document document similar document collect consid special case join problem describ two document collect involv join ident straightforward way exist process join textual attribut multidatabas environ ment method describ follow treat document one collect queri process queri collect independ find similar document howev method extrem expens sinc either document one two collect search invert file collect util process document collect exampl consid smart system 3 develop cornel univers smart system use invert file process user queri collect whose document use queri larg number document use invert file collect process queri independ easili incur cost sever order magnitud higher better join algorithm see section 6 therefor import develop effici algorithm process join textual attribut paper follow contribut 1 present analyz three algorithm process join attribut textual type 2 cost function base io cost algorithm provid 3 simul done compar perform propos algorithm investig indic one algorithm definit better algorithm circumst word algorithm uniqu valu differ situat 4 provid insight type input document collect algorithm like perform well give algorithm determin one three algorithm use process textjoin awar similar studi report rest paper organ follow motiv exampl present section 2 section 3 includ assumpt notat need paper three join algorithm introduc section 4 cost analys comparison three algorithm present section 5 section 6 simul carri compar propos algorithm suggest algorithm use particular situat integr algorithm automat select best algorithm use also includ section conclud discuss section 7 motiv exampl assum follow two global relat obtain schema integr applicantsssn name resum positionsp titl job descr relat applic contain inform applic job posit relat posit resum job descr type text consid queri find posit applic whose resum similar posit descript queri express extend sql follow select pp ptitl assn anam posit p applic aresum similar pjob descr whereclaus queri contain join attribut textual type type join appear tradit databas system note aresum similar pjob descr pjob descr similar aresum differ semant former find resum job descript latter find job descript resum job descript list output former howev job descript may list output latter among similar job descript resum later see asymmetri oper similar impact evalu strategi import differ join relat databas system join two textual attribut consid relat join r1a r2a compar given tupl t1 r1 tupl t2 r2 t1a t2a true immedi know t1 t2 satisfi join howev given resum r given job descript j way us know immedi whether r similar j true sinc sure r among resum similar j resum consid process join compar job descript resum job descript compar resum resum similar identifi partial result produc howev process join compar resum job descript resum compar job descript partial result gener case mani intermedi result ie similar valu resum job descript need maintain main memori observ indic compar job descript resum natur way process textual join due select condit attribut relat contain textual attribut possibl subset set document collect need particip join exampl consid queri find posit whose titl contain engin applic whose resum similar posit descript select pp ptitl assn anam posit p applic ptitl like engin aresum similar pjob descr select ptitl like engin evalu first job descript whose posit titl contain engin need particip join paper interest studi algorithm use process follow queri select r1x1 r2y2 r1 r1c1 similar r2c2 c1 c2 attribut repres two document collect collect 1 collect 2 respec tive clearli join evalu form c1 similar c2 impact select also address 3 assumpt notat use vector represent 14 document repres list term togeth number occurr document term associ weight indic import term document usual term identifi number save space assum document consist list cell form w call documentcel dcell term number w number occurr term document dcell document order ascend term number size dcell jtj number byte contain x practic suffici multidatabas environ differ number may use repres term differ local ir system due local autonomi sever method may use overcom problem one method use actual term rather term number disadvantag size document collect becom much larger anoth method establish map correspond number identifi term map structur usual tabl two column store main memori substanti degrad perform assum approxim 150 page size 4kb need map structur accommod 100000 distinct term sinc total size map structur less 1mb like map structur held memori attract method standard map term term number local ir system use map standard benefici improv perform multidatabas system save commun cost actual term need transfer process cost effici compar number compar actual term need search map tabl simplifi present assum number alway use repres term local ir system note assumpt simul alway keep map structur memori differ number use repres term differ local system remain discuss term term number use interchang common term document d1 d2 let u un number occurr term d1 d2 respect similar d1 defin realist similar function divid similar norm document incorpor use invers document frequenc weight 14 assign higher weight term occur fewer document normal carri precomput norm document store perform divis process document invers document frequenc weight precomput term store part list head invert file sake simplic present use number occurr instead weight given term given document collect c invert file entri consist list icel short invertedfilecel form w document number w number occurr document number assum icel invert file entri order ascend document number size icel jdj jwj icel dcell approxim size use follow notat discuss number document collect size avail memori buffer page number term collect size btree collect page assum tightli pack ie space left unus page except possibl last page probabl term collect c1 also appear collect c2 q probabl term collect c2 also appear collect c1 ff cost ratio random io sequenti io byte 4kb averag number term document collect averag size invert file entri collect page 5 k n p size invert file collect page j assum tightli pack averag size document collect page 5 k size collect page n assum tightli pack invert file entri term collect oper similar use fraction similar nonzero assum document collect store consecut storag locat therefor document collect scan storag order total number page read also total io cost hand document collect read one time random order document kept memori process total number page read approxim n ds e total cost approxim n ds e ff dxe denot ceil x ff cost ratio random io sequenti io due addit seek rotat delay random read similarli assum invert file entri collect store consecut storag locat ascend term number typic dj e page read invert file entri brought memori random order note given document collect document number term number size total size total size correspond invert file paper io cost use analyz compar differ algorithm central environ io cost domin cpu cost cost analysi comparison distribut environ conduct futur algorithm section present three algorithm process join textual attribut algorithm analyz compar next two section assum exist invert file document collect depend document andor invert file use evalu join three basic algorithm construct first algorithm use document process join second algorithm use document one collect invert file anoth collect evalu join third algorithm use invert file collect job collect document repres documentterm matrix row document column term invert file entri term therefor name first algorithm horizontalhorizont nest loop hhnl second algorithm horizontalvert nest loop hvnl third algorithm verticalvert merg vvm 41 algorithm hhnl straightforward way evalu join compar document one collect everi document collect although simpl method sever attract properti first one two collect reduc select condit remain document need consid second document gener read sequenti result sequenti io discuss section 2 know natur process join compar document c2 document c1 natur use c2 outer collect c1 inner collect join evalu call order forward order revers order backward order backward order effici c1 much smaller c2 consid forward order first adopt polici let outer collect use much memori space possibl case let inner collect use much memori space possibl equival backward order discuss later memori alloc polici algorithm hhnl describ follow read next x document c2 main memori integ x determin scan document c1 document c1 memori comput similar document everi document c2 current memori document d2 c2 keep track document c1 process d2 largest similar d2 rigor c2 outer collect need reserv space accommod least one document c1 ds 1 e page memori need reserv c1 also need reserv space save similar document c2 current memori assum similar valu occupi 4 byte number document c2 held memori buffer size b estim size page byte present algorithm hhnl document c2 read fif unprocess document c2 left input next x1 unprocess document c2 main memori els input remain unprocess document c2 main memori unprocess d2 c2 memori document d1 c1 fcomput similar d2 d1 greater smallest largest similar comput far d2 freplac smallest largest similar new similar updat list document c1 keep track document largest similar d2 larg heap structur use find smallest largest similar algorithm consid backward order c1 use outer collect evalu join c2 scan set document c1 current memori let d1 first document c1 read memori c2 scan n 2 similar d1 everi document c2 comput sinc document c2 need find document c1 similar need keep track document c1 largest similar document c2 mean need keep track n 2 similar backward order evalu word need memori space size 4 n 2 p keep similar compar forward order requir 4 x1p page keep track need similar memori space need save similar backward order advers impact perform backward order result forward order like perform better backward order two document collect size howev c1 much smaller c2 backward order still outperform forward order exampl c1 entir held memori one scan collect need process join backward order matter larg c2 42 algorithm hvnl algorithm use document one collect invert file collect comput similar inform retriev system process user queri consid document find document system similar user queri one way process queri compar document system method requir almost nonzero entri documentterm matrix access effici way use invert file document collect process queri method use smart system 3 advantag method need access nonzero entri column documentterm matrix correspond term queri sinc number term queri usual small fraction total number term document system invert file base method access small portion documentterm matrix algorithm hvnl straightforward extens method situat need find similar document one collect everi document anoth collect process use invert file comput similar document c2 document c1 describ follow let w next dcell consid let invert file entri correspond c1 fd 1 w 1 n wn g document number process similar document accumul far u accumul similar consid w w contribut due share term i1n term process similar document c1 comput document c1 similar identifi note last dcell process intermedi similar document c1 need save amount memori need purpos proport n 1 analysi reveal use invert file c2 process join need memori space store intermedi similar amount proport n 2 practic nonzero similar need save use ffi denot fraction similar nonzero straightforward way process join go process document c2 independ read document c2 turn memori read invert file entri c1 correspond term process note term necessarili appear c1 problem straightforward method lack coordin process differ document c2 result term appear k document c2 invert file entri term assum also appear c1 c1 read k time algorithm hvnl design reus invert file entri read memori process earlier document process later document save io cost due space limit usual invert file entri read earlier kept memori therefor algorithm also need polici replac invert file entri memori new invert file entri let frequenc term collect number document contain term known document frequenc document frequenc store similar comput ir system extra effort need get replac polici choos invert file entri whose correspond term lowest frequenc c2 replac reduc possibl replac invert file entri reus futur make best use invert file entri current memori new document d1 c2 process term d1 whose correspond invert file entri alreadi memori consid first mean newli read document scan twice memori first scan find term whose correspond invert file entri alreadi memori second scan process term list contain term whose correspond invert file entri memori maintain note invert file entri read earlier kept memori still possibl read invert file entri one time note also worst case scenario algorithm hvnl document c2 consider none correspond invert file entri current memori case algorithm hvnl deterior straightforward method present algorithm hvnl document c2 ffor term also appear c1 invert file entri c1 1 memori accumul similar term also appear c1 fif invert file entri c1 1 memori avail memori space accommod tread els find invert file entri memori lowest document frequenc replac accumul similar find document c1 largest similar invert file btree use find whether term collect present correspond invert file entri locat one possibl way improv algorithm improv select next document process intuit alway choos unprocess document c2 whose term correspond invert file entri c1 largest intersect invert file entri alreadi memori next document process likelihood invert file entri alreadi memori reus increas exampl consid three document three term t5g suppos term smaller subscript lower document frequenc suppos memori buffer larg enough hold three invert file entri d1 d2 d3 process given order invert file entri need read exactli howev process order d1 d3 d2 invert file entri correspond t2 read twice invert file entri read exactli clearli exampl order fd1 d2 d3g better order fd1 d3 d2g order optim incur minimum io cost question optim order found effici unfortun shown proposit problem find optim order nphard proposit problem find optim order document c2 best perform achiev nphard proof shown 11 follow problem known optim batch integr assert verif obiav find optim order verifi set integr constraint verifi constraint requir set page brought secondari storag memori nphard problem seen optim order problem case essenti optim order problem obiav follow correspond two problem easili establish process document c2 correspond verifi integr constraint need read set invert file entri process document c2 correspond need bring set page verifi integr constraint invert file entri read process one document may use process anoth document correspond page brought verifi one integr constraint may use verifi anoth integr constraint therefor optim order problem case also nphard decid pursu issu find optim order addit nphard natur anoth problem associ optim order read document order rather storag order expens random io incur 43 algorithm vvm algorithm vvm use invert file collect comput similar strength algorithm need scan invert file comput similar everi pair document two collect regardless size two collect provid memori space larg enough accommod intermedi similar valu case algorithm vvm least good algorithm hhnl algorithm hhnl need scan document collect least size invert file collect size collect algorithm vvm tri comput similar everi pair document two collect simultan result need save intermedi similar thu memori requir save similar proport n 1 n 2 independ number term document larg algorithm vvm run summari algorithm vvm like perform well document collect larg size none entir held small number document possibl document larg size anoth situat algorithm vvm may well vocabulari two document collect differ exampl one collect medicin comput scienc case number nonzero similar document two collect like small algorithm vvm describ follow scan invert file two collect parallel scan two invert file entri correspond term invok similar accumul process recal assum invert file entri store ascend term number therefor one scan invert file suffici much like merg phase merg sort similar accumul process describ follow let um g two invert file entri term two collect respect two invert file entri process similar document r p q accumul far u pq u p v q u pq accumul similar r p q consid extend algorithm vvm follow tackl problem insuffici memori space intermedi similar suppos sm total number page need store intermedi similar pair document two collect consid time suppos avail memori space store intermedi similar sm divid collect c2 dsmme subcollect comput similar document subcollect document c1 one subcollect time sinc subcollect one scan origin invert file collect need extens incur cost dsmme time higher memori larg enough hold intermedi similar detail cost analysi see section 53 5 io cost analysi section provid analysi io cost algorithm present section 4 51 algorithm hhnl let x number document c2 held memori buffer size b defin section 41 sinc x document c2 c1 need scan total io cost hhnl estim first term cost scan c2 second term cost scan c1 dn 2 xe number time c1 need scan cost formula assum io sequenti io ie c1 c2 sequenti scan reason document collect read dedic drive littl interfer io request case io may becom costli random io first consid case n 2 x follow interleav io cpu pattern observ x document c2 read document c1 read cpu take time comput similar x document cpu comput io resourc may alloc job case next document c1 use random io readin next x document c2 word worst case document c1 read use random io everi x document c2 random io number actual random io scan document c1 also depend document size estim minfd 1 use otherwis n 1 use therefor n 2 x worst scenario total io cost estim follow entir collect c2 scan sequenti held memori remain memori space use hold document c1 therefor c1 read dd 1 block block read sequenti case 52 algorithm hvnl recal btree maintain document collect quickli locat invert file entri given term size btree estim follow typic cell btree occupi 9 byte 3 term number 4 address 2 document frequenc document collect n term size btree approxim 9np leaf node consid size terribl larg exampl document collect 100000 distinct term btree take 220 page size 4kb assum entir btree read memori invert file need access incur onetim cost read btree let x number invert file entri c1 held memori memori buffer fulli use addit x invert file entri memori size b also need contain document c2 size ds 2 e btree size bt 1 nonzero similar valu document c2 current process document c1 list contain term whose correspond invert file entri main memori size xjtjp therefor x estim follow c assum readin document c2 incur sequenti io io cost hvnl estim follow first case correspond case x greater equal total number invert file entri c1 ie 1 case either read entir invert file c1 sequenti order correspond first express minfg read invert file entri need process queri number 2 q random order correspond second express minfg memori larg enough sinc x second case correspond case memori larg enough hold invert file entri c1 larg enough hold necessari invert file entri last express case memori larg enough hold need invert file entri c1 case second term cost find read invert file entri c1 correspond term document c2 memori fulli occupi suppos memori larg enough hold invert file entri c1 correspond term first document c2 fraction x1 invert file entri correspond term sth document c2 ie invert file entri c1 correspond term first document c2 held memori let number new invert file entri need read new document c2 process memori fulli occupi third term total cost read new invert file entri process remain document c2 discuss x1 estim first number distinct term document c2 estim therefor smallest satisfi q fm x note x gamma q fs gamma 1 number invert file entri still held memori invert file entri c1 correspond term first document c2 read q number new invert file entri need read sth document c2 process x1 estim final estim q fs discuss section 51 possibl io read document c2 random io due oblig io devic invert file entri accommod still memori space left remain memori space use sequenti scan multipl document c2 time base observ random io consid total io cost hvnl estim would easier understand formula compar formula comput hv first express minfg remain memori space invert file entri accommod slight modif similar accumul c1 use outer collect process queri case memori space need store intermedi similar 4ffin 2 p cost backward order estim way case forward order 53 algorithm vvm avoid much higher cost random io simpli scan invert file two collect parallel scan two invert file entri correspond term invok similar accumul process recal assum invert file entri store ascend term number therefor one scan invert file suffici comput similar memori larg enough accommod intermedi similar therefor io sequenti io total io cost algorithm vvm io could actual random io due oblig io devic worst case scenario ie io random io total io cost algorithm vvm estim algorithm vvm usual requir larg memori space save intermedi similar valu nonzero similar store memori space store intermedi similar valu algorithm vvm 4ffi n 1 n 2 p memori space larg enough accommod intermedi similar valu simpl extens algorithm vvm made see section 43 case total cost estim multipli vv vvr dsmme total number page need store intermedi similar pair document two collect consid time e avail memori space store intermedi similar therefor gener formula estim total io cost io sequenti io given gener formula estim total io cost io random io 54 comparison algorithm hhnl use two document collect input two document collect need scan least constitut lower bound io cost algorithm algorithm hhnl use special data structur invert file btree thu easili applic easier implement sinc algorithm hhnl use document directli similar comput benefit quit natur possibl reduct number document either one collect result evalu select condit nontextu attribut relev relat memori space requir algorithm store intermedi similar valu gener small compar algorithm algorithm hvnl use one document collect one invert file btree correspond inner collect input document collect alway scan access invert file entri complex one hand invert file entri need read fact invert file entri whose correspond term also appear document collect need access hand invert file entri may read mani time due appear multipl document c2 although effort made algorithm reus invert file entri current memori expect algorithm competit one follow two situat 1 one document collect say c2 much smaller collect case like small fraction invert file entri invert file need access mean small portion documentterm matrix correspond c1 access case contrast algorithm hhnl use entir matrix need access least even c2 held entir memori c2 contain one document situat becom extrem case process singl queri document collect mention use invert file process singl queri shown ir superior use document directli note origin larg document collect may becom small condit attribut relev relat evalu 2 collect document use close document storag order share mani term nonclos document share term increas possibl reus invert file entri memori reduc possibl reread invert file entri could happen document collect cluster algorithm hvnl access invert file entri random order two neg effect io cost one random io expens sequenti io even invert file entri occupi small fraction page whole page contain entri read word e size invert file entri need read dee even e small say 01 therefor size invert file entri close integ competit algorithm hvnl increas algorithm hvnl use primarili two data structur one invert file btree term one disadvantag use invert file size file remain even number document correspond document collect reduc select unless construct anoth invert file reduc set highli unlik due cost involv memori space requir algorithm hvnl store intermedi similar higher algorithm hhnl lower algorithm vvm algorithm vvm use two invert file input discuss algorithm nice onescan properti name need scan invert file comput similar regardless size two collect provid memori space larg enough accommod intermedi similar valu memori space larg enough accommod intermedi similar valu algorithm vvm least effici algorithm hhnl far io cost concern major drawback algorithm vvm need larg memori space save intermedi similar two situat algorithm vvm like perform well first document collect larg size small number document second vocabulari two document collect differ two situat number nonzero similar document two collect like small anoth disadvantag algorithm vvm size invert file remain even number document correspond document collect reduc 6 simul result due larg number paramet cost formula algorithm present difficult compar perform algorithm base formula directli section algorithm compar base simul result comput cost formula deriv section 5 object identifi impact variat paramet algorithm word would like find situat algorithm perform best statist three document collect collect arpanist 8 name wsj wall street journal fr feder regist doe depart energi use simul statist collect shown tabl 1 last three row estim us base among three document collect fr fewer larger document doe smaller document number document wsj lie fr doe averag size document wsj simul page size p fix 4kb fraction similar nonzero ffi fix 01 fix 20 note algorithm hhnl backward order algorithm involv none realli sensit larg say hundr probabl q comput follow wsj fr doe document 98736 26207 226087 term per doc 329 1017 89 total distinct term 156298 126258 186225 collect size page 40605 33315 25152 avg size document 041 127 0111 avg size inv fi en 026 0264 0135 tabl 1 statist inform sever document collect formula say given number distinct term c2 ie 2 smaller number distinct term c1 1 smaller probabl term c2 also appear c1 much larger 2 q becom closer 1 otherwis q 08 probabl p comput similar manner paramet b memori size ff assign base valu impact paramet studi vari valu paramet let paramet use base valu present follow five group simul result group 1 group real collect use collect c1 collect c2 sinc three real collect wsj fr doe two paramet b ff six simul result collect group 2 group differ real collect use c1 c2 b vari ff use base valu three real collect six simul design group 3 group c1 c2 continu use real collect small number document c2 use particip join experi use investig impact local select simul group use base valu two paramet sinc three real collect three simul result collect group group 4 group c1 continu use real collect c2 collect small number document differ group 3 group 4 former use small number document c2 origin larg collect c2 latter use origin small collect c2 differ follow impact cost 1 document c2 need read randomli former still read sequenti latter 2 size invert file size btree collect c2 former comput base origin collect document use impact cost algorithm vvm experi real collect chosen c1 c2 deriv c1 simul group use base valu two paramet sinc three real collect three simul result collect group group 5 group collect c1 collect c2 use new collect remain ident new collect deriv real collect reduc number document real collect increas number term document real collect factor collect size remain simul group especi aim observ behavior algorithm vvm base valu two paramet use three simul result collect group sinc three real collect space consider simul result backward order approach present notic backward order approach make differ hhnl hvnl use see discuss section 41 section 52 compar forward order backward order requir memori space store intermedi similar result backward order outer collect inner collect a2 incur somewhat higher cost forward order outer collect b1 inner collect b2 a1 b1 collect a2 b2 collect figur section valu k yaxi equival 10 k sequenti page io figur 1 3 4 unit xaxi equival 10000 page simul result group 1 follow simul conduct group simul 1 chang 10000 50000 increment 5000 simul 2 chang 10000 50000 increment 5000 simul 3 chang 10000 50000 increment 5000 simul 4 chang 3 10 increment 1 simul 5 chang 3 10 increment 1 simul chang 3 10 increment 1 follow observ made result simul 1 see figur 1 1 algorithm hhnl outperform two algorithm especi b small 2 sever reason algorithm hvnl perform poorli first outer document collect mani document n caus repeat readin mani invert file entri c1 second algorithm hvnl requir random io third 2 j 1 close integ result document invert file entri read algorithm hvnl incur twice much cost algorithm hhnl 1 versu 041 document 1 versu 026 invert file entri 3 main reason algorithm vvm perform poorli memori requir store intermedi similar 952031 page much greater avail memori result mani scan two invert file need process join 4 algorithm perform better larger avail memori larger one document collect invert file held memori entireti happen algorithm hhnl algorithm hvnl similar perform sinc case algorithm hhnl scan two document collect algorithm hvnl scan one document collect one invert file size document collect similar observ made result simul 1 also made result simul 2 simul 3 shown rel speak perform algorithm vvm simul 2 largest improv due larger size document fewer number document howev memori requir store intermedi similar case 67071 page still larg avail memori handl least two scan two invert file use process join surprisingli rel perform algorithm vvm simul 3 becom much wors due smaller size document larger number document io cost hh 3 hvr theta theta theta theta theta theta theta theta theta theta vv 4 figur 1 result simul 1579 ff io cost hh 3 hvr theta theta theta theta theta theta theta theta theta vv 4 figur 2 result simul 4 follow observ made result simul 4 1 algorithm hhnl best perform among three algorithm 2 hh vv independ ff involv random io 3 other becom wors ff increas 4 algorithm hvnl sensit larger ff similar observ made result simul 5 6 simul result group 2 group differ real collect use c1 c2 base valu use b ff three real collect follow six simul design simul 7 chang 10000 50000 increment 5000 simul 8 chang 10000 50000 increment 5000 simul 9 chang 10000 50000 increment 5000 simul 10 chang 10000 50000 increment 5000 simul 11 chang 10000 50000 increment 5000 simul 12 chang 10000 50000 increment 5000 compar result simul 7 result simul 8 see figur 3 4 follow observ made 1 algorithm hhnl best perform simul 7 algorithm hvnl sometim beat hhnl simul 8 reason algorithm hhnl let outer collect use much memori space possibl algorithm hvnl let inner collect use much memori space possibl exampl consid figur 4 figur case entir invert file fr held memori result algorithm hvnl use one scan wsj invert file fr need process join howev algorithm hhnl use memori larg enough hold entir outer collect wsj result one scan wsj two scan invert file fr need process join algorithm hhnl use 2 chang cost algorithm vvm complet symmetr two document collect 3 none two collect entir held memori get mix result algorithm hhnl sometim better result simul 7 simul 8 sometim opposit true smaller collect held memori better perform achiev use smaller collect outer collect reason algorithm hhnl better result simul 7 simul 8 b becom 35000 larger observ also support earlier argument section 41 backward order outperform forward order backward order impli much smaller outer collect 4 situat algorithm hhnl revers algorithm hvnl reason algorithm hhnl let outer collect use much memori space possibl algorithm hvnl let inner collect use much memori space possibl similar observ made result simul 7 result simul 8 also made result simul 9 result simul 10 well result simul 11 result simul 12 result simul 9 12 shown simul result group 3 group c1 c2 continu real collect small number document c2 use particip join let number document c2 sinc n 2 read document individu random order result cost read document ds 2 e ff base follow new formula hh io cost hh 3 hvr theta theta theta theta theta theta theta theta theta theta vv 4 figur 3 result simul 7579 io cost hh 3 hvr theta theta theta theta theta theta theta theta theta theta vv 4 figur 4 result simul 8 sinc small like document c2 held memori addit remain memori space use read mani document c1 possibl result follow formula hhr comput hv hvr need estim number distinct term document number estim fm cost formula hv section 52 except 2 replac ds 2 e ff 2 replac fm let new formula denot hvs2 sinc io hv becom random io cost formula vv vvr remain howev memori requir store intermedi similar reduc 4 n 1 deltap quantiti size invert file entri size btree collect c2 remain follow three simul carri simul 13 chang 5 50 increment 5 simul 14 chang 5 50 increment 5 simul 15 chang 5 50 increment 5 follow observ obtain result simul 13 see figur 5 1 small 30 algorithm hvnl outperform other expect algorithm hhnl becom best perform becom larger 2 sinc small document easili fit memori result algorithm hhnl requir one scan inner document collect addit read document outer collect 3 case memori abl accommod intermedi similar algorithm vvm reason algorithm vvm incur much higher cost algorithm hhnl size invert file collect c2 chang although small number document c2 io cost hh 3 hv 22 theta theta theta theta theta theta theta theta theta theta vv 4 figur 5 result simul io cost hh 3 hv 22 theta theta theta theta theta theta theta theta theta theta vv 4 figur simul compar result simul 14 shown result simul 13 notic differ rel perform algorithm hvnl deterior algorithm hvnl becom wors algorithm hhnl reach 10 document fr contain much term document wsj therefor invert file entri need read algorithm hvnl process document fr compar result simul 15 shown result simul 13 notic differ rel perform algorithm hvnl improv algorithm hvnl outperform algorithm hhnl even reach 50 document doe contain much fewer term document wsj therefor fewer invert file entri need read algorithm hvnl process document doe space consider present simul result situat number document collect reduc select howev difficult see compar situat one collect reduc algorithm hhnl benefit collect reduc simul result group 4 group c1 continu use real collect c2 collect small number document sinc real collect contain small number document deriv collect real collect turn quit easi given document collect first keep document size decid number document want new collect number say number distinct term new collect comput fm key statist new collect becom avail statist cost formula section 5 use find cost algorithm follow three simul conduct group simul chang 5 50 increment 5 simul 17 chang 5 50 increment 5 simul chang 5 40 increment 5 compar result simul 16 see figur 6 simul 13 see figur 5 follow observ made 1 littl chang algorithm hhnl sinc small read document sequenti randomli make littl differ 2 algorithm hvnl degrad somewhat effect q probabl term collect c2 also appear collect c1 simul 13 q comput base origin 1 2 simul 16 q comput base origin 1 new fm sinc fm much smaller 1 q 092 099 comput use formula higher q valu impli invert file entri collect c1 need read result perform algorithm hvnl 3 cost algorithm vvm reduc substanti main reason behind reduct reduct size invert file c2 simul 13 size comput base origin c2 simul 16 size comput base reduc collect similar observ made simul 17 simul 18 simul result group 5 group c1 c2 use new collect remain ident new collect deriv real collect reduc number document increas number term document real collect factor f ensur collect size remain follow three simul carri simul 19 deriv wsj 5 decreas increas factor chang 1 13 increment 2 simul 20 deriv fr 5 decreas increas factor chang 1 5 increment 1 simul 21 deriv doe 5 decreas increas factor chang 1 28 increment 3 follow observ made result simul 19 see figur 7 1 factor f small 5 algorithm hhnl outperform algorithm howev f 7 larger sequenti version algorithm vvm ie vv becom best perform 2 vv decreas rapidli f increas expect f reach 11 intermedi similar held memori result vv reach lower bound invert file scan number document collect reduc 8976 number term document becom 3619 3 hv hvr insensit chang 4 hhr decreas f increas f increas number document c1 decreas sinc number random io bound number document c1 hhr decreas result similar observ simul 19 made simul 20 differ vv reach minimum faster latter reason number document fr origin much smaller wsj similar observ simul 19 made simul 21 differ vv reach minimum slower latter reason number document doe origin much larger wsj 61 summari simul result follow main point summar extens simul f io cost hh 3 hvr theta theta theta theta theta theta theta theta vv 444 4 figur 7 result simul 19 1 cost one algorithm one situat differ drastic anoth algorithm situat exampl simul 1 algorithm hvnl incur cost 4000 time higher algorithm hhnl memori buffer small simul 13 cost incur algorithm hhnl 5 time higher algorithm hvnl result import choos appropri algorithm given situat 2 number document one two document collect say origin small becom small select algorithm hvnl good chanc outperform algorithm although small small enough mainli depend number term document outer collect like limit 100 70 simul 15 3 number document two collect larg roughli n 1 document collect larg none entir held memori algorithm vvm sequenti version outperform algorithm 4 case simpl algorithm hhnl perform well 5 cost random version algorithm depict worst case scenario io devic busi satisfi differ oblig time except algorithm vvm cost impact rank algorithm overal simul result match well analysi section 54 62 integr algorithm sinc one algorithm definit better algorithm circumst desir construct integr algorithm automat determin algorithm use given statist two collect queri paramet select predic nontextu attribut integr algorithm sketch follow none two collect invert file case hhnl use fcomput hh use formula hhs1 comput bhh counterpart hh backward order use formula shown hh bhh use forward order hhnl els use backward order hhnl one collect invert file hhnl hvnl use case fif select fcomput hh use formula hhs1 comput bhh comput hv use formula hvs1 comput bhv counterpart hv backward order use formula shown els festim number document particip join use select comput hh use formula hhs2 comput bhh comput hv use formula hvs2 comput bhv use algorithm lowest estim cost collect invert file fif select fcomput hh use formula hhs1 comput bhh comput hv use formula hvs1 comput bhv counterpart hv backward order use formula shown comput vv use formula vv els festim number document particip join use select comput hh use formula hhs2 comput bhh comput hv use formula hvs2 comput bhv comput vv use formula vv use algorithm lowest estim cost 7 conclud remark paper present analyz three algorithm process join attribut textual type analysi simul identifi algorithm type input document collect algorithm like perform well specif found algorithm hvnl competit number document one two document collect isbecom small algorithm vvm perform well number document two collect larg document collect larg none entir held memori case algorithm hhnl like top perform sinc one algorithm definit better algorithm propos idea construct integr algorithm consist basic algorithm particular basic algorithm invok lowest estim cost also indic standard term number use multidatabas environ studi area includ 1 investig impact avail cluster perform algorithm 2 develop cost formula includ cpu cost commun cost 3 develop algorithm process textual join parallel 4 conduct detail simul experi acknowledg would like thank anonym review valuabl suggest improv paper research support part follow grant nsf grant iri9309225 iri9509253 air forc afosr 9310059 nasa nagw4080 aro bmdo grant daah040024 r adt approach full text queri process system distribut databas sdd1 automat retriev local inform use smart view definit gener databas integr multidatabas system queri optim heterogen databas autom assign submit manuscript review file organ consecut retriev properti overview first text retriev confer interoper multipl autonom databas introduct combinatori mathemat scheme batch verif integr assert databas system queri process multidatabas system theori translat relat queri hierarch queri introduct modern inform retriev design integr inform retrievaldatabas manag system feder databas system manag distribut heterogen autonom databas consecutiveretriev problem increment updat invert list text document retriev translat objectori queri relat queri tr ctr niko mamouli effici process join setvalu attribut proceed acm sigmod intern confer manag data june 0912 2003 san diego california gltekin zsoyolu ismail sengr altingvd abdullah alhamdani selma aye zel zgr ulusoy zehra meral zsoyolu queri web metadata nativ score manag text support databas acm transact databas system tod v29 n4 p581634 decemb 2004