thread yield continu tradit continu repres rest comput given point comput subcontinu repres rest subcomput given point subcomput subcontinu express tradit continu shown use control treestructur concurr yet previous implement uniprocessor articl describ concurr implement oneshot subcontinu like oneshot continu oneshot subcontinu firstclass may invok restrict obey nearli program use continu techniqu use implement oneshot subcontinu may appli directli oneshot continu mechan may gener support multishot continu well novel featur implement continu implement term thread implement model reli upon special languag featur compil techniqu model applic languag languag implement support small set thread primit b introduct continu proven use implement varieti control structur nonloc exit except nonblind backtrack 28 materi base work support part nation scienc foundat grant number cda9312614 cda 9303189 nondeterminist comput 8 14 coroutin 12 multitask 7 15 30 sourc level subcontinu express tradit continu may use implement similar control structur presenc treestructur concurr 16 17 articl describ threadbas implement oneshot subcontinua tion incorpor multithread implement chez scheme sgi power challeng multiprocessor tradit continu repres rest comput given point comput subcontinu repres rest subcomput given point subcomput base subcomput specifi explicitli subcontinu subcomput root base contrast tradit continu root implicitli base entir comput subcontinua tion may use implement tradit continu introduc explicit root within toplevel evalu function oneshot subcon tinuat like oneshot continu 3 23 firstclass may invok restrict obey nearli program use continu 3 hieb et al 17 describ subcontinu detail give oper semant small languag incorpor subcontinu describ sequenti implement subcontinu also describ briefli subcontinu implement concurr set although concurr implement realiz implement requir control state concurr comput repres tree stack segment control state sequenti comput repres stack stack segment support tradit continu 18 implement oneshot subcontinu describ articl use thread repres stack segment tree stack segment requir hieb implement model use thread repres stack segment sever advantag incorpor support subcontinu ation lowest level languag implement particular simplifi implement thread continu provid clear oper semant interact also provid first time viabl model ad continu exist thread implement languag c java remaind articl organ follow section 2 discuss variou continu mechan relat thread section 3 describ subcontinu detail give exampl use section 4 describ concurr implement oneshot sub continu section identifi small set thread primit describ implement subcontinu term primi thread yield continu 3 tive section 4 also discuss implement might gener support multishot subcontinu section 5 present conclus 2 background continu captur oper use tradit continu creat object encapsul rest comput invok tradit continu discard abort entir current continu reinstat previous captur continu sometim howev finer control requir ie part continu need captur part current continu need discard continu reinstat felleisen 9 10 11 introduc prompt oper identifi base continu f captur continu last prompt continu captur use f function com posabl invok abort rather return current continu shift reset 6 base modifi cp tran format similar differ primarili captur continu includ prompt subcontinu gener felleisen singl prompt multipl nest prompt allow continu use control treestructur concurr 17 relat work sitaram felleisen 27 show nest prompt may obtain singl prompt sequenti set splitter 26 extend notion continu manner similar subcon tinuat sequenti set separ continu captur mechan continu abort mechan gunter et al 13 describ support multipl prompt may ad static type languag uniprocessor tradit function continu suffici implement multitask thread sourc level 7 15 30 thu mani system support continu provid primit support thread continu also use implement thread multiprocessor mp 29 lowlevel interfac design provid portabl multiprocess platform provid abstract physic processor oper manag state spin lock mutual exclu sion variou concurr abstract includ thread implement use firstclass continu top interfac system provid nativ support thread continu exampl sting 20 21 dialect scheme provid gener lowlevel support concurr cooper et al 5 describ machbas multiprocessor thread implement standard ml packag base modula2 thread packag 2 includ mechan mutual exclus synchron thread state multischem support futur continu 25 system support continu form thread continu oper local thread use control abort reinstat group cooper thread katz weis 22 also address relationship continu futur rather provid mechan control concurr enforc sequenti semant make concurr transpar programm oneshot continu 3 23 differ ordinari multishot continu oneshot continu may invok oneshot continu implement effici multishot continu stackbas implement stack segment repres oneshot continu need copi later use continu reinstat applic use continu use oneshot manner oneshot continu howev use implement nondetermin prolog 4 continu invok multipl time yield addit valu 8 14 applic found requir multishot continu rather oneshot continu 3 3 subcontinu subcontinu 17 repres rest subcomput given point subcomput presenc treeshap concurr subcontinu provid complet control process tree allow arbitrari nonloc exit reinstat captur subcomput may involv multipl thread procedur spawn mark root subcomput creat control use captur abort current subcontin uation includ root spawn take procedur p one argument creat control pass p control invok dynam extent procedur invoc control never invok valu call spawn valu return p thu express spawn lambda c con 1 2 return 1 2 control appli procedur q subcontinu point control invoc back root control cap ture q appli captur subcontinu continu control invoc subcontinu never invok effect mere abort current subcomput subcontinu nonabort therefor compos subcontinu captur includ root control root reinstat subcontinu invoc allow control invok thread yield continu 5 follow simpl exampl con 3 spawn lambda c con 2 con call spawn creat control c root within con 3 invok control within con 2 captur abort continu without disturb con 3 captur continu includ con 2 invok captur continu reinstat con 2 within con 1 valu entir express 3 1 2 subcontinu captur control invoc invok multipl time follow exampl control invok base case factori comput subcontinu fact5 take argument multipli 120 5 entir express return 14400 120 120 1 defin fact lambda n c n 1 let fact5 spawn lambda c fact 5 c presenc concurr subcontinu captur abort control invoc may encapsul multipl thread control invok subcontinu encapsul multipl thread control caus concurr subcomput resum parallelsearch procedur concurr travers given tree look node satisfi specifi predic encount node invok control suspend search return node along continu use resum search use pcall 1 section 4 illustr treestructur concurr although mechan introduc treestructur concurr would suffic includ much primit fork oper pcall evalu subexpress parallel appli procedur valu first subexpress valu remain subexpress none subexpress involv side effect pcall express behav like normal procedur call tradit continu implement term subcontinua 6 kumar bruggeman dybvig defin parallelsearch lambda tree predic spawn lambda c letrec search lambda tree empti tree f pcall lambda predic node tree con node tree k search left tree search right tree search tree figur 1 node satisfi predic parallelsearch invok control c suspend search return pair contain node continu may use search addit node tion introduc explicit root via spawn toplevel evalu function 17 tradit continu oper callcc defin term control root toplevel evalu function although possibl implement spawn callcc sequenti set ting less straightforward involv explicit simul stack stack segment requir direct sequenti implement subcontinu oneshot subcontinu similar oneshot continu captur oneshot subcontinu may invok oneshot continu stack segment repres oneshot subcontinu need copi subcontinu reinstat particular shown section 42 thread use repres stack segment requir implement oneshot subcontinu without concern restart thread point multipl time 4 implement section describ implement subcontinu term thread organ follow section 41 describ small set thread yield continu 7 threadfork thunk fork thread invok thunk threadself return current thread mutexmak return new mutex mutexacquir mutex acquir mutex mutexreleas mutex thread releas mutex thread specifi conditionmak mutex return new condit associ mutex conditionsign condit signal condit conditionwait condit thread releas mutex associ condit thread specifi wait condit signal point mutex reacquir threadblock thread block thread threadunblock thread unblock thread figur 2 thread system featur use implement oneshot subcontinu ation thread primit suffici implement subcontinu section 42 present concurr threadbas implement oneshot subcontinu section 43 describ multishot subcontinu might implement use thread discuss certain problem restrict 41 thread primit oneshot subcontinu implement languag thread system power enough support set threadsystem featur shown figur 2 addit abil dynam fork thread set featur includ mutex mutual exclus condit variabl 19 24 synchron also includ primit allow thread block unblock thread featur support least indirectli modern thread system includ sgi irix thread system upon implement base thread creat dynam use threadfork invok thunk argument separ thread thread execut effect mutex condit variabl provid structur way access share resourc order thread wait mutex succeed acquir system unspecifi implement subcontinu howev conveni allow thread releas mutex specifi next thread succeed acquir mutex thu primit releas mutex mutexreleas conditionwait take option second argument thread succeed acquir mutex next absenc direct thread system support featur equival function implement associ next thread field mutex thread success acquir mutex nonempti nextthread field thread must check see inde next thread expect hold mutex design thread must releas mutex wait eventu specifi thread acquir mutex primit threadblock threadunblock requir control concurr comput asynchron one thread block unblock thread point thread execut oper howev must synchron return specifi thread actual block unblock thread interfac describ simpl enough implement top exist thread packag mutex condit variabl support system 1 sever system sgi irix linux solari posix etc extend unix signal mechan support thread signal mechan use implement thread block unblock procedur system support function directli 2 42 subcontinu thread describ section 3 pcall provid way creat treeshap con currenc spawn provid abil control treeshap concur renci exampl treeshap concurr comput shown figur 3 although pcall essenti subcontinu mecha nism implement describ along implement spawn illustr spawn interact pcall implement pcall repres implement oper use introduc treestructur concurr system provid semaphor instead mutex condit variabl implement term semaphor requir use user signal eg sigusr1 rather sigstop sinc handler need synchron blocker block thread yield continu 9 subcontinu control pcall base block execut b c figur 3 process tree contain subcontinu control pcall base node subcontinu captur invok control b subcontinu reinstat invok captur subcontinu c pcall express evalu subexpress concurr appli valu first express valu remain express leaf pcall execut becom branch point separ branch subexpress thu execut take place leav tree subexpress evalu branch point becom leaf procedur appli argument call spawn caus subcontinu control insert current execut point figur 3a control return normal point control remov tree execut resum control say b invok one leav say subtre b root subtre prune packag sub continu k figur 3b subsequ invoc subcontinu leaf say c caus subcontinu graft onto process tree leaf figur 3c makeindexlist n return list 0 insertpcallnod thread creat insert pcall node current leaf insertcontrollernod thread creat insert control node current leaf deletechildnod delet child current thread deletepcalledg node edg delet edg given pcall node prunesubtre node prune subtre root given control node graftsubtre node graft subtre root given control node onto tree current leaf controllerroot node return thread given control node nodeleav node return list leav subtre root given control node figur 4 procedur use pcall spawn maintain subcontin uation data structur subcontinu implement maintain tree stack segment stack segment simpli stack activ record key observ support threadbas implement continu thread essenc stack activ record thu thread use repres stack segment subcontinu captur subtre thread packag subcontinu block current execut thread subcomput leav subtre subcontinu reinstat subtre thread graft back onto process tree comput resum unblock thread leav unblock thread may overwrit activ record stack subcontinu repres manner invok ie oneshot subcontinu implement pcall spawn share common set procedur manipul data structur make process tree procedur list figur 4 code requir implement procedur straightforward present thread yield continu 11 oper process tree must atom implement use singl global mutex serial oper time suffici thread perform oper acquir mutex perform oper releas oper howev requir code execut two differ thread ensur atom entir oper thread initi oper acquir mutex perform half oper use option next thread paramet mutexreleas procedur pass mutex second thread complet oper releas mutex 421 implement pcall code pcall shown figur 5 along help procedur pcall pcall syntact extens syntact extens simpli make thunk pcall form subexpress effect delay evalu pass pcall pcall invok first obtain mutex gain exclus access process tree fork thread argument updat tree releas mutex wait condit done signal argument comput child thread concurr comput one argument result comput child commun parent thread via specifi slot vector result variabl counter decrement time child thread termin keep track number argument yet comput last child finish counter goe zero child wake parent thread signal condit done parent trim tree releas mutex appli result procedur result argument 422 implement spawn spawn figur 6 invok obtain processtre mutex creat subcontinu control fork child thread add node tree mark control releas mutex wait condit done child thread appli procedur f pass spawn control control return call f either explicit invoc control ordinari return f flag controllerinvok use distinguish two case simpler case control never invok call f return valu case child thread enter critic section store valu result make visibl parent thread wake parent signal condit done child thread termin parent thread resum execut result valu return spawn definesyntax pcall syntaxrul pcall length proc lambda proc lambda defin mutex mutexmak defin pcall lambda n arg let result makevector n done conditionmak mutex parent threadself counter n mutexacquir mutex let threadlist map lambda fn index threadfork lambda vectorset result index fn mutexacquir mutex deletepcalledg pcallnod index set counter gamma counter 1 counter begin conditionsign done mutexreleas mutex parent mutexreleas mutex arg makeindexlist n set pcallnod insertpcallnod threadlist conditionwait done mutexreleas mutex let lst vectorlist result appli car lst cdr lst figur 5 implement pcall thread yield continu 13 defin spawn lambda f defin controllernod defin controllerinvok defin controllerinvocationthunk defin result defin done conditionmak mutex defin controllerwait lambda set controllerinvok f conditionwait done controllerinvok begin mutexreleas mutex defin control see figur 7 mutexacquir mutex let thread threadfork lambda let valu f control mutexacquir mutex let parent controllerroot controllernod set result valu conditionsign done mutexreleas mutex parent set controllernod insertcontrollernod thread figur implement spawn 14 kumar bruggeman dybvig defin control lambda g mutexacquir mutex let val continu conditionmak mutex rootthread controllerroot controllernod set controllerinvocationthunk lambda prunesubtre controllernod let leav nodeleav controllernod foreach threadblock leav mutexreleas mutex let k lambda v mutexacquir mutex graftsubtre controllernod foreach threadunblock leav set val v conditionsign continu set controllerinvok conditionsign done conditionwait continu rootthread mutexreleas mutex figur 7 implement control complic case control figur 7 actual invok one leav happen subcontinu repres subtre root control figur 3b must captur abort mutex acquir ensur thread start continu oper process tree thread invok control determin thread rootthread wait subcontinu control packag work done thread thunk controllerinvocationthunk updat variabl controllerinvok inform control invok wake control signal condit done wait condit continu hand mutex rootthread rootthread start execut controllerinvok flag indic thread yield continu 15 control call explicitli invok controllerinvoc thunk captur subcontinu caus tree root control prune thread execut leav block leav critic section creat subcontinu k appli control argument g subcontinu later subcontinu k invok thread execut leaf thread obtain processtre mutex graft process subtre captur part subcontinu onto current leaf unblock thread leav graft subtre figur 3c store valu v return point control invok val signal condit continu thread invok control wait condit done signal thread return valu store val point control invok avoid deadlock thread never block hold mutex maintain invari block thread alway hold mutex synchron block oper succeed 43 multishot subcontinu implement describ preced section extend support multishot subcontinu requir thread clone oper threaddup allow thread captur subcontinu clone clone use restart subcomput captur subcontinu origin one kept around subsequ invoc subcontinu three complic aris method extend implement support multishot subcontinu first singl control pcall node exist multipl locat process tree fore data structur use commun parent thread children must move procedur current encapsul processtre data structur must clone whenev correspond node tree clone start oper correct node tree must locat correspond data structur use second condit variabl also use pernod basi condit variabl one thread wait thread awaken signal condit simpl replic condit variabl howev order retain properti one thread wait condit variabl time work thread wait condit variabl clone therefor replac one solut problem accept fact multipl thread might wait condit variabl wake use conditionbroadcast primit thread awaken would check see intend target wakeup messag must wait condit variabl third compil support requir allow stack encapsul within thread copi particular mutabl variabl data structur must store outsid stack access origin stack via extra level indirect contrast compil support requir implement oneshot subcontinu 5 conclus long known continu use implement thread articl shown thread use implement continu provid first detail implement model subcontinu concurr set further understand relationship continu thread provid straightforward oper semant interact thread subcontinu implement complet thread packag support primit describ section 41 part chez scheme sgi power challeng multiprocessor use packag implement oneshot sub continu avail via httpwwwcsprincetoneduskumarsubk yet extend implement support multishot subcontinu although subcontinu mechan describ use higherord procedur essenti mechan implementa tion implement oneshot subcontinu reli upon higherord procedur special compil techniqu model applic languag languag implement support small set thread primit describ section 41 thu model demonstr first time straightforward way add support firstclass continu thread version languag c java without chang languag compil languag without automat storag manag c programm must respons dealloc unus subcontinu data structur use thread repres subcon tinuat noth new programm languag alreadi face similar problem thread kill comput abort via longjmp nonloc exit techniqu use implement oneshot subcontinu thread yield continu 17 adapt support oneshot variant continu mechan describ section 2 includ callcc multishot variant mechan support well subject complic discuss section 43 absenc concurr asynchron thread oper would need sinc one activ thread would block wait condit variabl acknowledg comment oscar waddel anonym review led substanti improv present materi r languag concurr symbol comput synchron primit multiprocessor formal specifica tion repres control presenc oneshot continu ad thread standard ml repres control studi cp transform engin continu transliter prolog scheme theori practic firstclass prompt beyond continu obtain coroutin continu continu concurr repres control presenc firstclass continu oper system structur concept customiz substrat concurr languag foundat effici multithread scheme system continu futur interact futur firstclass continu indefinit onetim contin uation dynam extent control oper partial continu control delimit hierarchi interpret extend lambda calculu portabl multiprocessor interfac standard ml new jersey tr ctr steven e ganz daniel p friedman mitchel wand trampolin style acm sigplan notic v34 n9 p1827 sept 1999