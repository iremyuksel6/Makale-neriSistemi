use simul execut verifi distribut algorithm paper present methodolog use simul execut assist theorem prover verifi safeti properti distribut system executionbas techniqu test increas confid implement provid intuit behavior detect simpl error quickli demonstr correct howev aid theorem prover suggest necessari lemma provid tactic structur proof paper describ use techniqu machinecheck proof correct paxo algorithm distribut consensu b introduct tradit execut serv prelud formal veric test reveal departur desir behavior correct either code specic behavior attempt prove code correct test via simul execut even absenc complet implement paper discuss addit way execut simul execut assist formal veric describ use produc machinecheck proof distribut algorithm first execut serv power way prelud formal veri cation tool dynam program analysi extract descript program behavior execut programm match extract descript expect unlik tradit use execut test behavior use reveal unexpect behavior departur anticip behavior second execut help produc lemma requir success proof correct unlik human proof pepper phrase like obviou machinecheck proof often requir mani explicit lemma avoid tedium enumer lemma hand verier discov use execut dynam program analysi third inform direct simul execut examin interest aspect program behavior also use direct proof correct exampl programm may ensur execut cover entir rang expect behavior formul case split distinguish normal unusu behavior case split also provid help way organ proof illustr use execut construct formal proof correct paxo distribut algorithm consensu lam98pll00 paper concern primarili gener methodolog verifi distribut algorithm role execut autom tool play methodolog detail paxo algorithm methodolog base inputoutput io automaton framework lt89 model verifi distribut algorithm compon system repres automaton whose extern behavior dene simpl mathemat object call trace paper organ follow section 2 introduc io automaton model discuss ioa languag toolkit support use model contrast toolkit relat tool use runtim techniqu aid formal veric remaind paper present executionbas methodolog detail use proof paxo algorithm run exampl section 3 formul specic implement io au tomata section 4 describ automata execut section 5 show dynam detect invari reveal properti automaton section 6 describ two automata one specic one impl mentat execut lockstep section 7 show pair execut use construct machineveri proof preliminari methodolog use io automaton model ioa languag three tool ioa toolkit gl98 ioa interpret lp theoremprov daikon dynam invari detector 21 io automata ioa languag io automaton simpl state machin transit state associ name action classi either input output intern input output extern action use commun automaton environ intern action visibl automaton automaton control output intern action perform input action control io automaton consist signatur list action set state distinguish start state statetransit relat contain tripl form state action state option set task consid paper action enabl state state 0 0 transit automaton input action enabl everi state oper io automaton describ execut altern sequenc state action trace extern visibl behavior occur execut one automaton implement anoth trace also trace denit 1 forward simul forward simul automaton automaton b relat f statesa statesb follow two properti 1 everi start state start state b b fa b 2 reachabl state b reachabl state b fa b 0 state b 0 b fa execut fragment b b theorem 1 forward simul relat b everi trace trace b lyn96 ioa languag provid notat describ io automata state properti use larch share languag ghg specic axiomat semant io automata data type use describ algorithm ioa transit relat dene term precondit eect written either imper style sequenc assign condit loop statement declar style predic relat state variabl pre poststat transit param eter nondeterminist chosen paramet also possibl use combin two style nondetermin appear ioa two way explicitli form choos construct state variabl initi eect transit denit implicitli form action schedul uncertainti nondetermin allow system describ gener form veri consid possibl behavior without tie particular implement system design sampl program paper exploit full gener languag dene primit ie composit automata imper style explicit nondetermin 22 tool use ioa toolkit ioa interpret ioa interpret kcd user formul check properti automata interpret simul execut either singl automaton isol check state assert display log automaton execut two automata run lockstep latter case user present interpret two automata candid simul relat map call step correspond action lowerlevel automaton sequenc action higherlevel one interpret simul execut lowlevel automaton gener simul execut highlevel automaton induc step correspond check two execut trace check candid simul relat hold throughout execut ioa interpret also known ioa simul call interpret paper avoid confus notion forward backward simul larch prover larch prover gg91 lp interact theorem prove system multisort rstorder logic admit specic theori larch share languag lsl ioa toolkit includ tool call ioa2lsl bog01 translat ioa denit automata lsl theori describ oper automaton also gener proof oblig invari simul relat automaton daikon invari detector daikon invari detector ecgn01 propos program properti like true oper dynam examin valu comput execut postul check prop erti report pass batteri statist test techniqu unsound guarante test suit fulli character execut environ howev report properti often true gener help explic system test andor test suit achiev sound use lp check proof 23 relat work toolkit asml gsv01 mocha ahm tlc ly01 support execut veric concurr distribut system execut use mainli debug understand behavior system ioa toolkit use execut purpos also automat discov program properti use lemma formal proof moreov facil execut pair automata togeth match action one help user organ formal proof correct base simul relat mocha smv tlc use model check veric method model check attract requir rel less expertis theoremprov provid counterexampl falsi properti howev model checker provid intuit true properti analyz nite state space theoremprov appli nite innit system alik invis invari method prz01 facilit autom veric parameter nitest system method use modelcheck techniqu calcul candid invari check induct prove veric condit gener standard invari rule deduct veric key characterist method invari prove automat need shown human con trast regard invari mean inform user interest program properti might overlook invari detect daikon intend simpl easili readabl properti addit methodolog limit nitest system induct provabl properti tupl valu int automaton con signatur input faili node initi node v valu output decidei node v valu intern choosevalv valu state fail transit input initi v initi initi propos propos v intern choosevalv pre output decidei v pre input faili fail fail fig 1 specic consensu ioa specifi automata ioa rst step verifi implement correct respect specic dene specic implement automata ioa io automaton version paxo dene hierarchi four automata achiev consensu highestlevel automaton con provid specic consensu lowestlevel automaton paxo provid distribut impl mentat intermediatelevel automaton global1 although nondistribut captur paxo use ballot quorum achiev consensu correct proof involv show exist seri forward simul pair success level hierarchi case studi examin forward simul con global1 31 specic automaton paxo implement distribut consensu asynchron system individu process fail suppos nite set node repres process system v set possibl consensu valu process may propos valu v consensu servic allow return decis process propos valu must satisfi two condit node must receiv valu agreement valu must propos process valid signatur specic automaton con figur 1 contain input action initiv repres propos valu v process intern action choosevalv repres choic consensu valu v output action decideiv repres report consensu valu process input action faili repres failur process automaton provid requir agreement valid guarante singl consensu valu chosen valu must previous propos 32 implement automaton automaton global1 figur 2 speci algorithm implement consensu nondistribut set automaton use total order set ballot valu one may eventu chosen consensu valu sucient approv collect process system addit extern action automaton con signatur global1 includ intern action make ballot assign valu vote abstain ballot automaton global1 determin fate ballot consid action quorum nite subset ballot global1 allow ballot succeed everi node quorum vote simul execut automaton ioa toolkit second step verifi correct implement use ioa toolkit test behavior simul execut ioa interpret simul execut io automaton singl machin allow user help select execut propos invari interpret check interpret requir ioa program transform form suitabl execut exampl quorum paxo initi opera tional wherea speci declar origin io automaton model asid bookkeep issu crucial problem transform resolv nondetermin ioa interpret solv problem requir user suppli program call ndr program sourc nondetermin automaton kcd case studi wrote sever ndr program execut global1 dierent interleav action caus node fail abstain ballot exampl ndr program statement output decid 4 1 caus ioa interpret execut decid action given argu ment use structur test gener method eg code coverag produc ndr program instead simpli select execut exhibit felt normal behavior automaton exercis everi action experi intuit schedul adequ purpos dynam invari detect howev note section 52 automaton global1 signatur input faili node initi node v valu output decidei node v valu intern startthenod setnod makeballotb ballot abstain node b setballot assignvalb ballot vvalu votei node b ballot internaldecideb ballot state val arrayballot nullvalu vote abstain arraynod setballot transit intern startthenod quorum delet 1 thenod node thenod votedi abstainedi od input initi v con figur 1 input fail fail fail intern makeballotb pre intern assignvalb v pre propos ballot b 0 order border intern votei b pre intern abstain b pre aballot ballot b dead insert aballot dead intern internaldecideb pre output decidei v pre fig 2 ballotbas implement consensu ioa preliminari test run report unexpect invari indic sub sequent correct decienc test data anoth case studi involv peterson mutual exclus algorithm use ioa simul uncov bug ioa transcript implement dynam detect like invari proof simul relat often depend invari auxiliari lemma machin veric requir bookkeep detail made explicit part proof usual interest part also tend rel simpl thu autom hold promis attempt automat gener invari lemma use dynam invari detect daikon invari detector runtim tool propos invari base program execut ecgn01 examin valu program comput gener report gener form ioa invari daikon heurist analys result output form formal specic often match human would written ne02 three potenti problem techniqu unsound incomplet report properti guarante use discuss daikon output cope potenti problem 51 daikon result case studi paxo daikon analysi produc 23 invari four help simul relat proof section 7 four two invari outsid daikon grammar neither check report daikon report invari existenti quantier report given number subterm 52 discuss dynam detect invari discuss cope potenti problem invari detector output first dynam invari detect unsound report properti true test suit executionbas techniqu guarante test suit fulli character execut environ program hinder us two reason first use daikon output help propos understand verifi program properti sound provid theorem prover second output case studi correct fals fact daikon produc easilycorrect artifact test suit execut schedul exampl one set exe cution daikon report size fail variabl constant correct random failur ndr program therebi improv qualiti test suit use section 6 gener howev simpli cover everi action seem adequ second dynam invari detect incomplet propos invari may insuci veric true invari report daikon restrict set invari check two reason conserv runtim reduc number fals posit report properti check larger number fals properti report case studi add inv4 inv6 set propos daikon nd hindranc methodolog aim complet automat veric rather aim reduc human eort particularli nonimagin eort qualit believ output provid four six requir invari assist better none even though work remain notabl inv3 true necessari proof provabl isol establish requir use inv6 word daikon abl postul simpl properti complic proof prompt user nd proof addit nice decompos proof part demonstr strength techniqu easi dynam check properti may quit complic static proof thu like beyond capabl static tool third report properti may true use exampl daikon report decid initi number properti use fact proof daikon use heurist prune useless fact instanc limit output base variabl type howev imposs tool know human nd desir given situat found although dozen true irrelev invari easi pass uninterest one examin help us solidifi understand algorithm implement thu moder amount extra inform distract disabl user final report properti may need proof proof accept theoremprov may use invari strictli necessari thu obscur essenti argument believ better rst obtain work machineveri proof reduc fact autom task possibl follow rintanen rin00 futur work perform reduct case studi forward simul global1 con 8 vvalu v 2 conschosen 9 bballot b 2 global1 succeed global1 proof intern start setnod b setballot ignor input initi node v valu f input initi v od input faili node f input faili od output decidei node v valu f output decidei v od intern makeballotb ballot ignor intern abstain node b setballot ignor intern votei node b ballot ignor intern assignvalb ballot v valu e l se els f intern choosevalv intern internaldecideb ballot e l se f global1 e l se els f intern choosevalglobal1 valbval fig 3 forward simul relat step correspond proof block global1 con 6 pair execut note section 22 user also exploit ioa interpret formul check valid forward simul relat work toward goal prove correct implement respect specic forward simul relat predic relat state two automata see denit 1 figur 3 contain candid forward simul relat global1 con simul relat predic relat state two automata specifi step implement global1 correspond sequenc step specic con gener might multipl step correspond preserv simul relat even one dicult nd henc figur 3 also contain proof block describ step correspond use attempt proof simul relat proof block pair interpret execut specic automaton lockstep implement automaton proof block contain two subblock correspond two properti need show simul relat denit 1 rst subblock start initi show start specic automaton 1 second sub 1 set legal start state specic automaton determin state block code usual initi block pick particular start state may depend start state implement automaton block contain entri action lowlevel automaton entri provid algorithm produc highlevel execut fragment proof section may also contain third subblock declar auxiliari variabl use step correspond figur 3 propos simul relat ident state variabl con except chosen state variabl global1 simul relat dene chosen con contain valu v success ballot global1 valu v proof block straightforward start state extern action extern action lowlevel execut match action name highlevel automaton intern action start makeballot abstain vote match empti execut sequenc automaton con ioa interpret reveal need care treatment intern action assignv internaldecid figur 3 given naiv treatment intern assignvalb ballot v valu ignor intern internaldecideb ballot f intern choosevalglobal1 valbval od action proof block interpret catch two problem purport step correspond first given legal schedul execut internaldecid twice global1 interpret discov precondit choosev fail second time execut lockstep execut con second assignv need choosev ballot decid intern yet valu assign henc must choosev ring assignv ballot global1succeed nonnil valu case analysi necessari global1 allow ballot vote succeed assign valu nondetermin make algorithm exibl proof bit longer 7 verifi simul relat lp sinc pair execut provid empir evid correct simul relat desir supplement evid proof ideal proof check autom tool lp use simul execut describ section 5 6 assist lp user construct proof purport forward simul relat figur 3 requir properti first proof block pair execut provid outlin proof second invari suggest daikon provid insight save user time nding auxiliari invari need veric lp proof purport simul relat satis properti 1 denit 1 straightforward interact requir user suppli start state con speci initi section figur 3 wit existenti quantier prove startastatesglobal1 resum special b given wit lp automat rewrit conjectur nd startb fa b true therebi complet proof lp proof purport simul relat satis properti 2 denit 1 lengthier benet greater extent result earlier section proof proce case one action implement automaton global1 case user must suppli execut fragment con readili avail statement proof block figur 3 action refer statement element wit execut ignor statement repres null execut init fail makeballot abstain vote action user need suppli noth lp nish proof automat exampl guid proof init action suce type resum special beta initn v trivial amount addit guidanc tell lp work harder need decid action case assignv internaldecid action divid subcas accord statement action proof block addit proof case use invari inv1 inv5 invari inv2 use choosev wit execut internaldecid show valu chosen belong conspropos four show ballot global1dead ident nil valu help show chang global1succeed global1v preserv simul relat cours invari use establish simul relat must veri interpret daikon provid help first invari sometim requir invari proof case studi inv3 requir auxiliari invari inv1 inv6 daikon detect one second statement complic invari inv6 test via simul execut state properli proof invari rather simpl techniqu complet elimin need human guidanc prove invari simul relat automat discov prove littl human assist invari inv1 inv2 inv5 yet discov invari inv4 inv6 even though proof simpl although discov invari inv3 simpl proof invari use lp requir moder human guidanc 8 conclus theorem prover tool soundli reason gener innit state system lead guarante correct properti machinecheck proof provid assur hand proof also carri cost term human interact propos methodolog reduc elimin human eort requir formal prove properti program particular methodolog partial autom tediou lowlevel aspect use theorem prover free user focu proof methodolog integr simul execut run distribut algorithm test suit uniprocessor theorem prove exploratori analysi experi system wellknown techniqu build intuit perform inexpens saniti check extend use runtim techniqu two way first use dynam invari detector gener observ ex ecut report logic properti like true impl mentat techniqu rei properti would otherwis synthes person properti reveal unexpect properti implement buttress understand eectiv mere examin execut trace provid invari lemma simplifi proof reduc theoremprov eort second observ eort build good test suit reus theoremprov script proof script often mirror form script drive pair execut pay get script right invest eort attempt formal proof illustr use methodolog toolset support methodolog mean case studi formal prove correct implement consensu base lamport paxo protocol r exploit modular model check formal veri dynam discov like program invari support program evolut guid lp languag tool formal speci ioa languag toolset support design toward industri strength abstract state machin dilsun k dilsun k parttim parliament introduct inputoutput au tomata distribut algorithm smv languag automat gener program speci fundament studi revisit paxo algorithm automat deduct veri iter algorithm synthes invari tr ctr jeff h perkin michael ernst effici increment algorithm dynam detect like invari acm sigsoft softwar engin note v29 n6 novemb 2004