data parallel languag compil support data intens applic process analyz larg volum data play increasingli import role mani domain scientif research highlevel languag compil support develop applic analyz process dataset howev lack farin paper present set languag extens prototyp compil support highlevel objectori program data intens reduct oper multidimension data chosen dialect java dataparallel extens specifi collect object parallel loop reduct variabl sourc highlevel languag compil analyz parallel loop optim process dataset use exist runtim system call activ data repositori adr show loop fission follow interprocedur static program slice use compil extract requir inform runtim system present design compilerruntim interfac allow compil effect util exist runtim systema prototyp compil incorpor techniqu develop use titanium frontend berkeley evalu compil compar perform compil gener code hand custom adr code three templat area digit microscopi scientif simul experiment result show perform compil gener version averag 21 lower case within factor two perform hand code version b introduct analysi process larg multidimension scientic dataset ie data item associ point multidimension attribut space import compon scienc engin exampl dataset includ raw process sensor data satellit 27 output hydrodynam chemic transport simul 23 archiv medic images1 dataset also larg exampl medic imag size singl digit composit slide imag high power light microscop 7gb uncompress singl larg hospit process thousand slide per day applic make use multidimension dataset becom increasingli import share sever import characterist input output often diskresid applic may use subset data avail dataset access data item describ rang queri name multidimension bound box underli multidimension attribut space dataset data item whose associ coordin fall within multidimension box retriev process structur applic also share common characterist howev highlevel languag support current exist develop applic process dataset paper present solut toward allow highlevel yet ecient program data intens reduct oper multidimension dataset approach use data parallel languag specifi comput appli portion diskresid dataset solut base upon design prototyp compil use titanium infrastructur incorpor loop ssion slice base techniqu util exist runtim system call activ data repositori 8 9 10 chosen dialect java express class comput chosen java comput target easili express use notion object method object number project alreadi underway express parallel comput java obtain good perform scientic applic 4 25 36 chosen dialect java includ dataparallel extens specifi collect object parallel loop reduct variabl howev approach techniqu develop intend languag specic overal thesi dataparallel framework provid conveni interfac larg multidimension dataset resid persist storag research support nsf grant acr9982087 nsf grant ccr 9808522 nsf career award aci9733520 conceptu compil design two major new idea first shown loop ssion follow interprocedur program slice use extract import inform gener objectori dataparallel loop techniqu use compil use runtim system optim local commun second shown compil runtim system use inform ecient execut data intens reduct comput compil extens use exist runtim system adr optim resourc usag execut data intens applic adr integr storag retriev process multidimension dataset parallel machin number applic develop use adr lowlevel api high perform demonstr 9 develop applic style requir detail knowledg design adr suitabl applic programm comparison propos dataparallel extens java enabl program data intens applic much higher level respons compil util servic adr memori manag data retriev schedul process prototyp compil implement use titanium infrastructur berkeley 36 perform experi use three dierent data intens applic templat two base upon virtual microscop applic 16 third base water contamin studi 23 templat compar perform compil gener version hand custom version experi show perform compil gener version averag 21 lower case within factor two perform hand code version present analysi factor behind lower perform current compil suggest optim perform compil futur rest paper organ follow section 2 describ charactest class data intens applic target background inform runtim system provid section 3 chosen languag extens describ section 4 present compil process loop slice base analysi section 5 combin compil runtim process execut loop present section 6 experiment result current prototyp present section 7 compar work exist relat research eort section 8 conclud section 9 2 data intens applic section rst describ scientic domain involv applic process larg dataset describ common characterist applic target data intens applic three scientic area studi current part project analysi microscopi data virtual microscop 16 applic support need interact view process digit data aris tissu specimen virtual microscop provid realist digit emul high power light microscop raw data system captur digit scan collect full microscop slide high power basic level emul usual behavior physic microscop includ continu move stage chang magnic focu use manner virtual microscop support complet digit dynam telepatholog water contamin studi environment scientist studi water qualiti bay estuari use long run hydrodynam chemic transport simul 23 chemic transport simul model reaction transport contamin use uid veloc data gener hydrodynam simul chemic transport simul perform dierent spatial grid hydrodynam simul also often use signicantli coarser time step facilit coupl two simul need map uid veloc inform hydrodynam grid averag multipl negrain time step chemic transport grid comput smooth uid veloc point chemic transport grid satellit data process earth scientist studi earth process remotelysens data continu acquir satellitebas sensor sinc signic amount earth scienc research devot develop correl sensor radiometri variou properti surfac earth 9 typic analysi process satellit data ten day year gener one composit imag area studi gener composit imag requir project globe onto two dimension grid pixel composit imag comput select best sensor valu map associ grid point data intens applic relat scientic area share mani common characterist access data item describ rang queri name multidimension bound box underli multidimension space dataset data item whose associ coordin fall within multidimension box retriev basic comput consist 1 map coordin retriev input item correspond output item 2 aggreg way retriev input item map output data item comput particular output element reduct oper ie correct output usual depend order input data item aggreg anoth common characterist applic extrem high storag comput requir exampl ten year global coverag satellit data resolut four kilomet satellit data process applic titan consist 14tb data 9 virtual microscop applic one focal plane singl slide requir 7gb uncompress high power hospit john hopkin produc hundr thousand slide per year similarli comput one ten day composit titan queri entir world take 100 second per processor maryland sixteen node ibm sp2 applic scientist typic demand realtim respons queri therefor ecient execut extrem import 3 overview runtim system compil eort target exist runtim infrastructur call activ data repositori adr 9 integr storag retriev process multidimension dataset parallel machin give brief overview runtim system section process data intens dataparallel loop carri adr two phase loop plan loop execut object loop plan determin schedul ecient process rang queri base amount avail resourc parallel machin loop plan speci part nal output comput loop execut servic manag resourc system carri loop plan gener loop plan servic primari featur loop execut servic abil integr data retriev process wide varieti applic achiev push process oper storag manag allow process oper access buer use hold data arriv disk result system avoid one level copi would need layer architectur storag manag process belong dierent layer dataset adr partit set logic disk block achiev high bandwidth data retriev size logic disk block multipl size physic disk block system chosen tradeo reduc disk seek time minim unnecessari data transfer disk block consist one object unit io commun process loop processor progress follow three phase 1 initi output disk block possibl replic processor alloc space memori initi 2 local reduct input disk block local disk processor retriev aggreg output disk block 3 global combin necessari result comput processor phase 2 combin across processor comput nal result output disk block adr runtim support develop set modular servic implement c adr allow custom applic specic process ie map aggreg function leverag common applic provid support common oper memori manag data retriev schedul process across parallel machin custom adr current achiev class inherit customiz servic adr provid base class virtual function expect implement deriv class ad applicationspec entri modular servic requir denit class deriv adr base class servic provid appropri implement virtual function current exampl data intens applic implement adr includ titan 9 satellit data process virtual microscop 16 visual analysi microscopi data coupl multipl simul water contamin studi 23 4 java extens data intens comput section describ dialect java chosen express data intens comput though propos use dialect java sourc languag compil techniqu develop larg independ java also applic suitabl extens languag c c fortran 90 41 dataparallel construct borrow two concept objectori parallel system like titanium 36 hpc 5 concurr aggreg 11 interfac reducinterfac f object class implement interfac reduct variabl public class vmpixel f char colors3 void initi f aggreg function void accumvmpixel apixel int avgf f public class vmpixelout extend vmpixel implement reducinterfac public class vmscope f static int static int ydimen static data declar static static static new vmpixelvmslid public static void mainstr arg f int lowendsubsamp foreachp outputdomain f main comput loop foreachp querybox f fig 1 exampl code domain rectdomain collect object type rect domain stricter denit sens object belong collect coordin associ belong prespeci rectilinear section domain foreach loop iter object domain rectdomain properti order iter uenc result associ comput iter perform parallel also extend semant foreach includ possibl updat reduct variabl explain later introduc java interfac call reducinterfac object class implement interfac act reduct variabl 18 semant reduct variabl analog use version 20 high perform fortran hpf2 18 hpc 5 reduct variabl properti updat insid foreach loop seri oper associ commut furthermor intermedi valu reduct variabl may use within loop except selfupd 42 exampl code figur 1 outlin exampl code chosen extens code show essenti comput virtual microscop applic 16 larg digit imag store disk imag thought two dimension array collect object element collect denot pixel imag pixel compris three charact denot color point imag interact user suppli two import piec inform rst bound box within two dimension box impli area within origin imag user interest scan assum bound box rectangular speci provid x coordin two point rst 4 argument provid user integ togeth specifi point lowend hiend second inform provid user subsampl factor integ denot subsamp subsampl factor tell granular user interest view imag subsampl factor 1 mean pixel origin imag must display subsampl factor n mean n 2 pixel averag comput output pixel comput kernel simpl first querybox creat use speci point lowend hiend pixel origin imag fall within querybox read use increment valu correspond output pixel sever advantag associ specifi analysi process multidimension dataset fashion program specifi comput assum singl processor memori also assum data avail array object refer persist storag respons compil runtim system locat individu element array disk also respons compil invok runtim system optim resourc usag 43 restrict loop primari goal compil analyz optim perform compiletim transform gener code adr runtim system foreach loop satisfi certain properti assum standard semant parallel loop reduct languag like high perform fortran hpf 18 hpc 5 requir java thread spawn within loop nest memori locat read written insid loop nest may touch anoth concurr thread compil also assum java except rais loop nest iter loop reorder without chang languag semant one potenti way enabl use bound check optim 25 5 compil analysi section rst describ compil process given dataparallel data intens loop canon form describ interprocedur program slice use extract number function pass runtim system 51 initi process loop consid dataparallel loop dialect java present section 4 memori locat modi loop element collect object temporari variabl whose valu use iter loop subsequ comput memori locat access loop either element collect valu may replic processor start execut loop purpos discuss collect object whose element modi loop refer left hand side lh collect collect whose element read loop consid right hand side rh collect function use access element collect object loop refer subscript function denit 1 consid two lh collect two rh collect two collect call congruent subscript function use access two collect loop ident layout partit two collect ident ident layout mean element ident indic put togeth disk block collect ident partit mean disk block contain element ident indic collect resid processor consid loop multipl distinct subscript function use access rh collect lh collect subscript function known compiletim tile output manag disk access maintain high reus local go dicult task runtim system particular current implement adr support case therefor perform loop ssion divid origin loop set loop lh collect new loop congruent rh collect congruent describ loop ssion perform initi focu lh collect updat dierent statement loop perform loop ssion lh collect access new loop congruent sinc focus loop loopcarri depend perform loop ssion straightforward exampl transform shown figur 2 part focu new loop lh collect congruent rh collect may congruent two rh access loop congruent three possibl 1 two collect use calcul valu element dierent lh collect case loop ssion perform trivial 2 two collect z use calcul valu element lh collect lh collect x howev comput follow op op j case loop ssion perform element xfi updat use oper op valu gi zhi dierent loop exampl transform shown figur 2 part b 3 two collect z use calcul valu element lh collect unlik case oper use ident exampl case case need introduc temporari collect object copi collect z collect temporari collect access use subscript function exampl transform shown figur 2 part c seri loop ssion transform origin loop replac seri loop properti loop lh collect access subscript function rh collect also access subscript function howev subscript function access lh collect may dierent one use access rh collect foreach p box f foreach p box f foreach p box f b foreach p box f foreach p box f foreach p box f c foreach p box f foreach p box f foreach p box f fig 2 exampl loop fission transform 1 l r op om l r op fig 3 loop canon form 511 discuss strategi perform loop ssion lh collect access subscript function rh collect access subscript function clearli best suit class applic particularli stencil comput may result sever access disk block howev class data intens reduct focus strategi work extrem well simpli later loop execut futur incorpor techniqu parallel databas join oper loop execut allevi need perform loop ssion case 512 terminolog loop ssion focu one individu loop time introduc notat loop use present solut terminolog present illustr exampl loop figur 3 domain iter iter denot r let n rh collect object read loop denot similarli let lh collect written loop denot denot subscript function use access right hand side collect sr subscript function use access left hand side collect l int fig 4 slice subscript function left aggreg function right given point r rang loop element l r output collect updat use one valu 1 scalar valu program denot function use creat valu use later updat element output collect oper use perform updat op 52 slice base interprocedur analysi primarili concern extract three set function rang function r subscript function sr l aggreg function similar inform often extract variou dataparallel fortran compil one import dierenc work objectori languag java signicantli dicult ana lyze mainli objectori program methodolog frequent lead small procedur frequent procedur call result analysi across multipl procedur may requir order extract rang subscript aggreg function use techniqu interprocedur program slice extract three set function initi give background inform program slice give refer show program slice perform across procedur boundari presenc languag featur like polymorph alias except 521 background program slice basic denit program slice follow given slice criterion x program point program x variabl program slice subset statement program statement execut input produc valu variabl x program point origin program basic idea behind algorithm comput program slice follow start statement p program trace statement p data control depend add slice repeat statement alreadi includ slice statement ad slice adr pt outpoint2 adr pt lowend2 int return outpoint void accumulateadr box current block adr box current tile adr box querybox f current blockintersectquerybox adr pt inputpt2 adr pt outputpt2 int projectinputpt outputpt current tile f outputoutputptaccumvscopeinputpt fig 5 compil gener subscript aggreg function slice frequent use softwar develop environ debug program analysi merg two dierent version code softwar mainten test number techniqu present accur program slice across procedur boundari 32 sinc objectori languag frequent use develop product level softwar signic attent paid toward develop slice techniqu presenc objectori featur like object refer polymorph recent java featur like thread except harrold et al tonnela et al particularli focus slice presenc polymorph object refer except 17 28 slice presenc alias refer type also address 3 522 extract rang function need determin rh lh collect object loop also need provid rang function r rh lh collect object comput easili inspect assign statement insid loop function call insid loop collect modi loop consid lh collect collect touch loop consid rh collect comput domain inspect foreach loop look domain loop iter comput slice program use entri loop program point domain variabl 523 extract subscript function subscript function sr l particularli import runtim system determin size lh collect written loop rh disk block collect contribut lh collect function l extract use slice follow consid statement loop modi lh collect focu variabl express use access element lh collect slice criterion choos valu variabl express begin statement lh collect modi function sr extract similarli consid statement loop read rh collect slice criterion use valu express use access collect begin statement typic valu iter includ slice suppos iter p rst encount p slice follow datadepend p instead function return slice use iter input paramet virtual microscop templat present figur 1 slice comput subscript function l shown left hand side figur 4 code gener compil shown left hand side figur 5 origin sourc code rh collect access iter therefor subscript function sr ident function function receiv coordin element rh collect paramet iterpt runtim system return coordin correspond lh element titanium multidimension point support adr class name adr pt also practic command line paramet pass program extract store datastructur runtim system need explicitli read arg array 524 extract aggreg function extract aggreg function look statement loop lh collect modi slice criterion choos valu element collect modi statement begin statement virtual microscop templat present figur 1 one aggreg function slice aggreg function shown figur 4 actual code gener compil shown figur 5 function accum access code obvious part slice shown gener function iter element disk block appli aggreg function element element intersect rang loop current tile function present paramet current block disk block process current tile portion lh collect current alloc memori querybox iter rang loop titanium rectangular domain support runtim adr box detail aggreg function explain present combin compilerruntim loop process 6 combin compil runtim process section explain compil runtim system work jointli toward perform data intens comput 61 initi process input system store inform rh collect object store across disk note appli loop ssion rh collect access loop ident layout partit compil gener appropri adr function analyz metadata collect rang function r subscript function sr comput list disk block access loop domain rh collect access loop sr r note disk block includ list necessari element disk block access loop howev initi plan phase focu list disk block assum model parallel data intens comput set disk associ node parallel machin consist system like ibm sp cluster workstat let set denot list processor system inform comput runtim system analyz rang function input subscript function metadata collect object given input collect processor set disk block b contain data collect resid disk connect processor intersect sr r disk block b ijk belong set b ij comput inform db ijk denot subset domain sr r resid disk block b clearli union domain cover select disk block cover entir area interest formal term 62 work partit one issu process loop parallel work iter parti tion ie decid iter execut processor work distribut polici use iter perform owner element read iter polici opposit owner comput polici 19 commonli use distribut memori compil owner lh element work iter rational behind approach system commun block rh collect instead replic element lh collect need commun complet comput note assumpt natur loop place requir replac initi loop sequenc canon loop may also increas net commun processor howev consid problem set applic target 63 alloc output buer strip mine distribut rh collect decid perform process decid partit iter accordingli need alloc buer accumul local contribut nal lh object use runtim analysi determin element output collect updat iter perform given processor runtim analysi similar one perform runtim librari execut irregular applic distribut memori machin element updat one processor initi replic processor updat sever dierent strategi alloc buer studi context runtim system 9 select among dierent strategi compil gener code topic futur research memori requir replic output space typic higher avail memori processor therefor need divid replic output buer chunk alloc main memori processor issu strip mine tile use improv cach perform far use simpl strip mine strategi queri runtim system determin avail memori alloc given processor divid lh space block size formal divid lh domain l r set smaller domain call strip fs 1 g sinc lh collect object loop access subscript function strip mine done perform comput processor iter set strip alloc strip n output collect comput local contribut strip alloc next strip facilit comput set rh disk block contribut strip lh 64 map input output use subscript function sr l comput set rh disk block contribut strip lh indic appli function l 1 r db ijk obtain correspond domain lh region output domain disk block contribut toward denot odb ijk db ijk rectangular domain subscript function monoton odb ijk rectangular domain easili comput appli subscript function two extrem corner case subscript function need appli element db ijk result odb ijk domain rectangular domain formal comput set l jl processor j output strip l 65 actual execut comput set l il mark end loop plan phase runtim system use inform actual comput perform processor structur comput shown figur 6 practic comput associ rh disk block retriev disk block overlap use asynchron io oper explain aggreg function gener compil virtual microscop templat present figur 1 shown figur 5 right hand side accumul function output compil captur foreach element part loop execut model shown figur 6 output strip l execut processor alloc initi strip l foreach read block b ijk disk foreach element e db ijk output pt intersect l evalu function global reduct naliz valu l fig 6 loop execut processor runtim system comput set l jl explain previous invok aggreg function loop iter disk block set current compil gener code comput rectangular domain db ijk invoc aggreg function intersect current block queri block result rectangular domain denot box aggreg function iter element box condit project achiev two goal first appli subscript function determin lh element outputpt correspond rh element inputpt second check outputpt belong current tile actual aggreg appli outputpt belong current tile test repres signic sourc ineci compil gener code tile strip current process repres rectangular rh region subscript function monoton intersect box tile perform inner loop fact done hand custom adr virtual microscop 16 perform optim automat topic futur research beyond scope current work 7 current implement experiment result section describ featur current compil present experiment result compar perform compil gener custom three code hand custom version compil implement use publicli avail titanium infrastructur berkeley 36 current compil runtim system implement subset analysi process techniqu describ paper two key limit follow process code rh subscript function ident function also requir domain loop iter rectangular domain subscript function monoton titanium languag explicitli parallel dialect java numer comput could use titanium frontend without perform modic titanium languag includ point rectdomain foreach loop requir purpos concept reducinterfac part titanium languag modic parser requir purpos titanium also includ larg number addit direct requir signicantli dierent semant foreach loop use three templat experi vmscope1 ident code present figur 1 model virtual microscop provid realist digit emul microscop allow user specifi rectangular window subsampl factor version vmscope1 averag color neighbor pixel creat pixel output imag vmscope2 similar vmscope1 except one import dierenc instead take averag pixel pick everi subsamp th element along dimens creat nal output imag thu memori access copi involv templat comput perform bess model comput associ water contamin studi bay estuari comput perform applic determin transport contamin access larg uid veloc dataset gener previou simul virtual microscop averaging103050701 2 4 8 processor execut time compil origin fig 7 comparison compil hand gener version vmscope1 three templat repres data intens applic two import domain digit microscopi scientic simul comput data access associ comput rel simpl handl current prototyp compil moreov access hand code adr custom three templat allow us compar perform compil gener version hand code version whose perform report previous publish work 16 23 experi perform use adr runtim system port cluster dual processor 400 mhz intel pentium node connect gigabit ethernet node 256mb main memori gb intern disk experi perform use 1 2 4 8 node cluster adr runtim system current design assum share noth architectur exploit multipl cpu node therefor one processor node use experi result compar perform compil gener hand custom vmscope1 shown figur 7 microscop imag 19 760 15 360 pixel use sinc pixel applic take 3 byte total 910 mb requir storag imag queri bound box size 10 00010 000 subsampl factor 8 use time taken compil gener version rang 73 second 1 processor 13 second 8 processor speedup 2 4 8 processor 186 332 546 respect time taken hand code version rang 68 second 1 processor 83 second 8 processor speedup 2 4 8 processor 203 409 82 respect sinc code larg io memori bound slightli better linear speedup possibl perform compil gener code lower 7 10 25 38 1 2 4 8 processor respect data see perform compil gener code close hand code one 1 processor case substanti lower 8 processor case care compar compil gener hand code version understand perform factor two code use dierent tile strategi lh collect hand code version irregular strategi use ensur input disk block map entir singl tile compil version simpl regular tile use input disk block map multipl tile shown figur 5 compil gener code perform addit check iter determin lh element intersect tile current process comparison tile strategi use hand code version ensur check alway return true therefor need insert code irregular tile strategi irregular map requir bound box associ disk block actual coordin alloc output tile map need carri rh disk block read memori time requir perform map proport number rh disk block process processor tile sinc output dataset actual quit small experi number rh disk block process processor per tile decreas go larger congur result time requir extra process reduc comparison percentag overhead associ extra check iter perform compil gener version remain unchang dierenc explain compil gener code slower hand code one dierenc perform increas go larger number processor virtual microscop subsampling103050 processor execut time compil origin fig 8 comparison compil hand gener version vmscope2 result compar perform compil gener hand code vmscope2 shown figur 8 code execut dataset queri use vmscope1 time taken compil gener version rang 44 second 1 processor 9 second 1 processor hand code version took 47 second 1 processor nearli 5 second 8 processor speedup compil gener version 203 331 488 2 4 8 processor respect speedup hand code version 238 498 100 2 4 8 processor respect number import observ made first though queri execut vmscope1 vmscope2 templat execut time lower vmscope2 clearli comput perform vmscope2 howev factor less two dierenc execut time show code memori io bound even vmscope1 comput time domin speedup hand code version vmscope2 higher clearli code io memori bound perform compil gener version better 6 1 processor lower 10 2 processor 29 4 processor 48 8 processor dierenc perform dierenc tile strategi use explain previous sinc templat perform comput dierenc condit extra process disk block signic eect overal perform 1 processor case addit process requir disk block becom high compil gener version slightli faster note hand code version develop optim execut parallel system therefor highli tune sequenti case 8 processor case extra cost condit iter becom domin compil gener version therefor compil gener version almost factor 2 slower hand code one bay estuari simul system2060100140 processor execut time compil origin fig 9 comparison compil hand gener version bess result compar perform compil gener hand code version bess shown figur 9 dataset compris grid 2113 element 46080 timestep timestep 4 4byte oat point number per grid element denot simul hydrodynam paramet previous comput therefor memori requir dataset 16 gb bess templat experi perform weight averag 4 valu column speci number timestep number timestep use experi 30000 execut time compil gener version rang 131 second 1 processor 11 second 8 processor speedup 2 4 8 processor 198 553 1175 respect execut time hand code version rang 97 second 1 processor 9 second 8 processor speedup 2 4 8 processor 18 54 107 respect compil gener version slower factor 25 19 24 19 1 2 4 8 processor respect discuss factor behind dierenc perform compil gener hand code bess version vmscope version compil gener bess perform check intersect tile pixel output applic small result hand code version explicitli assum singl output tile compil gener version make assumpt still insert condit amount comput associ iter much higher applic therefor percentag overhead extra test larg vmscope templat second import dierenc compil gener hand code version averag done compil gener code valu ad rst divid total number valu ad comparison hand code version perform summat valu rst perform singl divis percentag overhead independ number processor use believ second factor domin reason dierenc perform two version also explain percentag dierenc perform remain unchang number processor increas perform compil gener code improv perform standard strength reduct optim howev compil need perform optim interprocedur topic futur work averag three templat 1 2 4 8 processor congu ration compil gener version 21 slower hand code one consid high program eort involv manag optim disk access comput parallel machin believ 21 slowdown automat gener code accept applic develop also note previou work area outofcor data intens compil focus evalu eectiv optim comparison hand code version analysi perform dierenc compil gener hand code version point us number direct futur research first need consid sophist tile strategi avoid larg perform penalti associ perform extra test loop ex ecut second need consid advanc optim like interprocedur code motion interprocedur strength reduct improv perform compil gener code 8 relat work work provid highlevel support data intens comput consid develop outofcor java compil compil optim improv io access consid sever project passion project northwestern univers consid sever dierent optim improv local outofcor applic 6 20 optim also implement part fortran compil system support outofcor applic 29 mowri et al shown compil gener prefetch hint improv perform virtual memori system 26 project concentr rel simpl stencil comput written fortran besid use objectori languag work signicantli dierent class applic focu techniqu execut loop particularli target toward reduct oper wherea previou work concentr stencil comput slice base inform extract runtim system allow us handl applic requir complex data distribut across processor disk limit inform access pattern may known compiletim mani research develop aggress optim techniqu java target parallel scientic comput javar javab compil system target parallel comput use java 4 dataparallel extens java consid least two project titanium 36 hp java 7 loop transform techniqu remov redund array bound check develop 12 25 eort also uniqu consid persist storag complex distribut data processor disk use sophist runtim system optim resourc objectori dataparallel compil project also consid data resid persist storag 5 11 30 program slice activ use mani softwar engin applic like program base test regress test debug softwar mainten last two decad 34 area parallel compi lation slice use commun optim pugh rosser 31 transform multipl level indirect da saltz 15 awar previou work use program slice extract inform runtim system sever research project focus parallel irregular applic comput uid dynam code irregular mesh spars matrix comput research demonstr develop runtim librari compil analysi place runtim call irregular code compil ecient execut 2 21 24 35 project relat eort sens compil also heavili use runtim system howev project also signicantli dierent languag need handl alias object refer applic involv disk access persist storag runtim system need interfac work dierent sever runtim support librari le system develop support ecient io parallel environ 13 14 22 33 also usual provid collect io interfac process node cooper make singl larg io request work dierent two import way first support much higher level program involv compil second target runtim system adr also dier system sever way comput integr part adr framework collect io interfac provid mani parallel io system data process usual begin entir collect io oper complet also data placement algorithm optim rang queri also integr part adr framework 9 conclus paper address problem express data intens comput highlevel languag compil code ecient manag data retriev process parallel machin develop dataparallel extens java express import class applic use extens programm specifi comput assum singl processor memori conceptu compil design two major new idea first shown loop ssion follow interprocedur program slice use extract import inform gener objectori dataparallel loop techniqu use compil use runtim system optim local commun second shown compil runtim system use inform ecient execut data intens reduct comput techniqu process loop independ sourc languag techniqu implement prototyp compil built use titanium frontend use three templat area digit microscopi scientic simul evalu perform compil compar perform compil gener code perform code develop custom runtim system adr manual experi shown perform compil gener code averag 21 slower hand code one case within factor 2 believ result establish approach eectiv consid high program eort involv manag optim disk access comput parallel machin believ 21 slowdown automat gener code accept applic develop also note previou work area outofcor data intens compil focus evalu eect optim comparison hand code version believ consid sophist tile strategi optim like interprocedur code motion strength reduct perform compil gener code improv acknowledg grate chialin chang anurag acharya tahsin kurc alan sussman member adr team develop runtim system develop hand custom version applic help us ex periment mani fruit discuss cours work r angelo de marzo interprocedur compil irregular applic distribut memori machin prototyp java restruct compil distribut pc model compil strategi outofcor data parallel program customiz parallel databas multidimension data infrastructur build parallel databas system multidimension data alan suss man concurr aggreg ca vesta parallel inputoutput characterist scalabl parallel applic paul havlak virtual microscop high perform fortran forum compil fortran mimd distributedmemori machin improv perform outofcor comput compil global namespac parallel loop distribut execut coupl multipl simul via high perform customiz databas system exploit spatial regular irregular iter applic automat compilerinsert io prefetch outofcor applic nasa goddard distribut activ archiv center daac compil support outof core array parallel machin objectori languag iter space slice applic commun optim speed slice survey program slice techniqu tr dynam slice presenc unconstrain pointer compil fortran mimd distributedmemori machin objectori languag speed slice model compil strategi outofcor data parallel program interprocedur compil irregular applic distribut memori machin inputoutput characterist scalabl parallel applic index array flatten program transform vesta parallel file system automat compilerinsert io prefetch outofcor applic flow insensit c pointer polymorph analysi applic slice iter space slice applic commun optim reusedriven interprocedur slice concurr aggreg ca passion distribut memori compil design spars problem compil global namespac parallel loop distribut execut titan improv perform outofcor comput infrastructur build parallel databas system multidimension data exploit spatial regular irregular iter applic compil support outofcor array parallel machin