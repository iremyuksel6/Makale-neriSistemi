use ticket enforc serializ multidatabas transact enforc global serializ multidatabas environ multidatabas transact manag must take account indirect transit conflict multidatabas transact caus local transact conflict difficult resolv behavior even exist local transact known multidatabas system overcom difficulti propos incorpor addit data manipul oper subtransact multidatabas transact show oper creat direct conflict subtransact particip local databas system indirect conflict resolv even multidatabas system awar exist base approach introduc optimist conserv multidatabas transact manag method requir local databas system ensur local serializ propos method violat autonomi local databas system guarante global serializ prevent multidatabas transact serial differ way particip databas system refin method also propos multidatabas environ particip databas system allow schedul cascadeless transact analog execut serial order particular show forc local conflict elimin rigor local system local cascadeless simplifi design global schedul local strict offer signific advantag cascadeless b introduct ultidatabas system mdb 1 2 facil support global applic access data store multipl databas assum access databas control autonom possibl heterogen local databas system ldbss mdb architectur figur 1 allow local transact global transact coexist local transact submit directli singl ldb multidatabas global transact channel mdb interfac object multidatabas transact manag avoid inconsist retriev preserv global consist presenc multidatabas updat object difficult achiev mdbss homogen distribut databas system addit problem caus data distribut distribut databas georgakopoulo distribut object comput de partment gte laboratori incorpor 40 sylvan road ms62 waltham 02254 rusinkiewicz depart comput scienc univers houston houston sheth bellcor 444 hoe lane piscataway nj 08854 g global transact base data data base base data local transact local transact fig 1 multidatabas system architectur system solv transact manag mechan mdbss must also cope heterogen autonomi particip ldbss import heterogen perspect transact manag dissimilar transact manag primit relat error detect facil avail ldb interfac ii concurr control commit recoveri scheme use ldbss local autonomi fundament assumpt mdb concept autonomi specifi degre independ control ldbss data sinc total autonomi mean lack cooper com munic henc total isol less extrem notion ldb autonomi propos literatur 3 4 2 5 garciamolina kogan 4 explor concept node site autonomi context distribut system veijalainen 3 classifi ldb autonomi requir design autonomi execut autonomi commun autonomi addit notion autonomi sheth larson 2 identifi addit ldb properti preserv associ au tonomi paper consid ldb autonomi violat follow two condit satisfi 1 ldb modifi way 2 local transact submit ldb need modifi way eg take account ldb particip mdb multidatabas environ serializ local schedul suffici maintain multidatabas consist ensur global serializ ieee transact knowledg violat local schedul must valid mdb howev local serial order neither report local databas system determin control submiss global subtransact observ execut order determin serial order global transact ldb mdb must deal direct conflict may exist subtransact multidatabas transact also indirect conflict may caus local transact sinc mdb inform exist behavior local transact determin execut global local transact global serializ difficult exampl illustr problem present next section sever solut propos literatur deal problem howev satisfactori main problem major propos solut provid way assur oper execut order global tran action control mdb reflect local serial order global transact produc ldbss exampl possibl global transact g execut commit ldb anoth global transact g j local serial order revers paper address problem introduc techniqu disallow local schedul enabl mdb determin serial order global transact particip ldb method violat local autonomi applic ldbss ensur local serializ abil unlik solut propos literatur techniqu appli ldbss provid interfac level setori queri updat eg sql quel establish method determin local serial order global transact ldbss introduc optimist conserv method enforc global serializ addit propos effici refin method multidatabas environ particip databas system use ca cadeless rigor schedul 6 7 show multidatabas schedul simplifi multidatabas environ local system cascadeless simplif possibl ldbss use one mani common schedul ensur transact serial order analog commit order show multidatabas environ local serial order global transact determin control commit order particip ldbss although address problem enforc global serializ context multidatabas sy tem solut describ paper appli distribut object manag system 8 paper organ follow section ii identifi difficulti maintain global serializ mdbss review relat work multidatabas model assumpt requir toward local databas manag system discuss section iii section iv introduc concept ticket propos optimist ticket method otm multidatabas transact manag guarante global serializ otm requir ldbss ensur local serializ section v introduc conserv ticket method ctm also requir global transact take ticket free global restart variat otm ctm use simpler global schedul work multidatabas system local system cascadeless present section vi section vii introduc concept implicit ticket propos implicit ticket method itm requir subtransact ticket work multidatabas environ particip ldbss rigor integr method mix multidatabas schedul discuss section viii final section ix summar result ii problem maintain global serializ relat work mani algorithm propos transact manag distribut system directli applic mdbss possibl indirect conflict caus local transact illustr point consid figur 2 depict execut two multidatabas transact g 1 g 2 local transact transact g read data object draw arc g arc g denot g write exampl global transact subtransact ldbss ldb 1 g 1 read g 2 later write therefor g 1 g 2 directli conflict ldb 1 serial order transact ldb 2 g 1 g 2 access differ data item g 1 write c later g 2 read b henc direct conflict g 1 g 2 ldb 2 ever sinc local transact 1 write b read conflict indirectli ldb 2 indirect conflict caus presenc local transact case serial order transact ldb 2 becom g multidatabas environ mdb control execut global transact oper issu therefor mdb detect direct conflict involv global transact conflict g 1 g 2 ldb 1 figur 2 howev mdb inform local transact indirect conflict may caus exampl sinc mdb inform local transact 1 detect indirect conflict g 1 g 2 ldb 2 although local schedul serializ global schedul nonserializ ie global order involv g 1 g 2 1 compat local schedul earli work area problem caus indirect conflict fulli recogn 9 gligor popescuzeletin state schedul multidatabas transact correct multidatabas transact georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 3 co ae ae ae ae ae ae ae ae fig 2 serial execut multidatabas transact may violat serializ rel serial order ldb di rectli conflict breitbart silberschatz shown 10 correct criterion insuffici guarante global serializ presenc local transac tion prove suffici condit global consist requir multidatabas transact rel serial order site execut solut problem concurr control mdbss propos literatur divid sever group observ execut global transact ldb 11 execut order global transact determin rel serial order ldb exampl ldb 2 figur 2 global transact g 1 execut g 2 g 2 preced g 1 local serial order determin local conflict transact logar sheth 12 propos use command local oper system dbm snoop ldb approach may alway possibl without violat autonomi ldb control submiss execut order global transact alonso et al propos use site lock altruist lock protocol 13 prevent undesir conflict multidatabas transact given pair multidatabas transact g 1 g 2 simplest altruist lock protocol allow concurr execut g 1 g 2 access differ ldbss ldb g 1 g 2 need access g 2 access g 1 finish execut du et al 14 shown global serializ may violat even multidatabas transact submit serial ie one complet correspond ldb scenario figur 2 illustr problem g 1 submit site execut complet commit g 2 submit execut nevertheless global consist may violat limit multidatabas membership ldbss use strict schedul disallow local execut serializ strict approach place addit restrict execut global local transact particip ldb solut categori call 2pc agent method propos 15 2pc agent method assum particip ldbss use twophas lock 2pl 16 schedul produc strict 17 schedul basic idea method strict ldbss permit local execut violat global serializ howev even local strict suffici illustr problem consid ldbss figur 2 follow local schedul schedul ldb 1 serial ldb 2 g 1 g 2 abl obtain readlock read b next g 2 releas read lock b acquir lock g 1 abl obtain write lock updat b g 2 commit execut allow 2pl strict 2pl satisfi transact hold writelock end therefor schedul strict allow 2pl howev global serializ violat assum conflict among global transact whenev execut site idea use logar sheth 12 context distribut deadlock mdbss breitbart et al 18 concurr control amoco distribut databas system add approach base notion site graph add method global transact issu subtransact ldb undirect edg ad connect node ldbss particip execut global transact addit edg global transact creat cycl graph multidatabas consist preserv global transact allow proceed otherwis inconsist possibl global transact abort site graph method violat local autonomi correctli detect possibl conflict multidatabas transact howev use concurr control signific drawback first degre concurr allow rather low multidatabas transact execut ldb concurr second sinc site graph method use undirect graph repres conflict cycl graph correspond global nonserializ schedul third importantli mdb use site graph way determin safe remov edg commit global transact edg remov polici use serial graph test algorithm 17 applic case sinc site graph undirect illustr problem consid ldbss figur 2 follow local schedul perform oper ldbss site graph correspond schedul contain cycl g 1 g 2 resolv cycl site graph method abort g 2 suppos edg correspond g 1 remov site graph immedi follow commit g 1 g 2 restart commit g 1 allow commit sinc cycl site graph suppos g 2 commit local transact 1 issu w commit execut oper result schedul shown figur 2 schedul local serializ global nonserializ therefor edg correspond global transact remov site graph immedi follow commit global serializ may violat site graph method may work correctli remov edg correspond commit transact delay howev concurr sacrif scenario repres figur 2 edg correspond g 1 remov commit local transact 1 howev mdb way determin time commit even exist local transact 1 problem recogn 6 7 modifi local databas system andor ap plicat pu 19 shown global serializ ensur ldbss present local serial order mdb sinc tradit dbmss usual provid serial order pu suggest modifi ldbss provid pon vilarem 20 propos modifi exist applic transact clude local one channel multidatabas interfac method mention preserv multidatabas consist expens partial violat local autonomi reject serializ correct crite rion concept saga 21 22 propos deal longliv transact relax transact atom isol quasiserializ 23 assum valu depend exist among databas indirect conflict ignor stransact 24 flexibl transact 25 use transact semant allow nonserializ execut global transact solut violat ldb autonomi use whenev correct guarante offer ap plicabl paper assum global schedul must serializ iii multidatabas system model global transact consist transact begin oper ation partial order collect read write op erat commit abort rollback oper follow discuss refer collect read write oper perform transact databas oper use term transact manag oper refer nondatabas oper perform mdb process global transact g fol low first mdb decompos g subtransact decomposit g base locat data object g access exampl g data object ldb mdb issu subtransact carri oper g ldb assum subtransact gener mdb satisfi follow requir 1 one subtransact per ldb global transact 2 like global transact subtransact consist databas oper transact manag op erat subtransact oper execut local ldb subtransact may perform preparetocommit oper issu commit ldb provid oper interfac 3 subtransact visibl preparedtocommit state say transact enter preparedtocommit state 26 complet execut databas oper leav state commit abort time updat resid privat workspac becom perman databas transact commit preparedtocommit state visibl applic program case mdb decid whether transact commit abort process g mdb submit subtransact g correspond ldbss ensur logic indivis action commit abort g consist carri particip site mdb use twophas commit 2pc 26 protocol sinc ldbss may resid remot site mdb agent process associ ldb submit gs oper ldb handl exchang synchron messag mdb local databas manag system assumpt assum ldb provid follow featur without requir modif 1 permit serializ recover 17 schedul 2 ensur failur atom durabl transac tion subtransact fail abort dbm automat restor databas state produc last local commit transact 3 support begin commit abort rollback transact manag oper subtransact either issu commit instal updat databas issu abort roll back effect 4 notifi transact program action take unilater particular assum dbm interfac provid inform subtransact program unilater abort ldb exampl resolv deadlock dbm may roll back one eg youngest transact involv notifi kill transact rollback eg set flag program georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 5 commun area featur support major commerci dbmss includ 1 db2 ingr oracl sybas furthermor featur describ compli sql 27 rda 28 standard dbmss use high level languag eg sql support setori queri updat discuss model global transact subtransact local transact collect read write oper chosen readwrit transact model simplifi discuss problem enforc global serializ multidatabas environ use model describ correspond solut howev use readwrit model neither limit gener solut propos paper make difficult appli ldb support interfac level setori queri updat illustr includ appendix discuss implementationrel issu ldb use sql interfac b preparedtocommit state multidatabas envi ronment earlier section iii list assumpt subtransact visibl preparedtocommit state mani databas manag system design use clientserv architectur eg sybas provid visibl preparedtocommit state directli particip multidatabas system hand ldb explicitli provid state mdb simul 29 30 simul preparedtocommit state subtran action mdb must determin whether databas oper issu subtransact success complet one way accomplish forc handshak oper ie mdb must submit oper subtransact one time wait complet previou databas oper submit next one altern rda standard 28 allow asynchron submiss sever databas oper provid mechan inquir statu consid state subtransact success finish oper neither commit abort distinguish state prepar tocommit state refer simul preparedto commit state basic differ prepar tocommit state simul preparedtocommit state transact simul state firm assur dbm unilater abort howev databas manag system mention product vendor paper done background inform provid exampl technolog illustr purpos constru either posit neg commentari product vendor neither inclus product vendor paper omiss product vendor interpret indic posit opinion product vendor part author bellcor reader encourag make independ determin product marketplac whether particular featur meet individu need unilater abort transact enter simul preparedtocommit state 2 transact state involv deadlock success perform oper acquir lock true ldbss use abort restart resolv conflict exampl timestamp order 17 abort transact issu oper conflict oper perform earlier younger transact therefor timestamp order schedul never abort transact success issu oper enter simul preparedtocommit state behavior optimist concurr control protocol 32 similar transact ever abort pass valid dbmss abort transact state concurr control recoveri reason possibl argu dbmss must set timeout avoid idl transact hold resourc forev howev due difficulti determin whether subtransact idl long timeout set dbmss outstand oper eg sybas oracl therefor last read write oper subtransact complet mdb certain subtransact enter state practic differ prepar tocommit state requir 2pc rest paper distinguish whether visibl preparedtocommit state simul provid local system addit issu relat problem effect provid preparedtocommit state discuss 33 iv optimist ticket method otm section describ method multidatabas transact manag call otm violat ldb autonomi guarante global serializ particip ldbss ensur local serializ propos method address two complementari issu 1 mdb obtain inform rel serial order subtransact global transact ldb 2 mdb guarante subtransact multidatabas transact rel serial order particip ldbss follow discuss consid site failur commit recoveri multidatabas transact discuss among other 34 35 30 33 determin local serial order otm use ticket determin rel serial order subtransact global transact ldb ticket logic timestamp whose valu store regular data object ldb avoid techniqu 31 may abort transact hold lock transact request lock polici awar may abort transact simul preparedtocommit state sinc use limit commerci dbmss consid paper assum transact simul preparedtocommit state abort ldb 6 ieee transact knowledg subtransact global transact requir issu takeaticket oper consist read valu ticket ie rticket increment ie wticket regular data manipul opera tion valu ticket oper ticket issu ldb subject local concurr control databas constraint singl ticket valu per ldb need takeaticket oper violat local autonomi modif local system requir subtransact global transact take ticket 3 local transact affect theta theta z z z z z z z z bn phi theta theta theta theta theta c flfig 3 effect takeaticket approach figur 3 illustr effect takeaticket process exampl figur 2 ticket data object denot 1 2 respect ldb 1 1 valu obtain subtransact g 1 g 2 reflect rel serial order schedul permit local concurr control ldb 1 ldb 2 local transact 1 caus indirect conflict g requir subtransact take ticket forc addit conflict g 1 g 2 addit ticket conflict caus execut ldb 2 becom local nonserializ therefor local schedul r r g2 b wt1 b allow local concurr control ie subtransact g 1 subtransact g 2 1 block abort hand local schedul ldb 2 exampl 3 may creat hot spot ldbss howev sinc subtransact multidatabas transact local ldb transact compet ticket consid major problem affect perform method r g2 b wt1 b ticket obtain g 1 g 2 would reflect rel serial order case local schedul would permit local concurr control ldb 2 although transact exampl take ticket begin execut transact may take ticket time lifetim without affect correct takeaticket approach theorem 1 formal prove ticket obtain subtransact ldb guarante reflect rel serial order theorem 1 ticket obtain subtransact multidatabas transact determin rel serial order proof let g g j subtransact global transact g g j respect ldb without loss gener assum g take ticket preced r g j ticket local execut order sinc subtransact take ticket first increment ticket valu follow execut order possibl howev among execut e 3 serializ allow ldb concurr control therefor increment ticket valu g j read g j obtain larger ticket g show g serial g j suffici point oper take increment ticket issu first g g j creat direct conflict direct conflict forc g g j serial accord order take ticket specif anoth direct conflict g g j indirect conflict caus local transact result schedul serializ g g j allow commit case g serial g j reflect order ticket howev direct conflict indirect conflict ure 4 ticket conflict creat cycl local serial graph henc execut becom nonserializ allow ldb concurr control therefor indirect conflict resolv use ticket local concurr control even mdb detect exist 2 implement ticket takeaticket oper ldbss use sql describ appendix b enforc global serializ maintain global serializ otm must ensur subtransact global transact rel serial order correspond ldbss 10 sinc rel serial order subtransact ldb reflect valu ticket basic idea otm allow sub georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 7 oe oe oe oe oe oe oe oe au delta oe oe oe theta theta theta c b transact conflict ticket conflict fig 4 effect ticket conflict otm transact global transact proceed commit ticket valu rel order particip ldbss requir subtransact global transact visibl prepar tocommit state otm process multidatabas transact g follow initi set timeout g submit subtransact correspond ldbss subtransact allow interleav control ldbss enter preparedtocommit state enter preparedtocommit state wait otm valid g valid perform use global serial graph gsg test 4 node gsg correspond recent commit global tran action pair recent commit global transact g c contain direct edg g c least one subtransact g c serial obtain smaller ticket subtransact g c ldb strategi node edg remov gsg present lemma 1 initi gsg contain cycl valid global transact g otm first creat node g gsg attempt insert edg gs node node correspond everi recent commit multidatabas transact g c ticket obtain 4 valid test certif scheme propos 19 also use valid global transact subtransact g ldb smaller larger ticket subtransact g c edg g ad gsg edg ad without creat cycl gsg g valid otherwis g pass valid node togeth incid edg remov graph g restart valid test enclos singl critic section 5 g also restart least one ldb forc subtransact g abort local concurr control reason eg local deadlock timeout expir eg global deadlock one particip ldbss use block mechan concurr con trol timeout mention necessari resolv global deadlock timeout assign global transact g base conserv estim expect execut time g difficult estim expect durat global transact g altern solut set differ timeout subtransact g latter timeout strategi combin waitfor graph wfg wfg maintain mdb ldbss node cycl found wfg cycl involv ldbss use block scheme synchron conflict transact deadlock possibl mdbss maintain wfg resolv global deadlock set timeout oper issu ldbss involv wfg cycl addit use block enforc local serializ recover paper discuss timeout strategi choic timeout strategi effect correct otm decentr deadlockfre refin optimist ticket method describ 38 mention serial graph must contain node correspond recent commit global transact provid condit safe remov transact node serial graph lemma 1 node correspond commit transact g c safe remov serial graph incom edg transact activ time g c commit either commit abort node remov graph edg incid node also remov proof transact node particip serial cycl must least one incom edg transact start commit g c take ticket g c add incom edg node g c sinc assum g c incom edg transact activ time g c 5 includ valid test critic section origin propos kung robinson 32 sever scheme propos literatur eg parallel valid scheme 32 36 deal possibl bottleneck caus critic section although could adopt scheme evid allow throughput perform transact valid serial ie within critic section otm commerci implement optimist concurr control protocol chosen serial valid parallel valid similar reason eg datacycl 37 commit finish node correspond g c never involv serial cycl therefor safe remov serial graph 2 follow theorem prove correct otm theorem 2 otm guarante global serializ follow condit hold 1 concurr control mechan ldbss ensur local serializ 2 multidatabas transact one subtransact ldb 3 subtransact visibl preparedtocommit state proof alreadi shown order subtransact take ticket reflect rel serial order theorem 1 ticket obtain global transact site execut otm perform global serial test describ earlier section global transact pass valid allow commit rel serial order particip ldbss lemma 1 show serial test involv recent commit transact suffici guarante global serializabilityc effect ticket time perform otm otm process number multidatabas transact concurr even conflict multipl ldb howev sinc otm forc subtransact multidatabas transact directli conflict ticket may caus subtransact get abort block ticket conflict figur 4 b sinc subtransact may take ticket time lifetim without affect correct otm optim base characterist subtransact eg number time type data manipul oper issu semant possibl ex ampl global transact conflict directli ldb need take ticket determin rel serial order suffici observ order issu conflict oper choos right time take ticket lifetim subtransact minim synchron conflict among subtransact exampl ldb use 2pl appropri take ticket immedi subtransact enter prepar tocommit state show effect convent consid ldb use 2pl local concurr control figur 5 2pl requir subtransact set write lock ticket increment valu given four concurr subtransact 1 interfer g 2 take ticket commit g 1 take ticket similarli g 1 interfer g 3 g 1 take ticket commit 3 take ticket howev g 4 attempt take ticket g 1 taken ticket g 1 commit releas ticket lock get block g 1 com qk ae z lock abort valid parallel serial abort abort abort c prefer ticket ldb use occ b prefer ticket ldb use prefer ticket ldb use 2pl fig 5 prefer ticket ldbss mit ticket valu alway reflect serial order subtransact multidatabas transact ticket conflict minim g 1 take ticket close possibl commit time ldb use timestamp order 17 figur 5 b better obtain ticket subtransact begin execut assign timestamp tsg 1 subtransact g 1 begin execut let g 2 anoth subtransact tsg 1 ticket obtain g 1 larger valu ticket 2 g 1 abort clearli g 2 increment ticket valu g 1 sinc g 2 younger g 1 either r g1 ticket w g1 ticket conflict w g2 ticket 1 abort henc g 1 allow increment ticket valu g 2 similarli g 2 read ticket georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 9 fore increment g 1 issu w g1 ticket conflict r g2 ticket oper issu 1 abort therefor given tsg 1 1 take ticket g 2 g 1 abort henc better subtransact take ticket close possibl point assign timestamp ie begin execut anoth signific optim use complet elimin ticket ldbss use schedul let g 1 g 2 pair subtransact take ticket sinc transact control schedul assign timestamp time submiss time complet first databas oper global schedul ensur g 1 obtain local timestamp smaller timestamp g 2 delay submiss g 2 g 1 complet first databas oper use techniqu global schedul ensur submiss order subtransact determin local serial order g 1 serial g 2 local system final ldb use optimist concurr control best time subtransact take ticket figur 5 c transact control occ read phase follow valid phase occ use transact readset writeset valid transact transact pass valid enter write phase thu subtransact 1 read ticket valu start serial parallel valid increment end phase anoth transact g 2 abl increment ticket meantim g 1 pass valid restart basic advantag otm requir local system ensur local serializ optimist global schedul impos restrict local execut global transact main disadvantag follow ffl optimist schedul global restart possibl ffl global schedul must maintain gsg ffl ticket introduc addit conflict global transact may conflict otherwis follow three section describ solut address issu respect v conserv ticket method ctm otm affect way ldbss handl execut global transact point subtransact enter preparedtocommit state optimist global schedul base uncontrol local execut global subtransact otm easier implement case allow concurr conserv schedul howev sinc optimist global schedul allow global transact take ticket order suffer global restart caus outoford ticket oper explain problem global restart consid situat global transact g obtain ticket anoth global transact g j ldb anoth ldb g j abl obtain ticket g mdb schedul abort restart either g g j disallow global nonserializ execut ticket opera tion specif multidatabas system particip ldbss use block local concurr control incompat order g g j take ticket differ ldbss caus global deadlock resolv global deadlock otm schedul abort restart global transact whose timeout expir first ldbss use block local concurr control incompat execut order ticket oper caus cycl gsg case global transact enter global valid last reject otm schedul abort section describ ctm method multidatabas transact manag elimin global restart like otm ctm requir subtransact global transact take ticket correspond ldbss howev unlik otm ctm control order subtransact take ticket avoid global restart ctm ensur rel order global transact take ticket particip ldb ctm requir subtransact global transact visibl preparedtotakeaticket state addit visibl preparedtocommit state subtransact enter preparedtotakeaticket state success complet execut databas oper preced takeaticket oper leav state read ticket valu visibl preparedtotakeaticket state provid multidatabas system employ techniqu simul preparedtocommit state exam ple one way make preparedtotakeaticket state subtransact visibl forc handshak databas oper preced takeaticket oper oper preced takeaticket oper complet success mdb certain subtransact enter preparedtotakeaticket state say global transact becom prepar take ticket subtransact enter preparedtotakeaticket state ctm process set g global transact follow initi ctm set timeout global transact g submit subtransact correspond ldbss subtransact global transact allow interleav control ldbss enter preparedtotakea ticket state without loss gener suppos subtransact global transact g 1 g g becom prepar take ticket timeout expir furthermor suppos subtransact g 2 enter preparedtotakeaticket state subtransact g 1 becom prepar take ticket ie g 1 becom prepar take ticket subtransact g 3 becom prepar take ticket subtransact g 2 enter prepar totakeaticket state ie g 2 becom prepar take ticket g 3 subtransact g k enter preparedtotakeaticket state subtransact g becom prepar take ticket ie g becom prepar take ticket g k ctm allow subtransact global transact g 1 take ticket follow order subtransact g 1 take ticket subtransact g 2 subtransact g 2 take ticket subtransact g 3 subtransact g kgamma1 take ticket subtransact g k global transact allow commit subtransact success take ticket report preparedtocommit state hand mdb abort restart multidatabas transact subtransact report preparedtocommit state timeout expir local optim discuss section ivc also appli ctm theorem 3 ctm guarante global serializ free global restart follow condit 1 concurr control mechan ldbss ensur local serializ 2 multidatabas transact one subtransact ldb 3 subtransact visibl preparedtotakea ticket visibl preparedtocommit state proof without loss gener suppos global transact set g becom prepar take ticket follow control ctm g 1 take ticket g 2 take ticket g 2 take ticket g 3 take ticket g k sinc ctm ensur rel order subtransact global transact take ticket particip ldb proven order subtransact take ticket reflect rel serial order theorem 1 ctm guarante global serializ avoid global restart due ticket conflict 2 anoth import properti ctm requir gsg henc global ctm schedul simpler global otm schedul optimist schedul requir gsg describ next vi cascadeless ticket method ensur correct presenc failur simplifi recoveri concurr control transact manag mechan use databas manag system often ensur serializ recover 17 also one properti defin ffl transact manag mechan cascadeless 17 transact may read data object written commit transact ffl transact manag mechan strict 17 data object may read written transact previous wrote commit abort mani commerci dbmss allow strict schedul elimin cascad abort also abl ensur databas consist imag use databas recoveri perspect multidatabas schedul cascadeless ldbss import use elimin gsg global serial graph test requir otm take advantag cascadeless ldbss introduc refin otm call ca cadeless otm like otm cascadeless otm ensur global serializ prevent subtransact multidatabas transact serial differ way correspond ldbss unlik otm cascadeless otm take advantag fact ldbss permit cascadeless schedul global transact take ticket commit unless ticket rel order ldbss cascadeless otm process global transact g follow initi mdb set timeout g submit subtransact appropri ldbss subtransact allow interleav control ldbss enter preparedtocommit state subtransact g take ticket report preparedtocommit state cascadeless otm allow g commit otherwis mdb abort restart global transact subtransact report preparedtocommit state timeout g expir local optim mention section ivc also appli cascadeless otm theorem 4 cascadeless otm guarante global serializ follow condit satisfi 1 concurr control mechan ldbss ensur local serializ cascadeless 2 multidatabas transact one subtransact ldb 3 subtransact visibl preparedtocommit state proof alreadi shown order subtransact take ticket reflect rel serial order theorem 1 prove global serializ enforc without gsg test consid pair global transact g g j set g subtransact multipl ldbss includ ldb k ldb l without loss gener assum ldb k subtransact g take ticket subtransact g j ldb l subtransact g j take ticket subtransact g sinc ldbss cascadeless g j write ticket valu ldb k g commit g write ticket ldb l g j commit therefor two possibl outcom execut global transact cascadeless otm either ticket subtransact rel order ldbss global serializ ensur least one subtransact commit 2 like otm cascadeless otm free global restart cascadeless ctm similar ctm use deal global restart georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 11 local cascadeless use simplifi global optimist schedul ie need maintain gsg strict offer addit advantag cascadeless follow section show schedul local system meet addit condit ticket conflict totali elimin vii implicit ticket implicit ticket method itm argu basic problem multidatabas concurr control local serial order necessarili reflect order global transact submit perform oper commit ldbss deal problem introduc concept ticket propos sever method must take ticket ensur global serializ howev ticket introduc addit conflict global transact may conflict otherwis thu desir elimin ticket whenev possibl follow section identifi class schedul includ event use determin local serial order transact without forc conflict global transact refer event implicit ticket determin local serial order section ivc discuss elimin ticket ldbss use local concurr con trol approach appli ldbss allow transact commit respect local serial order reflect local submiss order class ldbss allow schedul transact submiss order determin serial order order transact issu begin oper constitut implicit ticket anoth import class local system global transact take ticket includ ldbss allow schedul local commit order transact determin local serial der ie order transact perform commit oper constitut implicit ticket 6 7 defin class schedul transact analog execut commit serial order follow 1 let serializ schedul say transact analog execut serial order pair transact j commit j also serial j properti analog execut serial order appli view serializ conflict serializ schedul difficult enforc directli class schedul conflict serializ analog execut serial order character term strong recover 7 defin definit 2 let schedul say strongli recover pair commit transact whenev oper op preced oper op j j oper conflict least one oper write preced committ j transact manag mechan strongli recover produc strongli recover schedul 7 shown transact manag mechan strongli recover produc conflict serializ schedul transact execut serial order analog signific strong recover simplifi enforc global serializ multidatabas system recogn literatur exampl notion commit order propos 39 40 solut enforc global serializ without take ticket ident strong recover although strongli recover schedul realiz real dbmss real transact manag mechan produc schedul satisfi stronger properti easier enforc notion rigor schedul 6 7 defin next effect elimin conflict uncommit tran action thu provid even simpler way ensur transact execut serial order analog definit 3 schedul rigor follow two condit hold strict ii data object written transact previous read commit abort say transact manag mechan rigor produc rigor schedul use rigor ldb refer ldb use rigor schedul 6 shown transact manag mechan ensur rigor produc serializ schedul transact execut serial order analog 7 prove set rigor schedul subset strongli recover schedul class rigor transact manag mechan includ sever common conserv schedul 6 7 conserv 17 rigor twophas lock 2pl ie variant strict 2pl transact must hold read write lock termin rigor variat optimist concurr control 32 protocol introduc 6 howev mani conserv schedul rigor ou enforc rigor restrict optimist schedul ie rigor optimist schedul behav like conserv schedul follow class schedul permit optimist synchron oper definit 4 schedul semirigor commit project rigor semirigor permit valid transact finish oper therefor simplifi design optimist schedul real optimist schedul includ schedul describ 32 allow semirigor schedul semi rigor simplifi optimist concurr control ensur recover defin 17 view serializ conflict serializ analog execut serial order strong recover semirigor rigor fig 6 relationship among analog execut serial order strong recover semirigor rigor fore optimist schedul ensur cascadeless strict addit semirigor exampl schedul use optimist protocol serial valid permit schedul addit semi rigor also strict set semirigor schedul includ rigor schedul subset set strongli recover schedul relationship among analog execut serial order strong recover semi rigor rigor depict figur 6 final note strict suffici ensur transact execut order analog transact serial order exampl assum transact commit immedi complet last oper schedul ldb 2 figur 2 strict execut order transact analog serial order b enforc global serializ take advantag ldbss allow analog execut serial order introduc implicit ticket method itm like otm ctm itm ensur global serializ prevent subtransact multidatabas transact serial differ way correspond ldbss unlik otm ctm itm need maintain ticket subtransact global transact need take increment ticket explicitli ldbss allow analog execut serial der implicit ticket subtransact execut determin commit order order commit subtransact ldb determin rel valu implicit ticket achiev global serializ itm control commit order thu serial order multidatabas subtransact follow assum rigor ldbss itm guarante pair multidatabas transact g g j either subtransact g commit subtransact g j subtransact g j commit prior subtransact g easili enforc distribut agreement protocol 2pc protocol itm process set g global transact follow initi itm set timeout global transact g submit subtransact correspond ldbss subtransact global transact allow interleav control ldbss enter preparedtocommit state without loss gener suppos subtransact global transact g 1 g becom prepar commit timeout expir furthermor suppos subtransact g 2 enter preparedtocommit state subtransact g 1 becom prepar commit subtransact g 3 becom prepar commit subtransact g 2 enter preparedtocommit state subtransact g k enter preparedtocommit state subtransact g becom prepar commit itm allow subtransact global transact commit follow order subtransact subtransact g 2 subtransact g 2 subtransact g 3 subtransact g kgamma1 subtransact g k global transact one subtransact report preparedtocommit state timeout expir abort restart mdb theorem 5 itm ensur global serializ follow condit hold 1 concurr control mechan ldbss ensur analog execut serial order 2 multidatabas transact one subtransact ldb 3 subtransact visibl preparedtocommit state proof without loss gener suppos global transact set g enter prepar commit state follow control itm subtransact g 1 commit subtransact g 2 subtransact g 2 commit subtransact g 3 subtransact g subtransact g k sinc itm ensur rel order subtransact global transact commit particip ldbss ldbss ensur subtransact commit order reflect rel serial order itm guarante global serializ 2 viii mix method multidatabas environ rigor cascad less noncascadeless ldbss particip mix ticket method combin two method de georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 13 scribe previou section paper use ensur global serializ section describ mix ticket method combin otm ctm cascadeless variat itm mix method process multidatabas transact g follow 1 set timeout g submit subtransact correspond ldbss 2 subtransact control itm otm cascadeless variat otm allow interleav enter preparedtocommit state subtransact control ctm cascadeless ctm allow proceed enter preparedtotakeaticket state 3 subtransact g control otm take ticket report preparedtocommit state global valid appli ensur subtransact serial way g pass global valid abort 4 subtransact control ctm cascadeless ctm allow take ticket accord serial order g determin earlier valid process ensur mix method delay takeaticket oper subtransact g execut control ctm cascadeless ctm uncommit global transact g 0 g 0 subtransact taken tick et ffl least one ldb subtransact g 0 taken ticket subtransact g global transact satisfi condit mix method allow subtransact g take ticket control ctm 5 subtransact g enter preparedto commit state mix method commit g global transact allow commit either first subtransact g commit commit subtransact g 6 timeout expir step mdbss abort restart g simpler mix method eg combin optimist conserv ticket method develop similarli ix summari conclus enforc serializ global transact mdb environ much harder distribut databas system addit difficulti environ caus autonomi heterogen particip ldbss enforc global serializ introduc otm optimist multidatabas transact manag mechan permit commit multidatabas transact rel serial order particip ldbss otm requir ldbss guarante local serializ basic idea otm creat direct conflict multidatabas transact ldb allow us determin rel serial order subtransact also introduc conserv ticket method ctm ctm global transact must take ticket ctm requir global serial test elimin global restart due fail valid refin otm ctm multidatabas environ particip ldbss cascadeless may use simpler global schedul unless subtransact multidatabas transact take ticket approxim time eg subtransact global transact take ticket end execut durat approxim conserv ticket method may allow higher throughput correspond optimist ticket method take advantag addit properti ldbss propos implicit ticket method itm elimin ticket conflict work particip ldbss disallow schedul transact execut serial order analog itm use local commit order subtransact determin implicit ticket valu achiev global serializ control commit execut order thu serial order multidatabas transact compar add approach altruist lock itm process number multidatabas transact concurr even concurr conflict subtransact multipl site method propos paper violat autonomi ldbss combin singl comprehens mechan analog transact execut serial order use properti mdb exampl shown add scheme 10 18 altruist lock 13 2pc agent method 15 produc global serializ schedul particip ldbss disallow schedul transact execut serial order analog similarli quasiserializ schedul 23 becom serializ ldbss permit analog transact execut serial order hand local system allow schedul transact execut serial order anal ogou method may lead schedul global serializ anoth import find local strict multidatabas environ offer advantag ca cadeless simplifi enforc global serializ research prototyp current perform gte laboratori bellcor univers houston activ includ perform evalu propos ticket method benchmark prototyp implement current research conduct gte laboratori includ adapt ticket method provid consist distribut object manag system dom 8 global transact access homogen object encapsul autonom 14 ieee transact knowledg concurr control mechan andor attach object repres data function autonom heterogen ldbss takeaticket oper view function return serial order transact ldb function provid interfac futur dbmss multidatabas transact manag method use ticket enforc global serializ substitut ticket oper call dbmsprovid serial order function continu enforc global serializ without modif acknowledg idea use ticket multidatabas transact manag emerg discuss gomer thoma thank yuri breitbart point error one definit earlier version paper piotr krychniak implement ticket method real dbmss contribut discuss implement issu appendix also thank mark hornick ole anfindsen use comment r databas system multidatabas system feder databas architectur integr transact concept autonom databas environ node autonomi distribut system effect local autonomi heterogen distribut databas system rigor schedul multidatabas system rigor transact schedul distribut object manag concurr control issu distribut heterogen databas manag system multidatabas updat sue support updat heterogen distribut databas system concurr control issu heterogen distribut databas manag system concurr control recoveri global procedur feder databas system effect autonomi maintain global serializ heterogen distribut databas system 2pc agent method achiev serializ presenc failur heterogen multi databas notion consist predic lock databas system concurr control recoveri databas system updat mechan multidatabas system superdatabas composit heterogen databas mix concurr control deal heterogen distribut databas system transact concept virtu limit saga qsr correct criterion global concurr control interbas transact model ex tend transact model captur mean oper system advanc cours guid sql standard transact manag multidatabas system multidatabas recover recov eri system level concurr control distribut databas system optimist method concurr control prepar commit certif decentr transact manag rigor heterogen multidatabas transact manag multidatabas system reliabl transact manag multidatabas system perform analysi optimist basic timestampord concurr control algorithm central databas system datacycletm archi tectur decentr deadlockfre concurr control method mul georgakopoulo rusinkiewicz sheth enforc serializ multidatabas transact 15 tidatabas transact extend commit order guarante global serializ appli commit order select global transact commit order coordin coco resourc manag architectur distribut commit order base concurr control tr concurr control recoveri databas system guid sql standard saga multidatabas updat issu node autonomi distribut system quasi serializ correct criterion global concurr control interbas rigor transact schedul transact manag multidatabas system stransact model datacycl architectur optimist method concurr control system level concurr control distribut databas system notion consist predic lock databas system extend transact model captur mean superdatabas composit heterogen databas support updat heterogen distribut databas system perform analysi optimist basic timestampord concurr control algorithm central databas system prepar commit certif decentr transact manag rigor heterogen multidatabas mix concurr control ctr chihp wei olivia r liu sheng paul jenhwa hu fuzzi statist estim support multidatabas queri optim electron commerc research v2 n3 p287316 juli 2002 dogac c dengi e kilic g ozhan f ozcan nural c evrendilek u halici b arpinar p koksal n kesim mancuhan metu interoper databas system acm sigmod record v24 n3 p5661 sept 1995 parvathi chundi daniel j rosenkrantz ravi multisit distribut databas transact util defer updat proceed 1997 acm symposium appli comput p118122 april 1997 san jose california unit state sangkeun lee chongsun hwang wongy lee uniform approach global concurr control recoveri multidatabas environ proceed sixth intern confer inform knowledg manag p5158 novemb 1014 1997 la vega nevada unit state stefan bttcher concurr check global crossdatabas integr constraint integr intern control inform system v kluwer academ publish norwel dexter p bradshaw perk larson jacob slonim transact schedul dynam composit multidatabas system proceed 1995 confer centr advanc studi collabor research p9 novemb 0709 1995 toronto ontario canada j b lim r hurson transact process mobil multidatabas environ multimedia tool applic v15 n2 p161185 novemb 2001 thoma tesch jrgen wsch global nest transact manag odmgcompli multidatabas system proceed sixth intern confer inform knowledg manag p6774 novemb 1014 1997 la vega nevada unit state junlin lin margaret h dunham survey distribut databas checkpoint distribut parallel databas v5 n3 p289319 juli 1997 sangkeun lee chongsun hwang heonchang yu revisit transact manag multidatabas system distribut parallel databas v9 n1 p3965 januari 1 2001 dimitrio georgakopoulo georg karabati sridhar gantimahapatruni specif manag interdepend data operationalsystem data warehous distribut parallel databas v5 n2 p121166 april 1997 dimitrio georgakopoulo mark f hornick frank manola custom transact model mechan programm environ support reliabl workflow autom ieee transact knowledg data engin v8 n4 p630649 august 1996 jame b lim r hurson transact process mobil heterogen databas system ieee transact knowledg data engin v14 n6 p13301346 novemb 2002 patricia serranoalvarado claudia roncancio michel adiba survey mobil transact distribut parallel databas v16 n2 p193230 septemb 2004 smalcem budak arpinar uur halici sena arpinar asuman doa formal workflow correct issu presenc concurr distribut parallel databas v7 n2 p199248 april 1999