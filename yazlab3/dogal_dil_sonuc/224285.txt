messag pass versu distribut share memori network workstat messag pass program execut parallel virtual machin pvm librari share memori program execut use treadmark program water barneshut splash benchmark suit 3d fft integ sort embarrassingli parallel ep na benchmark ilink wide use genet linkag analysi program success overrelax sor travel salesman tsp quicksort qsort two differ input data set use water water288 water1728 issmal islarg sor sorzero sornonzero execut environ set eight hp735 workstat connect 100mbit per second fddi network water1728 ep ilink sorzero sornonzero perform treadmark within 10of pvm issmal water288 barneshut 3d fft tsp qsort differ order 10to 30 final islarg pvm perform two time better treadmark messag data sent treadmark explain perform differ extra commun caus 1 separ synchron data transfer 2 extra messag request updat data invalid protocol use treadmark accumul migratori data treadmark b introduct parallel comput network workstat gain attent recent year workstat cluster use shelf product cheaper supercomput furthermor high research support part nsf nyi award ccr9457770 nsf cise postdoctor fellowship award cda9310073 nsf grant ccr9116343 bir9408503 texa advanc technolog program grant 003604012 speed generalpurpos network power workstat processor narrow perform gap workstat cluster supercomput processor workstat cluster share physic memori interprocessor commun processor must perform send messag network current prevail program model parallel comput network workstat messag pass use librari pvm 9 tcgmsg 11 express 18 messag pass standard mpi 17 also develop messag pass paradigm distribut natur memori system fulli expos applic programm programm need keep mind data decid commun processor commun commun make hard program messag pass especi applic complex data structur softwar distribut share memori dsm system eg 3 5 14 16 provid share memori abstract top nativ messag pass facil applic written execut share memori multiprocessor access share data ordinari read write oper chore messag pass left underli dsm system easier program way dsm system tend gener commun therefor tend less effici messag pass system messag pass paradigm commun handl entir programm complet knowledg data usag pattern contrast dsm system littl knowledg applic program therefor must conserv determin commun sinc send messag workstat expens extra commun caus seriou perform degrad much work done past decad improv perform dsm system paper compar stateoftheart dsm system treadmark commonli use messag pass system pvm goal assess differ programm perform dsm messag pass system precis determin remain caus lower perform system port nine parallel program treadmark pvm water barneshut splash benchmark suit 20 3d fft integ sort embarrassingli parallel ep na benchmark 2 ilink wide use genet linkag analysi program 8 success overrelax sor travel salesman problem tsp quicksort qsort two differ input set use water water288 water1728 issmal islarg sor sorzero sornonzero ran program eight hp735 workstat connect 100mbit per second fddi network term programm sinc test program simpl difficult port pvm howev two program name 3d fft ilink messag pass version significantli harder develop dsm version water1728 ep ilink sorzero sornonzero perform treadmark within 10 pvm issmal water288 barneshut 3d fft tsp qsort differ order 10 30 final islarg pvm perform two time better treadmark messag data sent treadmark explain perform differ extra commun caus 1 separ synchron data transfer 2 extra messag request updat data invalid protocol use treadmark accumul migratori data treadmark current tri address defici integr compil support treadmark rest paper organ follow section 2 introduc user interfac implement pvm treadmark section 3 present applic program result section 4 conclud paper 21 pvm pvm 9 stand parallel virtual machin messag pass system origin develop oak ridg nation laboratori although messag pass system tcgmsg 11 provid higher bandwidth pvm chose pvm popular use pvm version 326 experi 211 pvm interfac pvm user data must pack send buffer dispatch receiv messag first store receiv buffer must unpack applic data structur applic program call differ routin pack unpack data differ type routin syntax specifi begin user data structur total number data item pack unpack stride unpack call match correspond pack call type number item pvm provid user nonblock send includ primit send messag singl destin multicast multipl destin broadcast destin send dispatch content send buffer destin return immedi block nonblock receiv provid pvm receiv provid receiv buffer incom messag block receiv wait expect messag arriv time return pointer receiv buffer nonblock receiv return immedi expect messag present return pointer receiv buffer block receiv otherwis nonblock receiv return null pointer nonblock receiv call multipl time check presenc messag perform work call use work block receiv call messag 212 pvm implement pvm consist two part daemon process host set librari routin daemon connect use udp user process connect local daemon use tcp usual way two user process differ host commun via local daemon howev set direct tcp connect order reduc overhead use direct connect user processor experi result better perform pvm design work set heterogen machin provid convers extern data represent xdr convers avoid machin use ident 22 treadmark treadmark 14 softwar dsm system built rice univers effici userlevel dsm system run commonli avail unix system use treadmark version 094 experi 221 treadmark interfac treadmark provid primit similar use hardwar share memori machin applic process synchron via two primit barrier mutex lock routin tmk barrieri stall call process process system arriv barrier barrier indic integ certain rang lock use control access critic section routin tmk lock acquirei acquir lock call processor routin tmk lock releasei releas processor acquir lock anoth processor hold integ lock index assign pro grammer share memori must alloc dynam call tmk malloc tmk sbrk syntax convent memori alloc call treadmark imper use explicit synchron data move processor processor respons synchron call see section 222 222 treadmark implement treadmark use lazi invalid 14 version releas consist rc 10 multiplewrit protocol 5 reduc amount commun involv implement share memori abstract virtual memori hardwar use detect access share memori rc relax memori consist model rc ordinari share memori access distinguish synchron access latter categori divid acquir releas access rc requir ordinari share memori updat processor p becom visibl anoth processor q subsequ releas p becom visibl q via chain synchron event practic model allow processor buffer multipl write share data local memori synchron point reach treadmark tmk lock acquirei model acquir tmk lock releasei model releas tmk barrieri model releas follow acquir processor perform releas barrier arriv acquir barrier departur multiplewrit protocol two processor simultan modifi copi share page modif merg next synchron oper accord definit rc therebi reduc effect fals share merg accomplish use diff diff runlength encod modif made page gener compar page copi save prior modif treadmark implement lazi invalid version rc 13 lazi implement delay propag consist inform time acquir furthermor releas notifi acquir page modifi caus acquir invalid local copi page processor incur page fault first access invalid page get diff page previou releas implement lazi rc execut processor divid interv new interv begin everi time processor synchron interv differ processor partial order interv singl processor total order program order ii interv processor p preced interv processor q interv q begin acquir correspond releas conclud interv p iii interv preced anoth interv transit closur partial order known hb1 1 vector timestamp use repres partial order processor execut acquir send current timestamp acquir messag previou releas piggyback respons set write notic timestamp greater timestamp acquir messag write notic describ share memori modif preced acquir accord partial order acquir processor invalid page incom write notic access fault page brought uptod fetch miss diff appli page increas timestamp order write notic without correspond diff examin usual unnecessari send diff request processor modifi page processor modifi page interv must diff interv preced includ processor treadmark send diff request subset processor recent interv preced recent interv anoth processor lock static assign manag manag record processor recent request lock lock acquir request direct manag necessari forward processor last request lock lock releas caus commun barrier central manag number messag sent barrier 2 theta n gamma 1 n number processor 31 experiment testb testb use evalu two system 8node cluster hp9000735125 workstat 125mhz parisc7100 processor 96 megabyt main memori machin 4096byte page size connect 100mbp fddi ring treadmark user process commun use udp pvm process set direct tcp connect sinc machin ident data convers extern data represent disabl udp tcp built top ip udp connectionless tcp connect orient tcp reliabl protocol udp ensur reliabl deliveri treadmark use lightweight operationspecif userlevel protocol top udp ensur reliabl deliveri 32 overview port nine parallel program treadmark pvm water barneshut splash benchmark suit 20 3d fft ep na benchmark 2 ilink wide use genet linkag analysi program 8 sor tsp qsort ran three nine program use two differ input set water 288 1728 molecul bucket size 2 10 2 15 sor intern element matrix initi either zero nonzero valu execut time sequenti program without call pvm treadmark shown tabl 1 tabl also show problem size use applic figur 1 12 show speedup curv applic speedup comput rel sequenti program execut time given tabl 1 amount data number messag sent 8processor execut shown tabl 2 pvm version count number userlevel messag amount user data sent run treadmark count total number udp messag total amount data commun program problem size timesec 28 2391 sorzero 1024 theta 3072 50 iter 79 sornonzero 1024 theta 3072 50 iter 68 issmal iter 38 islarg iter 42 tsp 19 citi 95 qsort 512k integ 53 water288 288 molecul 5 iter 12 water1728 1728 molecul 5 iter 435 barneshut 4096 bodi 17 3d fft 64 theta 64 theta 64 6 iter 41 tabl 1 sequenti time applic program treadmark pvm messag kilobyt messag kilobyt sorzero 7014 509 1414 8607 sornonzero 7014 8853 1414 8607 issmal 872 2582 140 573 islarg 9918 73591 140 18350 qsort 33742 57083 3129 16000 water288 5028 4945 620 1520 water1728 8511 21170 620 9123 barneshut 62350 18277 280 12704 tabl messag data 8 processor treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur 5 islarg treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur 9 water1728 treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur treadmark pvm nproc speedups2468 figur 33 ep embarrassingli parallel program come na benchmark suit 2 ep gener pair gaussian random deviat tabul number pair success squar annuli parallel version commun sum teninteg list end program treadmark updat share list protect lock pvm processor 0 receiv list processor sum test solv class problem na benchmark 2 28 pair random number gener result shown figur 1 sequenti program run 2391 second treadmark pvm achiev speedup 79 use 8 processor compar overal execut time commun overhead neglig 34 redblack sor redblack success overrelax sor method solv partial differenti equat parallel version program divid red black array roughli equal size band row assign band differ processor commun occur across boundari row band treadmark version array alloc share memori processor synchron use barrier pvm processor explicitli send boundari row neighbor ran redblack sor 1024 theta 3072 matrix float point number 51 iter problem size share red black row occupi one half page first iter exclud measur elimin differ due fact data initi distribut manner pvm version treadmark done master process first test sorzero edg element initi 1 element 0 second test sornonzero element matrix initi nonzero valu chang valu iter result sorzero shown figur 2 sequenti program run 79 second 8 processor treadmark version pvm version achiev speedup 458 471 respect treadmark speedup 97 pvm due load imbal neither pvm treadmark achiev good speedup load imbal occur floatingpoint comput involv zero take longer involv nonzero caus processor work middl part array take longer iter result sornonzero shown figur 3 initi valu nonzero singl processor time drop 79 second 68 second 8 processor speedup obtain treadmark 680 91 pvm speedup 744 compar first test improv speedup due better load balanc treadmark pvm perform rel close low commun rate sor use lazi releas consist treadmark although processor repeatedli write boundari page two barrier diff boundari page sent barrier respons diff request neighbor number messag 5 time higher treadmark pvm n processor pvm send 2 theta n gamma 1 messag end iter treadmark send 2 theta n gamma 1 messag implement barrier 8 theta n gamma 1 messag page diff boundari row boundari row requir two diff one page behavior exemplifi two perform drawback treadmark rel pvm separ synchron data transfer multipl diff request due invalid protocol result dif treadmark much less data sent sorzero treadmark pvm page remain zero integ sort 2 na benchmark requir rank unsort sequenc key use bucket sort parallel version divid key among processor first processor count write result privat array bucket valu privat bucket sum final processor read sum rank key treadmark version share array bucket processor also privat array bucket count key processor lock share array bucket add valu privat array share array releas lock wait barrier processor finish updat processor read final result share array bucket rank key pvm version processor bucket array privat memori count key processor form chain processor 0 send local array bucket processor 1 processor 1 add valu local array bucket valu array bucket receiv forward result next processor etc last processor chain calcul final result broadcast test two set input data first test issmal sort 2 23 key rang 0 2 iter second test islarg key rang 0 2 15 tri 2 23 key 2 20 key rang suggest na benchmark extrem low computationcommun ratio suitabl workstat cluster speedup shown figur 4 5 sequenti execut time issmal 38 second 8 processor speedup pvm treadmark 760 656 respect islarg sequenti program run 42 second pvm treadmark achiev speedup 467 230 respect issmal treadmark version send 4 time data 5 time messag pvm version extra messag due separ synchron diff request 782 messag sent treadmark compar 140 pvm 500 synchron messag 150 diff request islarg treadmark send 70 time messag pvm share bucket array islarg contain 2 15 integ spread page therefor time share bucket array access treadmark send 32 diff request respons pvm handl transmiss share array singl messag exchang extra data treadmark come phenomenon call diff accumul time processor acquir lock modifi share array bucket previou valu array complet overwritten current treadmark implement howev preced diff sent lock acquir even though complet overlap phenomenon occur barrier everi processor read final valu share bucket time processor get diff made processor modifi share bucket array iter assum bucket size b number processor n pvm amount data sent iter 2 theta n gamma 1 theta b amount data sent treadmark n theta n gamma 1 theta b although diff obtain one processor diff accumul also result messag sum diff size exce maximum size udp messag sinc treadmark mtu 48 kilobyt extra messag due diff accumul seriou problem 36 tsp tsp solv travel salesman problem use branch bound algorithm major data structur pool partial evalu tour prioriti queue contain pointer tour pool stack pointer unus tour element pool current shortest path evalu partial tour compos mainli two procedur get tour recurs solv subroutin get tour remov promis path prioriti queue path contain threshold number citi get tour return path otherwis extend path one node put promis path gener extens back prioriti queue call recurs subroutin get tour return either promis path longer threshold prioriti queue becom empti procedur recurs solv take path return get tour tri permut remain node recurs updat shortest tour complet tour found shorter current best tour treadmark version major data structur share subroutin get tour guard lock guarante exclus access tour pool prioriti queue tour stack updat shortest path also protect lock pvm version use masterslav arrang n processor n slave process 1 master process word one processor run master one slave process remain processor run slave process master keep major data structur privat memori execut get tour keep track optim solut slave execut recurs solv send messag master either request solvabl tour updat shortest path solv 19 citi problem recurs solv threshold 12 speedup shown figur 6 sequenti program run 95 second 8 processor treadmark obtain speedup 621 78 speedup 797 obtain pvm 8 processor treadmark send 11 time messag 150 time data pvm perform gap come differ program style pvm version tsp tour directli solvabl recurs solv minimum tour exchang slave master messag exchang take 2 messag contrast treadmark major data structur migrat among processor get tour take least 3 page fault obtain tour pool prioriti queue tour stack amount data diff accumul averag processor get n gamma 1 diff page fault n number processor system furthermor content lock protect get tour averag 8 processor process spend 11 15 second wait lock acquir 37 qsort qsort quicksort algorithm use partit unsort list sublist sublist suffici small integ sort use bubblesort qsort parallel use work queue contain descript unsort sublist worker thread continu remov list treadmark version qsort list work queue share access work queue protect lock unlik tsp qsort processor releas task queue without subdivid subarray remov queue subarray divid processor reacquir control task queue place newli gener subarray back task queue pvm version use masterslav arrang similar tsp n slave 1 master n number processor master maintain work queue slave perform partit sort experi array size 512k bubblesort threshold 1024 speedup shown figur 7 sequenti program run 53 second 8processor speedup use treadmark pvm 446 617 respect sever factor contribut 28 differ perform import reason diff request treadmark 8 processor treadmark send 10 time messag pvm among 33742 messag sent treadmark 32000 messag sent due diff request diff transmiss sinc bubblesort threshold 1024 intermedi subarray larger one page result multipl diff request subarray addit fals share diff accumul also occur case intermedi subarray work queue migrat among process 38 water water splash 20 benchmark suit molecular dynam simul main data structur water onedimension array record record repres molecul contain molecul center mass atom comput forc displac first six deriv time step intra intermolecular potenti comput avoid comput n 2 2 pairwis interact among molecul spheric cutoff rang appli parallel algorithm static divid array molecul equal contigu chunk assign chunk processor bulk interprocessor commun happen forc comput phase processor comput updat intermolecular forc molecul n2 molecul follow array wraparound fashion treadmark version water program origin splash suit tune get better perform center mass displac forc molecul alloc share memori variabl molecul record alloc privat memori lock associ processor addit processor maintain privat copi forc forc comput phase chang forc accumul local order reduc commun share forc updat processor finish phase processor updat privat copi forc molecul belong processor j acquir lock j add contribut forc molecul own processor j pvm version processor exchang displac forc comput commun occur pairwis intermolecular forc comput time processor commun local accumul modif forc use two data set size 288 molecul 1728 molecul ran 5 time step result shown figur 8 9 sequenti execut time 288molecul simul 12 second 8processor speedup treadmark pvm 504 723 respect 1728 molecul sequenti program run 435 second treadmark pvm achiev speedup 725 744 8 processor respect low computationcommun ratio separ synchron data commun fals share major reason 30 gap perform 288 molecul pvm two userlevel messag sent pair processor interact one messag read displac messag write forc treadmark extra messag sent synchron diff request read displac write share forc barrier termin phase share forc updat processor may fault read final forc valu molecul last processor updat valu fals share fals share caus processor bring updat molecul access may result commun one processor molecul page updat two differ processor 8 processor fals share occur 7 118 page molecul array consequ treadmark send 5028 messag compar 620 messag pvm fals share also caus treadmark version send unnecessari data anoth caus addit data sent treadmark diff accumul assum n processor n even molecul belong processor modifi n2 processor protect lock averag processor get n2 diff sinc molecul modifi processor case diff complet overlap ad fals share diff accumul 8 processor treadmark send 23 time data pvm increas computationcommun ratio reduc fals share caus treadmark perform significantli better 1728 molecul treadmark send 13 time data pvm compar 23 time 288 molecul 39 barneshut barneshut splash 20 benchmark suit nbodi simul use hierarch barneshut method treestructur hierarch represent physic space use leaf tree repres bodi intern node tree repres cell collect bodi close physic proxim major data structur two array one repres bodi repres cell sequenti algorithm loop bodi bodi travers tree comput forc act parallel code four major phase time step construct barneshut tree 2 get bodi partit bodi among processor 3 forc comput comput forc bodi 4 updat updat posit veloc bodi phase 1 execut sequenti run parallel slow execut phase 2 dynam load balanc achiev use costzon method processor walk barneshut tree collect set logic consecut leav comput time spent phase 3 treadmark version array bodi share cell privat maketre processor read share valu bodi build intern node tree privat memori barrier maketre forc comput updat phase synchron necessari forc comput phase barrier end forc comput phase ensur processor finish read posit processor pvm version everi processor broadcast bodi end iter processor obtain bodi creat complet tree phase 1 commun requir ran barneshut 4096 bodi 6 timestep last 5 iter time order exclud cold start effect figur 10 show speedup sequenti program run 17 second 8 processor pvm treadmark achiev speedup 304 270 respect low comput commun ratio need finegrain commun 19 contribut poor speedup treadmark pvm pvm network satur 8 processor everi processor tri broadcast time diff request fals share major reason treadmark lower perform 8 processor treadmark send 44 data 222 time messag pvm although set bodi own processor adjac barneshut tree adjac memori fals share maketre page fault caus processor send diff request sever processor reason forc comput processor may fault access bodi bring unwant data 310 3d fft 3d fft na 2 benchmark suit numer solv partial differenti equat use three dimension forward invers fft assum input array n 1 theta n 2 theta n 3 organ rowmajor order 3d fft first perform n 3 point 1d fft n 1 theta n 2 complex vector perform n 2 point 1d fft n 1 theta n 3 vector next result array transpos n 1 point 1d fft appli n 2 theta n 3 complex vector distribut comput array element along first dimens element complex matrix ijk assign singl processor commun need first two phase n 3 point fft n 2 point fft comput singl processor processor commun transpos processor access differ set element afterward treadmark version barrier call transpos pvm version messag sent explicitli send messag must figur part array goe part b array need come index calcul 3dimension array much errorpron simpli swap indic treadmark make pvm version harder write result obtain run 64 theta 64 theta 64 array doubl precis complex number 6 iter exclud time distribut initi valu begin program matrix size 132 specifi class problem na benchmark scale problem limit swap space machin avail us speedup curv shown figur 11 sequenti execut time 41 second speedup 441 obtain treadmark 8 processor 81 speedup 547 obtain pvm releas consist treadmark send almost amount data pvm except 6processor execut howev pagebas invalid protocol mani messag sent treadmark pvm 8 processor 4 megabyt data commun transpos page size 4096 byte transpos therefor requir 1000 diff request respons anomali occur 6 processor attribut fals share matrix size multipl 6 page modifi one processor read two processor although two processor read disjoint part page diff sent result treadmark 14 messag 17 data sent 6 processor 8 processor 311 ilink ilink 7 15 wide use genet linkag analysi program locat specif diseas gene chro mosom input ilink consist sever famili tree program travers famili tree visit nuclear famili main data structur ilink pool genarray genarray contain probabl genotyp individu sinc genarray spars index array pointer nonzero valu genarray associ one bank genarray larg enough accommod biggest nuclear famili alloc begin program bank reus nuclear famili comput move new nuclear famili pool genarray reiniti person current famili comput either updat parent genarray condit spous children updat one child condit parent sibl use parallel algorithm describ dwarkada et al 8 updat individu genarray parallel master processor assign nonzero element parent genarray processor round robin fashion processor work share nonzero valu updat genarray accordingli master processor sum contribut processor treadmark version bank genarray share among processor barrier use synchron pvm version processor local copi genarray messag pass explicitli master slave begin end nuclear famili updat sinc genarray spars nonzero element sent dif mechan treadmark automat achiev effect sinc nonzero element modifi nuclear famili updat diff transmit master contain nonzero element use clp data set 12 allel product 2 theta 4 theta 4 theta 4 result shown figur 12 sequenti program run 1473 second 8 processor treadmark achiev speedup 557 93 599 obtain pvm high computationtocommun ratio lead good speedup also explain fact pvm treadmark close perform howev abl identifi three reason lower perform treadmark first version send nonzero element pvm perform transmiss singl messag treadmark send diff request respons page genarray clp data set size genarray page second fals share occur treadmark nonzero valu parent genarray assign processor round robin fashion pvm parent genarray distribut processor get part genarray treadmark processor get nonzero element page includ belong processor third final reason differ perform diff accumul bank genarray reiniti begin comput nuclear famili although processor need newli initi data treadmark also send diff creat previou comput 312 summari experi pvm treadmark conclud easier program use treadmark use pvm although littl differ programm simpl program program complic commun pattern ilink 3d fft take lot effort figur send send result show use releas consist multiplewrit protocol treadmark perform compar pvm varieti problem experiment environ examin result corrobor 4 perform similar experi compar munin dsm system messag pass v system 6 five twelv experi treadmark perform within 10 pvm remain experi barneshut lesser extent islarg exhibit poor perform pvm treadmark data set use applic low computationtocommun ratio network workstat remain five experi perform differ 10 30 separ synchron data transfer requestrespons natur data commun treadmark respons lower perform treadmark program pvm data commun synchron integr togeth send receiv oper exchang data also regul progress processor treadmark synchron locksbarri commun data moreov data movement trigger expens page fault diff request sent order get modif addit pvm benefit abil aggreg scatter data singl messag access pattern would result sever miss messag invalidatebas treadmark protocol although multiplewrit protocol address problem simultan write page fals share still affect perform treadmark multipl processor may write disjoint part page without interf processor read data written one writer synchron point diff request sent writer caus extra messag data sent current implement treadmark diff accumul occur result sever processor modifi data common pattern migratori data diff accumul seriou problem diff size small sever diff sent one messag conclus paper present two contribut first result show larg varieti program perform well optim dsm system compar messag pass system especi problem practic size ilink water simul 1728 molecul treadmark perform within 10 pvm term programm experi indic easier program use treadmark use pvm although littl differ programm simpl program program complic commun pattern ilink 3d fft lot effort requir determin data send send data second observ four main caus lower perform treadmark compar pvm separ synchron data transfer treadmark addit messag send diff request invalidatebas treadmark protocol fals share final diff accumul migratori data current integr compil analysi dsm runtim system allevi problem compil determin futur data access prefetch reduc cost page fault diff request furthermor case data movement piggyback synchron messag overcom separ synchron data movement addit compil place data way minim fals share overhead acknowledg would like thank rand hoven hewlettpackard stephen pool perform group give us access workstat cluster use experi describ would also like thank nenad nedelkov edmar wienskoski particip earli version project r weak order new definit na parallel benchmark share memori parallel program entri consist distribut memori multiprocessor techniqu reduc consistencyrel inform distribut share memori system implement perform munin distribut v kernel perform diskless work station memori consist event order scalabl sharedmemori multiprocessor portabl tool applic parallel comput lazi releas consist softwar distribut share memori treadmark distribut share memori standard workstat oper system strategi multilocu linkag analysi human memori coher share virtual memori system messag pass interfac forum express user guid implic hierarch nbodi method multiprocessor architectur splash stanford parallel applic sharedmemori tr memori coher share virtual memori system implement perform munin networkbas concurr comput pvm system lazi releas consist softwar distribut share memori implic hierarch nbodi method multiprocessor architectur techniqu reduc consistencyrel commun distribut sharedmemori system weak orderingmyampersandmdasha new definit memori consist event order scalabl sharedmemori multiprocessor distribut v kernel perform diskless workstat ctr mordechai geva yair wiseman common framework interprocess commun cluster acm sigop oper system review v38 n4 p3344 octob 2004 michael kistler lorenzo alvisi improv perform softwar distribut share memori specul ieee transact parallel distribut system v16 n9 p885896 septemb 2005 yichang zhuang tyng yue liang cekuen shieh junqi lee laurenc tianruo yang groupbas load balanc scheme softwar distribut share memori system journal supercomput v28 n3 p295309 june 2004 jerri clark emul share memori simplifi distributedmemori program ieee comput scienc engin v4 n1 p5562 januari 1997 fengguang song shirley moor jack dongarra feedbackdirect thread schedul memori consider proceed 16th intern symposium high perform distribut comput june 2529 2007 monterey california usa mark w macbeth keith mcguigan philip j hatcher execut java thread parallel distributedmemori environ proceed 1998 confer centr advanc studi collabor research p16 novemb 30decemb 03 1998 toronto ontario canada david aldabass evtim peytchev moham khalil manl ren scalabl issu urban traffic system proceed 1st intern confer scalabl inform system p31e may 30june 01 2006 hong kong benghong lim chichao chang grzegorz czajkowski thorsten von eicken perform implic commun mechan allsoftwar global address space system acm sigplan notic v32 n7 p230239 juli 1997 harjind sandhu tim brecht diego moscoso multiplewrit entri consist cluster comput nova scienc publish inc commack ny 2001 honghui lu alan l cox sandhya dwarkada ramakrishnan rajamoni willi zwaenepoel compil softwar distribut share memori support irregular applic acm sigplan notic v32 n7 p4856 juli 1997 n p manoj k v manjunath r govindarajan casdsm compil assist softwar distribut share memori intern journal parallel program v32 n2 p77122 april 2004 martin schulz jie tao carsten triniti wolfgang karl smile integr multiparadigm softwar infrastructur scibas cluster futur gener comput system v19 n4 p521532 may sandhya dwarkada alan l cox willi zwaenepoel integr compiletimeruntim softwar distribut share memori system acm sigplan notic v31 n9 p186197 sept 1996 karthik balasubramanian david k lowenth effici support pipelin softwar distribut share memori system realtim system secur nova scienc publish inc commack ny henri e bal raoul bhoedjang rutger hofman ceriel jacob koen langendoen tim rhl fran kaashoek perform evalu orca sharedobject system acm transact comput system toc v16 n1 p140 feb 1998