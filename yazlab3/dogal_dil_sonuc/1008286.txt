unifi proof methodolog durat calculu time linear tempor logic linear tempor logic ltl wide use specif verif reactiv system standard model sequenc state state transit formula describ sequenc state transit ltl use model realtim system state extend time stamp record state transit take place durat calculu dc anoth well studi approach realtim system develop dc model behaviour system function domain real repres time system state paper extend time domain cartesian product real natur number extend time domain provid chop modal nonoverlap interpret allow linear tempor oper explicitli deal discret dimens time deriv chop modal essenti way continuoustim counterpart classic dc provid nice embed time ltl tltl modal dc unifi method dc ltl realtim system develop requir high level design decis interv properti therefor specifi reason dc properti implement well refin relat two implement specifi verifi composit induct ltl implement properti relat requir design properti rule lift ltl formula dc formula b introduct dc born denot approach zhr91 system model within convent dynam system framework state function time nonneg real observ system dc take continu global view properti time point observ neighbourhood time point boolean state observ durat bound interv ie integr indic function properti interv specifi arithmet relat among durat state real number paper appear formal aspect comput specifi reason requir high level design embed realtim hybrid systemsrrh93 ors96 liu96 rehr98 dynam system model benefici focus relev observ state furthermor interv logic simpl interpret time diagram state requir thu focu sequenc durat relat observ state rather sequenc individu state transit properti isol time point dens time domain consid unobserv ignor high level therefor transit observ indirectli relat among state left right neighbourhood transit point typic realtim properti requir bound critic durat properti everi interv bound length durat state p c time unit dc nice express howev deal implement repres state machin automaton abstract program bit cumbersom dc appli structur induct transit also level abstract stronger assumpt may made time exampl finit number state chang may occur simultan point time though specifi order therefor properti realtim point becom signific level seem advantag chang logic focus properti transit sequenc linear tempor logic introduc pnu77 mp81 specifi reason reactiv system model transit system kel76 properti transit system qualit safe invari respons properti transit system ltl use success specif verif reactiv system see eg mp92 express enough system realtim constraint bound invari bound respons realtim introduc transit system either associ lower upper bound enabl transit lam77 introduc explicit clock ad90 al92 first approach led extens ltl bound oper koy89 ah90 second use ltl explicit clock ph88 al92 relationship two approach less one translat anoth investig hmp94 advantag ltl framework transit system quit close implement use digit hardwar thu reflect semant program languag anoth advantag invari properti time bound properti easili check structur induct transit case properti may even check mechan howev system behaviour observ within framework look state transit step step approach therefor inher oper less abstract dynam system base framework instanc properti relat state across sever transit express use auxiliari state variabl clock variabl good exampl gener denot approach reflect engin disciplin requir specif system design verif oper approach reflect engin disciplin compon de sign refin analysi contribut work feasibl link two framework base preliminari result lrl98 much simpler introduct superdens time trajectori ltl dc framework overview section 2 present syntax semant proof system combin logic extend time domain set nonneg real r 0 twodimensionaldomain r 0 thetan second dimens discret set natur number n behaviour realtim system ie time transit system defin set function call trajectori time domain pair state system extend basic dc ie dc zhr91 introduc action tla describ state transit follow section show logic use specifi reason state properti transit time point support method dc ltl 1 dcstyle requir high level design specif reason 2 ltlstyle oper structur induct proof method lower level properti 3 stepwis refin one implement anoth particular section 3 recapitul logic use dcstyle specif verif high level properti section 4 introduc time transit system tt comput trajectori section 5 show logic support ltlstyle specif properti tt section 6 recapitul structur induct rule hmp94 time transit system remain valid extend logic main contribut section 7 establish relat specif two style section 8 illustr proof refin methodolog implement level within tt framework link dc method use high level specif reason final section 9 conclud discuss result 2 logic logic defin term syntax semant proof system 21 syntax origin dc zhr91 consid syntact categori state term formula sinc also consid state transit shall introduc categori action state state valu state variabl dynam system take moment time use individu state variabl pi set state variabl set state syntact denot predic state variabl valu rang rigid logic variabl eg state variabl x rang natur number exampl state use state predic set state predic denot state action state transit consist pair state describ action predic state variabl prime version x contain set pi 0 exampl x unchang chang arbitrari valu x chang sum differ current valu x respect use action note state predic subset action action use prime variabl term term mean interv durat term rather term state variabl valu given interv time denot real valu thu set term durat term gener durat r close real arithmet oper use denot durat term formula shall describ durat properti interv well state chang time point implement two kind elementari formula action formula durat formula action formula simpli denot action durat formula first order predic durat term eg r r r r r use stand elementari durat formula gener durat formula f construct elementari formula use first order connect chop modal simplic paper shall use logic captur abstract live fair properti would requir use expand modal found zh96a lrl97 choos stay core durat calculu suffici purpos reason safeti bound live properti 22 semant subsect defin semant logic domain trajectori time time domain time def n posit time denot ps successor posit order lexicograph order ht 1 also use correspond reflex relat def two posit p 1 p 2 set posit g set time interv denot intv trajectori let sigma set possibl map state variabl pi valu oe 2 sigma x pi oex denot valu assign variabl trajectori sigma sigma posit p 2 time use ae 1 p ae 2 p denot pair aep repres state transit take place p trajectori ae must satisfi follow condit 1 2 ae finit variabl ie bound time interv ha mi hb ni finit number state chang mean exist finit number posit ht 1 b set fae 1 singleton usual model ltl tla trajectori consist singleton state duplic successor state current state order use nonoverlap definit chop oper trajectori ae sigma observ interv p consist pair g particular real time point everi observ interv ht finit nonempti sequenc aet state transit state trajectori ae defin valu state predic p posit p p fals ae 1 p term mean term trajectori ae real valu interv assum mean function symbol gamma etc associ function real arithmet mean durat r p given thu durat ignor discontinu posit exist guarante finit variabl trajectori 1 durat constant state true ie r true denot length abbrevi def r true action formula manna pnueli ltlmp92 lamport tempor logic action tla lam94 action pi pi 0 interpret state transit oe oe 0 true iff true oe oe 0 call step action lift tempor formula interpret sequenc state paper lift action interv formula action satisfi trajectori ae observ hold first posit observ true state predic p special action refer prime variabl semant definit action impli p hold trajectori ae observ hold first posit observ action enabl condit state predic denot en true state oe state oe 0 oe oe 0 step set prime variabl treat rigid variabl definit durat formula mean durat formula defin term satisfact trajectori ae interv p denot ae p assum standard mean relat oper real exampl 1 logic unchang r p defin ndt gener formula present semant chop modal leav first order connect standard interpret given trajectori ae interv b e formula f 1 f 2 satisfi ae b e iff middl posit b oe e f 1 satisfi ae b f 2 satisfi ae chop overlap posit therefor singl posit ht ki chop formula f satisfi trajectori ae written ae hold interv b e f valid written satisfi ae sigma abbrevi follow use oper dc ltl defin oper given almost everywher r hoar tripl fpgfqg def prime version q somewher 3f def modal 3 ordinari dc express last subformula true f true howev presenc posit nonoverlap chop necessit three case 23 proof system easi see logic valid axiom rule first order predic logic remain valid reason action formula present axiom rule chop durat axiom chop semant definit chop oper associ distribut 9 monoton axiom 2 v free f axiom 3 fals f fals f fals fals axiom 4 state predic p rule sound rule like rule 1 mean satisfact premis line given ae impli satisfact conclus line ae therefor infer valid conclus premis axiom durat valid one axiom rule origin dc durat preserv semant logic follow axiom 6 axiom 7 axiom 8 axiom origin dc remain valid axiom 9 origin axiom r r r posit exclud axiom 10 new introduc character point interv axiom 6 r axiom 7 r axiom 8 r r r r r r r fld e five axiom infer superdens properti time domain 0 also expect finit variabl ensur sound origin dc induct rule induct rule rd e hold rx x dperx x dpe provabl rx rtrue hold induct rule ii rd e hold rx dpe provabl rx rtrue hold rule use prove follow theorem state 1 true dpe true dpe e 2 finit variabl assumpt formal follow nonlog axiom p state predic axiom rel complet proof durat found hz97 carri smoothli new logic seem also plausibl complet result interv logic applic 3 requir design specif applic dc realtim system zhr91 rrh93 rav95 show formul requir actual system decid relev state variabl procedur gener identifi safe unsaf pattern behaviour yardstick properti consid durat specif follow bound critic durat properti p occur c time unit within time window time unit r import special case unbound weak invari properti e dpe equival r bound respons everi occurr p follow later time unit occurr q special case dpe equival dpe assert p never last time unit minim separ properti hold p stabl least l time unit sinc chang p state special use case minim separ occurr p follow p must stabl least time unit often minim separ given formula dqe r p howev deduc pure form use monoton sinc dqe dpe dre impli dpe dpe dpe side condit bound critic durat relat bound respons minim separ follow rule rule 3 dpe rule 3 sound follow implic prove 1 2 stand two premis c stand conclus ga burner take ga burner exampl rrh93 lam93 illustr requir design specif dc case studi formul safeti requir ga burner term variabl leak denot undesir unavoid state repres presenc unlit ga safeti ga must never leak 4 second period 30 second specifi bound critic durat properti r meet requir req two design decis made de 1 de 2 de de 1 bound respons properti say occurr leak must stop within 4 second de 2 minim separ properti say leak stop may reoccur within 26 second rule 3 deriv correct design ie trajectori ae satisfi de satisfi req tradit de implement realtim automaton realtim program p implement describ dc formula dp correct implement verifi prove dp de dc howev dp gener big formula direct proof dc far easi shall deal difficulti adopt composit induct proof techniqu tt framework 4 transit system section commenc overview untim transit system gener use abstract model reactiv system untim transit system extend model realtim reactiv system impos time constraint transit qualit fair requir transit replac quantit lowerbound upperbound realtim requir exposit use terminolog hmp94 howev trajectori given term sequenc pair order consist definit previou section 41 untim transit system transit system consist four compon 1 pi finit set state variabl 2 sigma set state function pi 3 theta state predic call initi condit defin subset sigma call initi state 4 finit set state transit action sigma action hold state 0 often written comput execut run transit system infinit sequenc satisfi follow two condit initi oe 1 consecut 0 oe 2 stutter step action oe 1 dilig step thu comput either contain infinit mani dilig step termin infinit stutter suffix set comput stutter close infinit state sequenc oe comput program state sequenc obtain oe ad delet finit number stutter step stutter closur key relat system specif model al91 differ level abstract refin map 42 time transit system incorpor time transit system model assum transit happen instanta neousli realtim constraint restrict time transit occur time constraint requir transit perform neither earli late exampl valv control accept open quickli slowli close describ time constraint action system given lower time bound l upper time bound u lower time bound valu r 0 upper time bound either valu r 0 special symbol 1 denot absenc upper bound real number r 0 assum less 1 lower bound assum exceed upper bound transit time transit system consist underli transit system two function l u defin transit time bound transit comput trajectori sigma satisfi follow condit 1 initi aeh0 0i satisfi theta 2 consecut posit p either ae 1 p 2 ae 1 p later case say step taken posit p oe 3 time constraint lower bound taken posit p must exist posit p 1 p 1 p posit p 2 enabl p 2 taken posit p 2 upper bound enabl posit p exist disabl p 1 taken posit p 1 trajectori ae satisfi first two condit trajectori underli transit system traj set trajectori time transit system easi prove isomorph respect initi condit transit let transit system formula f valid satisfi iff trajectori ae 2 satisfi f valid formula svalid given system convers necessarili hold fact svalid state assert p may falsifi state never occur trajectori show given system meet specif f enough show f svalid proof rule said sound given tt svalid premis impli svalid conclus sound rule rule 1 rule 3 obvious ssound tt model ga burner intuit design de ga burner model tt gb 1 two state leak leak problem formal prove tt satisfi de formal refin gb 1 5 ltlstyle specif transit system yardstick properti time transit system includ bound invari properti bound progress properti properti structur induct proof rule given hmp94 use time linear tempor logic tltl section show properti incorpor extend dc framework state predic p invari transit system p hold posit interv trajectori thu unbound invari properti form 2p p invari transit system iff p impli theta p preserv action let fpgt fqg hold iff fpgfqg hold 2 induct rule prove invari given mp81 still ssound interv logic set ie transit system satisfi premis also satisfi conclus induct rule prove untim properti leav paper focu time bound properti express durat formula hmp94 interest prove boundedinvari boundedrespons properti thu restrict follow bound tempor formula primit formula action linear tempor formula boolean connect everi boolean combin tempor formula tempor formula boundedeventu formula oe tempor formula u 2 r 0 3 u oe tempor formula true trajectori ae initi posit ht posit ni hold suffix ae start p thu defin boundedunless formula p state properti oe tempor formula l 2 r 0 p ul oe tempor formula true trajectori ae iff p hold initi posit ht ae either p hold posit ae posit p hold suffix start p p hold everi posit q oe p formula thu defin also denot p ul true 2 l p l 0 defin 2 0 p true gener l 2 r 0 2 l p 6 induct rule section use convent letter p q r well denot state formula index version denot action oe stand tempor formula start bound invari properti bound invari properti assert state occur condit hold continu certain amount time properti specifi tempor formula form p therefor prove bound invari properti often prove bound unless properti five main rule bound unless hmp94 given tabl 1 still ssound set r oe tabl 1 rule bound unless bound progress properti assert p occur q must occur within certain amount time thu specifi form p ssound rule bound progress properti hmp94 brought framework given tabl 2 tabl 2 rule bound progress 7 link rule readi provid sound rule link tempor properti dcinvari prop erti dcbound respons properti dcminim separ properti rule present form premis rule tempor formula includ first order predic conclus formula dc indic dc properti deriv tltl properti verifi structur induct rule dcinvari properti e dpe weaker tempor invari properti 2p dcbound respons properti form dpe assert p must follow within u time unit occurr q prove follow link rule minim separ properti describ dcformula form assert hold p stabl least l time unit sinc chang p state use bound unless properti prove minim separ properti follow link oe rule induct sens oe tempor formula may link dc formula first premis ensur pattern dpe dpe oe collaps premis second line say state sequenc pattern proceed p last least l 1 time unit follow p state oe pattern premis third line ensur p last least l 2 time unit last two premis rule may combin one howev one second line establish use establish last one rule u css special case l dpe often use case rule becom 8 implement refin ga burner section illustr link method develop ga burner first show time transit system gb 1 given section 4 satisfi specif de section 3 show gb 1 refin implement may ignit failur final present implement de toler ignit flame failur theorem 1 time transit system gb 1 section 4 satisfi de proof de 1 deduc link2 premis de 2 follow link3 0 t2 l 26 proof thu complet follow lemma 1 lemma 1 time transit system gb 1 satisfi follow tltl properti proven appli 3 ss 1 4 follow premis obvious valid untim ltl proof system 3 establish 2 appli u css 2 l 2 implement ignit detect initi implement gb 1 refin tradit tt framework exampl transit system gb 2 figur 1 refin gb 1 goidl idl heaton purg burn flon figur 1 refin gb 1 gb 2 follow phase idl await heat request ga ignit enter purg within e time unit heat request paramet e exampl system wide upper bound reaction 2 purg paus second enter ignite1 within e time unit ignite1 turn ignit ga one second exit within e ignite2 ignite2 monitor flame sens within one second burn enter otherwis return idl within e turn ga rrh93 lam93 lower bound also given need prove correct design burn ignit switch ga still burn phase stabl heat request goe ga turn idl enter within e refin use simpl error recoveri return idl ignite2 assum flame failur burn phase therefor implement leak occur ignite1 ignite2 phase convent valu variabl x chang transit name x 0 formal definit refin transit system gb 2 follow theta def phase ignit ignit goidl time bound given figur 1 let leak 1 hold iff phase ignite1 hold leak 2 hold iff phase ignite2 hold follow present properti two leak state gb 2 correspond properti leak proof routin gb 1 theorem 2 gb 2 refin gb time transit system gb 2 satisfi proof 3 ss e establish 3 ss e establish 3 tran 11 21 give us obvious satisfi 3 establish proof similar one 3 lemma 1 use 22 leak 1 leak 2 follow corollari prove way theorem 1 prove leak corollari 1 time transit system gb 2 follow properti e 1 properti gb 2 properti gb 1 de de de de 22 proof de 11 de 21 proof de 1 gb 1 proof de 12 de 22 de 2 gb 1 theorem 1 use link rule proof theorem 1 corollari 1 corollari corollari 2 time transit system gb 2 follow properti e 1 properti gb 2 properti gb 1 leak gb 1 req leak gb 1 interest notic req ga burner alreadi deduc corollari 1 theorem also deduc corollari 2 valid formula r r r implement flame failur flame may disappear phase burn add anoth simpl error recoveri procedur enter idl burn switch ga formal redefin action goidl gb 2 goidl let leak 3 denot phase burn flame correspond time transit system gb 3 satisfi corollari 2 follow properti req form req abstract state leak gb 1 prove proof routin req prove gb 1 let leak disjunct leak 1 leak 2 leak 3 valid formula r r r r r give follow correct theorem theorem 3 correct gb 3 assum e 23 transit system gb 3 satisfi requir req ga burner system howev mention gb 3 refin gb 1 gb 2 implement de meet de 2 9 conclus discuss paper present logic combin origin durat calculu approach zhr91 linear tempor logic approach hmp94 lam93 specif verif embed realtim system main idea use dc specif system requir initi design use tt implement refin combin provid advantag dc directli model convent dynam system state function time advantag tt model comput reactiv system rule link two level specif given easi see set comput tt term trajectori isomorph set comput defin hmp94 within framework play game dc high level obtain initi design correspond simpl tt refin design total within tt framework support formal verif refin two ttss lam94 al91 step step obtain implement code program approach illustr solv ga burner exampl advantag combin approach becom obviou compar solut singl dc framework rrh93 solut singl tltl framework lam93 specif system differ level simpler better structur proof correct system differ level easier directli reflect structur induct step refinementimplement concret state eg lower level reason way correspond abstract state eg leak gb 1 higher level combin logic allow us describ multipl instantan transit time point purpos zhou hansen zh96b xu xu97 introduc densechop oper defin mean sequenti composit state transit densechop oper defin differ comput model two paper howev approach intermedi state sequenti composit statement hidden thu semant x x 3 nice properti approach use deal concurr system share variabl howev share memori base model ttss semant quit differ x 3 k x 0 approach paper defin dc term trajectori transit system defin satisfact relat durat formula transit system paper improv earlier work lrl98 redefin trajectori semant chop oper allow us drop notat stepcount variabl treat state predic natur special action work paper includ develop full logic perhap base neighbourhood modal zh96a would provid complet interv logic extend modal abstract live fair properti treat forese major chang extens anoth applic would appli link techniqu tlaframework lam94 ideal put combin logic rule one exist durat calculu verif assist see major technic problem consolid effort r automata model realtim system exist refin map tempor proof methodolog time transit system durat calculu logic foundat formal verif parallel program specifi messag pass timecrit system tempor logic prove correct multiprocess program hybrid system tla tempor logic action specif verif durat calculu composit induct verif durat properti realtim system verifi durat properti time transit system tempor framework concurr program tempor logic reactiv concurr system specifica tion refin system requir program specif applic tempor logic specif realtim system tempor logic program design embed realtim comput system engin realtim system experi hybrid control specifi verifi requir realtim system semant verif extend phase transit system durat cal culu adequ first order interv logic chop point calculu durat tr