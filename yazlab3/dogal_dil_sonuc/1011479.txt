semant logic object calculi main contribut paper formal character recurs object specif exist base denot untyp semant object calculu exist guarante shown employ pitt result relat properti domain semant use analys verifi abadi leino object logic also suggest extens exampl specif method may refer field also method object store achiev without compromis exist theorem inform logic predomain use intent order avoid commit particular syntax specif logic b describ introduct rule wrt object format therefor exist specif equival valid introduct rule result implicit definit specif neither guarante exist uniqu unless phi certain form 1 domain theori provid suffici machineri guarante exist uniqu therefor work denot domain theoret semant put us posit precis account problem far author awar systemat denot analysi object logic carri first author partial support epsrc grant grr6519001 nuffield foundat grant nal00244a usual phi monoton recurs defin monoton strong condit object specif yet although success role model lcf logic comput function logic function paradigm outlin paper follow firstli denot semant function imper untyp object calculu 1 given top notion specif inspir abadi leino logic 2 defin result object domain prove exist specif mild assumpt employ andi pitt machineri relat properti domain 10 exist theorem interest right also appli ffl prove sound object format rule 2 untyp way type encod specif ffl exemplifi via counterexampl certain specif exist suggest extens exist program logic 2 8 introduc method invari logic higher order store moreov propos techniqu expect applic variou objectori languag program logic basic idea date back draft 13 abstract publish 14 denot model object calculu section describ simpl denot semant function imper object calculi within categori predom predomain partial continu function let denot partial continu function space predomain fa denot function f appli undefin wherea fa denot defined 21 preliminari specifi recurs type need interpret object calculi often employ record type format follow sens let l count abl set label predomain type record entri label l defin follow l set total function l easili seen recl local continu functor predom record label l correspond entri jg notic recl alway nonempti contain element h definit 21 updat extens oper record defin tabl 1 page 3 select label 2 l record r 2 recl short ra defin yield fa 2 22 function object calculu let us first recal syntax function object calculu 1 sake simplic function case distinguish field method updat f set method name field name respect object creation method call method updat simplic method addit argu ment real restrict argument encod field let bval denot flat predomain basic valu like number boolean function object calculu natur find interpret within recurs specifi predomain nonempti record type alway nonempti choos bval empti get recurs type 2 consid variant object calculu without field get simpl recurs type strongli remind one callbyvalu lambda calculu given type equat differ essenti object partial continu function object object whole record object o2o messag result send messag object given omo understood diverg occur label record make sens conceiv method partial continu function ie strict function om defin argument defin well sake simplic paper use last domain equat interpret function object calculu fit convent calculu distinguish method field updat 2 write aae interpret object express environ ae 2 var interpret defin structur recurs object express via follow claus 23 imper object calculu recal syntax imper untyp object calculu 1 follow distinguish field method object creation field select field updat method call method updat clonea shallow copi j letxa b local def imper calculu find interpret within follow slightli complic system recurs type loc countabl set locat consid predomain notat come handi later section write st val rec loc rec f val obviou project val ststval val oe project first compon 2 note distinguish howev object logic differ tabl 1 definit record updat extens notic definit st rec loc ob faith reflect idea state assign object finit set locat think model state record also employ model eg simpl imper languag basic valu store locat besid conceptu adequaci technic advantag model rec loc n countabl flat predomain wherea tradit choic locn uncount highli nonflat definit 22 given environ ae 2 object express interpret stlocthetast defin tabl 22 page 4 note write om instead 1 resp reduc syntact clutter one distinguish method field ignor basic valu abadi cardelli 1 system mutual recurs type definit simplifi follow fact field method distinguish impli method overrid allow notic equival ob defin singl recurs equat obvious obtain recm oo simpli replac locthetarec loc ob right hand side 231 variat la abadi cardelli notic denot semant present quit accord oper semant imper object calculu given book 1 abadi cardelli pp 136137 impli follow domain equat method closur save store mean object express environ ae 2 val var function type stvalthetast type stlocthetast leav exercis inclin reader give semant equat object calculu accord domain equat interpret adequ wrt oper semant 1 3 object specif identifi mean function imper resp object calculu within recurs defin predomain loc theta st posit use logic predomain reason object end one might find use identifi special purpos calculu reason object find mean translat logic predomain 3 howev embark project rather discuss shape predic express interest properti object 31 first notion specif consid function case first order understand specif object possibl definit could follow definit 31 let 2 popo monoton othetao m2m data induc monoton oper defin po bm stand result specif tm repres transit specif method final specifi remain properti ob ject ie field write inva greatest fixpoint phi 3 eg hoar logic provid sort use macrolanguag reason partial function state fresh locat domain oe 0 fresh locat domain oe 0 let xa bae tabl 2 denot semant imper object calculu postfixpoint phi everi o2i satisfi predic whenev omo defin satisfi bm relat via tm particular hold greatest fixpoint inva phi given union post fixpoint phi thu order prove one simpli exhibit predic p notion invari specif seem quit accord coalgebra view objectori world therefor probabl quit use ful howev seem limit exemplifi follow exampl exampl 31 consid object express j mxxm oper intuit tell us diverg therefor would desir prove employ appropri notion invari come one mind immedi invari fals coinduct help prove object sinc one find predic p canon choic p noth achiev 2 abadi leino introduc sort hoar logic variant imper object calculu allow one prove diverg quit easili sake simplic first discuss follow adapt account pure function case 32 function object specif notion specif function object sug gest exist specif discuss section 4 definit 32 everi 2 po po pom2m everi predic provid uniqu properti call specif induc b differ inva sinc one requir method m2m condit 8o 0 2s omo 0 hold implicitli recurs specifi even b depend exampl 32 illustr power new notion employ specif satisfi ie 8o 0 2s omo 0 show cours o2 follow omo thu remain show howev easili seen case diverg previou consider 33 imper object specif imper set correspond notion specif obtain analog function case yet account underli store differ im plement exist specif discuss section 4 definit 33 predic famili predic resp pval theta st m2m st theta val theta st m2m let predic loc theta st provid uniqu properti predic loc theta st provid uniqu properti section 4 becom clear use restrict attent transit specif refer flat part store higherord part store ie method closur exampl 33 assum object specif suppos express follow invari field f alway posit natur number defin accordingli howev despit indisput use problem specif obviou reason exist right hand side equival characteris contain posit neg occurr speca though 2 specif use intrins exist verifi instead valid assert program defin wrt deriv correct assert render valu sound theorem 2 somewhat mysteri dubiou 4 exist object specif section identifi mild assumpt guarante exist uniqu specif introduc previou section 41 function object specif contrast function 4 imper kernel languag object calculu implicitli presuppos recurs type like thu appear necessari employ induct principl recurs type involv order verifi pro gram recal fairli concret term induct principl use establish exist specif fairli mild condit wellknown work freyd pitt earli nineti know bifre solut domain equat characteris requir id least fixpoint case f x defin explicitli endofunct oo given equival readabl form e oo a2o m2m f immedi p id hold admiss predic poo 8evid p ep ffie fixpoint induct principl use directli verifi properti object exampl 41 let mxxm use fixpoint induct one prove consid admiss predic oo obvious equival p id thu fixpoint induct suffic show suppos evid p e ie eomeo p ffie last equal induct hypothesi p e fixpoint induct principl employ prove uniqu exist specif rather mild assumpt 4 exampl pcf base finit type hierarchi base type n simpl imper languag hoar calculu first introduc base rec loc valrec loc val definit 41 flat predomain let l complet lattic scottclos ie admiss downwardclos subset thetaa order let flat predomain xy 2 l 10 set obvious nonempti scottclos subset domain aa follow theorem use line argument loccit theorem 42 given local continu bifunctor pre domain f predomain f predomain monoton phi l op theta al xy uniqu 2 l proof let al monoton satisfi condit map al op theta l monoton endomap complet lattic l op theta thu knastertarski b phi fixpoint establish show fixpoint induct admiss predic p ef e e therefor p id id ef e e follow viousli p induct step assum p e f f gousli follow e f thu thu conclud exist least one 2 show uniqu suppos admiss predic follow p ef e e fixpoint induct obvi ousli p assum p e f induct hypothesi p id follow immedi id theorem 43 exist theorem let l denot l 1 f moreov let 2 om2m famili id xy 2 l xy 2 l scottclos exist uniqu 2 l satisfi proof consid predic scottclos due fact bm tm scottclos see also condit 3 fact precondit implic scottopen clearli theta monoton obvious requir equival thu show exist uniqu 2 l guarante theorem 42 provid show phi satisfi condit theorem 42 verifi next suppos e v id show f show f e eo 2 phiy first show f e eo2ax 0 f e eo v therefor also f e eo2ax 0 due assumpt 1 next let m2m therefor induct hypothesi 2 assumpt moreov obtain assumpt 3 eomeo 0 v omeo 0 sinc 3 impli x 0 v x v 0 impli f e eomo 0 42 imper object specif recal section 2 imper object calculu 2 find denot interpret within recurs defin predomain st f st st st latter defin rec loc rec f valthetarec locthetastvalthetast next prove variant theorem 43 imper object calculu theorem 44 predic famili predi cate resp st theta val theta st m2m ii 2 iii predic tm scottclos last argument monoton second argument exist uniqu 2 l loc st proof instanti theorem 42 f st f loc st guarante exist uniqu fixpoint phi provid verifi phi satisfi condit theorem 42 note phiy x scottclos due condit iii fact precondit implic scottopen also subsequ use help recal f st e eoe oe 2 st f st e b f st e show phi satisfi condit suppos e v id st xx show f st purpos suppos show h f st e eoei 2 phiy 3 get ax oe thu get ie first part conjunct second part suppos b f st e eoem 0 oe 0 know valu v2val store oe 00 2st show f st e eom 6 follow eoe 0 thu 4 get 2 thu 3 follow bm xoem ie bm xhv oe 00 6 ii follow therefor 5 follow second part conjunct h oei 2 phiy x ensur 3 7 oem 0 eoe 0 6 5 follow eoe 00 6 eoe 0 fore assumpt iii follow ie prove certain condit specif realli exist condit iii theorem 44 awkward prove simplifi method specif refer flat part store corollari 45 given predic famili predi cate resp ii 2 exist uniqu 2 l loc st proof appli corollari 44 remain show condit iii loccit hold follow simpli fact st val flat predomain 5 sound abadi leino logic de notat theorem 51 object creation rule abadi leino logic correct wrt semant proof object specif 2 read follow field specif b j result specif method j j transit specif j interpret predic denot follow theorem 44 give rise uniqu predic definit 33 serv denot interpret import abadi leino logic transit specif j refer flat part store otherwis exist could guarante object format rule loccit say newli creat object specifi actual memori alloc absenc side effect ignor side effect issu creation correct rule semant follow simpli definit 33 specif spec rel straightforward devis denot semant whole logic abadi leino prove correct calculu wrt denot semant proof easier one present 2 6 possibl extens abadi leino logic deal object specif denot yield concis explan abadi leino logic also suggest extens 61 invari contrast abadi leino predic bm may contain recurs occurr specif self field requir fulfil specif ambient object one need recurs result method requir contain object fulfil specif ambient ob ject one need recurs bm 8 leino give variant logic 2 allow recurs object descript requir method declar advanc present approach even allow definit specif may allow bm refer self refer express whole specif invari set requir method invoc preserv specif self object mean specif spec describ denot properti object certain point program like abadi leino kind invari seen definit class specif object calculu 62 method updat gener present approach allow one deal method updat limit way consid follow exampl exampl 61 sensibl requir presenc method updat method alter anoth method ie method n becom less equal defin execut less sinc deal partial correct formal translat follow transit predic definit satisfi condit iii theorem 44 sinc e v id eoen w oe 0 n transit oen w eoen w oe 0 n w eoe 0 n follow form transit specif exist theorem appli remain clarifi specif gener form need exist demonstr counterexampl next section 7 non exist specif show particular object specif exist prove follow auxiliari lemma deal transit specif may also refer non flat part store ie method closur lemma 71 let locthetastthetalocthetastvalthetast locat oe state satisfi proof 0 follow therefor 1 ie oe 2 thu oe oem give exampl nonexist object specifica tion exhibit transit specif tm locat store oe exist locthetast satisfi specif restrict assumpt theorem 45 tm must refer flat part store ie specif past futur behaviour method made must necessarili violat also condit iii theorem 44 hold exampl 72 consid follow object specif note admiss let oe h denot properti specif reformul ie condit 0 lemma 71 hold oe one easili verifi 1 hold 2 fals contradict lemma 712 natur counterexampl expect semant model logic object calculi use hoar tripl like tent one suggest 4 conclus shown denot approach program logic object calculi lead better understand implicit recurs object specif reason principl sinc notion specif encod object introduct rule logic sound rule equival exist speci ficat guarante exist one care reason nonflat method part store possibl deal similar object calculi logic denot way analysi languag fruit quest natur counterexampl comparison classbas languag attempt 15 recurs method program object calculu without explicit recurs due recurs higherord definit underli store particular instanc recurs store gener variant allow unrestrict execut code store memori rather liber usag higherord store need model differ domain equat thu need differ treatment altogeth result analog paper expect hard establish paper use classic logic meta logic commit particular object logic spatial separ logic 9 5 prospect candid object logic simplifi handl alias remain seen whether predic logic pose problem present approach issu tackl includ sound proof abadi leino logic possibl extend invari reason principl higherord store develop logic type semant object calculu subtyp includ method paramet acknowledg thank cristiano calcagno peter ohearn discuss recurs store relat matter r theori object logic objectori pro gram proof theori sequenti version pool logic object garbag program logic modular specif verif objectori program recurs object type logic objectori program local reason program alter data structur relat properti domain logic foundat type objectori languag object class algollik lan guag logic recurs object logic recurs object abstract class base vs object base denot com parison hoarecalculu verifi java realiz oclconstrain design model tr inherit smalltalk80 denot definit two semant model objectori languag reason java class object class algollik languag compon softwar theori object modular specif verif objectori program recurs object type logic objectori program hoar calculu verifi java realiz oclconstrain design model semant logic object calculi classbas versu objectbas logic objectori program wpcalculu oo garbag program logic logic recurs object logic foundat type objectori languag local reason program alter data structur introduct specif logic denot semant inherit ctr bernhard reu jan schwinghamm denot semant program logic object mathemat structur comput scienc v16 n2 p313358 april 2006