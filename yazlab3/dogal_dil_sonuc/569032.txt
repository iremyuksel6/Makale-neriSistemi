model check safeti properti special interest formal verif safeti properti assert system alway stay within allow region proof rule verif safeti properti develop proofbas approach verif make verif safeti properti simpler verif gener properti paper consid model check safeti properti comput violat gener linear properti reach bad cycl wit violat properti accordingli current method tool model check linear properti base search bad cycl symbol implement search involv calcul nest fixedpoint express system state space often infeas everi comput violat safeti properti finit prefix along properti violat use fact order base model check safeti properti search finit bad prefix search perform use simpl forward backward symbol reachabl check naiv methodolog base search involv construct automaton tableau doubli exponenti properti present analysi safeti properti enabl us prevent doublyexponenti blow use automaton use model check gener properti replac search bad cycl search bad prefix b introduct today rapid develop complex safetycrit system requir reliabl veric method formal veric verifi system meet desir properti check mathemat model system meet formal specic describ properti special interest properti assert observ behavior system alway stay within allow set nite behavior noth bad happen exampl reasearch support bsf grant 9800096 address school comput scienc engin jerusalem 91904 israel email ornacshujiacil z address depart comput scienc houston part nsf grant ccr9700061 grant intel corpor may want assert everi messag receiv previous sent properti system call safeti properti intuit properti safeti properti everi violat occur nite execut system exampl comput system messag receiv without previous sent occur nite execut system order formal dene safeti properti refer comput nontermin system innit word alphabet typic set system atom proposit consid languag l innit word nite word x bad prex l innit word concaten x x l thu bad prex l nite word extend innit word l languag l safeti languag everi word l nite bad prex exampl safeti languag see note everi word l contain either sequenc 01 sequenc 10 prex end one sequenc extend word l denit safeti consid given as85 coincid denit limit closur dene eme83 dierent denit lam85 also refer properti close stutter linear properti nontermin system often speci use buchi automata innit word linear tempor logic ltl formula say automaton safeti automaton recogn safeti languag similarli ltl formula safeti formula set comput satisfi form safeti languag sistla show problem determin whether nondeterminist buchi automaton ltl formula safeti pspacecomplet sis94 see also as87 hand buchi automaton determinist problem solv linear time mp92 sistla also describ sucient syntact requir safe ltl formula exampl formula posit normal whose tempor oper g alway x next safeti formula sis94 suppos want verifi correct system respect safeti properti use fact properti known safeti properti order improv gener veric method posit answer question subject paper much previou work veric safeti properti follow proofbas approach veric fra92 proofbas approach system annot assert proof rule use verifi assert particular manna pnueli consid veric reactiv system respect safeti properti mp92 mp95 denit safeti formula consid mp92 mp95 syntact safeti formula formula form g past formula syntact denit equival denit discuss mp92 proofbas method also known veric live properti ol82 assert system eventu reach good set state proof rule approach less sensit size state space system requir heavi user support work consid stateexplor approach veric automat model check ce81 qs81 perform order verifi correct system respect specic previou work subject consid special case safeti live properti invari check gw91 mcm92 val93 mr97 assum gener safeti properti given set bad prex gw91 gener method model check linear properti base construct tableau automaton accept exactli innit comput violat properti lp85 vw94 given system properti veric respect reduc check empti product vw86a check perform onth symbol cvwy92 gpvw95 tbk95 ltl formula size exponenti length complex veric follow pspace match lower bound sc85 consid safeti properti let pref denot set bad prex exam ple pref gp contain nite word posit p hold recal everi comput violat prex pref say automaton nite word tight safeti properti recogn pref sinc everi system violat comput prex pref automaton tight practic help inde reason automata nite word easier reason automata innit word cf hksv97 particular word nite use backward forward symbol reachabl analysi bcm addit use automaton bad prex return user nite error trace bad prex often help innit error trace given safeti properti construct automaton tight show construct involv exponenti blowup case given nondeterminist buchi automaton involv doublyexponenti blowup case given ltl result surpris indic detect bad prex nondeterminist automaton avor determin tight automata construct inde determinist nevertheless construct avoid dicult determin buchi automaton cf saf88 use subset construct construct tight automata reduc problem veric safeti properti problem invari check fra92 mp92 inde take product tight automaton system check never reach accept state tight automaton invari check amen model check techniqu deduct veric techniqu bm83 sor93 mab 94 practic veri system often larg even clever symbol method cope stateexplos problem model check face way construct tight automata also enabl case bdd construct symbol reachabl test get larg analysi intermedi data collect analysi lead conclus system satisfi properti without travers system view discourag blowup describ releas requir tight automata seek instead automaton need accept bad prex yet must accept least one bad prex everi comput satisfi say automaton ne exampl automaton recogn p p p p accept word pref gp yet ne gp practic almost benet one obtain tight automaton also obtain ne automaton show natur safeti formula construct automaton ne easi construct formal notion natur safeti formula consid safeti gp xq xq singl state p hold bad prex nevertheless prex tell whole stori violat inde latter depend fact xq xq unsatis especi complic exampl may trivial notic user bad prex inform name tell whole violat stori bad prex may inform user intellig requir order understand bad prex formal denit inform prex similar semant ltl nite comput xtrue hold nal posit notion inform prex base classic safeti properti three distinct safeti level properti intent safe bad prex inform exampl formula gp intent safe properti accident safe everi comput violat inform bad prex exampl formula gpxq xq accident safe final properti patholog safe comput violat inform bad prex exampl formula gq gfp gr gfp gq gr patholog safe intent safe properti natur accident safe especi patholog safe properti contain redund expect see often practic show automaton accept exactli innit comput violat easili blowup modi automaton true nite word tight intent safe ne accident safe suggest veric methodolog base observ given system safeti formula rst construct automaton true regardless type intersect true empti get error trace sinc true run nite word nonempti check use forward reachabl symbol method product empti true tight intent safe formula ne accident safe formula may two reason one satis second patholog safe distinguish two case check whether patholog safe check requir space polynomi length patholog safe turn user attent fact specic needlessli complic accord user prefer either construct automaton tight proceed usual ltl veric wait altern specic far discuss safeti properti linear paradigm one also dene safeti branch paradigm properti describ tree safeti properti everi tree violat nite prex whose extens violat properti well dene safeti branch paradigm show problem determin whether ctl univers ctl formula safeti exptimecomplet pspacecomplet respect given linear complex ctl model check clear yet whether safeti help notion branch paradigm hand show safeti help notion assumeguarante paradigm safeti either assumpt guarante sucient improv gener veric method preliminari 21 linear tempor logic logic ltl linear tempor logic formula ltl construct set ap atom proposit use usual boolean oper tempor oper x next time u v dualiti formal given set ap ltl formula posit normal form dene follow true fals p p p 2 ap ltl formula ltl formula use cl denot closur name set subformula dene semant ltl respect comput everi j 0 j subset ap denot set atom proposit hold js posit denot sux j use j indic ltl formula hold path relat j induct dene follow j true 6j fals atom proposit p 2 ap 0 k often interpret linear tempor logic formula system mani comput formal system set state r w w total transit relat everi w 2 w least one w 0 rw w 0 set w 0 set initi state l map state set atom proposit hold comput sequenc w 0 rw modelcheck problem ltl determin given ltl formula system whether comput satisfi problem known pspacecomplet sc85 22 safeti languag formula consid languag l innit word alphabet nite word x 2 bad prex l 2 x 62 l thu bad prex nite word extend innit word l note x bad prex nite extens x also bad prex say bad prex x minim strict prex x bad languag l safeti languag everi w 62 l nite bad prex safeti languag l denot pref l set bad prex l say set pref l trap safeti languag l everi word w 62 l least one bad prex x thu x need contain bad prex l must contain sucient mani prex trap word l denot trap l trapl languag l use compl denot complement l ie say languag l cosafeti languag compl safeti languag term use mp92 guarante languag equival l cosafeti everi w 2 l good prex x 2 2 x 2 l cosafeti languag l denot copref l set good prex l note copref ltl formula set ap atom proposit let k k denot set comput 2 ap satisfi say safeti formula k k safeti languag also cosafeti formula k k cosafeti languag equival k k safeti languag 23 word automata given alphabet innit word innit sequenc letter denot w l sux l l1 l2 w given set x let x set posit boolean formula x ie boolean formula built element x use also allow formula true fals x say truth assign assign true member assign fals member x n satis exampl set fq satisfi formula q 1 q set fq 1 satisfi formula transit function nondeterminist automaton state space q alphabet repres use q exampl transit q written q transit nondeterminist automata correspond disjunct transit altern automata arbitrari formula b q instanc transit q mean automaton accept state q sux w l start w accept w l1 q 1 q 2 q 3 q 4 transit combin existenti univers choic formal altern automaton innit word input alphabet q nite set state set initi state f q set accept state run nondeterminist automaton word w view function r q run altern automaton w tree whose node label state q formal tree nonempti set everi x c 2 x 2 c 2 x 2 element call node empti word root everi x 2 node x c 2 children x node children leaf path tree set 2 everi x 2 either x leaf exist uniqu c 2 x c 2 given nite set label tree pair ht v tree map node letter run innit word qlabel tree ht r ri r r 2 q 0 everi node x 2 r possibl empti set satis 1 c k x c 2 r rx c q c exampl q 0 possibl run w root label q one node level 1 label q 1 q 2 anoth node level 1 label q 3 q 4 note function valu true need successor also never valu fals run run r innit path r let infrj denot set state r visit innit often along innit mani x 2 q nite guarante infrj 6 buchi automaton innit word run r accept infrj f 6 innit path r everi path run visit least one state f innit often automaton also run nite word run nite word qlabel tree ht r ri r n n set word length n alphabet run proce exactli like run innit word node level n r leav run ht r ri accept node level n visit accept state thu node x 2 r n rx 2 f word either nite innit accept exist accept run note conjunct transit function ect branch ht r ri disjunct ect fact mani run word languag denot la set word accept alreadi mention determinist nondeterminist automata view special case altern automata formal altern automaton determinist q q nondeterminist q alway disjunct q dene size altern automaton sum jqj jj jj sum length formula say automaton innit word safeti cosafeti automaton la safeti cosafeti languag use pref copref trapa compa abbrevi pref la copref la trapla compla respect automaton set state denot automaton obtain dene set initi state say automaton innit word univers run nite word univers automaton empti state q 2 q nonempti set state univers resp reject univers empti note univers problem nondeterminist automata known pspacecomplet ms72 wol82 state basic result concern analysi safeti gener sistla result sis94 concern safeti ltl formula theorem 21 check whether altern buchi automaton safeti cosafeti automaton pspacecomplet proof let given altern buchi automaton equival nondeterminist buchi automaton n whose size exponenti size mh84 assum state n accept least one word otherwis remov state simplifi transit relat let n loop automaton obtain n take state accept state shown as87 sis94 safeti automaton ln loop contain la order check latter rst construct nondeterminist automaton n l construct n rst complement quadrat blowup kv97 translat result altern buchi automaton nondeterminist buchi automaton involv exponenti blow mh84 thu size n exponenti size ln loop contain la intersect ln loop l n empti sinc construct describ perform empti intersect check space polynomi size claim cosafeti follow sinc note altern buchi automata complement quadrat blowup kv97 lower bound follow sistla lower bound ltl sis94 sinc ltl formula translat altern buchi automata linear blowup see theorem 22 note nonempti test requir algorithm perform use model check tool cf cvwy92 tbk95 24 automata tempor logic given ltl formula posit normal form one build nondeterminist buchi automaton vw94 size exponenti j j shown kvw00 var96 altern automata use translat involv linear blow 1 translat ltl formula altern buchi automata go use also methodolog describ theorem 22 kvw00 var96 given ltl formula construct linear run time altern buchi automaton proof set f accept state consist formula form 1 remain dene transit function 2 2 ap dene use translat describ mh84 altern buchi automata nondeterminist buchi automata get corollari 23 vw94 given ltl formula construct exponenti run time nondeterminist buchi automaton n ln combin corollari 23 theorem 21 get follow algorithm check safeti ltl formula algorithm essenti describ sis94 rephras somewhat emphas usag model check 1 construct nondeterminist buchi automaton 1 automaton linearli mani state sinc alphabet 2 ap may exponenti formula transit function linear size involv implicit represent 2 use model checker comput set nonempti state elimin state take remain state accept state let n loop result automaton theorem 21 safeti formula kn loop k kn k thu comput accept n loop satisfi 3 convert n loop system loop transit label function thu system loop exactli comput accept n loop 4 use model checker verifi loop detect bad prex linear properti nontermin system often speci use automata innit word linear tempor logic ltl formula given ltl formula one build nondeterminist buchi automaton recogn k k size worst case exponenti gpvw95 vw94 practic given properti happen safe want automaton nite word detect bad prex discuss introduc tion automaton easier reason section construct given safeti properti automaton bad prex rst studi case properti given nondeterminist buchi automaton given automaton determinist construct automaton 0 pref straightforward inde obtain 0 dene set accept state set state empti theorem 31 show nondeterminist automaton thing simpl avoid dicult determin may also requir accept condit stronger buchi saf88 avoid exponenti blowup theorem 31 given safeti nondeterminist buchi automaton size n size automaton recogn pref 2 n proof start upper bound let recal pref la contain exactli prex x 2 2 x 62 la accordingli automaton pref accept prex x set state could read x reject formal dene determinist automaton follow transit function 0 follow subset construct induc everi s2 set accept state contain reject set turn lower bound essenti follow fact pref refer word accept henc avor complement complement nondeterminist automaton nite word involv exponenti blowup mf71 fact one construct nondeterminist automaton qi state accept smallest nondeterminist automaton recogn compa state see consid languag l n consist word w either jwj 2n given let 0 regard buchi automaton innit word claim pref see note sinc state accept word w reject run w get stuck read state 0 accept hold w pref note construct determinist automaton 0 one appli minim techniqu use veric tool mona kla98 lower bound theorem 31 surpris complement nondeterminist automata involv exponenti blowup demonstr lowerbound proof tight relat pref compa could hope therefor properti speci neg form describ forbidden behavior system given ltl whose formula negat detect bad prex would harder detect bad comput theorem 32 33 refut hope theorem 32 given cosafeti nondeterminist buchi automaton size n size automaton recogn copref la 2 n proof upper bound similar one theorem 31 dene set accept state 0 set univers set prove match lower bound n 1 let g dene l n languag word w w contain least one letter rst either alreadi appear somewher rst languag l n cosafeti languag inde word l n good prex eg one contain rst successor recogn l n nondeterminist buchi automaton state automaton guess letter appear rst obviou good prex l n 12 1232 etc recogn prex nondeterminist automaton state n also less obviou good prex like 1234 n permut prex inde good everi sux concaten would start either letter ng appear recogn prex nondeterminist automaton need keep track subset ng need state consequ nondeterminist automaton copref l n must least 2 n state extend proof theorem 32 get doublyexponenti lower bound go safeti ltl formula nondeterminist automaton bad prex idea similar proof theorem 32 use exponenti lower bound go nondeterminist determinist buchi automata proof case variant doubli exponenti lower bound go ltl formula determinist buchi automata kv98 order prove latter kv98 dene languag l n f0 1 g word w l n sux length n come singl w appear somewher cks81 smallest determinist automaton nite word accept l n least 2 2 n state reach automaton rememb possibl set word f0 1g n appear hand specifi l n follow length quadrat n ignor technic fact buchi automata ltl formula describ innit word 1in theorem 33 given safeti ltl formula size n size automaton pref 2p n proof upper bound follow exponenti translat ltl formula nondeterminist buchi automata vw94 exponenti upper bound theorem 31 lower bound dene n 1 languag l 0 n innit word f0 1 g everi word l 0 n contain least one rst either word f0 1g n appear word f0 1g n least one rst n posit rst languag l 0 n cosafeti languag proof theorem 32 prex form x x 2 f0 1 g contain word f0 1g n good prex nondeterminist automaton need 2 2 n state detect good prex make automaton copref l 0 doubli exponenti hand specifi l 0 n ltl formula n quadrat n formula similar one l n satis also comput rst follow word f0 1g n safeti formula size quadrat n size smallest nondeterminist buchi automaton pref order get upper bound theorem 33 appli exponenti construct theorem 31 exponenti buchi automaton k k construct theorem 31 base subset construct requir check univers set state q check correspond valid check dnf formula disjunct correspond state q size formula exponenti j j number distinct liter formula linear j j impli follow lemma lemma 34 consid ltl formula nondeterminist buchi automaton let q set state univers problem q check use space polynomi j j proof everi state associ set subformula set q state correspond set f 1 set subformula let l g set q univers j valid though formula q may exponenti longer check valid pspace rst negat get formula clearli q valid satis q satis least one conjunct disjunct normal thu check q satis enumer conjunct check whether one satis sinc conjunct polynomi size number liter bound j j claim follow note satis problem ltl thu reduc nonempti problem nondeterminist buchi automata thu also model check cvwy92 tbk95 fact nondeterminist buchi automaton construct vw94 contain set subformula state run univers test suce comput set state accept innit word conjunct satis set f 1 g contain state given safeti formula say nondeterminist automaton nite word tight view lower bound proven construct tight automata may expens say nondeterminist automaton nite word ne exist x 2 trapk k x thu ne automaton need accept bad prex yet must accept least one bad prex everi comput satisfi practic almost benet one obtain tight automaton also obtain ne automaton get back point section 6 open question whether feasibl construct ne automata gener safeti formula section 5 show natur safeti formula construct automaton ne easi construct automaton 4 symbol veric safeti properti construct tight automata reduc problem veric safeti properti problem invari check amen larg varieti techniqu particular backward forward symbol reachabl analysi proven eectiv techniqu check invari properti system larg state space bcm practic howev veri system often larg even clever symbol method cope stateexplos problem model check face section describ way construct tight automata enabl case bdd construct symbol reachabl test get big analysi intermedi data collect analysi solv modelcheck problem without travers system consid system nm automaton accept nite comput given let nondeterminist cosafeti automaton k proof theorem 32 construct automaton 0 follow subset construct dene set accept state set univers set one need verifi invari product nm 0 never reach accept state 0 addit forward backward symbol reachabl analysi one could use varieti recent techniqu semiexhaust reachabl analysi rs95 ysaa97 includ standard simul techniqu lwa98 also one could use bound modelcheck techniqu reduct proposit satis problem use check whether path bound length initi state accept state nm 0 bcc howev 0 doubli exponenti j j bdd represent 0 use exponenti j boolean variabl conceiv howev due determin 0 bdd would practic larg width therefor would manag size see section 62 relat discuss anoth approach appli forward reachabl analysi product system automaton formal let let product state space w q successor state hw qi pair hw method use predic post given set state repres symbol return successor set set state transit state start initi set method iter construct 0 set could therefor say construct implement subset construct dynam model check rather static model check calcul proce symbol repres bdd forward symbol method actual follow subset construct inde w 2 w set q w set state reach via path length state w 0 state w note set exponenti j larg result possibl larg bdd hand number boolean variabl use repres linear j j experiment work need compar merit two approach ie static vs dynam subset construct discuss suggest follow techniqu case encount space prob lem suppos point bdd get big check whether state w set q w univers lemma 34 check univers space polynomi j j note need enumer state w check q w enumer directli set q w whose number doubli exponenti j j repeatedli select state w 2 w analyz q w remov state u 2 w q u lemma 41 encount univers q w solv modelcheck problem without travers system lemma 41 safeti formula nonempti q w univers proof suppos q w univers consid innit trace start w sinc q w univers state q 2 q w accept q addit denit nite trace x state w 0 w read x automaton reach q henc innit trace x satisfi suppos nonempti innit trace accept safeti formula bad prex x length q 0 x univers x end state w q w univers let j length shortest bad prex exist direct left right lemma 41 strengthen nonempti impli everi j w 2 w q w univers want sometim calcul j advanc stronger version give inform method discuss sound also complet note possibl use semiexhaust reachabl techniqu also analyz instead take i1 post take subset 0 ensur howev satur respect state lwa98 inform allow drop state i1 allow drop state formal hw qi 2 0 word pair mstate element w stay subset 0 pair mstate element w stay ensur semiexhaust analysi follow bad prex length q 0w univers extrem case follow one trace ie simul case 0 relat approach see ces97 abg 00 note simul gener perform safeti formula use heurist also gener formula get back point remark 53 61 5 classic safeti properti consid safeti ltl formula gp bad prex x gp must contain state p hold user get x error trace immedi understand gp violat consid formula equival gp therefor safeti formula moreov set bad prex gp coincid nevertheless minim bad prex eg singl state p hold tell whole stori violat inde latter depend fact xqxq unsatis especi complic exampl may trivial notic user intuit prex tell whole stori base classic safeti properti three distinct safeti level rst formal intuit term inform prex recal assum ltl formula given posit normal form negat appli proposit refer posit normal form ltl formula nite comput inform exist map follow hold empti 3 1 n 2 li follow hold proposit assert satis inform exist map l call wit note empti ln guarante requir impos fulll along exampl nite comput fpg inform gp eg wit l inform xq inform prex must contain least one state rst state p hold theorem 51 given ltl formula nite comput length n problem decid whether inform solv time j j proof intuit sinc branch decid whether inform proceed similarli ctl model check given construct map ng contain exactli formula 2 cl sux inform inform 1 construct l max proce bottomup manner initi l 1 n insert l max proposit assert cl satis proceed induct structur formula insert subformula l max condit item 3 satis take order cope circular depend condit insert formula proce l max n l max 1 thu exampl formula 1 2 ad l x 1 ad l contain formula form ad l insert 1 u 2 l examin insert 1 u 2 l max j j subformula examin requir time linear n thu overal complex j j remark 52 similar argument show one check linear run time whether innit comput repres prex follow cycl satis ltl formula remark 53 clearli innit comput prex inform satisfi hand may satisfi prex certain length say length bdd describ section 4 explod inform henc practic one may want appli check theorem 51 one would get one follow answer fail prex inform exist henc satisfi pass prex inform exist henc satis undetermin neither prex found note methodolog independ safeti properti use notion inform prex order distinguish three type safeti formula safeti formula intent safe bad prex inform exampl formula gp intent safe safeti formula accident safe bad prex inform everi comput violat inform bad prex exampl accident safe safeti formula patholog safe comput violat inform bad prex exampl formula gqfgpgrfgpgqgr patholog safe sistla shown tempor formula posit normal form construct tempor connect x v safeti formula sis94 call formula syntact safe follow strengthen sistla result theorem 54 syntact safe intent accident safe proof let syntact safe formula tempor oper x u consid comput semant ltl map condit 1 3 wit map hold l 1 2 li 1 empti prex 1 inform follow everi comput violat prex inform thu intent accident safe describ section 24 given ltl formula posit normal form one build altern buchi automaton essenti state la correspond subformula transit follow semant ltl dene altern buchi automaton true reden set accept state empti set copi automaton may accept either reach state proceed true visit state innit often true copi must reach state proceed true accordingli true accept exactli comput nite prex inform see note comput accept run copi eventu reach state associ proposit assert satis let na true true regard automaton nite word theorem 55 everi safeti formula automaton na true accept exactli prex inform proof assum rst prex inform wit map ng wit l induc run r true formal set state r visit read sux coincid li denit wit map state q r visit read n therefor r accept direct similar thu everi accept run na true induc wit corollari 56 consid safeti formula 1 intent safe na true tight 2 accident safe na true ne theorem 57 decid whether given formula patholog safe pspacecomplet proof consid formula recal automaton true accept exactli comput nite prex inform henc patholog safe everi comput satisfi accept true accordingli check whether patholog safe reduc check contain sinc size linear length contain altern buchi automata check polynomi space kv97 done lower bound reduct problem decid whether given formula safeti formula consid formula let p q r atom proposit patholog safe shown safeti formula patholog safe note lower bound theorem 57 impli revers direct theorem 54 hold theorem 58 decid whether given formula intent safe expspac proof consid formula size n theorem 33 construct automaton pref theorem 55 accept prex inform note intent safe everi prex pref inform prex thu check intent safe one complement na true intersect automaton pref empti nondeterminist automaton complement na true exponenti n mh84 product automaton pref doubli exponenti n sinc empti check nondeterminist logarithm space claim follow 6 methodolog 61 exploit classic section 5 partit safeti formula three safeti level show formula circumv blowup involv construct tight automaton bad prex particular show automaton na true linear length tight intent safe ne accident safe section describ methodolog ecient veric safeti properti base observ consid system safeti ltl formula let nm nondeterminist automaton nite word accept prex comput let u true nondeterminist automaton nite word equival altern automaton size u true exponenti size na true exponenti length given suggest proceed follow see figur 1 instead check empti veric start check nm respect u true sinc automata refer nite word done use nite forward reachabl analysi 2 product nm u true empti return word w intersect name bad prex gener 3 product nm u true empti u true ne intent accident safe formula may two reason one satis second patholog safe therefor next check whether patholog safe note syntact safe formula check unnecessari theorem 54 patholog safe conclud satis otherwis tell user formula patholog safe indic specic needlessli complic accident patholog safe formula contain redund point user would probabl surpris formula safeti formula known safeti would simpli intent user wish continu formula give use fact safeti proceed usual ltl model check thu check empti recal symbol algorithm empti buchi automata worst case quadrat hksv97 tbk95 note point error trace user get satisfi consist prex cycl yet sinc user want chang formula probabl idea safeti formula nite noninform error trace would help user prefer larg make discoveri bad cycl infeas build automaton pref hope learn user would understand simplifi formula spite potenti blowup nite forward reachabl would work better section 62 altern approach 3 note sinc may intent safe automaton u true may tight thu w minim inform bad prex may minim bad prex 4 automat translat patholog safe formula intent safe formula open problem translat may proceed automaton formula bad prex case would nonelementari correct consult user nm u true incorrect return error trace patholog safe figur 1 veric safeti formula remark 61 fact methodolog adjust formula known safeti formula often termin help output formula safeti formula start check empti nm u true note u true dene also formula safeti intersect empti contain error trace incorrect intersect empti check whether intent accident safe formula conclud correct otherwis consult user note also determin u true get checker use simul 62 go backward detail given system safeti formula method start check whether nite prex comput word accept nm inform bad prex word accept u true nm u true automata nite word product thu search word intersect done use nite forward reachabl analysi section discuss anoth approach check nite prex comput inform bad prex say nondeterminist automaton everi state q 2 q letter 2 one state q 0 2 q q 2 q thu given current state run u last letter read input one determin state visit current one let revers function thu 1 q g u revers determinist set rang 1 either empti singleton extend 1 set natur way follow set q contain state may lead state q 0 letter input assum revers determinist ne automaton u thu u accept exactli bad prex inform consid product nite prex comput inform bad prex p nonempti name path p state 0 state f state p pair hw qi state w state q u say set state p qhomogen q 2 q 0 wfqg w state state pair 0 agre second element everi state hw qi letter 2 2 ap set 1 hw qi may contain one state nevertheless sinc u revers determinist set 1 hw qi qhomogen moreov sinc u revers determinist everi qhomogen set 0 everi 2 2 ap set 1 qhomogen well accordingli start qhomogen set travers p backward along one word need maintain qhomogen set practic mean instead maintain set 2 w 2 q need forward travers maintain set 2 w q conduct backward breadthrst search start f could hope set maintain search would smaller though necessarili homogen due revers determin suggest ne automaton revers determinist may use check nonempti p use backward search start ne automaton accept state automaton u true dene mean altern word automaton revers determinist exampl reach state q state xp xq xq xr describ ne revers determinist size exponenti length automaton base revers determinist automata dene vw94 ltl vw94 state associ set formula cl automaton state associ accept exactli innit word satisfi formula unlik automata vw94 state n associ impos requir formula satis impos requir formula cl n satis properti crucial ne automaton n visit state associ empti set requir accordingli dene fg set accept state note fact set accept state singleton impli product p start singl qhomogen set w fg easi dene n formal term revers determinist function 1 consid state cl n letter 2 2 ap singl state 0 1 maxim subset cl comput satis formula 0 rst posit label sux 1 satis formula formal 0 contain exactli proposit assert cl satis formula cl follow hold easi see everi singl 0 satis condit also sequenc state n start 0 contain lead via nite comput induc map show inform follow n revers determinist ne automaton 63 safeti assumeguarante paradigm given system two ltl formula 1 2 linear assumeguarante specic hold everi system 0 composit mkm 0 satis assump composit mkm 0 also satis guarante 2 test assumeguarante specic reduc ltl model check inde hard see system satis intersect 1 may safeti formula 1 safeti formula proof theorem 21 analysi 1 ignor fair condit 1 proceed model check 2 note howev system 1 may total ie may deadend state need elimin model check 2 suppos 2 safeti formula 1 safeti formula proceed follow rst ignor fair condit 1 use techniqu model check suppos found bad prex end state hw qi 1 remain check hw qi fair state ie fair path start hw qi instead perform fair reachabl analysi entir state space 1 reachabl state space 1 suce perform analysi set state reachabl hw qi could potenti much easier full fair reachabl analysi conclus reason assumeguarante specic use consid safeti assumpt guarante separ 64 safeti branch paradigm consid binari tree prex nonempti prexclos subset label tree prex p p extens ht label tree ht v v 0 agre label node p say branch formula violat exist prex p p extens ht violat logic ctl branch tempor logic ctl everi tempor oper preced path quantier e path path theorem 62 given ctl formula decid whether safeti formula exptim complet proof sistla algorithm check safeti ltl formula sis94 adapt branch paradigm follow consid ctl formula recal safe tree satisfi whose prex least one extens satis without loss gener assum tree branch degre bound nondeterminist automaton thu accept exactli dari tree satisfi assum state accept least one tree otherwis remov simplifi transit relat let dloop automaton obtain take state accept state dene set accept state set state thu dloop accept exactli dari tree whose prex least one extens accept henc safeti empti sinc size automata exponenti nonempti check quadrat vw86b exptim upper bound follow lower bound reduct ctl satis given ctl formula let p proposit let claim safe satis first satis therefor safe direct assum way contradict safe satis tree ht v tree label proposit appear let extens ht refer also proposit p label ht bad prex p whose extens violat consid p extens agre proposit frontier ps p extens satis afp contradict fact p bad prex use similar argument prove follow theorem show disabl altern univers existenti quantic formula problem complex linear paradigm theorem 63 given actl formula decid whether safeti formula pspacecomplet sinc ctl actl model check complet time linear ces86 perform use symbol method tree automaton exponenti size detect nite bad prex much help hand perhap safeti could oer advantag alternatingautomatatheoret framework kvw00 point open question whether safeti use notion branchingtim paradigm acknowledg second author grate avner landver stimul discuss r recogn safeti live symbol model check use sat procedur instead bdd symbol model check ing 10 20 state beyond design synthesi synchron skeleton use branch time tempor logic automat veri altern journal associ comput machineri memori ecient algorithm veri cation tempor properti altern semant tempor logic tempor modal logic program veri simpl onth automat veri cation linear tempor logic use partial order ecient veri cation deadlock freedom safeti properti new heurist bad cycl detect use bdd forward model check techniqu orient buggi design weak altern automata weak automatatheoret approach branchingtim model check logic foundat check hybrid techniqu fast function simul stanford tempor prover use unfold avoid state explos problem veri economi descript automata tempor logic reactiv concurr system speci tempor logic reactiv concurr system safeti deadlock check use net unfold equival problem regular express squar requir exponenti time prove live properti concurr program complex complex proposit linear tempor logic satefi live fair tempor logic pv proof checker refer manual beta releas test languag contain automatatheoret approach linear tempor logic automatatheoret approach automat program veri ca tion reason synthesi commun process tempor logic speci combin formal inform veri tr complex proposit linear tempor logic automat verif finitest concurr system use tempor logic specif automatatheoret techniqu modal logic program tempor modal logic tempor logic reactiv concurr system symbol model check memoryeffici algorithm verif tempor properti reason infinit comput test languag contain myampersandohgrautomata use bdd highdens reachabl analysi automatatheoret approach linear tempor logic forward model check techniqu orient buggi design hybrid techniqu fast function simul symbol model check use sat procedur instead bdd check finit state concurr program satisfi linear specif altern automatatheoret approach branchingtim model check prove live properti concurr program program verif simpl onthefli automat verif linear tempor logic safeti branch time semant specif verif concurr system cesar use unfold avoid state explos problem verif asynchron circuit onthefli verif stubborn set combin formal inform verif deadlock check use net unfold mona myampersandamp fido design synthesi synchron skeleton use branchingtim tempor logic use partial order effici verif deadlock freedom safeti properti freedom weak determin check formal specif simul weak altern automata weak step stanford tempor prover synthesi commun process tempor logic specif ctr freddi yc mang peihsin ho abstract refin control cooper analysi proceed 41st annual confer design autom june 0711 2004 san diego ca usa r armoni egorov r fraer korchemni vardi effici ltl compil satbas model check proceed 2005 ieeeacm intern confer computeraid design p877884 novemb 0610 2005 san jose ca orna kupferman mosh vardi complement certif theoret comput scienc v345 n1 p83100 21 novemb 2005 roberto sebastiani eli singerman stefano tonetta mosh vardi gste partit model check formal method system design v31 n2 p177196 octob 2007 chao wang zijiang yang franjo ivani aarti gupta disjunct imag comput softwar verif acm transact design autom electron system toda v12 n2 p10e april 2007