binari space partit fat rectangl consid practic problem construct binari space partit bsp set n orthogon nonintersect twodimension rectangl bbb r3 aspect ratio rectangl alpha constant alpha geq 1 present n2osqrtlog ntime algorithm build binari space partit size n2osqrtlog n also show n rectangl aspect ratio greater alpha construct bsp size nsqrtm2osqrtlog n nsqrtm2osqrtlog n time constant proportion bigoh term linear log alpha extend result case input contain nonorthogon intersect object b introduct render set opaqu partial transpar object ir 3 visual realist way fundament problem comput graphic 12 22 central compon problem hiddensurfac remov given set ob ject viewpoint imag plane comput scene visibl viewpoint imag plane import hiddensurfac remov problem support provid nation scienc foundat research grant ccr9301259 armi research offic muri grant daah04 9610013 sloan fellowship nation scienc foundat nyi award match fund xerox corp grant us isra binat scienc foundat address box 90129 depart comput scienc duke univers durham nc 277080129 email pankajcsdukeedu support provid armi research offic grant daah0493 g0076 work partial done author duke uni versiti address maxplanckinstitut fr informatik im stadtwald 66 saarbrucken germani email eddiemathuriedu z author affili brown univers support provid part nation scienc foundat research grant ccr9522047 armi research offic muri grant daah049610013 address box 90129 depart comput scienc duke univers durham nc 277080129 email tmaxcsdukeedu x support provid part nation scienc foundat research grant ccr9522047 armi research offic grant daah04 93g0076 armi research offic muri grant daah0496 10013 address box 90129 depart comput scienc duke univers durham nc 277080129 email jsvcsdukeedu studi extens comput graphic comput geometri commun 11 12 one conceptu simplest solut problem zbuffer algorithm 6 12 algorithm sequenti process object object updat pixel imag plane cover object base distanc inform store zbuffer fast hiddensurfac remov algorithm obtain implement zbuffer hardwar howev cost hardwar zbuffer high specialpurpos costli graphic engin contain fast zbuffer zbuffer implement softwar gener ineffici even fast hardwar zbuffer present fast enough handl huge model contain hundr million polygon often display real time result method develop either cull away larg subset invis polygon decreas render load zbuffer model larg eg see 23 complet solv hiddensurfac remov problem slow zbuffer one techniqu handl problem binari space partit bsp introduc fuch et al 14 use bsp implement socal painter al gorithm hiddensurfac remov draw object display screen backtofront order object occlud object earlier order gener possibl find backtofront order given viewpoint arbitrari set object fragment object bsp ensur viewpoint backtofront order determin fragment inform bsp set object tree whose node associ convex region space region associ leav tree form convex decomposit space interior region intersect object fragment creat bsp store appropri node bsp given viewpoint p backtofront order determin suitabl travers bsp node v bsp object one vs subtre separ vs subtre hyperplan viewpoint p lie one region bound hyperplan v travers recurs visit first child v correspond halfspac contain p child v effici travers thu hiddensurfac remov algorithm depend upon size bsp bsp subsequ proven versatil data structur applic mani problem aris practiceglob illumin 5 shadow gener 7 8 9 ray trace 19 visibl problem 3 23 solid geometri 17 18 24 robot 4 approxim algorithm network flow surfac simplif 2 16 although sever simpl heurist develop construct bsp reason size 3 13 14 23 24 provabl bound first obtain paterson yao show bsp size 2 construct n disjoint triangl ir 3 optim worst case 20 graphicsrel applic mani common environ like build compos larg orthogon rectangl moreov mani graphic algorithm approxim nonorthogon object orthogon bound box work bound box 12 anoth paper paterson yao show bsp size n exist n nonintersect orthogon rectangl ir 3 21 bound optim worst case known lower bound exampl orthogon rectangl ir 3 requir bsp n rectangl thin exampl paterson yao lower bound proof use configur thetan orthogon rect angl arrang p n theta n theta n grid bsp n rectangl construct aspect n configur thin rectangl rare occur practic mani real databas consist mainli fat rectangl ie aspect ratio rectangl bound constant examin four datasetsth sitterson hall orang unit methodist church fellowship hall sitterson hall lobbi databas univers north carolina chapel hill model soda hall univers california berkeleyshow rectangl model aspect ratio less 30 natur ask whether bsp nearlinear size construct rectangl fat call rectangl fat aspect ratio ratio longer side shorter side ff fix constant ff 1 rectangl said thin aspect ratio greater ff paper consid follow problem given set n nonintersect orthogon twodimension rectangl ir 3 thin remain fat construct bsp first show construct bsp size log n n fat rectangl ir 3 ie show 0 bsp size n m2 log n built bound come close lower bound omegagamma n final prove two import extens sult show np2 log n size bsp exist p n input object nonorthogon unlik case orthogon object fat help reduc worstcas size bsp nonorthogon object particular exist set n fat triangl ir 3 bsp nonorthogon object approxim orthogon bound box result bound box might intersect motiv observ also consid problem n fat rectangl contain k intersect pair rectangl show construct bsp size n k2 log n lower bound size bsp case constant proportion bigoh term linear log ff ff maximum aspect ratio fat rectangl algorithm construct bsp run time proport size bsp build except case nonorthogon object run time exce size factor p experi demonstr algorithm work well practic construct bsp nearlinear size rectangl fat perform better paterson yao algorithm orthogon rectangl 1 far awar first work consid bsp practic common case two dimension fat polygon ir 3 de berg consid weaker model case fat polyhedra ir 3 polyhedron said fat volum least constant fraction volum smallest sphere enclos although result extend higher dimens 10 one main ingredi algorithm log nsize bsp set n fat rectangl long respect box b ie none vertic rectangl lie interior b prove result crucial use fat rectangl use procedur construct bsp size 43 fat rectangl algorithm repeatedli appli cut bisect set vertic rectangl input set subproblem long rectangl total size subproblem 43 point invok algorithm long rectangl improv size bsp log n simultan simul algorithm long rectangl partit vertic rectangl clever manner rest paper organ follow section 2 give preliminari definit section 3 show build log nsize bsp n long rectangl show construct bsp size 43 section 4 section 5 6 present analyz better algorithm construct bsp size log n extend result section 7 construct bsp case object input thin ii nonorthogon iii intersect conclud section 8 open problem due lack space defer mani proof full version paper 2 geometr preliminari binari space partit b set pairwis disjoint gamma 1dimension polyhedr object ir tree recurs defin follow node v b repres convex region r v set object intersect r v region associ root ir v empti node v leaf b otherwis partit vs region r v two convex region cut set object v lie h v let h posit halfspac h gamma v neg halfspac bound h v region associ left right children v r v r tive left subtre v bsp set object right subtre v bsp set object g size b number node b suppos v node b algorithm region r v associ v box rectangular paral lelepip say rectangl r long respect r v none vertic r lie interior r v otherwis r said short long rectangl said edg lie boundari r v otherwis nonfre free cut cut plane divid two nonempti set cross rectangl note plane contain free rectangl free cut free cut use prevent excess fragment object often focu box b construct bsp rectangl intersect given set rectangl r let set rectangl obtain clip rectangl r within b set point p let pb subset p lie interior b although bsp tree often discuss partit region repres node two convex region explicitli detail associ construct actual tree zaxi yaxi xaxi right face top face front face figur 1 differ class rectangl 3 bsp long fat rectangl let set fat rectangl assum rectangl long respect box b section show build bsp sb set rectangl clip within b box b six facestop bottom front back right left assum without loss gen eral back bottom left corner b origin ie back face b lie yzplane see figur 1 rectangl belong top class two parallel edg contain top bottom face b similarli defin front right class long rectangl belong least one three class nonfre rectangl belong uniqu class see figur 1 exampl rectangl belong differ class gener sb three class rectangl first exploit fat rectangl prove whenev three class present sb small number cut divid b box two class rectangl describ algorithm construct bsp rectangl belong two class first state two preliminari lemma use section 5 first lemma character set rectangl long respect box belong one class second lemma appli two class long rectangl paramet real nonneg c box p set point interior c r set rectangl long respect c rectangl rc belong one class exist face g box c contain one edg rectangl rc set vertic rectangl rc lie interior g time find plane h partit c two box c 1 c 2 jv c 2 c box p set point interior c r set long rectangl respect c rectangl rc belong two class find two parallel partit c three box either ii 1 3 jrc rectangl rc belong class 31 reduc three class two class let b sb defin earlier assum without loss gener longest edg b parallel x axi rectangl sb belong front class partit two subset set r rectangl vertic parallel right face box b set rectangl horizont parallel top face box b see figur 2a let e edg b lie zaxi intersect rectangl r back face b segment parallel zaxi r denot project segment onto zaxi let r let z endpoint interv r lie interior e interior interv r note less 2jrj figur 2b project segment overlap similarli rectangl set defin project yaxi let ycoordin vertic interv defin way divid b kl box draw plane plane figur 2b decomposit b kl box easili construct treelik fashion perform cut refer cut ffcut result box free rectangl figur 2b divid box two box appli c set box b partit manner prove follow theorem decomposit b c place whole algorithm use fat rectangl lemma 3 set box c form process satisfi follow properti yaxi zaxi c xaxi r z 3 z 0 b figur 2 rectangl belong set r b back face b dash line intersect back face ffcut box c c two class rectangl ii 26bffc 2 n box c endpoint e edg lie zaxi similarli defin 0 l endpoint edg b lie yaxi c box c c contain rectangl r proof trivial sinc rectangl r togeth constitut front class suppos c contain rectangl set r rectangl r belong front class parallel right face b claim c rectangl right class see claim consid edg c parallel zaxi endpoint edg zcoordin z z i1 contain rectangl r interv z z i1 must cover project rectangl r onto zaxi rectangl right class insid c must intersect one rectangl whose project cover z z i1 happen sinc rectangl intersect similar proof show c contain rectangl c free rectangl top class first show k l 3 let respect b c denot length edg b parallel zaxi respect axi xaxi assumpt b c let r rectangl r dimens z x z x consid r project r onto zaxi suppos r lie interior edg e b lie zaxi sinc r rectangl front class parallel right face b know z rectangl support r set dimens z x z x x 0 k gamma 1 claim z case possibl z much less z see figur 3 see follow length r henc length z z i1 least aff sinc everi altern interv least one rectangl r k 2bffc 3 similar manner l also 2bffc 3 impli b divid kl 2bffc box plane plane box c contain n rectangl henc n free cut made insid c free cut divid c n box impli set c 26bffc 2 n box rectangl r sb cut kl piec edg piec form arrang r face arrang one kl rectangl r partit 2k arrang edg boundari r face use free cut henc possibl free cut use box b divid kl cut 2k piec rectangl sb surviv prove two class long rectangl let c one box b partit section 31 present algorithm construct r r z x figur 3 project r dash rectan shade rectangl right face b onto zxplane bsp set clip rectangl sc two class long rectangl recurs appli follow step box produc algorithm box contain rectangl 1 sc free rectangl use free cut contain rectangl split c two box 2 sc two class rectangl use lemma 2 split c three box use two parallel free cut 3 sc one class rectangl split c two plane suggest lemma 1 first analyz algorithm two class long rectangl bsp produc follow struc ture step 3 execut node v step 2 invok descend v view lemma 2 repeat execut step 1 2 sc construct ojsc j log js c bsp ojsc node leaf tc one class rectangl total number rectangl leav js c j leaf v tree recurs invoc step 1 3 build bsp size oj v j log js v j oj v j log js v detail sinc sum taken leav v tc total size bsp construct insid c ojsc j log js c j analyz overal algorithm long rect angl algorithm first appli ffcut rectangl sb describ section 31 consid set box c produc ffcut box c contain two class rectangl lemma 3i view discu sion box c 2 c construct bsp sc size ojsc j log js c lemma 3ii 3iii impli total size bsp n bsp built time state follow theorem theorem 1 let set n fat rectangl b box rectangl long respect b log nsize bsp clip rectangl sb construct log n time constant proportion bigoh term linear ff 2 ff maximum aspect ratio rectangl remark algorithm two class long rectan gle use step 3 algorithm paterson yao construct linears bsp orthogon segment plane 21 rather log n algorithm arbitrarilyori segment plane 20 improv size bsp linear improv impli construct linears bsp long rect angl need improv result except section 4 4 bsp size 43 section present simpl algorithm construct bsp size 43 n fat rectangl use intuit gain 43 algorithm develop improv bsp algorithm section 5 analyz improv algorithm section 6 need definit describ algorithm bisect cut orthogon cut divid b two box bisect set vertic rectangl lie interior b algorithm fat rectangl proce phase phase sequenc three bisect cut exactli one cut perpendicular three orthogon direct phase box contain free rectangl use correspond free cut divid box two begin first phase box enclos rectangl 4n vertic interior sinc n rectangl four vertic continu execut phase bisect cut node vertex interior termin node contain long rectangl invok algorithm long rectangl construct bsp node crux analysi size bsp produc algorithm count mani piec one rectangl split subject specifi number phase effect use follow result due paterson yao 21 lemma 4 patersonyao rectangl subject phase cut free cut use whenev possibl divid o2 rectangl theorem 2 bsp ir 3 size 43 construct n fat orthogon rectangl constant proportion bigoh term linear ff 2 ff maximum aspect ratio input rectangl vertic interior one phase cut partit b box k8 vertic interior sinc start n rectangl 4n vertic number phase execut algorithm dlog n3 impli total number rectangl form phase execut theta 2 dlog n323e stage node long rectangl henc theorem 1 remark end section 3 impli construct bsp node increas total size bsp constant factor prove theorem 2 5 improv algorithm algorithm proce round round simul step algorithm long rectangl well partit vertic rectangl small number set approxim equal size begin ith round 0 algorithm top bsp set box associ leav b contain least one rectan gle initi tree b 1 consist one node q 1 consist one box contain input rectangl algorithm maintain invari box long rectangl sb nonfre q empti done otherwis ith round box construct top subtre tb bsp set sb attach correspond leaf b give us new top subtre b i1 thu suffic describ build tree tb box b round let f sb set rectangl sb long respect b set k number vertic rectangl sb lie interior b note vertex vertex origin rectangl input set assumpt rectangl f nonfre choos paramet remain fix throughout round pick logfk optim size bsp algorithm creat see section 6 describ ith round detail rectangl sb long appli algorithm describ section 3 construct bsp sb otherwis perform sequenc cut two stage partit b follow separ stage appli ffcut describ section 31 make cut respect rectangl f ie consid rectangl sb long respect b box form free rectangl appli free cut along rectangl let c result set box divid stage refin box c c appli cut similar one made section 32 describ recurs invok divid stage box c partit let kc denot number vertic rectangl sc lie interior c set fc set rectangl f clip within c 1 c free rectangl use free cut contain rectangl split c two box 2 jf noth 3 rectangl fc belong two class let pc denot set vertic rectangl sc lie interior c appli two 4 rectangl fc belong one class appli one cut h use lemma 1 cut introduc divid stage made treelik fashion end divid stage set box box set sd contain free rectangl jf notic appli cut c result box rectangl short respect c may becom long respect new box ignor new long rectangl next round except induc free cut 6 analysi improv algorithm analyz size bsp construct algorithm time complex algorithm round algorithm construct top subtre tb box b set clip rectangl sb recal f set rectangl long respect b node c let tc subtre tb root c oe c number long rectangl fc nc number long rectangl sc n fc box correspond leaf tb let f number long rectangl sd note f count old long rectangl fd piec rectangl long respect b new long rectangl sd nfd piec rectangl short respect b becam long respect due cut made round f lemma 5 box associ leaf tb know nd k sinc rectangl sd n fd must piec rectangl short respect b k short rectangl henc sinc oe akd f ak2 lemma follow 2 box c tb use notat lc denot set leav tc lemma 6 let c box associ node tb rectangl fc belong one class lemma 7 let c box associ node tb rectangl fc belong two class lemma 8 tree tb construct box b round follow properti bound sinc vertex interior sb lie interior one box lb next use lemma 6 7 prove bound d2lb fd similar argument prove bound jl b j let c set box b partit separ stage see figur 4 let c box c sinc rectangl fc belong two class lemma 6 7 impli separ stage divid stage z figur 4 tree tb construct round box c correspond leav top subtre therefor total number long rectangl box associ leav tb equat 1 argument similar one use prove lemma 3 also know therefor obtain bound size bsp construct algorithm let sf denot maximum size bsp produc algorithm box contain f long rectangl k vertic interior theorem 1 impli sf log f case k 0 lemma 8iii construct subtre b size log 32 k one round recurs construct subtre box set leav lb henc k 0 f everi box lb solut recurr constant proportion bigoh term linear log ff intuit behind solut round increas number old long rectangl constant factor also creat oa 32 new long rectangl depth round olog choos logfk balanc total increas number old rectangl round total increas number new rectangl sinc oper node perform time linear number rectangl node bound obtain run time algorithm 4n begin first round obtain follow theorem theorem 3 given set n rectangl ir 3 aspect ratio rectangl bound constant ff 1 construct bsp size log time log n constant proportion bigoh term linear log ff 7 extens section show modifi algorithm section 5 handl follow three case rectangl thin ii rectangl non orthogon iii input consist intersect fat rectangl 71 fat thin rectangl let us assum input rectangl consist thin rectangl rectangl f given box b let f number long rectangl fb let k number vertic rectangl fb lie interior b let number rectangl tb algorithm use similar algorithm fat rectangl fix paramet logfk 1 sb contain free rectangl use correspond free cut split b two box 2 use algorithm long rectangl construct bsp b 3 f k use algorithm paterson yao orthogon rectangl ir 3 construct bsp 4 f perform one round algorithm describ section 5 algorithm recurs invok box b split let sk f size bsp produc algorithm box k vertic interior f long rectangl fb thin rectangl analyz algorithm behavior section 5 show sk f see 21 detail f log solut recurr constant proportion first bigoh term linear log ff follow theorem immedi theorem 4 bsp size n m2 log n construct n m2 log n time n rectangl ir 3 thin constant proportion bigoh term linear log ff ff maximum aspect ratio fat rectangl exist set thin rectangl rectangl ir 3 bsp 72 fat rectangl nonorthogon rectangl suppos p object input nonorthogon rest fat rectangl algorithm use similar algorithm section 71 except two place step 1 check whether make free cut nonorthogon object step 3 number nonorthogon object node domin number fat rectangl use paterson yao algorithm triangl ir 3 construct bsp size quadrat number object cubic time 20 theorem 5 bsp size np2 log n construct np 2 2 log n time n object ir 3 p nonorthogon rest fat rectangl constant proportion bigoh term linear log ff ff maximum aspect ratio fat rectangl 73 intersect fat rectangl consid case n fat rectangl contain intersect pair intersect pair rectangl break one rectangl pair constant number smaller piec piec intersect rectangl pair process creat total n rectangl new ok rectangl may thin use algorithm section 71 construct bsp rectangl theorem follow theorem 6 bsp size n k2 log n construct n k2 log n time n rectangl ir 3 k intersect pair rectangl constant proportion bigoh term linear log ff ff maximum aspect ratio fat rectangl exist set n rectangl ir 3 contain k intersect pair bsp k 8 conclus sinc worstcas complex bsp high triangl ir 3 orthogon rectangl ir 3 known exampl achiev worst case use mainli skinni object made natur assumpt object fat shown assumpt allow smaller worstcas size bsp implement algorithm practic result encourag present companion paper 1 seem probabl bsp size smaller log n built n orthogon rectangl bound aspectratio ir 3 lower bound n bound would interest see algorithm develop construct bsp optim size similar improv envis theorem 4 5 6 even challeng open problem determin right assumpt made input object graphic display hardwar provabl fast practic effici algorithm develop hiddensurfac elimin object preliminari investig improv model graphic hardwar made grove et al 15 acknowledg would like thank seth teller provid us soda hall dataset creat depart comput scienc univers california berkeley would also like thank walkthrough project depart comput scienc univers north carolina chapel hill provid us dataset sitterson hall orang unit methodist church fellowship hall sitterson hall lobbi r practic method construct binari space partit orthogon object surfac approxim geometr partit increas updat rate build walkthrough system automat modelspac subdivis potenti visibl set calcul motion plan use binari space partit model global diffus illumin imag synthesi subdivis algorithm comput display curv surfac near realtim objectprecis shadow gener use bsp treesmast thesi near realtim shadow gener use bsp tree fast objectprecis shadow gener areal light sourc use bsp tree linear size binari space partit fat ob ject survey objectspac hidden surfac moval comput graphic principl practic visibl surfac gener priori tree structur object complex model hiddensurfac elimin maximum flow polyhedr domain sculpt interact solid model tool merg bsp tree yield polyhedr set oper applic bsp tree raytrac csg evalu effici binari space partit hiddensurfac remov solid model optim binari space partit orthogon object character ten hidden surfac algorithm visibl comput dens occlud polyhedr environ set oper polyhedra use binari space partit tree tr ctr john hershberg subhash suri csaba toth binari space partit orthogon subdivis proceed twentieth annual symposium comput geometri june 0811 2004 brooklyn new york usa csaba tth binari space partit line segment limit number direct proceed thirteenth annual acmsiam symposium discret algorithm p465471 januari 0608 2002 san francisco california csaba toth note binari plane partit proceed seventeenth annual symposium comput geometri p151156 june 2001 medford massachusett unit state mark de berg micha streppel approxim rang search use binari space partit comput geometri theori applic v33 n3 p139151 februari 2006 b aronov efrat v koltun micha sharir union round object proceed twentieth annual symposium comput geometri june 0811 2004 brooklyn new york usa