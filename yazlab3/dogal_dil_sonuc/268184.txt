trubi design system paper describ trubi system design vlsi circuit start formal specif describ term relat abstract behaviour design process involv correctnesspreserv transform base prove equival relat togeth addit constraint class implement relat defin tool enabl relat simul translat circuit descript vhdl design process illustr deriv circuit 2dimension convolut b introduct paper describ computerbas system known trubi 12 design vlsi circuit start highlevel mathemat specif behaviour circuit describ binari relat appropri possibl complex domain valu simpl relat compos complex one use varieti combin form higherord function basic relat combin form gener algebra defin equival may take form equal condit equal relat express term circuit equival describ gener correct preserv transform whole famili circuit particular form design process equival exploit transform specif form one rubi express implement form anoth rubi express calculationori style 4 9 13 trubi base formalis rubi origin introduc jone sheeran 3 languag function relat refer trubi languag purpos paper demonstr gener languag use bridg gap pure mathemat specif implement circuit design circuit 2dimension convolut use illustr featur method particular step given mathemat specif initi rubi descript small obviou method allow us deriv gener circuit choic detail postpon final actual synthesi trubi system enabl user perform desir transform cours design simul behaviour result relat translat final rubi descript relat vhdl descript correspond circuit subsequ synthesi highlevel synthesi tool transform style design ensur correct final circuit respect initi specif assum equival use correct proof correct perform help separ theorem prover simpl interfac trubi proof burden pass prover prove equival pass back inclus trubi databas divis system main trubysystem theorem prover vhdl translat follow divid conquer philosophi theorem prove tediou often need specialist system design use prove transform rule comput rel cheap trubi system leav proof specif rule condit theorem prover certain level concretisaion reach effici tool alreadi exist synthesis circuit therefor chosen translat relat descript vhdl rubi work describ paper base socal pure rubi subset rubi introduc rossen 10 make use observ larg class relat use describ vlsi circuit express term four basic element two relat two combin form usual defin term synchron stream data shown figur 1 figur 1 basic element pure rubi figur type sigt type stream valu type usual repres function type z identifi z time notat arb mean relat b r synonym b 2 r relat spread f lift stream pointwis relat r type ff fi whose characterist function f type ff f b true r type spread f sigff sigfi type relat stream type ff stream type fi notat conveni stress idea describ lift stream pointwis relat type ff fi type denot ff sig thu spread f suitabl f describ synchron clock combin circuit relat socal delay element describ basic sequenti circuit f g backward relat composit f g describ serial composit circuit describ f describ g f type ff sig fl g type fl sig fi type ff sig fi final f g relat product f g describ parallel composit f g f type sig sig type ff 1 theta ff 2 sig type relat describ type signal pass interfac circuit environ howev import note relat descript specifi direct data pass interfac input output mix domain rang r ff fi b c f g figur 2 graphic interpret featur rubi relat combin interpret term circuit element also natur graphic interpret correspond abstract floorplan circuit describ convent graphic interpret spread fact circuit whose intern detail wish show label rectangular box compon domain rang drawn wire stub whose number reflect type relat obviou manner simpl type give singl stub pair type two compon domain drawn left hand side compon rang right convent graphic interpret dshape figur domain flat side rang round side f g drawn rang f plug domain g f two circuit f g parallel unconnect convent illustr figur 2 detail see 3 3 trubi languag trubi circuit combin defin term four pure rubi element use syntax style type lambda calculu definit circuit combin type given figur 3 ff fi denot type variabl thu stand type first five definit nonparameteris stream relat correspond circuit defin use spread element appli function evalu true z equal sum x pointwis relat two integ sum polymorph ident relat dub pointwis relat valu pair copi valu reorg pointwis relat two way group three valu pair describ combin circuit except describ pattern wire known wire relat fifth sumspec describ simpl sequenti circuit ad machin accumul regist remain definit exampl combin alway one paramet typic describ circuit combin appli combin suitabl argument give circuit thu fst r circuit describ r r l combin l written infix oper circuit r second compon domain r connect first compon rang definit l elsewher r 1 denot invers relat r graphic interpret fst l shown figur 4 dialect rubi use trubi system essenti given rossen 8 differ standard version rubi given jone sheeran 3 repetit combin wire relat parameteris number repetit reflect type system includ depend product type 5 generalis normal function type enabl us explicitli express size repet structur type system exampl combin map map relat element list stream polymorph depend type nlistnt type list exactli n element type thu map function take integ n relat type ff sig fi argument int theta int sig int ff sig dub ff sig dub 4 reorg ff theta fi theta fl sig int theta control sig bool theta int loop4 fst snd alu snd dub fst sig fst 4 sig l ff theta fi sig sig sig l 4 fst r sig sig sig sig sig els fst apr n1 sig sig sig figur 3 exampl circuit combin definit trubi fst r r l map 3 r tri 3 r colf 3 r rdrf 3 r r r r r r r figur 4 graphic interpret combin return relat whose type nlistnff sig nlistnfi depend n socal pi bound variabl full descript trubi type system found 11 relat apr n use definit map pointwis relat nlist valu singl valu n 1list singl valu append right nlist 1 combin mapf similar map second paramet function integ relat relat use depend posit structur creat triangular circuit structur colf column structur relat parametris posit column final rdrf call reduc right kind column structur name function program exampl use relat argument calcul sum list integ graphic interpret repetit combin shown figur 4 note definit given pointfre notat reflect fact express term element pure rubi easi show equival expect definit use data valu exampl howev defin circuit term pure rubi element offer sever advantag greatli simplifi definit use gener rewrit rule simplifi reason circuit theorem prover eas task translat languag tradit vlsi specif languag vhdl 4 transform phase trubi design design process trubi involv three main activ reflect overal design system 1 transform 2 proof 3 translat vhdl section consid first phase involv transform initi specif rewrit possibl addit type time constraint approach implement design describ rubi relat 1 note size argument n elsewher written subscript improv readibl 41 rewrit rewrit essenti featur calcul style design use rubi trubi system allow user rewrit rubi express accord predefin rewrit rule rewrit take place interact manner direct user use basic rewrit function known tactic combin use higher order function known tactic style system often call transform system distinguish convent rewrit system trubi implement function program languag standard ml sml offer interact user environ tactic tactic sml function appli environ trubi system rewrit rule express form equal implic two equal explicit type univers quantif term variabl case implicit univers quantif type via use type variabl apart restrict form rule may use practic howev commonli use rule equal relat express correspond equival circuit use manipul circuit descript rubi anoth equival form rule manipul integ boolean express could cours also introduc manipul perform automat builtin express simplifi base tradit rewrit normal form exampl rule seen figur 5 first rule express simpl fact combin commut fst snd fstsndcomm fact invers serial composit backward composit invers inversecomp distribut fst serial composit fstcompdist fourth rule maptricomm exampl condit rule precondit r commut serial composit must fulfil order tri n r map n commut similarli forkmap state r function relat singl copi domain side nway fork equival n copi rang side fork final rule retimecol use rubi synthesi express time featur inputoutput equival circuit systol version circuit note sinc rule contain univers quantif relat particular type essenti express gener properti whole famili circuit trubi system direct rule use rewrit come three sourc may explicit rewrit rule definit implicit definit deriv circuit combin definit permit name circuit combin replac definit viceversa lemmata deriv previou rewrit process establish equal two express say 0 trubi correct explicit rule prove use tool 7 base isabel theorem prover 6 use axiomatis rubi within zf set theori make life easier user conjectur rewrit rule howev enter without prove rewrit finish unprov rewrit rule print togeth instanti condit condit rule form proof oblig user must transfer theorem prover order ensur sound rewrit process fstsndcomm sig sig sig sig r fstcompdist 4 sig sig fst r sig sig r sig r retimecol sig col figur 5 rewrit rule trubi 42 constraint transform process trubi system primarili involv rewrit express describ howev rewrit produc relat exactli equival origin abstract specif relat often larg restrict obtain implement circuit trivial exam ple relat describ defin type int theta int sig int implement purpos want restrict integ valu represent finit number bit mathemat point view mean restrict relat subtyp given int n1 int n subtyp integ represent n bit trubi describ subtyp ad relat constraint 13 express initi specifi bint n int n nbit nbit n1bit int n1 int int int int n int n1 b id n1 int n c bit figur ad constraint relat cation depict figur 6a narrow type ad relat constraint domain rang case instantant id n ident relat integ represent n bit defin id n bit n bit n bit n relat integ list n bit repres constrain relat shown figur 6b definit id n expand give bit shown figur 6c relat bit n manipul origin relat use gener rewrit rule anoth style constraint add delay element domain rang relat sinc rubi relat relat stream data element stream correspond specif time instant chang time properti circuit simpl exampl relat defin figur 3 describ pure combin circuit ad n delay element rang side would give specif adder total delay n time unit use gener relat rewrit rule push delay element combin part thu obtain descript adder extern time properti differ intern arrang regist style manipul illustr detail convolut exampl follow section note relat framework use describ manipul type time constraint interest variat mix two method exampl ad relat specif bitseri integ convert constraint domain side invers rang side obtain specif bitseri adder manipul get implement circuit final specif constrain instanti free type term variabl free term variabl typic use describ otherwis unspecifi circuit element give size regular structur gener manner instanti obtain descript specialis circuit particular circuit element particular dimens gener transform process start relat specif spec circuit suitabl high level abstract spec rewritten number equal rewrit order reach implement descript rewrit process relat narrow ad relat constraint process illustr seri transform prime denot ad constraint origin specif chang accordingli spec spec 000 reflect addit constraint ensur equal impl final constrain specif logic point view 15 constraint regard assumpt implement fulfil origin specif constraint impl spec 43 exampl 2dimension convolut exampl tranform process present part design vlsi circuit 2dimension discret convolut mathemat definit known convolut kernel stream valu new stream valu c evalu r r intuit behind stream repres sequenc row length w valu c weight sum correspond valu astream neighbour distanc sigmar two dimens use weight given matrix k commonli use imag process stream pixel valu scan rowwis sequenc imag k describ kind smooth weight function note summat j equal 1dimension convolut th row k time offset w 1dimension convolut defin r 431 formul problem rubi first step design process formul mathemat definit rubi follow style design use correl 3 divid relat c combin part relat cvalu given time 0 valu time conveni let summat run 1 appli substitut new tempor part relat 0 valu time origin avalu 0 tempor part matrix 0 split part easili specifi directli rubi first given find relat relat b 1list 0 1 offset depend posit j 0 rubi specifi state 00 0 relat tri 2r1 2 2r 1way fork 00 specifi 000 00 3 fix offset 000 specifi b 4 assembl 13 get b 0 next find relat relat 2r 1list b 1 offset depend posit b 0 specifi b 2 2r 1way fork b 00 specifi b 3 anoth fix offset b 000 specifi b 000 4 assembl 13 get b 0 conveni rewrit two relat two 4 follow b 0 butterfli 2r1 5 b 0 butterfli 2r1 w combin butterfli defin sig app n1n fst irt n1 r combin part convolut relat easili express rubi term combin q type int int theta int sig int q relat x k ij x express convolut kernel function posit within matrix k defin c easi demonstr arbitrari x 0 x relat c rubi relat rdrf 2r1 q rdrf defin figur 3 combin tempor relat given definit 5 6 find entir 2dimension convolut relat cr 2 relat x given w r x q express term onedimension convolut relat cr 1 relat b 0 int theta int sig butterfli r rdrf 2r1 q int theta int sig int cr 2 fst fork butterfli r w cr 1 correspond inner summat j specif graphic interpret cr 2 shown left figur 7 interpret cr right butterfli contain increas number delay element midlin increas number antidelay element 1 midlin follow definit small butterfli use singl delay element correspond time differ consecut element data stream larg butterfli use group w delay element correspond time differ consecut line data stream defin relat trubi conveni parameteris becom combin depend r w q final definit int theta int sig fst fork butterfli r rdrf 2r1 q int theta int sig fst fork butterfli r w definit actual circuit 2dimension convolut describ relat conv2 r w q suitabl valu r w q figur 7 two dimension convolut 432 transform implement relat unfortun relat given describ physic implement circuit assum implicitli done input appear domain relat x output rang c antidelay 1 butterfli instead tri implement relat conv2 r w q stand implement retim version form ad constraint domain side delay input signal fst r w result antidelay cancel delay element constraint move inward origin relat result circuit cours produc output r unit later origin circuit best achiev physic world live use seri rewrit rule manipul relat obvious implement form output trubi system deriv shown annot somewhat abbrevi form figur 8 concret syntax produc trubi prettyprint free variabl preced sign repeat composit r n denot rn relat invers r 1 r xtb denot express variabl x type bodi b deriv finish relat express fst fork 2r1 gener descript convolut circuit express term three free variabl r w correspond respect kernel size convolut line size 2dimension array point convolut q give kernel function obtain descript particular concret circuit use rubi system facil instanti free variabl particular valu definit conv2g fst drdwrfst fork 2r1butterfli r dw 2 fstcompdist use right leftg fst drdwrfork 2r1butterfli r dw use rule forkmapg fst fork 2r1map 2r1 drdwrbutterfli r dw butterfli fst fork 2r1map 2r1 drtri 2r1 dw frule maptricomm rule fstcompdistg fst fork 2r1fst tri 2r1 dwfst map 2r1 dr fst fork 2r1fst tri 2r1 dw kintfst dr iintconv1 r q k definit conv1g fst fork 2r1fst tri 2r1 dw kintfst drfst fork 2r1butterfli r fnow use similar procedur remov remain butterflyg fst fork 2r1fst tri 2r1 dw kintfst fork 2r1fst tri 2r1 use definit fst use tri n fst fork 2r1fst tri 2r1 dw kintfst fork 2r1snd d2r1 fst fork 2r1fst tri 2r1 dw kintfst fork 2r1snd d2r1 anoth constraint domain side snd w snd dw2r1fst fork 2r1fst tri 2r1 dw kintfst fork 2r1snd d2r1 frule fstsndcomm fst r fst fork 2r1tri 2r1 dwdw2r1 kintfst fork 2r1snd d2r1 fst fork 2r1 rdrf 2r1 kintsnd dwfst fork 2r1snd d2r1 fst fork 2r1 kintfst fork 2r1snd dwd2r1 gamman g fst fork 2r1 kintfst fork 2r1snd dw 2r1 figur 8 deriv 2dimension convolut relat exampl might instanti r 2 w 64 q acc 4 describ multiplyandadd circuit multipl factor kernel element describ q use factor weight accumul weight sum suitabl reduct integ express would give us relat descript fst fork 5 free variabl graphic interpret final version circuit shown figur 9 seen figur circuit semisystol latchc z figur 9 semisystol version two dimension convolut 2 lefthand structur depict entir circuit basic build element shown right correspond relat snd q k p q instanti describ text middl structur depict snd 3 59 delay element 59 shown arrow figur indic inputoutput partit determin causal analysi describ delay element associ combin element global distribut input stream combin element 44 select extract rewrit system trubi includ facil select subterm target express match pattern free variabl use restrict rewrit temporarili particular subterm importantli extract part target express implement latter case remaind target express give context describ set implement condit must fulfil extract part work extract mani respect convers ad relat constraint specif context specifi sort requir firstli may give represent rule must obey interfac extract subterm secondli context contain delay element may give time requir implement subterm trivial exampl adder extract part typic rewrit circuit insid dash box figur 6c implement condit case express fact integ must repres n bit specifi bit n 5 vlsi implement relat approach describ vlsi circuit offer greater degre abstract descript use function alon sinc direct data flow specifi howev real circuit offer particular pattern data flow mean interpret relat may gener 0 1 mani differ circuit case zero circuit say relat unimplement widest class relat gener implement believ causal relat defin hutton 2 generalis function relat sens input restrict domain output rang trubi causal analysi perform end rewrit process user extract part relat implement case fact context relat extract nonimplement exampl may specifi time requir could implement would correspond forese futur 51 causal analysi exactli relat causal element tupl valu relat partit two class first class output function determin second class input partit function depend use tupl relat exampl previous defin relat causal sens three element tupl valu relat partit describ fact three differ way 1 x input z output relat describ adder 2 x z input output relat describ subtractor 3 z input x output relat describ anoth subtractor note relat 1 also causal although function essenti causal mean relat view partit determinist function input trubi relat analys first expand use definit compon relat form express entir term four element pure rubi relat invers expand relat analys simpl bottomup analysi heurist combin element describ spread relat causal determin analys bodi spread must form bodi part ffl equal singl variabl lefthand side ffl conjunct bodi part ffl condit choic two bodi part equal result analysi depend form righthand side singl variabl conclus drawn equal impli wire abstract floorplan righthand side express valu taken input lefthand side taken output choic valu condit taken input rule result conflict causal partit found sever possibl causal partit case hand rule enabl us choos uniqu one delay element valu domain input rang output parallel composit preserv causal fact invers serial composit gener requir analysi determin whether inputoutput partit compon relat compat implement unidirect data flow compon essenti check made whether two output use assign new signal valu wire whether wire assign signal valu whether loop contain pure combin compon addit analysi exploit order determin network circuit form netlist name wire activ compon present backtrack arbitrari choic partit sever possibl wrong one possibl find complet causal partit entir circuit exampl let us consid analysi part relat 2dimension convolut central element relat given accp describ combin multiplyandadd circuit kernel element p k use definit acc substitut p reduc spread bodi spread form equal singl lefthand side thu causal partit make z output input case relat function domain rang gener need sinc delay element input domain side output rang side serial composit snd compat analysi accp rang delay element correspond compon domain accp analysi proce similar manner lead final data flow pattern shown arrow figur 9 52 translat vhdl sinc causal analysi give network circuit direct data flow along individu wire compon actual translat vhdl compar simpl translat top level rubi relat declar singl design unit incorpor singl entiti name specifi user rough term combin relat c wire relat within expand rubi relat translat one possibl condit signal assign output c assign new valu base input exampl give rise singl concurr signal assign form sig z sig sig name vhdl signal correspond z respect w constant equal valu p circuit element question sinc oper avail use operand integ boolean bit charact type rubi one simpl except logic implic subset avail vhdl direct style translat problemfre similar manner condit ifthenels express bodi spread directli translat condit assign statement possibl extra signal assign evalu singl signal give condit vhdl type signal involv deriv rubi type use domain rang c obviou way thu elementari type rubi type bit translat vhdl type rubybit bool rubybool int rubyint char rubychar vhdl definit rubybit rubybool rubyint rubychar predefin packag rubydef refer gener vhdl unit compos type give rise group signal gener possibl recurs flatten rubi type pair flatten two compon list n compon elementari type reach rubi relat refer elementari type predefin one packag declar contain suitabl type definit gener translat exampl enumer type etyp use definit vhdl enumer type rubyetyp name element gener free variabl relat type noncombin relat rubi relat translat instanti one vhdl compon exampl delay relat rubi type sig simpl type translat instanti compon dff rubyt rubyt type correspond compos type pair list two compon appropri simpl type use standard definit compon standard simpl rubi type avail librari compon particular gener free relat variabl assum defin user final result translat fulli instanti 2dimension convolut relat vhdl shown figur 10 figur show entir vhdl code cours repetit owe regular natur circuit illustr style signal identifi start input output correspond gener code edit compil 950201 115828 rubi relat fst fork 5 rdrf 5 kint fst fork 5snd d59 entiti conv264 port end conv264 architectur rubi conv264 compon dff rubyint port end compon signal wire4546wire4548wire4550wire4552wire4554wire4556wire4558 wire19943wire20128wire20273wire20378wire20478wire20596 wire20746wire20928wire21142 rubyint begin input assign output1 wire1983 calcul regist d3 dff rubyint port map wire20128wire20746clk d4 dff rubyint port map wire20273wire20596clk d5 dff rubyint port map wire20378wire20478clk d7 dff rubyint port map wire19730wire19732clk d319 dff rubyint port map wire4546wire4548clk d320 dff rubyint port map wire2540wire4546clk figur 10 vhdl translat instanti 2dimension convolut circuit extern input output mention formal port claus entiti name start wire identifi intern signal clock input gener underli entiti sequenti assign mark calcul describ combin compon mark regist describ compon instanti correspond delay element instanti userdefin compon follow separ section requir correct translat reli heavili two fact 1 simpl map rubi type oper type oper avail vhdl 2 relat consid translat intern consist causal partit found fact also impli vhdl code gener synthesis vlsi present use synopsi vhdl compil 14 perform synthesi automat 53 compon system complet system illustr figur 11 similar style analysi use gener vhdl code use control simul behaviour extract relat user must suppli stream valu input circuit requir initi valu latch simul use exactli assign new valu signal appear vhdl descript obvious fulli instanti causal relat simul system data flow proof burden silicon equival prove parserprint rubi express intern represent rubi term system analysi dynam behaviour figur 11 complet rubi design system 6 conclus 19 6 conclus paper present trubi design system outlin gener design method vlsi circuit base transform formal specif use equal rewrit constraint extract simpl mathemat basi specif languag term function relat enabl us prove gener transform rule minimis step mathemat descript problem initi specif system use system illustr nontrivi exampl circuit 2dimension convolut exampl show trubi use describ complex repetit structur use vlsi design demonstr system use deriv descript highli gener circuit concret circuit descript obtain instanti free paramet circuit describ socal causal relat implement behaviour simul trubi system simpl map trubi vhdl relat use produc vhdl descript final synthesi design system basic reli exist larg databas pre prove transform rule howev design process conjectur rule introduc time rewrit rule precondit may use trubi proof conjectur precondit postpon without loss formal system keep track relev proof burden transfer later separ theorem prover belief divid ocnquer philosophi help make use formal method feasibl practic design acknowledg work describ paper partial support danish technic research council author would like thank lar rossen mani interest discuss construct tool rubi ole sandum work design rubi vhdl translat r framework defin logic function relat calcul program circuit design rubi relat refin circuit design gener theorem prover rubi proof system formal rubi rubi algebra rubi framework trubi tool handl rubi express transform rewrit rubi constraint abstract verif tr