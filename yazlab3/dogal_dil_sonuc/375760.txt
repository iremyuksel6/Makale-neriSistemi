causal represent cancel mechan time warp simul time warp synchron protocol allow causal error recov assist cancel mechan cancel caus rollback sever simul object may trigger cascad rollback situat rollback cycl back origin simul object cycl rollback caus simul enter unstabl thrash state littl real forward simul progress achiev address problem knowledg causal relat event use cancel avoid cascad rollback initi earli recoveri oper causal error paper describ logic time represent time warp simul use dissemin causal inform new timestamp represent call total clock two compon virtual time compon ii vector event counter similar vector clock virtual time compon provid one dimension global simul time vector event counter record event process rate simul object time represent allow us dissemin causal inform event execut use allow earli recoveri cancel propos cancel mechan use total clock avoid cascad rollback time warp simul fifo commun channel b introduct rollback inher oper time warp mechan rollback restor state lp causal consist state normal event process continu cancel rollback occur one lp propag lp cancel causal incorrect event comput convent rollback inform antimessag timestamp specifi rollback time lp rollback occur frequent may cascad interrel contemporari time warp simul time represent gener maintain local simul time usual carri inform causal relat rollback associ event howev logic time represent design carri causal inform exploit rollback acceler cancel process logic time use order event distribut process 11 order event among arbitrari process depend size number bit logic time represent sever represent scalar clock vector clock matrix clock use repres logic time distribut system 16 paper present total clock mainten time time warp synchron parallel simul total clock use determin causal relationship event among arbitrari process two event concurr causal depend precis knowledg relat enabl optim variou time warp algorithm particular causal inform use cancel event rollback paper present prove properti total clock present cancel mechan avoid cascad rollback use total clock represent remaind paper organ follow section 2 present background work logic time represent cancel mechan time warp section present scenario time warp simul causal inform use perform intellig decis section 4 present total clock represent time warp simul captur causal inform event section 5 present new cancel mechan exploit causal inform dissemin total clock section 6 discuss implement consider conclud remark figur 1 cascad event depend background relat work logic time represent critic import distribut system sever logic time represent scalar clock 11 vector clock 5 13 matrix clock 16 propos model time distribut system scalar clock represent scalar quantiti integ use repres logic time process increment valu local clock execut event piggyback valu time send messag vector clock represent nelement array nonneg integ process maintain nelement array element index repres logic time progress p indic specifi latest known time valu process 16511913 vector clock provid mechan repres causal inform vector clock represent readili usabl optimist protocol due forward backward motion time matrix clock represent process maintain n n matrix nonneg integ 1821 process maintain matrix clock valu represent properti vector clock addit process p know time valu process p k known everi process p j allow process discard obsolet inform receiv process 16 matrix clock also use assist calcul gvt 4 time warp synchron discret event simul virtual time use model passag time simul 7 simul execut via sever process call logic process lp lp associ event queue maintain local virtual time clock causal error aris lp receiv messag timestamp earlier lvt valu straggler messag cancel event input queue lp perform cancel strategi aggress lazi dynam cancel 8 15 17 howev cancel strategi noth prevent cascad rollback sever strategi suggest stop incorrect comput 3 12 20 deelman et al propos breadth first rollback mechan stop propag erron comput adjac figur 2 interrel event depend simul object processor 3 howev handl propag erron comput across processor convent cancel mechan employ madisetti 12 propos use wolf call cancel inform sent highprior broadcast multicast halt erron comput howev reactiv strategi avoid cascad interrel rollback motiv time warp simul rollback recov lp causal error rollback cascad inter relat simul use comput perform invers proport number event rolledback henc frequent rollback reduc effici degrad perform optim time warp concentr reduc number rollback reduc effect rollback improv perform 8 17 15 time warp antimessag sent lp could result new antimessag lp sent initi antimessag cascad rollback degrad effici runtim perform simul addit cascad rollback posit straggler event causal preced lp rollback anoth lp sever time rollback due lp send event sever parallel path comput anoth lp caus cascad interrel rollback due fact event causal depend event rolledback identifi time causal error causal inform specifi inform save huge amount comput commun time ignor event rolledback eventu figur 1 show typic scenario occurr cascad rollback event e1 caus gener event en roll back event e1 could trigger roll back event e2 e3 result roll back event en figur 2 show event e1 caus sever event parallel path lp pn roll back event e1 could r c u r figur 3 total clock represent result sever rollback lp pn event lp know causal depend event avoid cascad interrel rollback explain scenario frequent motiv us logic time represent captur causal inform exploit inform rollback 4 total clock seen previou section time warp mechan implement virtual time paradigm allow forward backward motion simul time con trast vector clock represent allow track causal relationship event distribut system time warp simul logic time represent implement virtual time paradigm track causal relat event use lp make intellig decis detect causal error paper present total clock logic time represent time warp simul attempt toward goal total clock two compon name virtual time compon vector counter compon virtual time compon global one dimension tempor coordin system tick virtual time 10 virtual time compon scalar valu denot progress simul time lp second compon total clock vector event counter number element vector equal total number lp simula tion lp maintain counter call event counter increment base specif updat rule sim ulat addit lp maintain local copi event counter valu lp set event counter call vector countervc send event lp send virtual time vector counter timestamp two compon represent timestamp consist virtual time vector counter call total clock due fact represent provid total order event order rule impos valu denot tcp e execut event e updat save state send event lp end figur 4 total clock valu updat process event e simul object p virtual time compon vector counter com ponent figur 3 show total clock compon virtual time compon total clock refer vt vector counter vc logic time representa tion v ci refer ith element vector counter contain event counter valu lp tcp refer total clock valu lp p tce refer total clock valu event e tcp v refer virtual time compon tcp v c refer vector counter compon total clock lp maintain total clock lp process event order virtual time compon event total clock send event lp assign time event process vt compon timestamp vector counter lp assign vc compon time tamp thu element vector timestamp denot last known event counter valu send lp lp learn latest valu event counter anoth lp j event j object learnt lp j therefor vector counter lp specifi latest event counter valu lp howev could exist lp event causal independ lp event respect causal relat causal independ state lp event determin easili use total clock oper k sup succ vector counter compon total clock definit vector clock 13 5 lp execut event must follow specif rule updat virtual time compon event counter valu process event virtual time compon updat virtual time compon specifi event e vector counter clock valu updat use sup oper perform element wise maximum oper 5 13 figur 4 show step updat total clock valu maintain lp event process ing primit execut event consist updat state send event lp save state execut event process may perform differ function depend optim algorithm enabl simul time event process send messag e end figur 5 total clock valu propag send event e lp rollback rollback cancel end figur 6 lp receiv event e commun layer kernel 14 valu clock sup oper event counter increment denot tcp e valu lp clock valu immedi process event e denot tcp e figur 5 show oper perform send event virtual time compon event set simul time event process vector counter valu set lp primit send messag send event physic commun layer figur 6 show step perform receiv event commun layer lp check rollback rollsback time simul time event addit lp cancel event undon due rollback cancel mechan aggress cancel lazi cancel usual perform cancel messag 17 follow section present new cancel mechan take advantag inform present total clock cancel event upon receiv straggler event seen clock updat propag rule certain properti could infer total clock valu event counter lp increas monoton irrespect progress simul time properti disambigu two simul time vt compon valu rollback featur total clock use optim algorithm clearli need disambigu scenario event consid follow theorem event process lp rolledback cancel messag relat theorem may hold good event consist one process rolledback ad dition follow theorem may applic lp cancel event sent time state restor due straggler event follow theorem state without proof easili verifi procedur process figur 4 theorem 41 vector counter compon total clock lp increas monoton event process theorem 42 denot causal preced relat e 1 theorem 43 e i1 e i2 event schedul lp p e i1 e i2 g theorem 44 e i1 event schedul lp p arbitrari lp j determin state set event input queue causal relat event e i1 corollari 41 e i1 e i2 two event schedul arbitrari lp p j determin state set event input queue causal relat event set 5 total clock event cancel previou section see total clock represent captur causal depend event state properti exploit cancel strategi total clock dissemin causal inform new cancel mechan design exploit inform cancel messag design instead antimessag specifi event rolledback lp addit event causal relat event rolledback identi fie event rolledback along event specifi cancel messag due fact assum aggress cancel strategi event causal depend rolledback event eventu rolledback proactiv cancel complet prevent cascad rollback addit earli recoveri oper restor state ignor event rolledback perform rollback interrel thu know causal relat rolledback event event perform cancel save huge amount comput commun time spend resourc event eventu undon convent time warp antimessag use initi singleton cancel inform antimessag restor state lp state etcvt restor input queue event move process queue unprocess queue whose event etcvt end figur 7 lp roll back due event e commun layer similar posit event distribut control messag antimessag cancel mechan present deviat paradigm particular cancel mechan introduc new set messag simul call cancel messag inform lp causal error preced lp virtual time updat rule time process event similar convent time warp howev virtual time updat rule cancel messag differ perform lp perform recoveri oper due causal error inform cancel messag cancel messag consist vt compon vc compon similar event addit cancel messag field call signatur time creat new cancel messag vc compon lp along id use signatur addit cancel messag contain minimum maximum event counter valu call event counter rang rang along lp id signatur specifi event remov due rollback new cancel mechan use event counter rang keep track event rolledback event causal depend rolledback event gener lp lie within event counter rang corollari 41 cancel mechan propag event counter rang cancel messag virtual time compon specifi along event counter rang cancel messag specifi rollback time lp cancel messag could rollback lp henc gener new cancel messag signatur field use set cancel messag help identifi relat cancel messag henc interrel rollback cascad rollback figur 7 show step perform rollback due event e lp p upon rollback lp must cancel messag undo event sent lp perform procedur cancel fig ure 8 lp maintain data structur call cancel rang list data structur contain list rang lp id index list use ignor messag whose vc compon valu index timestamp lie within specifi rang event counter valu cancel rang list built maintain lp base specif rule procedur add cancel rang list figur perform necessari rule add rang inform cancel messagecancel messag cancel messag signatur differ cancel messag cancel messag ad cancel rang list new cancel messag signatur cancel messag receiv previous vc compon concurr vc compon new cancel messag new cancel messag rang ad cancel rang list impli cancel messag due antimessag gener differ path comput compar cancel messag receiv signatur cancel messag receiv signatur previous receiv cancel messag vc compon less cancel messag signatur new event counter rang ad cancel rang list addit event counter rang greater vc compon signatur receiv remov rule avoid rollback lp due cascad rollback sinc recoveri oper initi rollback remov causal depend event procedur check rollback figur 10 perform check see lp must rollback cancel messag lp remov causal depend event upon receiv posit straggler cancel messag henc lp check see cancel messag inform differ causal error one learnt lp rule check rollback similar rule add cancel rang list addit check vt compon less current simul time procedur cancel local event figur 11 cancel event causal depend rolledback event perform check event input queue lie within event counter rang specifi cancel inform cancel rang list event within rollback rang specifi cancel messag index vc compon timestamp either rolledback causal depend event rolledback cancel local event check event input queue condit remov procedur perform recoveri oper current cancel messag proactiv recoveri oper cancel messag receiv due cancel messag therefor avoid cascad rollback e cancel messag add cancel rang list cancelef j er roll backg roll back eg find rollback time rollbacktim object cancel er 2 cancel e cancel messag signatureemin emax tcp add cancel rang listcancelmessag end figur 8 cancel event due event e add cancel rang list begin e cancel messag add e cancel rang list 9 cm cm 2 cancel rang list remov cm add e cancel rang list add e cancel rang list end figur 9 lp p check cancel messag add cancel rang list e cancel messag rollback true rollback true end figur check rollback due event e event eevent countermin event eevent countermax remov event input queue whose timestamp within rang event counterminev countermax index j vector counter end figur 11 lp p cancel event input queue due cancel messag e e cancel messag add cancel rang list insert input queue end figur 12 lp p insert event e procedur cancel cancel event local input queue send cancel messag lp inform causal error cancel messag new signatur creat lp rolledback due posit straggler event hand signatur receiv cancel messag use messag send new cancel messag lp identifi cancel messag gener due interrel cascad rollback see signatur lp ignor cancel messag recoveri oper alreadi perform lp determin cancel contain set event rolledback due event e set cancel contain lp id send cancel messag minimum event counter valu eventcountermin maximum event counter valu eventcountermax determin cancel rollback time rollbacktim k lp k determin cancel event counter valuet cp v ci lp increment initi procedur vc compon valu updat suptcp v c tcev c send cancel messag procedur add cancel rang list cancel local event call procedur cancel updat data structur cancel rang inform cancel event input queue insert event figur 12 event check rang specifi cancel rang list event ignor lie within one rang handl event transit time cancel event local input queue theorem 5156 prove properti new cancel mechan canceled introduc follow theorem defin set event rolledback due receiv event e lp theorem 51 given cancel messag cm 1 theorem 52 given cancel messag cm theorem 53 given cancel messag cm 9 theorem 54 procedur cancel local event remov event input queue lp cancel messag event straggler receiv theorem 55 procedur insert insert event causal depend event cancel theorem 56 procedur cancel lp p gener cancel messag cancel event causal depend event cancel call cancel see cancel mechan effici remov event input queue undon either directli indirectli due rollback causal preced lp figur 13 show updat total clock valu process cancel mechan space time diagram timestamp consist vt compon follow 3element vector counter three object simul upon receiv straggler process p2 process p0 send cancel messag p1 discard event object causal depend rolledback event save huge amount comput resourc would spent process event addit constant vigil event insert input queue remov extra overhead incur messag rolledback eventu lp critic path frequent rolledback expos cascad figur 13 space time diagram explain total clock updat cancel rollback huge amount time spent uncommit comput avoid employ cancel mechan total clock 6 conclus total clock represent suitabl model spend time recov rollback total clock represent also use take decis among lp critic path simul expos frequent rollback total clock inherit pro con vector clock addit applic field time warp simul sever research found effici practic implement vector clock 19 6 9 studi perform chetlur et al 2 found overhead commun caus size messag signific compar frequenc call commun subsystem overhead commun messag within rang messag size remain optim propag chang valu vector counter messag size kept within rang messag without total clock represent cancel rang list maintain lp ig noreaccept incom event may grow larger prune frequent simul time attach cancel messag specifi time event counter rang check per form time maximum vt compon rolledback event cancel rang inform could remov cancel rang list gvt sweep past vt valu paper shown represent causal inform use total clock util represent cancel mechan present cancel mechan exploit total clock repr sentat cancel mechan describ reduc send messag output channel rollback predecessor cancel event receiv predecessor could also roll back cancel mechan avoid cascad interrel rollback explor done exploit total clock represent time warp algorithm state save synchron mechan r concern size logic clock distribut system optim commun timewarp simula tor system knowledg acquisit parallel discret event simul logic time distribut system causal distribut breakpoint parallel discret event simul rollback mechan optimist distribut simul system depend track filter distribut comput virtual time rollback algorithm optimist distribut simul sy tem virtual time global state distribut sy tem compar analysi variou time warp algorithm implement warp simul kernel dynam cancel select time warp cancel strategi runtim logic time captur causal distribut system cancel strategi optimist execut system discard obsolet inform replic databas system effici implement vector clock effici solut replic log dictionari problem tr virtual time discard obsolet inform replic databas system parallel discret event simul logic time distribut comput system concern size logic clock distribut system effici implement vector clock logic time breadthfirst rollback spatial explicit simul optim commun timewarp simul wolf time clock order event distribut system effici solut replic log dictionari problem compar analysi variou time warp algorithm implement warp simul kernel ctr yi zeng wentong cai stephen j turner batch base cancel rollback optim cancel scheme time warp simul proceed eighteenth workshop parallel distribut simul may 1619 2004 kufstein austria nasser kalanteri time warp connect orient proceed eighteenth workshop parallel distribut simul may 1619 2004 kufstein austria malolan chetlur philip wilsey causal inform fossil collect timewarp simul proceed 37th confer winter simul decemb 0306 2006 monterey california hussam soliman ramadan throttl lazi cancel time warp simul proceed 18th confer proceed 18th iast intern confer model simul p166171 may 30june 01 2007 montreal canada yi zeng wentong cai stephen j turner parallel distribut simul model method causal order base time warp tradeoff optim proceed 35th confer winter simul drive innov decemb 0710 2003 new orlean louisiana