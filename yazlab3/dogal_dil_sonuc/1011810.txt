comput network passiv mobil finitest sensor explor comput power network small resourcelimit mobil agent defin two new model comput base pairwis interact finitest agent popul finit unbound size fair condit interact defin concept stabl comput function predic give protocol stabli comput function class includ boolean combin thresholdk pariti major simpl arithmet prove stabli comput predic nl uniform random sampl pair interact defin model conjug automata show counter machin o1 counter capac simul high probabl protocol popul size n prove predic comput high probabl model p rl sever open problem promis futur direct discuss b work network architectur designdistribut net work network commun network topolog wireless commun f11 comput abstract de vice model comput f12 comput support part nsf grant ccr9820888 ccr 0098078 cse0081823 cns0305258 onr grant n000140110795 permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee juli 2528 2004 st john newfoundland canada abstract devic mode computationparallel concurr probabilist comput e1 data data structuresdistribut data structur gener term theori algorithm perform keyword dius comput finitest agent intermitt com munic mobil agent sensor net stabl comput 1 scenario flock bird suppos equip bird particular flock sensor determin whether bird temperatur elev wish know whether least 5 bird flock elev temperatur assum sensor quit limit sensor constant number bit memori respond global start signal two sensor commun sucient close scenario sensor mobil control move passiv mo bile initi assum underli pattern movement guarante fair condit interac tion everi pair bird flock repeatedli come su cientli close sensor commun assumpt simpl protocol ensur everi sensor eventu contain correct answer global start signal sensor make measur result 1 elev temperatur 0 elev temperatur counter hold valu 0 4 two sensor commun one set counter sum two counter one set counter 0 two counter ever sum least 5 sensor go special alert state copi everi sensor encount output sensor 0 alert state 1 alert state wait sucient interv issu global start signal retriev correct answer sensor consid question whether least 5 bird flock elev temperatur protocol answer question sens without assumpt size flock section 3 show protocol exist gener interest fundament question comput power relat model interact among member distribut popul finitest agent 2 wider view work distribut algorithm assum agent system comput power capabl store nontrivi amount data carri complex calcul system consist massiv amount cheap bulkproduc hardwar small mobil agent tightli constrain system run resourc avail agent may sever limit limit crippl system design fine control interact agent even finitest agent regiment cellular automata comput power equival linear space ture chine system design control teract clear comput limit sensor network prime exampl phenomenon sens unit selfcontain physic packag includ power suppli processor memori wireless commun capabl one sensor capabl record inform local environ unit constraint cost size translat sever limit power storag process commun sens unit design deploy larg group use local lowpow wireless commun unit transmit inform sensor back base station central monitor site research sensor network begun explor possibl use distribut comput capabl network sensor novel way reduc commun cost aggreg oper count sum averag extrema median histogram may perform sensor data network relay base station 12 13 flexibl group sensor associ target spatial target track conserv resourc inact portion track area 7 17 though sensor usual assum stationari nearli permit strategi base rel stabl rout assumpt univers sensornetwork literatur exampl assumpt random mobil packet relay dramat increas throughput possibl commun sourcedestin pair wireless network 9 flock bird scenario illustr question character comput possibl cooper network passiv mobil finitest sensor assumpt make motion sensor passiv control sensor suffici rapid unpredict stabl rout strategi infeas pair sensor repeatedli close enough commun use lowpow wireless signal global start signal transmit base station sensor simultan initi computa tion receiv global start signal sensor take read one finit number possibl input val ue attempt comput function predic sensor valu provid snapshot sensor valu rather continu stream sensor valu commonli consid sensor commun pair uniqu identifi thu updat state base strictli pair current state role play interactionon act initi respond section 3 defin model comput pairwis interact popul ident finitest agent assum fair condit interact defin concept stabl comput function predic popul protocol section 4 consid question predic stabli comput interact occur pair agent give protocol thresholdk pariti major simpl arithmet function well closur result allow us defin use express languag captur subset power model also show everi predic comput model nondeterminist log space open problem give exact character comput power stabl comput model section 5 show allpair case weakest stabli comput predic show simul popul separ noninteract subpopul question addit predic comput reason restrict interact properti underli interact graph stabli comput popul open section 6 obtain model conjug automata ad uniform sampl condit interact assumpt interact enabl pair agent allow us consid comput correct high probabl address question expect resourc use show model sucient power simul high probabl counter machin o1 counter capac show boolean predic comput high probabl model p rl give partial character set predic comput machin find exact character still open section 7 describ relat work section 8 discuss mani intrigu question rais model 3 formal model defin model gener flock bird scenario section 1 31 popul protocol popul protocol consist finit input output alphabet x finit set state q input function x q map input state output function map state output transit function state p transit defin 1 p simpl illustr formal version counttof protocol section 1 six state q0 q5 input output alphabet 0 1 input function map 0 q0 1 q1 output function map state except q5 0 state q5 1 transit function q q j defin result q5 q5 result q ij q0 popul protocol run popul finit size n popul p consist set n agent togeth irreflex relat e interpret direct edg interact graph e describ agent may interact computa tion intuit edg u v e mean u v abl interact u play role initi v play role respond interact note distinct role two agent interact fundament assumpt asymmetri model symmetrybreak therefor aris problem within model though present paper concern case e consist order pair distinct element give definit appropri gener e popul configur map c q specifi state member popul let c c popul configur let u v distinct agent say c goe c via encount denot c e say c go c one step denot c c sequenc configur c c i1 0 k case say c reachabl c comput finit infinit sequenc popul configur c0 c1 c2 comput fair everi pair popul configur c c c c c occur infinit often comput c also occur infinit often comput 32 comput popul protocol nondeterminist ture machin defin notion input output captur inputoutput behavior popul protocol relat unlik ture machin popul protocol halt obviou fix time view output popul rather say output comput stabil reach point agent subsequ chang output valu matter comput proce thereaft stabil global properti popul configur individu agent gener know stabil reach howev suitabl stochast assumpt rate interact occur possibl bound expect number interact output stabil explor approach section 6 input assign function x x describ input popul protocol let x denot set input assign input repres input configur cx ixw w natur extend map input assign configur write cx word x assign input symbol agent u agent us state configur ix output assign function describ output popul protocol let denot set output assign given configur c let yc denot correspond output assign ment yc natur extend map configur output assign write word agent u state q configur c agent us output symbol output assign oc oq configur c said outputst oc oc c reachabl c note requir output equal infinit comput outputstabil contain outputst configur c case say stabil output oc immedi infinit comput stabil one output output finit comput output last configur output infinit comput stabil output output undefin comput stabil output nondetermin inher choic encount initi configur may lead dierent comput stabil dierent output popul protocol run popul p stabli comput inputoutput relat ra follow x x rax hold fair comput begin configur ix stabil output special case ra singlevalu 1 write say stabli comput partial function continu counttof illustr assum agent u1 u6 interact graph complet 2 let input assign x describ vector 0 1 0 1 1 1 assign input symbol agent u1 u6 der correspond input configur lead follow possibl comput configur reachabl last one five agent assign q0 one agent assign q4 output equal 0 0 0 0 0 0 therefor r0 1 0 1 1 1 0 0 0 0 0 0 hold r inputoutput relat comput protocol fact r singledvalu write relat r singlevalu xyzrxyrx z intersect graph complet u v direct edg agent u v u v exampl could design protocol configur stop chang illustr fact requir output stop chang next section show irrelev agent ident comput gener phenomenon 33 function domain defin section 32 popul protocol comput partial function x order use popul protocol comput function domain need suitabl input output encod convent function multipl argument let f function domain x n agentbas input convent assum order set n agent give th argument th agent 1 n depend interact graph output convent particular order chosen agent might might aect function comput predic x predic x regard function x 0 1 predic output convent assum requir everi agent agre output popul protocol stabli comput predic inputoutput relat singlevalu input assign x predic true x fa x output assign map everi agent otherwis fax output assign map everi agent 0 formal counttof protocol describ stabli comput predic x true x assign 1 least 5 dierent agent gener easili function x set output symbol requir final output agent equal correct valu function integ function partial function integ vector integ input output valu repres dius across popul rather store local individu agent describ encod convent repres o1 integ absolut valu bound popul protocol n agent let set gener take either x q kplace integ encod convent map z k thu associ kvector integ element extend map sum agent defin ua u map agent kvector sum agent obtain vector repres integ input kvector encod kplace encod convent x input set x integ output vector encod place encod convent output set intern comput maintain mvector encod q state set q use encod convent say stabli comput f follow condit hold 1 everi r z k domain f exist x x x 2 everi x x x x domain f exist ra x hold 3 everi x x ra x hold note stabli comput integ function f even though ra singl valu might happen exam ple exampl integ function describ popul protocol comput function integ quotient 3 let input output encod function ident thu input assign x repres number agent assign 1 similarli output assign state order pair j integ state encod function also ident input map map 1 state 1 state 0 0 output map map state j j transit function defin follow transit defin leav pair state unchang transit first type accumul two 1s 2 leav sum first coordin state unchang transit second type reduc sum first coordin state 3 increas sum second coordin 1 eventu transit first type possibl sum second coordin integ quotient 3 de sire output map chang ident protocol would comput order pair consist remaind modulo 3 integ quotient 3 4 allpair interact section restrict attent popul interact graph complet assump tion stabli comput inputoutput relat invari renam agent permut ra x ra xy case predi cate output assign constant function impli output determin multiset input symbol therefor stabli comput predic symmetr popul protocol depend state agent name defin standard agent set 1 n size n let pn popul size n consist complet interact graph let fn famili boolean function fn 0 1 n 0 1 n 1 popul protocol stabli comput famili fn everi n 1 run popul pn stabli comput function fn agentbas input convent agent get ith argument predic output convent eventu everi agent agre correct output discuss everi stabli comput famili boolean function symmetr gener consid languag predic x set finit string input symbol say popul protocol stabli comput l everi run popul pn stabli comput characterist function l restrict string length n agentbas input predic output convent l stabli comput contain everi permut element 41 stabli comput predic begin consid famili boolean function stabli comput closur properti let fn gn famili boolean function stabli comput popul protocol b complement output map famili negat f stabli comput complement input map famili function hn hn equal fn input complement stabli comput product construct b yield popul protocol stabli comput conjunct disjunct output fn gn formal lemma 1 let fn gn famili boolean func tion fn gn stabli comput thu addit predic least 5 one comput predic fewer 5 one least 5 zero 5 zero exactli 5 one exactli 5 7 9 one though immedi obviou pariti major also stabli comput popul protocol pariti valu pariti 1 odd number 1s input 0 even number 1s input note comput pariti function predic output convent dierent comput remaind modulo 2 integ output encod conven tion predic output convent eventu agent must correct output symbol construct pariti use state consist two bit data bit live bit initi data bit equal input bit live bit 1 state output bit equal data bit two agent whose live bit 1 one set live bit 0 set data bit mod 2 sum data bit agent live bit 0 meet agent live bit 1 former copi data bit latter protocol mod 2 sum product live bit data bit agent popul invari equal mod 2 sum input even tualli exactli one agent live bit set 1 point data bit correct output singl live bit set 1 eventu everi agent copi correct data bit agent live bit ensur treestructur comput aggreg data bit final result root tree gener comput product input valu commut semigroup thu symmetr regular languag stabli comput eg decid whether number 1s constant major valu major function 1 1s 0s input otherwis 0 state protocol consist live bit counter valu set 1 0 1 initi live bit 1 counter 1 input 0 1 input 1 output 1 counter 1 otherwis 0 two agent live bit equal 1 meet sum counter set 1 0 1 set counter sum one agent set live bit 0 otherwis noth agent live bit equal 0 meet agent live bit equal 1 former copi counter valu latter protocol sum counter agent live bit equal 1 invari equal number 1s minu number 0s input eventu remain one live bit equal 1 combin possibl mean associ singl valu 1 0 1 indic number 1s input less equal greater number 0s input respect point everi agent copi common counter valu output also correct gener counter capabl hold integ valu k k inclus determin whether least fraction 1k1 input 1s demonstr exist popul protocol detect whether least 5 flock bird elev temperatur claim section 1 arithmet function recal section 33 distribut represent o1 integ absolut valu exampl protocol divid 3 use similar encod idea popul protocol comput sum two integ product integ constant integ quotient integ constant valu integ modulo constant constant function equal k input given stabl input protocol outputstabil thu compos freeli stabli comput express languag put togeth base function closur result defin express languag express predic stabli comput popul protocol give lower bound set stabli comput predic whether everi stabli comput predic express open problem express defin follow input symbol x variabl n repres number agent assign symbol input assign constant nonneg integ term con stant variabl sum two term product constant term integ quotient term nonzero constant remaind term modulo nonzero constant atom express form two term one predic express either atom express negat express conjunct two express disjunct two express express either true fals given input assign usual semant exampl counttof problem express 5 pariti problem n1 mod 1 major problem n1 n0 question whether number 1s 15 20 total popul express idea extend predic nonbinari input alpha bet express predic number bs cs equal express theorem 2 predic express languag describ stabli comput alreadi note whether convers hold open problem proof sketch set stabli comput predic close complement union tersect suce show term atom express languag describ stabli comput given term languag use distribut represent integ alloc compon state subterm express includ variabl constant input map place valu n compon alloc subterm express subprotocol oper parallel other comput valu correct compon state gener function valu comput compon use protocol sum multipl constant divis constant remaind modulo nonzero constant constant function eventu stabil correct output atom express suce consid t1 t2 stabli comput predic close negat intersect union use method comput valu subterm express run also parallel protocol compar valu t1 t2 propag result agent protocol similar major protocol describ note pass exact relationship express languag semilinear set fix order 1 k input alphabet defin parikh map x n k number occurr x use ginsburg spanier character semilinear set defin presburg arithmet 8 straightforward beyond scope paper show semilinear set n k precis imag predic express languag defin thu may rephras one open problem stabli comput predic whose correspond subset n k semilinear 42 predic stabli comput theorem 2 give partial character stabli comput predic popul model pair enabl know character com plete howev obtain upper bound set predic stabli comput model show contain complex class nl stabli comput predic model symmetr sucient repres popul configur multiset state assign agent sinc q possibl state popul consist agent popul configur thu repres q counter log n bit popul protocol step simul draw two element multiset appli transit function return result two element multiset popul protocol stabli comput languag l x nondeterminist ture machin accept l space olog n accept input x ture machin must verifi two condit configur c reachabl ix state output 1 configur c reachabl c state output 0 first condit verifi guess check polynomiallength sequenc multiset represent popul configur reach c second condit complement similar reachabl condit nondeterminist olog n space class close complement 11 follow theorem 3 predic stabli comput model pair enabl class nl open problem character exactli power model stabl comput concret conjectur predic number 1s power 2 number cs product number number bs stabli comput popul protocol intuit model lack abil sequenc iter comput suspect pump lemma form exist model 5 restrict interact interact graph may permit power comput popul protocol exampl popul whose interact graph direct line easili simul linearspac ture machin section prove complet interact graph assum sens weakest structur stabli comput predic weaklyconnect interact graph simul theorem 4 popul protocol exist popul protocol everi n stabli comput predic p standard popul pn p popul agent 12 n weaklyconnect interact graph stabli comput p proof sketch key idea interact choos nondeterminist swap state two interact agentswhich eventu bring two simul agent togetheror simul interact detail simul involv implement nondeterminist choic determinist transit state space augment add two baton initi r respon der move somewhat independ simul agent presenc two baton use control eect interact interact involv baton swap state interact involv one baton move baton interact involv baton simul transit mechan assum n least 4 give room move baton way smaller n valu handl separ protocol run parallel overrid output main protocol detect n 3 state space default initi state baton field mark initi baton r mark respond baton mark blank absent baton write order pair q use simpl concaten eg qd q transit function given x rang state q repres nond baton first group transit consum initi ba ton produc least one least one r baton second group eventu reduc set nonblank baton exactli one one r remain group implement baton movement b state swap c atransit note atransit also swap baton done allow r baton pass narrow graph may necessari bring duplic togeth initi stage simul execut obtain ignor baton agent order proof correct involv show fair hold simul state reachabl infinit often reach infinit often done show atransit simul finit sequenc transit involv move relev state adjac agent use state swap may requir addit transit move baton edg state endpoint swap move r baton onto adjac agent trigger atransit 6 random interact conjug stabil probabl strong enough guarante practic situat best oer given fair condit make stronger guarante must put constraint interact member popul let us add probabilist assumpt next pair interact chosen mani assumpt would reason studi consid one simplest order pair interact chosen random independ uniformli order pair correspond edg interact graph interact graph complet model conjug automata inspir model introduc diamadi fischer studi acquisit propag knowledg trustworthi popul interact agent 4 random pair sucient guarante fair probabl 1 protocol stabli comput predic g fair model comput g probabl 1 everi input correspond randompair model assum run popul howev probabl also allow us consid problem comput correct answer high prob abil describ expect number interact protocol converg given function f map x popul protocol input x defin probabl comput f input x probabl comput begin ix stabil output fx exampl pariti protocol expect number interact comput one live bit equal 1 n 2 expect number interact everi member popul interact uniqu member live bit equal 1 log n thu expect total number interact output correct n 2 log n gener interest protocol accomplish task expect number interact polynomi n popul size 3 gener argument obtain follow structur induct theorem 5 let p predic defin languag section 41 random popul protocol comput p probabl 1 popul converg correct answer expect total number interact okp n 2 log n kp constant depend p 61 benefit leader simul counter allow design leader input con figur one agent start distinguish state leader organ rest popul simul counter machin o1 counter capac high probabl assum throughout section interact graph complet use represent describ section 33 integ arithmet comput simul k counter counter take maximum valu n state map ktupl nonneg integ 0 c1 0 ck sum compon popul give current content counter assum input counter machin suppli design counter leader simul finitest control counter machin 3 note protocol termin final remain capabl resum indefinit decrement counter leader wait encount agent compon state greater zero decrement increment counter similar compon must less maximum valu c oper happen probabl 1 assum po sibl howev test counter zero dierent leader must attempt decid whether agent compon greater zero give method correct high probabl abil make possibl incorrect decis enabl eectiv sequenc iter comput model leader initi label one agent timer special mark leader wait one two event 1 interact agent nonzero compon consecut interact timer event type 1 occur first simul counter certainli zero event 2 low probabl occur first probabl high leader encount everi agent meantim may small probabl error conclud valu simul counter zero paramet k control probabl error expens increas expect number interact lemma 6 leader mark one agent timer expect total number interact leader encount timer k time row n k1 proof sketch let k number encount involv leader leader encount timer k time row k leader must first encount timer k1 time row happen anoth agent encount leader probabl n1 timer case must start solv recurr relat k get expand n k sinc probabl leader involv given encount 2n result follow rather sum error bound individu counter op erat analyz error associ macro oper counter lemma 7 sucient larg k oper zero counter zero counter ad content one counter perform expect total number interact n k1 o1n k1 log n probabl error hold oper multipli constant integ quotient constant remaind modulo constant proof sketch show bound number interact probabl error zero counter fundament oper leader mark one agent timer wait one follow two event 1 encount agent nonzero compon case agent compon set zero 2 k consecut encount timer case leader conclud zero oper com plete bound expect number interact follow directli lemma 6 calcul probabl error note failur occur leader encount timer k time row encount everi agent nonzero compon probabl leader encount timer k time row given member popul nonzero compon want comput f0 solv recurr eventu deriv simplifi show f0 1 probabl error bound p n o1n k1 log n achiev oper elabor zero oper follow 1 increment collect counter decrement sourc counter copi sourc valu destin 2 increment anoth counter c time decrement sourc counter multipli sourc counter c 3 increment anoth counter c decrement sourc counter divid sourc counter c simultan find valu modulo c analysi interact error bound similar elect leader uniqu leader input configura tion possibl establish one use idea live bit pariti major protocol section 41 timer mark section 61 global start signal everi agent receiv input rememb durat com putat set live bit equal 1 clear timer mark indic timer agent whose live bit equal 1 begin initi phase mark first nontim agent encount timer attempt initi everi agent use event encount timer k time row determin end initi phase cours first everi agent attempt run initi phase gener chao whenev two agent live bit equal 1 encount one loser set live bit 0 winner keep live bit 1 loser alreadi mark timer winner wait encount timer turn back nontim proceed winner restart initi phase creat anoth timer alreadi releas one initi agent live bit equal 0 revert state repres input live bit retain timer statu agent live bit equal 1 complet initi phase begin comput eg simul counter machin preced section comput encount anoth agent live bit equal 1 two proceed indic one set live bit 0 restart initi phase appropri housekeep ensur retriev extra timer period unrest last expect n 2 inter action one agent live bit equal 1 interact elimin last rival lucki winner succeed initi agent high probabl one timer popu lation proceed comput uniqu leader counter machin halt uniqu leader propag fact along output function one output comput agent error final sim ulat output everi configur rest comput correct shown carri oper counter machin high probabl use standard construct due minski 15 simul random logspac ture machin high probabl corollari 8 let fx function random log space input x repres unari fix c popul protocol n mem ber comput fx x n probabl error c expect time polynomi n 62 simul random popul protocol section show either determinist polynomi time random logarithm space sucient recogn predic comput probabl least 12 popul protocol random pair suppos popul protocol comput predic probabl least 12 p comput polynomialtim ture machin assum string x symbol x repres input assign x n repres input length popul size input x polynomialtim ture machin construct matrix repres markov chain whose state multiset represent popul configur reachabl ix sinc n q solv stationari distribut state ture machin determin set configur probabl greater 12 output must correct ture machin write common output output tape halt also assumpt p comput random ture machin probabl 12 use space olog n random ture machin simul popul protocol use finit number olog nbit counter keep track number member popul state use coin flip simul draw random pair popul member updat counter accord transit function run simul long enough random ture machin almost certain termin strongli connect compon state markov chain point ture machin halt write output current configur output tape wait sucient long random ture machin alloc counter clog n bit flip coin simul interact ad 1 counter head clear counter tail simul stop counter overflow least n c consecut head give expect number simul interact termin least 2 n c shown theorem 9 set predic accept random popul protocol probabl 12 contain p rl 7 relat work petri net finit collect token may occupi one finit set place transit rule specifi token may move place place 4 view state popul protocol place popul member token model also interpret particular kind petri net random petri net introduc volzer 16 use transit rule depend number token input place case conjug automata chemic abstract machin berri boudol 2 abstract machin design model situat compon move system commun come contact base metaphor molecul solut govern reaction rule concept enforc local use membran confin subsolut allow machin implement classic process calculi concurr gener lambda calculu ibarra dang egecioglu 10 consid relat model catalyt p system show pure catalyt system one catalyst defin precis semilinear set also explor model equival power vector addit system relationship model intrigu topic brand zafiropulo 3 defin model commun process consist collect finit state machin commun via predefin fifo messag queue focu gener properti protocol defin model possibl deadlock loss synchron milner bigraph reactiv system 14 address issu model local connect agent two distinct graph structur work primari focu upon express model wherea consid issu comput power resourc usag 8 discuss open problem addit open problem character power stabl comput mani intrigu question direct suggest work one direct explor 1 defin novel storag devic urn contain multiset token finit alphabet function auxiliari storag finit control input output tape analog pushdown work tape tradit model access token urn uniform random sampl make similar model conjug automata primarili consid case complet interact graph shown theorem 9 provid least comput power weaklyconnect interact graph stabl comput model question character power stabl comput particular restrict interact graph remain open also consid interact graph part input ask interest properti underli graph stabli comput popul protocol problem may applic analyz structur deploy sensor network interest restrict model consid oneway commun two agent teract transit function restrict 4 see 5 6 survey petri net chang state respond interact keep state initi although still protocol decid whether number 1s input least k condit appear restrict stabli comput predic sever model paper assum snapshot input taken global start signal receiv model accommod stream input typic assum sensor network would interest assum uniform sampl pair interact applic may make sens consid sampl rule one idea weight sampl popul member sampl accord weight possibl depend current state conjectur reason restrict weight weight sampl yield power uniform sam pling sampl rule might base accur model pattern interact popul interest interact rule consid determinist specifi pairwis interact happen rule nondeterminist specifi interact larger group allow interact increas decreas popul give bound expect total number interac tion resourc measur may appropri applic mani applic interact happen parallel total number interact may well correl wallclock time defin use notion time challeng altern consid number interact least one state chang might correl energi requir comput bound finit even stabl comput model expect bound smaller conjug automata model 9 acknowledg author wish thank richard yang valuabl advic regard idea david eisenstat pariti construct discuss anonym review thought comment suggest 10 r urn automata chemic abstract machin commun finitest machin simpl game studi trust distribut system decid complex petri net problemsan introduct decibl issu petri net survey lightweight sens commun protocol target enumer aggreg mobil increas capac ad hoc wireless network system nondeterminist space close complement direct di tag tini aggreg servic adhoc sensor network bigraph reactiv system basic theori comput finit infinit machin random nonsequenti process collabor signal inform process inform direct approach tr nondeterminist space close complement chemic abstract machin commun finitest machin direct diffus mobil increas capac ad hoc wireless network random nonsequenti process decid complex petri net problem introduct lightweight sens commun protocol target enumer aggreg catalyt p system semilinear set vector addit system ctr david pritchard santosh vempala symmetr network comput proceed eighteenth annual acm symposium parallel algorithm architectur juli 30august 02 2006 cambridg massachusett usa dana angluin jame aspn david eisenstat stabli comput predic semilinear proceed twentyfifth annual acm symposium principl distribut comput juli 2326 2006 denver colorado usa