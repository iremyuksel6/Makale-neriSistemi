combin program data special program data special alway studi separ although aim process earli comput program special encod result earli comput new programsemi data special encod result earli comput data structuresin paper present extens tempo special perform program data special show two strategi integr singl special new kind special provid programm complementari strategi widen scope special illustr benefit limit strategi combin varieti program b introduct program data special aim perform comput depend earli valu howev dioeer way result earli comput encod one hand program special encod result residu program hand data special encod result data structur precis program special perform comput reli earli data insert textual represent result residu program surround comput depend late valu essenc new program construct earli comput encod furthermor new program construct prune residu program correspond control aeow could resolv given avail data consequ program special optim control aeow sinc fewer control decis need taken howev requir new program construct program special lead code explos size special valu larg exampl situat occur loop need unrol number iter high code explos caus code size problem also degrad execut time special program dramat instruct cach miss dual notion special program special data strategi consist split execut program two phase rst phase call loader perform earli comput store result data structur call cach instead gener program contain textual represent valu data special gener program perform second phase consist late comput parameter respect result earli comput cach correspond program name reader reader parameter respect cach share special strategi fundament contrast program special decoupl result earli comput program exploit consequ size special problem increas cach paramet increas program practic data special handl problem size far beyond reach program special thu open new opportun demonstr knoblock ruf graphic applic 7 4 howev data special denit optim control aeow limit perform earli comput expens enough worth cach reader valid cach pass earli control decis lead costli earli comput need part loader well reader loader decid whether costli comput much cach reader control decis determin whether cach need look fact data special appli program whose bottleneck limit control decis typic exampl situat interpret lowlevel languag instruct dispatch main target special program data special complet ineoeect perhap appar dioeerenc natur opportun address program data special led research studi strategi isol consequ attempt ever made integr strategi special exist experiment data assess benet limit special strategi paper studi relationship program data special respect underli concept implement techniqu applic precis studi program data special appli separ well combin section 2 furthermor describ special integr program data special compon common strategi compon dioeer practic achiev integr extend program special izer name tempo phase need perform data special section 3 final assess benet limit program data special base experiment data collect special varieti program expos variou featur section 4 2 concept program data special section basic concept program data special present limit strategi identi illustr exampl final combin program data special introduc 21 program special partial evalu commun mainli focus special program given input program partial evalu gener residu program encod result earli comput depend known input although program special success use varieti applic eg oper system 10 11 scientic program 8 12 compil gener 2 6 shown limit one fundament limit code explos occur size special problem larg let us illustr limit use procedur display lefthand side figur 1 exampl stat consid static wherea dyn dynam static construct print boldfac assum special process unrol loop variabl becom static thu gi procedur ie g1 g2 g3 fulli evalu even gi procedur correspond nonexpens comput program special still optim procedur f simpli control aeow loop one condit elimin possibl special procedur f present righthand side figur 1 howev beyond number iter unrol loop comput enabl pay size result special program number depend processor featur fact shown later special program even get slower unspeci program larger size residu loop bodi earlier phenomenon happen void f int stat int dyn int void f1int dyn int int j edyn dj sourc program b special program figur 1 program special domain like graphic scientic comput applic beyond reach program special special opportun reli larg data iter bound would caus code explos loop travers data unrol situat data special may appli 22 data special late eighti altern program special call data special introduc barzdin bulyonkov 1 explor malmkjr 9 later knoblock ruf studi data special subset c appli graphic applic 7 data special aim encod result earli comput data structur residu program execut program divid two stage loader rst execut earli comput save result cach reader perform remain comput use result earli comput contain cach let us illustr process exampl display figur 2 lefthand side gure procedur f repeatedli invok loop rst argument c vari thu consid second argument loop index k vari iter procedur f also pass dioeerent vector iter assum late procedur call repeatedli rst argument data special use perform comput depend context mani comput perform name loop test estat invoc gi procedur cours cach express assum execut cost exce cost cach refer measur shown cach express simpl eg variabl occurr simpl comparison actual caus result program slow exampl let us assum like loop test cost express estat expens enough cach howev gi procedur assum consist expens comput invoc need examin potenti candid cach sinc rst condit test estat earli put loader whenev evalu true invoc procedur g1 cach similarli reader cach look condit test evalu true howev invoc procedur g2 cach accord knoblock ruf strategi sinc dynam control thu cach result would amount perform specul evalu 7 final invoc procedur g3 need cach sinc uncondit execut argument earli result loader reader procedur f present righthand side figur 2 well invoc extern int wnm extern int wnm struct datacach int val1 int val3 cachemax fload c cach f c k wk fread c k wk cach void fload statcach int stat void f int stat int dyn int struct datacach cach int j int j edyn dj int stat dyn struct datacach cach int j edyn dj sourc program b special program figur 2 data special studi limit data special consid program comput cach expens enough amort cost memori refer exampl assum gi procedur correspond comput control aeow procedur f remain target special 23 combin program data special shown benet limit program data special main paramet determin strategi ts special opportun cost earli comput size special problem obvious within program even procedur fragment may requir program special other data special simpl exampl consid procedur consist two nest loop innermost loop may requir iter thu allow program special appli wherea outermost loop may iter vector whose size larg may prevent program special appli data special exploit opportun concret perform program data special done simpl way one approach consist data special rst appli program special either loader reader idea code explos may issu one compon result program special optim loader reader simplifi control aeow perform specul special exampl reader may consist loop whose bodi small situat may thu allow loop unrol without caus residu program larg appli program special reader loader may possibl fragment program may caus code explos made dynam altern program special perform prior data special combin requir program special appli select fragment caus code explos special fragment ooeer special opportun process data special shown section 4 practic combin program data special allow better perform pure data special prevent perform gain drop quickli case program special problem size increas integr program data special present tempo extend perform data special let us brieaey describ featur relev data special experi present next section 31 tempo ooelin program special c program special preced preprocess phase phase aim comput inform guid special process main analys tempo preprocess phase alia analysi sideeoeect analys bindingtim analysi action analysi rst two analys need imper natur c languag wherea bindingtim analysi typic ooelin special action analysi unusu comput special action ie program transform perform special phase output preprocess phase program annot special action given special valu annot program use special phase produc residu program compil time tradit done partial evalu addit tempo special program run time tempo runtim special base templat eoecient compil standard c compil 3 12 tempo success use varieti applic rang oper system 10 11 scientic program 8 12 32 extend tempo data special tempo includ bindingtim analysi propag bind time forward backward forward analysi aim determin static comput propag bind time denit use variabl backward analysi perform propag opposit direct use variabl static dynam denit annot staticdynam annot indic denit evalu special time run time process introduc hornof et al allow bindingtim analysi accur analysi said use sensit 5 denit staticdynam occur control construct eg control construct becom staticdynam well special program code construct express annot static evalu special time result introduc residu code construct express annot dynam staticdynam rebuilt residu code perform data special analysi insert forward analysi backward analysi essenc new phase identi frontier term static term occur dynam staticdynam context cost frontier term given threshold dene paramet data special forc dynam staticdynam furthermor data special perform specul evalu static comput dynam control made dynam adjust done backward phase bindingtim analysi determin nal bind time program later process static comput includ loader dynam comput reader frontier term cach rest data special knoblock ruf perform evalu section compar perform obtain appli dioeerent special strategi set program set includ sever scientic program system program 41 overview machin compil measur present paper obtain use sun model 170 448 mega byte main memori run suno version 551 time measur use unix system call getrusag includ iuserj isystemj time figur 3 display speedup size increas compil code obtain dioeerent special strategi benchmark give program invari use special approxim time complex code sourc includ appendic program compil gcc o2 higher degre optim make dioeerenc program use experi special strategi evalu perform dioeerent special meth od speedup ratio execut time special program origin one size increas ratio size special program origin one data display figur 3 correspond behavior follow special strategi ffl psct program program special compil time ffl psrt program program special run time ffl ds program data special psct program data special program special compil time loop manipul cach data special kept dynam avoid code explos psrt program data special program special run time previou strategi loop manipul cach kept dynam avoid code explos sourc program consid varieti sourc program onedimension fast fourier transform fft chebyshev approxim romberg integr smirnov integr cubic spline interpol berkeley packet lter bpf given special strategi avail program classi follow control aeow intens program mainli expos control aeow comput data aeow comput inexpens case program special improv perform wherea data special expens calcul cach data aeow intens program base expens data aeow comput result program special compil time well data special improv perform program control data aeow intens program contain control aeow comput expens data aeow comput program good candid program special compil time appli small valu wellsuit data special appli larg valu analyz perform special method turn benchmark program 42 result data special execut compil time run time run time loader cach execut execut special program compil time cach construct compil cach use special program execut program data special yield greater speedup program special run time combin two special strategi make better result section character dioeerent opportun special illustr method three categori program 421 program special analyz two program perform better program special berkeley packet lter bpf interpret packet respect interpret program cubic spline interpol approxim function use third degre polynomi equat characterist bpf program consist exclus condit whose test branch contain inexpens express cubic spline interpol program consist small loop whose small bodi evalu part concret program mainli depend control aeow graph whose leav contain calcul partial reduc good candid program special program special control aeow graph reduc calcul elimin sinc static calcul expens enough eoecient cach data special special program mostli origin one kind program program special give signic improv reduc control aeow graph produc small special program applic bpf appendix f special respect program size n mainli consist condit time complex linear size program contain expens data comput program contain loop size special program mostli origin one figur 3f program special compil time run time yield good speedup wherea data special improv perform margin combin program data special improv perform cubic spline interpol appendix e special respect number point n xcoordin contain three singli nest loop time complex rst two loop half comput bodi complet evalu cach special includ real multipl divis nevertheless expens calcul cach data special improv perform signicantli unrol loop realli increas code size small complex program small bodi loop consequ number point n figur 3 program data combin special speedup special bare chang figur 3e program special compil time produc good speedup wherea program special run time improv perform data special obtain minor speedup cach calcul expens 422 program special data special analyz two program perform ident program special data special polynomi chebyshev approxim continu function known interv smirnov integr approxim integr function interv use estim characterist two program contain loop expens calcul doubli nest loop cubic spline interpol section 421 half comput bodi loop complet evalu cach special contrast cubic spline interpol static calcul chebyshev smirnov expens allow data special yield major improv combin special data special appli innermost loop program special appli rest program kind program program data special give signic improv howev speedup code size program produc program special hundr time larger special program use data special applic chebyshev approxim appendix c special respect degre n gener polynomi program contain two call trigonometr function co one singli nest loop call doubli nest loop sinc program mainli consist data aeow comput program special data special obtain similar speedup see figur 3c smirnov integr appendix special respect number iter n program contain call function fab return absolut valu paramet function contain doubli nest loop time complex program om n case chebyshev program data special produc similar speedup see figur 3d 423 combin program special data special final analyz two program perform improv use program special valu small data special valu larg fft romberg tegrat fft convert data time domain frequenc domain romberg integr approxim integr function interv use estim characterist two program contain sever loop expens data aeow comput doubli nest loop howev half comput loop bodi evalu beyond number iter program special unrol loop increas code size special program degrad perform special program becom slower code size furthermor beyond problem size special process produc program size contrast data special cach expens calcul unrol loop improv perfor manc result code size program produc program special hundr time larger special program use data special speedup gain 20 combin special delay occurr code explos data special appli innermost loop contain cach comput program special appli rest program applic fft appendix special respect number data point n contain ten loop sever degre nest one loop complex contain four call trigonometr function evalu program special cach data special due elimin expens librari call program special data special produc signic speedup see figur 3a howev case program special code unrol degrad perform contrast data special produc stabl speedup regardless number data point n smaller 512 data special obtain better result comparison program special howev n greater 512 program special becom imposs appli special time size residu code situat data special still give better perform unspeci program program also contain condit combin special innermost loop unrol improv perform better data special alon romberg integr appendix b special respect number iter use approxim romberg integr contain two call costli function intpow call twice singli nest loop anoth time doubli nest loop special strategi elimin expens librari call speedup consequ good fft loop unrol caus program special speedup decreas wherea data special speedup still remain even increas figur 3b 5 conclus integr program data special special name tempo importantli data special reus phase ooelin program special tempo ooeer program data special experiment compar strategi combin evalu show one hand program special typic give better speedup data special small problem size howev problem size increas residu program may becom larg often slower unspeci program hand data special handl larg problem size without much perform degrad strategi howev ineoeect program special mainli consist control aeow comput combin program data special promis produc residu program eoecient data special alon without drop perform dramat program special problem size increas acknowledg thank renaud marlet thought comment earlier version paper well compos group stimul discuss substanti amount research report paper build work done author scott thibault berkeley packet lter julia lawal fast fourier transform r mix comput translat linearis decomposit compil tutori note partial evalu special shader partial evalu automat program genera tion data special faster fourier transform via automat program special program data special principl fast optim sun rpc use automat program special scale partial evalu optim sun commerci rpc protocol tr ctr jung gyu park myongsoon park use index data structur program special proceed asian symposium partial evalu semanticsbas program manipul p6169 septemb 1214 2002 aizu japan vytauta tuiki roberta damaeviiu metaprogram techniqu design embed compon ambient intellig ambient intellig impact embed system design kluwer academ publish norwel mad sig ager olivi danvi hen korsholm rohd obtain knuth morri pratt string matcher partial evalu proceed asian symposium partial evalu semanticsbas program manipul p3246 septemb 1214 2002 aizu japan charl consel julia l lawal annefranois le meur tour tempo program special c languag scienc comput program v52 n13 p341370 august 2004 torben amtoft charl consel olivi danvi karolin malmkjr abstract instanti stringmatch program essenc comput complex analysi transform springerverlag new york inc new york ny 2002