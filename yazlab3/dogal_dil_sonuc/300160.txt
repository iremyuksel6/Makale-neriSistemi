consist initi condit calcul differentialalgebra system paper describ new algorithm calcul consist initi condit class system differentialalgebra equat includ semiexplicit indexon system consid initi condit problem two typeson differenti variabl specifi one deriv vector specifi algorithm requir minimum addit inform user outlin implement generalpurpos solver daspk differentialalgebra equat present numer experi illustr effect b introduct paper concern calcul initi condit system differentialalgebra equat dae write dae system gener form gt g 0 ndimension vector initi valu problem system problem find solut satisfi consist set initi condit yt 0 two softwar packag written solv initi valu problem dae system 11dassl 2 extens call daspk 7 use variableord variabl stepsiz backward differenti formula dassl solv linear system time step dens band direct linear system method daspk linear system aris time step solv either direct linear system method precondit krylov iter method name gmre 16 largescal system iter method combin suitabl precondition quit effect use either solver dassl daspk integr must start consist set initi condit 0 0 consist requir particular gt 0 usual compon 0 0 known directli origin problem specif problem find consist initi valu challeng task present dassl daspk solver offer option find consist 0 0 given initi 0 take small artifici step backward euler method howev initi problem alway aris form even intend problem type techniqu alway success case unsatisfactori produc valu paper propos altern procedur class dae problem show method combin modifi newton method dassl newtonkrylov method 5 6 yield algorithm converg nearli rapidli underli newton newtonkrylov method new method conveni user make use jacobian precondition matric alreadi requir dassl daspk consist initi problem studi 1 8 9 12 13 15 14 gener dae system consid howev none algorithm offer simplic conveni approach develop research support part appli mathemat scienc subprogram offic energi research us dept energi lawrenc livermor nation laboratori contract w7405eng48 center comput scienc engin l316 lawrenc livermor nation laboratori livermor california 94551 z depart comput scienc univers minnesota minneapoli mn 55455 work author partial support aro contract number daal0392g0247 doe contract number defg0292er25130 nist contract number 60nanb2d1272 minnesota supercomput institut class problem consid gener semiexplicit indexon dae system semiexplicit indexon dae system character follow depend variabl vector split vector u size n call differenti variabl vector v size n call algebra variabl equat form g v gv nonsingular squar matrix concern initi problem find initi valu v 0 v initi valu u 0 u specifi easili gener class problem consid ode subsystem u may implicit thu consid system form matrix f u squar nonsingular continu refer problem form 13 f u 0 g v nonsingular semiexplicit indexon even though may explicit u 0 fact main initi techniqu appli even gener class problem explain later also consid second type initi problem initi deriv specifi depend variabl unknown must solv 0 given 0 exampl begin dae solut steadi state correspond specifi 0 problem involv split vector differenti algebra part semiexplicit form equat later section refer two problem initi problem 1 initi problem 2 2 basic method central idea paper solv initi condit problem help mechan alreadi place solut dae system rather requir user perform special comput consid first initi problem 1 semiexplicit indexon system 13 v determin given u initi point expand problem includ calcul u 0 thu form nonlinear system nvector name gener approach solv expand problem also use 12 newton iter solut f would requir jacobian matrix f assumpt matrix nonsingular least neighborhood desir solut cours integr dae system dassl daspk user must call upon one sever linear system algorithm solv n theta n linear system everi time step aris newtonlik method solv algebra system gt vector contain past valu c constant set solver invers proport stepsiz h thu linear system form r residu vector deltay correct matrix j dae system iter matrix user encourag suppli approxim j use either newton matrix case direct method precondition case krylov method direct case j gener differ quotient approxim suppli user case system 13 f f cf order make use j solv f pick artifici stepsiz h set 25 recov block f u 0 rescal first blockcolumn j h use scale matrix ident matric size n n respect thu consid matrix hg evalu note f thu h small appropri sens expect j good approxim f 0 x propos initi procedur carri newtonlik iter correct iter call linear system solut procedur use later solv dae system also requir inform compon differenti algebra order appli correct deltax vector 0 otherwis procedur requir addit inform methodolog upon converg compon yt 0 compon correspond u 0 0 deriv differenti variabl remain compon correspond v 0 simpli set zero integr procedur insensit sinc v 0 appear 13 1 1 although bdf formula depend valu error test end first step depend unless v variabl exclud error test option code first time step produc accur valu next two section present procedur formal manner prove converg initi problem 2 given initi valu 0 must comput initi case simpli interest solv system 0 assum problem wellpos provid user f 0 g nonsingular neighborhood solut includ initi guess suppli first problem call user suppli dae iter matrix j time set matrix involv simpli stepsiz h proceed newton iter use j correct deltay final remark extens idea hessenberg index2 dae system way author 3 gener problem case initi problem 1 full scope problem idea appli gener system form 13 0 satisfi f true jacobian f 0 approxim suitabl small 32 permut variabl wish gener system 13 first drop requir differenti algebra compon separ block thu assum permut matrix p size n term z system function g form vector unknown term z term order express object function f x precis introduc two project r n 0 satisfi help project write p p x vector contain unknown algebra compon correspond similarli vector contain unknown deriv compon correspond u 0 known compon 0 compris vector write x fact g depend v 0 mean gt thu system solv x way need requir compon g block 32 thu allow permut q compon g qg block form cours qf howev work g henc f origin order initi procedur 33 implicit constraint gener form problem solv suppos permut vector z py dae system function g form gt full rank n class problem gener 13 32 algebra constraint gt u 13 need identifi explicitli system form defin project matric p p 35 true gt defin vector w x 33 34 system solv jacobian function know h u 0 full rank nonsingular matrix mh 1 1 squar nonsingular matrix size n fact index one impli b 2 nonsingular near consist initi valu see x25 2 thu w f 0 nonsingular hand jacobian suppli approxim user take recal scale matrix defin 26 correspond scale x thu find compar 310 312 expect j work well approxim f 0 x modifi newton iter solv f correct x take form class problem given 38 take scope initi problem 1 implement algorithm describ 34 gener indexon system note 38 includ fullyimplicit index one dae rank depend condit combin exclud certain indexon sy tem simpl exampl system index one wellpos given valu 1 0 fit scheme 38 contain deriv variabl rank 2 theta 2 matrix h 0 1 principl scheme appli gener index1 dae system allow p gener matrix permut constant nonsingular matrix p found transform full rank 38 gt defin 35 vector x function f x defin 34 39 0d defin input vector 0 p 0 36 jacobian f 0 approxim satisfi 310 312 thu procedur still work long problem suppli user wellpos howev contrast case p permut solut vector x found vector may differ 0in compon exampl system appropri matrix p make choic p input initi valu 2 differ g 2 0 compon 0 would alter procedur hand preserv 1 approach would use procedur gener constant p determin consist set initi condit sens initi valu transform variabl consist initi valu deriv origin variabl may consist exampl system 2 initi correctli wherea 0 1 0 2 individu determin inform constraint deriv g 0 2 avail 13 gener index1 system due complic expens find smooth p continu chang variabl later time step chosen implement extens algorithm instead restrict p class permut matric necessari user may abl bring problem form 38 chang variabl describ 4 converg theori case initi problem 1 given 3839 question converg newton modifi newton iter aris give converg analysi iter theorem includ full modifi newton iter problem full refer fact approxim jacobian evalu everi iter first prove main converg result theorem 41 discuss applic initi problem section 2 3 last subsect comment use newtonkrylov iter solv initi problem 41 newton iter converg consid converg x iter includ type newton iter take ae x k full newton iter x modifi newton iter x fix function f x gener function assum exist smooth matrixvalu function jx h cx h interest follow theorem say iter converg mild smooth assumpt function f c norm k delta k use arbitrari theorem 41 let f r n r n continu differenti open convex set ae r n assum exist x 2 f x c exist ae 0 neighborhood nx condit nx ae constant fl exist matrixvalu function jx h cx h 0 x 2 relat cx satisfi lipschitz condit nx ae constant fl c exist constant ffl 0 h 0 x h x 2 nx ffl modifi newton case sequenc gener 41 welldefin converg x condit iter obey k full newton case modifi newton case proof extens proof denni schnabel 11 p 90 treat full newton case exact jacobian main complic due inaccuraci iter matrix give proof give three lemma use three hypothes theorem assum lemma 42 ffl minfa 12fiflg proof first note lipschitz condit f 0 perturb relat 3120 denni schnabel 11 p 45 f 0 x nonsingular lemma 43 ffl minfa 12fiflg proof lemma 42 use 43 perturb relat 3120 11 jx h nonsingular lemma 44 ffl minfa 12fiflg proof norm first term bound xk use lemma 43 lipschitz condit f 0 second term bound 4hfic 0 sinc kcxk c 0 previou lemma proof theorem 41 deriv recurr 44 give linear converg case qsuperlinear converg limit let ae oe lemma 42 43 f 0 x jx h nonsingular h valu ffl also measur nonlinear problem prove bound 44 induct iter number k 0 h h welldefin two term final equat 46 first bound use lemma 4112 denni schnabel 11 p 75 say kf x norm first term bound 2fiflkx second term bound use lemma 44 give bound 4fiflkx norm matrix coeffici thu obtain shown 44 note sinc x 0 x 0 nx ffl use 45 jacobian welldefin nonsingular gener induct step goe exactli obtain 44 thu x show iter welldefin fact give linear converg sequenc fx k g 2 42 applic dae system explain section 2 central object solv initi condit problem help mechan alreadi place integr dae system gener time step within dassl daspk solver involv solut linear system j deltax r matrix dae system iter order use valu j insid newton modifi newton iter solv nonlinear problem f must deriv relationship jacobian matrix f 0 x j follow lemma gener similar relationship deriv earlier section lemma 45 assum exist project matrix p gt defin project matrix p j gamma p function f x 0d given x proof 411 next partial deriv evalu prove lemma daspk start input initi guess 0 0 correspond initi valu x x pick suitabl small valu h set 1h defin jx h matrix lemma 45 satisfi 4 note newton iter 41 base jx h correct daspk direct method select jt suppli user possibl approxim form gener differ quotient j gamma1 realiz lu method case 0 fix therefor 414 repres modifi newton method theorem 41 appli iter one assum differenti g respect 0 partial deriv g respect 0 local lipschitz continu wellpos initi problem type discuss section 2 3 clear assumpt theorem hold thu iter x converg given h small enough good enough initi guess x 0 43 newtonkrylov iter use newtonkrylov iter solv initi problem section 2 3 use precondit gmre linear iter finitediffer approxim involv gt approxim action j arbitrari vector precondition approxim j gamma1 gmre comput approxim solut p k small enough step deltax k given deltax impli small reason finit differ g use instead f gmre solver daspk use finit differ g approxim j time arbitrari vector dae time step thu abl appli machineri alreadi avail user need concern j f 0 relationship j f 0 given lemma 45 also clear good precondition j suffic iter consider lead us consid converg follow inexact newton iter gener function f x 1 gener inexact newton set manner step increment k comput unimport need know k found assum exist smooth matrixvalu function jx h cx interest follow theorem say iter converg mild smooth assumpt function f c theorem 46 let f r n r n continu differenti open convex set ae r n assum condit ad theorem 41 hold exist constant ffl 0 x h 0 1 sequenc gener 415 welldefin converg linearli x proof sinc assumpt ad theorem 41 hold choos ffl h 45 thu x h nonsingular exist 0 satisfi guarante given 0 ks henc follow ks 1 choos h smaller necessari j 4fi1jhc 0 1 residu norm condit 416 0 rest proof follow along line proof theorem 23 dembo et al 10 5 linesearch algorithm order improv robust newton algorithm discuss also employ linesearch backtrack algorithm consid gener function let x ffi r n residu norm condit hold euclidean norm vector ffi thought approxim solut newton equat f 0 obtain use either direct solv approxim jacobian iter method gmre given ffi shown brown saad 6 ffi descent direct f x ie given ffi descent direct f x employ follow backtrack algorithm algorithm 51 given 1 2 fx exit otherwis go next step 3 choos 2 min max set go step 2 global converg algorithm use connect inexact newton iter discuss length 6 simplest choic take 12 make 2 use choic implement also use small decreas f requir given f defin 51 algorithm ffi exact newton step x ie henc case condit step 2 algorithm 51 simpli next gmre solut mth step appli f 0 shown 5 condit step 2 algorithm 51 present context want solv nonlinear system f 29 39 howev direct measur size f directli avail weight rootmeansquar wrm norm use daspk norm suggest solv instead problem matrix current approxim system jacobian matrix j 24 direct case precondition p krylov case diagon matrix contain weight use wrm norm thu f squar wrm norm gamma1 f either case like f x wellscal wrm norm direct vector ffi avail us newton correct given 210 313 thu 312 case initi problem 1 case initi problem 2 case expect question aris whether ffi descent direct f current approxim solut x easi calcul give use assur small follow ffi descent direct f x 6 implement implement algorithm describ initi problem 1 2 new option generalpurpos dae solver daspk 7 initi problem 1 implement gener class indexon system describ section 33 give detail concern implement describ briefli use new option assum reader familiar use dassl daspk detail descript solver found 2 7 respect solver normal requir initi 0 consist within depend variabl vector daspk denot differenti variabl denot algebra variabl specifi input paramet info11 daspk solv one follow two initi problem initi valu alreadi consist default given calcul 0 option specifi user must identifi daspk differenti algebra compon done set differenti variabl algebra variabl 2 solv initi problem 2 given 0 calcul either case initi valu given compon input initi guess unknown compon must also provid input algorithm problem 1 requir initi stepsiz scale h determin first approxim tri initi stepsiz h 0 use dassl daspk 2 p 128 sinc know advanc valu small enough achiev converg modifi newton iter set loop start initi fail divid h 10 initi fail mxnh nomin 5 differ valu h code return error flag user program experi initi succe usual succe initi choic h 0 initi problem 2 alway set loop h either case initi complet reset initi stepsiz h 0 first step daspk base newli comput initi valu use formula 2 given valu c initi problem solv either modifi newton method inexact newton method 10 similar use gener time step augment linesearch algorithm describ improv global converg case initi problem 1 given eq 39 problem 2 given eq 29 must solv system f x residu dae system 0 0 x repres variabl solv jacobian matrix precondition matrix krylov case obtain either finitediffer approxim call user subroutin calcul jacobian depend option specifi routin specifi dae jacobianprecondition exactli one need time integr newton iter given term approxim system jacobian j relax steplength 0 1 linesearch algorithm given section 5 initi problem 2 scale matrix absent code organ newton solver independ initi problem solv vector calcul separ routin call construct appli increment deltax follow ffl problem 1 increment 0 gammap p increment 0 0 gammacp p ffl problem 2 increment 0 mean j 62 depend choic method case direct method valu j approxim system jacobian evalu differ quotient usersuppli routin start iter evalu j involv call backsubstitut routin case krylov method howev j refer exact system jacobian current valu 0 j gamma1 f x evalu call routin precondit gmre method 16 make use precondition p suppli user evalu start iter case inaccuraci fix approxim j p system jacobian addit potenti caus difficulti newton iter complet algorithm actual involv three loop level problem 1 two level problem 2 innermost level mxnit newton iter perform given valu h given valu jacobian precondition iter consid converg scale residu small norm ae current approxim system jacobian j direct case precondition matrix p krylov case test constant epconi toler newton iter subsequ time step epinit swing factor nomin equal 001 norm use throughout weight rootmeansquar wrm norm weight form usersuppli toler see 7 valu ae mth iter use infer converg rate converg achiev mxnit iter strategi repeat attempt depend rate converg fail rate 08 iter converg slowli retri newton iter current valu 0 new valu ie j p limit mxnj attempt addit case krylov method gmre solver fail converg least two newton iter rate 1 newton iter retri new valu p limit mxnj retri reach reduc h retri iter new current 0 case problem 1 give return error flag case problem 2 converg inner newton iter fail rate 08 recover failur occur retri iter reduc valu h initi 0 problem 1 give problem 2 total number iter perform therefor larg mxnhmxnjmxnit problem 1 mxnjmxnit problem 2 current set set case direct method case krylov method howev four control option input daspk user may specifi differ valu addit option provid turn linesearch algorithm actual addit level logic ad around initi algorithm describ reason error weight involv converg error test depend current solut vector thu initi algorithm may succeed use weight evalu initi guess weight may differ greatli updat valu use converg vector sinc updat weight everi iter seem rather extrem adopt follow scheme weight set use input vector initi algorithm call succe updat weight call second time succe updat weight proceed first time step either initi fail error flag return user case krylov method second initi call precondition updat unless converg failur 7 numer experi test initi algorithm sever problem found perform much expect cours develop debug use simpl indexon system size 2 known analyt solut first second initi problem type wide rang initi guess initi algorithm converg within limit impos direct krylov method option attempt integr system without initi option fail except initi valu consist realist test use model multispeci food web 3 mutual competit andor predatorprey relationship spatial domain simul consid 2speci model speci 1 prey speci 2 predat predat assum infinit fast reaction rate specif model equat concentr vector interact diffus coeffici could function x gener choic made test problem follow domain unit squar 10 boundari condit homogen neumann type zero normal deriv everywher coeffici uniqu stabl equilibrium guarante exist deriv appear equat speci 2 3 empir stabl equilibrium appear exist 71 ff fi posit although may uniqu test problem take 100 consider spatial variat solut pde system 71 togeth boundari condit discret central differenc l theta l mesh describ 7 taken quit suffici accur spatial resolut result dae system gt 0 toler use run sun sparc10 workstat 71 initi problem 1 test problem report 7 initi condit taken mildli peak function nearli satisfi constraint equat ae predat valu c determin equat f 2 x approxim quasisteadi state qss valu origin daspk solver difficulti problem without adjust initi valu howev expect typic applic type impract find accur initi valu test prescrib flat valu preda initi guess input array invok new algorithm initi problem 1 present problem paramet qss valu c 2 time within 10 vari c pred report test krylov method gmre option daspk precondition use product spatiallybas factor reactionbas factor notat 7 given r respect reaction diffus term righthand side dae system problem form gt 0 1 ident matrix 0 place 1 posit correspond compon c 2 spatial factor p sr consist 5 gaussseidel iter reaction factor use differ quotient approxim diagon block daspk input paramet relat krylov method default valu specifi tabl 71 summar result daspk test new initi algorithm incorpor valu c pred qss denot valu 76 tabul quantiti number newton iter initi condit calcul number linear iter initi condit calcul total number newton iter complet integr total number linear iter complet integr total number residu evalu complet integr number nni0 nli0 measur cost initi algorithm nni nli nre measur total cost solv problem converg correct valu initi achiev reason addit cost pred evid converg region initi problem strongli skew high side permit error least 40 low side case c pred algorithm converg valu c correspond solut valid differ one interest comparison initi condit calcul option select qss initi valu success case total cost figur 709 slightli larger initi indic even approxim qss valu 76 somewhat error unmodifi daspk solver run initi condit option also unabl solv case except qss initi valu case total cost 971 fail case either halt initi algorithm initi option fail first time step either repeat corrector converg failur repeat error test failur 2 basi experi test howev chang default valu nrmax maximum number gmre restart 2 5 c pred fail ic calcul tabl test result new initi algorithm food web problem 72 initi problem 2 test specifi initi time deriv 0 0 ie pose steadyst problem 71 sinc explicit timedepend righthand side consist initi valu determin solut dae problem constant time type problem much harder initi problem 1 absenc time deriv oper moreov precondition devis dae problem less use first describ test use direct method specifi band jacobian gener intern differ quotient two halfbandwidth equal simplic initi guess discret c valu taken spatial flat valu prey subsequ time integr issu stop perform test varieti valu ff fi reveal case problem 1 nontrivi region converg case tabl 72 upper half give result case tabul counter nni0 defin converg achiev difficulti alway use full newton step least valu prey interv c prey interv c prey algorithm fail find solut interv c prey converg incorrect solut neg valu c interv c prey converg correct solut difficulti linesearch algorithm must choos vale 1 refer note true steadi state valu c 1 case rang 99 66 2d problem use jacobian full bandwidth quit costli attempt reduc cost also test halfbandwidth equal 1 correspond approxim jacobian ignor diffus term howev result complet unsuccess result lump tridiagon precondition evid inaccur consid test krylov method problem choic precondition problemat term form true jacobian steadi state problem sinc initi algorithm set usersuppli precondition choic p sr 77 use problem 1 undefin therefor use gammar blockdiagon matrix involv reaction jacobian element tri varieti valu ff fi provid flat initi guess 78 howev larger valu paramet found converg gmre iter much slower case initi problem 1 expect sinc diffus term contribut significantli system complet absent precondition order achiev converg therefor increas krylov subspac paramet default valu set maximum size krylov subspac maxl 20 number gmre restart allow nrmax 19 allow total 400 gmre iter linear system valu c prey algorithm appear fail valu prey least converg correct solut c prey linear method nni0 nli0 note direct fail ic calcul direct 11 incorrect solut direct 11 linesearch min direct fail ic calcul 50 direct 11 direct 11 direct 12 50 krylov fail ic calcul tabl test result food web problem initi problem 2 case tabul compar comput solut vector initi algorithm accur solut direct method integr tighter toler virtual steadi state valu problem 2 test error less toler impos exampl prey maximum rel error observ user daspk caution initi problem 2 difficult initi problem 1 extra effort may necessari comparison problem 1 time integr converg algorithm problem 2 sensit initi guess qualiti approxim jacobian j precondition p j p use time step good approxim limit c 1 case problem 1 food web test differ precondition steadyst initi problem serious consid user easili determin jac psol whether precondition call steadyst initi condit calcul paramet cj equal zero nonzero situat branch accordingli appropri precondition r develop softwar time depend problem use method line differentialalgebra integr numer solut initialvalu problem differentialalgebra equat decay uniform state food web local converg theori combin inexactnewtonfinitediffer project method hybrid krylov method nonlinear system equat converg theori nonlinear newtonkrylov algorithm use krylov method solut largescal differentialalgebra system consist initi condit linear time vari singular system comput method gener higherindex nonlinear singular system differenti equat numer method unconstrain optim nonlinear equat shoot method fullyimplicit index2 differentialalgebra equat approxim method consist initi differentialalgebra equat zur theori und numerischen realisierung von losungmethoden bei differentialgleichungen mit angekoppelten algebraischen gleichung consist initi differentialalgebra system gmre gener minim residu algorithm solv nonsymmetr linear system tr ctr alan c hindmarsh peter n brown keith e grant steven l lee radu serban dan e shumak carol woodward sundial suit nonlinear differentialalgebra equat solver acm transact mathemat softwar tom v31 n3 p363396 septemb 2005 c h baker c h paul h tian differenti algebra equat aftereffect journal comput appli mathemat v140 n12 p6380 1 march 2002 van beek v bo j e rooda declar unknown daebas hybrid system specif acm transact model comput simul tomac v13 n1 p3961 januari