exact algorithm find minimum transvers rank3 hypergraph present two algorithm problem find minimum transvers hypergraph rank 3 also known 3hit set problem problem natur extens vertex cover problem ordinari graph first algorithm run time o16538n hypergraph n vertic need polynomi space second algorithm use exponenti space run time o16316n b introduct hypergraph gener graph edg call hyperedg may consist 1 2 vertic hypergraph rank k largest hyperedg contain k vertic transvers also known hit set vertex cover subset v vertic includ least one vertex everi hyperedg minimum transvers problem find transvers minimum cardin hypergraph npcomplet gener case hypergraph maximum rank k 1 6 articl consid problem hypergraph rank 3 find transvers minimum cardin equival find independ set maximum cardin transvers much wide studi hypergraph independ set find hypergraph transvers applic mani area exampl artifici intellig databas theori 4 particular situat find small transvers larg rank3 hypergraph encount comput biolog comput evolutionari phylogeni 3 close connect comput set minim transvers rh hypergraph h data mine problem research partial support cug nation graduat school comput scienc sweden find maxim specif sentenc interest databas 8 furthermor minimum transvers problem natur gener vertex cover problem ordinari graph algorithm first exact algorithm awar solv problem time provabl lower o2 n algorithm relat problem could use solv minimum transver sal provid guarante particular niedermei rossmanith 13 construct algorithm parameter version problem one tri find transvers smaller given paramet k run time o2270 k n take closer look applic previou algorithm section 3 relat result beyond one mention section 3 approxim algorithm minimum transvers 10 5 deal transvers hypergraph problem gener form main part paper present two algorithm minimum transvers one use polynomi space run o16538 n one use exponenti space run o16316 n time achiev bound two thing first use parameter algorithm case previous mention algorithm niedermei rossmanith 13 import subcas algorithm low valu paramet proven possibl second use method analysi take number edg cardin 2 consider without make analysi overli complic trick may use construct algorithm well articl structur follow section 2 contain variou definit minor result need algorithm section 3 deal topic previou algorithm problem section 4 contain algorithm analys final section 5 contain conclus 2 preliminari 21 basic definit hypergraph gener graph edg e arbitrari set call hyperedg vertic h sometim h given tupl v e v vertic e hyperedg purpos definit simpler nh number vertic jhj number edg h usual use n let hypergraph impli rank hypergraph defin runiform hypergraph call edg cardin k kedg edg cardin 1 call loop degre vertex dx number edg e x 2 e write hypergraph consider clear context defin k x k x h number kedg e x 2 e hypergraph simpl edg minh hypergraph edg eg word hypergraph minim hyperedg h obvious simpl n complet runiform hypergraph n vertic edg combin r vertic 22 transvers independ set transvers h transvers transvers 0 h exist 0 ae equival transvers ordinari graph vertex cover independ set h e 6 edg complement independ set transvers maxim minim set minim transvers h call transvers hypergraph rh hypergraph proof statement see 1 h size smallest transvers h defin transvers hypergraph problem problem gener rh given hypergraph h natur know rh solv minimum transvers problem search rh smallest transvers ojt rhj time howev jt rhj may exponenti potenti larg o2 n 23 turan number turan number n p r minimum jhj runiform hypergraph h theorem 1 h 3uniform hypergraph l 6k1gamma proof given 1 r p n alway true hypergraph de caen 2 shown r set integ 2n q 2 word jhj 1gammaq qn integ h possibl definit turan number k solv q get one posit solut use solut get 6k note condit qn integ equival condit fkdeltan integ fk function posit valu k contin monoton increas assum valu 0 1 exclus therefor fk exist k 0 k fk 0 theorem make trivial statement sinc true everi 3uniform hypergraph h 3 algorithm section take look algorithm relat problem could appli minimum transvers problem 31 parameter 3hit set 3hit set equival minimum transvers problem 3 uniform hypergraph nice algorithm parameter version problem one seek transvers jt j k given paramet k present niedermei rossmanith 13 algorithm run time o2270 k n easili modifi return minimum hit set parameter natur algorithm slower k larg faster k low gener case k may larg hypergraph k 3 achiev run time o2270 n jhj limit theorem 1 guarante better limit h thu better run time algorithm use algorithm take care otherwis difficult case detail found section 4 32 transvers hypergraph applic algorithm found solv transvers hypergraph problem defin section 22 algorithm includ classic algorithm berg 1 improv kavvadia stavropoulo 9 seem behav well experi theoret result exist algorithm theoret interest eiter gottlob 4 mishra pitt 12 algorithm either proven upper bound run time best known upper bound o2 n mainli due fact algorithm design properti low total run time mind eg low predict delay output transvers anoth reason maximum size jt rhj h rank3 hypergraph unknown may high o2 n note also except algorithm kavvadia stavropoulo algorithm usual requir exponenti amount memori 4 algorithm section present algorithm minimum transvers problem first present basic algorithm mintrh need polynomi space analysi show modifi use exponenti space lower run time algorithm vertex x hypergraph fe 2 hypergraph hg intuit hypergraph remain cover x includ transvers remain hypergraph x includ transvers sometim say mean x includ transvers vice versa vertex x domin anoth vertex x everi edg e 2 h note loop x domin vertex observ use analyz algorithm 41 polynomi space algorithm algorithm mintrh basic binari tree search use algorithm niedermei rossmanith 13 base case present list case figur 1 first applic case use algorithm return smallest transvers note two differ use min mina b set b return set lowest car dinal minh hypergraph h hypergraph minim oper defin section 21 algorithm mintrh input hypergraph h output smallest transvers h h empti return 1 h simpl return mintrminh 2 exist loop fxg 2 h return fxg 3 vertex x domin vertex return 4 let x vertex maximum dx among vertic maximum 5 exist least one 2edg h pick vertex x maximum 2 x 2edg fx yg return 6 maximum degre vertex h 4 use nieder meier rossmanith algorithm 7 final pick vertex x maximum dx return fig 1 polynomi space algorithm minimum transvers algorithm use three reduct list case 13 order manner vertex chosen branch design maxim creation loop 2edg number 2edg import featur analysi algorithm given next section prove correct algorithm case case correct case 0 1 appar section 2 case 2 note unless edg fxg cover correct case 3 follow follow observ x domin everi edg cover cover 1 mean exist minimum transvers exist anoth minimum transvers 0 x 62 0 case 6 refer niedermei rossmanith paper 13 everi remain case tri vertex v clearli exhaust search last case catch remain situat final note sinc assign done one vertex time sinc case 2 take care loop empti edg never occur h 42 analysi algorithm section perform analysi algorithm show run time o16538 n analysi method kullmann 11 use consid branch tree algorithm implicitli construct appli problem instanc let everi edg tree label real posit number repres reduct complex occur along edg node v tree branch label 1 branch tupl v associ branch number posit solut branch number denot consid reduc tion mean case requir one branch examin thu implement without actual recurs occur local within node tree node branch tree least two children algorithm case 13 reduct hypergraph none case 13 appli said maxim reduc hypergraph associ node v branch tree maxim reduc hypergraph dealt node analysi use realvalu function f h deriv label edg branch tree specif label edg link node v associ hypergraph h child w v associ hypergraph h 0 f exact definit f h given moment need know f h 0 f h label branch tree guarante posit condit 0 f h nh everi label branch tree posit run time algorithm opolyn delta highest branch number tree polyn polynomi n proof discuss method found 11 f h use function take nh number 2edg h henceforth name k consider specif f realvalu function word vale psik use finegrain measur complex usual n six subdivis one motiv use particular f h worstcas run time algorithm model use twovari recurs valu n settl pattern similar c ngammapsik function psik constant c anoth motiv seem natur n variabl 2edg slightli difficult n variabl one 2edg turn difficult two 2edg matter mani 2edg alway possibl remov singl assign might lead maxim reduc hypergraph 2edg import note howev correct bound given section reli upon either optim similar f h n realworld worstcas run time psik obey given rule get worstcas branch number c run time mintrh oc n use nonoptim psik constant c higher necessari eas present valu psik given tabl 1 technic numer optim requir find valu avail beforehand simplifi proof make easier verifi claim process found explain proof note similar differ approach kullmann 11 might order sinc problem solv relat detail comparison cours given without thorough review paper problem solv express roughli account 2edg accord nonlinear function complex analysi local analysi recurs perform kullmann account short claus correspond 2edg linearli instead use complic nonloc analysi get good upper bound kullmann method might provid tighter bound exchang proof bound complex lengthi main part section theorem 2 give proof time complex mintrh first give small lemma concern time complex niedermei rossmanith algorithm lemma 1 niedermei rossmanith algorithm run o16484 n time 3uniform hypergraph h maximum degre 4 less proof sinc maximum degre h 4 jhj n3 set theorem 1 section 23 give us h d060962ne ceil function ignor suffici larg n paramet niedermei rossmanith algorithm run time o2270 060962n theorem 2 mintr run o16538 n time proof let k number 2edg h give branch number variou case algorithm use measur f valu psik given case 03 case 0 use recurs case 13 reduct previous mention valu f h decreas applic reduct appli situat might temporarili increas f h 2edg remov case 1 occur h contain least one loop case reduc nh afterward result reduct f h least case 4 case need examin detail n k chang branch branch assum 3 branch examin let n 0 k 0 number variabl 2edg remain respect reduct appli assum domin vertic occur would lead easier branch two branch hx 1 branch q 2edg remov loop new 2edg creat hx 0 branch p 3edg turn 2edg q 2edg turn loop sinc h minim p 2edg new ie occur h uniqu disjoint loop k 0 p also guarante everi loop fvg 2 thu maximum number 2edg remov case 1 2 q delta q total n worst case particular q alway case minimum k 0 k formula branch number branch number case case 4 subcas 2 k formula branch number branch number case case 4 subcas 2 result branch divid 3 case first branch one worst case branch case everi valu k achiev k 0 minim branch use valu tabl 1 find branch branch number 16538 instanc worstcas branch number note k 6 branch number 1 tabl 2 contain formula calcul branch number case along actual branch number second one worst case minim k 0 valu k given tabl 3 formula calcul branch number actual branch number case k 6 domin worst case sinc part tupl increas increas k final q 3 worst case valu k branch formula branch number valu q k branch number branch number case case 4 subcas 2 x 3 6 listen tabl 4 2 x 6 k 6 bring wors case sinc case 5 case two subcas 2 proven branch number less 14143 note vertex v 2 v 0 otherwis domin case 4 would appli 2 assum edg contain x fx yg fx zg know 2 domin z x z taken care reduct 0 loop fxg remov dz 1 case least 3 variabl remov branch number overestim 3 gamma otherwis 2 branch variabl x 2edg fx yg remov exactli one new 2edg creat thu k unchang branch number case case run time o16484 n case 7 sinc dx 5 worst branch case 16538 final case algorithm proof complet find valu psik case analysi algorithm first perform precis valu psik known found numer optim explain optim perform branch b set valu psik calcul valu branch number b given formula given branch b vector correspond branch number enumer branch occur case analysi let x vector x contain valu psik run time mintrh ocx n want find x minim cx given condit psik cours branch b found case 5 algorithm valu b x good enough regardless x branch includ optim note particular algorithm analyz section b x contin long condit x hold cx contin suffici condit standard algorithm achiev least local optimum 43 exponenti space modif use idea robson 14 lower time bound allow algorithm use exponenti space idea rememb result recurs algorithm subset v 0 ae v jv 0 j ff delta jv j ff store quickli access data structur like balanc tree solut calcul 14 robson ordinari graph exactli one subgraph v 0 ae v hypergrap howev sever differ hypergraph use vertic v 0 may reach cours algorithm start hypergraph h vertic v edg fx reach hypergraph h 0 vertic either assign assign made possibl fy zg 62 h 0 one way handl take care 2edg loop separ rememb result 3uniform hypergraph suppos hypergraph h 0 vertic edg h 0 h come set vertex therefor smaller 3 edg cardin 3 h 0 exactli edg cardin 3 h use vertic v 0 exactli one 3uniform hypergraph everi v 0 ae v unfortun method trivial extend algorithm niedermei rossmanith use way run time algorithm depend valu paramet k size vale psi 0 k graph consequ algorithm potenti take o16484 n run time regardless cach want find better bound run time use algorithm version algorithm net result use algorithm instead use cach trick state run time o16316 n let mintrnonrh mintrh subcas call niedermei rossmanith algorithm remov algorithm still correct modif final case remain catchal case first give bound run time mintrnonrh proceed give detail modif use exponenti space lemma 2 mintrnonrh take o16737 n time hypergraph n vertic proof case analysi perform theorem 2 valid modifi algorithm well final case give brief version proof valu new psik call given tabl 5 case 03 still valid affect chang psik psi 0 k case 4 case analysi still valid need repeat branch get new branch number tabl 68 give branch formula new valu branch number case case 5 case analysi still valid branch number still smaller 14143 reason old case 6 remov final case new worst case 1 1 psi 0 possibl valu psi 0 k cours deriv use method psik simpler way look upon robson idea imagin algo k formula branch number branch number case case 4 subcas 2 use psi 0 k k formula branch number branch number case case 4 subcas 2 use psi 0 k branch number branch number case case 4 subcas 2 x 3 use psi 0 k algorithm mintrexph input hypergraph h output smallest transvers h possibl taken lookup tree h empti return 1 loop fxg 2 h return fxg 2 vertex x lie one 2edg return 3 2edg exist vertex lie one pick edg fx yg return 4 solut previous calcul return 5 otherwis pick 3edg fx rememb result fig 2 helper function mintr n ffn 0 rithm first fill tree subset v 0 jv start work h halt recurs whenev reach hypergraph precalcul solut tree fill time polynomi n time size certain 3uniform h 0 vertic pick edg fx branch h 0 note assign made x second third branch first third branch etc branch equival look tree way polynomi local work need everi v 0 ae v tree rest algorithm let h 0 n 0 vertic hypergraph given initi call let mintr 0 h mintrnonrh modifi call mintrexph given figur 2 whenev use two differ type branch one hand branch 1 hand standard branch branch 0 correct former branch follow definit transvers correct latter branch obviou theorem 3 mintr 0 h use time space o16316 n hypergraph h vertic v jv proof analysi view algorithm split one treefil part one search part fill tree use time space opolyn delta ffn one entri everi v ffn differ know max 0kffn ffn delta number entri tree ffn ffn alreadi note tree fill polynomi local work entri get bound form n need asymptot ffn use stirl approxim see 7 2n e ignor detail polynomi factor ffn e e e polyn deltaff ff polyn part grow polynomi asymptot bound time space need part algorithm search part algorithm divid time spent mintr 0 time spent mintrexp time spent mintr 0 o16737 1gammaffn whole search tree mintrnonr algorithm view one search tree depth 1 gamma ffn search tree depth ffn attach leaf size lower search tree o16737 ffn sinc total time mintrnonr algorithm o16737 n see upper search tree o16737 1gammaffn leav time spent mintrexp o14656 ffn mintrexp use ffn vertic remain algorithm case 1 reduct case 4 take polynomi time case 2 branch tupl 1 better case 1 appli edg fx yg fx zg get loop fyg fzg branch number 14656 case 3 final lead total work o14143 n 0 reach n 0 remain vertic reach case 3 small edg creat case 3 use case 4 met number 2edg b reach o2 b leav polynomi work leaf sinc 2edg pairwis disjoint b n 0 2 time need ffn worst case mintrexp case 2 combin two time o16737 1gammaffn call mintr exp spend o14656 ffn time search tree total time o16737 1gammaffn 14656 ffn search part algorithm two express balanc total run time mintr 0 h sum ff first part increas grow ff second part decreas sum cours domin biggest term want find point balanc solveff ff get 019228 paramet run time memori usag whole algorithm o16316 n 5 conclus construct two algorithm minimum transvers prob lem one need polynomi space run o16538 n time one need space time o16316 n best knowledg first exact algorithm problem run time o2 n better r north holland extens theorem moon moser complet subgraph parameter complex framework systemat confront comput intractabil iti identifi minim transvers hypergraph relat problem complex dualiz monoton disjunct normal form comput intract guid theori npcomplet concret mathemat foundat comput scienc data mine evalu algorithm transvers hypergraph problem approxim color maximum independ set 3uniform hypergraph new method 3sat decis worstcas analysi gener maxim independ set boundeddegre hypergraph effici fix paramet algorithm 3hit set algorithm maximum independ set tr identifi minim transvers hypergraph relat problem complex dualiz monoton disjunct normal form data mine hypergraph transvers machin learn extend abstract gener maxim independ set boundeddegre hypergraph new method 3sat decis worstcas analysi approxim color maximum independ set 3uniform hypergraph concret mathemat comput intract evalu algorithm transvers hypergraph problem effici fixedparamet algorithm 3hit set ctr peter damaschk parameter enumer transvers imperfect phylogeni reconstruct theoret comput scienc v351 n3 p337350 28 februari 2006