csp partial automata coalgebra paper present first reconstruct hoar theori csp term partial automata relat coalgebra show concept process hoar commun sequenti process prenticehal englewood cliff nj 1985 strongli relat concept state special name final partial automata moreov show determinist nondeterminist oper hoar 1985 interpret compat way construct semant level automata base abl interpret finit process express repres finit partial automata design initi state way provid new method solv recurs process equat base concept final automata coalgebra reconstruct csp allow us use coinduct new proof principl make evid use principl prove exampl law hoar 1985 b introduct peopl usual work model theori semant formal specif becom often hard approach area process calculi process algebra process without physic basi differ concept machin process agent state system syntax without semant differ process process express paper devot make step overcom difficulti contrast area process calculi insist clear intuit essenti differ concept system machin agent state process respect system differ state process devot describ observ behavior system two state observ differ inde fact differ process start state paper publish electron note theoret comput scienc volum 19 url wwwelseviernllocateentc r aim paper make evid csp interpret theori process special determinist nondeterminist partial automata theori allow bring csp automata common perspect theori coalgebra 6 show coincid concept process 4 concept state final automata coalgebra moreov analys far construct oper 4 level process relat justifi correspond compat construct level arbitrari automata analysi put mani inform argument intuit hoar formal semant level insist also clear distinct concept process concept process express tradit process express use finit syntact represent process algebra law 4 tell process express denot process process express howev also seen compat way syntact represent finit automata initi state compat mean process start correspond initi state coincid process repres process express observ offer new method solv recurs process equat recurs process equat describ finit automaton initi state imag state respect uniqu homomorph final automaton process state solut recurs equat draw attent fact need impos cpo structur process describ solut recurs equat mean fix point construct cpo within coalgebra approach fix point construct seen shift extern level made name describ final automaton coalgebra result categori theoret fix point construct hope integr view csp automata coalgebra develop paper step achiev unif theori comput scienc advoc hoar 5 integr view howev also valu becom easier explain teach process calculi relat oper level process construct level automata possibl adequ scope applic csp becom clear user final believ satisfactori formal treatment phenomenon comput requir consid differ viewpoint understand well transit differ viewpoint sinc paper tri bridg two apart area written mainli two kind reader reader familiar coalgebra reason present eg 6 read paper introduct explan basic concept idea csp technic noth realli new concern theori coalgebra reader familiar csp process calculi also abl read paper convinc kind r reader practic relev categori theoret coalgebra reason analys categori theoret fix point construct final partial automata detail besid paper selfcontain way anybodi interest theori process read benefit paper organ follow section 2 introduc concept determinist process accord 4 tri make appar strong relationship concept determinist partial automaton therebi turn process relat curri version partial automata studi 10 thu coalgebra treatment process appear quit natur section 3 explor insight 10 partial automata curri version consid special coalgebra show gener categori theoret fixedpoint construct final coalgebra appli determinist partial automata gener construct provid reason model determinist process turn isomorph mathemat model present 4 section 4 make evid hoar defin interact process coalgebra manner moreov show interact process correspond semant level synchron automata ie process arbitrari synchron automaton desrib interact process singl compon section 5 discuss hoar treatment branch intern nondetermin base idea accept refus set show concept nondeterminist process csp correspond concept determinist filter automata section 6 provid semant interpret nondeterminist oper 4 level automata describ elimin intern action automata final hoar treatment diverg analys section 8 show treatment base mixtur coalgebra algebra techniqu close paper conclus remark work determinist process automata fortun contrast present process 4 own mathemat rigour allow start immedi semant orient analysi propos concept process firstli hoar assum process p fix set event action process may engag call alphabet p also denot ffp process alphabet never actual engag event call secondli hoar provid clean notat process process first engag event 2 ffp behav exactli r process p denot omit bracket allow convent right associ way simpl vend machin v succes serv two custom chocol break describ follow process express ffv chocg process initi engag either distinct event one altern first event occur behav exactli process p denot assum ffp defin also alphabet note process denot process express long determinist sinc event requir distinct machin v mb serv either chocol toffe break describ process express ffv tofg thirdli hoar state everi determinist process p alphabet may regard function f domain b defin set event process p initi prepar engag b determinist process f defin futur behavior process p first event mean everi determinist process p 2 dpa uniqu describ partial function f p dpa domain stand set determinist process alphabet global consid hoar assum way exist biject map nexta p dpa denot set partial function dpa stopa eg process uniqu determin condit domnexta ie determinist process time engag event describ uniqu condit domnexta runa take account idea automaton see immedi set determinist process alphabet seen set state infinit determinist partial automaton without output tradit 1 determinist partial automaton without output defin tripl set input symbol set state theta p r partial state transit function wellknown howev partial function equival curri version ie total function domd way automaton describ equival use curri version tripel point 10 hoar concept determinist process realli reflect partial automaton dpa nexta justifi consid mathemat model determinist process 4 determinist process alphabet defin prefix close subset p ie nonempti subset p 2 satisfi two condit hi 2 p denot empti trace finit sequenc st caten trace process stopa model way set fhig runa given domain nexta p denot 4 p 0 defin domnexta p pg nexta p 2 p denot 4 p defin nexta p pg let dpa set prefix close subset partial automaton call hoaremodel determinist process alphabet note nexta biject inde sinc assign partial function f p dpa prefix close set next gamma1 ag make clear distinct process process express use identifi instead name process stopa build process express realiz determinist process csp constitut special partial automata promis take consider arbitrari partial automata first observ process express eg interpret two differ way firstli suggest 4 interpret userfriendli syntact notat prefix close set v trace ie repres element v mb dpa secondli howev take vmb syntact present finit partial automaton given 3 partial automaton depict follow coin 2 choctof make translat process express exp partial automaton exp unambigu could use subexpress exp denot state exp eg coin instead 3 note approach forc us identifi codomain two arrow start contrast tree orient pictori present process section 12 4 note approach bring us close label transit system use 7 reason process next section see hoaremodel hma determinist process character final object categori determinist partial automata alphabet set input symbol mean exist determinist partial automaton map 2 2 left hand side equat defin right hand side defin p dpa next p dpa note condit equival tradit condit uncurri version automata morphism exampl fhig interpret process express compat translat process express exp determinist partial automaton exp point implicitli initi state exp name state correspond whole express exp state mape mexp process p exp obtain process interpret express exampl eg mvmb use prefix choic build process express repres finit determinist process abl describ syntact infinit process hoar introduc recurs let x identifi process vari abl f x process express build x prefix choic use event fix set idea 4 f x defin map dpa recurs process equat taken syntact descript determinist process exactli one fix point f hoar prove case long f x guard ie long least one occurr f x uniqu fix point denot 4 process express machin vmc alphabet fcoin choc tofg either serv chocol toffe loop describ use process express vmb recurs equat correspond uniqu fix point v mc 2 dpa given trace coin odd r posit either choc tof even posit fortun translat process express finit partial automata initi state extend recurs thu obtain new method solv recurs process equat let f finit partial automaton accord f x initi state 0 2 x 2 state correspond free variabl x ie state especi domtsx obtain x initi state 0 glue togeth 0 defin 2 0 2 domt 0 imag 0 wrt uniqu automata morphism taken determinist process describ recurs equat exampl aris glue togeth state 1 3 mvmb ee choc yy tof mxavmb mc consid exampl process express run obtain onest partial automaton mx arun mxarun runa state 0 mx arun next section becom hope evid method provid process express build identifi prefix choic recurs result fix point construct 4 remark 21 method extend nice mutual recurs obviou fix point construct 4 method work guard express onest automaton mx ie thu construct mx ax state analog 4 treat mean xax discuss nondeterminist oper section 6 final coalgebra coalgebra pair consist set carrier coalgebra map consist map f commut oper r f appli definit determinist partial automata check assign 7 p extend functor set assign map f map easi check defin fact functor concept determinist partial automata alphabet aand coalgebra turn obvious equival categori coalgebra ahomomorph denot therefor daa functor set set op continu 9 ie preserv limit op chain fortun use categori theoret version least fix point construct 11 construct final coalgebra limit l op chain set describ canon infinit sequenc 2 f map project ith compon thu 2 n 3 carrier nfa intend final coalgebra given accord 911 limit nfa follow 3 obtain appli success functor uniqu map singleton set final object categori set see nfa strongli relat set dpa prefix close subset firstli consid element n 1 refer nest function depth less equal n four function element use mapsto notat get g r pictori represent could look follow coin choc coin upsilonupsilon choc wich depict coin coin choc coin coin choc choc coin upsilonupsilon choc note make differ fulli undefin function type 2 fulli undefin function type note nest function differ synchron tree 713 node pictur repres graph node contrast synchron tree node repres path root tree node function thu map g 2 p p 1 gener n 1 cut possibl empti 1th layer nest function inform cut taken place announc write correspond node depth n moreov node n1gammai depth n chang ngammai necessari new share introduc exampl follow transform nest function coin coin coin choc coin upsilonupsilon choc coin upsilonupsilon choc remark 31 element nfa construct infinit sequenc nest function element n 1 correspond directli r element dpa repres finit approxim process prefix close set p ng bound trace correspond uniqu nest function n 1 depth n correspond nest function indic know exist trace pnp n extend correspond trace length n p n gener biject dpa nfa sinc prefix closed ensur p 2 dpa repres uniqu sequenc 1n 0 n sequenc correspond uniqu sequenc equat p correspond requir repres sequenc hfhig fhig prefix close set thu sequenc h limit op chain 3 4 sinc one map nfa trivial 0 thu obtain limit diagram yy 3 4 limit properti diagram ensur exist uniqu map 1 moreov ensur map biject ie isomorph set i2 intend coalgebra model determinist process provid coalgebra remark 32 note categori theoret fix point construct provid kind extern approxim process process p r identifi sequenc h finit approxim g process pleas bear mind open branch g indic mean process finit approxim kept apart need forc cpo structur set process abl speak finit approxim infinit process convinc reader coalgebra model hoaremodel isomorph analys map ua work let given sequenc nfa imag p wrt ua partial function ua thu firstli determin domain ua p bear mind partial function g domain total map 2 n domain ua p equal common domain compon g i1 p forc equat 1 impli 2 n 2 thu domua p secondli defin 2 domua p sequenc ua p ensur g thu obtain assumpt p g h g inde element nfa done sinc nexta p prefix close set 2 domnexta p becom evid biject dpa nfa outlin remark 31 compat nexta ua state theorem 33 hoaremodel coalgebra model isomorph coalgebra ie exist biject map appra dpa nfa follow diagram commut dpa next appr coalgebra model final categori coalgebra construct 911 sinc hma isomorph cma corollari 34 final coalgebra ie final object categori daa r justifi claim section 2 new method solv recurs equat base final hma cma spectiv strongli relat fix point construct 4 look close proof final cma arbitrari coalgebra interest determin process start state 2 analys stepbystep state reach transit unfold state transit function give follow sequenc commut diagram 3 3 leftmost rectangl commut sinc one map 1 rectangl stepwis imag first one state 2 state reach one step transit arbitrari sequenc transit length ie sequenc take account restrict made continu accord next step start state 2 obtain way infinit sequenc 2 n ie repres sequenc transit length atmost start moreov tell state reach sequenc length exactli state visit forgotten follow automaton alphabet 2a ff xx oo state 1 could depict eg first four element unfoldm 1 r follow b final consid abstract unfoldm process map state thu forget inform state reach sequenc length keep infom sequenc length may continu obtain 2 infinit sequenc proc first four element proc 1 eg upsilonupsilon upsilonupsilon commut diagram definit respect entail 2 n thu proc becom inde process ie element nfa mean construct proc process start state 2 global provid map proc map constitut ahomomorph proc cma homomorph uniqu prove straightfowardli accord limit construct nfa op continu functor set 4 interact concurr firstli hoar describ interact process p q alphabet defin process p k q ffp k behav like system compos p q interact lockstep synchron ie occur event requir simultan particip process involv model kind interact defin map k nfa theta nfa nfa last section seen final coalgebra ie final partial automaton alphabet offer canon way defin map arbitrari set nfa 6 construct coalgebra final cma exist uniqu ahomomorph proc cma substanti problem design way underli map proc becom intend one follow coalgebra heurist becom immedi obviou synchron cma obtain appropri coalgebra let coalgebra pair process domsyna 2 domsyna final ahomomorph proc syn syn cma due section 3 make follow diagram commut nfa theta nfa syn proc syn pair p q 2 nfa theta nfa equat ua proc syn requir event z 2 domsyna p q mean ua proc syn use notat 4 last condit turn equat p k thu becom appar coalgebra definit proc syn equival requir state law 4 page 67 4 interact oper sinc proc syn uniqu defin condit sure proc syn inde intend interact oper k secondli hoar describ concurr interact process p r q differ alphabet ffp 6 ffq event alpha bet ie intersect ffp ffq requir synchron howev event alphabet p alphabet q may occur independ q whenev p engag similarli q may engag alon event alphabet q p way alphabet process p k q union ffp ffq alphabet compon process note use overstrok 7 provid anoth techniqu fix event differ set event synchron let given two alphabet b coalgebra definit intend map k nfa theta nfb nfab extract law 7 page 71 4 synchron cma cmb provid partial automaton alphabet ab follow pair process defin domsyn ab c 2 domsyn ab p q set syn ab final provid intend concurr interact oper nfab note obvious syn coalgebra definit concurr interact oper suggest straightforward gener synchron arbitrari partial automata definit 41 partial automata defin correspond synchron automaton follow c 2 domsynm 1 r exampl synchron vend machin vmc section 2 alphabet fcoin choc tofg custom cu alphabet fcoin tof bisg describ recurs equat pay coin custom decid toffe biscuit instead correspond partial automata depict coin 2 ee choc yy tof oeaeaeoe coin b ee bi yy tof synchron syn vmccu automata given coin 2 choc oo bi oo bi tof choc custom abl pay coin may decid toffe machin deliv toffe time decid biscuit machin serv later chocol even worth machin may decid give chocol interpret decis biscuit second chanc get toffe note simpli extend alphabet custom fcoin tof bi chocg would obtain synchron automaton dead lock coin 2 oo bi oo bi tof turn concurr interact process exactli describ process synchron automaton synm 1 2 reconstruct process singl automata 1 2 synchron automata compat interact process state theorem 42 partial automata pair state given final ab homomorph proc syn ab suffic show r map proc 1 constitut homomorph proc 1 nfa theta nfb syn ab requir equal proc syn 1 2 ensur uniqu final homomorph show pair equal theta proc 2 hold sinc proc cma ahomomorph sinc proc cmb bhomomorph 2 accord equat 4 5 total map proc 1 proc 2 definit synm 1 2 syn ab respect firstli show domain function equat 3 equal domsyn ab proc 1 theta proc 2 theta proc 2 secondli show equal 3 c 2 domt 1 b accord definit syn ab equal 4 definit synm 1 2 obtain theta proc 2 c case prove analog 2 accord theorem 42 extend compat way interpret rof process express represent finit automata interac tion two process express exp 1 exp 2 defin take due theorem 42 initi state exp 1 initi state exp 2 remark 43 essenti problem relat state exp 1 variabl process express seem free variabl x idea howev take axkbx state correspond x work well especi respect recurs ie respect idea substitut x success whole express gener model substitut simpl way level automata sinc x b differ automata paper fix problem follow decis sinc interact essenti parallel oper symbol k build border exp 1 imperm name consid x equival x pleas note hoar consid exampl problem aris ie exampl 5 nondetermin csp first glanc nondeterminist process csp noth nondeterminist transit system usual consid coalgebra literatur 6 neither relat power set construct finit power set construct p f nondeterminist system sens csp certain state engag event state reach next step uniqu determin event nondetermin restrict possibl decid local state event accept altern refus next step even case engag event may carri event decid accept event next step second glanc howev possibl relat kind system real nondeterminist system name imag finit nondeterminist automata 9 crucial observ system csp motiv along two idea firstli old idea formal languag theori abstract nondetermin construct nondeterminist automaton n set state determinist automaton p f n set p f state secondli idea maintain p f n differ origin state n long differ express languag r event consid follow imag finit nondeterminist automaton 6 start state 1 reach event either state 3 state 5 differ state 3 state 5 observ local state express languag differ bg construct correspond power automaton p f n fix differ assign state f3 5g p f n set ffb cg fa bgg way obtain two differ state 3 5 n singl state f3 5g p f n two differ local state fb cg fa bg follow idea reachabl part p f exampl would look follow ffagg fflffi flfi r r r r r r r r r r r r r r r r r r c l l l l l l l l l l l l l l l l l l fg fg fflffi flfi note state 2 4 distinguish sinc oper consid decid state f3 5g accept next step either event fa bg fb cg decid fa bg event c occur next step event howev bring us singleton state f6g event b bring us compound state f2 4g sinc go n b 3 2 5 4 gener obtain variant power construct system kind nondeterminist local filter remark 51 hoar use famili set refus event instead famili set accept event model kind nondetermin decid accept set 3 eas argument oper term contrast hoar argu mainli observ term moreov introduc intern nondetermin transform later determinist automata filter automata check howev descript oper mean accept set present next section fulli equival definit hoar 4 model concept nondeterminist process use csp consid partial automata follow structur r call determinist filter automata state 2 denot first compon ts acct second compon abus notat also ts mean dealt f coalgebra functor f p set f map refer categori f coalgebra f homomorph functor f also op continu 9 thu construct analog case determinist automata alphabet final f element fpa infinit sequenc h compon g nest function addit accept set ie subset pa node refer element fpa determinist filter process chaosa 2 fpa eg nondeterminist process time engag event time refus event describ uniqu condit chaosa 2 remark 52 set fpa includ nondeterminist process defin 4 also someth model coalgebra satur condit 4 3 accept refus set guess hoar need condit identifi diverg chao tri treat diverg algebra manner compar section 7 differ point research obvious assign determinist partial automaton correspond determinist filter automaton 2 ahomomorph underli map provid also f doma total f mean embed functor alphabet note correspond embed accord 4 would take instead singleton famili accept set fdomtsg famili refus set result filter automaton would proper intern nondetermin howev never observ outsid note obvious besid problem branch nondetermin discuss hoar tri treat within framework also problem intern non determin ie problem system may carri intern action r observ outsid treat problem use concept accept refus set consid follow simpl determinist filter automaton f fg fg ffbgg ffag fa gg ffa bg fbgg 6 fg assum intern action hoar insist intuit want action occur automat instantan soon 4 p 111 decid intern state 1 accept fa g action occur instantan go state 3 new decis accept case decid fag allow stay state 1 take chanc reach state 2 via action decis fa g 1 equival 3 make decis elimin action identifi state 1 3 take decion 3 instead decis fa g 1 way describ observ behavior f follow nondeterminist filter automaton fg fg ffbgg ffag fa bg fbgg 6 fg long diverg f ie infinit loop intern action elimin intern action outlin fulli compat hoar treatment case diverg howev hoar firstli identifi diverg state chaosa proce elimin see section 7 6 nondeterminist oper realiz program interpret oper 4 construct level automata thu interpret everi finit process express repres finit automata initi state process start state equal process repres express accord 4 becom littl bit complic take account nondeterminist oper assign determinist filter process state determinist filter automata construct gener choic interleav jjj elimin intern action howev introduc branch nondetermin thu oblig firstli take consider nondeterminist filter automata defin construct kind automata secondli r describ transform nondeterminist filter automata determinist filter automata get determinist filter process hoar interest note identif action consid 4 would also introduc branch nondetermin could treat natur within approach side intern action aris conceal action also construct nondeterminist u recurs assign observ determinist process automata intern action two possibl firstli elimin intern action level automata transform result nondeterminist automata determinist one case diverg get way determinist filter process intend hoar secondli carri transform determinist automata first use mix coalgebra algebra procedur accord hoar elimin intern action determinist filter process sequel present semant interpret nondeterminist oper 4 level filter automata space prove formal correct interpret done interact theorem 42 hope howev reader convinc definit inform argument exampl 61 nondeterminist filter automata imag finit nondeterminist filter automata automata structur coalgebra functor set anf map f given p f categori anf coalgebra anf homomorph denot nfaa obvious embed allow assign determinist filter automaton theta p nondeterminist filter automaton n note definit work smoothli sinc keep f n situat assign compat f homomorph thu obtain embed alphabet side defin basi finit power set functor nondeterminist filter automaton determinist filter automatn r follow 2 p f defin domt 2 domt p set easili check construct compat anf homo morphism ie finit power set functor functor alphabet exampl finit power set construct refer next subsect 62 gener choic interleav interact gener choic oper correspond semant level glue state automata therebi decis accept glu state given glue decis singl state definit 61 let given nondeterminist filter automaton differ state 1 6 2 glue state 1 2 provid automaton follow set 2 domt note case 2 domt 1 domt 2 branch nondetermin construct extend straightforwardli equival state basi construct extend translat process express automata initi state oper consid two process express exp 1 exp 2 fx set express common let state f exp correspond variabl x j pleas bear mind state correspond free variabl alway domain accept fg introduc sequenc r glue 1 abbrevi denot disjoint union automata express exp 1 exp 2 interpret finit nondeterminist filter automaton initi state 1 initi state f exp 2 exampl consid express exp ie follow determinist automata f exp 2 c c ffa cgg ffbgg fg ffb cgg fg nondeterminist automaton f exp 1 exp 2 initi state 1 4 3 5 state correspond free variabl x express exp 1 exp 2 look follow c c fg outlin introduct section firstli go power automaton p f initi state fs 1 secondli appli final f order obtain determinist filter process repres express exp 1 exp 2 accord 4 exampl obtain follow reachabl part automaton p f b c ffbgg fflffi flfi fg known formal languag theori trace 2 action also trace action p f vive versa interest point automata also equival respect accept trace f exp 1 exp 2 carri sequenc r 2 accept decis action p f draw attent point trace hci 1 4 3 5 continu f exp 1 exp 2 sinc 3 5 final state model break condit trace consid p f accept r trace thu decid state f2 3 5g accept break run gener accept trace filter automaton f continu state domt acc intuit behind interleav oper jjj combin two system without synchron system could engag action choic nondeterminist definit 62 nondeterminist filter automata f defin correspond interleav automaton follow 2 domint adapt exampl x1 p 121 4 consid follow determin istic filter automata f 1 f 2 initi state 1 ffbgg interleav f 1 f 2 provid int f 1 f 2 initi state 1 1 oo oo ffbgg power construct deliv follow part p f int f 1 f 2 ffagg f fag fbg fa bgg ffbgg process express exp 1 exp 2 defin r initi state 1 initi state f exp 2 discuss remark 43 concern free variabl appli also interleav ie decid free variabl exp 1 jjjexp 2 interact oper k introduc contrast gener choic interleav new branch nondetermin definit 41 provid way determinist filter automata f correspond synchron filter automaton defin addit definit synchron nondeterminist filter automata straightforward 63 recurs nondeterminist conceal action forc us give full treatment intern action anyway thu problemat model recurs nondeterminist u introduct special intern action hoar insist intuit process express xax repres infinit loop intern action ie diverg cover intuit model oper introduct new intern action automaton glue state done section 2 context determinist partial automata finit nondeterminist filter automaton accord f x alphabet initi state 0 2 x 2 state correspond free variabl x ie state especi domtsx fg obtain initi state 0 ad new intern action alphabet introduc new intern action x 0 g sinc state fx time correspond x initi fx obtain fxax follow onest automaton back ffbackgg remark 63 correct distinguish automaton f alphabet interfac ie set ob observ raction sens may back alreadi intern hidden action f f x ie back 2 int n ob alreadi applic recurs f x moreov observ stand set observ action intuit behind nondeterminist u provid outsid system nondeterminist altern two possibl behavior model intuit introduc addit decis point two possibl intern local decis definit 64 let given nondeterminist filter automaton state introduct altern 1 provid automaton us follow set rightg process express exp 1 exp 2 defin analog gener choic oper nondeterminist filter automaton us 2 initi state 1 u 2 initi state f exp 2 exampl nondeterminist recurs consid express x subsect 62 accord definit obtain fxexp 1 uexp 2 c right yy c oo back ffbackgg ffleftg frightgg initi state 1 u 4 intern action left right back 64 elimin intern action describ formal stepwis elimin intern action automata outlin introduct section consid finit nondeterminist filter automaton fix set ob observ action state 2 construct new finit nondeterminist filter automaton r elimin intern action start follow denot set state f reachabl intern action set 2 domt 0 0 set note case domt n delet acct accept includ intern action appli stepwis elimin intern action finit nondeterminist filter automaton f set ob observ action get final due finitar f finit nondeterminist filter automaton thu consid f 0 automaton alphabet ob exampl subsect 63 get two step order automaton f 0 c c ff ffbgg initi state aris merg state 1 4 1 u 4 3 5 fxexp 1 uexp 2 power construct provid follow part p f initi state fmg c xx c ffbgg fflffi flfi oo even finit automata diverg ie loop intern ac tion procedur provid reason result crucial point abstract diverg merg state loop one state collect fulli observ accept loop way would obtain fxax two step automaton fg ie automaton repres process stopa inde r intuit hoar wish interpret xax repres chaotic behavior 7 conceal last section describ within framework hoar treatment intern action thu diverg problem assign state nondeterminist filter automaton f alphabet set ob observ action determinist filter process alphabet ob firstli use power construct transform nondeterminist filter automaton f determinist filter automaton p f f singleton state p f f correspond state f secondli assign state p f f determinist filter process alphabet use uniqu final f final f coalgebra fma sinc set fpa determinist filter process carrier fma final need map hide transform determinist filter process determinist filter process ob ie process observ action definit subject section go technic detail draw attent follow crucial observ sinc state transit function va final f coalgebra fma biject well f carrier fpa 612 ii definit hide fpa fpa ob thu concept nond terminist process 4 base complex mixtur coalgebra algebra techniqu see remark 52 differ fulli coalgebra concept determinist process 4 mix coalgebra algebra concept nondeterminist process show also differ fix point construct 4 determinist process construct start complet undefin process stopa proce extend defined contrast construct nondeterminist process start complet defin accept process chaosa proce reduc defined accept iii map hide provid neither coalgebra algebra sens kind homomorph go defin hide start consid two f subcoalgebra fma obvious set fpa ob observ process constitut f subcoalgebra fma fma ob r seen f subcoalgebra fma moreov character fma ob equat fma accv p fma ob greatest f subcoalgebra fma contain set loca ob local observ process see 9 way obtain set diva ob fpa diverg pro cess ie process infinit trace intern action carrier f greatest f subcoalgebra fma contain set loca int process local intern action turn next algebra viewpoint observ f gener set fpa ob diva ob ie mean fm gamma1 smallest f algebra fm gamma1 contain fpa ob diva ob way use common algebra induct two basic case fpa ob diva ob defin thing fpa definit hide need auxiliari map merg finit set observ filter process singl observ filter process use embed power construct obtain final thu final homomorph p f nfma ob fma ob provid intend map merg let given set action design set ob observ action defin map consid first two basic case observ process take obvious ident diverg process identifi accord hoar chaotic behavior induct step base f consid process p 2 fpa n fpa ob result appli oper v gamma1 argument accv p va p induct assumpt hidev pa 2 fpa ob alreadi defin 2 domva p defin assumpt hidep 2 fpa ob enough assign accv p va p 2 ppa theta p fpa pair r sinc use ob ob defin ob notethat accord definit biject va ob analog elimin intern action describ section 64 defin acc follow denot set process fpa reachabl p intern action set note get inde acc p accord equat acc hideq induct assumpt 2 domg p set case 2 domva case 2 domva case 2 exampl consid determinist filter automaton fxexp 1 uexp 2 section 63 alphabet fa b c lef right backg set observ action second third compon process proc f xexp 1 uexp 2 1 start state depict right oeoe right upsilonupsilon c c upsilonupsilon second third compon correspond observ process r c oeoe c ffbgg fi upsilonupsilon c ii upsilonupsilon c sinc diverg fxexp 1 uexp 2 process coincid process start state fmg automaton p f section 64 aris fxexp 1 uexp 2 firstli elimin intern action secondli abstract nondetermin use power construct 8 conclus work shown concept process 4 strongli relat semant level concept determinist partial automata determinist filter automata nondeterminist filter automata abl give compat semant interpret oper 4 level automata algebra law 4 turn statement concern compat construct differ level next step prove law done statement theorem 42 concern compat synchron automata interact process base result categor concept paper abl develop gener theori combin structur automata would includ eg straightforward interpret chang symbol mean functor categori automata analog 13 would also interest necessari relat construct result paper similar construct result area behavior 8 hidden 2 algebra specif also conveni consid weaker concept homomorph base obviou partial order set p p p f ppa respect would allow eg consid synchron automaton synm 1 2 rel subautomaton product automaton moreov abl way extend consider 14 concern trace run determinist partial automata filter automata final seem worth extend analysi section 7 process calculi find extend coalgebra algebra techniqu mix far may separ combin structur way r r univers theori automata hidden agenda algebra theori process commun sequenti process unif theori challeng comput scienc tutori coalgebra coinduct commun concurr initi comput univers coalgebra theori system automata coinduct exersic coalgebra categori theoret solut recurs domain equat functori oper semant denot dual model concurr coalgebra introduct csp tr commun sequenti process initi comput algebra specif partial algebra algebra theori process commun concurr model concurr unif theori automata coinduct exercis coalgebra univers coalgebra theori system ctr michel boreal fabio gadducci process formal power seri coinduct approach denot semant theoret comput scienc v360 n1 p440458 21 august 2006