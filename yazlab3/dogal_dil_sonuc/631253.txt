architecturebas perform analysi appli telecommun system abstractsoftwar architectur play import role determin softwar qualiti characterist maintain reliabl reusabl perform perform effect architectur decis evalu earli stage construct analyz quantit perform model captur interact main compon system well perform attribut compon paper propos systemat approach build layer queue network lqn perform model uml descript highlevel architectur system exactli architectur pattern use system perform model structur retain clear relationship system architectur simplifi task convert perform analysi result conclus recommend relat softwar architectur second part paper propos approach appli telecommun product lqn model built analyz analysi show perform bottleneck move compon compon hardwar softwar differ load configur expos weak origin softwar architectur prevent system use avail process power full capac due excess serial b introduct perform characterist respons time throughput integr part qualiti attribut softwar system grow bodi research studi role softwar architectur determin differ qualiti characterist gener 12 1 perform characterist special 15 16 architectur decis made earli softwar develop process therefor would help abl assess effect softwar perform soon possibl paper contribut toward bridg gap softwar architectur earli perform analysi propos systemat approach build perform model highlevel softwar architectur system describ main system compon interact architectur descript construct perform model base must captur certain issu relev perform concurr parallel content softwar resourc exampl softwar server critic section synchron serial etc frequent use architectur solut identifi literatur architectur pattern pipelin filter clientserv clientbrokerserv layer masterslav blackboard etc 3 12 pattern introduc higherlevel abstract design artifact describ specif type collabor set prototyp compon play welldefin role help understand complex system paper propos systemat approach build perform model transform architectur pattern employ system perform submodel advantag use pattern alreadi identifi catalogu build librari transform rule convert pattern perform model howev compon interact highlevel architectur cover previous identifi architectur pattern still describ remain interact uml mechan 2 proceed defin adhoc transform perform model formal use build perform model layer queue network lqn model 11 17 18 extens wellknown queue network model lqn develop especi model concurr andor distribut softwar system lqn compon repres softwar process other hardwar devic one interest perform characterist system softwar process may play dual role act client process devic server other see section 3 detail descript sinc softwar server may mani client import queue delay may aris server may becom softwar bottleneck thu limit potenti perform system occur even devic use process fulli util analysi lqn model produc result respons time throughput queue delay util differ softwar hardwar compon indic compon system bottleneck understand caus perform limit develop abl concentr system troubl spot order elimin mitig bottleneck analysi lqn model variou altern help choos right chang system eventu meet perform requir softwar perform engin spe techniqu introduc 14 propos use quantit method perform model order assess perform effect differ design implement altern earliest stage softwar develop throughout whole lifecycl lqn model appropri use due fact model structur deriv systemat highlevel architectur system propos paper sinc highlevel architectur decid earli develop process chang frequent afterward structur lqn model also quit stabl howev lqn model paramet execut time highlevel architectur compon behalf differ type system request depend lowlevel design implement decis earli develop stage paramet valu estim base previou experi similar system measur reusabl compon known platform overhead system call execut time time budget alloc differ compon develop progress compon implement measur model paramet becom accur result 14 shown earli perform model definit advantag despit inaccur result especi model paramet continu refin throughout softwar lifecycl lqn appli number concret industri system databas applic 5 web server 7 telecommun system etc proven use provid insight perform limit softwar hardwar level suggest perform improv differ develop stage system size capac plan paper lqn appli real telecommun system although structur lqn model deriv highlevel architectur system chosen earli develop stage use model paramet obtain prototyp measur accur estim valu avail preimplement phase reason becam involv project system undergo perform tune use best data avail analyz highlevel 5architectur system unchang earli design stage found weak origin architectur due excess serial use lqn model assess differ architectur altern order improv perform remov mitig softwar bottleneck paper proce follow section 2 discuss architectur pattern uml notat 2 use repres section 3 give brief descript lqn model section 4 propos transform architectur pattern lqn submodel section 5 present telecommun system case studi lqn model section 6 analyz lqn model variou load configur show bottleneck move around system propos improv system section7 give conclus work 3 architectur pattern accord 1 softwar architectur repres collect comput compon perform certain function togeth collect connector describ interact compon compon type describ specif defin function set port repres logic point interact compon environ connector type defin set role explain expect behaviour interact parti glue specif show interact coordin similar even though less formal view softwar architectur describ form architectur pattern 3 13 identifi frequent use architectur solut pipelin filter clientserv clientbrokerserv masterslav blackboard etc architectur pattern describ two interrel aspect structur compon behaviour interact case highlevel architectur pattern compon usual concurr entiti execut differ thread control compet resourc interact prescrib manner may requir kind synchron aspect contribut perform characterist system therefor must captur perform model paper propos use highlevel architectur pattern basi translat softwar architectur perform model subset pattern later use case studi describ paper form uml collabor confus uml collabor diagram type interact diagram accord author uml collabor notat describ mechan pattern repres societi filter1 upstreamfilt filter2 downstreamfilt upstreamfilt downstreamfilt filter1 filter2 wait item procitem wait next item procitem figur 1 structur behaviour view collabor pipelin messag filter1 buffer filter2 procitem return read sequenti buffer filter1 1n filter2 1n buffer upstreamfilt downstreamfilt buffer upstreamfilt downstreamfilt buffer return read wait item wait next item figur 2 structur behaviour view collabor pipelin buffer figur class interfac element work togeth provid cooper behaviour bigger sum part 2 collabor two aspect structur behaviour fig 1 2 illustr aspect two altern pipelin filter pattern figur contain left uml classobject diagram describ pattern structur right uml sequenc diagram illustr pattern behaviour brief explan uml notat use paper given see 2 detail notat class object rectangl indic classobject name name underlin object rectangl may contain option section classobject oper anoth one attribut multipl classobject repres upper right corner rectangl thick line repres activ classobject thread control wherea rectangl thin line repres passiv one activ object may implement either process thread identifi stereotyp respect constraint sequenti attach oper passiv object fig 2 indic caller must coordin outsid passiv object exampl mean semaphor one call passiv object oper given time uml symbol collabor ellips dash line may embed rectangl show templat class collabor symbol connect classesobject dash line whose label indic role play compon line connect two object name link repres relationship two object interact exchang messag depend kind interact object passiv activ uml messag may repres either oper call actual messag sent differ flow control link object may option annot arrow show name type messag exchang exampl fig1 arrow half arrowhead activ object filter1 filter2 repres asynchron messag wherea fig2 arrow fill solid arrowhead label write read repres synchron messag implement call oper indic label relev object flow carri messag repres littl arrow circl fig2 messag arrow without circl synchron messag impli repli therefor carri object direct exampl fig2 object flow carri messag read goe revers direct messag sequenc diagram right side fig1 2 show messag exchang set object chronolog order object arrang along horizont axi time grow along vertic axi top bottom object lifelin run parallel time axi lifelin one indic period time object perform action tall thin rectangl call focu control state object rectangl round corner call state mark messag exchang object asynchron synchron repres horizont direct line object also send messag mean one oper invok anoth oper object architectur use pipelin filter pattern divid overal process task number sequenti step implement filter data filter flow unidirect pipe interest activ filter 3 run concurr filter implement process thread loop follow step pull data preced pipe process push result pipelin way push pull oper implement may perform consequ fig1 filter commun asynchron messag filter pull item accept messag sent previou filter process item invok oper procitem pass data next filter send asynchron messag goe wait state next item fig2 filter commun share buffer one push write buffer pull read wherea filter activ object multipl one higher buffer passiv object offer two oper read write must use one time indic constraint sequenti defin transform architectur pattern lqn submodel use structur behaviour aspect respect collabor structur part use directli sens softwar compon counterpart structur lqn model map biject howev behaviour part use indirectli sens match behaviour lqn model repres graphic 3 lqn model lqn develop extens wellknown queue network qn model first independ 17 18 11 joint effort 4 lqn toolset present 4 includ simul analyt solver merg best previou approach main differ lqn respect qn server custom request arriv queue servic may becom client server requir nest servic serv client lqn model repres acycl graph whose node name also task softwar entiti hardwar devic whose arc denot servic request see fig3 softwar entiti drawn parallelogram hardwar devic circl node outgo incom arc play role pure client intermedi node incom outgo arc play role client server usual repres softwar compon leaf node pure server usual server processor io devic commun network etc softwar hardwar server node either singleserv multiserv compos one ident server work parallel share request queue lqn task may offer one kind servic model socal entri drawn parallelogram slice entri execut time demand servic given model paramet although explicitli illustr lqn notat server implicit messag queue incom request wait turn serv server one entri still singl input queue request differ entri wait togeth default schedul polici queue fifo polici also support fig 3 show simpl exampl lqn model threetier clientserv system top two client class known number stochast ident client client send request specif servic offer task name applic repres busi layer system applic entri requir servic two differ entri databas task offer total three kind servic everi softwar task run processor node drawn circl exampl client class share processor wherea applic databas share anoth processor databas use also two disk devic shown fig3 worth mention applic databas proc2 proc1 proc3 figur 3 simpl lqn model word layer name lqn impli strict layer task exampl task may call task layer skip layer three type lqn messag synchron asynchron forward whose effect illustr fig4 synchron messag repres request servic sent client server client remain block receiv repli provid servic see fig4a server busi request arriv request queu wait phase1 servic client server synchron messag busi repli includ servic phase2 phase3 autonom phase idl client server lqn synchron messag client server busi includ servic phase1 phase2 phase3 idl asynchron messag client server asynchron messag forward client synchron messag repli origin client busi phase1 phase2 idl client c lqn forward messag busi idl phase1 phase2 idl figur 4 differ type lqn messag turn accept messag server start serv execut sequenc phase one end phase 1 server repli client unblock continu work server continu follow phase work parallel client complet last phase fig4a case three phase shown finish last phase server begin serv new request queue becom idl queue empti phase server may act client server ask receiv socal includ servic case asynchron messag client block send messag server repli back execut phase shown fig4b third type lqn messag name forward messag repres dot request arc associ synchron request serv chain server illustr fig 4c client send synchron request begin process request forward server2 end phase1 proce normal remain phase parallel server2 goe anoth cycl client howev remain block forward request serv repli client end phase 1 forward chain contain number server case client wait receiv repli last server chain paramet lqn model follow custom client class associ popul arriv rate softwar task entri averag execut time per phase softwar task entri seen client devic ie request arc task entri devic averag servic time devic averag number visit per phase request entri softwar task entri seen client anoth task entri ie request arc task entri anoth task entri averag number visit per phase request entri request arc averag messag delay softwar hardwar server schedul disciplin typic result lqn model respons time throughput util server behalf differ type request queue delay lqn result may use identifi softwar andor hardwar bottleneck limit system perform differ workload configur understand caus perform limit help develop team come appropri remedi 4 transform architectur perform model softwar system contain mani compon involv variou architectur connect instanc describ patterncollabor compon may play differ role connect variou type transform architectur perform model done systemat way pattern pattern expect perform system depend perform attribut compon interact describ patternscollabor perform attribut central softwar architectur must suppli user addit inform describ demand hardwar resourc softwar compon alloc process processor execut time demand softwar compon behalf differ type system request demand resourc io devic commun network etc specifi clearli kind perform attribut must provid patterncollabor tranform architectur perform model domain discuss next lqn model pipelin filter fig 5 6 show transform lqn submodel two pipelin filter collabor describ fig1 2 respect translat take account one side structur behaviour inform provid uml collabor side alloc softwar compon filter1 filter2 filter1 upstreamfilt filter2 downstreamfilt upstreamfilt downstreamfilt figur 5 transform pipelin messag lqn submodel filter1 filter2 semaphor buffer read proc filter run processor node filter1 filter2 semaphor proc1 proc2 read b filter run differ processor node read sequenti buffer filter1 1n filter2 1n buffer upstreamfilt downstreamfilt buffer upstreamfilt downstreamfilt buffer figur 6 transform pipelin buffer lqn submodel processor lead differ lqn submodel pattern see fig6 tansform rule follow activ filter fig5 6 becom lqn softwar server singl entri whose servic time includ process time filter filter task receiv asynchron messag describ fig 4b execut phase respons typic distribut work phase receiv messag phase 1 process phase 2 send next filter phase 3 b alloc lqn task processor mimic real system way filter alloc differ processor node make differ pipelin messag reason processor repres fig5 affect model pipelin buffer explain c case pipelin messag aspect relat pipelin connector two filter complet model lqn asynchron messag cpu time send receiv system call ad execut time phase respect oper take place want model network delay messag repres delay attach request arc case pipelin buffer fig6 asynchron lqn arc necessari suffici model aspect concern pipelin connector addit lqn element requir take account serial delay introduc constraint buffer oper must mutual exclus third task play role semaphor enforc constraint due fact task serial execut entri task mani entri number critic section execut filter access buffer two case write read sinc execut buffer oper take place thread control filter initi oper alloc filter processor matter filter run processor node may one processor fig6a read write oper execut processor node thu model entri semaphor task obvious coalloc filter howev filter run differ processor node fig6b mutualexclus oper read write execut differ processor node model entri task lqn entri task execut processor node solut shown fig6b keep semaphor task enforc mutual exclus entri use deleg work two new task one respons buffer oper new task alloc processor filter initi respect oper lqn model pipelin filter collabor fig 5 6 gener forward messag fig4c instead asynchron one fig4b sourc request first filter multifilt architectur close instead open close sourc compos set client task send synchron request first filter wait repli last filter sinc lqn task may send forward messag exactli end phase1 work done filter task must take place first phase clientserv pattern frequent use today distribut system fig7 illustr case client commun directli server synchron request describ fig4a server may offer wide rang servic repres architectur view server class method one perform attribut perform model point view import identifi these servic also find invok frequent uml class diagram contain singl associ client server matter mani server method client may invok therefor indic addit line repres clientserv associ messag sent client server use mostli collabor diagram indic servic client invok one time anoth way clientserv connect may realiz describ paper appli case studi wellknown exampl use midwar technolog corba interconnect client server run heterogen platform across local widearea network corba connect introduc interest perform implic model issu 9 lqn origin creat model clientserv system transform clientserv pattern lqn quit straightforward lqn server may offer rang servic object method architectur view cpu time number visit server perform attribut must provid servic model entri server task shown figur 7 contribut differ clientclientserv service1 service2 server client2 1n client1 1n client client server client server client server figur 7 transform clientserv pattern lqn submodel respons time util throughput server client may invok one servic differ time perform attribut client includ averag time demand averag number call entri server pipelin connect case cpu time requir execut system call sendreceiverepli ad servic time correspond entri alloc task processor shown fig 7 transform depend lqn task alloc exactli architectur compon counterpart critic section collabor lowerlevel abstract previou architectur pattern frequent use describ case two activ object share passiv object constraint sequenti attach method share object indic caller must coordin outsid share object exampl mean semaphor insur correct behaviour synchron introduc perform delay must repres lqn model simplic reason fig8 illustr case user invok method share object extend easili allow user call subset method transform critic section collabor produc either model given fig 8a fig 8b depend alloc user process processor node similar pipelin buffer case premis share object oper mutual exclus lqn task chang processor node entri task execut task processor node case user run processor node share object oper model entri task play role semaphor see fig8a run processor node user gener allow user call subset oper entri straightforward user connect request arc everi entri subset user run differ processor node fig 8b share object oper ie critic section execut differ thread control correspond differ user run differ processor therefor oper model entri new task respons oper run user node user call share oper new associ task entri everi oper mean oper call one user repres one entri howev new task must prevent run simultan share usern user1 accessor accessor share critic section accessor share user1 usern proc semaphor critic section f1 f2 fn user1 usern semaphor proc1 procn user run processor node b user run differ processor node figur 8 transform critic section collabor lqn submodel semaphor task one entri user use enforc mutual exclus entri semaphor task deleg work entri model requir oper perform attribut provid user must specifi averag execut time user outsid insid critic section separ coalloc collabor fig 9 show socal coalloc collabor two activ object contain third activ object constrain execut one time contain object may implement process exampl architectur connect casestudi system necessarili architectur pattern quit frequent use obviou solut model two contain object entri task present disadvantag repres case two contain object request queue lqn task uniqu messag queue request entri wait togeth one reason may need separ queue avoid cyclic graph could accept lqn solver use paper solut present fig9 repres contain activ object separ dummi task deleg work entri contain task serial entri dummi task alloc dummi processor interfer schedul real processor node dummyactive1 dummyactive2 contain active1 active2 dummi proc proc activecontain active1 active2 contain coalloc contain contain contain contain figur 9 lqn submodel coalloc collabor 5 lqn model telecommun system conduct perform model analysi exist telecommun system respons develop provis maintain variou intellig network servic well accept process realtim request servic accord softwar perform engin methodolog 14 first identifi critic scenario stringent perform constraint correspond case realtim process servic request next identifi softwar compon involv architectur pattern exercis execut chosen scenario see fig10 client server client server buffer upstrmfilt downstrmfilt buffer upstrmfilt downstrmfilt coalloc contain contain requesthandl 1n io ioin ioout stack stackin stackout doublebuff inbuff outbuff coalloc contain contain buffer upstrmfilt downstrmfilt buffer upstrmfilt downstrmfilt critic section accessor share critic section accessor share databas figur 10 uml model telecommun system real time scenario model start moment request arriv system end servic complet process repli sent back shown fig 10 request pass sever filter pipelin stack process io process requesthandl way back main process done requesthandl seen fig12 tabl 1 access realtim databas fetch execut script desir servic execut step script accordingli script may vari size type oper involv henc workload vari larg one type servic anoth one two order magnitud base experi intuit design decid begin allow multipl replic requesthandl process order speed system two share object shmem1 shmem2 use multipl requesthandl replic system intend run either singleprocessor multiprocessor share memori processor schedul process run free processor ie processor dedic specif task therefor processor node model multiserv dummi proc read ioin request handler ioout databas proc ioexec stackin stackout buffer shmem1 l updat figur 11 lqn base case model telecommun system appli systemat transform rule describ previou section architectur patternscollabor use system shown fig 10 lqn model shown fig11 obtain next step determin lqn model paramet averag servic time entri averag number visit request arc valid model made use measur use quantifi 19 unix util top measur quantifi obtain low arriv rate around coupl requestssecond quantifi profil tool use data compil runtim inform determin user kernel execut time test case chosen user sinc want measur averag execut time differ softwar compon behalf system request see tabl 1 appendix measur execut 2000 request repeat loop comput averag per request although comput confid interv measur repeat experi close agreement top util provid us util figur high load hundr requestssecond close actual execut time demand per system request stackin stackout ioin ioout requesthandl databas execut time msec noncrit section critic sectbuff critic sectshmem1 critic sectshmem2 total figur 12 distribut total demand cpu time per request differ softwar compon oper point measur done prototyp lab two differ hardwar configur one four processor repeat measur close agreement use execut time measur quantifi given tabl 1 appendix determin model paramet util result top valid model util valu obtain solv model within 5 measur valu unfortun rigor valid hinder lack respons time measur 6 perform analysi telecommun system although lqn toolset 4 offer analyt simul solver model result use section obtain simul reason one system featur name schedul polici poll use requesthandl multiserv could handl analyt solver simul result obtain confid interv plusminus1 95 level maximum throughput vs replic factor requesthandl rh2006001000n1 processor n4 processor n6 processor configur throughput figur 13 maximum achiev throughput differ hardwar softwar configur singl class servic request first question interest develop find best hardwar softwar configur achiev desir throughput given mix servic configur understand specif number processor multiprocessor system number requesthandl softwar replic tri answer question explor rang configur given servic mix determin highest achiev throughput fig 13 configur maximum throughput lower requir valu discard cheapest configur insur satisfactori throughput respons time oper point satur chosen solv lqn model effici way explor differ configur wide rang workload measur real system case although model system two class servic select report result singl class illustr clearli bottleneck move around hardwar softwar differ configur model analyz three hardwar configur one four six processor respect chose one four processor sinc actual system run configur six processor see softwar architectur scale run system singl processor see fig 14 replic requesthandl increas maximum achiev throughput due fact processor system bottleneck known 8 replic softwar process bring perform reward unus process capac case softwar server said util effect work wait serv lower level server includ queue includ servic fig 17 show differ contribut util two task ioout rh system satur ie work highest achiev throughput given fig 13 differ number rh replic easi see five rh copi one task ie ioout high util even though littl use work wherea time anoth task ie rh copi lower util use work interestingli enough case 4 processor configur notic process capac system processor reach maximum util level shown fig15 instead two softwar task ioout ioin actual respons littl use work behalf system reach critic level util due serial constraint softwar 4processor configur base case02061 number requesthandl replic util ioout processor ioexec databas requesthandl figur 15 task util 4proc base case 6processor configur base case02061 number requesthandl replic util ioout ioexec processor databas requesthandl figur 16 task util 6proc base case 1processor configur base case02061 number requesthandl util requesthandl processor ioexec databas figur 14 task util 1proc base case architectur two reason serial ioin ioout execut singl thread control lqn mean wait task ioexec ii contend buffer thu increas process power system bottleneck move hardwar softwar trend visibl case 6 processor configur processor util reach 866 shown fig16 bottleneck definit shift hardwar softwar limit perform due constraint softwar architectur tri elimin serial constraint two step first make filter process ie remov stackexec ioexec task lqn model split pipelin buffer sit io process requesthandl two buffer lqn model obtain 2step modif shown fig 19 result half way modifi system first step given fig 20 show major perform improv processor still use capac examin util compon ioin ioout still bottleneck found 4proc base case contribut ioout utilization020613 4 5 6 7 number requesthandl replic util ioout wait ioexec ioexec wait semaphor processor use work read buffer figur 17 contribut ioout util system satur function rh replic level contribut requesthandl utilization020613 4 5 6 7 number requesthandl reprlic util use work requesthandl use work other behalf requesthandl requesthandl busi wait nest servic figur 18 contribut util rh copi system satur function rh replic level wait time gain access buffer ioout wait 90 time ioin 80 appli modif step though softwar bottleneck due excess serial pipelin remov processor util went shown fig 21 4processor fig 22 6processor configur expect maximum achiev throughput increas well throughput increas rather small case 4 processor 27 larger case 6 processor 103 unus process power also realiz case 6 processor new softwar bottleneck emerg name databas process 100 util new bottleneck caus lowlevel server propag upward satur softwar process use requesthandl replic final conclus perform analysi differ configur differ bottleneck solv bottleneck one configur shift problem somewher els perform model offer abil explor rang design altern configur workload mix detect caus perform limit analyz model proceed chang real system ioin request handler ioout databas proc stackin stackout l bufferin shmem1 read write bufferout updat figur 19 lqn model modifi system 7 conclus paper contribut toward bridg gap softwar architectur perform analysi propos systemat approach build perform model highlevel softwar architectur system transform architectur pattern employ system perform submodel ongo work formal kind transform present paper architectur perform domain use formal graph transform base paper illustr propos approach build lqn model appli exist telecommun system perform analysi expos weak origin 4processor configur halfway modifi system020612 4 number requesthandl replic util ioout ioin processor databas requesthandl stackout stackin figur 20 task util 4proc halfway modifi system 4processor configur fulli modifi system020612 4 number rh replic util processor databas requesthandl ioout ioin stackin stackout figur 21 task util 4proc fulli modifi system 6processor configur fulli modifi system02061 number requesthandl replic util requesthand ler processor databas ioout stackout io stackin figur 22 task util 6proc fulli modifi architectur due excess serial show process power ad system surprisingli softwar compon rel littl work behalf system request becom bottleneck certain case wherea compon work remov serial constraint new softwar bottleneck emerg lead conclus softwar architectur scale well case studi illustr use appli perform model analysi softwar architectur r formal basi architectur connect unifi model languag user guid system pattern toolset perform engin softwar design clientserv system perform analysi distribut server system perform multilevel clientserv system parallel servic oper measuremnt tool model techniqu evalu web server perform softwar bottleneck clientserv system rendezv network deriv softwar perform model architectur pattern graph transform multilay clientserv queue network model synchron asynchron messag method layer perspect emerg disciplin pattern softwar architectur perform engin softwar system architecturebas perform analysi perform evalu throughput calcul basic stochast rendezv network stochast rendezv network model perform synchron clientserverlik distribut softwar tr ctr perform model bpi middlewar proceed 4th acm confer electron commerc june 0912 2003 san diego ca usa softwar perform engin web servicebas clinic decis support infrastructur acm sigsoft softwar engin note v29 n1 januari 2004 gordon p gu dorina c petriu xslt transform uml model lqn perform model proceed 3rd intern workshop softwar perform juli 2426 2002 rome itali edward billard oper system scenario use case map acm sigsoft softwar engin note v29 n1 januari 2004 christoph lindemann axel thmmler alexand klemm marco lohmann oliv p waldhorst perform analysi timeenhanc uml diagram base stochast process proceed 3rd intern workshop softwar perform juli 2426 2002 rome itali giovanni denaro andrea polini wolfgang emmerich earli perform test distribut softwar applic acm sigsoft softwar engin note v29 n1 januari 2004 vincenzo grassi raffaela mirandola deriv markov model effect analysi adapt softwar architectur mobil comput ieee transact mobil comput v2 n2 p114131 januari vincenzo grassi raffaela mirandola primamobuml methodolog perform analysi mobil softwar architectur proceed 3rd intern workshop softwar perform juli 2426 2002 rome itali vittorio cortellessa katerina gosevapopstojanova kalaivani appukkutti ajith r guedem ahm hassan rania elnaggar walid abdelmoez hani h ammar modelbas perform risk analysi ieee transact softwar engin v31 n1 p320 januari 2005 johan moe david carr use execut trace data improv distribut system softwarepractic experi v32 n9 p889906 juli 2002 vibhu saujanya sharma kishor trivedi quantifi softwar perform reliabl secur architecturebas approach journal system softwar v80 n4 p493509 april 2007 dorin bogdan petriu murray woodsid softwar perform model system scenario perform evalu v61 n1 p6589 june 2005 vittorio cortellessa raffaela mirandola primauml perform valid increment methodolog earli uml diagram scienc comput program v44 n1 p101129 juli 2002