twostep algorithm nonlinear optim structur applic paper propos extens trustregion algorithm classic step augment second step insist yield decreas valu object function classic converg theori trustregion algorithm adapt class twostep algorithm algorithm appli problem whose contribut object function known function form nonlinear program packag lancelot appli updat slack variabl variabl introduc solv minimax problem lead enhanc optim effici extens numer result present show effect techniqu b introduct nonlinear optim problem expens function gradient evalu desir extract much improv possibl iter algorithm object function contain subset variabl occur predict function form second comput rel inexpens updat appli variabl follow classic optim step addit step provid reduct object function lead superior optim ecienc twostep algorithm success appli updat slack variabl particular formul minimax problem indic numer result varieti problem instanc subset variabl slack variabl variabl introduc solv minimax problem appear xed known algebra form object function howev sinc appli problem subset variabl optim rel cheapli compar cost evalu entir function exampl term requir simul independ term depart mathemat scienc ibm j watson research center rout 134 tacon room 33206 yorktown height ny 10598 departamento de matematica universidad de coimbra 3000 coimbra portug work start author visit ibm j watson research center yorktown height support part centro de matematica da universidad de coimbra instituto de telecomunicaco fct praxi xxi 221mat34694 ibm portug z comput architectur design autom ibm j watson research center rout 134 tacon room 33156 yorktown height ny 10598 avail analyt applic realli rather broad propos modic exist nonlinear optim algorithm altern approach feasibl reformul origin problem elimin subset variabl appli algorithm remain variabl see exampl golub pereyra 17 paper deal twostep algorithm second step requir yield decreas valu object function analysi given cover global converg twostep trustregion algorithm present unconstrain minim problem continu dierenti function trust region line search one consid two version twostep algorithm one call greedi call conserv greedi version exploit much possibl decreas obtain second step wherea conserv approach calcul second step rst step conrm satisfi tradit criteria requir global converg point conserv twostep linesearch algorithm new found book bertseka 1 section 131 luenberg 19 section 710 second step call spacer step descript greedi conserv twostep linesearch algorithm found 11 trust region second step guarante decreas valu object function global converg type lim inf k 1 krfi k immedi attain case rst step would reject sum rst second step better chanc accept see remark 31 obtain lim k 1 krfi k either norm second step control trust region see condit 13 decreas object function attain second step order magnitud norm step see condit 12 updat slack variabl refer motiv studi local rate converg twostep newton method show second newton step variabl retain qquadrat rate converg tradit newton method paper structur follow section 2 introduc twostep trustregion al gorithm section 3 analyz global converg properti local rate twostep newton method studi section 4 applic twostep idea updat slack variabl variabl introduc solut minimax problem describ section 5 section 6 present numer result obtain lancelot use updat analyt problem dynamicsimulationbas analyt statictimingbas circuit optim problem final conclus drawn section 7 twostep trustregion algorithm rst consid trustregion framework present paper 20 unconstrain minim classic trustregion algorithm build quadrat model form current point k h k approxim r 2 fy k note k k step k comput approxim solv trustregion subproblem subject ksk k k call trustregion radiu kk arbitrari norm new point test accept actual reduct fy k larger given fraction predict reduct k k step k new point k1 accept situat quadrat model k consid good approxim function fy region trust radiu may increas otherwis consid good approxim function fy region case new point k1 reject new trustregion subproblem form 2 solv smaller valu trust radiu simpl trustregion algorithm describ algorithm 21 trustregion algorithm 1 given 0 valu fy 0 gradient rfi 0 approxim h 0 hessian f 0 initi trustregion radiu 0 set 0 1 2 comput step k base trustregion problem 2 3 comput 4 case set comput h k1 select k1 satisfi k1 k otherwis set 5 increment k one go step 2 mechan use updat trust radiu describ algorithm 21 simpl suce prove converg result practic goal improv optim ecienc one use updat scheme complex involv sever subcas accord valu k propos paper modic trustregion algorithm motiv situat desir updat slack variabl variabl introduc solv minimax problem everi iter trustregion algorithm 7 implement lancelot 9 see section 5 detail practic applic twostep trustregion algorithm quit easi describ suppos comput step k base trustregion subproblem 2 know properti function fy enabl us comput new step k guarante fy k situat would certainli like test whether new point accept modic requir care redenit actual predict reduct given algorithm 21 new actual predict reduct propos aredi predi new predict reduct predict reduct obtain rst step plu actual reduct obtain second step choic predi k appropri sinc second step k comput use model k k twostep trustregion algorithm given algorithm 22 twostep trustregion algorithm greedi 1 algorithm 21 2 comput step k base trustregion problem 2 3 possibl nd anoth step k 4 comput predi 5 case set comput h k1 select k1 satisfi k1 k otherwis set 6 increment k one go step 2 twostep trustregion algorithm 22 evalu new point accept step k k comput call version greedi tri take much advantag possibl decreas obtain second step k note although function f evalu twice algorithm 22 reevalu often comput inexpens context particularli interest involv rel expens evalu k evalu k involv subset variabl cheap comput see section 5 could also consid twostep trustregion algorithm rst accept step k determin afterward second step k comput algorithm outlin algorithm 23 twostep trustregion algorithm conserv 1 algorithm 21 2 repeat comput step k base trustregion problem 2 b comput c k set comput k1 satisfi k1 k set accept true k set k accept fals accept 3 possibl nd anoth step k 4 set k 5 updat h k increment k one go step 2 comment function evalu appli algorithm 23 comput success step k howev case algorithm 23 function f evalu twice iter correspond success rst step k 3 global converg twostep trustregion algorithm analyz rst twostep trustregion algorithm 22 ie greedi version analysi conserv algorithm 23 similar section make assumpt fh k g bound sequenc exist 0 requir step k satisfi fraction cauchi decreas trustregion problem 2 word ask k satisfi 2 0 1 step c k call cauchi step dene solut scalar problem unknown subject ksk k varieti algorithm comput step satisfi condit see 3 22 23 25 26 proposit 31 fraction cauchi decreas krfi k k 6 5 respect proof see powel 24 theorem 4 20 lemma 48 2 use proposit fact fy k predi krfi k k krfi k k inequ crucial prove global converg twostep algorithm particular iter k success aredi readi prove rst converg result theorem 31 consid sequenc fy k g gener algorithm 22 k satis 6 f continu dierenti bound fh k g bound sequenc lim inf krfi sequenc fy k g bound exist least one limit point rfi proof proof similar proof given 20 theorem 410 assum contradict fkrfi k kg bound away zero ie exist 0 krfi k k k 20 theorem 410 make direct use 9 rule updat trust radiu obtain lim k 1 next step show lim k note denit 3 4 aredi turn use taylor seri expans ks k k k impli inequ 8 show converg zero rest proof follow classic argument trust region k converg one rule updat trust radiu show k converg zero contradict attain proof complet 2 result theorem 31 requir step k k may seem surpris result show appropri denit given 3 4 actual predict reduct denit allow us obtain condit 9 11 crucial establish 10 remark 31 also import note denit 3 4 improv accept step fact note k function strictli increas k 1 word case standard trustregion algorithm reject step modi criterion alway better usual one note indic success iter standard algorithm also success modi twostep algorithm particular next step analysi prove addit condit second step theorem 32 consid sequenc fy k g gener algorithm 22 f continu dierenti bound ly 0 fh k g bound sequenc rf uniformli continu ly 0 either posit constant independ k lim krfi sequenc fy k g bound everi limit point satis rfi proof proof similar proof given 20 theorem 414 see also thoma 27 show result contradict assum therefor exist 1 2 0 1 subsequ index fm g success iter subsequ theorem 31 guarante exist anoth subsequ index fl g krfi k k 2 k l krfi l k 2 fm g without loss gener subsequ previous mention 2 real number chosen converg zero k sucient larg correspond success iter hold 12 satis hold otherwis consid case 12 13 separ case make use sum consid indic correspond success iter 12 hold use 15 obtain ks 13 hold appeal 16 write ks either case obtain sinc right hand side inequ goe zero left hand side sinc gradient f uniformli continu sucient larg number 0 1 inequ contradict supposit 2 theorem requir norm step k either k fy k former condit enforc step 2 algorithm 22 although might beneci could lead inferior decreas obtain global converg point also satis necessari secondord condit optim purpos requir step k satisfi fraction optim decreas trustregion problem 2 word ask k satisfi 2 0 1 k optim solut 2 condit weaken sever way 20 step k satisfi fraction optim decreas comput use algorithm propos 22 25 case trustregion norm euclidean global converg result follow theorem 33 consid sequenc fy k g gener algorithm 22 h satis 17 ly 0 compact f twice continu dierenti ly 0 exist least one limit point rfi posit semidenit proof proof basic proof theorem 47 22 2 obtain stronger global converg result secondord point instanc result theorem 411 413 22 see also 21 theorem 417 c condit requir like ks k k k next result show second step preserv nice local properti behavior trust radiu typic trustregion algorithm theorem 34 let fy k g sequenc gener algorithm 22 addit assum step k satis either condit 12 condit 13 f twice continu dierenti bound ly 0 fy k g limit point h posit denit fy k g converg iter eventu success f k g bound away zero proof theorem 32 guarante lim k 1 krfi k proof basic proof theorem 419 20 2 altern result impos condit 12 13 second step given howev need assum fy k g converg theorem 35 let fy k g sequenc gener algorithm 22 continu dierenti ly 0 fy k g converg point h posit denit iter eventu success f k g bound away zero proof rst step k yield decreas quadrat model thu assumpt made h k h guarante ks sucient larg k turn use 8 impli predi ks k constant c 3 c 4 independ k taylor seri expans express 11 give fact fy k g converg result lim inf k 1 krfi k theorem 31 togeth impli lim k 1 krfi k thu 18 get lim k 1 ks k proof termin typic argument trust region 19 20 lim k 1 ks obtain limit lim predi show appeal rule updat trust radiu iter eventu success trust radiu uniformli bound away zero 2 global converg analysi algorithm 23 ident analysi given algorithm 22 point algorithm 23 well dene sinc nonstationari point alway possibl nd accept rst step also everi k krfi k k krfi k k thu result given theorem 3135 hold algorithm 23 lim inftyp result 10 obtain classic assumpt trustregion algorithm unconstrain optim obtain limtyp result 14 one two condit 12 13 requir case applic consid section 5 decreas obtain second step k alway guarante satisfi moreov object function strictli decreas along segment point k k case modifi step 3 algorithm 22 23 way meet requir theorem 32 modic given easi verifi either 12 13 algorithm 31 step 3 algorithm 22 23 quadrat decreas case 3 comput step k g ks k k c 2 k k enlarg otherwis 12 hold c posit paramet c 2 set priori step 1 algorithm 22 23 cours would like prove result theorem 32 case condit 12 replac condit 21 howev result unlik true 4 local rate converg twostep newton method next section interest twostep algorithm second step calcul newtontyp step variabl section investig local rate converg algorithm step compos two newton step second comput subset variabl purpos let x suppos rst step k full newton step ie intermedi point k newton step appli variabl u x k xed twostep newton method describ algorithm 41 twostep newton method 1 choos 0 2 21 comput k 22 comput set k 23 set proof local converg rate twostep newton method requir modic standard proof newton method 12 theorem 521 recal proof newton method induct corollari 41 let f twice continu dierenti open set second partial deriv lipschitz continu fy k g sequenc gener algorithm 41 converg point 2 rfi posit denit fy k g converg qquadrat rate proof k sucient close perturb result 12 theorem 314 use prove nonsingular hessian matrix r 2 fy k furthermor show r 2 first point r 2 uu fy lipschitz continu r 2 uu fy posit denit thu inequ 22 perturb lemma cite togeth impli nonsingular r 2 henc method local wellden second step yield sinc r u fy lipschitz continu near use inequ 22 23 write last inequ establish qquadrat rate converg 2 applic begin consid updat slack variabl lancelot suppos problem tri solv form minim fx subject c x posit integ techniqu implement lancelot packag 9 augment lagrangian algorithm propos conn gould toint 8 applic augment lagrangian algorithm problem reformul minim fx subject c x ad slack variabl u algorithm consid follow augment lagrangian merit function estim lagrang multipli associ ith constraint posit penalti paramet ii posit scale factor associ ith constraint solv sequenc minim problem simpl bound follow subject u xed valu ii twostep trustregion framework analysi describ paper unconstrain minim problem extend entir straightforward way number algorithm minim problem simpl bound particular algorithm 7 use lancelot solv problem 25 x xed function x slack variabl u let us denot quadrat qu x dx ex depend x f constant depend ii import sinc constant xed minim process start key idea updat slack variabl everi iter k trustregion algorithm 7 use lancelot solv problem 25 trustregion algorithm comput current point k rst step k new point k comput step k updat slack variabl u f repres object function section 14 note second step k exclus compon associ slack variabl step comput u k1 optim solut subject u due simpl form quadrat solut explicit ii import remark updat requir function gradient evalu also consid code npsol snopt 15 16 updat slack variabl applic line search augment lagrangian merit function prior solut next quadrat program problem way deal slack variabl studi literatur see gould 18 refer therein studi impact slack variabl updat global converg trustregion algorithm step variabl requir decreas quadrat qu u k u k u k case alway guarante decreas object function larger ks k k 2 21 hold result shown follow proposit drop x k q x k simplifi notat proposit 51 exist posit constant c 5 whenev qu k u k qu k proof first write properti quadrat qu simpl algebra manipul lead also sinc qu convex let c posit constant c min smallest eigenvalu f consid two case 1 cku k k 2 case use 29 obtain 2 case appeal 28 get min proof complet set c cg 2 anoth exampl applic twostep algorithm aris one approach solut minimax problem consid follow f realvalu function dene ir n one way solv minimax problem reformul nonlinear program problem ad artici variabl z see 18 detail lead minim z subject z f x slack variabl also introduc lancelot use solv nonlinear program problem augment lagrangian algorithm requir solut sequenc problem simpl bound type subject u situat function x z variabl u z xed valu x constant variabl problem 32 applic twostep trustregion algorithm follow similar way hessian quadrat posit semidenit follow form last row last column correspond variabl z solut quadrat program minim qz u subject u given ii z k1 solut equat ii ii right hand side ii equat 35 solv easili om oat point oper comparison show solut quadrat program 33 rel inexpens calcul sever nonlinear optim problem subset problem variabl occur linearli exampl arriv time statictimingbas circuit optim problem 6 problem also benet twostep updat 6 numer test 61 analyt problem modi lancelot releas 9 includ slack variabl updat 27 slack minimax variabl updat 3436 updat incorpor lancelot use greedi twostep modic trustregion algorithm 7 minim problem simpl bound implement subroutin sbmin greedi twostep trustregion algorithm unconstrain minim problem algorithm 22 test follow version lancelot 1 lancelot releas default paramet congur specspc le except increas maximum number iter 4000 2 version 1 slack minimax variabl updat 27 3436 incorpor sbmin use greedi twostep trustregion algorithm 3 version 2 updat variabl z minimax problem ie z xed 3436 compar numer perform three version set problem 1 cute collect 2 set problem list tabl 1 case minimax formul tabl 2 mention number variabl includ slack applic minimax variabl z number slack variabl number equal inequ constraint exclud simpl bound variabl note minimax problem reformul nonlinear program problem introduct addit minimax variabl z shown 31 comput result present tabl 3 4 5 test conduct ibm riscsystem 6000 model 390 workstat tabl 3 compar result version 1 2 problem minimax problem tabl 4 present result version 1 2 minimax problem tabl 5 includ result version 1 3 minimax problem tabl 4 5 includ major minimax problem see section 63 numer result remain problem tabl report valu ag inform number iter total cpu time determin valu singl valu object function valu inform follow mean mean norm project gradient augment lagrangian function becom smaller 10 5 case maximum number iter 4000 reach case norm step becom small conclus base set problem version slack minimax variabl updat exhibit superior numer behavior fact version requir averag 15 fewer iter version without updat problem hs109 haifam polak6 exclud calcul mainli comparison extraordinarili favor case rst two wors last compar tabl 4 5 updat variabl z addit twostep updat slack seen yield signic benet howev minimax problem twostep algorithm perform poorli situat analyz detail section 63 although cute contain 56 problem gener constraint major equal constrain problem exclud problem took 4000 iter version 1 2 includ rest except problem easi make total 56 problem minimax problem 26 nonminimax problem problem name variabl slack constraint core1 core2 157 26 134 corkscrw hadamard 769 512 648 hs85 26 21 21 tabl 1 nonminimax problem cute collect use 62 circuit optim problem built extens experi circuit optim problem due expens function evalu modest numer nois level practic stop criteria implement design termin mani asymptot iter taken algorithm describ paper use dynamicsimulationbas circuit optim tool call jiytun see 4 5 10 jiytun optim transistor wire size digit integr circuit meet delay power area goal base fast circuit simul timedomain sensit comput spec see 13 28 optim multipl path delay highperform circuit tune often formul minimax problem minim problem nonlinear inequ constraint remark mani analyt problem especi minimax problem rather small involv inexpens function evalu moreov clear twostep updat unlik help asymptot situat consequ also report numer result circuit optim problem indic problem expens function evalu termin inher nois practic consider encourag signic asymptot behavior numer result present tabl 6 version 1 second step consist slack minimax variabl updat 27 3436 howev gradient constraint toler use 10 respect problem name variabl slack constraint coshfun 81 20 20 goffin 101 50 50 haifal 9301 8958 8958 haldmad 48 42 42 minmaxbd tabl 2 minimax problem cute collect use safeguard relat expect level numer nois clearli observ tabl 6 twostep algorithm lead better nal object function valu practic applic simpl function evalu take ten minut cpu time eectiv simpl addit inde signic situat greedi twostep trustregion algorithm abl take advantag decreas given slack variabl updat algorithm accept step otherwis would reject see remark 31 also appli algorithm paper analyt statictimingbas circuit optim problem see tabl 7 clear advantag twostep approach increasingli appar larger problem problem name inform iter total cpu obj function core1 00 953983 74117 911 core2 00 10481086 256257 729 corkscrw 00 4142 055054 116 hadamard 00 1709548 2290276 1141 tfi3 00 2334 038038 43 tabl 3 comparison version 1 2 nonminimax problem lancelot outwith twostep updat 63 experi minimax problem section consid minimax problem test set twostep algorithm improv numer result obtain onestep case also make consider wors see rst part tabl 8 analyz reason failur twostep updat minimax problem discuss way enforc better numer behavior consid gener minimax problem 30 aim show type problem second step tendenc make hessian illcondit let us assum happen default rst lancelot major iter circumst use notat g x z follow express element twostep algorithm nonlinear optim 20 problem name inform iter total cpu obj function congigmz 00 3219 004005 28 coshfun 00 12769 131106 0773 goffin 00 144 103067 0 tabl 4 comparison version 1 2 minimax problem lancelot withoutwith twostep updat gradient r z r similarli element hessian matrix given magnitud product r 2 small compar product r x hessian given problem name inform iter total cpu obj function congigmz 00 3225 00401 28 coshfun 00 12792 131108 0773 goffin 00 148 103066 0 tabl 5 comparison version 1 3 minimax problem lancelot withoutwith twostep updat slack approxim i1 i1 i1 indic sum go 1 matrix clearli singular fact n 1st row neg sum last row moreov rst n row linear combin last row result observ hessian project hessian illcondit 37 happen mani indic j k key point analysi second step tendenc produc iter worsen properti 37 produc decreas problem name variabl ineq iter total cpu obj function iomuxpow 102 42 2129 72309220 1510016000 coulman cold 33 17 2222 695683 271262 clkgen 22 5 255 35108 198182 coulman hot 33 17 1632 462100 283253 coulman delay 33 17 2624 726735 116111 minimax bultmann latch stall1 coulman cold minmax 34 17 6180 184229 694669 coulman hot minmax 34 17 6644 197134 744751 eischer northrop xor coulman delay minmax 34 17 100100 290306 674705 tabl updat dynamicsimulationbas circuit optim problem ineq stand number inequ constraint valu g x z u indic hessian might well illcondit second step appli doubt numer result evid claim second step problem worsen situat make hessian illcondit presenc nonzero lagrang multipli formula gradient hessian g x z u substitut g x z u similar conclus could drawn second step may produc bad result minimax problem point toward set fx z hessian augment lagrangian illcondit eect uenc neg calcul rst step next iter given undesir featur hessian point close set one possibl improv twostep algorithm make sure calcul rst step accur lancelot context could achiev choos smaller toler stop criterion conjugategradi techniqu anoth possibl improv reduc illcondit hessian instanc increas valu penalti paramet seen exampl variabl inde modic improv bad numer result present second part tabl 8 compar result obtain follow modic version 1 2 4 version 1 initi valu penalti paramet 100 default valu 01 5 version 2 initi valu penalti paramet 100 toler 10 12 problem name variabl ineq iter total cpu obj function symmetr 9 tabl 7 lancelot withoutwith twostep updat analyt minimax statictimingbas circuit optim problem ineq stand number inequ constraint stop criterion conjug gradient studi strategi make twostep updat eectiv minimax problem gener subject futur research 7 conclud remark paper present analyz framework classic algorithm nonlinear optim modi allow second comput ecient step gener convent way guarante yield decreas object function gave exampl twostep algorithm updat slack variabl lancelot updat variabl introduc solv minimax problem howev emphas twostep algorithm gener appli exampl whenev function dene problem known function form variabl consid trustregion algorithm propos greedi conserv twostep algorithm analyz converg properti trustregion twostep algorithm see 11 linesearch twostep algorithm deriv condit attain global converg also show twostep newton method second step comput subset variabl qquadrat rate converg greedi twostep algorithm design exploit much possibl decreas attain second step trustregion framework allow us design greedi twostep trustregion algorithm particularli well tailor achiev purpos final includ numer evid techniqu eectiv particularli problem expens function evalu twostep algorithm alreadi found practic applic optim highperform custom microprocessor integr circuit problem name inform iter total cpu obj function minmaxbd 00 267952 134359 116 polak3 00 71125 0408 593 minmaxbd 00 4743 025022 116 tabl 8 rst part comparison version 1 2 minimax problem lancelot withoutwith twostep updat second part comparison version 4 5 minimax problem lancelot withoutwith twostep updat acknowledg grate n gould rutherford appleton laboratori comment suggest earlier version paper led mani improv also grate k scheinberg ibm j watson research center help numer result explan section 63 would like thank elfadel ibm j watson research center provid analyt statictimingbas optim circuit problem final grate refere use comment suggest r comput scienc appli mathemat cute constrain unconstrain test environ approxim solut trustregion problem minim twodimension subspac optim custom mo circuit transistor size global converg class trustregion algorithm optim problem simpl bound circuit optim via adjoint lagrangian numer method unconstrain optim nonlinear equat sensit comput piecewis approxim circuit simul practic method optim snopt sqp algorithm largescal constrain optim user guid npsol 50 fortran packag nonlinear program solv three class nonlinear program problem via simpl di linear nonlinear program new algorithm unconstrain optim minim largescal quadrat function subject spheric con straint conjug gradient method trust region larg scale optim sequenti estim techniqu quasinewton algorithm piecewis approxim circuit simul tr ctr tong zhang dual formul regular linear system convex risk machin learn v46 n13 p91129 2002 andrea wchter chandu visweswariah andrew r conn largescal nonlinear optim circuit tune futur gener comput system v21 n8 p12511262 octob 2005 xiaoliang bai chandu visweswariah philip n strenski uncertaintyawar circuit optim proceed 39th confer design autom june 1014 2002 new orlean louisiana usa nichola gould dominiqu orban philipp l toint cuter sifdec constrain unconstrain test environ revisit acm transact mathemat softwar tom v29 n4 p373394 decemb r conn elfadel w w molzen jr p r obrien p n strenski c visweswariah c b whan gradientbas optim custom circuit use statictim formul proceed 36th acmiee confer design autom p452459 june 2125 1999 new orlean louisiana unit state andrew r conn ruud hare chandu visweswariah nois consider circuit optim proceed 1998 ieeeacm intern confer computeraid design p220227 novemb 0812 1998 san jose california unit state andrew r conn chandu visweswariah overview continu optim advanc applic circuit tune proceed 2001 intern symposium physic design p7481 april 0104 2001 sonoma california unit state