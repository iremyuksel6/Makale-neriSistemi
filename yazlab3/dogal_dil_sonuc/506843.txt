mutual exclus algorithm ad hoc mobil network faulttoler distribut mutual exclus algorithm adjust node mobil present along proof correct simul result algorithm requir node commun current neighbor make wellsuit ad hoc environ experiment result indic adapt mobil improv perform similar nonadapt algorithm node mobil b introduct mobil ad hoc network network wherein pair node commun send messag either direct wireless link sequenc wireless link includ one intermedi node direct commun possibl pair node lie within one anoth transmiss radiu wireless link failur occur previous commun node move longer within transmiss rang like wise wireless link format occur node far separ extend version paper present dial mobil workshop dalla tx oct 30 1998 support ge faculti futur dept educ gaann fellowship support part nsf pyi grant ccr9396098 nsf grant ccr9972235 support part texa advanc technolog program grant 010115248 nsf grant cda9529442 ccr9972235 commun move within transmiss rang characterist distinguish ad hoc network exist distribut network includ frequent unpredict topolog chang highli variabl messag delay characterist make ad hoc network challeng environ implement distribut algorithm past work modifi exist distribut algorithm ad hoc network includ numer rout protocol eg 8911131618192224 wireless channel alloc algorithm eg 14 protocol broadcast multicast eg 8122126 dynam network xed wire network share characterist ad hoc network sinc failur repair node link unpredict case research dynam network focus total order 17 endtoend commun rout eg 12 exist distribut algorithm run correctli top ad hoc rout protocol sinc protocol design hide dynam natur network topolog higher layer protocol stack see figur 1a rout algorithm ad hoc network provid abil send messag node node howev content ecienc gain develop core set distribut algorithm primit awar underli mobil network shown figur 1b paper present mobil awar distribut mutual exclus algorithm illustr layer approach figur 1b user applic distribut primit rout protocol distribut primit rout protocol ad hoc network user applic ad hoc network b figur 1 two possibl approach implement distribut primit mutual exclus problem involv group process intermitt requir access resourc piec code call critic section cs one process may cs given time provid share access resourc mutual exclus fundament problem comput scienc worth consid ad hoc environ strippeddown mobil node may need share resourc distribut mutual exclus algorithm reli mainten logic structur provid order ecienc eg 2025 may ineci run mobil environ topolog potenti chang everi node movement badrinath et al3 solv problem cellular mobil network bulk comput run wire portion network present mutual exclus algorithm induc logic direct acycl graph dag network dynam modifi logic structur adapt chang physic topolog ad hoc environ present simul result compar perform algorithm static distribut mutual exclus algorithm run top ad hoc rout protocol simul result indic algorithm better averag wait time per cs entri messag complex per cs entri greater cost incur static mutual exclus algorithm run top ad hoc rout algorithm next section discuss relat work section 3 describ system assumpt dene problem detail section 4 present mutual exclus algorithm present proof correct discuss simul result section 5 6 respect section 7 present conclus 2 relat work token base mutual exclus algorithm provid access cs mainten singl token simultan present one node system request cs entri typic direct whichev node current token holder raymond 25 introduc token base mutual exclus algorithm request sent static span tree network toward token algorithm resili nonadjac node crash recoveri resili link failur chang et al7 extend raymond algorithm impos logic direct sucient number link induc token orient dag everi node exist direct path origin termin token holder allow request messag sent link dag provid resili link site failur howev algorithm consid link recoveri essenti featur system mobil node dhamdher kulkarni 10 show algorithm 7 suer deadlock solv problem assign dynam chang sequenc number node form total order node system token holder alway highest sequenc number dene link point node lower higher sequenc number token orient dag maintain due link failur node want send request token may nd outgo link token holder situat ood network messag build temporari span tree token holder becom part span tree token pass directli node along tree bypass request sinc prioriti given node lose path token holder seem like request node could starv long link failur continu also ood respons link failur store messag deliveri link recoveri make algorithm illsuit highli dynam ad hoc environ token base algorithm combin idea sever paper partial revers techniqu 13 use maintain destin orient dag packet radio network destin static use algorithm maintain token orient dag dynam destin like algorithm 25 7 10 node algorithm maintain request queue contain identi neighbor node receiv request token like 10 algorithm total order node lowest node alway current token holder make sink toward request sent algorithm also includ new featur node dynam choos lowest neighbor prefer link token holder node sens link chang immedi neighbor rerout request base statu previou prefer link token holder current content local request queue request reach token holder treat symmetri calli request continu servic dag reorient block request rerout 3 denit system contain set n independ mobil node commun messag pass wireless network mobil node run applic process mutual exclus process commun ensur node cycl remaind section interest cs wait section wait access cs critic section assumpt 1 mobil node network 1 node uniqu node identi 2 node failur occur 3 commun link bidirect fifo 4 linklevel protocol ensur node awar set node current directli commun provid indic link format failur 5 incipi link failur detect provid reliabl commun perhop basi 6 partit network occur rest section contain formal denit explicitli model mutual exclus process node constraint behavior applic process network appear condit execut system architectur shown figur 2 assum node identi 0 1 node mutual exclus process model state machin usual set state initi state transit function state contain local variabl hold node identi local variabl hold current neighbor node transit function describ detail shortli applic process mutual exclus process network node requestc enterc figur 2 system architectur section 7 discuss relax assumpt 6 congur describ instantan state whole system malli set n state one process initi congur state initi state neighbor variabl describ connect undirect graph step process node trigger occurr input event input event applic process node request access cs enter wait section applic process node releas access cs enter remaind section recv j node receiv messag node j receiv notic link l incid linkdown l node receiv notic link l incid eect step appli process transit function take input current state process input event produc output possibl empti set output event new state process output event mutual exclus process node inform applic process enter critic section send j node send messag node j constraint state produc transit function neighbor set variabl must properli updat respons linkup linkdown event call applic event call network event execut sequenc form c c k congur k input event k set output event execut must end congur nite posit real number associ repres time event occur execut must satisfi number addit condit list rst set condit basic syntact one c 0 initi congur k occur node k state c k correct accord transit function oper k state c k 1 time assign step must nondecreas execut innit time must increas without bound one step process occur given time next set condit requir applic process interact properli mutual exclus process k requestc previou applic event node k releasec previou applic event node must remain condit constrain behavior network match inform descript given first consid mobil notic occur time linkup j l occur time l join j furthermor linkup l occur j current neighbor accord neighbor variabl analog condit hold linkdown linkdown never disconnect graph final consid messag deliveri must exist onetoon onto correspond occurr send j recv j j requir impli everi messag sent receiv network duplic corrupt messag deliv spuriou messag furthermor correspond must satisfi follow send j occur time correspond recv j occur later time 0 link connect j continu 0 impli linkdown event link l occur messag transit l state problem formal everi execut follow must hold k enterc previou applic event node must requestc ie cs access given request node mutual exclus k enterc previou enterc j event must follow releasec j prior k nite number linkup linkdown event k requestc follow enterc last condit hypothesi link chang ceas need adversari pattern link chang caus starvat 4 revers link rl mutual exclus algorithm section rst present data structur maintain node system follow overview algorithm algorithm pseudocod exampl algorithm oper throughout section data structur describ node 0 n 1 subscript data structur indic node includ need 41 data structur statu indic whether node wait critic remaind section initi statu remaind set node direct wireless contact node initi n contain node neighbor myheight threetupl h1h2i repres height node link consid direct node higher height toward node lower height base lexicograph order eg myheight myheight link node would direct node 1 node 2 initi node 0 initi direct link form dag everi node direct path node 0 heightj array tupl repres node view myheight j initi node viewpoint link j incom node heightj myheight outgo node heightj myheight tokenhold flag set true node hold token set fals otherwis initi next node hold token next otherwis next node outgo link initi next next outgo neighbor otherwis q queue contain identi request neighbor oper q includ enqueu enqueu item alreadi q de queue usual fifo semant delet remov speci item q regardless locat initi receivedlij boolean array indic whether linkinfo messag receiv node j token messag recent sent height inform receiv node node j receivedlij fals record heightj initi receivedli formingj boolean array set true link node j detect form reset fals rst linkinfo messag arriv node j initi form formheightj array tupl store valu myheight new link rst detect initi formheight 42 overview rl algorithm mutual exclus algorithm eventdriven event node consist receiv messag anoth node j 6 indic link failur format link layer input applic node request releas cs messag sent includ current valu height sender modul assum execut atom first describ pseudocod trigger event describ pseudocod procedur request releas cs node request access cs enqueu identi q set statu wait node current hold token singl element queue call forwardrequest send request messag node hold token set statu critic enter cs sinc head q node releas cs call givetokentonext send token messag q nonempti set statu remaind request messag request messag sent neighbor node j receiv node ignor request receivedlij fals otherwis chang heightj enqueu j q link j incom q nonempti statu remaind call givetokentonext hold token nontoken hold node call raiseheight link j incom outgo link call forwardrequest nonempti link next revers token messag node receiv token messag neighbor j lower height lower last token holder node j inform outgo neighbor new height send linkinfo messag call givetokentonext node also inform j new height j know receiv token messag receivedlij true linkinfo messag receiv node node j js height save heightj receivedlij fals check height j messag sent token messag j set receivedlij true formingj true current valu myheight compar valu myheight link j rst detect formheightj myheight formheightj dierent linkinfo messag sent j identi j ad n formingj set fals j element q j outgo link j delet q node outgo link token holder call raiseheight outgo link form otherwis q nonempti link next revers call forwardrequest sinc must send anoth request token link failur node sens failur link neighbor node j remov j n set receivedlij true j element q delet j q token holder outgo link call raiseheight node token holder q nonempti link next fail call forwardrequest sinc must send anoth request token link format node detect new link node j send linkinfo messag j myheight set formingj true set myheight procedur forwardrequest select node lowest height neighbor next send request messag next procedur givetokentonext node dequeu rst node q set next equal valu next enter cs next 6 lower heightnext myheighth1 myheighth2 1 next incom request messag sent next set tokenhold fals set receivedlinext fals send token messag next q nonempti send token messag next request messag sent next immedi follow token messag token eventu return procedur raiseheight call nontoken hold node lose last outgo link node rais height line 13 use partial revers method 13 inform neighbor height chang linkinfo messag node q link outgo delet q q empti point forwardrequest call sinc must send anoth request token 43 rl algorithm node request access cs 1 statu wait 2 enqueueq 3 tokenhold 4 5 els givetokentonext node releas cs 1 jqj 0 givetokentonext 2 statu remaind requesth receiv node node j h denot js height messag sent 1 receivedlij 2 heightj h set view js height 3 myheight heightj enqueueq 4 tokenhold 5 statu remaind jqj 0 givetokentonext 6 els tokenhold 7 myheight heightk 8 k 2 n raiseheight 8 els 9 forwardrequest rerout request tokenh receiv node node j h denot js height messag sent 1 tokenhold true 2 heightj h 3 send linkinfohh1 hh2 1 outgo k 2 n j 4 myheighth1 hh1 5 myheighth2 hh2 1 lower height 6 jqj 0 givetokentonext els next linkinfoh receiv node node j h denot js height messag sent 1 n n fjg 2 formingj myheight 6 formheightj 3 send linkinfomyheight j 4 formingj fals 5 receivedlij heightj h 6 els 7 myheight heightj deleteq 8 myheight heightk 8k 2 n tokenhold raiseheight rerout request 9 els jqj 0 myheight heightnext forwardrequest failur link j detect node 1 n n fjg 2 deleteq 3 receivedlij true 4 tokenhold 5 myheight heightk 8k 2 n raiseheight rerout request 6 els jqj 0 next 62 n forwardrequest format link j detect node 1 send linkinfomyheight j 2 formingj true 3 formheightj myheight procedur 1 next l 2 send requestmyheight next procedur givetokentonext call jqj 0 1 next dequeueq 2 next 6 3 tokenhold fals 4 heightnext myheighth1 myheighth2 1 next 5 receivedlinext fals 6 send tokenmyheight next 7 jqj 0 send requestmyheight next 8 els next 9 statu critic 10 enter cs procedur 1 2 3 6 myheighth2 min l2 fheightlh2g 1 4 send linkinfomyheight k 2 n rais height caus link becom outgo 5 k 2 n myheight heightk deleteq must rerout request queue nonempti sinc outgo link 6 jqj 0 forwardrequest 44 exampl algorithm oper rst discuss case static network follow dynam network illustr algorithm static network link fail form depict figur 3 snapshot system congur algorithm execut shown time increas 3a 3e direct wireless link shown dash line connect circular node arrow wireless link point higher height node lower height node request queue node depict rectangl height shown 3tupl token holder shade circl next pointer shown solid arrow note node hold token next pointer direct toward figur node 2 3 request access cs note node 2 3 enqueu q 2 q 3 sent request messag node 0 enqueu q 0 order request messag receiv part b depict system later time node 1 request access cs sent request messag node 3 note 1 enqueu q 1 q 3 figur 3c show system congur node 0 releas cs sent token messag node 3 follow request sent node 0 behalf node 2 observ logic direct b c figur 3 oper revers link mutual exclus algorithm static network link node 0 node 3 chang direct away node 3 part b direct toward node 3 part c node 3 receiv token messag lower height notic also next pointer node 0 3 chang node next pointer direct toward node 0 part b node next pointer direct toward node 3 part c part show system congur node 3 sent token messag node 1 follow request messag request messag sent node 3 receiv request messag node 0 notic item head node request queue part form path token holder node 1 sole remain request node 2 part e depict system congur token messag pass node 1 node 3 0 node 0 2 observ middl element h2 node myheight tupl decreas 1 everi hop token travel token holder alway lowest height node system consid execut rl algorithm dynam network height inform allow node keep track current logic direct link neighbor node particularli node chosen next link next chang jqj 0 node must rerout request call forwardrequest figur 4a show snapshot system execut shown figur 3a time increas 4a 4e figur 4b depict system congur node 3 move relat node b c e figur 4 oper revers link mutual exclus algorithm dynam network system result network temporarili token orient sinc node 3 outgo link node 0 adapt lost link node 3 remov 3 request queue node 2 take action result loss link node 3 sinc link next 2 aect node 2 still one outgo link part c node 3 adapt loss link node 0 rais height sent request messag node 1 yet arriv node 1 part show system congur node 1 receiv request messag node 3 enqueu 3 q 1 rais height due loss last outgo link part e node 1 propag request receiv node 3 send request node 2 also inform node 2 chang height node 2 subsequ enqueu 1 q 2 rais height send request node 2 intact link next 2 node 0 alreadi sent unfull request 5 correct revers link algorithm follow theorem hold one token system time theorem 1 algorithm ensur mutual exclus prove starvat rst show link chang ceas eventu system reach good congur appli variant function argument show link chang ceas logic direct link impart height valu eventu form token orient dag sinc height valu node total order cycl logic graph thu dag hard part show dag token orient dene next denit 1 node token holder congur tokenhold true token messag transit node next denit 2 dag token orient congur everi node exist direct path origin node termin token holder prove lemma 3 dag eventu token orient rst show lemma 1 condit equival absenc sink node 13 dene show lemma 2 eventu call raiseheight throughout assum eventu link chang ceas denit 3 node sink congur lemma 1 everi congur everi execut dag token orient sink proof onlyif direct follow denit token orient dag direct prove contradict assum contradict exist node congur tokenhold fals direct path start end token holder sinc sink must least one outgo link incom node sinc number node nite network connect link logic direct logic path form cycl must exist direct path token holder contradict show eventu sink lemma 3 show nite number call raiseheight lemma 2 everi execut nite number link chang exist nite number call raiseheight proof contradict consid execut nite number link chang innit number call raiseheight link chang ceas node call raiseheight innit often rst note one node call raiseheight innit often everi node call raiseheight innit often see consid node would call raiseheight innit often lost outgo link innit often would happen innit often node neighbor node j rais height innit often neighbor node j would call raiseheight innit often neighbor k rais height innit often howev claim 1 show least one node call raiseheight nite number time 1 node hold token last link chang ever call subsequ proof suppos claim fals node hold token last link chang call raiseheight subsequ let rst node code node hold token call raiseheight suppos node send token neighbor node j time 1 set view j outgo later time 3 node call raiseheight reason call raiseheight time 3 lost last outgo link thu time 2 time 1 3 link j revers direct view outgo incom code direct chang node must due receipt linkinfo request messag node j discuss case separ case 1 direct chang node due receipt linkinfo messag node j time 2 code send token j 1 set receivedlij fals therefor linkinfo messag receiv j time 2 node must alreadi reset receivedlij true would still see link j outgo would call raiseheight time 2 sinc call receiv linkinfo messag j time 2 must receiv linkinfo messag node j sent receiv token time 2 fifo assumpt messag deliveri node must receiv token sent anoth node k 6 j rais height sent linkinfo messag node receiv time 2 howev violat assumpt rst node call raiseheight last link chang contradict case 2 direct chang node due receipt request messag node j time 2 similar argument case 1 request receiv node j would ignor node long receivedlij fals mean node j must call raiseheight receiv token node subsequ sent request receiv time 2 violat assumpt rst node call raiseheight last link chang contradict therefor node call raiseheight time 2 claim true therefor claim 1 nite number call raiseheight execut nite number link chang lemma 3 follow lemma 2 sinc node becom sink eventu inform via linkinfo messag call raiseheight lemma 3 link chang ceas logic direct link impart height valu eventu alway form token orient dag consid node wait execut point link chang call raiseheight ceas rst dene request chain node path along request propag modifi variant function argument 25 show node eventu get enter cs denit 4 given congur request chain node l nonempti request queue maxim length list node identi queue empti link p 1 p outgo p 1 incom p request messag transit p 1 p token messag transit p p 1 lemma 4 give use inform go end request chain lemma 4 follow true everi congur let l node nonempti request queue let request chain l q l l wait c either p j token holder token messag transit p j request messag transit p j next p j linkinfo messag transit next p j p j next p j higher next p j see link p j fail proof induct execut properti easili shown hold sinc node enqueu identi applic request access cs point chang statu wait code point node dequeu identi enter cs set statu critic properti b c vacuous true initi congur sinc node nonempti queue suppos b c true 1 st congur c 1 execut possibl show properti true th congur consid turn everi possibl th event event appli c 1 easili shown yield congur c properti b c true discuss event outcom less clear present problemat case appear disrupt request chain note follow case nontoken hold node often requir nd outgo link due link revers failur hard show node token holder alway nd outgo link due perform raiseheight case 1 node receiv requesth node j enqueu j request queue ensur js request overlook caus possibl starvat show either linkinfo token messag sent j request j receiv j enqueu case 11 receivedlij fals must sent token j previou congur yet receiv linkinfo messag j must send upon receipt token token transit j held j c 1 earlier j token pass request receiv sent linkinfo messag j must send upon receipt token j wait c 1 alreadi sent newer request properti b c hold request chain c induct hypothesi case 12 receivedlij true j enqueu request queue must myheight h sinc view outgo sent request node must either call n rel height j chang time link rst detect j ad n either case node j must eventu receiv linkinfo messag see link next j revers case j take action result eventu send anoth request case 2 node receiv input caus delet identi j request queue ensur js request forgotten call deleteq j show either node j receiv token messag prior delet case js request satis node j noti link fail case j take appropri action rerout request chain case 21 node call deleteq receiv linkinfo messag j indic link j becom outgo sinc enqueu j must earlier congur saw link j incom sinc receipt linkinfo messag j caus link chang incom outgo view must linkinfo sent j j receiv token lower height token held j c 1 earlier j token pass j wait c 1 alreadi sent newer request properti b c hold request chain c induct hypothesi case 22 node call deleteq receiv indic link must receiv indic case take appropri action advanc request chain case 3 node receiv input make see link next incom fail case request chain includ node c 1 end c show node take correct action propag request chain send either new request linkinfo messag case 31 node receiv linkinfo messag neighbor indic link j becom incom link j last outgo link c call raiseheight node delet identi node outgo link request queue node send linkinfo messag neighbor includ node whose identi remov request queue request queue nonempti call forwardrequest send request messag node chosen next case 32 node receiv indic link next fail c take action case 31 link next revers therefor action taken node make properti b c fals lemma hold lemma 5 link chang call raiseheight ceas everi cong urat node ls request chain includ token holder later congur ls request chain includ token holder proof lemma 3 link chang ceas eventu token orient dag form consid congur link chang call raiseheight ceas dag token orient mean linkinfo messag gener node rais height deliv proof contradict assum node ls request chain never includ token holder token held transit node ls request chain assumpt execut linkinfo messag caus call raiseheight transit node ls request chain node ls request chain detect fail link neighbor node therefor lemma 4c request messag must transit node ls request chain node ls request chain number node ls request chain increas request messag receiv point ls request chain either includ token holder anoth request messag transit node ls request chain node ls request chain ls request chain join request chain node number node ls request chain increas number node ls request chain decreas sinc nite number node system eventu ls request chain includ node therefor token eventu contain ls request chain system contradict let l node wait link chang call rais ceas given congur execut function v l l dene follow vector posit integ let ls request chain v l either depend whether request messag transit p either case v 1 posit p 1 l q l 1 j v j posit p j 1 posit number ascend order 1 head queue request messag transit v l l element vector compar lexicograph lemma 6 v l variant function proof key point prove l never n entri everi entri 1 n rang v l wellfound 2 event easili seen increas v l discuss remain event request messag end ls request chain receiv node j node p ls request chain increas length decreas m1 p posit q j request messag receiv token messag receiv node p end ls request chain either kept p v l decreas hv sent toward l v l decreas hv sent away l follow request messag v l decreas 3 see event caus v l decreas continu occur consid follow two case case 1 token holder ls request chain lemma 5 eventu token holder ls request chain case 2 token holder ls request chain sinc node stay cs forev later time token sent receiv decreas valu v l part 2 proof v l equal h1i l enter cs theorem 2 link chang ceas everi request eventu satis 6 simul result section discuss static dynam perform revers link rl algorithm compar mutual exclus algorithm design oper static network simul raymond token base mutual exclus algorithm 25 run top rout layer alway provid shortest path rout node section refer simul raymond rout rr raymond algorithm use static algorithm rl algorithm adapt provid link failur recoveri must reli rout layer maintain logic path run dynam network order make result gener applic made bestcas assumpt underli rout protocol use raymond algorithm alway provid shortest path time messag complex zero simul show rl algorithm better rr combin scenario rl algorithm also better raymond algorithm scenario real ad hoc rout algorithm use simul show rl algorithm wors rr combin scenario might might wors actual situat depend much wors simul cost rout algorithm simul node system variou scenario chose simul system network larger node time need simul high also envis ad hoc network much smaller scale wire network like internet typic number node use simul ad hoc network rang 10 50 46151826 experi cs execut took one time unit messag delay one time unit request cs model poisson process arriv rate req thu time delay node left cs made next request enter cs exponenti random variabl mean 1 time unit link chang model poisson process arriv rate mob thu time delay chang graph exponenti random variabl mean 1 mob time unit chang graph consist delet link chosen random whose loss disconnect graph format link chosen random execut measur averag wait time cs entri averag number time unit node spent wait section also measur averag number messag sent per cs entri vari load system req degre mobil mob connect graph connect measur percentag possibl link present graph note cliqu node 435 undirect link graph result plot point repres averag six repetit simul thu plot averag time per cs entri point averag averag six execut similarli plot averag number messag per cs entri rr simul initi form random connect graph desir number link use breadthrst search form span tree graph play part static virtual span tree node commun raymond algorithm span tree form randomli permut graph maintain desir connect calcul shortest path node neighbor virtual span tree start mutual exclus algorithm began count messag wait time per cs entri link chang occur measur time messag need recalcul shortest path rout modi graph measur ad time distanc applic messag travel due rout chang charg one messag per link travers simul rl form random connect graph desir number link initi node height link direct start algorithm perform measur link chang occur time messag need nd new rout node includ overal cost perform section part gure display result graph static part b low mobil part c choic valu low mobil paramet correspond situat node remain stationari ten second move prior make anoth move choic valu high mobil paramet repres much volatil network node remain static second move 61 averag wait time per cs entri load request arriv rate load request arriv rate20601001401800001 b time unitsc entri time unitsc entri load request arriv rate time unitsc entri rr 20 connect rr 80 connect rl 80 connect rl 20 connect figur 5 load vs timec entri zero b low c high mobil figur 5 plot averag number time unit elaps host request subsequ entri cs valu req increas 10 4 mean time unit request request 1 left right along x axi chose high load valu req rate node would request pend almost time low load valu req repres much less busi network request rare pend node time plot shown run 20 87 link 80 348 link connect rl rr simul figur 5 indic rl better perform rr term averag wait time per cs entri factor six reason raymond algorithm send applic messag static virtual span tree messag sent node one neighbor virtual span tree may actual rout long distanc thu increas time delay contrast rl algorithm use accur inform actual topolog result less delay request subsequ cs entri algorithm show increas averag wait time per cs entri low high load figur 5 higher load larger number node preced given node cs averag wait time cs entri reach peak rl simul around 75 time unit per cs entri highest load caus essenti round robin pattern token travers howev averag wait time rl simul figur 5c highest load actual decreas high mobil phenomenon may due fact high load frequent link failur break fair pattern token receiv caus node get token frequent figur 5 also show wait time advantag rl rr increas increas load increas mobil increas wait time rr increas load network connect low due longer averag rout length simul trial averag rout length roughli doubl connect decreas 80 20 perform gap wait time rl rr seen lesser degre high connect averag rout length rr lower howev appar rr simul suer combin eect higher content impos static span tree commun path high load rl mainli aect content cs high load final figur 5 suggest connect rang test immateri behavior rl algorithm high load wherea larger connect better rr smaller connect load order studi eect connect ran experi shown figur 6 averag number time unit elaps host request subsequ entri cs plot network connect increas 10 43 link 100 435 link along x axi curv plot low load mean time unit request load mean time unit request rl rr simul rl low load rr high load rr low load101000 x101000 connect connect b time unitsc entri time unitsc entri time unitsc entri connect figur 6 connect vs timec entri zero b low c high mobil figur 6 conrm connect aect wait time per cs entri rl simul high load high load rl algorithm exploit connect load high rl simul alway send request messag path last travel token even shorter path token request made low load rl connect aect wait time per cs entri request messag alway sent path last travel token lower load sucient time request token movement chang link direct vicin token holder eect increas higher connect shorten request path wait time rr algorithm decreas increas connec tiviti sinc path length neighbor virtual span tree approach one howev even cliqu shortest path length one time rr match rl reason span tree use rr commun might rel larg diamet wherea rl neighbor node alway direct commun result simul section summar tabl 1 zero mobil low mobil high mobil connect 20 80 20 80 20 80 rr high load 185 107 185 140 294 290 rl high load rr low load 17 8 rl low load 7 4 tabl 1 summari time per cs entri 62 averag number messag per cs entri rr algorithm send request token messag along virtual span tree messag node virtual neighbor convert sequenc actual messag travers current shortest path sender recipi rl algorithm send request token messag along actual token orient dag addit token travers path node path send linkinfo messag outgo neighbor addit linkinfo messag sent propag link failur caus node lose last outgo link experiment result ect rel number rout messag rr vs linkinfo messag rl interpret result import rememb simul rr algorithm charg messag need recalcul rout due topolog chang thu rl better rr situat certainli better rout messag charg even prorat also rr better rl anoth load request arriv rate a10152535100010load request arriv ratex entri entri entri load request arriv rate rr 20 connect rr 80 connect rl 80 connect rl 20 connect figur 7 load vs messagesc entri zero b low c high mobil situat depend much better rl might compar even better rr rout messag charg rr figur 7 plot averag number messag receiv per cs execut valu req rang 10 4 mean time unit request mean time unit request 1 left right along x axi plot shown run 20 87 link 80 348 link connect rl rr simul figur 7b c show rr algorithm send fewer messag per cs entri rl algorithm simul trial mobil although load increas messag advantag rr decreas markedli situat studi except rl simul static case high connect number messag per cs entri tend decreas load increas reason although overal number messag increas load algorithm due addit token request messag increas less linearli number request henc less linearli number cs entri extrem high load everi time token move like caus cs entri static case high connect rl algorithm experi threshold eect around load 01 load less 01 number messag per cs entri roughli constant lower valu load 01 number messag per cs entri roughli constant higher valu threshold eect becom less pronounc connect decreas conjectur qualit behavior algorithm 30 node graph chang load increas 001 01 chang may attribut observ token movement eectiv shorten request path length high connect low load low load sucient time request node receiv linkinfo messag sent token move caus node send request direct link token holder rather last link sent token eect ampli high connect node like directli connect token holder rl algorithm send messag per cs entri rr algorithm mobil caus link chang number messag sent rl algorithm grow larg low load observ figur 7b c link fail form rl algorithm send mani linkinfo messag maintain token orient dag result higher messag cs entri ratio low load degre mobil remain constant howev interpret result import note rl algorithm charg cost rout simul mobil rr simul charg rout figur 8 show result experi design understand eect connect number messag per cs entri gure averag number messag per cs entri plot network connect increas 10 43 link 100 435 link left right x axi curv plot low load request load request 1 rl rr simul static case number rl messag per cs entri increas linearli connect xed load connect increas number neighbor per node increas result linkinfo messag sent rr low load rr high load rl low load connect connect b entri entri entri connect c figur 8 connect vs messagesc entri zero b low c high mobil token travel howev number rr messag per cs entri decreas less linearli connect sinc shortest path length neighbor virtual span tree decreas fact result rr 100 connect virtual span tree actual span tree high load match perform approxim 4 messag per cs entri cite raymond 25 high load part figur 8 show static case rl algorithm use fewer messag per cs entri 25 connect high load 60 connect low load figur 8b c show dynam case number messag per cs entri littl aect connect xed load rl algorithm two oppos trend increas connect appear cancel higher connect mean neighbor per node mean linkinfo messag sent failur hand neighbor per node mean less like link failur last outgo link thu linkinfo messag due failur propag less rr case logarithm scale axi figur 8c hide slight decreas messag per cs entri make curv appear result simul section summar tabl 2 zero mobil low mobil high mobil connect 20 80 20 80 20 80 rr high load 13 6 11 7 rr low load rl low load 13 17 189 180 1900 1825 tabl 2 summari messag per cs entri 7 conclus discuss present distribut mutual exclus algorithm design awar adapt node mobil along proof correct simul result compar perform algorithm static token base mutual exclus algorithm run top ideal ad hoc rout protocol assum partit network throughout paper simplic partit handl algorithm use method similar use tora ad hoc rout protocol 22 22 addit label use repres height node allow node detect recognit origin chain height increas seri height chang occur reachabl node without encount destin similar partit detect mechan could encorpor mutual exclus algorithm expens slightli larger messag algorithm compar favor layer approach use ad hoc rout protocol provid better averag wait time per cs entri test scenario simul result indic mani situat messag complex per cs entri algorithm would greater messag cost incur static mutual exclus algorithm run top ad hoc rout algorithm messag mutual exclus algorithm rout algorithm count acknowledg thank savita kini mani discuss previou version algo rithm soma chaudhuri care read help comment live proof debra elkin help discuss r slide mechan applic dynam network polynomi end end commun structur distribut algorithm mobil host distanc rout e perform comparison multihop wireless ad hoc network rout protocol queri local techniqu ondemand rout protocol ad hoc network fault toler algorithm distribut mutual exclus rout multicast multihop distribut rout algorithm mobil wireless network token base kresili mutual exclus algorithm distribut system signal stabil base adapt rout ssa adhoc mobil network schedul broadcast multihop radio network distribut algorithm gener loopfre rout network frequent chang topolog dynam sourc rout ad hoc wireless network clusterbas approach rout dynam network reliabl broadcast mobil multihop packet network highli adapt distribut rout algorithm mobil wireless network highli dynam destinationsequenc distancevector rout mobil comput multicast oper adhoc ondemand distanc vector rout protocol tr treebas algorithm distribut mutual exclus slide mechan applic dynam network token base italickitalicresili mutual exclus algorithm distribut system highli dynam destinationsequenc distancevector rout dsdv mobil comput distribut rout algorithm mobil wireless network effici messag order dynam network reliabl broadcast mobil multihop packet network clusterbas approach rout dynam network multiclust mobil multimedia radio network locationaid rout lar mobil ad hoc network distanc rout effect algorithm mobil dream perform comparison multihop wireless ad hoc network rout protocol queri local techniqu ondemand rout protocol ad hoc network scenariobas perform analysi rout protocol mobil adhoc network multicast oper adhoc ondemand distanc vector rout protocol adhoc ondemand distanc vector rout highli adapt distribut rout algorithm mobil wireless network ctr chen jennif l welch selfstabil mutual exclus use token mobil ad hoc network proceed 6th intern workshop discret algorithm method mobil comput commun septemb 2828 2002 atlanta georgia usa chen jennif l welch selfstabil dynam mutual exclus mobil ad hoc network journal parallel distribut comput v65 n9 p10721089 septemb 2005 djibo karim jean frdric myoupo applic initi protocol permut rout singlehop mobil ad hoc network journal supercomput v31 n3 p215226 march 2005 emmanuel anceaum ajoy k datta maria gradinariu gwendal simon publishsubscrib scheme mobil network proceed second acm intern workshop principl mobil comput octob 3031 2002 toulous franc gruiacatalin roman jami payton termin detect protocol use mobil ad hoc network autom softwar engin v12 n1 p8199 januari 2005 benchaba bouabdallah n badach ahmednac distribut mutual exclus algorithm mobil ad hoc network overview acm sigop oper system review v38 n1 p7489 januari 2004