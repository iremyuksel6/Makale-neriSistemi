associ type class haskel type class allow adhoc overload typeindex function natur generalis allow typeindex data type well turn idea directli support power form abstract call associ type avail c use trait class associ type use mani applic especi selfoptimis librari adapt data represent algorithm typedirect mannerin paper introduc motiv associ type rather natur generalis haskel exist type class formal present type system includ typedirect translat explicitli type target languag akin system f exist translat ensur addit associ data type exist haskel compil requir chang front end b introduct recent oopsla paper garcia et al compar support gener program oer haskel ml c c java use graphmanipul librari motiv exampl 11 oer tabl qualit conclus haskel rate favour respect except one access socal associ type exampl may want repres array manner depend element type given element type e associ type array e array element first two author partli fund australian research council grant number dp0211203 permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee popl05 januari 1214 2005 long beach california usa extend syntax haskel data declar might defin array follow data array data array data array pairarray array array b repres array integ unbox array array boolean bit vector array pair pair array assum uintarr bitvector builtin type repres unbox integ array bit vector respect specialis represent ecient term space runtim typic oper typeinvari parametr represent data type whose concret represent depend one type paramet call type analys 15 type index 18 paper shall demonstr typeindex type understood classloc data type declara tion fact natur extens haskel type class overload system exampl array type would express local data type type class array element arrayelem class arrayelem e data array e index array e int e keyword data class introduc associ data type definitionth type array associ class arrayelem defin instanc arrayelem class give instanti array type assum indexuintarr predefin function index unbox integ array instanc arrayelem int data array index intarray ar instanc arrayelem arrayelem b arrayelem b data array pairarray array array b index pairarray ar br togeth associ data type array includ method index index array full type index index arrayelem e array e int e signatur make function depend class arrayelem well associ type array ex plicit word vari instanti element type e concret array represent index oper vari depend equat defin array variat substanti standard haskel type class represent type array may chang nonparametr way dierent instanti element type e word typeindex type permit ad hoc overload type way standard type class provid ad hoc overload valu summaris make follow contribut introduc associ data type declar mechan implement typeindex type demonstr use number motiv exampl notabl selfoptimis librari sec tion 2 3 show associ data type natur extens haskel overload system give type rule new type system evid translat sourc term target languag akin system f section 33 4 novel aspect system confin system f translat enabl straightforward integr exist haskel compil glasgow haskel compil great deal relat work subject typeindex type review section 6 approach particularli close relationship function depend 22 review section 5 2 motiv previou array exampl repres whole class applic associ type name selfoptimi ing librari librari depend use optimis implementationi data represent choic algorithmsalong line determin librari author optimis process guid type instanti arrayelem class element type determin suitabl array represent shall discuss anoth instanc represent optimis consid gener finit map section 21 section 22 turn sophist exampl gener graph librari data represent algorithm vari depend type paramet key featur selfoptimis librari mere reli gener compil optimis instead librari code contain precis instruct librari code specialis particular applic sinc introduct templat style librari highli success c exampl standard templat librari 35 boost graph librari 33 matrix templat librari 34 work gener program haskel also illustr need typedepend data represent 18 17 2 addit implement selfoptimis librari associ type also use abstract interfac applic function depend shall discuss abstract interfac subsect 23 21 selfoptimis finit map nice exampl data structur whose represent chang depend type paramet first discuss hinz 16 subsequ use exampl typeindex type hinz jeur loh 18 context gener haskel generalis tri gener finit map map chang represent depend structur key type k use index map express idea defin type class mapkey parameteris key type associ type map one compon class mapkey k data map k v empti map k v lookup give two class oper empti lookup realiti would mani addit key type finit map parametris valu type form codomain map represent gener finit map depend type k key parametr valu type v express dierent statu key type k valu type v make k class param although associ represent type map k v depend type assum suitabl librari implement finit map integ tree patricia tree 31 may provid instanc mapkey integ key follow instanc mapkey int data map int lookup k mi patricialookupdict k instanc dierent treatment key valu type obviou fix key type instanc still leav valu type open word regard map k typeindex type constructor kind describ detail hinz 16 defin gener finit map arbitrari algebra data type simpli give instanc mapkey unit product sum type followsfor detail motiv defi nition pleas see hinz work instanc mapkey data map noth lookup unit mu lookup unit mu instanc mapkey mapkey b mapkey b data map b lookup b mp instanc mapkey mapkey b mapkey either b data map either b noth noth lookup left fm1 lookup fm1 lookup right b fm1 use class mapkey specif algebra data type need map productsum represent mean embeddingproject pair 19 18 2 22 gener graph concept trait introduc c aim reduc number paramet templat 27 sinc gener program base templat trait found use selfopti mise librari 33 choic data represent well algorithm guid way type instanti led investig support style gener program rang dierent languag garcia et al 11 evalu garcia et al base compar implement graph librari conclud haskel excel support gener program except satisfactori support associ type extens propos paper tackl shortcom headon inspir garcia et al also use class graph exampl class graph g data edg g data vertex g outedg vertex g g edg g contrast arrayelem mapkey exampl contain type depend element type vertex edg type depend contain type allow us defin sever distinct instanc graph edg vertex type dier represent algorithm work data structur two possibl instanc model vertex integ edg pair sourc target vertex still repres dierent adjac matrix newtyp instanc graph g1 data vertex data edg map vertex neighbour newtyp instanc graph g2 data vertex data edg apart ad flexibl associ type lead two distinct advantag first trait reduc number paramet class second contrast class paramet refer associ type name posit argument list improv readabl reduc potenti confus order argument 23 interfac abstract previou exampl use associ type selfop timis librari specialis data represent algorithm typedirect manner entir dierent applic defin abstract interfac unlik abstract base class c interfac java signatur standard ml wellknown exampl interfac motiv haskel hierarch standard librari monad base state transform support mutabl refer enc base interfac parametris famili type follow class monad refm data instanc refm io data ref io instanc refm st data note type paramet associ type ref well represent type ref higher kindthat kind complet signatur newref newref subtleti code definit ref io v introduc new type haskel type equal compat ioref v howev sometim might like use exist type associ type instead introduc new type requir associ type syn onym plan discuss futur paper 3 associ section describ propos languag extens enough detail user languag technic detail type system defer section 4 propos type class may defin addit set method set associ data type class declar data type declar without definit definit given instanc dec larat associ data type must parameteris type variabl class type variabl must come first order class type variabl rational restrict given section 44 associ data type introduc new type construc tor kind type constructor infer obviou way also allow explicit kind signatur type paramet class c data b instanc declar must give singl definit associ data type class definit must repeat class paramet instanc addit paramet data type must left type variabl follow legal instanc c class instanc c c data instanc declar associ data type introduc new data constructor toplevel scope exampl data constructor introduc follow type instanc associ data type may use newtyp declar instead data declar singl constructor singl field enabl compil repres datatyp without interven constructor runtim 31 type involv associ data type type constructor introduc associ data type declar thought typeindex type represent depend instanti pa ramet use haskel exist overload machineri resolv type close analog method class associ data type method introduc overload typeindex variabl associ data type declar introduc typeindex type express refer overload identifi requir instanc avail context suppli true type go back array exampl introduct consid f array bool bool system declar valid type signatur instanc arrayelem bool similarli f array e e invalid represent array e unknown make type valid suppli context f arrayelem e array e e valid check programmersuppli type annot conveni perform part kindcheck annot one restrict use associ type constructor wherev type constructor appear must appli least mani type argument class paramet surpris state dierent way typeindex type must alway appli index paramet 32 associ type data declar consist system must support use associ type everywher includ within definit anoth data type howev interest cons quenc consid array exampl suppos wish defin new data type data discuss type array e valid type e must add context declar data arrayelem e haskel support context data declar whose eect add context type data constructor make satisfi valid principl type constructor ordinari type construc tor behav similar way associ type whenev e appear type must appropri context instanc order deduc arrayelem e furthermor must alway appli typeindex argument toplevel function call overload function becom overload data type mention typeindex type becom type index call typeindex data type associ toplevel type 33 translat exampl import featur system explain translat explicitli type target languag akin system f give idea walk translat mapkey exampl section 2 recal class declar mapkey class class mapkey k data map k v empti map k v lookup translat new data type cmapkey type dictionari mapkey class data cmapkey k mk empti foral v mk v lookup foral v k mk v mayb v cmapkey type type paramet class type variabl usual case singl type variabl k howev also extra type paramet mk repres associ type map k instanc class give dierent instanti type map k dictionari must abstract type note mk kind type variabl v still unconstrain one class type variabl deed class method empti lookup explicitli parametr polymorph type variabl first instanc instanc integ key instanc mapkey int data map int lookup k mi patricialookupdict k translat new datatyp associ type dictionari valu data mapint dmapint cmapkey int mapint lookup k mi patricialookupdict k next consid instanc pair instanc mapkey mapkey b mapkey b data map b lookup b mp lookup b lookup translat new datatyp dictionari function data mappair mb dmappair foral b cmapkey cmapkey b mappair mb dmappair da lookup b mp lookup db b lookup da new datatyp mappair take two addit type ar gument mb repres type map respect instanc context translat dictionari function take dictionari mapkey mapkey b argument deliv dictionari valu translat either instanc doesnt illustr anyth new omit instead give translat exampl function make use overload lookup translat look like f foral v mk cmapkey mk mappair mk mapint v v note translat type map int v instanc mapkey b mapkey int must con sult must consult infer mapkey int depend mapkey construct dictionari mapkey int valu translat 34 definit haskel class method given default definit declar class instanc omit specif definit method inherit default unfortun provid similar facil associ data type see consid arrayelem exampl introduct let add hypothet default definit array associ type class arrayelem e data array index array e int e type defaultarray constructor presum given type defaultarray arrayelem e boxedarray e array e type constructor valid instanc arrayelem give specif definit array type correct type give constructor default definit 4 type system translat section formalis type system lambda calculu includ type class associ data type extend type rule includ translat sourc program explicitli type target languag akin predic fragment system f type system base jone overload ml oml 20 21 associ data type chang type rule fundament way howev requir substanti extens dictionari translat type class 41 syntax syntax sourc languag given figur 1 use overbar notat extens notat n mean sequenc 1 n n may omit unimport moreov use comma mean sequenc extens follow n an1 n1 although give syntax qualifi quantifi type curri way also sometim use equival overbar notat thu accommod function type 1 2 regard curri applic function type constructor two argument thu 1 2 sourc languag three unusu featur first class declar may contain data type signatur addit method signatur correspondingli instanc declar may contain data type declar addit method implement data type associ type class syntact separ type variabl type class associ type c data constructor sourc declar pgm data cl inst val whole program data data data cl class class decl inst instanc instanc decl adata val val dsig data assoc type sig adata data data type sourc term let sourc type qualifi type type scheme constraint qualifi constraint constraint scheme environ instanc environ figur 1 syntax express type type constructor rang rather sec ond syntact distinguish two form toplevel data type declar ordinari one toplevel associ type mention associ type righthand side see section 32 declar associ type whether class declar toplevel data declara tion type index must come first third syntax type includ satur applic associ type type index type argument way 1 2 product make follow simplifi assumpt reduc notat burden class exactli one type paramet one method one associ type toplevel associ type exactli one type index paramet data type singl constructor furthermor rather treat case express assum constructor c come project function prj c select ith argument constructor c treat superclass target declar target term target type environ dictionari environ associatedtyp environ figur 3 syntax target term type loosen restrict larg matter ad great mani overbar type rule introduc superclass slightli less trivial section 45 discuss 42 type check key featur system type rule express close haskel 98 present figur 2 judgement e mean type environ instanc environ express e type rule absolut standard damasmiln type system except e former allow us abstract constraint latter allow us discharg constraint provid entail environ latter judgement also given figur 2 also entir standard 21 auxiliari judgement use rule e kindcheck judgement use system guess type ensur type well kind interest breviti howev rule figur 2 elid mention kind leav wellformed check distinct system specifi calli wellform type everi associ type must context satisfi class associatedther one case associ toplevel data type side condit reject cf section 31 exampl type type invalid associ type array meaningless without correspond arrayelem con straint array simpli defin type kind subset arrayelem instanc akin simpl form refin kind 9 rule class instanc declar quit standard possibl one type declar class omit detail form part elabor rule give next howev reason type wellformed judgement specifi work type scheme rather monotyp need check valid type class method 43 evid translat second crucial featur system like haskel translat system f augment data type without ad associatedtyp extens target languag gave exampl translat section 33 formalis translat 431 evid translat term main judgement mean environ sourc term e type translat target term w figur 5 rule judgement given figur 5 part wellknown elabor rule figur target term w explicitlytyp style system f syntax given figur 3 main type judgement deriv sourc type wherea target term decor target type programm see sourc type includ qualifi type applic associ type contrast target type mention data type qualifi type associ type appear instanc environ plain typecheck rule split two compon see figur 3 dictionari environ associ dictionari dictionaryproduc function constraint scheme otherwis contain inform old wellformed judgement figur 2 use rule e becom type translat judgement translat sourc type target type type translat driven associatedtyp environ discuss type translat section 432 return rule term interest case rule e must deal associ type rule abstract type variabl stand associ type ie one directli associ class mention associ toplevel type need abstract moreov need extend dictionari environ reflect constraint satisfi environ includ wit henc augment typetransl environ explain associ type call may rewritten dualli rule e appli target term w1 wit type well wit term w2 wit type deriv judgement wit term deriv given figur 4 432 translat type translat sourc type target type formalis judgement figur 4 elimin applic associ type consult associatedtyp environ judgement relat wellformed judgement figur 2 way type relat e motiv rule type translat copi section 33 cmapkey mapp air mapint spec associ type var let e e e figur 2 standard type check rule express tr tr tr fv associ type e associ type mono figur 4 translat type first exampl straightforward aris directli instanc declar mapkey int go second exampl class constraint translat ordinari function argument type cmapkey data type cmapkey type dictionari class mapkey gener translat class declar crucial point data type take extra type paramet associ type class one correspondingli must quantifi new type well type map int first translat mappair map map int appli translat scheme ad translat instanc declar pair map int translat mapint map precis associ type class mapkey translat associatedtyp environ therefor contain two kind assumpt figur 3 first instanc declar get assumpt form let e e figur 5 type rule translat associ data type correspond target data type exampl consid instanc class mapkey section 33 instanc int pair augment assumpt 12 map 1 2 see detail extend way discuss rule instanc declar next section second midst translat type extend local assumpt form denot rule tr figur 4 also figur 5 exampl move insid mapkey qualifi exampl add assumpt map whenev need extend local assumpt form use judgement figur 4 judgement abstract associ type introduc new type variabl repres associ type also provid applic associ type class instanc correspond dictionari type 433 data type valu declar rule typedirect translat declar given figur 6 somewhat complex larg notat overhead much complex also present vanilla haskel 98 real work done howev whole point programm see haskel type system less unchang implement good deal paddl water implement associ type translat vanilla data type declar easi need translat constructor argument type use auxiliari typetransl judgement handl associ toplevel data type involv treatment close mirror associ type instanc declar discuss valu declar also straightforward work done figur 4 5 434 class declar interest case class instanc declar may help refer back exampl section 33 read rule note class declar class translat data type declar also name whose data constructor call cd data type use repres dictionari class constructor class method signatur argument type suitabl translat cours translat use associatedtyp environ map associ type fresh type variabl data type must parameteris fresh presum free translat method type final must gener bind method selector function class method f rule implement correspond project function prj cd addit target declar defin data type dictionari method selector function rule cl produc environ give sourc type class method impos restrict method type haskel name constraint method type must constrain class paramet lift restrict would permit class like one class op c constraint c constrain class variabl functionaldepend set class like known tricki situat us paper simpli exclud possibl 435 instanc declar instanc declar involv associ type class must gener fresh data type declar implement associ type instanc type data type must parameteris quantifi type variabl instanc declar b type variabl associ type constraint instanc declar c type variabl associ type parametr instanc artifici exampl demonstr possibl class mk k data instanc mk mk b mk b data data type aris instanc declar data td data c data r data r r c adata class data data inst td r r r r instanc r data data r c c r c inst val td data inst figur declar type rule translat follow data b mb argument mb b may need see exampl optimis unus translat right hand side declar omit typeparamet list produc righthand side c c instanc associ type declar need replac applic associ type newli introduc type paramet achiev associatedtyp environ hypothesi addit promot associ data type becom fresh toplevel data type declar rule inst also return conclus tini associatedtyp environ dictionari environ embodi inform instanc declar use rest program b tini type environ embodi type new data constructor c conclud hard part instanc declar gener dictionari function f extens dictionari environ exactli vanilla haskel 436 tie knot final judgement figur 6 glue togeth judgement type class instanc valu declar rule highli recurs associatedtyp environ ment produc type check instanc declara tion consum judgement three judgement similarli four judgement produc fragment environ consum judgement instanc valu declar good reason recurs exampl consid data type g1 section 22 constructor mention type vertex g1 translat type come instanc declar practic implement must unravel recurs somewhat new extens make slightli harder exampl haskel 98 one typecheck instanc declar head part gener top level check valu declar gener take second run instanc declar time check method bodi instanc declar one class may need typecheck class declar anoth class associ type former appear method type signatur latter none rocket scienc unwelcom complic 44 associ type paramet section 3 specifi type paramet associ type ident parent class plu option extra paramet see class paramet must occur first insist associatedtyp applic satur wrt class paramet turn ensur type translat describ proceed without concern partial applic without clutter aris extra could principl permit associ type permut parent class paramet one cost extra notat bureaucraci inst rule seem benefit could also principl allow associ type mention subset parent class paramet would need make extra test ensur instanc declar overlap take account select class paramet ensur type translat describ confluent test must made function depend employ benefit seem justifi cost formalis type system evid translat take superclass account ie context head class declar made simplif interest clariti formal rule nevertheless subtleti respect translat associ type class super class rule cl figur 6 see gener dictionari data type type argument correspond associ type class gener multipl associ type henc multipl type argument class superclass contain associ type associ type need appear argument dictionari word similar dictionari superclass must embed classs dictionari associ type superclass need also embed 46 sound evid translat map program type sourc type intermedi languag expect gener well type program expect met assert formal result sketch follow full detail companion technic report type check target declar td target term w denot f td f w respect target type environ target type type check rule standard type pass lambda calculu omit space reason moreov lift type translat judgement pointwis translat sourc target environ theorem 1 given type translat environ dictionari environ type environ sourc term e type translat environ asf f f w proof proof proce rule induct target term produc translat rule tricki case rule e abstract type associ class context suppli correspond represent type respect moreov need make use auxiliari properti judgment figur 4 theorem 2 given sourc program pgm translat pgm td result target program well proof proof consid target declar produc rule figur 6 turn demonstr type environ produc sourc program correspond produc target program type translat judgement theorem 2 sucient ensur sound provid strong indic translat sound 5 comparisontofunctionaldepen denci function depend 22 experiment addit multiparamet type class introduc function relationship dierent paramet type class similar class paramet associ type inde extra type paramet introduc implicitli systemf translat appear explicitli program express use function depend exampl use fd one might express array exampl like class arrayrep e arr e arr index arr int e function depend e arr restrict binari relat arrayrep function element type e represent type arr instanc declar popul relat repres arrayrep word associ type provid extra argument class instead local consequ correspond instanc declar local type definit replac instanti second paramet class arrayelem method omit instanc arrayrep int uintarr instanc arrayrep arr arrayrep b brr use function depend describ typeindex data type suer three seriou shortcom shall discuss next hand function depend use situat associ data type howev appear conjunct associ type synonym might cover major applic function depend futur work show whether inde case undecid type constraint duck et al 8 point instanc pair arrayrep b arr brr problemat type variabl arr brr occur first argument b type constraint instanc accept type infer presenc function depend becom undecid pre cise diverg certain term reject type incorrect jone 22 origin propos function depend allow instanc clutter compar studi garcia et al 11 mention section 22 haskel receiv full mark categori except treatment associ type type class function depend essenc requir make associ type extra paramet type class result complic less readabl code illustr paramet arr type class arrayrep extra paramet appear signatur involv associ type quit larg term involv exampl graph librari discuss garcia et al lack abstract would expect defin typeindex array modul hide concret array represent user modul howev encod base function depend allow level abstract see case consid full type index func tion name index arrayrep e arr arr int e avoid use knowledg array integ repres would expect abl defin indexint arrayrep int arr arr int int howev definit admiss type signatur consid instanc type infer function bodi presenc function depend e arr cf class declar arrayrep fact forc use follow definit instead indexint uarrint int int clearli break intend abstract barrier fact suggest function depend threaten usual type substitut properti root problem lie deep consequ evid translat type class would expect system f term coerc translat indexint translat indexint howev coercion exist would requir nonparametr oper present system f 13 variat function depend duck et al 8 propos liber form function depend recurs instanc arrayrep lead nontermin howev also requir radic dierent form type checker base hmx 30 framework constraint handl rule stuckey sulz mann 36 introduc implement multiparamet type class function depend depend dictionari translat result avoid problem origin form function depend neubauer et al 28 introduc function notat type class singl function depend much like parametr type class 3 ever propos syntact sugar function depend translat new form class multiparamet class function depend pass type checker author ambiti second propos 29 add fullblown function logic languag type sy tem base hmx 30 framework neubauer et al address issu suitabl evid translat mean infer type compil program 6 relat work type class signific amount previou work studi relationship type class typeindex function 37 19 1 23 24 mostli purpos express gener function use standard type class alon chen et al 3 propos parametr type classesi type class type parametersto repres contain class overload constructor selector provid type system type infer algorithm present evid translat parametr type class unlik type class singl associ type synonym gener haskel hinz et al 16 18 propos translat typeindex data type base type specialis procedur eort culmin gener haskel preprocessor translat code includ typeindex type function haskel includ type system extens rankn type pay special attent typeindex data type structur defin map type section 21 automat perform map standard haskel data type definit represent base binari sum prod uct recent work loh et al 26 elabor origin design introduc dependencystyl gener haskel fact translat associ type addit type paramet akin translat typeindex type gener haskel associ type lightweight extens haskel miss automat gener embed project pair ml modul repeatedli observ signific overlap function haskel type class standard ml modul introduct associ type increas overlap ml modul alway agglomer valu type nevertheless interest dierenc type class ml modul particular ml structur termlevel entiti henc notion phase distinct 14 requir separ static dynam semant leroy 25 propos variant contrast type class pure static concept part due involv term level ml higherord modul give rise rich design space 7 far clear dierent concept relat type class despit dif ferenc introduct associ type show common type class ml modul may signific previous assum henc would worthwhil investig relationship detail intension type analysi intension type analysi 15 realis typeindex type typelevel typerec construct propos facilit typepreserv optimis polymorph subsequ work 32 6 5 38 elabor harper morrisett semin work alreadi outlin relationship type class conceptu dierenc intension type analysi type class former base explicit runtim represent type wherea target languag evid translat standard typeerasur semant nevertheless crari et al 6 propos altern view intension type analysi base type erasur need pass method dictionari runtim regard implicit type represent constrain data type xi et al 39 introduc typeindex data type annot constructor data type declar type pattern call guard present type system establish sound intern languag typeindex explicit contrast approach typeindex remov evid translat phase call elab orat cheney hinz 4 present slightli generalis version guard data type permit equat type constraint variou altern data type decla ration approach dier classbas approach typeindex data type opena new class instanc alway addedwherea close data type declar extend refin kind section 42 said understand type constraint form restrict rang variabl ie rang subset type characteris kind particular restrict term welldefin entir rang associ type subkind relationship relat duggan notion refin kind 9 ever duggan consid typeindex function typeindex type objectori languag mention section 22 associ type long stand tradit c often collect trait class 27 garcia et al 11 compar support gener program c standard ml haskel eiel gener java gener c exist plethora work gener program objectori program languag beyond scope paper review 7 conclus propos includ type declar alongsid valu declar haskel type class associ type type class especi use implement self optimis librari also serv implement abstract interfac concept function depend use past case associ data type demonstr dictionarybas evid translat standard implement type class elegantli extend handl associ type particular target languag aect extens sourc languag futur work hope extend mechan associ data type associ type synonym generalis substanti implic due introduc addit nonsyntact equal type level plan investig feasibl gener default method 19 class involv associ type acknowledg thank amr sabri discuss previou version approach point us work garcia et al thank roman leshchin skiy detail feedback work share insight gener program c particularli thank martin sulzmann detail construct comment earlier draft paper also thank dave abraham brian mcnamara jeremi siek interest email exchang compar haskel type class c class thank robert harper greg mor risett andr pang anonym refere feedback previou version paper 8 r gener program extens clean approach fast array haskel parametr type class flexibl type analysi intension polymorph typeerasur semant type system higherord modul sound decid type infer function depend dynam type distribut program polymorph languag static semant haskel compar type class haskel parametr variant girard j oper compil polymorph use intension type analysi gener gener tri gener haskel applic deriv type class fpca system constructor class overload implicit higherord polymorph type class function depend sketch polymorph symphoni scrap boilerpl practic approach gener program manifest type trait new use templat techniqu function notat function depend function logic overload type infer constrain type fast mergeabl integ map flexibl represent analysi boost graph librari user guid refer manual matrix templat librari gener compon highperform scientif comput standard templat librari theori overload guard recurs datatyp constructor tr ctr manuel chakravarti gabriel keller simon peyton jone associ type synonym acm sigplan notic v40 n9 septemb 2005 louisjulien guillemett stefan monnier typesaf code transform haskel electron note theoret comput scienc entc v174 n7 p2339 june 2007 derek dreyer robert harper manuel chakravarti gabriel keller modular type class acm sigplan notic v42 n1 januari 2007 martin sulzmann gregori j duck simon peytonjon peter j stuckey understand function depend via constraint handl rule journal function program v17 n1 p83129 januari 2007 gabriel do rei bjarn stroustrup specifi c concept acm sigplan notic v41 n1 p295308 januari 2006 manuel chakravarti roman leshchinskiy simon peyton jone gabriel keller simon marlow data parallel haskel statu report proceed 2007 workshop declar aspect multicor program p1018 januari 1616 2007 nice franc jaakko jrvi dougla gregor jeremiah willcock andrew lumsdain jeremi siek algorithm special gener program challeng constrain gener c acm sigplan notic v41 n6 june 2006 martin sulzmann manuel chakravarti simon peyton jone kevin donnelli system f type equal coercion proceed 2007 acm sigplan intern workshop type languag design implement januari 1616 2007 nice nice franc jame cheney scrap namepl function pearl acm sigplan notic v40 n9 septemb 2005 ralf lmmel klau ostermann softwar extens integr type class proceed 5th intern confer gener program compon engin octob 2226 2006 portland oregon usa jeremi g siek jeremi siek andrew lumsdain essenti languag support gener program acm sigplan notic v40 n6 june 2005 ronald garcia jaakko jarvi andrew lumsdain jeremi siek jeremiah willcock extend compar studi languag support gener program journal function program v17 n2 p145205 march 2007 dougla gregor jaakko jrvi jeremi siek bjarn stroustrup gabriel do rei andrew lumsdain concept linguist support gener program c acm sigplan notic v41 n10 octob 2006 jaakko jrvi jeremiah willcock andrew lumsdain associ type constraint propag mainstream objectori gener acm sigplan notic v40 n10 octob 2005 paul hudak john hugh simon peyton jone philip wadler histori haskel lazi class proceed third acm sigplan confer histori program languag p1211255 june 0910 2007 san diego california