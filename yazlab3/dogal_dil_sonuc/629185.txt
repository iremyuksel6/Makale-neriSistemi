unifi formal four sharedmemori model author present dataracefree1 sharedmemori model unifi four earliermodel weak order releas consist sequenti consist specialoper vax memori model dataracefree0 dataracefree1 unifi themodel weak order releas consist vax dataracefree0 byform intuit program synchron explicitli correctli thensequenti consist guarante high perform manner retainsth advantag four model dataracefree1 express programmersinterfac explicitli formal weak order vax allow animplement allow weak order releas consist dataracefree0th implement propos dataracefree1 differ earlier implement bypermit execut synchron oper processor even whileprevi data oper processor progress ensur sequentialconsist two sychron processor exchang inform delay later operationsof second processor conflict incomplet data oper firstprocessor b introduct memori model sharedmemori multiprocessor system formal specif memori oper program appear execut programm particular memori model specifi valu may return read oper execut sharedmemori system paper present new memori model dataracefree1 unifi four earlier model 1 although four model similar model differ advantag disadvantag programm system design unifi four model retain advantag four model uniprocessor provid simpl memori model ensur memori oper appear execut one time order specifi program program order thu read return valu last write program order locat improv perform howev uniprocessor often allow memori oper overlap memori oper issu execut program order uniprocessor use interlock logic maintain programm model memori memori oper appear execut one time program order model uniprocessor memori therefor advantag simplic yet allow high perform optim commonli often implicitli assum memori model sharedmemori multiprocessor system sequenti consist formal lamport 21 follow definit 11 multiprocessor system sequenti consist result execut oper processor execut sequenti order oper individu processor appear sequenc order specifi program word sequenti consist multiprocessor appear like multiprogram uniprocessor 24 although sequenti consist retain simplic uniprocessor memori model limit perform prevent use sever optim figur 1 show multiprocessor system without cach common uniprocessor hardwar optim write buffer overlap memori oper outoford memori oper lockupfre cach 20 violat sequenti consist optim significantli improv perform becom increasingli import futur processor cycl time decreas memori latenc increas 13 gharachorloo et al describ 1 earlier version work appear proceed 17th annual intern symposium comput architectur june 1990 1 dataracefree1 memori model develop paper extend dataracefree0 model 1 distinguish unpair synchron oper pair releas acquir synchron opera tion definit dataracefree1 section 2 use notion differ oper distinguish distinct correct synchronizationorder1 happensbefore1 relat data race notion extens similar concept develop dataracefree0 also parallel work paper publish techniqu detect data race dataracefree1 system 2 consequ 2 review data race datarac memori model contain definit slightli differ form section 2 materi use section 2 permiss acm mechan allow optim use sequenti consist model mechan requir hardwar support prefetch rollback 12 initi figur 1 violat sequenti consist 2 share variabl r1 r2 local regist execut depict violat sequenti consist sinc total order memori oper consist program order let p 1 p 2 return 0 read x note neither processor data depend among instruct therefor simpl interlock logic preclud either processor issu second instruct first sharedbu system without cach execut possibl processor issu memori oper order allow read pass write write buffer system gener interconnect network without cach execut possibl even processor issu memori oper program order oper reach memori modul differ order 21 sharedbu system cach even cach coher protocol 6 execut possibl processor issu memori oper outoford allow read pass write write buffer system gener interconnect network cach execut possibl even memori oper issu reach memori modul program order complet program order situat aris processor initi x cach processor issu read write propag cach processor altern memori model propos improv perform sharedmemori system use new model satisfi follow properti 1 model simpl programm use 2 model allow high perform central assumpt work programm prefer reason sequenti consist model sinc natur extens wellunderstood uniprocessor model therefor one way memori model satisfi first properti appear sequenti consist program formal character group program memori model satisfi second properti allow high perform optim guarante sequenti consist group program one group program possibl guarante sequenti consist still use mani optim program explicitli distinguish synchron memori oper oper use order oper data memori oper oper use read write data dichotomi 2 figur 1 modifi version figur 1 1 present permiss ieee memori oper motiv behind four model weak order 9 releas consist sequenti consist special oper henceforth call releas consist 11 vax 8 dataracefree0 origin call order respect dataracefree0 1 although four memori model similar small differ formal lead differ way satisfi two properti weak order 9 releas consist 11 restrict hardwar actual execut specif memori oper program order programm author order later state mutual exclus ensur access share variabl use construct critic section implement hardwarerecogniz synchron oper 10 26 author releas consist formal group program call properli label pro gram releas consist ensur sequenti consist properli label program distinguish memori oper depend use exampl distinguish synchron oper ordinari data oper vax dataracefree0 model differ weak order releas consist avoid explicit restrict actual order execut specif memori oper vax architectur handbook 8 data share synchron section state follow access explicitli share data may written must synchron access share writabl data programm must acquir control data structur seven instruct provid permit interlock access control variabl dataracefree0 1 state sequenti consist provid dataracefre pro gram dataracefre program discuss formal section 2 distinguish synchron oper data oper ensur conflict data oper race ie execut con current program contain data race dataracefree0 guarante behavior hardwar differ formal four model result model satisfi simplic highperform properti better model howev model satisfi properti better model exampl vax impos least restrict hardwar specif less explicit formal model consid statement access share writabl data programm must acquir control data structur allow concurr reader hardwar behav program satisfi specifi condit although may possibl answer question vax handbook explicit formal interfac would allow straightforward unambigu resolut question releas consist hand provid formal explicit interfac howev section 4 show hardwar requir releas consist restrict necessari paper defin new model dataracefree1 unifi weak order releas consist vax dataracefree0 model manner retain advantag model programm hardwar design follow summar dataracefree1 unifi four model overcom specif disadvantag specif model programm dataracefree1 unifi four model explicitli address two question program correctli synchron b hardwar behav correctli synchron pro answer question formal intuit behind answer simpl program correctli synchron none sequenti consist execut data race ie conflict data oper execut concurr b program correctli synchron hardwar behav sequenti consist viewpoint practic provid releas consist dataracefree0 howev explicit formal weak order vax eg allow concurr reader form data race hardwar design dataracefree1 unifi four model shown section implement model suffici implement dataracefree1 furthermor dataracefree1 less restrict either weak order releas consist dataracefree0 hardwar design sinc exist implement dataracefree1 allow weak order releas consist data racefree0 new implement describ section 4 differ implement weak order releas consist allow synchron oper execut even previou data oper synchron processor incomplet achiev sequenti consist processor exchang inform time synchron ensur later oper may conflict incomplet data oper delay data oper complet new implement differ implement data racefree0 distinguish differ type synchron oper rest paper organ follow section 2 defin dataracefree1 section 3 4 compar dataracefree1 weak order releas consist vax dataracefree0 model viewpoint programm hardwar design respect section 5 relat dataracefree1 model section 6 conclud paper 2 dataracefree1 memori model section 21 first clarifi common terminolog use throughout paper inform motiv dataracefree1 memori model section 22 give formal definit dataracefree1 data racefree1 extens earlier model dataracefree0 1 21 terminolog motiv rest paper assum follow terminolog term system program oper definit 11 sequenti consist use sever level paper discuss memori model lowest level system machin hardwar program set machinelevel instruct oper memori oper either read memori locat read oper modifi memori locat write oper part machin instruct program program order execut partial order memori oper execut impos program text 27 result execut refer valu return read oper execut sequenti consist execut execut could occur sequenti consist hardwar two memori oper conflict least one write access locat 27 motiv dataracefree1 similar weak order releas consist vax model dataracefree0 base follow observ made 1 3 assum processor maintain uniprocessor data control depend sequenti consist violat two processor interact memori oper common locat interact classifi data memori oper synchron memori oper data oper usual frequent involv read write data synchron oper usual less frequent use order conflict data oper differ processor exampl implement critic section use semaphor test semaphor unset clear semaphor synchron oper read write critic section data oper addit synchron oper character pair acquir releas synchron oper unpair synchron oper follow character similar use properli label program releas consist 11 section 3 discuss differ execut consid write read synchron oper locat read return valu write valu use read processor conclud complet memori oper write processor write program interact write synchron oper call releas read synchron oper call acquir releas acquir said pair synchron oper unpair pair synchron oper execut exampl consid implement critic section use semaphor semaphor test testset instruct clear unset instruct write due unset pair test return unset valu unset write releas oper 3 observ paraphras 1 permiss ieee test read acquir oper unset valu return test use conclud complet memori oper previou invoc critic section write due set testset read due test testset return set valu unpair oper read acquir write releas set valu commun complet previou memori oper illustr section 4 possibl ensur sequenti consist place hardwar restrict synchron oper synchron oper pair oper requir restrict thu hardwar could distinguish type oper could complet data oper faster oper unpair synchron oper faster pair synchron oper without violat sequenti consist dataracefree1 system give programm option distinguish type oper enabl higher perform 22 definit dataracefree1 section 21 inform character memori oper base function perform indic distinguish memori oper base character higher perform obtain without violat sequenti consist section first discuss memori oper distinguish base character dataracefree1 system give formal criterion oper distinguish correctli dataracefree1 section conclud definit dataracefree1 memori model impos restrict differ memori oper may di tinguish one option distinguish data oper synchron oper hardwar provid differ instruct may use type oper exampl special instruct testset unset may use gener synchron oper altern oper certain memorymap locat may distinguish synchron oper one way distinguish pair unpair synchron oper hardwar provid special instruct synchron oper static pairabl relat instruct write read execut distinguish hardwar pair releas acquir gener instruct relat pairabl relat read return valu write figur 2 give exampl differ instruct pairabl relat illustr use follow discuss programm distinguish oper correctli dataracefree1 oper distinguish exactli accord function outlin section 21 distinct inde correct howev dataracefree1 requir programm distinguish oper match syncreadflag testset b fetchinccount fetchinccount syncwriteflag fetch inc syncwrit unset testset unset test testset set testset unset testset unset data op critic section data op barrier code barrier fetchinccount n data op barrier testset code critic setion sync read acquir acquir releas releas syncreadflag localflag whilesyncreadflag localflag els figur 2 synchron instruct pairabl relat differ system figur 2a 2b repres two system differ set instruct use synchron oper system figur show differ synchron oper pairabl relat along program execut use oper tabl figur list read synchron oper potenti acquir horizont write synchron oper potenti releas verti calli indic synchron oper correspond row column pairabl pair execut read return valu written write execut execut occur sequenti consist hardwar oper execut order shown opx denot oper op locat x dataread datawrit denot data oper testset fetchinc 17 instruct defin atom instruct read write oper repres togeth testsetx fetchincx pair oper connect arrow figur 2a show system testset unset instruct use implement critic sec tion testset atom read memori locat updat valu 1 unset updat memori locat valu 0 write due unset read due testset pairabl figur show code critic section execut involv two processor figur 2b show system fetchinc 17 syncwrit syncread instruct use implement barrier fetchinc atom read increment memori locat syncwrit synchron write updat memori locat specifi valu syncread synchron read memori locat write due fetchinc pairabl read due anoth fetchinc write due syncwrit pairabl read due syncread also shown code n processor synchron barrier 23 execut 2 variabl localflag implement local regist processor oper shown execut function exactli absenc precis knowledg regard function oper programm conserv distinguish oper synchron oper even oper actual perform function data oper sequenti consist still guarante although full perform potenti system may exploit henceforth character oper one distinguish programm may differ base actual function oper per form exampl oper actual data oper programm use synchron instruct refer synchron oper intuit oper distinguish correctli dataracefree1 suffici synchron oper distinguish releas acquir criteria suffici oper distinguish data involv race ie program dataracefre notion data race formal defin happensbefore1 relat everi execut program follow happensbefore1 relat execut partial order memori oper execut inform happensbefore1 order two oper initi differ processor pair releas acquir oper execut definit 22 formal intuit use program order synchronizationorder1 relat definit 21 definit 21 execut memori oper 1 order memori oper 2 relat 1 releas oper 2 acquir oper pair definit 22 happensbefore1 relat execut irreflex transit closur program order synchronizationorder1 relat execut definit data race dataracefre program dataracefree1 model follow definit 23 data race execut pair conflict oper least one data order happensbefore1 relat defin execut execut dataracefre data race program dataracefre sequenti consist execut dataracefre definit 24 hardwar obey data race free 1 memori model result everi execut dataracefre program hardwar obtain execut program sequenti consist hardwar figur 3a 3b illustr execut respect exhibit exhibit data race execut figur 3a implement critic section code figur 2a except programm use data oper instead unset synchron oper p 0 write therefor happensbefore1 order p 0 write x p 1 read x sinc write read x conflict data opera tion form data race similar reason p 0 data write form data race p 1 test set data write figur 3b show execut barrier code figur 2b execut dataracefre happensbefore1 order conflict pair oper least one pair data note execut figur 3b use critic section therefor dataracefree1 requir share done critic section also note program base asynchron algorithm oper access data order synchron program data racefre oper also need distinguish synchron oper syncreadflag testset b fetchinccount fetchinccount syncwriteflag testset syncreadflag po po po po po po po po po so1 so1 po po po figur 3 execut exhibit b exhibit data race discuss section 21 definit dataracefree1 assum program use machin instruct hardwaredefin synchron primit howev programm use highlevel parallel program languag use dataracefree1 extend definit dataracefre highlevel program discuss dataracefree0 1 extens straightforward requir highlevel parallel languag provid special construct synchron eg semaphor monitor forkjoin task ren dezvou dataracefree1 place restrict highlevel synchron mechan respons compil ensur program dataracefre highlevel compil one dataracefre machinelevel ensur sequenti consist programm 3 vs weak order releas consist vax model dataracefree0 programm section compar dataracefree1 memori model weak order releas consist vax dataracefree0 programm viewpoint state earlier central assumpt work programm prefer reason sequenti consist programm dataracefree1 provid simpl model program dataracefre hardwar appear sequenti consist weak order vax memori model state program obey certain condit hardwar wellbehav howev sometim interpret may need deduc whether program obey requir condit concurr reader case section 1 hardwar behav program obey requir condit dataracefree1 express aspect explicitli formal weak order vax dataracefree1 state program datarac free hardwar appear sequenti consist program dataracefre releas consist provid formal interfac programm dataracefree1 provid similar interfac minor differ program dataracefree0 ensur sequenti consist also call dataracefre program 1 differ dataracefree0 distinguish differ synchron oper effect pair conflict synchron oper depend order execut distinct significantli affect programm exploit hardwar design program releas consist ensur sequenti consist call properli label program 11 dataracefre program properli label properli label program dataracefre defin definit 24 15 differ minor aris properli label program less explicit notion pair allow conflict data oper order oper nsync correspond nonpair synchron oper dataracefree1 although memori model allow hardwar guarante sequenti consist properli label program formal describ model would similar dataracefree1 similar dataracefre properli label program potenti disadvantag dataracefree1 rel weak order releas consist programm asynchron algorithm reli sequenti consist correct 7 weak order releas consist provid programm option reason explicit hardwar condit write program dataracefre work correctli possibl faster dataracefree1 base assumpt programm prefer reason sequenti consist therefor restrict behavior hardwar program dataracefre nevertheless maximum perform programm asynchron algorithm could deal directli specif implement dataracefree1 would entail risk portabl across dataracefree1 implement would enabl futur faster implement common program summar programm dataracefree1 similar releas consist dataracefree0 provid explicit formal interfac weak order vax model previou work discuss requir dataracefre program model restrict programm 1 11 data race 2 violat sequenti consist due data race 14 may dynam detect model 4 vs weak order releas consist vax model dataracefree0 hardwar design section compar dataracefree1 weak order releas consist vax model data racefree0 hardwar design viewpoint first show dataracefree1 unifi four model hardwar design implement weak order releas consist vax model data racefree0 obey dataracefree1 section 41 show dataracefree1 less restrict weak releas consist dataracefree0 hardwar design dataracefree1 allow implement allow weak order releas consist dataracefree0 section 42 41 unifi weak order releas consist vax model datarac free0 hardwar design hardwar design dataracefree1 unifi releas consist dataracefree0 weak order vax model implement four model obey dataracefree1 specif implement releas consist obey dataracefree1 discuss section 3 implement releas consist ensur sequenti consist dataracefre program implement dataracefree0 obey dataracefree1 discuss section 3 implement dataracefree0 ensur sequenti consist dataracefre program implement weak order obey dataracefree1 earlier work show implement weak order obey dataracefree0 1 argument implement dataracefree0 obey dataracefree1 dataracefree1 formal vax model therefor implement vax model obey data racefree1 42 dataracefree1 less restrict weak order releas consist dataracefree0 hardwar design less restrict hardwar design implement either weak order releas consist dataracefree0 dataracefree1 allow implement allow weak releas consist dataracefree0 figur 4 motiv implement figur show part execut two processor execut critic section code figur 2a processor p 0 p 1 testset succeed execut data oper includ one locat x final unset critic section code dataracefre therefor execut dataracefree1 implement appear sequenti consist execut figur 4 p 0 testset succe first therefor p 1 testset succe return valu written p 0 unset thu appear sequenti consist p 1 data read x return valu written p 0 data write x figur 4 show implement weak releas consist dataracefree1 achiev unset testset wo stall p0 datawrit complet wo rc stall p1 unset therefor datawrit drf1 delay dataread datawrit complet testset rc delay unset datawrit complet drf1 stall p1 unset po po po po po po po so1 need never stall p0 delay oper testset po unset po po po releas consist figur 4 implement memori model weak order releas consist requir p 0 delay execut unset p 0 data complet ie seen processor howev delay necessari maintain sequenti consist also observ zucker 28 impos implement propos datarac describ next instead implement maintain sequenti consist requir p 0 data write x complet p 1 execut data read x achiev ensur p 1 execut testset p 0 notifi p 1 incomplet write x ii p 1 delay read x p 0 write x complet new optim p 0 execut unset earlier p 1 testset succeed earlier weak order releas consist thu p 1 read write follow testset program order conflict previou oper p 0 also complet earlier oper data read x conflict previou oper p 0 may delay p 0 correspond oper complet nevertheless oper also complet earlier weak order releas consist exampl p 1 read x occur late enough program p 0 write may alreadi complet p 1 examin read therefor read proceed without delay recent implement releas consist propos use rollback mechan let processor condit execut read follow acquir p 1 testset acquir complet 12 optim benefit implement also allow write follow acquir issu complet earlier let read follow acquir commit earlier dataracefree1 implement differ dataracefree0 implement dataracefre distinguish unset testset synchron oper take differ action dataracefree0 make distinct section 421 describ suffici condit implement dataracefree1 base motiva tion section 422 give detail implement propos base condit 421 suffici condit hardwar obey dataracefree1 memori model result execut dataracefre program hardwar obtain sequenti consist execut program result execut set valu read oper return section 21 valu return read valu write locat seen last read processor thu valu return read depend order read processor see read respect write locat ie order processor see conflict oper thu hardwar dataracefree1 obey follow condit condit hardwar dataracefree1 everi execut e data racefre program hardwar oper execut e sequenti consist execut program ii order two conflict oper seen processor execut e sequenti consist execut processor see write read execut processor locat write return valu subsequ write processor see read read return valu notion similar perform respect processor perform 9 follow give three requir data synchron control togeth suffici hardwar satisfi dataracefree1 condit therefor obey dataracefree1 data requir pertain pair conflict oper dataracefre program least one oper data oper execut sequenti consist hardwar pair oper order happensbefore1 relat execut seen processor order data requir execut dataracefree1 hardwar pair oper continu seen processor happensbefore1 order execut requir ensur figur 4 p 1 see p 0 write x read x base discuss figur 4 data requir condit meet data requir pair conflict oper differ processor conflict oper processor suffici maintain intraprocessor data depend condit assum maintain rest section preced follow refer order program order oper either synchron data complet perform 9 seen defin processor data requir condit let rel acq releas acquir oper issu processor p rel p acq respect let rel acq pair prereleas condit p rel issu rel rememb oper preced rel incomplet releaseacquir condit acq complet p rel transfer p acq address ident rememb oper ii acq complet rel complet oper transfer p rel p rel acquir preced rel complet postacquir condit let acq preced program order let oper x transfer p acq acq issu acq complet ii x conflict issu complet data requir condit prove correct show ensur x conflict oper differ processor happensbefore1 order x x complet processor see impli processor see x meet data requir execut figur 4 prereleas condit ensur p 0 execut unset rememb incomplet releaseacquir condit ensur p 1 execut success testset transfer address x p 1 postacquir condit ensur p 1 detect delay complet enforc delay thu datareadx return valu written besid data requir dataracefree1 condit also requir order two conflict synchron oper seen processor sequenti consist hardwar synchron requir data synchron requir would suffic satisfi data condit also guarante execut e hardwar obey requir sequenti consist execut oper happensbefor 1 order execut conflict synchron oper e absenc control flow oper branch automat ensur presenc control flow oper ever extra requir call control requir need ensur 3 weak order releas consist propos implement dataracefree0 satisfi synchron requir explicitli control requir implicitli requir uniprocessor control depend maintain sinc key differ implement earlier model new implement dataracefree1 data requir follow describ implement propos data requir condit 3 formal three requir give explicit condit synchron control requir conserv way satisfi synchron requir processor also stall issu synchron oper complet preced synchron oper write oper whose valu return preced synchron read oper conserv way satisfi control requir processor also block read control program flow read complet note optim data requir condit implement follow section possibl 3 exampl releaseacquir condit acquir complet even oper transfer releas processor incomplet long releas processor transfer ident incomplet oper acquir processor postacquir condit necessari delay oper follow acquir conflict oper x transfer acquir processor complet instead suffici delay x seen acquir processor long mechan cachecoher protocol ensur write locat seen order processor thu releas processor also transfer valu written incomplet write read follow acquir use transfer valu need delay 422 implement propos dataracefree1 obey weak order releas con sistenc dataracefree0 section describ implement propos data requir condit propos assum arbitrarili larg sharedmemori system everi processor independ cach processor connect memori arbitrari interconnect network propos also assum directorybas writeback invalid ownership hardwar cachecoher protocol similar respect discuss agarw et al 4 one signific featur protocol invalid sent write line readonli share state acknowledg invalid processor cachecoher protocol ensur oper eventu seen processor b write locat seen order processor c processor detect oper issu complet c oper complet issu processor receiv request line cach howev write data synchron line readonli share state complet invalid processor send acknowledg either write processor may directli receiv ack nowledg directori may collect forward singl messag write processor indic complet write implement propos involv ad follow four featur uniprocessorbas processor logic base cachecoher logic mention tabl 1 2 summar featur addit three buffer per processor incomplet reserv special tabl 1 modif issu logic delay issu stall certain oper tabl 2a modif cachecoher logic allow processor retain ownership line processor reserv buffer special handl pair acquir line tabl 2b new processortoprocessor messag call empti special buffer tabl 2c discuss explain featur use implement prereleas releas acquir postacquir part data requir condit recal preced follow refer order program order prereleas condit processor must rememb oper preced releas incomplet processor use incomplet buffer store address incomplet data opera tion releas issu preced synchron oper complet prevent deadlock preced data oper issu thu incomplet buffer rememb oper requir prereleas condit distinguish oper preced follow releas entri incomplet buffer may tag multipl incomplet buffer may use releaseacquir condit acquir complet follow occur regard releas pair acquir releas complet b oper receiv releas processor acquir preced releas complet c releas processor transfer new acquir processor address incomplet oper preced releas purpos everi processor use reserv buffer store processor releas condit hold releas write oper releas processor procur ownership releas line processor give ownership address line reserv buffer consequ cachecoher protocol forward subsequ request line includ acquir pair releas releas buffer content purpos incomplet incomplet data oper processor use rememb incomplet oper processor preced releas pro cessor reserv releas processor incomplet oper use rememb releas processor may caus futur pair acquir processor need special attent special incomplet oper anoth processor receiv acquir processor use identifi oper proce requir special action due earli complet acquir processor content purpos buffer buffer insert delet event entri insert event entri delet incomplet data miss address data oper data miss complet address data oper reserv releas issu address releas oper releas com plete oper preced releas complet ie delet incomplet buffer special buffer empti address releas oper special acquir complet address receiv acquir empti special buffer messag arriv entri b insert delet action buffer tabl 1 key buffer aggress implement dataracefree1 processor releas processor stall acquir pair releas condit b c met tabl 2b give detail base cachecoher logic modifi allow releas processor retain ownership releas line reserv buffer servic acquir pair releas b c met retain ownership releas line releas processor stall releas oper processor line perform remot servic extern request line remot servic mechan allow releas processor servic request address oper special buffer action process usual data unpair synchron releas issu previou oper issu previou synchron oper complet acquir issu special buffer empti stall acquir complet ye stall delay issu oper special buffer empti modif issu logic address request reserv buffer action request processor process usual process usual read write cach line replac ment stall processor address delet reserv buffer request processor forward processor process usual releas stall request address delet reserv buffer acquir stall request special buffer empti pair releas reserv buffer complet send acquir processor releas line entri incomplet buffer tag preced releas request acquir processor cach line inform directori processor retain ownership data unpair synchron read request send line processor write request updat line processor cach send acknowledg pro request processor cach line inform directori processor retain ownership b modif cachecoher logic processor event messag incomplet buffer entri correspond releas delet send empti special buffer messag processor execut acquir pair releas c new processortoprocessor messag tabl 2 aggress implement dataracefree1 processor without allow processor cach line mechan stall oper extern releas remot servic extern oper necessari stall data oper lead deadlock servic extern releas oper remot would let new releas processor procur ownership line requir releaseacquir condit meet condit b c requir processor wait releas complet special buffer empti transfer content incomplet buffer acquir processor postacquir condit processor must stall acquir complet b delay follow oper complet conflict oper transfer acquir pur pose processor use special buffer save inform transfer acquir follow oper conflict oper store special buffer processor either stall b delay oper receiv empti special buffer messag releas processor releas processor send empti special buffer messag delet address releas pair acquir reserv buffer simplic acquir processor also stall acquir special buffer empti avoid complex delay oper incomplet oper multipl processor complet implement propos data requir condit assum process run uninterrupt processor handl context switch correctli processor must stall switch variou buffer mention empti overflow buffer also handl make processor stall entri delet relev buffer propos never lead deadlock livelock long underli cachecoher protocol implement correctli messag lost network timeout initi system cleanup gener lost messag specif propos never stall memori oper indefinit sinc propos never delay complet issu data oper ii propos delay oper certain issu data oper incomplet thu propos lead deadlock livelock 5 vs model previou section shown dataracefree1 memori model unifi weak order releas con sistenc vax model dataracefree0 section first summar memori model propos literatur examin dataracefree1 relat ibm 370 memori model 19 guarante except write follow read differ loca tion oper singl processor appear execut program order write appear execut atom 370 also provid serial oper execut serial oper processor complet oper serial oper accord program order execut nonseri oper processor complet serial oper nonserializa tion oper accord program order processor consist 11 16 pram 22 total store order 25 model ensur write given processor appear execut order processor model mainli differ whether write appear becom visibl processor simultan differ time partial store order model 25 similar total store order except order write processor separ store barrier oper model known releas consist processorconsist special oper 11 similar releas consist sequenti consist special oper except requir special oper sync nsync processorconsist concurrentconsist model 26 ensur sequenti consist program except explicitli test sequenti consist take access time consider slow memori model 18 requir read return valu previou conflict write valu written say processor p read valu earlier conflict write p return causal memori model 5 18 ensur write causal preced read observ read causal preced transit relat establish program order due read return valu write base assumpt programm prefer reason sequenti con sistenc concurr consist model explicitli state programm expect sequenti consist howev condit give sequenti consist seem ambigu difficult relat directli dataracefree1 370 model explicitli state programm expect sequenti consist howev previou section dataracefree1 use determin suffici condit follow serial oper analog synchron oper weak order ing therefor 370 appear sequenti consist dataracefre program serial oper access memori interpret synchron oper everi write serial oper pair abl everi read serial oper remain model difficult determin exactli programm expect sequenti con sistenc assumpt programm prefer reason sequenti consist true state model harder reason dataracefree1 futur hope specifi model use approach dataracefree1 ie specifi model term formal set constraint program hardwar appear sequenti consist program obey constraint call approach sequenti consist normal form investig specif provid greater insight lead unif 6 conclus mani programm sharedmemori system implicitli assum model sequenti consist share memori unfortun sequenti consist restrict use mani high perform uniprocessor optim higher perform sever altern memori model propos model 1 simpl reason 2 provid high perform believ programm prefer reason sequenti consist therefor way satisfi properti model appear sequenti consist common program give program highest perform possi ble model weak order releas consist sequenti consist special oper vax dataracefree0 base common intuit programm distinguish data synchron oper correct execut guarante along high perform howev model formal intuit differ differ advantag disadvantag respect model paper propos memori model dataracefree1 unifi weak order releas consist vax model dataracefree0 retain advantag hardwar dataracefree1 appear sequenti consist program dataracefre dataracefree1 unifi four model provid programm view similar four model permit hardwar allow four model compar weak order dataracefree1 provid formal interfac programm sinc explicitli state program correctli synchron dataracefre hardwar behav correctli synchron program sequenti consist also dataracefree1 less restrict weak order hardwar design sinc allow implement weak order allow compar releas consist dataracefree1 less restrict hardwar design sinc allow implement releas consist allow compar vax model dataracefree1 provid formal interfac sinc explicitli state program correctli synchron hardwar behav correctli synchron program compar dataracefree0 dataracefree1 less restrict hardwar design sinc allow implement take differ action differ type synchron oper acknowledg immens grate dr harold stone editor advic patienc sever revis paper also grate anonym refere mani comment suggest improv work consider thank kourosh gharachorloo mani insight discuss memori model comment earlier draft paper also thank vikram adv brian bershad allan gottlieb ross johnson alex klaiber jim laru david wood richard zucker valuabl comment earlier draft paper r weak order new definit detect data race weak memori system suffici condit implement dataracefree1 memori model evalu directori scheme cach coher implement program causal distribut share memori evalu use multiprocessor simul model asynchron parallel success overrelax symmetr linear complementar problem memori access buffer multiprocessor memori access depend sharedmemori multiprocessor memori consist event order scalabl sharedmemori multiprocessor two techniqu enhanc perform memori consist model perform evalu memori consist model sharedmemori multiprocessor detect violat prove comput scienc technic report nyu ultracomput design mimd share memori parallel comput weaken consist enhanc concurr distribut share memori make multiprocessor comput correctli execut multiprocess program pram scalabl share memori algorithm scalabl synchron sharedmemori multiprocessor seminar texa instrument research lab dalla access order coher share memori multiprocessor effici correct execut parallel program share memori studi weak consist model tr cach coher protocol evalu use multiprocessor simul model memori access buffer multiprocessor effici correct execut parallel program share memori evalu directori scheme cach coher asynchron parallel success overrelax symmetr linear complementar problem access order coher share memori multiprocessor memori access depend sharedmemori multiprocessor algorithm scalabl synchron sharedmemori multiprocessor perform evalu memori consist model sharedmemori multiprocessor prove sequenti consist highperform share memori extend abstract detect violat sequenti consist detect data race weak memori system weak orderingmyampersandmdasha new definit memori consist event order scalabl sharedmemori multiprocessor lockupfre instruct fetchprefetch cach organ ctr honghui lu alan l cox willi zwaenepoel content elimin replic sequenti section distribut share memori program acm sigplan notic v36 n7 p5361 juli 2001 alvaro e campo juan e navarro pagecoher causal consist protocol distribut share memori journal system softwar v72 n3 p305319 august 2004 l cox dwarkada p keleh h lu r rajamoni w zwaenepoel softwar versu hardwar sharedmemori implement case studi acm sigarch comput architectur news v22 n2 p106117 april 1994 leonida kontothanassi michael l scott ricardo bianchini lazi releas consist hardwarecoher multiprocessor proceed 1995 acmiee confer supercomput cdrom p61e decemb 0408 1995 san diego california unit state neve miguel castro paulo gued checkpoint protocol entri consist share memori system proceed thirteenth annual acm symposium principl distribut comput p121129 august 1417 1994 lo angel california unit state chong kai hwang perform analysi four memori consist model multithread multiprocessor ieee transact parallel distribut system v6 n10 p10851099 octob 1995 povl koch robert j fowler eric jul messagedriven relax consist softwar distribut share memori proceed 1st usenix confer oper system design implement p7e novemb 1417 1994 monterey california jo f martnez josep torrella specul synchron appli threadlevel specul explicitli parallel applic acm sigop oper system review v36 n5 decemb 2002 jame r laru brad richard guhan viswanathan lcm memori system support parallel languag implement acm sigplan notic v29 n11 p208218 nov 1994 robert stet sandhya dwarkada nikolao hardavella galen hunt leonida kontothanassi srinivasan parthasarathi michael scott cashmere2l softwar coher share memori cluster remotewrit network acm sigop oper system review v31 n5 p170183 dec 1997 ramakrishnan rajamoni alan l cox perform debug share memori parallel program use runtim depend analysi acm sigmetr perform evalu review v25 n1 p7587 june 1997 alex gontmakh avi mendelson assaf schuster use fine grain multithread energi effici comput proceed 12th acm sigplan symposium principl practic parallel program march 1417 2007 san jose california usa dejan perkov peter j keleh protocolcentr approach onthefli race detect ieee transact parallel distribut system v11 n10 p10581072 octob 2000 leonida kontothanassi robert stet galen hunt umit rencuzogullari gautam altekar sandhya dwarkada michael l scott share memori comput cluster symmetr multiprocessor system area network acm transact comput system toc v23 n3 p301335 august 2005 guang r gao vivek sarkar locat consistencya new memori model cach consist protocol ieee transact comput v49 n8 p798813 august 2000 fong pong michel duboi formal automat verif cach coher multiprocessor relax memori model ieee transact parallel distribut system v11 n9 p9891006 septemb 2000 robert c steink gari j nutt unifi theori share memori consist journal acm jacm v51 n5 p800849 septemb 2004 vijay pai parthasarathi ranganathan sarita v adv traci harton evalu memori consist model sharedmemori system ilp processor acm sigplan notic v31 n9 p1223 sept 1996 matthew j zekauska wayn sawdon brian n bershad softwar write detect distribut share memori proceed 1st usenix confer oper system design implement p8e novemb 1417 1994 monterey california xiaowei shen arvind larri rudolph commitreconcil fenc crf new memori model architect compil writer acm sigarch comput architectur news v27 n2 p150161 may 1999 fong pong michel duboi verif techniqu cach coher protocol acm comput survey csur v29 n1 p82126 march 1997 allon adir hagit attiya gil shurek informationflow model share memori applic powerpc architectur ieee transact parallel distribut system v14 n5 p502515 may dan grossman jeremi manson william pugh highlevel memori model mean transact proceed 2006 workshop memori system perform correct octob 2222 2006 san jose california jeremi manson william pugh sarita v adv java memori model acm sigplan notic v40 n1 p378391 januari 2005 jae bum lee chu shik jhon reduc coher overhead barrier synchron softwar dsm proceed 1998 acmiee confer supercomput cdrom p118 novemb 0713 1998 san jose ca h sarojadevi k nandi balakrishnan correct program execut cach coher maintain local datashar boundari distribut share memori multiprocessor intern journal parallel program v32 n5 p415446 octob 2004 rasit eskicioglu comprehens bibliographi distribut share memori acm sigop oper system review v30 n1 p7196 jan 1996