common data manag infrastructur adapt algorithm pde solut paper present design develop applic comput infrastructur support implement parallel adapt algorithm solut set partial differenti equat infrastructur separ multipl layer abstract paper primarili concern two lowest layersof infrastructur layer defin implement dynam distribut array dda layer sever dynam data program abstract implement term dda current implement abstract need formul hierarch adapt finit differ method hpadapt finit element method fast multipol method solut linear system implement sampl applic base method describ implement issu perform measur present b introduct paper describ design implement common comput infrastructur support parallel adapt solut partial differenti equat motiv research 1 adapt method util solut almost largescal scientif engin model adapt method execut largescal heterogen parallel execut environ 2 effect applic complex method scalabl parallel architectur possibl use program abstract lower complex applic structur tractabl level 3 common infrastructur famili algorithm result enorm save code effort effect infrastructur due pool focus effort goal research reduc intrins complex code parallel adapt algorithm provid appropri set data structur program abstract infrastructur develop result collabor research among comput scientist comput scientist applic domain specialist work three differ project darpa project hpadapt comput fluid dynam two nsf sponsor grand challeng project one numer rel composit materi 11 conceptu framework figur 11 hierarch problem solv environ parallel adapt algorithm solut pde figur 1 schemat percept structur problem solv environ pse parallel adapt techniqu solut partial differenti equat paper primarili concern lowest two layer hierarchi layer support implement higher level abstract bottom layer hierarch pse datamanag layer layer implement distribut dynam array dda provid array access semant distribut dynam data next layer program abstract layer add applic semant dda object layer implement data abstract grid mesh tree underli differ solut method design pse base separ concern definit hierarch abstract base separ clean separ concern 1 critic success infrastructur provid foundat sever differ solut method particular pse present paper support finit differ method base adapt mesh refin hpadapt finit element method adapt fast multipol method 12 overview paper defin common requir parallel adapt finit differ finit element method solut pde fast multipol solut linear system demonstr one data manag system base distribut dynam array dda effici meet common requir paper describ design concept underli dda sketch implement parallel adapt finit differ finit element multipol solut use dda base common conceptu basi common data manag system perform evalu method also present primari distinct ddabas data manag infrastructur packag support adapt method 1 separ data manag solut method semant 2 separ address storag semant dda design separ concern enabl preserv applic local multidimension space map distribut onedimension space comput memori effici implement dynam behavior data structur tradit use implement problem multidimension array inform array consist 1 index set lattic point ndimension discret space 2 map ndimension index set one dimension storag 3 mechan access storag associ indic dda gener tradit array target requir adapt algorithm contrast regular array dda util recurs defin hierarch index space index index space may index space storag scheme associ contigu storag span index space relationship applic array defin deriv index space directli ndimension physic domain applic problem descript adapt algorithm requir definit oper complex dynam data structur two problem aris 1 volum complex bookkeep code requir construct maintain data structur overwhelm actual comput 2 maintain access local dynam expans contract data requir complex copi oper standard storag layout use implement parallel distribut execut environ add addit complex partit distribut commun applic domain scientist engin forc creat complex data manag capabl far remov applic domain standard parallel program languag provid explicit support dynam distribut data structur data manag requir three differ adapt algorithm pde describ 21 adapt finit differ data manag requir finit differ method approxim solut pde discret grid overlaid ndimension physic applic domain adapt increas resolut discret requir region refin segment grid finer grid comput oper grid may includ local stencil base oper level resolut transfer oper level resolut global linear solv thu requir datamanag system adapt finit differ method seamless support oper across distribut refin coarsen grid storag dynam grid array point grid map point hierarch index space natur refin coarsen grid becom travers hierarchi hierarch index space 22 adapt finit element data manag requir finit element method requir storag geometr inform defin mesh element span applic domain element linear system aris finit element solut gener comput fli need store hpadapt finit element method adapt partit element smaller element h refin increas order polynomi approxim solut element p refin partit add new element chang relationship among element chang approxim function enlarg descript element datamanag requir hpadapt finit element thu includ storag dynam number element dynam size requir met map element mesh posit hierarch index space associ dynam span onedimension storag space partit element replac posit index space local index space repres expand mesh 23 adapt fast multipol data manag requir fast multipol method partit physic space subdomain store represent subdomain includ charg configur subdomain variou descript data adapt consist select partit subdomain element often gener fli storag valu forc potenti need store requir data manag capabl therefor similar adapt finit element method natur map associ subdomain point hierarch index space 24 requir summari clear extend definit array element array entiti associ index posit array object arbitrari variabl size provid one natur represent data manag requir adapt finit element adapt finit differ adapt fast multipol solver challeng demonstr effici implement array defin implement method term storag abstract difficult challeng effici paralleldistribut implement array 3 distribut dynam datamanag distribut dynam datamanag layer pse implement distribut dynam array dda layer provid pure array access semant dynam structur physic distribut data dda object encapsul distribut dynam loadbalanc commun consist manag extend visual analysi capabl current two differ implement data manag layer built dda conceptu framework 1 hierarch dynam distribut array hdda 2 scalabl dynam distribut array sdda hdda hierarch array element array recurs array dynam array array level hierarchi expand contract runtim instead hierarch array sdda implement distribut dynam array object arbitrari heterogen type differenti result differ data manag requir structur unstructur mesh unstructur mesh conveni incorpor hierarchi inform program abstract layer implement unstructur mesh two implement deriv common base implement reintegr singl implement near futur array object defin lowest layer special higher layer pse implement applic object grid mesh tree key featur dda base conceptu framework describ follow abil extract data local requir applic domain maintain local despit distribut dynam structur achiev applic principl separ concern 1 dda design overview design shown figur 31 distribut dynam array defin follow subsect figur 31 dda design separ concern hierarch abstract 31 distribut dynam array abstract sdda hdda implement distribut dynam array distribut dynam array abstract present detail 2 summar follow gener array defin data set index space inject array dynam element may dynam insert remov data set array distribut element data set distribut data set simpli finit set data object index space countabl set indic welldefin linear order relat exampl set natur number two critic point array abstract 1 cardin data set necessarili equal less cardin index space 2 element data set uniqu map element index space 32 hierarch index space spacefil curv applic partit ndimension problem domain finit number point andor region region associ uniqu coordin problem domain thu natur index scheme applic discret coordin index space defin 1 2 n j correspond discret coordin axi index space may hierarch level discret allow vari perhap correspond hierarch partit problem domain j compon hierarch index space could defin di 1 2 depth index recal index space requir welldefin linear order relat thu natur n dimension hierarch index space must effect map linear onedimension index space effici famili map defin spacefil curv sfc 3 one map defin hilbert spacefil curv illustr figur 32 map bound domain hierarch partit region region given particular order theori partit depth may infinit finit set point domain may fulli order thu sfc map defin hierarch index space theoret infinit depth applic domain map sfc bound box figur 32 hilbert spacefil curv natur index space sfc map effici defin linear order point andor subregion applic problem domain given linear order subregion distribut among processor simpli partit index space partit easili effici obtain partit linearli order index space comput load partit roughli equal figur 33 spacefil curv partit illustr process irregularli partit two dimension problem domain note figur 33 local preserv properti hilbert sfc map gener wellconnect subdomain figur 33 spacefil curv partit 33 dda implement array implement provid storag object data set access object convers function f qualiti effici array implement determin correl storag local index local expens convers function f 1 exampl convent onedimension fortran array maxim qualiti effici dda implement distribut dynam array storag object data set distribut dynam convers function f 1 provid global access object dda storag structur convers function consist two compon 1 local object storag access 2 object distribut hdda sdda implement dda use extend hash 4 5 redblack balanc binari tree 6 respect local object storag access applic instruct dda distribut data defin partit index space among processor index index space uniqu assign particular processor p storag locat particular data object determin associ index p thu storag locat dynam creat data object welldefin dda provid global access distribut object transpar cach object processor exampl applic appli dda convers function data object present local processor data object transpar copi own processor cach local processor 34 local local local dda object distribut preserv local object storag object global indic given natur index space spacefil curv map correspond domain partit dda storag local wellcorrel geometr local illustr figur 34 figur 34 local local local figur 34 applic assign sfc indic data object associ subregion domain dda store object within span indic local memori specifi processor thu geometr local subregion associ data object store processor applic program interfac api dda applic program interfac consist small set simpl method hide complex storag structur make transpar requir interprocessor commun method includ get f 1 insert new remov old repartit forc redistribut object putlockunlock cach coher control implement method vari sdda hdda howev abstract method common version dda 36 dda perform dda provid object manag servic applic distribut dynam data structur function introduc addit overhead cost access local object exampl local object access could accomplish directli via c pointer instead dda indic howev note pointer data object may invalid data object redistribut overhead cost measur sdda version dda use redblack balanc binari tree algorithm local object manag overhead cost local get local insert local remov method measur ibm rs6000 local get method retriev local data object associ input index valu ie convers function local insert method insert new data object associ specifi index new fd new local storag structur local remov method remov given data object local storag structur comput time method measur given size exist data structur present figur 35 sdda overhead local method figur 35 sdda overhead local method overhead cost local get method denot middl line figur 35 increas logarithm 2 microsecond empti sdda 8 microsecond sdda contain one million local data object slow logarithm growth expect search sdda balanc binari tree local insert method perform two oper 1 search proper point data structur insert object 2 modif data structur new object cost insert method uniform delta cost get oper thu overhead cost modifi data structur new data object independ size sdda note overhead cost local remov method denot figur 35 lowest line also independ size sdda 4 method specif data program abstract next level pse special dda object method specif semant creat highlevel program abstract directli use implement parallel adapt algorithm design abstract three differ class adapt solut techniqu pde hierarch dynam adapt grid hpadapt finit element dynam tree dynam tree data abstract upon fast multipol method implement descri 41 hierarch adapt meshrefin problem descript figur 41 adapt grid hierarchi 2d bergerolig amr scheme dynam adapt numer techniqu solv differenti equat provid mean concentr comput effort appropri region comput domain case hierarch adapt mesh refin amr method achiev track region domain requir addit resolut dynam overlay finer grid region amrbas techniqu start base coars grid minimum accept resolut cover entir comput domain solut progress region domain requir addit resolut tag finer grid overlay tag region coars grid refin proce recurs region finer grid requir resolut similarli tag even finer grid overlay region result grid structur dynam adapt grid hierarchi adapt grid hierarchi correspond amr formul berger olig 7 shown figur 41 distribut datastructur hierarch amr two basic distribut datastructur develop use fundament abstract provid hdda support adapt finitediffer techniqu base hierarch amr 1 scalabl distribut dynam grid sddg distribut dynam array use implement singl compon grid adapt grid hierarchi 2 distribut adapt grid hierarchi dagh defin dynam collect sddg implement entir adapt grid hierarchi sddgdagh datastructur design base linear represent hierarch multidimension grid structur represent gener use spacefil curv describ section 3 exploit selfsimilar recurs natur map repres hierarch dagh structur maintain local across differ level hierarchi spacefil map function also use encod inform origin multidimension space spacefil index given index possibl obtain posit origin multidimension space shape region multidimension space associ index spacefil indic adjac detail descript design datastructur found 8 figur 42 sddg represent figur 43 dagh composit represent sddg represent multidimension sddg repres one dimension order list sddg block list obtain first block sddg achiev requir granular order sddg block base select spacefil curv granular sddg block system depend attempt balanc computationcommun ratio block block list assign cost correspond comput load figur 42 illustr represent 2dimension sddg partit sddg across process element use represent consist appropri partit sddg block list balanc total cost processor sinc spacefil curv map preserv spatial local result distribut compar tradit block distribut term commun overhead dagh represent dagh represent start simpl sddg list correspond base grid grid hierarchi appropri incorpor newli creat sddg within list base grid get refin result structur composit list entir adapt grid hierarchi incorpor refin compon grid base sddg list achiev exploit recurs natur spacefil map refin region sddg sublist correspond refin region replac child grid sddg list cost associ block new list updat reflect combin comput load parent child dagh represent therefor composit order list dagh block dagh block repres block entir grid hierarchi may contain one grid level ie interlevel local maintain within dagh block figur 43 illustr composit represent two dimension grid hierarchi amr grid hierarchi partit across processor appropri partit linear dagh represent particular partit composit list balanc cost associ processor result composit decomposit hierarchi key featur decomposit minim potenti expens intergrid commun maintain interlevel local partit figur 44 sddgdagh storag datastructur storag maintain hdda describ section 3 overal storag scheme shown figur 44 program abstract hierarch amr figur 45 program abstract parallel adapt meshrefin develop three fundament program abstract use datastructur describ use express parallel adapt comput base adapt mesh refin amr multigrid techniqu see figur 45 object twofold first provid applic develop set primit intuit express applic second separ datamanag issu implement applic specif oper grid geometri abstract purpos grid geometri abstract provid intuit mean identifi address region comput domain abstract use direct comput particular region domain mask region includ given oper specifi region need resolut refin grid geometri abstract repres coordin bound box doubli link list bound box coordin coordin abstract repres point comput domain oper defin class includ index arithmeticlog manipul oper independ dimension domain bound box bound box repres region comput domain compris triplet pair coord defin lower upper bound box step array defin granular discret dimens addit regular index arithmet oper scale translat union intersect also defin bound box bound box primari mean specif oper storag intern inform depend commun inform within dagh bound box list list bound box repres collect region comput domain list typic use specifi region need refin regrid phase adapt applic addit linkedlist addit delet step oper reduct oper intersect union also defin bboxlist grid hierarchi abstract grid hierarchi abstract repres distribut dynam adapt grid hierarchi underli parallel adapt applic base adapt meshrefin abstract enabl user defin maintain oper grid hierarchi firstclass object grid hierarchi attribut includ geometri specif domain structur base grid extent boundari inform coordin inform refin inform inform natur refin refin factor use use paralleldistribut environ grid hierarchi partit distribut across processor serv templat applic variabl grid function local preserv composit distribut 9 base recurs spacefil curv 3 use partit dynam grid hierarchi oper defin grid hierarchi includ index individu compon grid hierarchi refin coarsen recomposit hierarchi regrid queri structur hierarchi instant regrid repartit new grid structur dynam loadbalanc requir datamov initi newli creat grid perform automat transpar grid function abstract grid function repres applic variabl defin grid hierarchi grid function associ grid hierarchi use hierarchi templat defin structur distribut attribut grid function includ type inform depend inform term space time stencil radii addit user assign special fortran routin grid function handl oper intergrid transfer prolong restrict initi boundari updat inputoutput function call intern oper distribut grid function addit standard arithmet logic manipul number reduct oper minmax sumproduct norm also defin grid function gridfunct object local oper regular fortran 9077 array 42 definit hpadapt finit element mesh hpadapt finit element mesh data structur consist two layer abstract illustr figur 46 first layer consist domain node abstract second layer consist mesh specif abstract vertex edg surfac special node abstract figur 46 layer mesh abstract mesh domain finit element applic special sdda domain use sdda store distribut dynam set mesh node among processor domain provid map ndimension finit element domain onedimension index space requir dda finit element mesh node associ set finit element basi function particular locat problem domain node also support internod relationship typic captur properti internod local special finit element mesh node twodimension problem summar follow tabl illustr figur 47 mesh object refer locat relationship vertex vertex point edg midsid point vertex endpoint element owner irregular edg constraint element centroid point edg boundari element refin heirarchi figur 47 mesh object relationship extend relationship mesh node obtain minimul set relationship given exampl extend relationship relationship path element vertex element edg vertex element element element edg element normal element element element edg edg element constrain finit element hadapt consist split element smaller element merg previous split element singl larger element finit element padapt involv increas decreas number basi function associ element applic perform hpadapt dynam respons error analysi finit element solut hpadapt result creation new mesh node specif new relationship follow hpadapt mesh partit may lead load imbal applic may repartit problem dda significantli simplifi dynam data structur updat repartit oper insur data structur consist throughout oper 43 adapt tree adapt distribut tree requir two main piec inform first need tree data structur method get put prune node tree infrastructur requir pointer node second adapt tree need estim cost associ node tree order determin refin take place node two abstract algorithm util adapt tree comput point develop distribut fast multipol method base balanc tree goal creat mildli adapt tree near futur adapt tree could defin either dda implement describ done use sdda refer tree made gener pointer concept pointer implement indic sdda access control access sdda data object appropri action index control provid uniform interfac distribut data structur processor thu distribut adapt tree support sdda actual content node includ list item 1 index node deriv geometr locat node 2 pointer parent children node 3 array coeffici use comput 4 list pointer node given node interact inform store node call subdomain expect work subdomain deriv amount comput perform specifi data adapt determin basi expect work given node rel threshold addit sinc node regist sdda also comput total expect work per processor collect total expect work per processor expect work per subdomain simpl load balanc implement repartit index space 5 applic code follow sketch applic express term parallel adapt mesh refin method parallel hpadapt method parallel manybodi problem built program abstract built upon dda 51 numer rel use hierarch amr distribut adapt version h3expresso 3d numer rel applic implement use datamanag infrastructur present paper h3expresso 3d numer rel applic develop nation center supercomput applic ncsa univers illinoi urbana h3expresso develop nation center supercomput applic ncsa univers illinoi urbana concentr version full h version 33 code solv gener relativist einstein equat varieti physic scenario 10 origin h3expresso code nonadapt implement fortran 90 represent overhead figur 51 dagh overhead evalu overhead propos daghsddg represent evalu compar perform handcod unigrid fortran 90mpi implement h3expresso applic version built use datamanag infrastructur handcod implement optim overlap comput interior grid partit commun boundari store boundari separ array figur 51 plot execut time two code dagh implement faster number processor composit partit evalu result present obtain 3d base grid dimens 8 x 8 x 8 6 level refin refin factor 2 figur 52 dagh distribut snapshot figur 53 dagh distribut snapshot ii figur 54 dagh distribut snapshot iii figur 55 dagh distribut snapshot iv load balanc evalu load distribut gener composit partit scheme consid snapshot distribut grid hierarchi arbitrari time integr normal comput load processor differ snapshot plot figur 52155 normal perform divid comput load actual assign processor comput load would assign processor achiev perfect loadbal latter valu comput total comput load entir dagh divid number processor residu load imbal partit gener tune vari granular sddgdagh block smaller block increas regrid time result smaller load imbal sinc amr method requir redistribut regular interv usual critic abl perform redistribut quickli optim distribut commun prolong restrict intergrid oper perform local processor without commun synchron partit overhead tabl 51 dynam partit overhead partit perform initi base grid entir grid hierarchi everi regrid regrid level l compris refin level l level finer gener distribut new grid hierarchi perform data transfer requir initi new hierarchi tabl 51 compar total time requir regrid ie refin dynam repartit load balanc datamov time requir grid updat valu list cumul time 8 base grid timestep 7 regrid oper 52 hpadapt finit element code parallel hpadapt finit element code comput fluid dynam develop hpadapt finit element comput fluid dynam applic two exist implement 1 sequenti fortran code 2 parallel fortran code fulli duplic data structur hpadapt finit element data structur complex great tractabl distribut fortran data structur parallel fortran implement scalabl due memori consum processor duplic data structur make tractabl develop fulli distribut hpadapt finit element data structur necessari achiev separ concern complex hpadapt finit element data structur complex distribut dynam data structur gener separ concern develop fulli distribut hpadapt finit element data structur provid initi motiv develop sdda organ new finit element applic illustr figur 56 core applic architectur index space index space provid compact succinct specif partit applic problem among processor specif use distribut mesh structur sdda defin compat distribut vector matric form finit element method figur finit element applic architectur finit element applic use second parallel infrastructur support distribut vector matric denot lower right corner figur 56 current releas infrastructur document 11 dda linear algebra infrastructur base upon common abstract index space common provid finit element applic uniform abstract specifi data distribut 53 nbodi problem gener descript figur 57 data flow fast multipol algorithm nbodi particl problem aris variou scientif disciplin appear requir comput method howev threshold number particl surpass approxim interact particl interact suffici separ particl cluster allow comput effort substanti reduc best known fast summat approach fast multipol method 12 certain assumpt give method fast multipol method typic divid conquer algorithm cubic comput domain recurs subdivid octant finest level influenc particl within cell onto suffici separ cell subsum multipol seri expans multipol expans combin upper level root octtre contain multipol expans local seri expans influenc suffici separ multipol expans cell form final revers travers octtre contribut cell distribut children cf figur 57 algorithm reli scale properti allow cell scale children suffici separ close scale current parent finest level influenc suffici separ cell taken account togeth interact particl remain closebi cell mathemat orient descript share memori implement without period boundari condit refer 1314 refer therein figur 57 show fast multipol algorithm readili decompos three princip stage 1 popul tree bottomup multipol expans 2 convert multipol expans local expans 3 distribut local expans topdown three stage perform sequenti order easili possibl parallel stage individu second stage interact set cell defin set cell suffici separ cell parent suffici separ cell parent cell local expans center cell found ad influenc cell interact set cell oper found complet independ notic major commun requir differ processor incur stage henc optim commun pattern second stage account larg perform gain detail analysi nonadapt algorithm reveal optim perform attain leafcel contain optim number particl therebi balanc work direct calcul convers multipol expans local expans second stage distribut fast multipol result figur 58 total execut time sp2 vs problem size multipl level approxim next describ preliminari perform result distribut fast multipol method implement hdda verifi fast multipol method comput exact answer fix resolut comput domain test problem construct store one particl chosen randomli per leaf cell comparison repeat sever small problem certain algorithm behav expect perform measur taken 16 node ibm sp2 parallel comput run aix version 41 total run time use 3 4 5 level approxim varieti problem size 1 2 4 8 processor present figur 58 also plot expect run time align 8 processor result curv repres total execut time fix level spatial resolut increas number particl comput two major compon run time approxim time direct calcul local particl approxim time function number level resolut fix curv direct calcul time grow 2 within given curv problem size two time equal repres optim number particl store per subdomain optim problem size appear knee total execut time curv curv 8 processor align rel well run time problem size thu algorithm appear scalabl problem consid furthermor result show 1 processor longest time 8 processor shortest time indic speedup attain ideal one would expect processor achiev speedup 8 present result fast multipol method demonstr comput complex result exhibit scalabl speedup small number processor preliminari result focus valid accuraci next step perform tune algorithm 6 conclus futur work signific conclus demonstr herein 1 common underli comput infrastructur wide famili parallel adapt comput algorithm 2 substanti decreas effort implement import algorithm attain without sacrific perform use comput infrastructur much research need complet develop robust support comput infrastructur adapt algorithm exist version dda requir extens engin program abstract solut method requir enrich hope extend program abstract layer support adapt method wavelet method need mani applic defin requir program abstract layer interfac acknowledg research jointli sponsor argonn nation laboratori enrico fermi scholarship award manish parashar binari blackhol nsf grand challeng nsf acsphi 9318152 arpa contract dabt 6392c0042 nsf nation grand challeng program grant ecs9422707 author would also like acknowledg contribut jrgen singer paul walker joan masso work r system engin high perform comput softwar hddadagh infrastructur implement parallel structur adapt mesh refin parallel infrastructur scalabl adapt finit element method applic least squar cinfin colloc databas system concept linear hash new tool file tabl address adapt meshrefin hyperbol partial differenti equat distribut dynam datastructur parallel adapt meshrefin partit dynam adapt grid hierarchi hyperbol system numer rel robert van de geijn rapid evalu potenti field particl system parallel fast multipol method molecular dynam parallel implement fast multipol method period boundari condit tr algorithm parallel fast multipol method molecular dynam databas system concept partit dynam adapt grid hierarchi ctr yun chri h q ding coupl multicompon model mph distribut memori comput architectur intern journal high perform comput applic v19 n3 p329340 august 2005 faith e sevilgen sriniva aluru unifi data structur hierarch method proceed 1999 acmiee confer supercomput cdrom p24e novemb 1419 1999 portland oregon unit state sumir chandra manish parashar toward autonom applicationsensit partit samr applic journal parallel distribut comput v65 n4 p519531 april 2005 chandra x li parashar engin autonom partit framework gridbas samr applic high perform scientif engin comput hardwaresoftwar support kluwer academ publish norwel 2004 karen devin bruce hendrickson erik boman matthew st john courtenay vaughan design dynam loadbalanc tool parallel applic proceed 14th intern confer supercomput p110118 may 0811 2000 santa fe new mexico unit state andrew wissink richard hornung scott r kohn steve smith noah elliott larg scale parallel structur amr calcul use samrai framework proceed 2001 acmiee confer supercomput cdrom p66 novemb 1016 2001 denver colorado j malard r stewart distribut dynam hash tabl use ibm lapi proceed 2002 acmiee confer supercomput p111 novemb 16 2002 baltimor maryland valerio pascucci randal j frank global static index realtim explor larg regular grid proceed 2001 acmiee confer supercomput cdrom p22 novemb 1016 2001 denver colorado jame c brown madulika yalamanchi kevin kane karthikeyan sankaralingam gener parallel comput desktop grid p2p system proceed 7th workshop workshop languag compil runtim support scalabl system p18 octob 2223 2004 houston texa johan steensland sumir chandra manish parashar applicationcentr character domainbas sfc partition parallel samr ieee transact parallel distribut system v13 n12 p12751289 decemb 2002