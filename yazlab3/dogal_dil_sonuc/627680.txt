implement tempor integr constraint use activ dbm abstractth paper propos gener architectur implement tempor integr constraint compil set activ dbm rule modular design allow easi adapt differ environ differ specif languag target rule system easili accommod advantag architectur demonstr particular tempor constraint compil compil allow automat translat integr constraint formul past tempor logic rule activ dbm current version compil two activ dbm support starburst ingr compil set constraint check safe evalu properti result set sql statement includ necessari rule need enforc origin constraint rule optim reduc space overhead introduc integr check mechan need addit runtim constraint monitor rule activ updat databas violat constraint automat reject ie correspond transact abort addit straightforward implement approach offer clean separ applic program integr check code b introduct inc introduct databas notion data consist integr constraint play import role databas applic design process integr constraint usual divid two categori static refer static snapshot databas tempor refer sequenc snap shot order time tempor constraint allow impos restrict transact databas like salari employe decreas student drop readmit propos gener architectur tempor integr constraint compil base compil tempor specif ie set tempor constraint set first order logic fol definit fol serv conveni intermedi languag fol definit convert set activ rule enforc specifi constraint without need addit runtim constraint monitor arrang allow easi modif system incorpor differ queryconstraint languag uniform way addit show architectur accommod number differ optim techniqu im manuscript receiv oct 3 1994 j chomicki toman current depart comput inform scienc kansa state univers man hattan ks 66506 email fchomickidavidgcisksuedu ieeec log number k95048 plement instanti gener architectur fix constraint languag past tempor logic pasttl current implement produc code starburst 6 ingr 20 activ dbm implement allow user specifi constraint declar instead embed integr check applic program advantag declar specif clear design concentr constraint enforc instead enforc lead also much compact understand applic program moreov applic program integr constraint specif form independ modul allow build modular applic one modul specifi integr constraint pursu approach taken 1 3 propos languag specifi tempor integr constraint pasttl formula truth formula state n depend finit histori tempor databas ie past time n approach detect violat constraint name situat constraint true state n gamma 1 true state n also develop spaceoptim techniqu propos architectur optim introduc two differ level first optim deal specif languag pasttl second intermedi languag fol perform optim need keep mind ffl deal tempor constraint mean optim need explicitli handl progress time ffl final goal compil produc set activ rule particular mean formula convert appropri dml eg sql optim techniqu preserv convert chosen languag cf section v vi far work integr constraint mainli focus effici detect constraint violat gener integr constraint includ 5 difficult enforc effici thu generalpurpos integr enforc subsystem current present experiment databas system commerci dbmss usual enforc simplest constraint eg constraint primari foreign key 5 static constraint studi mani paper eg 9 usual formul fol deal tempor constraint choic tempor logic seem natur solut implement ieee transact knowledg tempor constraint ralg2sql rule gener transform algebra order inform fol2sql magic set transform rule activ fig 1 structur system restrict languag past fragment tempor logic tempor logic tempor oper refer sole past constraint check done use spaceeffici encod databas histori 1 util activ rule import advantag compar method integr enforc need standalon tempor integr mon itor use separ monitor would improv effici would evalu essenti set queri databas rule howev would duplic transit datastructur maintain alreadi activ dbm sever recent propos gener constraint manag subsystem especi 7 10 13 first paper 7 develop sqlbase constraint specif languag show sever techniqu convert specif trigger starburst sy tem system allow fulli automat translat logic formula starburst rule also static constraint cover approach second approach 10 closer work tempor logic chosen constraint specif languag compar languag futur fragment approach quantifi logic formula restrict pattern also check formula safe evalu properti sole user respons wherea method accept arbitrari pasttl formula long safe convert relat alg bra unsaf formula reject system anoth approach found 13 tempor languag chosen approach use nonstandard freez quantifi instead firstord one express power constraint languag depend underli queri languag detail comparison approach relat work see 3 paper organ follow section ii describ overal structur system section iii introduc syntax semant specif languag section iv transform constraint rule languag activ dbm shown gener schema gener activ rule instanti use starburst ingr activ dbm suitabl respect rule languag briefli discuss compil use fol sql translat describ section v one step use modif approach 4 section vi develop spacesav optim minim overhead connect constraint enforc mechan paper conclud discuss possibl futur extens system ii system architectur gener architectur consist follow basic build block 19 ffl tempor constraint languag fol compil ffl fol dml compil ffl rule gener system extend architectur provid number optim modul overal structur system shown figur 1 ffl first step algebra transform origin formula perform unless addit inform suppli conserv transform perform ffl tl2fol modul convert pasttl formula set fol formula also produc inform need translat fol formula activ rule partial order inform ffl variant magic set transform 18 appli fol formula produc tl2fol pass transform may also modifi order inform ie incompar element may becom compar ffl fol2sql modul respons convert fol relat algebra sql consist two submodul fol2ralg convert fol formula relat algebra normal form ranf 4 express express combin magic condit produc magic set transform also convert relat algebra normal form use modifi fol2ralg algorithm cf algorithm 36 output chomicki toman implement tempor integr constraint use activ dbm 3 two modul put back togeth end ralg2sql modul gener final sql statement ffl rule gener modul combin inform provid tl2fol modul sql statement produc fol2sql modul creat activ rule arrang allow easi modif futur easili adopt differ rule system chang rule generatorthi featur demonstr implement support two conceptu differ rule system differ dml chang ralg2sql subsystem possibl rule gener differ specif languag also introduct addit optim techniqu easili embed current system fol serv conveni intermedi languag iii specif languag section give brief overview syntax semant pasttl languag use system standard notat tempor formula use full descript tempor logic see 8 15 pasttl languag defin smallest set formula built use follow rule atom relat r databas constant variabl xaey ae 2 f 6 g x variabl constant b b 9xa sinc b 5a b pasttl formula semant truth valu close formula defin respect underli histori databas state databas time follow 9xa interpret standard fol formula appropri state 5a true 0 true igamma1 sinc b true b true k true j constraint specifi close formula pasttl must satisfi everi state histori databas follow text use follow standard ab breviat 8xa 9xa 3a true sinc 1a 3a exampl 3 use pasttl constraint salari employe decreas express constraint student drop readmit truth pasttl constraint determin respect histori databas constraint c 2 true current moment element x x relat admit ie current state databas also x relat dropout past ie past state databas constraint specif consist definit databas schema includ type attribut follow list constraint constraint specifi identifi name follow close pasttl formula iv tempor inform manag first show convert given pasttl formula singl fol formula set induct defin auxiliari atom definit later convert auxiliari relat activ rule section vi introduc optim techniqu help cut space overhead introduc tl2fol pass compil pasttl fol naiv approach check past tempor constraint evalu formula respect whole histori practic accept everi past state databas would store avoid problem provid spaceeffici encod histori 1 3 use number auxiliari atom implement materi view obtain atom definit convert everi pasttl formula set fol formula definit 4 tl2fol let f formula pasttl 1 tempor subformula ff replac auxiliari atom r ff introduct atom result creat auxiliari relat r ff target code ariti r ff equal number free variabl ff type attribut type correspond variabl ff 2 auxiliari atom r ff tempor subformula ff defin follow tabl ff auxiliari atom definit ff fals sinc b r 0 ff fals superscript 0 denot appropri tempor state databas formula evalu 3 remain formula ie substitut made defin toplevel fol translat origin pasttl constraint superscript n symbol refer databas state specif number note alway last two consecut state referenc frameworkth definit induct length databas histori evalu increment transit new state simpli comput new interpret auxiliari atom current terpret rest paper use r ff denot formula defin new interpret auxiliari atom r ff gener auxiliari atom order follow partial order definit 5 order r ff oe r fi ff subformula fi toplevel constraint alway top element order exampl use approach constraint employe hire left express pasttl convert follow get one toplevel fol formula per pasttl constraint one induct definit auxiliari atom per tempor subformula origin formula exampl two tempor subfor mula one free variabl first order translat look follow name fo translat r ff 2 oe c note auxiliari atom definit refer state n n gamma 1 toplevel constraint c refer state n allow us check toplevel constraint everi state particular initi 0th state databas auxiliari atom fals ie correspond auxiliari relat empti definit end transform obtain one fol formula repres toplevel constraint sever formula defin induct truth valu auxiliari atom r ff gener origin pasttl formula order oe evalu ie remateri auxiliari relat r ff toplevel constraint inform use activ rule gener next phase compil process b mainten auxiliari relat convers tempor constraint fol gener set auxiliari atom definit auxiliari atom repres auxiliari relat result code content auxiliari relat kept date agreement definit 4 achiev automat use activ dbm rule system specifi constraint sql statement repres toplevel constraint list sql statement defin next state auxiliari relat suppli one one fol2sql modul subformula order oe defin use input rule gener rule gener compos piec set activ dbm rule ideal case syntax use rule shown figur 2 case simpli creat rule sql statement follow translat fol formula sql includ option optim step constraint c creat rule follow toplevel constraint c one rule constraint translat toplevel fol formula creat tl2fol phase creat rule c commit rollback work rule trigger transact attempt commit ie actual commit necessari case tempor constraint even null transact possibl violat constraint note happen static constraint use exampl 7 consid constraint 9xpx 5px constraint violat arbitrari element x relat p two consecut state clearli p empti null transact violat constraint auxiliari atom let r ff formula defin r n ff auxiliari atom r ff whole definit r ff r 0 ff fals r n creat auxiliari relat ie tabl atom r ff creat tabl r ff listofattribut statement also defin 0th stateth tabl empti correspond r 0 ff fals proper transit next state r ff achiev automat follow rule use second part induct definit r ff name r n creat rule r ff commit updat r ff r ff preced c fr fi jr ff oe r fi g rule also trigger transact tri com mit execut rule updat auxiliari relat r ff guarante consist auxiliari tabl proper order trigger rule defin subformula order oe reflect preced claus rule bodi rule correspond subformula process prior rule evalu sql statement need access tabl referenc atom may refer ngamma1st state databas previou state databas ie old content rela tion store databasethi would requir maintain two copi almost data instead transit tabl use restor previou state databas note transit inform relat r maintain dbm anyway order allow abort transact access inform provid system maintain transit tabl insertedr deletedr oldupdatedr newupdatedr state n gamma 1 relat r restor chomicki toman implement tempor integr constraint use activ dbm 5 creat rule rulenam sql predic sql action preced rulenam follow rulenam fig 2 ideal rule syntax commit rule system check guard rule guard true evalu condit condit satisfi execut action specifi claus evalu order rule control preced follow claus part rule mandatori moreov tabl specifi claus system provid appropri transit tabl insert delet oldupd newupd 6 r exampl 8 finish exampl 6 system gener follow code rule toplevel constraint creat rule c commit 9xr ff 1 rollback work two rule maintain auxiliari tabl r ff 1 r ff 2 creat rule ff 1 commit updat r ff 1 preced c creat rule ff 2 commit updat r ff 2 emp preced c problem sql actual dml rule languag usual allow express rule need enforc constraint di rectli implementor rule gener face two main obstacl ffl problem data manipul languag ffl problem rule system use overhead introduc restrict dml rule system languag summar figur 3 c1 view remateri new state auxiliari relat r ff comput sql equival fol formula r ff need replac whole content tabl repres r ff r ff may referenc r ff done analysi view materi notic next state auxiliari relat r ff defin one follow formula first case solv follow sql code delet r ff insert r ff appli idea second case need reformul assign statement 2 equival sql insert delet oper follow delet r ff x r insert r x list attribut r ff easi see two oper equival origin assign ment disadvantag solut compil right side assign singl formula must produc two separ sql statement exampl 9 continu exampl updat oper auxiliari tabl r ff 1 r ff 2 replac insert r ff 1 delet r ff 2 insert r ff respect note first updat simplifi remov delet oper due structur definit gener subformula root connect 3 c2 restrict rule languag syntax semant activ rule system vari greatli among activ dbm implement current support two major approach rule system setori rule system repres system starburst activ dbm rule languag starburst close ideal rule syntax cf figur 2 howev restrict rule syntax make direct applic rule templat previou section possibl especi ffl refer transit tabl allow insid rule bodi transit inform tabl associ particular rule avail ffl rule connect exactli one tabl mean rule trigger associ tabl access moreov trigger defin term net effect transact tablecommit may abl trigger rule even associ tabl access ie updat empti net outcom slightli compromis claim constraint 6 ieee transact knowledg number starburst ingr rule ct c4t3b c4t4b auxiliari tabl 3t2b1 3t2b1 virtual view 0 0 u databas procedur 0 0 c3t3b1 cnumber constraint tnumber tempor connect bnumber base tabl unumb embed disjunct fig 3 size code gener variou system enforc mechan independ appli cation safe side applic updat auxiliari commit tabl introduc purpos actual commit avoid allow rule trigger attempt commit thu rule must associ commit tabl constraint violat null transact safe associ rule individu tabl workaround problem follow tabl includ auxiliari tabl r ff use two addit auxiliari transit tabl add sub hold tupl insert delet tabl respect creat tabl add listofattribut creat tabl sub listofattribut view old allow access previou state tabl rule follow creat view old select minu select add union select sub also need add rule keep inform date constraint check phase use one rule extract transit inform two rule need cleanup auxiliari tabl constraint check finish evalu rule synchron remain rule use preced follow claus creat rule old inserteddeletedupd insert sub select delet union distinct select oldupd insert add select insert union distinct select newupd preced list rule use old creat rule del add add insert delet add follow c creat rule del sub sub insert delet sub follow c rule tabl use mere extract transit inform end transactiondur execut transact transit inform manag dbm fix simpl chang syntax rule languag note also tabl add sub clear end constraint check phase thu alway empti transact ultim commit allow store temporari storag may improv effici system constraint vi olat whole transact abort transit tabl empti system automat exampl 10 constraint exampl 6 similarli ideal case one rule creat enforc toplevel constraint creat rule c commit insert 9xr ff 1 rollback work two rule creat maintain auxiliari relat note rule connect addit auxiliari tabl commit need case null transact see exampl 7 creat rule ff 1 commit insert insert r ff 1 preced c creat rule ff 2 commit insert delet r ff 2 insert r ff 2 preced addit system gener rule maintain content auxiliari transit tabl tupleori rule system case tupleori system like ingr access previou state databas relat provid use transit inform similarli starburst case howev transit inform maintain addit rule auxiliari transit tabl 1 also starburst capabl order individu rule compil explicit sequenc ingr statement code produc rule gener look follow 1 everi tabl databas auxiliari rela tion pair addit auxiliari transit tabl look similar add sub tabl introduc case starburst rule howev starburst case tabl use overcom syntact restrict rule system transit inform maintain dbm case ingr tabl essenti mimick starburst intern capabl chomicki toman implement tempor integr constraint use activ dbm 7 store transit inform need creat tabl add attribut creat tabl sub attribut content tabl maintain use ingr rule trigger insert delet updat oper tabl rule maintain content transit relat durat whole transact effect duplic transit inform manag dbm case abort transact howev assum small chang base relat everi transact size duplic inform signific compar size whole databas ingr rule languag rule connect singl databas procedur rule come pair correspond databas procedur creat procedur tinsert attribut insert add valu attribut creat procedur tdelet attribut insert sub valu attribut creat rule tin insert execut procedur tinsert newattrib creat rule tdel delet execut procedur tdelet oldattrib creat rule tupdatein updat execut procedur tinsert newattrib creat rule tupdatedel updat execut procedur tdelet oldattrib end constraint check transit tabl clean use follow rule creat procedur delet add delet sub creat rule tdoclean delet commit execut procedur tcleanup 2 actual code produc translat tempor constraint ie definit auxiliari relat togeth toplevel constraint use bodi singl main rule avoid need synchron rule creat procedur c declar n integ begin updat r ff n updat r ff 1 select true exist creat rule c go insert commit execut procedur c main r ff n oe c thu updat oper execut bodi rule correct order 3 rule gener constraint synchron cleanup rule use follow master procedur use addit auxiliari tabl commit creat tabl commit integ creat procedur docommit begin insert commit valu 1 delet commit commit els rollback applic use execut docommit statement place commit statement exampl 11 constraint exampl 6 produc follow ingr procedurerul pair creat procedur c declar n integ begin delet r ff 2 insert r ff insert r ff 1 select true exist creat rule c go insert commit execut procedur c main code come rule maintain content auxiliari transit tabl note separ rule individu auxiliari relat gener tempor subformula origin constraint v compil fol formula next issu need address compil fol formula specifi toplevel constraint auxiliari relat relat algebra eventu sql done two step first formula convert relat algebra normal form sql convers fol formula relat algebra base idea present 4 definit care convert function take advantag structur formula work reduc number pass need travers input formula two lead effici bottomup execut convers relat algebra sql usual paid attent seem easi task turn straightforward variou restrict sql languag mani fig 4 bottomup comput gen con properti workaround invent get system run ning present version produc standard sql ie accept commerci dbmss starburst variant system take advantag extens sql present system sql92 standard 5 contain extens unfortun avail dbm like ingr first order logic relat algebra normal form whole convers consist two phase first fol formula check safe evalu properti join anomali detect simultan simplifi normal form enf formula pass phase guarante equival safe reformul relat algebra second step simplifi formula convert relat algebra normal form ranf step remov join anomali a1 join anomali detect set variabl fg set distinct tag g stand gen c con f gen con use terminolog 4 l set fi nite disjunct atom base relat defin set theta l annot free variabl fol formula follow induct definit oper u set annot free variabl defin figur 4 use follow notat rest paper underscor abbrevi fresh existenti quantifi variabl eg 9z abbrevi decis given formula f evalu ie safe convert formula equival relat algebra express base fv set follow definit 13 fol formula f call evalu 1 f 2 subformula 9xa f call allow second condit replac x f evalu properti key distinguish formula safe convert see 4 detail discuss convers formula meet criterion may lead join anomali unsaf reformul origin formula formula must reject specif languag tempor constraint pasttl evalu properti extend pasttl formula follow definit 14 pasttl formula evalu fol translat evalu ie toplevel constraint evalu definit auxiliari view evalu well a2 convers allow simplifi formula step done simultan detect evalu properti travers term repres given formula construct set fv togeth equival simplifi formula defin follow definit 15 formula f simplifi 1 conjunct polyad represent 2 2 disjunct polyad represent 3 connect may occur root formula insid conjunct 4 disjunct insid negat 5 conjunct neg formula insid negat form 9xa b 7 subformula form 9xa b meet requir definit 15 convert conjunct disjunct given formula finit nest binari connect replac singl polyad connect oper list argument chomicki toman implement tempor integr constraint use activ dbm 9 follow polyad represent 3 gamma note separ posit neg conjunct requir definit 15 help enforc requir definit especi deal negat use follow algorithm travers input formula determin satisfi evalu properti reject formula simultan build equival simplifi formula start atom use rule creat complex formula use constructor fol connect constructor design preserv simplifi properti algorithm 16 let f fol formula casesf atom ffl b atraverseatraverseb b otraverseatraverseb 9xa extraversea constructor n defin figur 5 definit constructor e complex definit 17 let simplifi formula build simplifi formula correspond 9xa first check form case perform follow transform oex otherwis distinguish follow case depend variabl bound quantifi 1 x free drop quantifi 2 evalu reject 3 x c g 2 fv evalu perform transform obtain equival allow mula transform describ 4 defin follow 9xa gamma g third compon x c g element fv athi finit disjunct atom denot sequenc existenti quantifi bind free variabl g x r agfals atom occur g replac fals note right side transform g r built use n e function order preserv simplifi properti 3 follow section use follow notat list ffl empti list ab concaten list identifi singl element one element list 4 x allow simpli add quantifi remov x fv accord rule build fv fv 0 set note besid transform formula simplifi formula also comput fv fv 0 set annot variabl figur 4 done simultan simplif process rule comput fv fv 0 set match exactli structur formula fv set use detect evalu properti see definit 17 19 lemma 18 algorithm 16 convert input formula equival simplifi x subformula 9xa f reject formula evalu induct structur input mula constructor n e preserv simplifi properti formula construct formula also simplifi algorithm togeth definit 17 give recip convers fol formula simplifi formula order convert simplifi formula relat algebra need perform one transform definit 19 formula f allgen properti f properti easi check moreov theorem 20 let f simplifi formula built atom use n e constructor f allgen properti f allow easi see condit definit satisfi moreov variabl bound 9 satisfi requir second part definit 9 quantifi construct use e use transform abl separ evalu formula ie formula abl eventu convert sql nonevalu formula convert allow formula rule build simplifi formula guarante free variabl obtain formula rang restrict a3 convers ranf convert formula relat algebra need one convers proper evalu formula need propag allgen properti definit 19 subformula formula follow rememb evalu relat algebra bottomup definit 21 subformula 0 call gener form b simplifi allow formula ranf gener subformula allgen properti lemma 22 let f allow simplifi formula convert equival formula f 0 ranf induct rule appli f recurs accord toplevel connect atom ranf definit ffl l n fig 5 rule bottomup construct simplifi formula tabl defin rewrit rule allow construct complex simplifi formula first line column defin pattern ie left side rule bodi tabl defin result rewrit see algorithm 16 9xa definit e constructor variabl free fv also free fv 9xa thu allgena hold assumpt l let allgenl hold let x free l assum l 2 l x definit fv set formula contradict thu allgenl impli know allgenp n guarante member p n share properti use follow transform propag allgen properti element p also element n follow posit conjunct definit simplifi formula know element p either atom union definit fv allgen properti hold atom let l element p allgenl hold variabl fx g sumption whole conjunct allgen properti must exist p 0 ae p k distribut p 0 l follow note distribut law guarante equival origin result formula l offend union p 00 formula construct use e n preserv simplifi structur formula transform repeat element p allgen properti 4 note may end one element p moreov ffl polyad conjunct p ffl convert singl atom neg conjunct element n n repres subformula form n meet ranf requir need enforc allgenn use b j 4 ye might problem worst case end exponenti expans formula aab find n subset p 0 p may empti follow transform propag allgen properti n case reduc depth term one subformula appli rule recurs term repres given simplifi formula finit depth proof immedi give us algorithm correctli convert given simplifi allow formula ranf formula b relat algebra normal form sql transform origin formula level logic finish follow section convers ranf sql statement describ transform done two step first logic formula translat relat algebra oper relat algebra term rewritten sql b1 convers relat algebra convers ranf prepar everyth next stepth convers logic formula relat algebra step make chang structur formula goal convert 1 nest existenti quantifi project 2 disjunct set union 5 3 conjunct product theta select oe e gener set differ gamma difficult part also convert variabl bind set equal column cartesian product constant rememb weve use polyad conjunct except root formula negat hidden insid conjunct thu dont special rule convert negat 5 need watch attribut order subformula union done project oper use permut attribut necessari chomicki toman implement tempor integr constraint use activ dbm 11 b2 relat algebra sql prepar convert relat algebra express previou step actual sql queri convers due limit sql languag straightforward gener believ need carri follow transform 1 standard sql sql89 handl nest occurr negat union insid select claus 6 need remov subterm assign virtual view relat algebra subterm form oe f lw w l n finit list relat join 2 close fol formula also handl immedi sql allow empti project 0ari relat solut use singl attribut auxiliari relat truet alway contain one tupl true relat join rest claus attribut select eg 3 use formula pasttl need access current last state databas inform kept convers atom annot state need evalu must convert inform proper name tabl view case old vi optim translat describ far produc set activ rule suffici enforc given set tempor con straint howev auxiliari relat introduc translat pasttl formula fol eventu activ rule increas amount data store databas section gener optim techniqu allow cut overhead devel ope note optim use auxiliari relat use direct queri databas content irrelev evalu standard first order queri current state databas hand inform store suffici answer gener tempor queri thu restrict content chang definit affect databas user think tabl invis user also deal space optim optim run time queri left queri optim underli dbm 6 starburst system conform sql92 standard handl nest queri directli explor two method limit amount data store auxiliari relat contextbas optim limit number tupl store auxiliari relat analysi context relat use techniqu similar magic set transform 16 17 18 howev context tempor formula need care time less case inform pass sideway must agre flow time cant predict futur advantag method univers applic ie dont need statist inform databas algebra optim option use techniqu base algebra transform use pasttl formula convert set fol formula ie auxiliari relat introduc case law allow move tempor connect first order one use transform allow move place auxiliari relat introduc pars tree origin pasttl formula care choic transform significantli reduc amount tupl store relat unfortun choic often requir obtain addit inform databas like averag size relat involv averag size join etc use optim techniqu need keep mind result formula need convert relat algebra later sql thu need care introduc construct express sql especi formula recursionfre safe reformul 4 magic set transform main idea transform base follow observ auxiliari relat r ff use finit mani known context easili determin travers origin formula analysi context allow restrict content auxiliari relat relev tupl techniqu gener applic auxiliari relat 7 applic ie limit auxiliari relat introduc tl2fol convers note classic applic magic set transform set horn rule 18 work complet differ set magic set use pass partial inform intend outcom bottomup evalu rule case set differ inform futur state tempor databas except constant relat show exploit definit auxiliari relat creat restrict condit similar fashion also use differ mechan comput sideway inform pass strategi sip 17 7 ie relat defin formula relat strategi base adorn liter atom adorn provid conserv guidelin comput sip result rule evalu rangerestrict take optimist approach comput sip first step comput inform pass sideway form formula without concern properti approxim obtain formula regain properti necessari convert sql method also allow pass arbitrarili complex condit eg condit constrain one vari abl like x sideway exampl 23 let x formula refer auxiliari relat r ff clearli tupl r ff satisfi condit affect outcom evalu x thu assum r ff use singl place r ff remateri restrict tupl store condit hold note condit timeinvari restrict condit induc context r ff use call magic condit r ff previou exampl context x induc magic condit x 10 condit comput context r ff use overal magic condit auxiliari relat determin disjunct ie union condit definit 24 magic condit let formula subformula let 0 anoth formula fv 0 call magic condit comput magic condit occurr r ff follow algorithm use note need determin magic condit leav tree correspond formula wherea magic inform root formula pass algorithm upper level magic condit root toplevel constraint true notat let r ff auxiliari relat r ff formula defin r ff denot r ff magic condit singl occurr r ff formula magic condit restrict content r ff ie overal magic condit respect occurr r ff follow algorithm collect inform pass sideway particular leaf given mula note togeth formula algorithm take anoth argumentth magic condit root formula ie restrict condit alreadi comput root given formula pass toward leav formula algorithm 25 magic let oe fol formula case oe semant equival formula atom r ff r ff 9x atom skip correct algorithm prove use follow lemma theorem lemma 26 let bp formula atom p leaf let anoth formula abp j abp induct structur b theorem 27 let formula magic condit magic comput magic condit auxiliari relat leav input suffici prove proof induct structur correspond structur r ff comput magic condit context r ff need care algorithm 25 comput magic condit everi leaf input formula howev ffl inform pass sideway agre flow time ie inform pass futur ffl inform relevantth magic condit actual restrict content auxiliari relat ffl transform preserv evalu prop erti necessari transform formula convert relat algebra eventu sql thu often need replac comput magic condit weaker formula satisfi restric tion follow theorem show sound replac theorem 28 let formula subformula let 0 00 formula set free variabl induct structur prove use assumpt j 0 obtain desir result theorem 28 appli magic condit follow corollari 29 approxim let formula subformula find appropri weaker magic condit follow definit use definit 30 let fol formula let subformula call posit neg scope even odd number negat defin approxim ae true posit fals neg chomicki toman implement tempor integr constraint use activ dbm 13 note safe ie timeindepend approxim use long oe approx approx oe posit neg lemma 31 let fol formula subformula let 1 2 two formula set free variabl 1 oe 2 posit neg induct structur one occurr obvious case oe approx fact togeth corollari 29 use modifi origin magic formula way evalu relev agre flow time ff occurr r ff formula magic condit r ff r ff agre flow time leav p r ff n n state databas respect atom evalu mean leav must least old occurr r ff unfortun agreement sideway inform pass flow time guarante exampl 33 let x ax n r ff x magic condit comput algorithm 25 r ff x ax n r ff x remateri time content ax time n known refer futur thu magic condit need safe approxim order account possibl valu ax time n case safe approxim true first step agreement flow time achiev definit 34 flow time let r ff magic condit comput algorithm 25 definit r ff let approxm r ff condit obtain replac leav r ff use tabl figur 6 row occurr r ff column leav r ff note differ first second row tabl refer futur replac approxim also superscript denot time evalu particular leaf modifi match occurr r ff magic condit associ thu occurr r ff state first row tabl leav label current wirth respect occurr r ff label chang n leav label n futur similarli sequenti remateri auxiliari relat need modifi leav case ff fi ie r fi remateri r ff thu actual state r fi index n gamma 1 agre flow time respect r ff proof induct structur follow immedi lemma 31 corollari 29 order remateri auxiliari relat import inform pass new state auxiliari relat updat yet also two auxiliari relat incompar oe need pick go remateri first ie smaller oe rule system activ databas evalu rule sequenti thu pick linear order remateri auxiliari relat long contain oe solv problem flow time obtain magic condit may still relev note magic condit r ff produc algorithm alway form subformula origin formula lead follow definit definit 35 let r ff magic condit r ff comput algorithm 25 let r ff form subformula conjunct call relev r ff 1 fv 2 fv relev r ff let r set relev defin relevantm r ff magic condit r ff use lemma 31 corollari 29 approxim subformula origin magic condit final make sure magic condit evalu ie evalu properti situat similar detect evalu properti constraint differ aris nonevalu subformula detect former case formula reject case magic condit alway pick weaker condit evalu note weakest conditiontru alway evalu algorithm 36 let eval function defin algorithm 16 e constructor redefin follow let simplifi formula see definit 15 form oex otherwis distinguish follow case depend variabl bound quantifi 1 x free drop quantifi 2 formula evalu replac approxa definit approx proceed case 1 note form approxim conjunct contain x among free variabl 3 x c g 2 fv formula evalu perform transform obtain allow formula origin definit e 4 x allow simpli add quantifi remov x fv accord rule build fv fv 0 set similarli case approx relev show evalm r ff magic condit r ff evalu 14 ieee transact knowledg r ff fig 6 depend flow time note input formula agre flow time result formula agre flow time well relev eval transform obvious preserv properti applic three step evalu magic condit agre flow time obtain process repeat occurr auxiliari relat individu magic condit glu togeth consid occurr r ff need distinguish two case order appli algorithm 25 1 r ff occur leaf parent formula ie toplevel constraint c r fi ff oe fi 2 r ff occur leaf definit note r ff occur leaf r fi fi oe ff definit 5 first case solut easi r ff leaf comput partial magic condit use algorithm 25 ie magic r fi case toplevel constraint second case intric tri comput magic condit r ff clear condit use magic r ff magic condit r ff comput yet moreov simpli use magic condit deriv parent formula illustr follow exampl exampl 37 assum constraint 9xax3bx firstord translat consist toplevel constraint auxiliari atom defin drop subscript 3bx r assum tri restrict content auxiliari relat ax let p restrict r time remateri p n x time n dont look futur follow tabl show exampl transform accept fg r result constraint evalu state n differ r truecorrect result p falseincorrect result hand timeindepend relat transform would valid simpli use constant true previou exampl show stronger condit use gener also set choic true would produc true magic condit occurr r ff definit 38 timeinvari condit let inv formula timedepend leav 9 replac approxim lemma 39 let r ff auxiliari relat let 0 r ff set occurr r ff formula r fi ff oe fi magic r ff comput magic condit r ff r ff timeinvari condit r ff respect occurr parent formula use lemma 26 prove claim induct time base case trivial r 0 ff fals definit 4 induct step follow directli lemma 26 exampl 40 consid constraint express employe salari less equal 0 case toplevel constraint would auxiliari relat r would defin clearli condit 0 push bodi rs definit magic condit occurr auxiliari relat r ff defin overal magic condit defin follow definit 41 overal magic condit let r ff auxiliari relat defin r ff let set occurr r ff overal magic condit defin i2i magic condit everi occurr r ff follow observ i2i corollari 29 note evalu overal magic condit guarante distribut 9 leaf formula ie atom timedepend extens chang time current version two refer auxiliari relat gener handl arbitrari number refer chomicki toman implement tempor integr constraint use activ dbm 15 rewrit rule condit fig 7 algebra transform ext denot set tupl satisfi relat r ff disjunct r ff thu variabl free variabl appear formula success convers sql also requir magic transform produc set nonrecurs view definit prove use techniqu present 17 magic condit r ff r ff use auxiliari relat remateri restrict content b algebra transform magic set transform reduc amount data store auxiliari relat transform appli origin pasttl formula convert set first order formula influenc choic auxiliari relat introduc convers simplest case consid section iv auxiliari relat introduc place subformula origin formula root tempor connect necessari origin formula transform equival formula tempor connect suitabl place exampl 42 let 9x3p x auxiliari relat r 3p xy ariti 2 hand auxiliari relat r 0 induc tempor subformula formula 0 39xp x ariti 1 moreov clear r 0 x r thu amount store data reduc clearli 0 equival transform summar figur 7 vii futur work gener modular structur propos compil architectur allow easi adapt differ environ modif usual confin singl modul compil queri languag introduc construct constraint specif languag captur bigger class tempor constraint exampl realtim constraint 2 repeat activ period set etc new optim techniqu far consid spacesav optim techniqu introduc optim speed evalu given constraint note space save techniqu also help toward effici execut deal smaller amount data area sever option 1 write special routin queri optimiza tion transform ranf uniqu optim transform may help reduc size final formula note cant avoid exponenti explos gener 2 optim process remateri auxiliari relat shown 11 12 pass easili ad exist system 3 partial order remateri auxiliari relat linear compil linear may yield better magic optim one similarli ranf case studi impact differ linear result code differ rule system despit problem describ section ivc starburst rule system extrem well suit purpos provid setori rule allow specifi rule prioriti addit rule trigger transact defin flow time model featur util implement also shown architectur also util tuplebas rule system 20 essenti simul setori system explicitli addit rule tabl mention constraint specif maintain also explicit transit tabl perform analysi measur perform constraint enforc system quit complex problem clearli cost evalu constraint run set queri end everi transact time overhead maintain auxiliari relat space overhead howev timespac overhead depend directli transact run databas length transact amount chang databas play signific role analysi moreov benchmark method choos refer system result compar clear refer system bether sever candid databas without constraint enforc constraint enforc respect whole histori databas etc plan develop benchmark method suitabl compar overhead perform tempor constraint enforc system viii conclus seen languag past tempor logic suitabl specifi constraint tempor databas straightforward declar way also shown specif translat activ dbm rule guarante enforc constraint underli databas need addit runtim constraint monitor moreov translat process formula check safe evalu properti formula meet requir reject system also sever optim step perform cut overhead connect constraint check approach expand rang activ databas system applic without requir chang activ dbm ix acknowledg grate jennif widom encourag us use starburst suppli system thank also go inderp singh mumick discuss send us phd thesi research partial support nsf grant iri9110581 earli version result paper appear 19 ingr trademark ingr corpor r effici check tempor integr constraint use bound histori encod safeti translat relat calculu queri intern organ standard iso implement setori product rule extens starburst deriv product rule constraint mainten tempor logic logic databas deduct approach deriv integr maintain trigger transit graph effici updat materi view maintain view increment tempor trigger activ databas rule tempor logic reactiv concurr system queri optim deduct relat databas magic set strang way implement logic program implement tempor integr constraint use activ dbm ingressql refer manual unix vm oper system tr ctr we cowley dimitri plexousaki tempor integr constraint indeterminaci proceed 26th intern confer larg data base p441450 septemb 1014 2000 avigdor gal opher etzion multiag updat process databas tempor data depend schema version ieee transact knowledg data engin v10 n1 p2137 januari 1998 leopoldo bertossi marcelo arena cristian ferretti scdbr autom reason specif databas updat journal intellig inform system v10 n3 p253280 june 1 1998 jan chomicki david toman michael h bhlen queri atsql databas tempor logic acm transact databas system tod v26 n2 p145178 june 2001 vittorio brusoni luca consol paolo terenziani barbara pernici qualit quantit tempor constraint relat databas theori architectur applic ieee transact knowledg data engin v11 n6 p948894 novemb 1999 jan chomicki effici check tempor integr constraint use bound histori encod acm transact databas system tod v20 n2 p149186 june 1995 trker michael gertz semant integr support sql1999 commerci objectrel databas manag system vldb journal intern journal larg data base v10 n4 p241269 decemb 2001