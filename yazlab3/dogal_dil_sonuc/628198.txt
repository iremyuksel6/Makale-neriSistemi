highdimension similar join abstractmani emerg data mine applic requir similar join point highdimension domain present new algorithm util new index structur call epsilon tree fast spatial similar join highdimension point index structur reduc number neighbor leaf node consid join test well travers cost find appropri branch intern node storag cost intern node independ number dimens henc propos index structur scale highdimension data analyz cost join epsilon tree rtree famili show epsilon tree perform better highdimension join empir evalu use synthet reallif data set show similar join use epsilon tree twice order magnitud faster r tree perform gap increas number dimens also discuss idea epsilon tree appli rtree famili bias rtree perform better correspond tradit rtree highdimension similar join match perform epsilon tree b introduct mani emerg data mine applic requir effici process similar join highdimension point exampl includ applic timeseri databases1 2 multimedia databas 9 14 13 medic databas 3 21 scientif databases22 typic queri applic includ 1 discov stock similar price movement 2 find pair similar imag 3 retriev music score similar target music score queri often prelud cluster object exampl given pair similar imag imag cluster group imag group similar motiv need multidimension indic applic consid problem find pair similar timesequ techniqu 2 solv problem break timesequ set contigu subsequ find subsequ similar two sequenc enough similar current bell laboratori murray hill nj subsequ consid similar find similar subsequ subsequ map point multidimension space typic dimension space quit high problem find similar subsequ reduc problem find point close given point multidimension space pair point consid close within ffl distanc distanc metric l 2 l1 norm involv dimens ffl specifi user multidimension index structur r tree use find pair close point approach hold domain imag data case imag broken grid sub imag key attribut subimag map point multidimension space pair similar subimag found enough subimag two imag match complex match algorithm appli imag close relat problem find object similar given object translat find point close queri point even direct map object point multidimension space paradigm still use distanc function object avail algorithm present 7 gener map object multidimension point given set object distanc function current spatial access method see 18 8 overview mainli concentr store map infor mation 2dimension 3dimension space work well low dimension data point time space indic grow rapidli dimen sional moreov cpu cost high similar join exist indic design reduct io cost primari goal discuss point later paper review current multidimension indic overcom shortcom current indic highdimension similar join propos structur call fflkdb tree mainmemori data structur optim perform similar join fflkdb tree also small build time let fflkdb tree use similar distanc limit ffl paramet build tree empir evalu show build plu join time fflkdb tree typic 3 35 time less join time r tree 19 1 perform gap increas number dimens pure mainmemori data structur would use sinc data mani applic fit memori extend join algorithm handl larg amount data still use fflkdb tree problem definit consid two version spatial similar join problem ffl selfjoin given set n highdimension point distanc metric find pair point within ffl distanc ffl nonselfjoin given two set 1 2 highdimension point distanc metric find pair point one 1 2 within ffl distanc distanc metric two n dimension point x consid 2 familiar euclidean distanc l 1 manhattan di tanc l1 correspond maximum distanc dimens paper organ section 2 give overview exist spatial indic describ shortcom use highdimension similar join section 3 describ fflkdb tree algorithm similar join give perform evalu section 4 conclud section 5 current multidimension index structur first discuss rtree famili indic popular multidimension indic describ use similar join also give brief overview indic discuss inadequaci current index structur experi indic r tree better r tree 8 r tree 4 tree highdimension similar join space cover bound rectangl b rtree figur 1 exampl rtree 21 rtree famili rtree 8 balanc tree node repres rectangular region intern node rtree store minimum bound rectangl mbr children mbr cover space point child node mbr sibl overlap decis whether travers subtre intern node depend whether mbr overlap space cover queri node becom full split total area two mbr result split minim split node figur 1 show exampl rtree tree consist 4 leaf node 3 intern node mbr n1n2l1l2l3 l4 root node two children whose mbr n1 n2 r tree 4 ad two major enhanc rtree first rather consid area node split heurist r tree also minim perimet overlap bound region second r tree introduc notion forc reinsert make shape tree less depend order insert node becom full split immedi portion node reinsert top level two enhanc r tree gener outperform rtree impos constraint two bound region nonleaf node overlap thu except boundari surfac one path everi leaf region reduc search join cost xtree 6 avoid split could result high degre overlap bound region r tree experi show overlap bound region increas significantli high dimension data result perform deterior r tree instead allow split produc high degre overlap node xtree extend usual block size result call supernod experi show xtree improv perform point queri nearestneighbor queri compar r tree tvtree describ comparison r tree given 6 point data howev sinc r tree overlap gain xtree obtain avoid overlap one would expect xtree better r tree point data overlap mbr r tree r tree b nonoverlap mbr r figur 2 screen point join test similar join join algorithm use rtree consid leaf node extend mbr ffldistanc find leaf node whose mbr intersect extend mbr algorithm perform nestedloop join sortmerg join point leaf node join condit distanc point ffl sortmerg join point first sort one dimens reduc redund comparison point join two leaf node could first screen point boundari leaf node extend ffl point lie within intersect two extend region need join figur 2 show exampl rectangl solid line repres mbr two leaf node dot line illustr extend bound ari shade area contain screen point kdb tree 17 similar r tree main differ unlik mbr r tree hbtree 12 similar kdb tree except bound rectangl children intern node organ kd tree 5 rather list mbr kdtree binari tree multidimension point level kdtree one dimens chosen cyclic use decid subtre travers fur ther bound region may rectangular hole figur 3 number neighbor leaf node reduc cost split node compar kdb tree tvtree 10 use variabl number dimens index tvtree design paramet ff activ dimen sion typic small integ 1 2 node ff dimens use repres bound region split node node close root first ff dimens use defin bound rectangl tree grow node may consist point valu first say k dimens sinc first k dimens longer distinguish point node next ff dimens k dimens use store bound region split reduc storag travers cost intern node gridfil 15 partit kdimension space grid multipl grid bucket may place singl disk page directori structur keep track map grid bucket disk page grid bucket must fit within leaf page bucket overflow grid split one dimens 23 problem current indic index structur describ suffer follow inadequaci perform similar join highdimension point number neighbor leaf node split algorithm rtree variant util everi dimens equal split order minim volum hyper rectangl caus number neighbor leaf node within ffldistanc given leaf node increas dramat number dimens see happen assum rtree partit space dead region bound rectangl uniform distribut 3dimension space may get 8 leaf node shown figur 3 notic everi leaf node within ffldistanc everi leaf node n dimension space may o2 n leaf node within ffldistanc everi leaf node problem somewhat mitig use mbr howev number neighbor within ffldistanc still increas dramat number dimens problem also hold multidimension structur except perhap tvtree howev tv tree suffer differ problem use first k dimens split consid other unless mani point valu first k dimens enough data point lead problem rtree though opposit reason sinc tvtree use first k dimens split leaf node mani neighbor leaf node within ffldistanc note problem affect cpu io cost cpu cost affect travers time well time screen neighbor page io cost affect access neighbor page storag util kdb tree rtree famili includ xtree repres bound region node rectangl bound rectangl repres min max point hyperrectangl thu space need store represent bound rectangl increas linearli number dimen sion problem hbtree store mbr tvtree use dimens time grid file travers cost travers rtree kdb tree examin bound region children node determin whether travers subtre step requir check rang everi dimens represent bound rectangl thu cpu cost examin bound rectangl increas proport number dimens data point problem mitig hbtree tvtree problem gridfil build time set object particip spatial join may often prune select predic 11 eg find similar intern fund case may faster perform nonspati select predic first select intern fund perform spatial join result thu sometim necessari build spatial index onthefli current indic design built cost build cost join 16 skew data handl skew data problem current indic except gridfil kdimension space singl data page overflow may result dimension slice ad gridfil directori gridfil n bucket split split dimens partit nm new cell ad grid split thu size directori structur grow rapidli skew highdimension point summari index good bad featur similar join highdimension point would difficult design generalpurpos multidimension index shortcom list ever design specialpurpos index attack problem problem highdimension similar join distanc metric ffl paramet follow properti ffl featur vector chosen similar comparison high dimens everi dimens featur vector map numer valu ffl distanc function comput consid everi dimens featur vector ffl similar distanc limit ffl larg sinc indic effect select similar join larg ie everi point match everi point describ new index structur fflkdb tree specialpurpos index purpos 3 fflkdb tree introduc fflkdb tree section 31 discuss design rational section 32 31 fflkdb tree definit first defin fflkdb tree 2 describ perform similar join use fflkdb tree first case data fit memori case fflkdb tree assum without loss gener coordin point dimens lie 0 1 start singl leaf node better space util pointer data point store leaf node whenev number point leaf node exce threshold leaf node split convert interior node leaf node level ith dimens use split node node split b1fflc part width new leaf node ith dimens either ffl slightli greater ffl rest section assum without loss gener ffl exact divisor 1 exampl fflkdb tree two dimension space shown figur 4 note interior node x point child x join point children x except 2 children adjac hold l p distanc metric thu join code use metric final test pair point metricdepend 2 realli trie call tree sinc conceptu similar tree leav root leaf leaf leaf figur 4 fflkdb tree similar join use fflkdb tree let x intern node fflkdb tree use xi denot ith child x let f fanout tree note 5 describ join algorithm algorithm initi call selfjoinroot selfjoin version joinroot1 root2 nonselfjoin version procedur leaf joinx leafselfjoinx perform sortmerg join leaf node highdimension data fflkdb tree rare use dimens split instanc 10 dimens ffl 01 would point dimens use thu usual use one free unsplit dimens common sort dimens point everi leaf node kept sort dimens rather sort repeatedli join join two leaf node algorithm sortmerg use dimens memori manag valu ffl often given runtim thu sinc valu ffl paramet build index may possibl build diskbas version index advanc instead sort multidimension point first split dimens keep extern file first describ join algorithm assum mainmemori hold point within 2 ffl distanc first dimens gener join algorithm first read point whose valu sort dimens lie 0 2 ffl build fflkdb tree point main memori perform similar join memori algorithm dealloc space use point whose valu sort dimens 0 ffl read point whose valu 2 ffl 3 ffl build fflkdb tree point perform join procedur procedur continu point process note read procedur joinx begin leafnodex leafnodey els leafnodex begin els leafnodey begin joinxi els begin joinxi joinxi joinxi1 joinxf procedur selfjoinx begin leafnodex els begin selfjoinxi xi joinxi xi1 selfjoinxf xf figur 5 join algorithm point disk procedur work build time ffl kdb tree extrem small gener case 2 ffl chunk data fit memori basic idea partit data ffl 2 chunk use addit dimens join procedur ie read point memori build fflkdb perform join instead repeat 4 ffl 2 chunk data use addit dimens 32 design rational two distinguish featur fflkdb tree ffl bias split dimens use previou split select split long length dimens bound rectangl result leaf node least ffl split node split node ffl size chunk discuss featur help fflkdb tree solv problem current indic outlin section 2 number neighbor leaf node recal current indic number neighbor leaf page may increas exponenti number dimens fflkdb solv problem bias split length bound rectangl leaf node split dimens least ffl two neighbor leaf node need consid join test howev length bound rectangl split dimens becom less ffl number neighbor leaf node join test increas henc split one dimens long length bound rectangl result children least ffl start split next dimens leaf node becom full split node sever children size ffl split dimens rather gradual order reduc build time two altern choos next split dimens global order local order global order use split dimens node level local order choos split dimens base distribut point node exampl two case shown figur 6 3 dimension space order dimens d0 use split root node ie level 0 global d1 use split level 1 howev local order d1 d2 chosen altern neighbor node level 1 consid leaf node label x global order 5 neighbor leaf node shade figur number neighbor increas 9 local order notic space cover neighbor global order proper subset cover neighbor local order differ space cover two order increas ffl decreas henc chose global order split dimens rather local order number point huge fflkdb tree forc split everi dimens number neighbor compar indic howev till limit number neighbor depend number point distribut ffl independ number dimens order dimens chosen split significantli affect space util join cost correl exist dimens problem solv statist analyz sampl data choos next split dimens least correl dimens alreadi use split choos split dimens global b choos split dimens local figur 6 global local order split dimens space requir intern node simpli need array pointer children need store minimum bound rectangl comput henc space requir depend number point distribut independ number dimens travers cost sinc split node ffl size chunk travers cost extrem small join procedur never check bound rectangl node decid whether may contain point within ffl distanc build time build time small complex split algorithm split propag upward skew data sinc split node affect node fflkdb tree handl skew data reason perform evalu empir compar perform fflkdb tree r tree sortmerg algorithm experi perform ibm rs6000 250 workstat cpu clock rate 66 mhz 128 mb main memori run aix 325 data store local disk measur throughput 15 mbsec first describ algorithm compar section 41 dataset use experi section 42 next show perform algorithm synthet reallif dataset section 43 44 respect 41 algorithm fflkdb tree implement fflkdb tree algorithm describ section 31 leaf node convert intern node ie split memori usag exceed 4096 byte howev dimens left split ting leaf node allow exceed limit execut time fflkdb tree includ io cost read extern sort file contain data point well cost build index sinc extern file gener reus differ valu ffl execut time includ time sort extern file tree experi indic r tree faster r tree similar join set highdimension point recal differ r tree r tree r tree allow overlap minimum bound rectangl henc reduc number overlap leaf node consid spatial similar join result faster execut time therefor use r tree experi use page size 4096 byte experi ensur r tree alway fit memori built r avail memori join execut began thu execut time r tree includ build time includ cpu time mainmemori join although give r tree unfair advantag err conserv side 2level sortmerg consid simpl sortmerg algo rithm read data file sort one dimens perform join test pair point whose valu sort dimens closer ffl implement sophist version algorithm read 2ffl chunk sort data memori sort memori data second dimens perform join test pair point whose valu second sort dimens close ffl algorithm drop first ffl chunk memori read next ffl chunk execut time report algorithm also includ extern sort time tabl 1 summar cost includ execut time algorithm 42 data set perform metric synthet dataset gener two type synthet dataset uniform gaussian valu dimen join cost ye ye ye build cost sort cost first dim tabl 1 cost includ execut time paramet default valu rang valu number point 100000 10000 1 million number dimens 10 4 28 ffl join distanc 01 001 02 rang point 1 1 distanc metric l2norm l1 l2 l1 norm tabl 2 synthet data paramet sion randomli gener rang gamma10 10 either uniform gaussian distribut gaussian distribut mean standard deviat 0 025 respect tabl 2 show paramet dataset along default valu rang valu conduct experi distanc function use l 1 l 2 l1 distanc function experi extend bound rectangl obtain extend mbr ffl differ slightli tree depend distanc function figur 7 show extend bound region l 1 l 2 l1 norm rectangl solid line repres mbr leaf node dash line extend bound region differ region cover extend region may result slightli differ number intersect leaf node given leaf node howev rtree famili spatial indic select queri usual repres rectangl reduc cost travers index thu extend bound rectangl use travers index l 1 l 2 becom l1 43 result synthet data distanc metric first experi vari ffl norm rel perform l1 b l2 c l1 figur 7 bound region extend ffl uniform distribution101000 execut time epsilon 2level sortmerg r tree ekdb tree gaussian execut time epsilon 2level sortmerg r tree ekdb tree figur 8 perform synthet valu algorithm almost ident three distanc metric see 20 show result l 2 norm remain experi ffl valu figur 8 show result vari ffl 001 02 uniform gaussian data distribut l 2 use distanc metric explor behavior algorithm ffl greater 02 sinc join result becom larg meaning note execut time shown log scale fflkdb tree algorithm typic around 2 20 time faster algo rithm low valu ffl 001 2level sortmerg algorithm quit effect fact sortmerg algorithm fflkdb algorithm almost action sinc fflkdb around 2 level exclud root gaussian distribut perform gap fflkdb tree r tree narrow high valu ffl join result larg uniform 28 execut time dimens 2level sortmerg r tree ekdb tree gaussian distribution10010000 28 execut time dimens 2level sortmerg r tree ekdb tree figur 9 perform synthet data number dimens number dimens figur 9 show result increas number dimens 4 28 execut time shown use log scale fflkdb algorithm around 5 19 time faster sortmerg algorithm 8 dimens higher around 3 47 time faster r tree perform gap increas number dimens 4 dimens slightli faster sinc enough point fflkdb tree fill dimens r tree increas number dimens increas overhead travers index well number neighbor leaf node cost screen henc time increas dramat go 4 28 dimens 3 even sortmerg algorithm perform better r tree higher dimens 3 dip r tree execut time go 4 8 dimens gaussian distribut decreas join result size effect also notic fflkdb tree distribut uniform distribution101000100000 execut time number point 000 2level sortmerg r tree ekdb tree gaussian distribution101000100000 execut time number point 000 2level sortmerg r tree ekdb tree figur 10 perform synthet data number point contrast execut time fflkdb remain roughli constant number dimens increas number point see scale fflkdb tree vari number point 10000 1000000 result shown figur 10 r tree show result 1000000 point tree longer fit main memori none algorithm linear scaleup sortmerg algorithm somewhat wors scaleup two algorithm gaussian distribut perform advantag fflkdb tree compar r tree remain fairli constant percentag uniform distribut rel perform advantag fflkdb tree vari sinc averag depth fflkdb tree increas gradual number point creas rather jump suddenli around 3 around 4 etc transit occur 20000 50000 point 500000 750000 point uniform execut time ratio size two data set r tree ekdb tree gaussian execut time ratio size two data set r tree ekdb tree figur 11 nonselfjoin nonselfjoin figur 11 show execut time similar join two differ dataset gener differ random seed size one dataset fix 100000 point size dataset vari 100000 point 5000 point experi second dataset 10000 point fewer experi run 5 time differ random seed second dataset result averag dataset 100000 point perform gap r tree fflkdb tree similar selfjoin 200000 point size second dataset decreas perform gap also decreas reason time build index includ fflkdb tree r tree 44 experi reallif data set experi follow reallif dataset similar time sequenc consid problem find similar time sequenc algorithm propos 2 first find similar atom subsequ stitch togeth atom subsequ match get similar subsequ similar sequenc sequenc broken atom subsequ use slide window size w atom subsequ map point wdimension space problem find similar atom subsequ correspond problem find pair wdimension point within ffl distanc use l1 norm see 2 rational behind approach10010000 execut time epsilon 2level sortmerg r tree execut time dimens 2level sortmerg r tree ekdb tree figur 12 perform mutual fund data time sequenc experi daili close price 795 us mutual fund jan 4 1993 march 3 1995 around 400000 point experi sinc sequenc broken use slide window data obtain mit ai laboratori experiment stock market data server httpwwwaimitedustocksmfhtml vari window size ie dimens 8 16 ffl 005 02 figur 12 show result execut time three algorithm result quit similar obtain synthet dataset fflkdb tree outperform two algorithm 45 summari fflkdb tree typic 2 47 time faster selfjoin perform gap increas number dimens typic 2 20 time faster sortmerg 2level sortmerg usual slower r tree high dimens low valu ffl 001 faster r tree nonselfjoin result similar dataset join differ size dataset differ size eg 110 ratio fflkdb tree still faster r tree perform gap narrow sinc includ build time fflkdb tree r tree distanc metric significantli affect sult rel perform algorithm almost ident l 1 l 2 l1 norm conclus present new algorithm index structur call fflkdb tree fast spatial similar join highdimension point similar join need mani emerg data mine applic new index structur reduc number neighbor leaf node consid join test well travers cost find appropri branch intern node storag cost intern node independ number dimens henc scale highdimension data studi perform fflkdb tree use synthet reallif dataset join time fflkdb tree 2 order magnitud less join time r tree dataset perform gap increas number dimens also analyz number join screen test fflkdb tree r tree analysi show fflkdb tree perform consider better highdimension point analysi found 20 given popular rtree famili index struc ture also studi idea fflkdb tree graft rtree famili found result bias rtree perform much better rtree highdimension similar join fflkdb tree still better detail studi found 20 r effici similar search sequenc databas fast similar search presenc nois qbism prototyp 3d medic imag databas system multidimension binari search tree use associ search fastmap fast algorithm index rtree dynam index structur spatial search retriev techniqu similar shape spatial join use seed tree multimedia inform system unfold realiti qbic project queri imag content use color grid file adapt partit base spatialmerg join design analysi spatial data structur fflkdb tree fast index structur highdimension similar join warp 3d model interbrain comparison inputst space approach predict auror geomagnet activ solar wind variabl tr