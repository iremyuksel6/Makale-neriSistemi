heterogen cpu servic use differenti admiss control present adapt ratecontrol schedul heterogen applic run gener purpos comput schedul effect support divers applic requir employ uniform ratebas share applic heterogen satisfi partit cpu capac servic class differ criterion admiss control result abl provid guarante perform flexibl alloc rate excel scalabl intermedi servic class offer tradeoff reserv rate util strength guarante schedul implement solari 251 run exist applic without modif present experiment result show scalabl effici guarante perform overload perform aspect schedul demonstr import prioriti inherit implement schedul stabl system perform b introduct emerg continu media cm applic well defin qualiti servic qo constraint applic stringent resourc requir benefit noninterfer possibl run close embed system environ 11 instead mani continu run gener purpos machin applic divers characterist run concurr qo requir applic open gener purpos comput environ requir research appropri admiss control schedul polici must investig avoid long term resourc overload provid form progress guarante resourc care schedul cpu time one bottleneck resourc consid processor requir applic like softwar media code design implement cpu schedul framework conform follow servic object 1 cpu schedul satisfi divers class applic requir one extrem applic stringent progress constraint miss deadlin significantli degrad perceiv qualiti audio process teleconferenc system exampl extrem besteffort applic specif realtim properti nonzero progress rate desir flexibl form proport share cpu time among applic provid network file transfer email process belong type applic two extrem applic well defin qo requir toler period system overload grace yau support part nation scienc foundat grant number eia9806741 ccr9875742 career b bhargava support part nation scienc foundat grant number ccr9901712 ccr0001788 part ceria earlier version paper appear proc ieee intern confer multimedia comput system florenc itali june 1999 22 load shed video playback exampl system busi user video applic may happi settl lower frame rate long video maintain good continu 2 cpu schedul provid suitabl firewal protect among servic class well among thread within servic class progress guarante given servic class thread independ servic class thread make schedul request applic stringent qo requir must protect applic servic class class besteffort applic protect demand servic class ensur accept level progress rate counterproduct howev strong firewal protect besteffort applic system scalabl want cpu schedul limit factor mani besteffort applic admit system impli actual progress rate exist besteffort applic becom lower applic join system becom higher applic leav system 3 certain servic class requir cpu reserv prevent long term system overload sinc actual resourc requir applic may known apriori may depend current context execut system provid feedback applic actual resourc demand inform reserv dynam renegoti applic system reflect actual resourc need 4 cpu schedul unnecessarili restrict progress rate admit applic particular reserv unus cpu cycl left idl made avail ondemand applic 5 competit exist round robin schedul cpu schedul provid divers servic class littl extra overhead 6 sinc differ organ may differ characterist workload system administr allow configur servic class accord need organ schedul framework evolv earlier work adapt ratecontrol arc schedul retain arc central featur ratebas share firewal protect provis system feedback resourc renegoti improv arc provid improv scalabl besteffort applic offer explicit tradeoff reserv rate util strength guarante adapt applic paper present design innov discuss experi evolut arc schedul addit provid extens perform result illustr salient aspect current prototyp result demonstr sound practic util approach 11 contribut relat work cpu schedul multimedia applic activ area research solut design embed realtim system applic gener purpos comput 1 12 use static prioriti 9 gener suscept runaway applic ratebas resourc share wide use mani ratebas system howev target flexibl resourc alloc consid guarante qo admiss control 3 6 7 8 19 lack system feedback applic perform make difficult determin suitabl ratesa highli flexibl resourc model propos 18 offer probabilist perform resourc model specif protocol process propos 5 yield guarante perform without use thread approach immedi extend gener comput hierarch schedul advanc support heterogen applic 4 6 employ leaf schedul divers type classic realtim schedul like ratemonoton earliestdeadlinefirst lack firewal properti 11 15 adapt dynam applic behavior certain schedul algorithm requir close applic particip sophist schedul test 14 system appeal polic mechan extern schedul algorithm prioriti depress 10 13 17 propos solut uniformli appli well proven techniqu ratebas schedul divers applic requir consid schedul algorithm provabl firewal properti offer protect among applic without resort complic machineri heterogen applic handl configur servic class differ criteria admiss control result system achiev guarante perform flexibl resourc alloc excel scalabl intermedi servic offer tradeoff reserv rate util strength guarante new ratebas schedul algorithm suitabl use framework defin addit present system implement gener purpos oper system introduc use proxi schedul account inexact rate control real system provid perform evalu use real multimedia workload 12 paper organ section 2 discuss arc ratebas share firewal protect basi research discuss issu progress fair defin new cpu schedul algorithm good fair properti extend arc accommod heterogen servic framework present section 3 section 4 discuss import prioriti invers cpu schedul use proxi class achiev predict perform real system environ given section 5 present perform evalu prototyp implement use real multimedia workload section 6 schedul section summar main featur arc schedul detail 23 arc defin famili schedul follow three properti reserv rate negoti ii qo guarante condit upon thread behavior iii firewal protect among thread provid firewal protect effect period rate control henc execut ratebas schedul algorithm certain reschedul point follow current run thread exit becom block algorithm execut block event system event occur caus one thread becom runnabl algorithm execut thread becom runnabl unblock event period clock tick occur system algorithm execut current run thread clock tick event initi rc schedul algorithm figur 2a chose proofofconcept experi arc framework simpl effici use rc thread say request cpu reserv rate r period figur 2a event denot one three reschedul event trigger algorithm q thread rc execut rq pq denot qs reserv rate period respect curtim real time rc begin execut finishq expect finish time previou comput perform q valq rc valu q system schedul thread nondecreas order rc valu assumpt ideal execut environ 23 theorem 1 guarante progress punctual thread say j system gener least k second work time interv 0 kp j theorem 1 thread j punctual r 1 j schedul rc run least k time notic p j smaller rate guarante provid finer time interv concomit increas context switch overhead convers p j larger number context switch becom smaller rate guarante provid coarser time interv henc p j rc allow tradeoff context switch overhead time granular rate guarante specifi applic accord need perform experi valid theorem 1 actual system run exist multimedia applic 23 show cm applic video audio meet deadlin use arc compet varieti besteffort applic see exampl fig 1 simultan besteffort applic abl achiev satisfactori progress despit demand cm applic firewal protect among applic achiev without significantli degrad cpu effici util b501502503500 100 200 300 400 500 600 700 800 interfram time ms frame103050700 500 1000 1500 2000 2500 interfram time ms frame figur 1 time pictur sent applic run unix ts b arc presenc compet computeintens applic start frame 250 algorithm rcq event l1 event unblock l2 finishq maxfinishq curtim els l3 runtim time q run sinc rc last execut l4 finishq finishq l5 event 6 block l7 valq startq algorithm frcq event l1 event unblock l2 vtime l3 finishq maxfinishq vtime l4 els l5 runtim time q run sinc frc last execut l7 event block l8 fqg figur 2 specif algorithm rc b algorithm frc 21 progress fair show 23 rc exhibit punish phenomenon thread overrun resourc reserv later punish ie schedul extend time period thread littl resourc overrun join system show 23 rate adapt use longrun cm applic avoid punish phenomenon care match reserv rate actual execut rate howev explicitli design arc framework highli modular flexibl result abl incorpor schedul algorithm divers fair properti prototyp system particular design fair ratecontrol algorithm improv fair rc frc allow thread reserv guarante cpu rate rc frc calcul thread finish valu give time previou comput thread would finish progress reserv rate system schedul runnabl thread nondecreas finish valu order frc outlin figur 2b observ rc thread say r overrun reserv rate finishr may increas much beyond real time henc new thread say later join system finish set current real time l2 figur 2a may take unbound time finish catch finishr solv problem fig 2b line l3 use virtual time valu vtime calcul l2 close match finish valu exist runnabl thread determin finish valu newli runnabl thread addit algorithm use initi empti keep track current set runnabl thread system discuss progress properti frc notat conveni adopt follow exposit denot finish valu thread q denot period system clock tick first prove lemma 1 bound differ finish valu two runnabl thread schedul frc bound impli progress fair limit long thread run anoth runnabl thread given chanc use cpu lemma 1 follow invari j runnabl f f j qr proof invari true first thread becom runnabl show invari preserv reschedul point proof f denot set runnabl thread finish valu thread respect reschedul point 0 f 0 denot set runnabl thread finish valu thread respect reschedul point 1 system clock tick occur thread sinc chosen run f f j 0 j 2 l6 2 thread k becom block affect finish valu runnabl thread henc trivial 3 thread becom runnabl consid two case case case j finish valu thread j last block notic f 00 moreov sinc last inequ follow fact invari hold reschedul point theorem 2 prove guarante throughput frc schedul theorem 2 time interv 0 continu runnabl throughout interv schedul frc run least 1 time set thread ever runnabl 0 proof let w j denot total amount time j run interv 0 denot finish valu j j first becom runnabl 0 f 0 j finish valu j time 0 lemma 1 fact f nondecreas 2 3 l3 l6 j 6 fact continu runnabl sinc continu runnabl cpu busi throughout 0 henc 6 7 follow corollari immedi state guarante progress cpu time overbook ie r 1 notic 0 becom larg continu runnabl thread cpu rate converg reserv rate corollari 21 time interv 0 continu runnabl throughout interv j r j 1 schedul frc run least time set thread ever runnabl 0 3 arc schedul heterogen servic experi arc perform well guarante progress divers applic suffer practic problem one observ accommod besteffort applic give applic low rate say 002 approach reason scalabl sinc low rate add slowli admit good number besteffort applic reject admiss control howev cpu schedul use arc still impos artifici limit number besteffort applic admit time moreov besteffort realtim applic compet pool reserv rate may alway desir arc heterogen servic arch extens arc overcom practic limit major departur arc lie explicit recognit divers class applic discuss section 1 arch still retain use integr schedul algorithm rc frc describ section 21 heterogen applic support differenti admiss control arch system administr partit total cpu capac rate servic class ie servic class k alloc rate r k r k 0 r 1 overbook paramet thread j request servic class k reserv specifi two paramet nomin rate r j period request grant c k denot subset thread alreadi admit servic class k thread j admit receiv effect rate given c k subset thread admit servic class k includ thread j effect rate n total number thread arch use thread rate section 21 notic effect rate thread depend nomin rate also nomin rate thread admit servic class howev shown henc corollari 21 provid hard guarante effect rate r thread overbook paramet use specifi differ level servic b thread servic class k get hard guarante reserv rate servic class call guarante rate gr suitabl applic stringent time constraint b class k use flexibl rate alloc excel scalabl thread class receiv guarante besid nonzero progress servic class call flexibl rate fr suitabl convent best effort applic valu b k lead servic class statist guarante differ strength servic class call overbook obn n percentag overbook suitabl adapt multimedia applic grace shed work accommod control period system overload multiprocessor oper system like solari thread contend insid kernel synchron resourc mutex lock semaphor condit variabl readerswrit lock system prioriti invers insid kernel becom import problem solv problem arch leverag exist mechan solari 251 provid prioriti inherit thread arch inherit finish valu anoth thread block inherit finish valu rate control ie increas clock tick howev origin finish valu inherit thread cpu usag inherit prioriti account principl possibl two thread say p q conspir hoard resourc exampl p run acquir lock say l give later p preempt q get schedul q attempt acquir l p block q inherit qs finish valu p run inherit prioriti without ever give l system prioriti inherit implement synchron resourc manag kernel code sinc kernel code trust reason assum conspiraci occur section 6 demonstr practic util prioriti inherit system besid synchron primit prioriti invers also occur differ applic request servic system server major problem use tradit rpc server thread run prioriti unrel prioriti client tackl problem implement train abstract solari train allow thread control access servic multipl process carri resourc schedul state intact abil achiev decoupl thread view pure schedul entiti associ process provid resourc context albeit nonperman thread henc thread still home process ie process creat free leav process enter new one welldefin stop export latter stop export secur entri point server code server offer servic time servic invoc server addit provid stack execut new client request plan incorpor train real applic report perform later paper avoid effect prioriti invers due interrupt process schedul design work best process reduc minimum protocol process system migrat socket 21 exampl minim use interrupt handl packet arriv network howev small amount perform critic activ period system clock tick cpu rate control still allow take place interrupt prioriti higher prioriti arch thread 5 proxi class frc use singl level cpu schedul theorem 2 say runnabl thread effect rate r may get schedul time interv length n 1q number thread admit system sinc q nonneglig real system expect valu 1 ms 10 ms time interv becom excess n larg presenc besteffort applic particular concern sinc servic class explicitli design highli scalabl solv system allow servic class configur proxi class proxi class introduc twolevel schedul arch system level class level system level proxi class repres proxi thread join arch system dispatch queue henc compet system cpu time class level proxi class maintain privat dispatch queue runnabl thread class increas finish valu order proxi thread consid run thread class run run runnabl least one thread class runnabl otherwis block effect rate equal configur algorithm l1 event unblock l2 vtime l3 finishq maxfinishq vtime l4 l5 call frccproxi unblock l6 c c els l7 runtim time q run sinc privat frc last execut l8 finishq finishq l9 event block l10 c c fqg l11 l12 call frccproxi block els l13 call frccproxi tick els l14 call frccproxi tick figur 3 specif algorithm privat frc proxi schedul class rate schedul state finish valu like usual thread proxi thread select execut current highest prioriti howev dispatch instead select highest prioriti thread privat runnabl queue class dispatch specifi algorithm privat frc figur 3 proxi class schedul algorithm use conjunct algorithm frc figur 2b nonproxi proxi thread ie schedul system level privat frc call reschedul event occur thread proxi class proxi thread algorithm q proxi thread c proxi class q belong event specifi reschedul event trigger algorithm proxi class c c denot set thread c runnabl cproxi denot proxi thread repres c system level schedul notic privat frc invok c may call frc cproxi suitabl reschedul event paramet exampl thread q c becom block frc call block event q last runnabl thread c tick event otherwis see benefit proxi schedul consid video thread rate r v compet 1000 thread fr class cpu time fr class configur proxi class theorem 2 time interv length 999q video thread may schedul fr class proxi howev time interv reduc q 6 experiment result present perform result show differ aspect arch schedul includ guarante perfor manc overload perform suitabl heterogen servic scalabl flexibl proport rate share stabil effici arch schedul use run part solari 251 sun ultrasparc1 workstat five applic repres multimedia workload use inour experi measur perform first four applic variou condit fifth radio xmit ran comput differ measur platform use send network audio packet read radio recv perform data taken radio xmit list applic follow greedi computeintens applic alway enabl repeatedli round 25 ms comput print timestamp period applic wake everi perform 25 ms comput output timestamp mpeg2play cm applic play mpeg2 encod video fp video content play ipppp encod 60 second segment tenni instruct radio recv cm applic receiv pcmencod audio sampl everi 100 ms network radio xmit audio applic captur pcmencod audio microphon send audio sampl network sampl gener 100 ms interv read radio recv experiment determin cpu requir mpeg2play ran one four copi mpeg2play minim compet load solari ts note achiev frame rate one two applic frame rate full per second three applic frame rate becam 2913 2985 2761 respect four applic frame rate went 2079 2059 1963 1910 respect conclud full cpu capac support three mpeg2play frame per second unless note otherwis experiment cpu configur fr rate 025 gr rate 075 system clock tick interv use 10 ms fr configur proxi class wherea gr 61 flexibl rate high util perform perform experi demonstr arch achiev flexibl alloc rate grace manner cpu configur gr rate 10 experi five copi greedi six copi period applic run rate gr class figur 4a plot timestamp valu rel first timestamp applic timestamp number applic figur 4b closeup view first 100 second greedi applic graph show execut rate grace adapt applic start finish differ time henc chang offer cpu load examin system perform high util say period greedi applic experi time complet least one round comput everi ms sinc round comput take 25 ms rate requir applic time 25 ms total 11 applic run system aggreg cpu rate requir applic time 0083 see perform period applic rate requir actual cpu load 100 throughout experi refer figur 5 clariti three applic shown profil repres refer line show period applic mostli time experiment setup demonstr differenti rate share fr ran ten greedi applic servic class six nomin rate 005 two nomin rate 01 remain two nomin rate 02 figur 6 show execut profil applic figur show applic activ greedi rate 02 01 achiev 222 105 52 roundssecond respect achiev ratio 1 close expect ratio 1 set experi demonstr arch abl provid heterogen servic firewal protect among servic class ran two differ experi first ran five greedi applic nomin rate 01 fr class togeth two mpeg2play rate 03 gr class second increas number greedi applic thirteen figur 7a show execut profil applic first experi figur 7b show correspond profil second experi shown figur 7a greedi applic ran slope 4574 mpeg2play still run slope increas 18687 mpeg2play finish execut equal slope show greedi applic receiv share cpu figur 7b note increas number greedi achiev lower execut rate notic one greedi applic start earlier rest mpeg2play howev unaffect show greedi fr share among resourc figur 8a closeup view figur 7a 1025 second mpeg2play affect start greedi time ms round greedi 3 greedi 4 greedi 5 period time ms round greedi 3 greedi 4 greedi 5 figur 4 execut profil five greedi six period applic equal rate topmost line show coincid period applic line variou greedi b execut profil greedi applic first 100 round graph show grace adapt execut rate offer cpu load increases45504650475048504950150 152 154 156 158 160 162 164 time ms round period 6 figur 5 magnifi view three period applications100030005000700090000 20 40 round number time second greedy1 greedy2 greedy3 greedy4 greedy6 figur applic run fr class show differenti rate share top line repres coincid profil two applic rate 02 middl line two applic rate 01 lowest line six applic rate 005 greedy2 greedy3 greedy4 mpeg21 round number time second greedy1 greedy2 greedy3 greedy4 greedy6 mpeg21 mpeg22 figur 7 execut profil two mpeg2play gr run concurr five greedi applic fr b thirteen greedi applic fr b shorter straight line two mpeg2play coincid profil b20040060080010 12 14 round number time second greedy1 greedy2 greedy3 greedy4 mpeg21 mpeg221030500 200 400 600 800 1000 1200 1400 1600 1800 2000 interfram time ms pictur number mpeg21 figur 8 closeup view two mpeg2play five greedi applic first 100 second thin straight line show coincid mpeg2play b plot interfram time mpeg2play run five greedi applic applic figur 7b show repres plot interfram time mpeg2play expect frame rate per second achiev 63 grace load shed show certain cm applic grace adapt cpu overload henc run overbook servic class purpos configur ob70 servic class overbook fraction 07 cpu partit fr rate 01 gr rate 03 ob70 rate 06 experi ran three copi mpeg2play nomin rate 03 ob70 obtain execut profil throughout experi two greedi applic run gr fr class respect figur 9a show execut profil applic mpeg2play achiev frame rate 24 frame per second experi figur 9b give plot interfram time repres mpeg2play applic plot show good pictur continu achiev despit reduc frame rate greedyfr greedygr mpeg2ob702 interfram time ms pictur number mpeg21 figur 9 execut profil three mpeg2play run ob70 class togeth two greedi applic gr fr class respect slant line greedi gr flat one greedi fr middl one show coincid mpeg2play b plot interfram time first 60 second repres mpeg2play 64 prioriti inherit demonstr practic signific prioriti inherit turn set experiment run set experi use two mpeg2play gr rate 03 one radio recv gr rate 01 two greedi applic fr rate 01 observ case execut profil one shown figur 10a obtain shown instanc occur greedi applic complet domin cpu applic abl make progress greedi applic complet execut case figur 10a occur 60 90 second understand problem collect trace inform insid kernel trace show 60 90 second clock tick occur domin greedi applic henc applic never preempt sinc prioriti never reduc rate control kernel sourc code could occur clock thread solari handl period clock interrupt block synchron primit 1 happen subsequ clock process defer clock thread return collect trace inform confirm case figur 10a clock thread inde block 6090 second mutex lock attempt process high prioriti timer activ system data show one mpeg2play applic hold mutex lock question prioriti inherit mpeg2play applic hold timer lock requir clock thread inherit latter prioriti interrupt thread solari clock thread strictli higher prioriti arch thread henc block mpeg2play quickli schedul preempt run greedi applic necessari abl quickli releas timer lock result turn ensur clock thread complet task without delay subsequ clock process prioriti inherit incorpor therefor kind gap shown figur 10a longer observ figur 10b show repres execut profil mix applic use preced paragraph 65 implement effici compar effici prototyp schedul solari ts ran n copi greedi concurr gr fr solari ts respect note averag complet time per applic vari n 1 15 solari ts use standard quantum size gr fr preemption quantum 10 ms use figur 11 show three schedul essenti perform gr fr slightli lower time 10 applic slightli higher time 15 applic see effect fine versu coarsegrain rate control vari preemption time quantum 10 30 50 70 ms gr fr figur 12 notic servic class number offer true multithread insid kernel process clock interrupt one kernel thread certain system clock activ may handl interrupt handler block unavail resourc radiorecv500plot200060001000014000 round number time second mpeg21 mpeg22 greedy1 greedy2 figur 10 unstabl system perform without prioriti inherit top two line initi coincid show two greedi b stabl system perform prioriti inherit top line show coincid greedi b flat line radio recv middl line show coincid mpeg2plays10210611 averag complet time number applic solari gr fr figur 11 averag time complet one greedi applic use gr fr solari ts figur 12 averag time second complet greedi applic 1 5 10 15 compet applic preemption quantum size 10 30 50 70 ms gr class b proxi fr class applic larg complet time drop somewhat preemption quantum increas 10 30 ms chang significantli increas quantum size conclus present cpu schedul framework suitabl heterogen applic run gener purpos com puter discuss present system evolv arc schedul particular retain arc central featur ratebas share firewal protect provis system feedback rate renegoti major design innov arc definit heterogen servic architectur base uniform ratebas share servic class differ admiss control criteria algorithm rc adapt virtualclock 24 use expect complet time previou comput instead comput schedul schedul frc solut fair problem similar sever approach virtual clock reset 20 timeshift schedul 2 leap forward virtual clock 16 ratebas algorithm suitabl firewal protect also use framework system integr gener purpos os environ discuss issu prioriti inherit proxi schedul divers experiment result demonstr sound practic util approach acknowledg author wish thank sanghamitra sinha conduct measur develop arch result report paper r eventbas fair share schedul cpu inherit schedul effici user space protocol implement qo guarante use realtim upcal hierarch cpu schedul multimedia oper system fair share schedul experi processor reserv dynam qo realtim mach schedul algorithm multiprogram hard real time environ qnx softwar system ltd processor capac reserv oper system support multimedia applic design analyz multimedia oper system leap forward virtual clock new fair queue scheme guarante delay throughput fair lotteri schedul flexibl proportionalshar resourc manag stride schedul determinist proportionalshar resourc manag delay guarante virtual clock server migrat socket end system support network qualiti servic guarante arch uniform cpu schedul heterogen servic adapt ratecontrol schedul multimedia applic new traffic control algorithm packet switch network tr