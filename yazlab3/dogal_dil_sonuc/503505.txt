featherweight java sever recent studi introduc lightweight version java reduc languag complex featur like thread reflect drop enabl rigor argument key properti type safeti carri process step omit almost featur full languag includ interfac even assign obtain small calculu featherweight java rigor proof possibl easi featherweight java bear similar relat java lambdacalculu languag ml haskel offer similar comput feel provid class method field inherit dynam typecast semant close follow java proof type safeti featherweight java thu illustr mani interest featur safeti proof full languag remain pleasingli compact minim syntax type rule oper semant featherweight java make handi tool studi consequ extens variat illustr util regard extend featherweight java gener class style gj bracha oderski stoutamir wadler give detail proof type safeti extend system formal first time key featur gj b introduct insid everi larg languag small languag struggl get formal model offer signific boost design complex realworld artifact program languag formal model may use describ aspect design precis state prove properti direct attent issu might otherwis overlook formul model howev tension complet compact aspect model address time unwieldi becom often sensibl choos model less complet compact offer maximum insight minimum invest strategi may seen flurri recent paper formal properti java omit advanc featur concurr reflect concentr fragment full languag wellunderstood theori appli propos featherweight java fj new contend minim core calculu model java type system design fj favor compact complet almost obsess five form express object creation method invoc field access cast variabl syntax type rule oper semant fit comfort singl page inde aim omit mani featur possibl even assign retain core featur java type direct correspond fj pure function core java sens everi fj program liter execut java program fj littl larger church lambda calculu 3 abadi cardelli object calculu 1 significantli smaller previou formal model classbas languag like java includ put forth drossopoul eisenbach khurshid syme 20 nipkow oheimb 17 flatt krish namurthi felleisen 14 smaller fj let us focu key issu exampl discov captur behavior java cast construct tradit smallstep oper semant trickier would expect point overlook underemphas model one use fj start point model languag extend java fj compact focu attent essenti aspect exten sion moreov proof sound pure fj simpl rigor sound proof even signific extens may remain manag second part paper illustr util enrich fj gener class method la gj 7 al though model omit import aspect gj raw type type argument infer gener method call alreadi reveal portion design underspecifi bug gj compil main goal design fj make proof type sound welltyp program dont get stuck concis possibl still captur essenc sound argument full java languag languag featur made sound proof longer without make significantli differ candid omiss previou studi type sound java dont treat advanc featur concurr inner class reflect java featur omit fj includ assign terfac overload messag super null pointer base type int bool etc abstract method declara tion shadow superclass field subclass field access control public privat etc except featur java model includ mutual recurs class definit object creation field access method invoc method overrid method recurs subtyp cast one key simplif fj omiss signment assum object field initi constructor never chang afterward restrict fj function fragment java mani common java idiom use enumer repres nonetheless fragment comput complet easi encod lambda calculu larg enough includ mani use program mani program felleisen friedman java text 12 use pure function style moreov tricki type issu java gj independ assign ment import except type infer algorithm gener method invoc gj twist impos need maintain sound presenc assign paper treat simplifi version gj without type infer remaind paper organ follow section 2 introduc main idea featherweight java present syntax type rule reduct rule sketch type sound proof section 3 extend featherweight java featherweight gj includ gener class method section 4 present erasur map fgj fj model techniqu use compil gj java section 5 discuss relat work section 6 conclud fj program consist collect class definit plu express evalu express correspond bodi main method java typic class definit fj class pair extend object object fst object snd pairobject fst object snd pair setfstobject newfst return new pairnewfst thissnd class extend object class b extend object sake syntact regular alway includ supertyp even object alway write constructor even trivial class b alway write receiv field access thissnd method invoc constructor alway take styliz form one paramet field name field super constructor invok field supertyp remain field initi correspond paramet supertyp alway object field invoc super argument constructor place super appear fj program sinc fj provid sideeffect oper method bodi alway consist return follow express bodi setfst context definit expr sion new pairnew new bsetfstnew b evalu express new pairnew b new b five form express fj new new b new paire1e2 object constructor e3setfste4 method invoc bodi setfst express thissnd field access occurr newfst variabl fj differ java ordinari variabl rather special keyword remain form express cast express pairnew pairnew pairnew new b new afstsnd evalu express new b paire7 e7 new pairfst cast cast requir e7 field access fst declar contain object wherea next field access snd valid pair run time check whether object store fst field pair case check succe java one may prefix field paramet declar keyword final indic may assign paramet access inner class must declar final sinc fj contain assign inner class matter littl whether final appear omit breviti drop side effect pleasant side effect evalu easili formal entir within syntax fj addit mechan model heap moreov absenc side effect order express evalu affect final outcom defin oper semant fj straightforwardli use nondeterminist smallstep reduct relat follow longstand tradit lambda calculu cours java callbyvalu evalu strategi subsum gener relat sound properti prove reduct hold java evalu strategi special case three basic comput rule one field access one method invoc one cast recal lambda calculu betareduct rule applic assum function first simplifi lambda abstract similarli fj reduct rule assum object oper upon first simplifi new express thu slogan lambda calculu everyth function slogan everyth object rule field access action new pairnew new bsnd gamma new b styliz form object constructor know constructor one paramet field order field declar field fst snd access snd field select second paramet rule method invoc action denot substitut new pairnew new bsetfstnew b gamma new bnewfst new pairnew anew bthi new pairnewfst thissnd ie new pairnew b new pairnew new bsnd receiv invoc object new pairnew new b look setfst method pair class find formal paramet newfst bodi new pairnewfst thissnd invoc reduc bodi formal paramet replac actual special variabl replac receiv object similar beta rule lambda calculu xe0e1 gamma e1xe0 key differ fact class receiv determin look bodi support method overrid substitut receiv support recurs self reader familiar abadi cardelli object calculu see strong similar reduct rule 1 fj lambda calculu pure abadicardelli calculu formal paramet appear bodi may lead duplic actual sinc side effect caus problem rule cast action pairnew pairnew new b gamma new pairnew new b subject cast reduc object easi check class constructor subclass target cast case reduct remov cast express anew b rule appli comput stuck denot runtim error three way comput may get stuck attempt access field declar class attempt invok method declar class messag understood attempt cast someth superclass class prove first two never happen welltyp program third never happen welltyp program contain downcast stupid castsa technic explain usual allow reduct appli subexpress express comput second exampl express next subexpress reduc underlin step pairnew pairnew pairnew new b new afstsnd gamma pairnew pairnew anew bsnd gamma new pairnew new bsnd gamma new b prove type sound result fj express e reduc express e 0 e well type e 0 also well type type subtyp type e inform introduct mind may proceed formal definit fj 21 syntax syntax type rule comput rule fj given figur 1 auxiliari function figur 2 metavari b c e rang class name f g rang field name rang method name x rang paramet name e rang express cl rang class decla ration k rang constructor declar rang method declar write f shorthand f1 fn similarli c x e etc write shorthand m1 mn comma write empti sequenc ffl denot concaten sequenc use comma length sequenc x written x abbrevi oper pair sequenc obviou way write c f shorthand c 1 f1 cn fn similarli c f shorthand c 1 f1 cn fn thisff shorthand thisf1f1 thisfnfn sequenc field declar paramet name method declar assum contain duplic name class tabl ct map class name c class declar cl program pair ct e class tabl express lighten notat follow alway assum fix class tabl ct abstract syntax fj class declar constructor declar method declar express given top left figur 1 java assum cast bind less tightli form express assum set variabl includ special variabl never use name argument method everi class superclass declar extend rais question superclass syntax cl class c extend c c f k e x new ce subtyp class c extend comput new cef gamma e rfield new cemd gamma x 7 7 new cee0 dnew ce gamma new ce rcast express type tfield stupid warn method type class c extend class type class c extend c f k ok figur 1 fj main definit field lookup class c extend c f k class c extend c f k class c extend c f k defin method bodi lookup class c extend c f k class c extend c f k defin valid method overrid figur 2 fj auxiliari definit object class variou way deal issu simplest one found take object distinguish class name whose definit appear class tabl auxiliari function look field method declar class tabl equip special case object return empti sequenc field empti set method full java class object sever method ignor fj look class tabl read subtyp relat class write c subtyp ie subtyp reflex transit closur immedi subclass relat given extend claus ct formal defin middl left column figur 1 given class tabl assum satisfi saniti condit 1 ct class c everi domct 3 everi class name c except object appear anywher ct c 2 domct 4 cycl subtyp relat induc ct relat antisymmetr type reduct rule need auxiliari definit given figur 2 field class c written fieldsc sequenc c f pair class field name field declar class c superclass type method class c written mtypem c pair written bb sequenc argument type b result type b similarli bodi method class c written mbodym c pair written xe sequenc paramet x express e predic overridec0c judg method argument type c result type c0 may defin subclass case overrid method name declar superclass must type 22 type type rule express method declar class declar right column figur 1 environ gamma finit map variabl type written xc type judgment express form environ gamma express e type c type rule syntax direct one rule form express save three rule cast type rule constructor method invoc check actual paramet type subtyp correspond formal abbrevi type judgment sequenc obviou way write c1 gamma en 2 cn write one technic innov fj introduct stupid cast three rule type cast upcast subject subclass target downcast target subclass subject stupid cast target unrel subject java compil reject ill type express contain stupid cast must allow stupid cast fj formul type sound subject reduct theorem smallstep semant sensibl express may reduc one contain stupid cast exampl consid fol low use class b defin previou section aobjectnew b gamma anew b indic special natur stupid cast includ hypothesi stupid warn type rule stupid cast tscast fj type correspond legal java type contain rule stupid cast omit classic java 14 caus publish proof type sound incorrect error discov independ classic java author type judgment method declar form ok c read method declar ok occur class c use express type judgment bodi method free variabl paramet method declar type plu special variabl type c type judgment class declar form cl ok read class declar cl ok check constructor appli super field superclass initi field declar class method declar class ok type express may depend type method invok type method depend type express bodi behoov us check illdefin circular inde none circl broken type method explicitli declar possibl load use class tabl class check long class eventu check 23 comput reduct relat form e gamma e 0 read express e reduc express e 0 one step write gamma reflex transit closur gamma reduct rule given bottom left column figur 1 three reduct rule one field access one method invoc one cast alreadi explain introduct section write dx eye0 result replac x1 d1 xn dn e express e0 reduct rule may appli point express also need obviou congruenc rule e gamma e f like omit 24 properti formal definit fun proof pud well proof definit sensibl abl prove type sound result relat type comput inde prove result term well type reduc second term second term well type furthermor type subtyp type first term 241 theorem subject reduct gamma e 2 c e gamma e proof sketch main properti requir proof follow termsubstitut lemma prove induct deriv gamma x interest case final rule use deriv tdcast suppos type e0 c0 induct sinc d0 c may may subtyp rela tion deriv gamma cdxe 2 c may involv stupid warn hand ce0 deriv use tucast cdxe also upcast theorem prove induct deriv e gamma e case analysi last rule use case rinvk easi use lemma base case also straightforward induct step interest case congruenc rule castingthat case ce gamma ce 0 deriv use e gamma e use argument similar term substitut lemma see downcast express may reduc stupid cast upcast express alway reduc upcast xi also show program well type way get stuck reach point perform downcast 242 theorem progress suppos e welltyp express 1 e includ new c0ef subexpress 2 e includ new c0emd subexpress mbodym state similar properti cast say express e safe gamma type deriv underli ct gamma e 2 c contain downcast stupid cast use rule tdcast tscast word safe program includ upcast see safe express alway reduc anoth safe express moreov typecast safe express never fail shown follow pair theorem 243 theorem reduct preserv safeti e safe gamma egamma 0 e 0 safe gamma 244 theorem progress safe program suppos e safe gamma e cnew c0e subexpress 3 featherweight gj gj add gener type java featherweight gj fgj short add gener type fj class definit pair fj rewritten type paramet fgj class pairx extend object extend object extend object snd z extend object pairzi setfstz newfst return new pairzynewfst thissnd class extend object class b extend object class method may gener type pa ramet x paramet class z paramet setfst method type paramet bound x z bound object context definit expr sion new pairabnew new bsetfstbnew b evalu express new pairbbnew b new b extraordinarili pedant would write b instead b allow latter abbrevi former order fj proper subset fgj gj type paramet gener method invoc infer thu gj express would written new pairabnew new bsetfstnew b b invoc setfst fj subset java fgj quit subset gj regard fgj intermedi languag form would result type paramet infer paramet infer import aspect gj chose fgj concentr model aspect gj bound type variabl may type variabl may type express involv type variabl may recurs even sever bound mutual recurs exampl cx dy class one paramet one may bound x extend cx even x extend cy extend dx bound includ exampl util recurs bound see gj paper 7 gj fgj intend support either two implement style may implement di rectli augment runtim system carri inform type paramet may implement erasur remov inform type paramet runtim section explor first style give direct semant fgj maintain type paramet prove type sound theo rem section 4 explor second style give erasur map fgj fj show correspond reduct fgj express reduct fj express second style correspond current implement gj compil gj java virtual machin jvm cours maintain inform type paramet runtim first style would correspond use augment jvm maintain inform type paramet 31 follow sake concis abbrevi keyword extend symbol syntax type rule comput rule fgj given figur 3 auxiliari function figur 4 metavari x z rang type variabl u v rang type n rang nonvari type type type variabl write x shorthand x1 xn similarli n etc assum sequenc type variabl contain duplic name abstract syntax fgj given top left figur 3 allow c abbrevi c respect assum fix class tabl ct map class name c class declar cl obey saniti condit given previous 32 type environ delta finit map type variabl nonvari type written take type variabl bound bound type write bound delta upper bound delta defin figur 4 unlik calculi f 9 promot relat need defin recur sive bound type variabl alway nonva riabl type subtyp subtyp relat defin left column figur 3 subtyp reflex transit closur relat type paramet invari regard subtyp reason explain gj paper impli wellform type declar class c begin class cx n type like ct well form substitut respect bound n write wellform context delta rule wellform type appear figur 3 note perform simultan substitut variabl x may appear n permit recurs mutual recurs variabl bound type environ delta well form delta deltax ok x dom delta also say environ gamma well form respect delta written delta gammax ok x dom gamma field method lookup type reduct rule need auxiliari definit given figur 4 fairli straightforward adapt lookup rule given previous field nonvari type n written fieldsn sequenc correspond type field name f type method invoc nonvari type n written mtypem n type form x nuu similarli bodi method invoc nonvari type n type paramet v written mbodymv n pair written xe sequenc paramet x express e syntax cl class cx n n f k e x new ne subtyp class cx n n wellform type class cx n n comput new nef gamma e new nemvd gamma dx new nethise0 onew ne gamma new ne express type stupid warn method type class cx n n class type class cx n n f k ok figur 3 fgj main definit bound type bound bound field lookup class cx n n f k class cx n n f k class cx n n f k defin method bodi lookup class cx n n f k class cx n n f k defin valid method overrid impli figur 4 fgj auxiliari definit type rule type rule express method class appear figur 3 type judgment express form read type environ delta environ gamma e type subtleti field method lookup relat alreadi seen type rule straightforward rule gtdcast last premis ensur result cast run time matter whether use highlevel typepass reduct rule defin later section erasur semant consid section 4 exampl suppos defin result type method may subtyp result type correspond method su perclass although bound type variabl argument type must ident modulo renam type variabl class tabl ok class definit ok 33 reduct oper semant fgj program littl complic fj rule appear figur 3 34 properti fgj program enjoy subject reduct progress properti exactli like program fj 241 242 basic structur proof similar theorem 241 242 subject reduct ever sinc parametr polymorph combin subtyp need lemma main lemma requir term substitut lemma plu similar lemma preserv subtyp type type substitut read er familiar proof subject reduct type lambdacalculi like f 9 notic mani similar begin three substitut lemma prove straightforward induct deriv 341 lemma type substitut preserv sub none x appear delta 1 342 lemma type substitut preserv typ none x appear delta 1 343 lemma term substitut preserv typ 344 theorem subject reduct delta gamma e 2 proof induct deriv e gamma e 0 case analysi reduct rule use show detail base case e method invoc premis rule grinvk e rule gtinvk gtnew also examin deriv mtypem bound delta n find supertyp ct n none appear lemma 342 straightforward weaken lemma shown plu lemma 343 lemma 341 give let finish case sinc delta stran xi theorem progress suppos e welltyp express 1 e includ new n0ef subexpress 2 e includ new n0emvd subexpr sion mbodymv fgj backward compat fj intuit mean implement fgj use typecheck execut fj program without chang mean show welltyp fj program alway welltyp fgj program fj fgj reduct correspond note isnt quit case welltyped fj program fgj rule impli welltyped fj fgj allow covari overrid fj statement theorem use gamma fj gamma fgj show set reduct rule use 346 theorem backward compat fj program e ct well type type rule fj also welltyp rule fgj moreov fj program e e whether well type e gamma fj e proof first half shown straightforward induct deriv gamma e 2 c use fj type rule follow analysi rule gtmethod gtclass second half direct shown induct deriv reduct lation case analysi last rule use xi compil fgj fj explor second implement style gj fgj current gj compil work translat standard jvm maintain inform type paramet runtim model compil framework erasur translat fgj fj show translat map welltyp fgj program welltyp fj program behavior program fgj match suitabl sens behavior erasur fj reduct rule program eras replac type erasur insert downcast requir type eras remov type paramet replac type variabl erasur bound exampl class pairxi previou section eras class pair extend object object fst object snd pairobject fst object snd pair setfstobject newfst return new pairnewfst thissnd similarli field select new pairabnew new bsnd eras bnew pairnew new bsnd ad downcast b recov type inform origin program call downcast insert erasur synthet 41 erasur type eras type remov type paramet replac type variabl erasur bound write jtj delta erasur type respect type environ delta 42 field method lookup fgj gj subclass may extend instanti superclass mean unlik fj java type field method subclass may ident type superclass order specifi typepreserv erasur fgj fj necessari defin addit auxiliari function look type field method highest superclass defin exampl previous defin gener class pairxi may declar special subclass pairofa subclass instanti pairaa instanti x given class class pairofa extend pairaa superfst snd pairofa return new pairofanewfst thisfst note setfst method argument type match argument type setfst pairaa result type pairofa subtyp result type pairaa permit fgj covari subtyp discuss previou section eras class pairofa yield follow class pairofa extend pair pairofaobject fst object snd superfst snd pair setfstobject newfst return new pairofanewfst thisfst argument constructor method given type object even though erasur result method given type pair even though erasur pairofa case type chosen correspond type pair highest superclass field method defin defin variant auxiliari function find type field method highest superclass defin maximum field type class c written fieldsmax c sequenc pair type field name defin follow class cx n du f maximum method type c written c defin follow class cx n du class cx n du undefin also need way look maximum type given field fieldsmax set 43 erasur express erasur express depend type express sinc type use determin downcast insert erasur rule optim omit cast trivial safe happen maximum type equal eras type write jej deltagamma erasur welltyp express e respect environ gamma type environ delta jnew nej strictli speak one think erasur oper act type deriv rather express sinc welltyp express 11 correspond type deriv abus notat creat confus 44 erasur method class erasur method respect type environ delta class c written jmj deltac defin follow e gj actual erasur somewhat complex involv introduct bridg method one end two overload method one maximum type one instanti type dont model extra complex depend overload method name model fj erasur constructor class jclass cx n n f k mj class c jnj 45 properti erasur defin erasur may investig properti first welltyp fgj program eras welltyp fj program expect 451 theorem erasur preserv type fgj class tabl ct ok delta gamma e 2 use fj rule proof induct deriv use follow lemma 1 delta n ok methodtyp fgj mtypemax jnj wellform type environ delta interestingli would intuit expect erasur fgj fj also preserv reduct behavior fgj program e reduc eras eeras reduc unfortun quit true exampl consid fgj express b express type b respec tive erasur anew pairjaj deltagamma jbj deltagamma fst fgj e reduc jaj deltagamma erasur jej deltagamma reduc ajaj deltagamma fj reduc jaj deltagamma new express note artifact nondeterminist reduct strategi happen even adopt callbyvalu reduct strategi sinc method invoc may obtain express like ae e new expr sion thu diagram commut even onestep reduct gamma bottom replac manystep reduct gamma gener synthet cast persist fj express although expect cast eventu turn upcast reduc new express exampl fj express reduc jej deltagamma synthet cast je ever alway case may less cast je reduct step involv method invoc consid follow class erasur class cx extend object extend object return new cxthisf class c extend object object f cobject f return new cthisf consid fgj express new canew erasur new cnew fgj e gamma fgj new canew canew af fj hand jej deltagamma reduc new cnew cnew af fewer synthet cast new canew cnew af erasur reduc express fgj subtleti observ eras term duce synthet cast may becom coarser cast insert reduc term eras may remov entir exampl remov downcast consid combin two oper replac coarser cast object remov upcast object affect result comput formal observ defin auxiliari relat relat fj express differ addit replac synthet cast let us call welltyp express expans welltyp express e written e obtain e combin 1 addit zero synthet upcast 2 replac synthet cast c c supertyp 3 remov synthet cast 452 theorem erasur preserv reduct modulo expans delta gamma e 2 e gamma fgj e exist fj express 0 0 jej deltagamma gamma fj 0 word follow diagram commut e reduc eras eras reduc easi corollari theorem shown fgj express e reduc fullyevalu express erasur e reduc exactli erasur fgj reduct get stuck stupid cast fj reduct also get stuck typecast use metavari v fulli evalu express defin follow 453 corollari erasur preserv execut result delta gamma e 2 e gamma fgj v jvj deltagamma 454 corollari erasur preserv typecast er e eha stuck subexpress csnew dte 0 0 stuck subexpress cnew dd expans erasur e posit modulo synthet cast erasur e 5 relat work core calculi java sever known proof literatur type sound subset java earliest drossopoul eisenbach 11 use techniqu later mechan check syme 20 prove sound fairli larg subset sequenti java like us use smallstep oper semant avoid subtleti stupid cast omit cast entir nipkow oheimb 17 give mechan check proof sound somewhat larger core languag languag includ cast formul use big step oper semant sidestep stupid cast problem flatt krishnamurthi felleisen 14 use smallstep semant formal languag assign cast system somewhat larger syntax type oper semant rule take perhap three time space sound proof though correspondingli longer similar complex publish proof subject reduct slightli flaw case motiv introduct stupid cast handl properli problem repair appli refin use three studi flatt krishnamurthi felleisen closest import sens goal choos core calculu small possibl captur featur java relev particular task case task analyz extens java common lisp style mixin extens core type system goal two system hand includ larg subset java possibl sinc primari interest prove sound java classbas object calculi literatur foundat objectori languag contain mani paper formal classbas objectori languag either take class primit eg 21 8 6 5 translat class lowerlevel mechan eg 13 4 1 19 system eg 19 8 includ gener class method fairli simpl form gener extens java number extens java gener class method propos variou group includ languag agesen freund mitchel 2 polyj myer bank liskov 16 pizza oderski wadler 18 gj bracha oderksi stoutamir wadler 7 nextgen cartwright steel 10 languag believ typesaf studi fgj first give rigor proof sound gener extens java use gj basi gener extens similar techniqu appli form gener found rest languag 6 discuss present featherweight java core languag java model close lambdacalculu embodi mani key featur java type sy tem fj definit proof sound concis straightforward make suitabl arena studi ambiti extens type sy tem gener type gj develop extens detail state fundament properti sketch proof fj quit complet enough model interest subtleti found gj particular full gj languag allow paramet instanti special bottom type use slightli delic rule avoid unsound presenc signment captur relev issu fgj requir extend assign null valu extens seem straightforward cost us pleas compact fj stand somewhat subtl aspect gj accur model fgj use bridg method compil gj jvm bytecod treat compil exactli gj would need extend fj overload formal gj also includ raw type uniqu aspect gj design support compat old unparameter code new parameter code current experi extens fgj raw type formal gener proven use applic domain fj area extrem simplic may yield signific leverag exampl work way formal java 11 inner class use fj 15 acknowledg work support univers pennsylvania nation scienc foundat grant ccr9701826 principl foundat program object igarashi research fellow japan societi promot scienc r theori ob ject ad type parameter java languag lambda calculu imper firstord calculu object extens core calculu class mix in core calculu class object make futur safe past ad gener java program languag safe type check static type objectori program languag extens system f subtyp steel jr java type system sound littl java relationship class class mixin inner class parameter type java java light typesaf definit pizza java translat theori practic simpl typetheoret foundat objectori pro gram prove java type sound type infer object instanc variabl inherit tr extens system italicfital subtyp syntact approach type sound parameter type java pizza java ad type parameter java languag javaisublightsubi typesafemyampersandmdashdefinit class mixin littl java pattern make futur safe past compat gener runtim type java program languag relationship class object data abstract java type system sound modular typebas revers engin parameter type java code parametr polymorph java type program languag theori object partial evalu classbas objectori languag imper firstord calculu object extens core calculu class mixin inner class true modul javalik languag ctr maurizio cimadamor mirko viroli reifi wildcard java use ego approach proceed 2007 acm symposium appli comput march 1115 2007 seoul korea peter hui jame rieli type minim aspect languag preliminari report proceed 6th workshop foundat aspectori languag p1522 march 1313 2007 vancouv british columbia canada giovanni rimassa mirko viroli understand access restrict variant parametr type java wildcard proceed 2005 acm symposium appli comput march 1317 2005 santa fe new mexico atsushi igarashi hideshi nagira union type objectori program proceed 2006 acm symposium appli comput april 2327 2006 dijon franc marco bellia eugenia occhiuto higher order program java introspect subsumpt extract fundamenta informatica v67 n13 p2944 januari 2005 tomoyuki aotani hidehiko masuhara toward type system detect nevermatch pointcut composit proceed 6th workshop foundat aspectori languag p2326 march 1313 2007 vancouv british columbia canada jeffrey fischer rupak majumdar todd millstein task languag support eventdriven program proceed 2007 acm sigplan symposium partial evalu semanticsbas program manipul januari 1516 2007 nice franc jaakko jrvi jeremiah willcock andrew lumsdain associ type constraint propag mainstream objectori gener acm sigplan notic v40 n10 octob 2005 gustavo bobeff jacqu noy compon special proceed 2004 acm sigplan symposium partial evalu semanticsbas program manipul p3950 august 2425 2004 verona itali alex potanin jame nobl robert biddl gener ownership practic ownership control program languag companion 19th annual acm sigplan confer objectori program system languag applic octob 2428 2004 vancouv bc canada neal glew jen palsberg typesaf method inlin scienc comput program v52 n13 p281306 august 2004 tian zhao jen palsber jan vite lightweight confin featherweight java acm sigplan notic v38 n11 novemb vijay menon neal glew brian r murphi andrew mccreight tatiana shpeisman alireza adltabatabai leaf petersen verifi ssa program represent aggress compil optim acm sigplan notic v41 n1 p397408 januari 2006 alex potanin jame nobl dave clark robert biddl featherweight gener confin journal function program v16 n6 p793811 novemb 2006 nathaniel nystrom stephen chong andrew c myer scalabl extens via nest inherit acm sigplan notic v39 n10 octob 2004 g bierman formal semant analysi object queri proceed acm sigmod intern confer manag data june 0912 2003 san diego california gurevich benjamin rossman wolfram schult semant essenc asml theoret comput scienc v343 n3 p370412 17 octob 2005 ernst klau ostermann william r cook virtual class calculu acm sigplan notic v41 n1 p270282 januari 2006 todd millstein colin bleckner craig chamber modular typecheck hierarch extens datatyp function acm sigplan notic v37 n9 p110122 septemb 2002 suresh jagannathan jan vitek adam welc antoni hosk transact object calculu scienc comput program v57 n2 p164186 august 2005 lorenzo bettini sara capecchi elena giachino featherweight wrap java proceed 2007 acm symposium appli comput march 1115 2007 seoul korea adriaan moor frank piessen wouter joosen objectori approach datatypegener program proceed 2006 acm sigplan workshop gener program septemb 1616 2006 portland oregon usa christian skalka trace effect object orient proceed 7th acm sigplan intern confer principl practic declar program p139150 juli 1113 2005 lisbon portug alessandro warth milan stanojevi todd millstein static scope object adapt expand acm sigplan notic v41 n10 octob 2006 dan grossman jeremi manson william pugh highlevel memori model mean transact proceed 2006 workshop memori system perform correct octob 2222 2006 san jose california matthew tschantz michael ernst javari ad refer immut java acm sigplan notic v40 n10 octob 2005 juan chen david tarditi simpl type intermedi languag objectori languag acm sigplan notic v40 n1 p3849 januari 2005 polyvio pratikaki jaim spacco michael hick transpar proxi java futur acm sigplan notic v39 n10 octob 2004 marko van dooren eric steegman combin robust check except flexibl uncheck except use anchor except declar acm sigplan notic v40 n10 octob 2005 franz achermann oscar nierstrasz calculu reason softwar composit theoret comput scienc v331 n23 p367396 25 februari 2005 alexand ahern nobuko yoshida formalis java rmi explicit code mobil acm sigplan notic v40 n10 octob 2005 gerwin klein tobia nipkow machinecheck model javalik languag virtual machin compil acm transact program languag system topla v28 n4 p619695 juli 2006 philip w l fong reason safeti properti jvmlike environ scienc comput program v67 n23 p278300 juli 2007 chri andrea yvonn coadi celina gibb jame nobl jan vitek tian zhao scope type aspect realtim java memori manag realtim system v37 n1 p144 octob 2007 depend type higherord mobil process acm sigplan notic v39 n1 p147160 januari 2004 atsushi igarashi mirko viroli variant parametr type flexibl subtyp scheme gener acm transact program languag system topla v28 n5 p795847 septemb 2006 alex potanin jame nobl dave clark robert biddl gener ownership gener java acm sigplan notic v41 n10 octob 2006 daniel j dougherti pierr lescann luigi liquori address term rewrit system applic type object calculu mathemat structur comput scienc v16 n4 p667709 august 2006 tian zhao jen palsberg jan vitek typebas confin journal function program v16 n1 p83128 januari 2006 todd millstein colin bleckner craig chamber modular typecheck hierarch extens datatyp function acm transact program languag system topla v26 n5 p836889 septemb 2004 chri andrea jame nobl shane markstrum todd millstein framework implement pluggabl type system acm sigplan notic v41 n10 octob 2006 radha jagadeesan alan jeffrey jame rieli type parametr polymorph aspect scienc comput program v63 n3 p267296 15 decemb 2006 martin abadi cormac flanagan stephen n freund type safe lock static race detect java acm transact program languag system topla v28 n2 p207255 march 2006 einar broch johnsen olaf owe ingrid chieh yu creol typesaf objectori model distribut concurr system theoret comput scienc v365 n1 p2366 10 novemb 2006 anindya banerje david naumann ownership confin ensur represent independ objectori program journal acm jacm v52 n6 p894960 novemb 2005