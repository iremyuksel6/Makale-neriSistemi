asynchron group key exchang failur group key exchang protocol allow group server commun asynchron network pointtopoint link establish common key adversari fulli control network link group member learn key current known group key exchang protocol reli assumpt group member particip protocol singl server crash server may termin protocol paper propos first pure asynchron group key exchang protocol toler minor server crash solut use constant number round make suitabl use practic furthermor also investig provid forward secreci respect adversari may break server observ intern state show group key exchang protocol among n server toler tc 0 server crash provid forward secreci adversari break less n 2tc server propos group key exchang protocol achiev bound b introduct group key exchang gke protocol allow group server commun complet network pointto point link establish common session key anyon outsid group observ network traffic permiss make digit hard copi part work person classroom use grant without fee provid copi made distribut profit commerci advantag copi bear notic full citat first page copi otherwis republish post server redistribut list requir prior specif permiss andor fee juli 2528 2004 st john newfoundland canada learn key session key later use achiev cryptograph goal like exampl multicast messag confidenti multicast data integr henc gke protocol essenti applic secur video teleconferenc collabor applic model environ like internet one assum asynchron network schedul messag determin adversari server access common clock main goal gke protocol ensur secreci session key ensur everi member group eventu termin protocol comput session key far gke protocol design meet goal long member group follow protocol specif 8 26 3 7 solut drawback singl server crash member group termin protocol make protocol specif vulner denial servic attack execut time protocol determin slowest member group one way solv problem explor amir et al 2 base gke viewbas group commun system gc provid abstract current live node server consist way chockler et al 15 provid survey gc sinc gc detect crash among server also execut gke proto col protocol react accordingli gcss reli timeout detect crash particip approach lead solut pure asynchron subject time attack howev paper propos first gke protocol pure asynchron model termin everi member long least major particip remain optim model solut conceptu simpl effici make suitabl practic particu lar consist follow two stage first stage group member exchang key inform use two commun round total 2 messag n denot size group second stage execut consensu protocol select contribut first stage session key comput protocol may use random asynchron consensu fulli asynchron model consensu protocol asynchron model augment failur detector 14 latter case approach yield modular solut gke model gcsbase protocol mention compar effici construct effici solut gke without failur 8 show price pay toler failur lie consensu protocol execut second stage also show commun complex construct nearli op timal particular show given optim solut consensu construct yield solut gke use 2 messag o1 commun round averag optim solut gke failur follow approach steiner 27 analyz secur protocol framework asynchron reactiv system propos pfitzmann waidner 23 particular first specifi target behavior gke protocol term ideal servic show protocol inputoutput behavior ideal servic approach benefit guarante com posabl ie secur applic reli ideal servic gke remain real protocol use implement ideal servic first prove secur construct socal corrupt model failur adversari may schedul observ network crash server break server observ intern state show model protocol toler tc n2 server crash optim set investig provid forward secreci strong corrupt model adversari addit allow break server observ intern state breakin compromis secur session key gener attack key gener previous afterward first show gke protocol toler tc 0 server crash toler strictli less n 2tc breakin show build gke protocol optim resili construct also practic use one execut consensu protocol addit 2 messag three round relat work one classifi previou work gke along two dimens assumpt made commun link framework use prove secur along first dimens one distinguish gke protocol assum authent network 19 8 26 24 27 gke protocol reli apriori distribut public privat key exampl provid publickey recent paper katz yung 21 close bridg two approach show gke protocol built authent network compil gke protocol insecur network apriori distribut public privat key compil add one addit commun round 2 messag respect framework use prove secur one identifi two approach one approach taken bresson et al 7 katz yung 21 extend framework model twoparti key exchang propos bellar et al 5 nparti case anoth approach taken steiner 27 work use gener framework model asynchron reactiv system one pfitzmann waidner 23 one canetti 12 defin prove secur therein advantag use framework secur preserv modular composit abovement work 3 26 24 7 also address dynam case gke server may join leav group session key must updat whenev occur recent amir et al 1 show dynam join leav protocol steiner et al 26 integr viewbas gc maintain common group key later use encrypt commun among group group key updat whenev underli gc detect chang group structur accomplish outlin 2 ie run correspond dynam gke protocol whenev server join leav case gc detect nest leav ie detect leav server execut dynam gke protocol protocol abort basic gke protocol run scratch among remain server establish key case nest leav also seen crashtoler gke note tc server crash one one approach lead tc sequenti execut basic gke protocol basic gke protocol steiner et al 26 use result otcn messag otcn round furthermor gcss reli timeout detect crash approach pure asynchron subject time attack organ next section introduc system model give formal definit gke consen su section 3 present construct gke failur weak corrupt model elabor op timal section 4 first introduc strong corrupt model adjust definit gke model prove upper bound number breakin one toler gke failur strong corrupt model final show build gke protocol optim resili 2 preliminari 21 framework comput model parameter secur paramet k function k call neglig c 0 exist k0 k 1 k c k k0 two ensembl fvar k gk 2 n fvar 0 k gk2n random variabl probabl distribut call comput indistinguish everi algorithm distinguish run probabilist polynomialtim first input follow quantiti neglig throughout paper abbrevi say var k var k 0 indistinguish write var k var k 0 studi protocol framework univers compos asynchron reactiv system pfitzmann waidner 23 sketch simplifi version model overview model protocol collect n probabilist polynomialtim ture machin n call server commun authent network net model ppt itm call collect fnet n g real system protocol network net denot sy real n model protocolspecif input output server term messag occur input output connect respect call set inputoutput connect server interfac 1 sy real n 1 reader familiar 23 interfac correspond specifi port model execut protocol network net run real system sy real augment two ppt itm user h adversari real call collect fsi real real g real configur user h repres higherlevel applic build top server may interact server interfac subset thereof may also commun real arbitrari point protocol real may attack server schedul network model attack server term special messag may occur design input connect cor also part interfac consid weak corrupt model avail attack adversari crash server happen server halt ie particip protocol anymor section 4 discuss strong corrupt model also breakin allow describ secur properti term servic f correspond real system sy real guarante interfac formal defin servic f term ideal system sy idealf n ideal system interfac real system compris singl ppt itm call trust host th f n serv interfac also run configur user h adversari ideal model ppt itm ideal may commun th f n arbitrari point protocol allow model nondetermin ideal servic f may control adversari secur protocol defin requir whatev happen arbitrari user h real system sy real could also happen user ideal system sy idealf distinguish ideal configur real one case say sy real n secur sy idealf n standard argument prove notion secur construct one specif one show construct user h adversari real ideal adversari ideal h distinguish correspond real configur ideal configur framework also allow modular composit protocol describ protocol run top ideal servic g model hybrid system sy hybrid g consist real system sy real ideal subsystem sy idealg n hybrid system server access sy idealg n user sy tem import properti framework real system sy real n secur sy idealg real system sy real n server access sy real instead sy idealg n secur sy hybrid g add detail elabor treatment framework refer 23 ideal real configur abstract level real ideal configur seen set ppt itm call machin connect commun tape 18 may interact everi commun tape exactli one machin write tape anoth machin read tape also call commun tape connect figur 1 show exampl configur real ideal system protocol servic f respect show connect denot arrow interfac connect cross dash line configur execut configur execut configur call run defin follow 2 begin run everi machin initi secur paramet k run proce step first step design machin call master schedul activ configur paper master schedul adversari everi step current activ machin may read commun input tape perform comput possi bli involv random choic write messag one commun output tape either halt termin activ either case machin read tape written activ proce next step machin halt messag written tape master schedul activ instead process continu master schedul halt network network net provid authent commun among server schedul determin adversari connect everi server connect net net connect adversari real connect adv net adv net work follow server send messag send messag connect net net happen net store j collect send tupl j connect adv net ad versari similarli real schedul messag deliv j send connect adv net happen output receiv say adversari deliv messag among end run collect contain tupl messag interfac interfac real ideal system compris connect cor n first two connect use invok provid system receiv servicespecif output system respect connect cor use model attack adversari server connect part interfac attack server affect servic system provid describ weak corrupt model adversari may crash server model messag crash sent connect cor see section 4 strong corrupt model also breakin allow happen real configur output crash cor halt happen ideal configur th f output crash adv th connect trust host th n also connect ideal connect adv th adv th connect use model nondetermin 2 model execut describ gener model describ origin work 23 suffici purpos real netin net sy real corin corin corout netin netout netout corout ideal th th sy n corin corin figur 1 configur real ideal system protocol servic f respect ideal servic f may control ad versari furthermor everi server connect real connect cor connect use model effect attack eg section 4 use connect reveal server intern data adversari result breakin readi state definit real system sy real n secur ideal system sy idealf n purpos let v real nha real denot probabl distribut view h intern state h messag h see run sy real n secur paramet k configur h real let v idealf nha ideal k defin analog say sy real n secur sy idealf user h real adversari real exist ideal adversari ideal distribut ensembl nha real kgk2nand fv idealf nha ideal kgk2n comput indistinguish composit framework allow describ protocol modular way ie protocol may build subprotocol composit model real system sy real compris two system sy real n sy real server sy real access subsystem sy real n user system ensur attack server also affect subsystem assum connect cor server link connect cor server output crash cor receiv crash cor subsystem may also ideal system case call entir system hybrid follow composit theorem import properti framework 23 theorem 1 composit theorem 23 hybrid system sy hybrid g n consist real system sy real n subsystem sy idealg n secur ideal system sy idealf n real system sy real n secur ideal system sy idealg real system sy real n consist sy real n subsystem sy real n least secur ideal system sy idealf n complex measur measur complex protocol term expect messag complex expect round complex r first measur repres bandwidth requir protocol defin follow let ha real denot upper bound expect number messag server send across network run sy real configur h real expect taken random choic server maximum ha real user h adversari real round complex measur run time pro tocol defin assign round number messag sent server across network follow note server send messag across network respons input user respons messag 0 network first case assign round number 0 second case assign round number r 1 r round number 0 let r ha real denot upper bound expect highest round number assign messag run sy real configur h real expect taken random choic server r maximum r ha real user h adversari real 22 ideal system group key ex chang ideal system sy idealgk n group key exchang model n server repeatedli establish session key particular say server start session tag id input start id occur id arbitrari bit string repres uniqu identifi session similarli say server finish session tag id output nish id key occur trust host th gke n model tradit secur properti one expect gke protocol particular guarante session key everi session id gener independ random properti sometim also call fresh furthermor guarante mutual key authent mean everi server comput key session id definit 2 captur idea formal yet address forward secreci becom issu adversari break server learn intern state discuss model section 4 definit 2 ideal system sy idealgk n group key exchang consist trust host th gke given follow transit rule init system initi set f start server start session tag id trust host add id set output messag id adversari adversari input nish id id 2 first add id set f next random f0 1g k final output deliv id id recal goal build gke protocol secur also guarante termin everi server even tc server crash captur follow definit tc resili group key exchang protocol definit 3 call protocol tc resili group key exchang protocol sy real n secur sy idealgk n everi run configur sy real n tc server crash follow hold noncrash server start session id finish session id provid adversari deliv messag among noncrash server 23 ideal system consensu consensu protocol everi server receiv input bit string length lk produc output bit string length lk goal server output bit string bit string correspond input least one server give ideal system consensu serv build block construct gke pro tocol model n server repeatedli concurr agre bit string length lk everi consensu instanc identifi tag id model server start consensu instanc tag id input v messag propos id v occur happen also say server propos v id similarli model server termin consensu tag id valu v 0 messag decid id v 0 occur case say server definit 4 ideal system sy idealcon n consensu consist trust host th con given follow transit rule init system initi th con set id id propos server propos v id th con n add tupl set p id output proposeid v adversari decid th con receiv decid idiv ad versari verifi consult p id id server propos valu id least one server propos v id server decid anoth valu id check succeed set id v output decid id v user need consensu protocol secur also guarante termin everi server even server crash follow definit captur formal definit 5 call protocol tc resili consensu pro tocol sy real n secur sy idealcon n everi run configur sy real n tc server crash follow hold noncrash server propos valu id decid valu id provid adversari deliv messag among noncrash server bestknown random asynchron tc resili consensu protocol deriv protocol canetti rabin 13 actual solv harder problem byzantin agreement server may crash behav arbitrarili uncondit secur consensu protocol deriv describ 4 section 1432 use expect number 3 me sage proce expect o1 round resili assum trust dealer initi system work realist model comput bound adversari exist cryptograph protocol due cachin et al 10 9 nielsen 22 use 2 messag o1 round averag optim resili mention introduct also possibl implement consensu failuredetector model 14 effici protocol exist failur detector local modul avail everi server period output list server suspect crash usual base time assumpt pursu focu fulli asynchron model note certain practic set protocol might actual effici fulli asynchron protocol mention 3 implement 31 describ protocol gke build subsystem consensu semant secur encrypt scheme 17 k element f0 1g k keygener algorithm k encrypt algorithm e decrypt algorithm follow comput done f 2 k indic otherwis server start session tag id first choos contribut randomli f0 1g k goal comput session key set g n tc server run k gener pair public keypriv everi server server receiv public key p j anoth server j send contribut valu encrypt server j receiv contribut valu server like comput differ d1 yu 1 propos sequenc consensu subsystem cs arbitrari constant string note differ pair contribut valu may leak adversari sinc inform contribut valu remain secret server decid two sequenc hu un c h consensu instanc idjc comput session key follow first choos arbitrari receiv um notic exist receiv least n tc valu j point hold tc n2 comput session key um detail protocol given algorithm 1 algorithm descript make convent l l n c u l u l n c n tc l 2n easi see everi server termin also easi verifi everi server comput session key regardless choos final sinc upon initi upon input start id choos uniformli random f0 1g k send enc everi server upon receiv enc send key part id z ij server j z ij ep j upon receiv key part id z ji server j propos upon decid idjc choos um sk um output algorithm 1 protocol server implement gke crash contribut valu remain secret argu hold session key techniqu faulttoler abstract gke protocol burmest desmedt 8 protocol publickey encrypt scheme instanti elgam scheme server choos way jointli comput valu g gener multipl group prime order q session key deriv valu one contribut valu j prove follow theorem next section theorem 2 tc resili consensu protocol real system sy real n consist sy real n subsystem sy real n tc resili group key exchang protocol improv repeatedli gener session key faster way run protocol everi session idea use famili pseudorandom function 16 function map bit string use session tag id bit string length k pseudorandom function famili properti one distinguish id valu randomli chosen know index allow server repeatedli gener session key run protocol get secret index session key session tag id simpli comput sid remark construct secur weak corrupt model adversari break server learn index 32 secur analysi establish theorem 2 prove secur protocol show tc resili consensu protocol sy real n secur ideal system sy idealgk sy real n live ie server u crash run sy real start session id server u finish session id provid tc server crash messag among noncrash server deliv show live sy real n argu follow assumpt tc server crash follow everi server u receiv n tc contribut valu j propos valu id jc assumpt resili consensu protocol everi server therefor also decid sequenc hu idjc construct everi server know step differ valu fy j g tc n2 follow everi server exist least one index know contribut valu um henc server u abl comput key finish session id show secur sy real n consid hybrid system sy hybrid con n consist real system sy real n ideal subsystem sy idealcon n consensu note suffic show sy hybrid con n secur sy idealgk sinc secur sy real follow composit theorem assumpt secur consensu protocol show sy hybrid con n secur sy idealgk use construct argument particular provid everi user h everi adversari hybrid hybrid system sy hybrid con n construct adversari ideal ideal system view h run ideal hybrid system configur h ideal hybrid respect comput indistinguish recal view h run hybrid system also compris messag exchang hybrid order ensur messag distribut messag h exchang ideal run ideal system construct ideal use techniqu call blackbox simul specif assum given hybrid adversari hybrid blackbox construct ideal simul sim given blackbox hybrid idea simul feed black box hybrid simul view run hybrid system sim must comput view base inform receiv th gke simul view indistinguish hybrid adversari would see correspond hybrid run use output blackbox hybrid simul messag exchang h construct illustr figur wlog show build ideal configur h interact ideal system th th ideal hybrid th con th con th corin corin gke corout corout net nn figur 2 construct ideal black box access hybrid simul usual blackbox simul construct simul sim combin simul user h simul hybrid system sy hybrid con n h interact th gke n adv th adv th simul hybrid system sy hybrid con entir interfac sy hybrid con interact hybrid connect adv net adv net adv th con adv th con cor j h provid input sy hybrid con n h provid th gke moreov schedul th gke n whenev server con output session also output session key id precis h work follow upon receiv start id th gke send start id con upon receiv deliv id k con send nish id th gke upon receiv crash th gke send crash con compar view show everi h hybrid view h run hybrid system sy hybrid con configur h hybrid indistinguish view h run ideal system sy idealgk configur adversari ideal suffic show joint view h hybrid hybrid ideal run respect indistinguish note construct ideal joint view welldefin ideal run argu induct step run base case ie indistinguish initi state follow construct remain show joint view h hybrid hybrid run step l 0 indistinguish view ideal run step l induct hypoth esi hold step l induct step first note joint view h hybrid chang one either send messag receiv messag first case induct step follow directli induct hypothesi second case argu follow protocol specif messag receiv h hybrid differ session statist independ henc suffic show probabl distribut receiv messag associ singl session ideal hybrid run respect indi tinguish first investig distribut ideal run let denot valu comput con run valu contain messag receiv h hybrid includ run subset un c ig subset linear combin valu y1 y2 y2 denot valu random variabl v ideal k notic may ignor index vector propos server determin schedul hybrid thu ident distribut ideal hybrid run distribut v ideal k follow r ideal hybrid run h hybrid receiv messag differ distribut particular session key drawn random f0 1g k sum specif distribut v hybrid k receiv messag hybrid run follow r u l let uk denot uniform distribut f0 1g k show v ideal k suffici show ideal k one comput valu follow hold mod un c 2 valu comput follow let denot valu mod n1 v ideal k let un c 1 u1 furthermor valu u note everi valu comput follow one comput u 1 sk remain valu comput follow easi verifi comput valu 2 furthermor 3 hold uniformli distribut f0 1g k final 4 hold semant secur encrypt scheme use 33 effici analysi analyz expect messag round complex construct gener singl session key first paragraph give complex two concret instanti consensu protocol found literatur second paragraph show construct almost optim sens given optim consensu protocol construct yield almost optim gke protocol concret effici let denot gke protocol subprotocol consensu recal r denot expect round messag complex respec tive protocol cf section 21 easi see best known solut term round complex gke without failur 8 proce two round use 2nn 2 me sage henc price pay toler crash essenti singl consensu execut give asymptot complex known protocol consensu specif consid consensu protocol cr93 canetti rabin 13 consensu protocol cks00 cachin et al 10 simplifi accord remark section 23 r resili dealer optim construct investig optim protocol term round messag complex particular let opt denot optim protocol gke let opt denot optim protocol consensu optim either round complex messag complex respect depend context let opt denot gke protocol subprotocol opt con sensu want know close effici opt effici opt show r opt opt argu follow construct protocol r opt substitut 5 6 give henc suffic show optim consensu protocol opt use 6 round 6n 2 messag averag optim solut opt gke show construct argument specif show build given gke protocol 0 consensu protocol 0 use averag 6 commun round 6n 2 messag singl execut 0 assumpt opt roundoptim follow r opt assumpt opt messageoptim follow opt hold gke protocol 0 also hold opt impli 7 8 deriv protocol 0 protocol coin pro pose cachin et al 10 base protocol coin common coin common coin protocol provid everi server random bit unpredict ad versari consensu protocol coin invok coin twice averag proce expect 62 rcoin round expect messag complex 6n main idea behind protocol 0 modifi coin follow begin server execut gke protocol get secret key sk follow origin protocol coin except instead invok coin get ith random bit c use ith bit sk k random bit use server also use sk seed pseudorandom gener deriv random bit remain show coin tc resili consensu protocol hold result follow composit theorem show common coin deriv 0 unpredict adversari hold common coin deriv coin follow directli definit th gke n guarante adversari predict singl bit session key even see bit key 4 thestrongcorruptionmodel section investig gke presenc stronger adversari may also break server observ intern state first formal describ attack desir secur requir gke model prove upper bound number breakin gke protocol toler describ implement protocol optim resili 41 model breakin forward secur model breakin messag break sent connect cor repres arbitrari bit string real system sy real n protocol server receiv messag comput variabl state send done state cor real happen also say adversari break variabl state compris intern data explicitli eras includ string receiv break me sage ensur protocol built subprotocol adversari learn intern state receiv system model cor everi messag break state output cor henc output intern state adversari desir secur requir gke protocol model call forward secreci mean break server reveal session key current comput server noth previous comput session key defin threshold version forward secreci ie requir gke protocol forwardsecur long adversari break differ server formal captur notion secur term ideal system sy idealf gke contain trust host th fs gke b trust host work exactli th gke cf definit 2 except maintain addit set b contain indic brokeninto server initi follow addit transit rule breakin adversari break server th fs gke add set b choos everi id 2 si id random f0 1g k key defin yet comput set k key reveal follow final output key k adversari note adversari adapt sens may break server point run begin comput definit secur gke protocol model follow definit 6 call protocol tc b resili group key exchang protocol sy real n secur sy idealf gke everi run configur sy real n tc server crash follow hold noncrash server start session id finish id provid adversari deliv messag among noncrash server 42 upper bound number breakin given gke protocol toler tc server crash investig mani breakin one prove protocol secur th fs gke prove protocol secur ideal servic f one show construct everi user h everi adversari real sy real n adversari ideal sy idealf n h distinguish correspond ideal configur real one difficulti construct ideal ensur commun h way real cur rentli known way done construct ideal use techniqu blackbox simul section 32 argu tc 0 protocol proven tc b resili gke protocol use blackbox simul word show n 2tc upper bound number breakin one toler build forwardsecur gke see assum toward contradict exist resili gke protocol show build particular user h real adversari real ideal adversari ideal base blackbox access real follow hold joint view h real run real configur effici distinguish joint view h real run ideal configur contradict initi assumpt tc b resili gke protocol construct real user invok singl session id follow adversari real run two stage first stage choos arbitrari set n tc server run protocol arbitrari way ensur messag sent among server deliv messag deliv either sent sent server server crash broken everi server finish session id first stage end second stage real crash tc arbitrari server break remain n 2tc server continu run protocol arbitrari way ensur server crash broken messag sent among noncrash server deliv everi noncrash server finish session id second stage end adversari halt notic assumpt tc b resili gke protocol stage termin moreov everi server finish session id output key let sk denot key let state j denot intern state server j end stage one let denot set messag sent yet deliv server first stage fact server interact first stage server impli session key sk effici comput state fstate j g server otherwis server could comput sk output key second stage suppos want build adversari ideal ie want build simul provid blackbox adversari real simul inform seen real run base inform receiv th fs gke definit th fs gke nt b real simul receiv inform session key sk 0 trust host output user henc inform simul feed real compris fstate j g statist independ sk 0 therefor defin key sk real run key sk defin inform alway equal key sk 0 user ceiv conclud joint view h real run ideal real configur respect effici distinguish 43 implement optim silienc describ tc b resili gke protocol fs deriv first explain forwardsecur describ necessari modif deriv fs protocol server continu particip protocol output session key sk specif still respond arriv enc key messag send back encrypt contribut necessari ensur everi noncrash server eventu comput session key result adversari break server server output sk access server contribut may comput key sk contradict forward secreci requir adversari must learn inform sk break b server output key sk ensur forward secreci server could simpli eras local data output key howev result protocol would live anymor slowest server might never receiv enough contribut server comput key ensur forward secreci without compromis live extend follow addit comput session key sk everi server also comput share sk set b share reveal inform sk wherea set b share allow effici comput sk server comput share session key output key eras local data except share ensur forward secreci continu send share everi server request ensur everi server eventu receiv enough inform comput session key henc ensur live comput share sk use polynomi secret share propos shamir 25 share secret sk comput first choos random polynomi f degre b comput everi share techniqu requir everi server deriv share session key sk use polynomi f ensur gener parallel defin polynomi session key sk defin gener parallel done modifi protocol server choos singl contribut valu contribut vector use vector instead throughout protocol op erat addit encrypt simpli appli componentwis result server comput desir form vector sk 2 f0 1g k could also use singl session key sk conjunct pseudorandom function f g i2f01g k deriv coeffici polynomi sk sk 2 could proven secur adapt adversari reason one adjust server send contribut anoth server j noncommit way 11 done follow server j receiv server public key p choos random vector r ij encrypt componentwis p get ij send c ij server upon receiv c ij server deriv server j upon receiv messag server j comput modifi protocol outlin yield desir forwardsecur protocol fs use one execut consensu protocol addit 3n 2 messag 3 commun round secur proof protocol fs deriv modifi proof protocol accordingli 5 r secur group commun use robust contributori key agreement explor robust group key agreement new multiparti authent servic key agreement protocol distribut comput fundament authent key exchang secur dictionari attack key agreement confer key agreement provabl authent group diffiehellman key exchang secur effici confer key distribut system secur effici asynchron broadcast protocol extend abstract random oracl constantinopl practic asynchron byzantin agreement use cryptographi adapt secur comput univers compos secur new paradigm cryptograph protocol fast asynchron byzantin agreement optim resili unreli failur detector reliabl distribut system group commun specif comprehens studi construct random function probabilist encrypt knowledg complex interact proofsystem confer key distribut system authent multiparti key agreement scalabl protocol authent group key exchang threshold pseudorandom function construct applicatoin model asynchron reactiv system applic secur messag transmiss studi group rekey share secret key agrement dynam peer group secur group key agreement practic secur faulttoler confer key agreement protocol tr construct random function knowledg complex interact proof system fast asynchron byzantin agreement optim resili adapt secur multiparti comput random oracl constantipol key agreement dynam peer group share secret distribut comput provabl authent group diffiehellman key exchang group commun specif key agreement confer key agreement secur effici asynchron broadcast protocol threshold pseudorandom function construct applic authent multiparti key agreement practic securefaulttoler conferenckey agreement protocol studi group rekey univers compos secur explor robust group key agreement model asynchron reactiv system applic secur messag transmiss secur group commun use robust contributori key agreement ctr jonathan katz ji sun shin model insid attack group keyexchang protocol proceed 12th acm confer comput commun secur novemb 0711 2005 alexandria va usa emmanuel bresson olivi chevassut david pointchev provabl secur authent group diffiehellman key exchang acm transact inform system secur tissec v10 n3 p10e juli 2007