full formal sldresolut calculu induct construct paper present full formal semant definit program calculu induct construct first describ formal proof firstord term unif proof obtain similar proof deal quasiterm thu show relat induct set subset defin predic sldresolut explicit defin renam process use sldderiv made explicit thu introduc complic usual overlook proof classic result last switch lift lemma sound complet theorem formal present two lemma usual omit need develop also contain formal basic result oper fixpoint gener set proof result present check proof assist coq b introduct paper concern program languag semant aim formal sldresolut calculu induct construct coq first term substitut dene unic theorem constantli use denit semant denit program prove similar theorem quasiterm 26 present formal denit syntact object use logic program atom queri claus etc introduc interpret scheme last declar oper semant denit program introduc proof fundament result theori logic program formal lift switch lemma sound complet theorem reader assum familiar terminolog basic result semant logic program introduc 2 19 cours exist extens literatur logic program 3 2 17 19 28 theorem prove one wonder use formal recal formal proof rst consist give formal denit object use explicit state priori hypothes need last infer conclus therefor sinc proof encod use coq proof assist object properti explicit dene well hypothes need proof step proof also explicit result denit applic induct scheme lemma orem make dierenc initi proof found mani book logic program henc formal proof bring us level detail often left reader see take account detail often consid minor inform present proof get bit complic furthermor see assumpt usual overlook requir theorem prove main diculti develop concern denit variabl renam process use sldderiv made explicit thu introduc complic usual omit ted instanc see proof complet theorem delic seem requir formal point view sever technic lemma paper devot detail howev 27 j c shepherdson point inaccuraci basic result theori logic program present discuss role standard apart sldresolut let us give famou ex ampl come paper show classic result incorrectli state famou book 19 j w lloyd give fundament theorem complet sldresolut follow form let p denit program g denit goal everi correct answer p fgg exist comput answer p fgg substitut 1994 j c shepherdson wrote theorem true 27 gave simpl counterexampl cours true nd two substitut g howev although act variabl occur g impli restrict yield anoth typic exampl lift lemma gener state follow program n goal substitu tion suppos exist sldrefut p fng sequenc mgu exist sld refut p fng sequenc mgu 0 n 0 0 gener assumpt substitut suppos howev order formal correspond proof build deriv start n assum hypothes let x variabl occur domain n occur n wherea x use renam claus deriv start n use deriv start n henc order exactli use sequenc variant claus alway suggest two deriv suppos variabl use renam input claus deriv start n occur n furthermor similar reason order prove 0 suppos variabl use renam input claus deriv start n occur domain similar problem happen proof switch lemma assert sld deriv two atom l 1 l 2 success select also select revers order deriv state renam variabl z z want exactli use variant c 1 c 2 two deriv assumpt requir hypothes come initi deriv howev want select l 2 l 1 c 2 c 2 must satisfi noth switch lemma ensur properti depend standard apart use sldderiv possibl variabl occur r 0 occur r 1 occur c 2 avoid problem c 1 c 2 must satisfi hold use standard apart come 2 henc formal proof bring us greatest level detail problem due variabl occur input claus variant claus use resolut step coincid variabl deriv surprisingli anoth problem come necess explicit priori assumpt need obtain proof curious even requir seem natur common practic logic program suppos proof paper basic result assumpt variabl occur claus use without justic cours exist independ result assert exist deriv depend choic variabl input claus even choic import proof result still correct howev properti variabl formal prove independ result furthermor express properti object occur theorem instanc suppos proof claus share variabl goal built proof goal appear theorem standard semant la herbrand denit program deal wellknown object substitut renam howev sever nonequival denit object found literatur thu introduc confus exampl mean renam often assum simpler formal denit impli 15 h p ko e nadel point dierent author give subtley dierent denit substitu tion cite six nonequival denit point implic instanc relat thu give dierent version lift lemma therefor substitut simpl might rst ap pear motiv author r kemp g ringwood 14 take instanc relat primit rather take substi tution also confus literatur concern denit gener unier mgu short 18 j l lassez j maher k marriot compar four nonequival denit mgu cours logic program concern problem also subject confus sldderiv follow denit renam process requir sldderiv ation found confus aris condit fact dene dierent hypothes least two reason condit first standard apart need order abl unifi select atom head variant claus use last reason obtain gener possibl answer substitut therefor formal settl problem variabl renam long caus error eld logic program descript coq use version 62 proof assist coq 4 allow interact develop formal proof coq base logic framework known calculu induct construct 5 extens type calculu support depend type polymorph type basic idea underli logic framework base curryhoward isomorph 9 17 proof proposit seen function object instanc proof proposit form b function map everi proof proof b type function isomorph prove proposit type proposit identi object proof furthermor framework allow denit induct coinduct type speci constructor classic exampl induct type denit natur number dene system coq induct three induct principl automat gener denit natid pnatsp onnatp np nnnatp n id either indprop recset recttyp classic exampl coinduct type type innit sequenc form element type stream shorter coq introduc coinduct set stream asetconsastream astream note induct principl coinduct type coq also allow denit mutual recurs type shall use two distinct sort prop type logic proposit set type data type specic type prop set type construct proof within coq interact process given goal user speci deduct rule appli coq comput theorem prover solv success subgoal tactic ie function build proof given goal proof elementari subgoal goal appli tactic subgoal n 3 term unic rst step develop consist natur formal uni cation term unic algorithm deal two set term substitut let us rst present formal denit given function signatur ie countabl set ariti function ar countabl set x variabl symbol term x dene induct follow f function symbol l list term length n tff l term time introduc depend type l n x list term length n x l n x mutual recurs substitut dene applic x x recal given two term 1 2 substitut call unier 1 2 unift call minim unier minunift everi unier 0 1 2 0 ie exist substitut 0 0 denot predic lesssubstt unier 1 2 call gener unier minim idempot ie 8x 2 x denot predic idempotentt relev 1 2 ie everi variabl occur domain also occur list form 1 everi variabl occur rang also occur list form 1 2 underlt denit extend list term instead formal unic term follow standard approach base unic algorithm sinc similar formal proof deal quasiterm obtain j rouyer 26 transpos unic properti quasiterm term origin quasiterm introduc z manna r j walding order illustr techniqu program synthesi 21 unic algorithm deriv prove specic satis proof veri within cambridg lcf theorem prover 10 l c paulson 23 similar proof obtain j rouyer 26 quasiterm dene follow use obtain variabl quasiterm constant quasi term function quasiterm consarg use build nonempti list quasiterm term list term merg singl data type instanc term fx gx obtain follow precis j rouyer prove exist unier q 1 q 2 two quasiterm well form unier quasisubstitut inde substitut clearli x proper subset q x consargconsargx x x neither term list term order transpos unic properti dene map f wellform quasiterm ie quasiterm repres term term howev coq incorpor notion partial function total current solut taken develop consist consid simultan quasiterm proof well form henc predic p q x character wellform quasiterm dene depend type p two approach possibl rst one correspond program languag type p dene recurs structur quasiterm q consid q well form use appli q x proof proposit fals obtain q proof wellform second approach correspond proof languag approach type dene recurs structur proof quasiterm consid well form addit interest unic theorem motiv develop approach base reusabl formal proof therefor develop show dene partial function precis outlin two induct dene set predic p e 1 exist biject e 2 dene follow function two characterist problem follow 1 dene predic allow direct denit function predic e p 1 therefor everi express stand 8e 2 know biject furthermor would like function f 21 easi obtain see everi e 2 e 2 relat element e 1 furthermor everi e 2 denit f 12 rather critic denit pred icat domain f 12 techniqu use consist dene induct everi e 1 e 1 collect pe 1 proof p logic equival pe 1 comput content cours everi e 1 e p 1 must exist proof p way posit dene recurs structur proof function 8e 1 henc accord def init proof view object data structur mathemat collect inhabit set type explicit algorithm content thu allow proceed induct proof dene recurs function structur proof sinc e 2 isomorph subset aim map result e 1 result e 2 prove conserv lemma let u 1 u 2 two formal properti respect e 1 e 2 quasiun unic assum properti u 1 hold e 1 given two function f 12 f 21 prove properti u 2 e 2 follow reason let e 2 element hypothesi u 1 f 21 e 2 exist proof p f 21 claim follow sinc manner prove unic theorem without realli work unic prove conserv lemma full present proof see 13 theorem 31 unic given two term 1 2 either 1 2 uniabl exist idempot minim unier relev term 4 object use logic program present section formal denit object use logic program introduc interpret schema first let relat signatur collect x atom induct dene follow p predic symbol l list term length n plp l atom queri denit claus denit program horn claus dene atom ariti arfun nat mutual induct ar f term listterm nat set con nnatterm listterm nlistterm n subst var term induct unificationtt1t2termset con t1 con t2 nil con t1 con t2 nil unificationt t1 t2 induct quasiterm set vvarquasiterm cfunquasiterm rootfunquasitermquasiterm consarg quasitermquasitermquasiterm tabl 1 term substitut unic order abl give interpret object necessari attach mean symbol occur therefor let us dene interpret signatur let n depend polymorph type list element type length n bool set boolean usual oper order dierenti oper prop dene two collect map f n form map n p n form map n bool accord denit interpret domain dene classic way f arf henc given interpret resp nari function f predic p interpret map f bool posit give follow interpret x induct atom set plpprediclistterm arityp patom induct request set truereqrequest consreqatomrequestrequest c x definit clausesetatomrequest induct program set nilpgmprogram conspgmclauseprogramprogram induct horn set hpprogramhorn hrrequesthornhorn tabl 2 syntact object scheme first dene x collect valuat map x term list term interpret follow let interpret domain term resp list term l length n interpret applic dene f l v l nil con constructor n con constructor l n x henceforth nd conveni write denot interpret object claus interpret applic dene l v r fals b true v ri v v b r v true c v v r v induct dsetnnatlist nd definit fi set set dsetffunfn ariti ar f x definit valuationsetsetasetvara fixpoint interpt dsetifi dtterm valuat ddvvaluat case ffunllistterm ariti ar f f applyl ariti ar f l v end applyl dsetifi dnnatllistterm n valuat list n vvaluat dnnatlist ncase l nil n0natt0terml0listterm n0 con n0 interpt t0 v applyl n0 l0 v end bool induct boolset truebool falsebool dsetnnatlist n bool definit pi set set dsetppredicpn arityp p tabl 3 interpret interpret domain said model object atom queri everi valuat v case write depend interpret schema use queri r write either r j r note wherea given valuat v 2 x proposit true decid sinc innit set proposit necessarili decid introduc mani complic follow termin dene relat logic consequ j horn claus queri follow gener interpret schema definit interpo dsetfi dpi valuat dbooldsetiffi dippi vvaluat case end p0predicl0listterm arityp p0 request fals orb neg interpp ip l0 v interpr ip r0 v request true andb interpp ip l0 v interprn ip r0 v claus aatomrrequest orb interpr ip r v interpp ip v true andb interpc ip c0 v interpp ip p0 v pprograminterpp ip p v andb interpr ip r0 v interph ip h0 v definit ovaliddsetfi dpi doprop vvaluat dinterpo ip l vtrue request prop hvalid ip hreqnvalid ip r tabl 4 interpret model 5 sldresolut logic approach denit program split two part declar semant determin comput oper semant given sldresolut describ comput execut denit program base combin two mechan replac unic form comput specic form theorem prove call sldresolut select linear denit 51 resolut transit resolut rule infer rule dene deduct relat c denit claus c c program p atom call head c c queri call bodi c r queri r renam substitut variabl occur rc also occur r write resolut rule follow abbrevi manner mgu r n rc r n stand n 1th atom r atnreq rn rc queri obtain replac r n 1th atom queri rc changenr n rsubstreq r bodyc c r resolut step two choic made choic select atom choic input claus whose head uni select atom therefor resolut rule view rule move state anoth dene follow first introduc sr collect map x x classic properti substitut extend sr predic p r sr character renam substitut r occur domain r also occur rang r r idempot resolut state pair r substitut r queri give formal denit renam condit satis transit r first initi resolut state r must satisfi r renam substitut r renam variabl occur c variabl denot prc r c last dene two predic satis variabl occur rang r also occur domain p rs queri r p rr posit dene predic p collect transit mgu 1 2 atmgu mean gener unier 1 2 52 sldresolut deriv nite valid sldderiv nite sequenc compos transit satisfi predic also henc deriv dene induct list proof properti sldresolut obtain induct deriv use left induct schema howev sound proof shall need right one henc dene two collect deriv follow l r isomorph l l c l z left induct z right induct two function dene order relat two set transit dene predic l character valid deriv sequenc compos transit satisfi predic p addit renam condit introduc follow deni tion two transit e 1 f e 2 f said compos function l comput list variabl occur input claus deriva tion dene predic p l recurs dene p p resolut state definit statesetsubstrequest fst snd project product type sr definit renamevarvar definit goodrenamerenamepropsrrenam yvarxyrdom sr xrdom sr sr xsr yrdom sr xrrang sr x definit renamecrenameclauseprop prr definit renameoutreqrenamerequestprop pr definit renameoutdomrenamesubstprop xvarrdom r xs r xtv r x induct transsettransconsstateprogramnat clauserenamesubstatomstatetran induct rsl eistatepprogramnnat cclauserrenamessubstaatomefstateproprslinit le n lengthr snd ei rsubstat r headc c h4 goodrenam r xvarsubstt fst ei x substreq rsl ei p n c r ef definit rsltranspropttran case aatomefstatersl ei p n c r ef end tabl 5 transit l induct derivset derivcon deriv tran deriv induct derivfcon tran derivf derivf induct coupletransok t1transt2transprop coupletransokinitptran t1ptran t2 stateendt t1stateinitt t2rsl t1rsl t2 coupletransok t1 t2 fixpoint listvarcd dderivlistv case varcl rsubstcl srtran t0 ctran t0 d1derivt1transappv listvarcd d1 varcl rsubstcl srtran t1 ctran t1 end fixpoint derivok dderivprop case coupletransok endd d2 t2derivok d2 rrang srtran t2 x end tabl deriv stand last transit 0 r stand initi queri r stand renam substitut use transit 0 denit allow full formal classic properti sld resolut present next section 6 basic result sldresolut dene relat satisfi sever import properti logic one sound complet two other particular form comput lift switch lemma 61 two classic lemma 611 switch lemma resolut step deriv atom claus must select follow wellknown lemma ensur nondetermin choic atom matter call dont care nondetermin lemma 61 switch valid deriv two atom b success select also select revers order deriv state renam variabl lemma prove decompos two transit id r 0 z id stand ident substitut tv furthermor note suppos rst select atom second queri r that assumpt proof present detail 12 classic requir constantli denit variabl renam process use valid deriv note explicit build proof substitut relat two deriv state thu allow us assert renam variabl 612 lift lemma lift lemma anoth classic lemma use complet proof said introduct assum addit condit renam use order prove lemma 62 lift let id r valid deriv nite list variabl l dom l exist valid deriv id r queri r f r proof obtain induct deriv use left induct schema two deriv state explicit relat full present see 12 62 two fundament properti answer solut dene oper declar semant denit program given denit program p solut queri derivok fst stateinitd dtv snd stateinitd dsubstreq eta r rrang srtran x ptran t1ptran fst ex rfrequestsnd stateendd d0 substreq fst stateendd d0 rf snd stateendd dsubstreq fst stateendd substreq eta rf xvarsubstt fst stateendd eta x derivok derivcon derivcon t1 t2 le plu ntran t1 lengthr bodyc ctran t1 ntran t2 fst stateinitd dtv derivok derivcon derivcon ntran t3 minu ntran t2 lengthr bodyc ctran ntran t4ntran snd stateendd derivcon derivcon t1 t2 substreq r snd stateendd derivcon derivcon snd stateendd derivcon derivcon t3 t4 ex vvar r xtv v tabl 7 lift switch lemma fst stateinitd dtvsnd stateendd dtruereq substreq answer snd stateinitt headd tabl 8 sound sldresolut r substitut h p p declar descript desir output denit program queri convers oper counterpart solut answer id r valid deriv answer r 621 sound sldresolut sound theorem express everi answer queri also solut queri theorem 61 sound denit program p queri r get valid deriv id r correspond proof requir notion free transit transit satisfi resolut rule except unier use necessarili gener unier henc condit initi step condit h5 predic rsl necessarili hold proof obtain use right induct schema 622 complet sldresolut let us turn formal complet theorem sld resolut exist solut queri exist answer queri form complet theorem weaker usual complet theorem sound theorem prove dont relat solut answer usual need new denit lemma rst let us summar first dene herbrand interpret respect denit dene induct collect ground term groundterm term contain variabl obtain use function symbol occur set also call herbrand univers time collect l n list ground term dene similarli dene collect ground atom groundatom form use relat symbol ground term herbrand univers argument set also call herbrand base also dene collect ground substitut groundsubst map x exactli correspond x furthermor avoid uninterest complic assum signatur use contain constant ie 0ari function symbol henc aboveden set nonempti 8 j h gallier discuss detail need least one constant symbol context herbrand theorem introduc denit herbrand interpret written h everi f 2 f h map arf dene tfg uniqu constructor ground term l 0 type l arf obtain l use denit dene herbrand interpret interpret ground term base h sinc herbrand interpret assign constant function xed seem possibl identifi herbrand interpret subset herbrand base dene predic character ground atom howev note specic correspond two dierent kind specic wherea everi herbrand interpret everi ground atom proposit decid arbitrari predic p proposit pa therefor later well use theorem need get predic herbrand base herbrand interpret proposit assumpt use assumpt map fixpoint character least herbrand model complet sldresolut obtain cost strong assumpt implicitli suggest ident type everi denit program p dene predic least herbrand model p intersect herbrand model accord denit 28 prove g wish obtain deeper character set use xpoint concept studi herbrand model denit program r kowalski van emden associ denit program p oper p call immedi consequ oper provid link declar oper semant de nite program use ident herbrand interpret predic herbrand base oper usual dene follow tabl 9 declar semant let p denit program p predic ground atom claus c occur p ground substitut p pa sinc possibl variabl occur atom 0 establish decid p p even know decid p given necessarili ground atom herbrand interpret prove decid proposit interpret model atom need evalu atom necessarili ground bodi claus aect p sinc herbrand model program p exactli xpoint p formal result oper xpoint gener set fact p easili seen upward continu follow least xpoint p equal p us turn denit oper counterpart least herbrand model success set denit program dene predic p herbrand base character ground atom exist sldrefut start two technic lemma present end section prove p equal p assumpt everi predic herbrand base decid posit prove complet theorem follow theorem 62 complet let p denit program r nonempti queri solut r exist follow valid deriv id r oper aset definit paaprop definit oppapa induct ordset fixpoint ordfirst nnatord case n soordord oo lonatordord pnatso ordfirst p end ordin power fixpoint aafals lnat ordaaex nnatpof f l n end theorem tabl 10 oper ordin xpoint one delic step proof complet theorem sldresolut concern combin deriv proof made induct length initi queri follow argument alway use refut b ground refut combin refut p howev combin deriv rather delic way made never given therefor formal proof need technic lemma whose proof immedi show construct way nal refut obtain initi one cours order ensur good properti variabl occur nal refut abl renam initi refut first follow variant lemma seldom state whose proof immedi prove dierent form 2 state 20 lemma 63 variant lemma let l list variabl 1 valid deriv id r exist valid deriv 2 id r induct tp induct success pprogramagroundatomprop pderiv dpderivok fst stateinitd dtvsnd stateinitd consreq groundtoatom truereq snd stateendd dtruereq success p rtruereq semanticcsq hp p substreq r fst stateinitd snd stateendd tabl 11 complet sldresolut variabl occur 2 also occur l furthermor substitut r dom r varr 2 r word exist deriv depend choic variabl input claus suce good properti hold formal lemma consist build deriv 1 start r nite set variabl z deriv 2 start r variabl occur input claus 2 also occur z r z z z d2 immedi consequ obtain follow lemma lemma 64 combin deriv let p denit program r nonempti queri ground substitut everi atom occur r success set p exist valid deriv id r proof proceed induct r claim obviou induct hypothesi everi atom 0 occur r p 0 exist valid deriv id r moreov hypothesi induct hypothesi build valid deriv r furthermor 1 p denit exist valid deriv ground substitut prove induct 1 3 id c r r also valid deriv moreov 2 lemma 63 exist valid deriv 4 induct 4 prove 5 valid deriv henc combin 3 5 suitabl renam condit one obtain valid deriv id c r r settl claim j said formal complet prove weaker sound theorem prove dont relat solut answer due follow usual step proof variabl n enrich languag p ad new constant substitut fx 1 exist sld refut p f ng textual replac refut x oper formal use denit allow add new constant function signatur textual replac constant variabl variabl constant possibl solut could consist follow ssemant approach develop 7 allow variabl herbrand base 7 relat work said unic quasiterm formal l c paulson 23 use lcf j rouyer 26 use coq concern deni tion partial function c duboi v vigui donzeaugoug 6 recent propos method gener automat predic p character domain partial function f equat dene f mlstyle formal complet proof envisag sever au thor 24 h persson present formal use proof assist alf construct complet proof intuitionist predic logic wrt model base formal topolog 11 j harrison discuss formal hol basic rstorder model theori includ compact ness lowenheimskolem uniform theorem 16 j l krivin describ formal second orderlog intuitionist proof complet theorem classic logic final note area formal method appli logic program start oper semant prolog sound complet proof renement step toward warren abstract machin wam elabor c pusch 25 theorem prover isabel 8 conclus order prove formal properti program seem natur give formal specic oper semant paper sldresolut formal fundament properti form comput prove 600 technic lemma formal develop proof machinecheck base j w lloyd book 19 follow tradit chosen take referenti notion truth semant notion altern could consist take anoth referenti notion like natur deduct sequent calculu first note instead prove unic theorem follow unic algorithm j rouyer 26 use result quasiterm obtain proof techniqu propos base dene biject term quasiterm satisfi given predic prove preserv unic properti way prove unic theorem without realli deal unic theori thu avoid heavi proof requir handl sophist theori construct interest repres altern classic approach show take advantag previou formal proof even desir proof exactli deal object wherea unic theorem prove 26 requir 140 lemma 75 lemma prove develop show interest proof librari provid inform present variabl renam problem often ignor howev problem ignor said result present prove calculu induct construc tion thu make dierenc proof one nd mani book logic program main dierenc concern renam process use sldderiv made explicit typic exampl proof complet theorem requir variant lemma assert ing exist sldderiv depend choic variabl input claus use lemma combin deriv explicit allow oper whose proof rather long therefor formal sldresolut introduc mani complic even combin sldderiv seem easi oper requir sever renam order satisfi standard apart assum denit deriv usual lemma implicitli use without proof justic surprisingli full formal proof show minor detail could crucial interest discuss ne point foundat logic program found 15 27 cours main problem come explicit substitut use unic variabl renam process substitut quit hard matter deal 1 substitut said minenc grise calculu also said sldresolut like sldresolut claus reduct dene relat term may interest compar properti relat wherea reduct conuent sldresolut satis switch properti weaker conuenc fur thermor variabl renam process use sldderiv view implicit convers renam made explicit allow full formal sldderiv along line calculu explicit substitut 1 reduct calculu renement calculu substitut manipul explicit provid link classic calculu concret implement renam process requir sld deriv play essenti role logic program constitut import step denit oper semant denit program declar read horn claus acknowledg mani thank ren lalement enlighten discuss work well anonym refere use comment r explicit substitut logic program contribut theori logic program project coq calculu construct step toward mechan partial function domain induct predic declar model oper behavior logic languag logic comput scienc proof type edinburgh lcf formal basic formal sldresolut calculu induct construct reynold heyt model logic program koichi furukawa une preuv formel et intuitionnist du thorm de compltud de la logiqu classiqu comput logic foundat logic program partial evalu logic program ming deduct synthesi uni logic program prolog verifi uni construct complet intuitionist predic logic formal type theori dvelopp de lalgorithm duni role standardis apart logic program semant predic logic program languag tr