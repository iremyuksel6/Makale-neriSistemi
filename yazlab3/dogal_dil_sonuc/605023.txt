challeng componentbas develop gener understood build softwar system compon mani advantag difficulti approach ignor system evolut mainten migrat compat challeng met develop componentbas softwar system sinc system evolv time compon must maintain replac evolut requir affect specif system function particular compon also componentbas architectur level increas complex consequ differ compon system differ life cycl componentbas system easier replac part system commerci compon process howev straightforward differ factor requir manag market issu etc must taken consider paper discuss issu challeng encount develop use evolv componentbas softwar system industri control system use case studi b overview abb global electr engin technolog compani serv custom power gener transmiss distribut industri autom product etc abb group divid compani one abb autom product ab respons develop industri autom product autom product encompass sever famili industri processcontrol system includ softwar hardwar main characterist product reliabl high qualiti compat featur result respons main custom requir custom requir stabl product run around clock year year easili upgrad without impact exist process achiev abb use componentbas system approach design extend flexibl system advant open control system oc abb 2000 componentbas suit differ industri applic rang includ system power util power plant infrastructur pulp paper metal miner petroleum chemic consum industri transport system etc overview advant system shown figur 1 busi system inform manag station oper station process control process control process control figur 1 overview conceptu architectur advant open control system advant oc perform process control provid busi inform assembl system differ famili advant product process inform manag level process control process control base realtim oper system execut control loop oper station os inform manag station im gather product inform busi system provid analysi inform optim entir process advant product use standard proprietari commun protocol satisfi realtim requir advant oc therefor includ inform manag function realtim insight aspect process control advant inform manag sqlbase relat databas access resid softwar connect comput histor data acquisit report versatil calcul packag applic program interfac api proprietari third parti applic exampl function provid advant compon access process product qualiti data process control unit plant intranet domain design reus design reus exist compon mani advantag sommervil 1996 softwar develop time reduc reliabl product increas import prerequisit advant oc develop advant oc product assembl mani differ configur use variou branch industri specif system design reus advant oc product extern product mean custom get tailormad system meet need extern product compon use togeth advant oc due open system exampl satellit commun compon use transmit data offshor station supervis system inland integr advant oc advant system architectur design reus differ product oper inform manag station use system compon assembl complet system two oper station version master os mod os use build differ type oper applic scalabl advant oc configur multitud way depend size complex process initi invest consist standalon process control option local oper station control supervis separ machin process section subsequ sever process control interconnect togeth central oper inform manag station build control network sever control network interconnect give complet plant network share central locat oper inform engin workplac open system strengthen flexibl add special hardwar softwar specif applic weigh fix variablespe motor drive safeti system product qualiti measur control exampl paper industri second third parti administr inform control also easili incorpor costeffect stepbystep expans capabl advant oc allow user add new function without make exist equip obsolet system selfconfigur capabl elimin need engin enter edit topolog descript new station physic instal new unit ad system full oper advant oc system expans therefor easi costeffect reusabl compon advant oc product compon base minim cost mainten develop figur 2 show compon architectur oper station assembl compon figur 2 oper station assembl oper station function compon object manag omf osbas function realtim oper system user interfac compon librari standard oper system compon oper station consist specif number function compon set standard advant compon compon use user interfac system ui compon object manag facil omf compon handl infrastructur data manag omf similar corba omg 2000 provid distribut object model data oper event servic uxbas compon provid driver specif oper system function helper class string list pointer map generalpurpos class avail ccomplib librari compon compon built upon oper system one standard systemsuch unix window proprietari realtim system illustr differ aspect componentbas develop mainten shall look two compon object manag facil omf busi type compon highlevel function complex intern structur ccomplib basic gener librari compon object manag facil omf omf nbling et al 1999 objectori middlewar industri process autom encapsul realtim process control entiti almost everi conceiv descript object access applic run differ platform exampl unix window nt program interfac avail mani languag c c visual basic java smalltalk sql interfac iec 11313 iec 1992 process control languag develop omf also adapt microsoft compon object model com via adapt anoth compon call omf com awar adapt opc ole process control opc 1998 ole autom also implement thank softwar interfac omf make process product data avail major comput programm user ie even necessarili involv industri control field instanc easi develop applic microsoft word excel access access process inform omf develop demand realtim applic incorpor featur realtim respons asynchron commun stand queri prioriti schedul data transfer one side omf provid industrystandard interfac softwar applic offer interfac mani import commun protocol field includ masternet mod dcn tcpip fieldbu foundat adapt make possibl build homogen control system heterogen field equip dispar system node omf reduc time cost softwar develop provid framework tool wide rang platform environ util well integr respect surround allow develop retain tool util prefer work ccomplib ccomplib class librari contain generalpurpos class contain string manag class file manag class etc ccomplib librari develop standard librari avail market main purpos librari improv effici qualiti promot uniform usag basic function ccomplib compon accord definit szyperski 1998 compon unit composit deploy independ product howev develop process ccomplib treat similar way binari compon restrict dynam configur experi advant system success system main reason success componentbas architectur give flexibl robust stabil compat effect build integr procedur type architectur similar product line architectur bass et al 1999 case studi bosch 1999 shown productlin architectur success appli small mediums enterpris although exist number problem challeng issu organ train inform distribut product variant etc advant experi show appli productlin architectur success larg organ howev cost achiev featur high suit requir open system new abb product alway backward compat would easier develop new system requir compat previou system guarante system backward compat warranti exist system work new product make system trustworthi develop larg compon easi reus increas effici significantli compar reus smaller compon could develop inhous cost purchas price advant oc product exampl larg compon use assembl process autom system 3 differ reus challeng compon gener effici reus principl place high demand reusabl compon compon must suffici gener cover differ aspect use time must concret simpl enough serv particular requir effici way develop reusabl compon requir three four time resourc develop compon serv particular case szyperski 1998 fact requir compon usual incomplet well understood sommervil 1996 bring addit level complex case ccomplib situat simpler function requir clear rel easi defin interfac use differ compon way situat complic complex compon omf although basic concept compon function clear demand compon interfac behavior differ differ compon product compon requir high level abstract other requir interfac detail level differ type requir led creation two level compon omf base includ lowlevel function omf framework contain higher level function predefin behavior less flexibl gener requir gener effici time lead implement sever variant compon use differ abstract level specif case particular solut must provid type solut usual beyond objectori mechan sinc compon higher abstract level system evolut longlif product often affect evolut differ kind evolut system requir function non function consequ continu competit market situat demand continu improv system perform system control servic busi industri process perman increas effici process improv qualiti product minim product mainten cost etc evolut technolog relat differ domain advanc technolog differ field softwar use requir improv softwar improv may requir complet new approach new function softwar evolut technolog use softwar product evolut comput hardwar softwar technolog fast organ manufactur longlif complex product must expect signific technolog chang product life cycl reliabl risk point view organ prefer use latest technolog demand highli competit market forc adopt new technolog appear often unpredict chang must made product caus deliveri delay increas product cost evolut technolog use product develop case product new technolog tool use develop process appear frequent market manufactur face dilemma adopt new technolog possibl improv develop process risk short term higher cost train migrat continu use exist technolog therebi miss opportun lower develop cost long run evolut societi chang societi exampl environment requir chang relat countri eu consider impact demand product exampl new standard new currenc etc develop process relat employ employe work hour etc busi chang face chang govern polici busi integr process deregul etc chang impact natur busi result exampl prefer shortterm plan rather longterm plan stringent timetomarket requir organiz chang chang societi busi direct effect busi organ see global process abrupt chang busi oper demand flexibl structur manag procedur intim deliveri resourc servic skill chang requir anoth fast flexibl approach develop process chang direct indirect impact product life cycl abil adapt chang becom crucial factor achiev busi success brown 2000 follow section discuss chang consequ develop process product life cycl evolut function requir develop reusabl compon would easier function requir evolv time develop result new requir product new requir compon defin reusabl compon demand place number requir come differ product may similar necessarili case requir pass compon mean number requir reusabl compon grow faster particular product nonreus piec softwar relat compon requir requir product express follow equat rc0 denot direct requir compon rpi requir product pi ai impact factor compon rc total number compon requir satisfi requir compon must updat rapidli new version must releas frequent product use process chang compon dynam earli stage compon live stage compon less gener respond new requir product without chang later stage gener adapt increas impact product requir becom less signific period product benefit combinatori synergi effect compon reus last stage life compon get outofd final becom obsolet differ reason introduct new techniqu new develop runtim platform new develop paradigm new standard etc also higher risk initi compon cohes degener ad mani chang turn requir effort process illustr figur 3 first graph show grow number requir certain product compon use product number requir common compon grow faster begin satur period t0 t1 grow compon featur becom inadequ product requir satisfi new releas product compon shown step second graph compon implement requir releas normal preced releas product requir origin product requir accumul requir compon product p2 product p1 t0 t1 time requir satisfi releas compon product p2 product p1 t0 t1 time figur 3 satisfi requir reusabl compon must modifi often begin life inde case compon analyz new function class requir ccomplib new adapt protocol support requir omf develop time compon significantli shorter product new version product typic releas everi six month new version compon releas least twice often sever year intens develop improv compon becam stabl requir less effort new chang period frequenc releas lower especi effort significantli lower new effort develop compon appear migrat product differ platform newer platform version although function product compon chang significantli consider amount work done compon level migrat differ platform sever year develop advant product port differ platform reason custom requir product run specif platform gener trend grow popular certain oper system cours time new version variant platform alreadi use appear support new better cheaper hardwar advant product migrat differ platform start unix hpux 8x continu trough new releas hpux 9x 10x port unix platform digit unix also complet differ platform open vm window nt famili nt 35 nt 40 window 2000 product develop maintain parallel challeng multiplatform develop keep compat differ variant product maintain improv minim effort import part reus concept keep highlevel compon unchang far possibl decid encapsul differ oper system lowlevel compon concept work howev extent minim activ requir platform rebuild system platform make possibl rebuild softwar everi platform standardprogram languag c c use unfortun differ implement c standard differ compil caus problem code interpret requir rewrit certain part code ensur standard system servic avail platform posix standard use posix work quit well differ unix platform much less window nt second level compat problem graphic user interfac gui main dilemma whether use exactli gui everi platform use standard look feel gui platform question appli particularli nt relat unix platform experi shown possibl give definit answer case possibl use gui graphic packag gener differ gui implement main work regard reus code differ platform perform lowlevel compon uxbas omf uxbas provid differ lowlevel packag everi platform exampl differ driver omf capsul differ directli code use condit compil omf design way possibl divid code two layer one layer specif oper system layer busi logic implement support platform reus issu differ platform ccomplib easier strictli packag contain gener algorithm depend specif oper system problem appear howev relat differ characterist compil differ platform compat one import factor success reusabl compat differ version compon compon replac easili ad new part system compat previou version compat requir essenti advant product sinc smooth upgrad system run mani year requir compat issu rel simpl chang introduc product mainten improv natur use appropri test plan includ regress test function compat test reason extent complic problem occur new chang introduc reusabl compon elimin compat case addit softwar manag version must written typic exampl incompat chang chang commun protocol omf client server differ version omf must abl talk make system flexibl open possibl differ combin oper system version omf still work solv algorithm ensur transmiss correct data format two omf node version talk nativ protocol old omf node talk new new omf respons convert data new format design rmir receiv make right new omf send data older older omf convert data sinc unawar new protocol case newer omf must send old protocol format smir sender make right algorithm build fact machin know also know protocol talk howev omfbas node know node alway send predefin protocol refer well known format node recogn protocol translat algorithm minim number data convers node case ccomplib problem compat somewhat differ new demand class function appear new standard technolog one exampl use c templat templat technolog becam suffici matur new requir place ccomplib class reimplement templat class reason requir use basic class gener effici way anoth exampl unicod support addit ascii support new function ad new member function exist class ad new class use inherit mechan reus alreadi exist class introduct function differ format led addit effort reus case old format replac new one help simpl tool built purpos case due nonprop plan priorit timetomarket requir old new format use sourc modul led lower maintain extend lower qualiti product develop environ develop reusabl compon sever dimens develop process must consid support develop compon differ platform support develop differ variant compon differ product support develop mainten differ version compon differ product version independ develop compon product cope type problem suffici appropri product architectur compon design develop environ support also essenti develop environ must permit effici work project edit compil build debug test parallel distribut develop must also support compon develop maintain time differ platform requir use power configur manag cm tool definit advanc cmprocess cm process support exist two level first sourcecod level sourcecod file version manag binari file built second level product integr phase product built must contain consist set compon version exampl figur 4 show inconsist set compon product version p1v2 use compon version c1v2 c2v2 time compon version c1v2 use compon version c2v1 older version integr differ version compon may caus unpredict behavior product c2 version v1 c2 version v2 figur 4 exampl inconsist compon integr anoth import aspect cm develop reusabl compon chang manag chang manag keep track chang logic level exampl error report manag relat implement physic chang ie chang document sourc code etc chang request exampl function requir error report come differ product import regist inform sourc chang request also import relat chang request one product product follow question must answer impact implement chang product error appear one product appear product possibl implic must investig necessari user product concern must inform develop environ design softwar develop environ sde crnkovic 1997 use develop advant product internallybuilt program packag encapsul differ tool provid support parallel develop cm tool base rc tichi 1985 provid support cm disciplin chang manag work pace manag build manag etc sde run differ platform slightli modifi function exampl build process base makefil autoconf unix platform microsoft develop studio addit project set use window nt main object sde keep sourcecod one place version control differ version compon manag use baselin chang request chang request also version control give possibl acquir inform use project followup everi chang registr implement releas crnkovic willfr 1998 independ compon develop compon develop independ product give sever advantag function broken smaller entiti easier construct develop maintain independ compon develop facilit distribut develop common larg enterpris develop compon independ product compon develop introduc also number problem compon product test becom difficult compon level proper test environ must built often must includ number compon even mayb entir product anoth problem integr configur problem situat shown figur 4 must avoid complex product imposs manual track depend compon tool support check consist must exist advant develop compon treat separ product even develop within enterpris approach help third parti compon use sinc manag uniform way everi compon contain file call import file includ specif compon version use build compon final product assembl compon import file use integr check consist set compon select develop environ base make set use import file common product structur releas compon store product structur avail other anoth structur use develop compon compon export product structur develop finish use approach shown architectur design play crucial role good architectur clear distinguish relat compon facilit develop process whole develop process complex requir organ plan support essenti effici success develop reusabl compon applic use mainten process mainten process also complex must handl differ level system level custom report problem product level error detect specif product version report final compon level fault locat modif compon impact compon product lead explos new version differ product alreadi exist sever version minim cumbersom process abb adopt polici avoid gener suppli specif patch select custom instead revis product incorpor set patch gener deliv custom mainten contract keep custom instal consist relat compon product system must care regist make possibl trace error level systemat use softwar configur manag crucial role mainten process support mainten process advant product compon specif togeth error report store sever class repositori see figur 5 extern custom custom complaint direct action report custom pmr direct action pmr releas product beta releas ppr ppr develop cr figur 5 differ level error report manag highest level repositori manag custom report ccrp make possibl servic personnel provid custom prompt support inform save level custom product orient report indic product problem regist product mainten report repositori pmr known problem relat product compon file also product structur inform store level product structur show depend product compon provid product compon develop assist relat error report sourc problem product compon level similar error manag process defin product beta phase ie yet releas problem identifi phase typic test group regist form prereleas problem report ppr problem either solv product releas reclassifi product error report save pmr chang appli code document chang control chang initi chang request chang requir come error report chang request gener pmr chang made compon test verifi action descript export correl pmr propag product involv final return custom via ccrp repositori procedur uniqu componentbas develop mean manag complex product maintain mani product specif componentbas approach map product compon manag error report product compon level difficult part manag case entir procedur local pmr level ie product level custom side inform highest prioriti relat product custom develop level chang regist relat primarili compon inform product compon store develop level error manag level complex error may detect specif product version may also present product product version error may discov one compon present differ version compon problem solv one compon version also may necessari solv sever revis compon version eventu subsequ integr new version one sever product multidimension problem mani error report impact differ version compon product solut includ differ compon product version partial manag automat mani step process requir direct human decis exampl decis solut problem includ next product releas although whole procedur care design rigor follow happen occas unexpect chang includ chang intend inclus absent new product releas detail mainten process see kajkomattson 1999a kajkomattson 1999b anoth import subject mainten extern compon shown extern compon must treat way intern compon known error complet error manag process intern extern compon treat similar way list known correct error extern compon import develop product manag servic peopl cost maintain compon even maintain other must taken consider integr standard compon recent year demand custom system chang custom requir integr standard technolog use standard applic product buy definit trend market littl awar possibl problem involv improp use standard compon caus sever problem especi distribut realtim safetycrit system longperiod guarante addit new requir timetomarket demand becom import factor factor chang softwar hardwar technolog aoyama 1998 introduc new paradigm develop process develop process focus use standard defacto standard compon outsourc cot product compon time final product longer close monolith system instead componentbas product integr product avail market new paradigm develop process market strategi introduc new problem rais new question mckinney 1999 develop process chang develop design programm also integr market investig new develop method establish develop properli educ criteria select compon guarante standard compon fulfil product requir mainten aspect respons mainten expect updat upgrad compon satisfi compat reliabl requir trend market expect buy today also day begin deliv product develop compon guarante proper standard use standard valid five ten year question must consid begin componentbas develop project josefsson josefsson 1999 present certain recommend compon integr use guidelin test import compon environ run limit practic number compon supplier minim compat problem make sure supplier evalu longterm agreement sign focu develop environ support transfer editbuildtest cycl compon integrationtest cycl configur manag must give consider runtim phase larsson crnkovic 1999 replac intern compon standard compon middl eighti abb advant product complet proprietari system intern develop hardwar basic applic softwar begin nineti standard hardwar compon softwar platform purchas realtim addit applic softwar develop intern system develop use compon base new standard technolog develop new compon becom avail market abb face issu one point time necessari abandon exist solut favor new solut base exist compon technolog illustr migrat process discuss possibl replac omf ccomplib standard compon experi exampl show easier replac compon replac process made small increment step allow new compon coexist old one make easier backward compat chang smooth replac omf dcom move unix base system system base window nt seriou effect system architectur microsoft compon use new object model avail name comdcom box 1998 dcom function similar omf becam new issu dcom releas abb continu develop proprietari omf chang new standard compon problem dcom function omf vice versa domain overlap partial subscript data variou capabl made omf subscript function support docm hand dcom creat object requir like omf object creat actual use technolog support object commun area easier replac omf dcom decis made continu omf new compon run top com could use would drastic reduc possibl integr thirdparti compon hand would requir consider work make current system run top com dilemma com vs omf begin omf adapt com adapt design omf com awar function help com develop access omf object vice versa howev solut problem use two differ object model optim sinc ad overhead commun possibl match data type one one made solut limit decis taken build new system com technolog proprietari extens ad function miss com commun current system omf com solut made easi remov old omf replac com small step time adapt use new compon use parallel exist one rine et al 1999 adapt system orbixcorba fieldbu foundat construct extern system similar data type fairli straightforward build framework adapt part take care proprietari system reus new system access ad server client stub adapt framework abl build function adapt two middlewar compon import capabl creat remot call dynam instanc dynam invoc interfac dii corba use middlewar possibl might possibl gener code automat take care differ type call go place adapt system replac ccomplib stl switch ccomplib stl austern 1999 much easier stl cover almost ccomplib function provid addit function still much work remind done sinc code use ccomplib chang abl use stl instead decis taken continu use compon use stl whenev new function ad time use old compon reduc intern mainten cost reduc case compon librari use gave disadvantag especi mainten process manag evolut standard compon use standard compon impli less control larsson crnkovic 1999 larsson crnkovic 2000 cook dage 1999 especi compon updat runtim system compon usual configur buildtim known test version compon use later system evolv new version compon system mechan detect new compon instal might check version replac compon least newer origin version approach prevent system use old compon guarante function new compon instal appli idea configur manag version chang manag manag compon approach use solv problem certain level configur control achiev possibl identifi compon version depend compon inform system place version control later retriev make possibl compar differ baselin system configur manag depend graphic represent configur introduc graph place version control inform use predict compon affect replac instal new compon gener difficult identifi compon runtim obtain version inform compon identifi possibl build graph depend repres variou way place configur control larsson 2000 improv control extern compon place chang manag permit monitor chang bug instead attach sourc code file chang request common chang manag name version compon use track chang problem report analys outcom chang request compon involv chang request contain list chang sourc file descript patch compon extern patch compon vendor must store permit recreat configur later case high qualiti product must assur enterpris develop product must special welldefin relat compon vendor support mainten 5 conclus present abb advant control system oc success exampl develop componentbas system success system market primarili result appropri function qualiti success develop mainten continu improv system achiev care architectur design main principl reus compon reus orient provid mani advantag also requir systemat approach design plan extens develop support complex mainten process gener consider given compon certain otherwis success develop organ succeed develop reusabl compon product base reusabl compon reusabl compon develop complex develop process support requir organ even requir satisfi happen unpredict extra cost one exampl illustr earli stage abb advant oc develop insuffici consider given window nt abb pay price oversight suddenli becam clear window nt would next oper platform new product version new platform develop port softwar old platform cost significantli greater design done independ first platform anoth problem address question move new technolog requir recreat compon inclus standard compon avail market case difficult keep achiev function origin compon howev seem process replac proprietari compon standard compon avail third parti inevit import proper strategi migrat old compon new one 6 r new age softwar develop componentbas softwar engin chang way softwar develop gener program stl third product line practic report experi changeori scm tool programvarukomponent praktiken mainten abb softwar problem administr process mainten abb ii chang execut process appli configur manag techniqu componentbas system licenti thesi dissert 2000007 new challeng configur manag compon configur manag impact commerci offtheshelf cot softwar interfac system softwar engin use adapt reduc interact complex reusabl componentbas softwar develop softwar engin tr rcsmyampersandmdasha system version control compon softwar highli reliabl upgrad compon productlin architectur industri impact commerci offtheshelf cot softwar interfac system softwar engin use adapt reduc interact complex reusabl componentbas softwar develop largescal compon base develop softwar engin experi changeori scm tool chang measur scm process new challeng configur manag mainten abb mainten abb ii ctr ade azurat mechan invas softwar composit flogic proceed 2007 annual confer intern confer comput engin applic p8994 januari 1719 2007 gold coast queensland australia lin chinfeng tsai hsientang fu chensu logic deduct expand meansend chain journal inform scienc v32 n1 p516 februari 2006