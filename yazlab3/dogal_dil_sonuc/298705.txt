basic oper otismesh optoelectron comput abstractin paper develop algorithm basic operationsbroadcast window broadcast prefix sum data sum rank shift data accumul consecut sum adjac sum concentr distribut gener sort random access read writeon otismesh 1 model oper use develop effici algorithm numer applic 2 b introduct optic transpos interconnect system oti propos marsden et al 4 hybrid optic electron interconnect system larg parallel comput oti architectur space optic connect distant processor electron interconnect connect nearbi processor specif maxim bandwidth power effici minim system area volum 1 processor n 2 processor oti comput partit n group n processor processor index tupl g g g group index ie group processor p processor index within group inter group interconnect optic intra group interconnect electron optic oti interconnect connect pair processor form g p p g group processor indic transpos optic interconnect electr intra group interconnect accord well studi electron interconnect network mesh hypercub mesh tree forth choic electron interconnect network defin subfamili oti comput otismesh otishypercub forth figur 1 show 16 processor otismesh small squar repres processor number insid processor squar processor index p processor squar pair p pair give row column index processor p within n theta n mesh larg work support part armi research offic grant daa h049510111 group 3 figur 1 squar enclos group processor group index g may also given pair g x g g x g row column indic group assum n theta n layout group zane et al 11 shown n 2 processor otismesh simul move n theta n theta n theta fourdimension 4d mesh comput use either one electron move one electron two oti move depend dimens 4d mesh move along also shown n 2 processor otishypercub simul move n 2 processor hypercub use either one electron move one electron two oti move sahni wang 10 9 develop effici algorithm rearrang data accord bit permutecompl permut otismesh otishypercub comput respect rajasekaran sahni 7 develop effici random algorithm rout select sort otismesh paper develop determinist otismesh algorithm basic data oper parallel comput studi 8 shown 8 algorithm oper use arriv effici parallel algorithm numer applic imag process comput geometri matrix algebra graph theori forth consid synchron simd synchron mimd model processor oper lockstep fashion simd model activ processor perform oper step activ processor move data along dimens along oti connect mimd model processor perform differ oper step move data along differ dimens 2 basic oper 21 data broadcast data broadcast perhap fundament oper parallel comput oper data initi singl processor g p broadcast transmit processor otismesh data broadcast accomplish use follow three step algorithm data processor group g step 2 perform oti move step 3 processor g group broadcast data within group follow step 2 one processor group copi data follow step 3 processor otismesh copi simd model step 1 3 take 2 electron move step 2 take one oti move simd complex 4 electron move 1 oti move total 4 move note algorithm optim diamet otismesh 4 exampl data broadcast initi processor 00 data need reach processor distanc 4 3 mimd model complex step 1 3 depend valu rang low approxim high 2 overal complex 4 move one oti move contrast simul 4dmesh broadcast algorithm use simul method 11 take 4 electron move 4 move simd model mani move mimd model 22 window broadcast window broadcast start data top left w theta w submesh singl group g w divid n follow window broadcast oper initi w theta w window tile group window broadcast within across group algorithm window broadcast step 1 window broadcast within group g step 2 perform oti move step 3 intra group data broadcast processor g group step 4 perform oti move follow step 1 initi window properli tile group g left task broadcast group g group step 2 data dg p g p move step 3 dg p broadcast processor move p step 1 window broadcast algorithm take 2 move simd mimd model step 3 take 2 move simd model move mimd model total cost 4 move simd model mani move mimd model simul 4d mesh window broadcast algorithm take number electron move also take 4 move 23 prefix sum index g p processor may transform scalar gnp 0 n 2 let di data processor 0 n 2 prefix sum processor comput simpl prefix sum algorithm result follow observ sdi sum di processor group smaller group lp local prefix sum within group simpl prefix sum algorithm step 1 perform local prefix sum group step 2 perform oti move prefix sum comput step 1 processor g n gamma 1 step 3 group modifi prefix sum valu receiv step 2 modif processor p comput rather step 4 perform oti move modifi prefix sum comput step 3 step 5 group local broadcast modifi prefix sum receiv processor step processor add local prefix sum comput step 1 modifi prefix sum receiv step 5 local prefix sum step 1 3 take 3 move simd mimd model local data broadcast step 5 take 2 move overal complex 8 move 2 oti move reduc move 2 oti move defer step 1 move step 5 step 1 group comput row prefix sum r step 2 column group comput modifi prefix sum r valu step 3 perform oti move prefix sum comput step 2 processor g n gamma 1 step 4 group modifi prefix sum valu receiv step 3 step 5 perform oti move modifi prefix sum comput step 4 step group broadcast modifi prefix sum receiv step 5 along column mesh step 7 column processor add modifi prefix sum receiv step 6 prefix sum r valu comput step 2 minu r valu comput step 1 step 8 result comput column processor step 7 broadcast along mesh row step 9 processor add r valu valu receiv step 8 simul best 4d mesh prefix sum algorithm result oti mesh algorithm take move 24 data sum oper processor comput sum valu processor optim simd data sum algorithm step 1 group perform data sum step 2 perform oti move step 3 group perform data sum simd model step 1 3 take 4 move step 2 take 1 oti move total cost 8 move note sinc distanc processor 0 move sinc need get inform least 8 need move need send inform 0 0 n gamma overlap simd model also note simul 4d mesh data sum algorithm take 8 move mimd complex reduc comput group sum middl processor group rather bottom right processor complex becom 4 electron 1 oti move n odd 4 n electron 1 oti move even simul 4d mesh howev take 4 move notic mimd algorithm near optim diamet otismesh isp 25 rank rank oper processor flag si 2 f0 1g 0 n 2 comput prefix sum processor oper perform 7 electron 2 oti move use prefix sum algorithm section 23 26 shift although mani variat shift oper one believ use applic develop mesh row shift zero fill shift data processor g x n shift done zero fill end discard ie p data p discard b mesh column shift zero fill similar along mesh column p x c circular shift mesh row shift data processor g x circular shift mesh column similar c instead p x use row shift zero fill similar except g use place p f group column shift zero fill similar e along group column g x circular shift group row similar c g rather p circular shift group column similar g g x place g shift type done use best mesh algorithm type e h done 1 perform oti move step 2 shift p x origin g x shift p origin g shift shift step 3 perform oti move shift type b take electron move simd mimd model c take electron move simd model maxfjsj move mimd model e f take electron 2 oti move simd mimd model g h take n electron 2 oti move simd model maxfjsj electron 2 oti move mimd model simul correspond 4d mesh algorithm obtain complex e f take addit 2s gamma 2 oti move g h take addit 2 theta maxfjsj move 27 data accumul processor accumul valu neighbor processor along one four dimens g x g data processor data accumul along g x dimens exampl processor accumul array data valu g x specif accumul dimens similar accumul oper done use circular shift gammam appropri dimen sion complex readili obtain circular shift oper see section 26 28 consecut sum n 2 processor otismesh tile onedimension block size block may align four dimens g x g p x p processor valu xj ith processor block comput sum xi block specif processor block comput j indic rel block onedimension block size align p x p dimens consecut sum perform use token block accumul sum si assum block align along p x processor block initi token label processor intra block index token processor 0 right bound gamma 1 left bound odd time step right bound token move one processor right along block even time step left bound token move one processor left along block token reach rightmost leftmost processor block revers direct token visit processor block twice move left move right rightward visit add appropri x valu processor time step henc move token return origin processor done mimd model left right move done simultan electron move need onedimension size block align g x g first oti move run either p x p consecut sum algorithm oti move number electron move p x p align howev two addit oti move need simul correspond 4d mesh algorithm take addit case g x g align simd model addit move mimd model 29 adjac sum oper similar data accumul oper section 27 except accumul valu sum oper done complex data accumul use similar algorithm 210 concentr subset processor contain data processor rank section 25 data realli pair r data processor r rank pair r move processor r 0 r b b number processor data use g p format processor index see r rout origin processor processor brnc r mod n accomplish use step step 1 pair r rout processor r mod n within current group step 2 perform oti move step 3 pair r rout processor brnc within current group step 4 perform oti move theorem 1 four step algorithm given correctli rout everi pair r processor proof step 1 rout second coordin step rout two pair processor provid group two pair sinc group n pair rank pair contigu integ group two pair r 1 mod processor one pair pair correct processor group though possibl wrong group get pair correct group without chang within group index step 2 perform oti move move data processor g p processor p g pair group r mod n valu differ brnc valu rout brnc valu step 3 rout one pair processor oti move step 4 therefor get everi pair correct destin processor 2 group 0 step 1 concentr local group remain group step 1 gener concentr rank increas amount group may use mesh concentr algorithm 6 accomplish rout 4 move step 3 also concentr brnc valu pair ascend order 0 move simd model mimd model 6 therefor overal complex concentr 8 electron 2 oti move simd model 4 move mimd model improv simd time 7 move use better mesh concentr algorithm one 6 new simpler algorithm given case gener concentr n theta mesh step 1 move data column right current one rightward proper processor row step 2 move data column left current one leftward proper processor row step 3 move data smaller row upward proper processor column step 4 move data bigger row downward proper processor column concentr oper squar mesh data begin two processor row end differ column rank two data differ 2 leav two data processor step 3 4 get data proper row henc proper processor note possibl two data item processor follow step 1 step 3 complex concentr algorithm simd mesh 2 mimd mesh overlap step 1 2 well step 3 4 mimd mesh ordinari concentr rank begin 1 step 4 omit data move column row bigger index ordinari concentr take 3 move improv simd concentr algorithm 6 take 4 move ordinari concentr actual show four step concentr algorithm state optim simd model consid ordinari concentr instanc select element processor 0 0 rank 0 1 delta delta delta 1 data processor 0 move processor 00 requir move yield net move also data processor move processor 0 requir net move move none move overlap simd model everi simd concentr algorithm must take least move direct left right total least 3 move gener concentr algorithm rank need start zero suppos two element concentr one processor 00 rank n gamma 1 processor rank n data 00 move cost right move data move 00 cost net left move least 4 need theorem 2 otismesh data concentr algorithm describ optim simd mimd model everi simd concentr algorithm must make 7 electron 2 oti move worst case b everi mimd concentr algorithm must make 4 move proof suppos data concentr processor shown tabl 1 let denot processor let c denot processor 0100 rank b c n 32 n 32 respect therefor follow concentr data da db dc initi processor b c processor 0100 0 respect figur 2 show initi concentr data layout case chang g x g p x p valu final initi locat da db dc shown tabl 2 c x x x x x x x x x x x x x x x x x x x x x x x x x x x x b c x x x x x x x x x x x x x x x x x x x x x x x x x x figur 2 data configur initi b concentr tabl 1 processor data concentr data g x g da gamma tabl 2 net chang g x g p x p maximum net neg chang g x g p x p gamma 1 sinc net neg chang g x overlap net neg chang p x sinc db need gamma neg chang g x p x must make least 2 move decreas row index within mesh similarli da requir least 2 move increas column index within n theta mesh must made turn attent net posit chang see db requir must least 2 move increas column index dc requir move increas row index sinc posit net move overlap neg net move sinc net move along g x p x overlap net move along g p concentr configur tabl 1 must take least 7 move addit 7 move need least 2 oti move concentr data tabl 1 see consid data initi group 01 data group 00 follow concentr least one oti move need move data group 01 nontrivi otismesh 2 processor row n theta n submesh otismesh least two piec data must move group 01 group 00 singl oti move scatter data group 01 differ group data go differ group least one addit oti move must made get data back group therefor concentr configur tabl 1 done fewer 2 oti move b consid initi configur tabl 1 sinc shortest path processor b destin processor 4 one oti move least mani electron move made worst case everi concentr algorithm reason least 2 oti move need complet concentr 2 211 distribut invers concentr oper section 210 start pair first q 1 processor 0 rout pair processor q algorithm section 210 tell us start pair processor move run backward start rout complex distribut oper concentr oper shown concentr algorithm section 210 optim follow distribut algorithm also optim 212 gener start initi configur distribut oper object processor j simul 4d mesh algorithm gener use simul strategi 11 take 8 8 move perform gener oper simd otismesh improv 8 move run gener algorithm 6 adapt use oti move necessari outer loop algorithm 6 examin processor index bit 2p gamma 1 0 first p iter move along bit g index last p iter along bit p index otismesh would break two part 1 perform oti move step 2 run gener procedur 6 bit maintain origin index step 3 perform oti move step 4 run gener algorithm 6 bit mimd otismesh algorithm take 4 move reduc simd complex 7 move use better algorithm gener oper 2d simd mesh algorithm use observ use us section 210 speed 2d simd mesh concentr algorithm four possibl move direct three possibl gener 2d n theta n mesh possibl move direct data increas row index decreas increas column index observ algorithm gener 2d mesh becom step 1 move data along column increas row index data need row higher index step 2 move data along row increas column index data need processor row higher column index step 3 move data along row decreas column index data need processor row smaller column index correct preced gener algorithm establish use argument theorem 1 optim follow theorem 2 fact distribut oper invers concentr oper special case gener oper new effici gener algorithm may use step 2 otismesh gener algorithm use step 4 gener step requir full capabl code 6 permit data movement four direct mesh use new gener algorithm step 2 otismesh gener algorithm perform gener simd otismesh use 7 move new algorithm optim simd mimd model follow lower bound concentr oper establish theorem 2 observ made distribut oper special case gener oper invers concentr oper lower bound 213 sort case oper consid far time algorithm sort obtain simul similar complex 4d mesh algorithm sort 4d mesh figur 3 rowcolumn transform leighton column sort algorithm kund 2 fastest simul sort snakelik rowmajor order usingp n electron 12 oti move simd model 7 electron 6 oti move mimd model sort rowmajor order addit move revers altern dimens need mean otismesh simul kund 4d mesh algorithm sort rowmajor order take electron 16 oti move simd model show leighton column sort 3 implement otismesh sort rowmajor order use 22 electron 38 oti move simd model 11 n electron 38 oti move mimd model otismesh sort algorithm base leighton column sort 3 sort algorithm sort r theta array r use follow seven step step 1 sort column step 2 perform rowcolumn transform step 3 sort column step 4 perform invers transform step 2 step 5 sort column altern order step appli two step comparisonexchang adjac row step 7 sort column figur 3 show exampl transform step 2 invers figur 4 show step step exampl leighton column sort gamma 11 gamma figur 4 exampl leighton column sort although leighton column sort explicitli state r theta array r use sort array rowmajor order interchang role row column shall use leighton method sort n 12 theta n 32 array interpret n 2 otismesh n 12 theta n 32 array g x give row index g give column index element processor shall subdivid g x g p x p g x 4 left right use g x 2gamma4 exampl sinc bit g x p8 bit notat help describ transform step 2 4 column sort use bpc permut 5 realiz transform bpc permut 5 specifi vector 2 fsigma0 b ja permut 0 destin data processor may comput follow manner let binari represent processor index let destin processor index definit gamma0 regard 0 0 0 tabl 3 show exampl bpc permut defin permut vector gamma3 16 processor otismesh sourc destin processor g p binari binari g p processor 9 21 1001 0000 00 0 tabl 3 sourc destin bpc permut gamma0 1 2 gamma3 16 processor oti mesh describ sort algorithm shall time use 4d array interpret otismesh interpret processor otismesh correspond processor 4d mesh use g x denot bit posit g x leftmost p2 bit processor index g x1 repres leftmost p8 bit posit p repres rightmost p2 bit posit p 3gamma4 repres rightmost p4 bit posit strategi sort step 1 3 5 7 leighton method collect row recal sinc sort n 12 theta n 32 array columnsort step leighton method becom rowsort step n 12 theta n 32 array n 38 theta n 38 theta n 38 theta n 38 4d submesh otismesh sort row simul 4d mesh sort algorithm 2 strategi translat follow sort algorithm row n 12 theta n 32 array n 38 theta n 38 theta n 38 theta n 38 4d submesh perform bpc permut p 2 sort row n 12 theta n 32 array sort 4d submesh size n 38 theta n 38 theta n 38 theta n 38 3 invers step 1 perform columnrow transform move row 38 theta n 38 theta n 38 theta n 38 submesh perform bpc permut p row n 12 theta n 32 array sort 4d submesh size n 38 theta n 38 theta n 38 theta n 38 5 invers step 1 perform rowcolumn transform move row 38 theta n 38 theta n 38 theta n 38 submesh perform bpc permut p 0 x 1gamma3 row altern order sort 4d submesh size n 38 theta n 38 theta n 38 theta n 38 7 move row back 4d submesh perform bpc permut p 0 step 8 appli two step comparisonexchang adjac row submesh size n 38 theta n 38 theta n 38 theta n 38 perform bpc permut p row n 12 theta n 32 array sort 4d submesh size n 38 theta n 38 theta n 38 theta n 38 row back 4d submesh perform bpc permut p 0 2gamma4 notic row 4d submesh transform accomplish bpc permut p 2gamma4 element row n 12 theta n 32 array interpret g x valu 4d mesh interpret element 38 theta n 38 theta n 38 theta n 38 submesh g x 1 valu p result prop erti go step 2 step 3 leighton method need first restor n 12 theta n 32 array interpret use invers permut p perform bpc permut 2gamma4 perform columnrow transform use bpc permut final map row n 12 theta n 32 array 4d submesh size n 38 thetan 38 thetan 38 thetan 38 use bpc permut p three bpc permut sequenc equival singl bpc permut p preced otismesh implement column sort perform 6 bpc permut 4 4d mesh sort two step comparisonexchang adjac row sinc sort step take 38 time use kund 4d mesh sort 2 follow transform snakelik rowmajor rowmajor sinc remain step take 12 time shall ignor complex sort step reduc number bpc permut 6 3 follow first note p step 1 move element row n 12 theta n 32 array n 38 theta n 38 theta n 38 theta n 38 4d submesh sort step 2 doesnt realli matter n 32 element go 4d submesh initi configur arbitrari unsort configur may elimin note bpc permut step 7 9 cancel perform comparisonexchang step 8 move data one n 38 theta n 38 theta n 38 theta n 38 4d submesh adjac one back 38 time observ algorithm sort otismesh becom 1 sort subarray size n 38 theta n 38 theta n 38 theta n 38 step 2 perform bpc permut p c step 3 sort subarray step 4 perform bpc permut p 0 c step 5 sort subarray step appli two step comparisonexchang adjac subarray step 7 sort subarray step 8 perform bpc permut p 0 use bpc rout algorithm 10 three bpc permut done usingp n electron 3 log move simd model n electron move mimd model care analysi base develop 5 10 reveal permut p 0 p c p 0 c done 28 n electron log move simd model 14 n electron 3 log mimd model use p 0 2gamma4 permut cost becom 22 n electron log 2 n5 oti move simd model 11 log 2 n5 oti move mimd model total number move thu 22 electron 38 oti move simd model 11 38 oti move mimd model superior cost sort algorithm result simul 4d rowmajor mesh sort kund 2 214 random access read rar random access read rar 8 processor wish read data variabl processor step suggest 8 oper step 0 processor creat tripl initi empti 1 sort tripl step 2 processor check processor 1 deactiv tripl third coordin step 3 rank remain processor step 4 concentr tripl use rank step 3 step 5 distribut tripl accord third coordin step load tripl valu processor step 7 concentr tripl use rank step 3 step 8 gener tripl get configur follow step 1 step 9 sort tripl first coordin use simd model rar algorithm 8 take 79 move 38 oti move mimd model take 45 move 215 random access write raw processor want write data processor 0 n 2 step raw algorithm 8 step 0 processor creat tupl di 1 sort tupl second coordin step 2 processor deactiv second coordin tupl second coordin tupl step 3 rank remain processor step 4 concentr tupl use rank step 3 step 5 distribut tupl accord second coordin implement arbitrari write method concurr write one processor wish write locat permit succeed prioriti model may implement sort step 1 within prioriti common combin model also implement increas complex simd model raw take 43 move mimd model take 26 move 3 conclus develop otismesh algorithm basic parallel comput algorithm 8 algorithm run faster simul fastest algorithm known 4d mesh tabl 4 summar complex algorithm correspond one obtain simul best 4dmesh algorithm note worst case complex list broadcast window broadcast oper case n even present data sum oper mimd model also complex list circular shift data accumul adjac sum assum shift distanc n2 mimd model tabl 4 give domin n term sort algorithm data broadcast data sum concentr distribut gener optim r rout sort meshconnect array tight bound complex parallel sort optic transpos interconnect system architectur optim rout algorithm meshconnect parallel comput data broadcast simd comput random rout hypercub algorithm applic imag process pattern recognit bpc permut otishypercub optoelectron comput bpc permut otismesh optoelectron comput scalabl network architectur use optic transpos interconnect system oti tr ctr alayyoub awwad k day ouldkhaoua gener method algorithm develop optic system journal supercomput v38 n2 p111125 novemb 2006 behrooz parhami hamilton swap oti network built hamiltonian compon network inform process letter v95 n4 p441445 31 august 2005 ahmad awwad otisstar attract altern network proceed 4th wsea intern confer softwar engin parallel distribut system p16 februari 1315 2005 salzburg austria khale day abdelelah alayyoub topolog properti otisnetwork ieee transact parallel distribut system v13 n4 p359366 april 2002 xiaofan yang graham megson david j evan oblivi shortestpath rout algorithm fulli connect cubic network journal parallel distribut comput v66 n10 p12941303 octob 2006 behrooz parhami swap interconnect network topolog perform robust attribut journal parallel distribut comput v65 n11 p14431452 novemb 2005 ahmad awwad otisstar attract altern network proceed 4th wsea intern confer softwar engin parallel distribut system p16 februari 1315 2005 salzburg austria khale day optic transpos kari ncube network journal system architectur euromicro journal v50 n11 p697705 novemb 2004 prasanta k jana polynomi interpol polynomi root find otismesh parallel comput v32 n4 p301312 april 2006 chihfang wang sartaj sahni matrix multipl otismesh optoelectron comput ieee transact comput v50 n7 p635646 juli 2001 chihfang wang sartaj sahni imag process otismesh optoelectron comput ieee transact parallel distribut system v11 n2 p97109 februari 2000