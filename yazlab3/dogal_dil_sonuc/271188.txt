analysi reduct angl calcul use cordic algorithm abstractin paper consid error appear angl comput cordic algorithm circular hyperbol coordin system use fixedpoint arithmet includ error aris finit number iter finit width data path also finit number bit input show last contribut signific operand small error accept input normal stage includ make unsatisfactori previou propos reduc error propos method base prescal input operand modifi cordic recurr show suitabl altern input normal smaller hardwar cost solut also use pipelin architectur redund carrysav arithmet b introduct cordic coordin rotat digit comput algorithm iter techniqu permit comput sever transcendent function use addit shift oper 15 16 among function includ trigonometr function like sine cosin tan gent arctang modul vector hyperbol function like sinh cosh tanh arctanh sever arithmet function due simplic hardwar implement sever signal process algorithm digit filter orthogon transform matrix factor formul cordic arithmet therefor sever cordicbas vlsi architectur propos solv relat signal process problem 7 applic requir high speed pipelin andor redund arithmet introduc implement cordic algorithm way iter algorithm evalu differ stage pipelin hand carri rippl adder replac redund adder carri save cs sign digit sd carri propag within adder elimin 4 11 13 14 control algorithm requir exact determin sign variabl modifi cordic algorithm facilit determin sign redund arithmet propos 5 analysi cordic algorithm fundament effici design cordic base architectur achiev good perform import know behaviour error take account effect hardwar implement obtain specifi accuraci differ sourc error cordic algorithm analyz detail 8 9 10 paper focu error appear comput invers tangent function angl calcul fixedpoint arithmet oper comput cordic algorithm vector mode requir final scale inher cordic algorithm sinc scale factor introduc mode oper angl calcul use algorithm matrix factor like eigenvalu singular valu decomposit svd 6 implement digit filter 1 12 matrix factor requir angl comput circular coordin system digit filter may need angl comput circular hyperbol coordin round error accumul control coordin iter cordic algorithm may result larg error evalu invers tangent error import applic cordic base svd algorithm invers tangent function evalu use fixedpoint format unnorm data 10 kind filter hyperbol invers tangent need comput 1 12 10 techniqu call partial normal propos bound error howev techniqu hard implement redund arithmet take consider initi error due round input operand perform analysi error consid follow three compon ffl error due round input data ffl error due finit number iter ffl error due finit datapath width show first compon consid previou analys signific input operand small consequ solut propos 10 might appropri small input operand seem suitabl solut perform normal input operand includ addit bit present solut perform prescal operand modifi cordic recurr 5 show solut simpler normal produc smaller total error cordic algorithm consist rotat vector circular hyperbol coordin system rotat perform decompos angl sequenc preselect elementari angl specif basic cordic iter microrot 15 16 integ take valu 1 gamma1 circular hyperbol coordin respect variabl x z microrot tan microrot angl shift sequenc sm circular coordin system s1 hyperbol coordin system sequenc may chosen start microrot repeat cordic iter coordin x rewritten matrix notat input vector iter vi output vector depend paramet cordic algorithm may evalu trigonometr function select coordin reduc zero permit evalu angl vector accumul z n1 way z coordin z coordin follow deriv numer bound overal error comput invers tangent function circular coordin system case coordin reduc zero chose accord equat 4 angl comput store variabl z follow notat introduc 8 10 accuraci cordic algorithm influenc processor design first analyz walther 16 conclud obtain precis n bit data path bit need later precis bound mode cordic algorithm obtain 8 9 10 hu 8 perform thorough analysi sever error mode cordic algorithm deriv numer error bound type error howev result invers tangent invers hyperbol tangent comput includ 10 shown numer error invers tangent comput use fix point arithmet small operand larg overal error split two compon approxim error round error approxim error due angl quantiz decomposit angl finit number microrot angl produc error represent angl hand round error caus finit word length data path denot ideal cordic mathemat defin cordic algorithm infinit precis data path infinit number microrot real cordic practic implement cordic algorithm finit precis data path finit number microrot possibl defin intermedi cordic use infinit precis arithmet number microrot real cordic figur 1 show relationship among three definit way approxim error differ output ideal cordic output intermedi cordic round error differ output intermedi cordic real cordic usual error due round input operand neglect consid round error input data often real situat input data obtain anoth hardwar modul round variabl larger precis case initi round error input data consid deriv bound sourc error becom import applic involv small input consid fixedpoint arithmet n fraction bit input operand b fraction bit represent x z data path insid cordic obtain nbit result wordlength use illustr figur 2 way initi round error input operand round error introduc microrot circular coordin valu coordin obtain intermedi cordic microrot ff angl calcul intermedi cordic hand angl comput ideal cordic given approxim error 10 jv0j modul input vector hand jy n1 valu n1 finit precis f c n1 round error coordin microrot converg jy consid round error z datapath n conclud angl error bound find bound f c n1 follow deriv 8 round error bound p 1 given equat 3 k delta k l 2 norm defin squar root largest eigenvalu matrix 8 round error compos two part round error produc initi round error input operand first term round error accumul n 1 microrot consid initi round error input data second third term therefor gamman due initi round error first term equat 11 15 due accumul round error second third term equat 11 replac equat 12 equat 10 bound overal error comput invers tangent function obtain gamman 15 equat 13 show error comput invers tangent constant bound depend norm input vector jv0j error becom larger smaller norm input vector way x 0 0 close zero larg error result consequ error bound input operand bound similar equat may obtain overal error hyperbol vector number cordic iter hyperbol coordin 16 max maximum input angl case error becom larg hyperbol norm input vector 0 small mean input normal error bound sinc lower bound jv0j enforc howev implement normal requir extra hardwar determin amount compon vector shift two leadingzero encod compar barrel shifter perform shift singl cycl therefor normal hardwar consum 10 altern solut propos circular vector partial normal izat involv modif cordic unit includ normal step integr cordic iter solut bound error main drawback solut initi round error consid difficult implement effici redund arithmet figur 3 illustr partial normal input normal distribut along cordic iter normal perform introduc zero real bit least signific posit input data input data known precis larger precis use cordic iter b bit b bit input consid normal extra bit input ignor result larg error consid analysi perform 10 figur 4 show error produc partial normal initi round error consid error convent cordic algorithm error produc use cordic input normal latter case error consid normal introduc zero normal real bit consid figur plot error express precis obtain angl versu modul input vector although error lower error produc standard cordic algorithm still signific small input higher error cordic algorithm input normal partial normal perform introduc zero hand microrot modif includ normal result microrot includ comparison choos maximum minimum two variabl variabl shift perform normal therefor solut adequ redund arithmet andor pipelin architectur next section new approach develop bound error angl calcu lation approach suitabl wordseri pipelin architectur redund nonredund arithmet requir littl extra hardwar cost 4 modifi cordic algorithm introduct redund arithmet angl comput cordic algorithm motiv develop modifi cordic microrot circular coordin system 5 recurr transform make microrot equat 1 transform select ffi perform accord follow equat figur 5 illustr modifi cordic algorithm w coordin reduc zero left shift perform coordin microrot transform facilit implement cordic algorithm redund arithmet redund arithmet csa sda exact determin sign coordin time consum redund represent coordin transform possibl use estim redund represent w determin ffi instead fulli assimil valu make possibl necessari use redund represent angl allow ffi take valu set gamma1 01 correspond select function use carrysav signeddigit represent found 5 moreov hardwar reduc sinc one shifter elimin work propos chang cordic equat aim reduc error comput invers tangent function follow obtain error bound angl comput modifi cordic algorithm base variabl w circular hyperbol coordin take account initi round error input operand 41 angl error analysi circular coordin system modifi cordic iter circular coordin system given equat 16 rewritten input vector vi output vector pw1 transform matrix follow similar deriv standard cordic algorithm possibl find bound overal error way valu coordin w microrot ff angl calcul intermedi cordic equat 20 rewritten angl vector v0 therefor approxim error consid round error z datapath angl error modifi algorithm circular coordin bound wn1 round error coordin w find bound f c wn1 use equat 11 consid transform matrix given equat 19 moreov round error introduc microrot modifi cordic algorithm bound round error introduc coordin w multipli factor 2 microrot right shift evalu l 2 norm matrix product k ij pw1 k follow relat 2 taken account n k round error modifi cordic algorithm bound first term contribut initi round error second one accumul error microrot replac result equat 24 error comput angl modifi algorithm obtain seen compar equat 13 30 reduct error comput angl tan use modifi cordic iter due mainli elimin round error w coordin result lower accumul round error n iter figur 6a show error observ sever initi valu standard modifi cordic algorithm sever differ valu b case error becom import jv0j decreas although error standard cordic alway slighti larger error modifi cordic howev although difer error standard modifi algorithm small modifi cordic algorithm result simpler hardwar impl mentat sinc one shifter elimin suitabl implement redund arithmet 42 angl error analysi hyperbol coordin system analysi develop previou section extend evalu error angl comput hyperbol coordin function calcul tanh iter i0 evalu similarli circular coordin defin modifi cordic algorithm mean transform given equat 15 modifi microrot similarli circular coordin case find quantiz error given therefor obtain bound error angl calcul find bound accumul round error f h wn1 use equat 25 consid transform matrix pwgamma1 similarli case circular coordin system evalu k account equat 26 matrix anj defin equat 27 matrix qij defin valu q 0 q 1 depend type microrot perform follow repetit repetit j therefor l 2 norm matrix repetit way round error hyperbol coordin obtain consid round error z data path overal error hyperbol angl comput modifi cordic algorithm error standard modifi cordic algorithm oper hyperbol vector shown figur 6b circular vector mode oper error reduc mean util modifi cordic algorithm round error w coordin elimin hand observ figur 6 find error hyperbol vector larger circular vector hyperbol coordin scale factor k h less uniti reduc operand hyperbol modul vector decreas map vector xaxi therefor round error import hyperbol coordin circular coordin accord equat 38 hyperbol vector error would larg even normal input x 1 1 similar howev rang converg algorithm impos limit valu x consid basic sequenc microrot cordic algorithm hyperbol coordin 16 result therefor error signific input operand small although modifi cordic algorithm reduc overal error angl computa tion circular hyperbol coordin system error still unbound becom import modul input vector small smaller modul input vector larger error therefor necessari develop solut effici reduc error low hardwar time cost error angl calcul modifi cordic algorithm still unbound larg modul input vector small natur solut problem normal input operand howev requir two leadingzero coder compar two barrel shifter hardwar consum propos solut minim angl calcul error modifi algorithm circular hyperbol coordin nonredund redund arithmet develop solut base operand prescal error bound close precis algorithm hardwar implement simpler implement partial normal techniqu standard input normal moreov unlik solut develop 10 solut may appli cordic algorithm redund arithmet angl calcul error import modul input vector small therefor input vector modul forc take larg valu angl error reduc output cordic algorithm within precis requir operand prescal techniqu multipli modul input vector constant factor way result modul larg enough minim angl calcul error prescal carri start cordic iter thu preprocess stage follow consid perform operand prescal b bit input operand known b intern wordlength cordic p least signific bit use prescal shift right input vector shown figur 7 shown solut present 10 possibl perform normal consid addit bit input take account consider prescal follow x w input variabl input cordic processor prescal modul input vector multipli scale factor way error comput invers tangent function reduc import factor reduc round error also impos lower bound v delta 2 gamman prescal carri input vector modul small fore defin 1 jx j 2 gamma jw j 2 gamma prescal perform modul input vector lower 2 gamma case multipli input vector time 2 obtain larg modul valu chosen way error minim error angl comput input vector modul jv j 2 gamma must alreadi bound close precis algorithm way maximum overal error angl comput circular coordin prescal obtain replac jv0j equat consid later case minimum input vector modul jv result sin sin k1 delta2 gamma16gamma figur 8 show error sever differ prescal correspond prescal 9 precis algorithm intern precis modifi cordic arquitectur moreov input operand round bit prescal prescal carri consid least b bit input known modul input vector less 2 gamma sinc modul modifi error without prescal modul larger 2 gamma prescal carri error significantli reduc sinc modul enlarg prescal similar result obtain hyperbol coordin system howev error angl although reduc still larg vector modul jv j 2 gamma2 exampl prescal perform error larg input vector small modul less approxim 2 gamma10 hand scale factor larg input vector modul less 2 gamma present import error exampl prescal error larg modul 2 gamma6 2 gamma9 sinc prescal carri express 43 illustr figur 8 seen singl valu produc accept error whole rang jv0j achiev doubl prescal two differ scale factor use 1 jx j 2 gammas1 jw j 2 gammas1 s1 s2 figur 9 show error circular hyperbol coordin respect consid doubl prescal 9 way maximum error reduc approxim 2 gamma15 close precis algorithm everi input vector modul moreov common prescal hyperbol circular coordin use facilit vlsi implement modifi cordic architectur figur compar error angl calcul use partial normal techniqu describ 10 prescal techniqu doubl prescal modifi equat error prescal techniqu alway lower error partial normal said partial normal use bit correspond precis less 2 gammab input perform normal prescal extend precis although high precis n 32 necessari consid least three valu scale factor 51 prescal techniqu nonredund arithmet cordic algorithm implement use nonredund arithmet hardwar implement prescal techniqu consist comparison modul vector scale factor correspond shift input operand comparison modul scale factor perform accord equat 44 two input coordin compar 2 gammas1 2 gammas2 correspond scale factor obtain exampl implement doubl prescal techniqu shown figur 11 seen necessari includ small number control gate two row multiplex charg select scale unscal operand first row multiplex perform shift 2 5 accord result check bit 0 5 x w way shift carri bit equal 1 0 neg posit number less 2 gamma5 second pair multiplex addit shift 2 4 perform bit 6 9 also 1 0 perform case total shift 2 9 52 prescal techniqu redund arithmet implement cordic algorithm redund arithmet requir assimil certain number bit w variabl obtain estim sign use determin direct microrot 5 11 13 appli normal data posit signific bit known way data normal necessari perform previou normal 3 cordic architectur avoid assimil check certain number bit propos architectur base moresignificantbitfirst calcul absolut valu coordin detect magnitud chang calcul calcul direct microrot requir propag carri mostsignific leastsignific bit coordin reason addit regist need skew data import characterist architectur input data need normal angl calcul error describ previou section although architectur use coordin control variabl modifi use variabl w instead coordin result highspe implement modifi cordic algorithm hand prescal perform scheme shown figur 11 way prescal techniqu may incorpor preprocess stage architectur obtain pipelin redund arithmet cordic permit comput invers tangent function circular hyperbol coordin without error unnorm data without need perform initi normal 53 evalu prescal techniqu hardwar complex doubl prescal lower complex standard normal stage actual prescal techniqu consid incomplet normal two differ shift possibl hand hardwar complex also lower partial normal 10 partial normal impli introduct addit hardwar cordic architectur xy regist b bit long necessari introduc two normal shift regist maximum shift m2 12 addit two leadingzero encod oper m2 12 signific digit coordin x requir increas clock cycl produc inclus two normal barrel shifter critic path wordseri implement solut present prescal techniqu introduc addit hardwar cordic processor sinc prescal preprocess stage moreov util variabl w instead coordin permit reduc global hardwar cost cordic architectur one shifter elimin final prescal techniqu use pipelin processor redund arithmet wherea partial normal techniqu restrict wordseri architectur convent nonredund arithmet pipelin architectur cordic algorithm partial normal techniqu would need two barrel shifter stage pipelin addit hardwar implement cordic microrot implement partial normal redund arihtmet ineffici sinc sever comparison involv 6 conclus thorough analysi error appear calcul invers tangent hyperbol invers tangent function cordic algorithm show larg numer error result input unnormn modul input vector small shown mean error analysi util modifi cordic algorithm base w iter siginificantli reduc numer error angl comput circular hyperbol coordin analysi round error input operand taken account error sourc neglect previou analys literatur shown error becom import applic involv unnorm input hand propos solut problem operand prescal result low cost vlsi implement operand prescal techniqu consist preprocess stage cordic microrot input vector scale constant factor modul small enough result larg error angl comput solut use pipelin wordseri cordic processor redund nonredund arithmet moreov prescal chosen way scale factor use circular hyperbol coordin system r vlsi speech analysi chip set base squareroot normal ladder form unnorm fixedpoint cordic arithmet svd processor high speed bitlevel pipelin architectur redund cordic implement cordic algorithm new result fast vlsi implement redund onlin cordic applic matrix triangular svd redund onlin cordic unitari transforma tion cordicbas vlsi architectur digit signal process quantiz effect cordic algorithm neglect error sourc cordic algorithm numer accuraci hardwar tradeoff cordic arithmet specialpurpos processor constantfactor redund cordic angl calcul rotat 2fold normal squareroot schur rl adapt filter redund cordic method constant scale factor sine cosin comput low latenc time cordic algorithm cordic trigonometr comput techniqu unifi algorithm elementari function tr ctr tom lang elisardo antelo cordic vector arbitrari target valu ieee transact comput v47 n7 p736749 juli 1998