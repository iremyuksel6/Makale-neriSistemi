java specif languag hardwaresoftwar system specif languag critic compon hardwaresoftwar codesign process sinc use function valid start point hardwar softwar partit cosynthesi paper pro pose java program languag specif languag hardwaresoftwar system java sever characterist make suitabl system specif howev static control dataflow analysi java program problemat java class dynam link paper provid gener solut problem static analyz java program use techniqu prealloc class instanc aggress resolv memori alias use global analysi output analysi control dataflow graph input specif result sampl design show analysi extract fine coarsegrain concurr subsequ hardwaresoftwar partit cosynthesi step hardwaresoftwar co design process exploit b introduct hardwaresoftwar system solut increas popular varieti design domain 1 system provid high perform flexibl mix hardwaresoftwar implement number benefit hardwar compon provid higher perform achiev softwar certain timecrit subsystem hardwar also provid interfac sensor actuat interact physic envi ronment hand softwar allow design specifi system high level abstract flexibl environ error even late stage design rapidli correct 2 softwar therefor contribut decreas timetomarket decreas system cost hardwaresoftwar system design broken follow main step system specif parti tion cosynthesi first step automat hardwaresoftwar codesign process establish complet system specif specif use valid desir behavior without consid implement detail function valid system specif critic keep system develop time short function error easier fix less costli handl earlier develop process given valid system specif hardwaresoftwar partition step divid system hardwar softwar subsystem necessari interfac analyz concurr avail specif partition map concurr block commun hardwar softwar compon order satisfi perform cost constraint design final cosynthesi step gener implement differ subsystem gener machin code softwar subsytem hardwar configur data hardwar subsystem system specif critic step codesign methodolog drive function valid step hardwaresoftwar partit process thu choic specif languag import function valid entail explor design space use simul henc specif must allow effici execut requir compil runtim environ effici map specif onto generalpurpos processor platform hand partit process requir precis input specif whose concurr clearli identifi gener precis specif requir languag construct abstract directli correspond characterist hardwar softwar tradit design abl reconcil two object one specif languag instead forc maintain multipl specif obvious maintain multipl specif design best tediou due need keep specif synchron also errorpron differ specif languag tend differ program model semant need multipl specif due shortcom current specif languag use hardwaresoftwar codesign hardwaresoftwar specif languag current use system design divid softwar program languag hardwar descript languag softwar languag c c gener highperform execut specif system behavior function valid softwar languag tradit base sequenti execut model deriv execut semant gener purpos processor howev softwar languag gener support model concurr deal hardwar issu time event defici overcom provid design librari packag emul miss featur 15 seriou problem softwar languag allow use indirect memori referenc difficult analyz static make difficult static analysi extract implicit concurr within specif hardwar descript languag verilog 5 vhdl 6 optim specifi hardwar support varieti hardwar characterist hierarchi finegrain con currenc elabor time construct esterel anoth specif languag similar verilog construct handl except 7 specchart build graphic structur hierarchi use vhdl specifi implement variou structur hierarchi 4 languag highlevel program construct limit express make difficult specifi softwar fur thermor languag base execut model requir great deal runtim interpret eventdriven semant result lowperform execut compar softwar languag paper advoc use java singl specif languag hardwaresoftwar system identifi languag characterist enabl effici function valid concurr explor hardwaresoftwar partition java generalpur pose concurr objectori platformindepend program languag 10 java implementationindepend runtim environ abstract machin call java virtual machin jvm instruct set call bytecod 11 virtual machin use stackbas architectur therefor java bytecod use operand stack store temporari result use later bytecod java program set objectori framework consist multipl class compil binari represent call classfil format represent lay class inform includ classs data field method whose code segment compil bytecod field method option declar static static field method class share instanc class nonstat field method duplic new instanc data type java either primit type integ float charact refer pointer class instanc array 10 sinc java class predominantli link runtim refer class instanc resolv compil time present challeng static analyz determin data flow data field access control flow method call paper also outlin controldataflow analysi techniqu use framework detect concurr design analysi techniqu provid gener solut problem dynam class alloc aggress prealloc class instanc compiletim perform global refer analysi rest paper organ follow section 2 explain java wellsuit hardwaresoftwar system specif section 3 identifi problem aris analyz java program present gener solut build control flow dataflow depend inform appli techniqu three sampl design analyz explicit implicit concurr design section 4 conclud briefli discuss futur direct section 5 hardwaresoftwar specif java desir hardwaresoftwar codesign process use singl specif languag design entri specif use differ languag softwar hardwar combin differ execut mod el make specif difficult simul analyz research begin softwar program languag usual c extend languag construct support concurr time event provid librari packag ad new languag construct exampl approach scenic 15 v 17 take slightli differ approach instead requir design specifi hardwar implement detail specif approach design model complet system algorithm behavior fashion softwar languag wellsuit type model specif com plete automat compil process use analyz specif identifi coarsegrain concurr describ design uncov finergrain concurr implicit specif partit synthesi step hardwaresoftwar codesign process use concurr uncov analysi creat optim hardwaresoftwar system specif languag use approach must abil specifi explicit concurr make easi uncov implicit concurr coarsegrain concurr intuit design specifi hardwaresoftwar system often conceptu set concurr behavior 2 java multithread languag readili express sort concurr concurr behavior model subclass thread class overrid run method encod thread behavior shown figur 1 thread class provid method suspend resum yield sleep manipul thread syn chroniz howev support lower level use monitor implement two bytecod oper pro read data loop gener xarray proc xarray process xarray class system static thread proca procb public static void mainstr argv new procaclass new procbclassproca launch thread systemclass procaclassclass class procaclass extend thread boolean synchron void setxarray write xarray data synchron arrt getxarray return xarray data public void run done thisxreadi true int class procbclass extend thread procaclass proca procbclassthread procain public void run done thisxreadi fals process data procbclassclass figur 1 concurr java vide entri exit monitor sampl design shown figur 1 maintain synchron read write xarray method getxarray setxar ray tag synchron finegrain concurr usual either nonintuit cumbersom design express spec ific impli autom codesign tool must abl uncov finegrain concurr analyz specif primari form concurr look looplevel concurr multipl iter loop execut simultan form concurr import detect algorithm gener spend time within core loop identifi exploit parallel core loop thu provid signific perform enhanc determin whether loop iter parallel requir analysi static determin data depend exist across loop iter run method proca class shown figur 1 computexarray call depend valu gener previou iter forloop iter loop may execut simultan major hurdl data depend analysi must overcom deal memori refer refer introduc level indirect read write physic memori locat compiletim analysi conserv handl refer enc conservat necessari guarante correct system behavior across transform introduc partit step base result analysi ever conservat caus analysi gener fals data depend nonexist system lev el depend reduc data parallel analysi detect simpl design shown figur 1 without abil analyz depend within forloop across associ method call conserv analysi would determin loop iter interdepend henc perform sequenti reduc degre data parallel section specif 100fold advantag java languag like c java restrict programm use memori refer java memori refer strongli type also refer strictli treat object handl memori address consequ pointer arithmet disallow restrict use refer enabl aggress analysi reduc fals data depend codesign specif languag provid highperform execut enabl rapid function val idat java execut environ use virtual chine jvm provid platformindepend howev independ requir java code execut interpret reduc execut perform compar ident specif model c although perform degrad least order magnitud sun jdk 10 runtim environ ment techniqu justintim compil close perform gap less twotim c1216 evolut java tool technolog driven java success main especi networkbas applic moreov java runtim environ make easi instrument gather profil inform use guid hardwaresoftwar partit analyz java program control dataflow analysi java specif requir partit cosynthesi step codesign process analysi examin bytecod invok method determin rel order data depend bytecod operand result type either primit type class ar ray primit type alway handl valu class array variabl handl refer object class instanc refer pointer howev wellbehav compar cc counterpart refer strongli type manipul object refer point class instanc link dynam runtim prior execut java program alloc static field method program class make difficult static analyz java program object refer resolv call method dynam link object resolv either make imposs determin control flow way deal problem conserv assign method invoc softwar softwar runtim system handl dynam resolut howev reduc opportun extract parallel hardwar thu lead inferior hardwaresoftwar design order avoid problem dynam link object specif could restrict use static field method forc alloc necessari object linearli begin program ever would significantli restrict use languag solut attempt prealloc object static analysi note approach handl class instanti within loop recurs method invoc prealloc partial solv problem dynam alloc class instanc class refer point instanc compat class type fore two refer compat class type alia conserv handl refer alias reduc appar concurr specif aggress refer alias analysi requir global dataflow analysi determin class instanc set instanc refer may point outlin analysi techniqu shown figur 2 analysi start static main method method process local analysi perform determin local control dataflow next method invok current method recurs analyz fi nalli refer pointto valu resolv order determin global data depend inform elabor techniqu use perform local global analys describ target represent cdfg cdfg represent shown figur 3 involv two main structur first structur tabl static prealloc class instanc asid object account inform tabl maintain list entri per object entri repres either method non figur 2 analysi techniqu outlin processmethod currentmethod perform local analysi currentmethod build local control flow inform resolv local depend prealloc new instanti insid loop recurs method invok processmethod invokedmethod resolv refer global analysi impact invokedmethod resolv global depend given complet refer analysi processmethod main figur 3 target represent method call graph basic block control flow prealloc entiti static entiti graph primit type data field data field entri necessari global analysi data field global scope life instanc array treat exactli class instanc fact array model class method method entri point portion second main structur represent second structur control dataflow inform node bytecod basic block edg repres local control flow basic block within method well global control flow across method invoc return cdfg represent model multithread except use special control flow edg annot inform thread oper perform except trap thread oper java implement method thread class cdfg abstract invoc method encod associ oper control flow edg correspond method call exampl java thread initi invok thread class start method cdfg encount invoc start method new control flow edg insert invoc start thread run method edg also indic new thread fork hand except java use trycatch block code may caus except place insid tri claus follow one subsequ catch claus catch block trap specifi thrown except execut correspond handler code cdfg insert special control flow edg block may caus except handler block edg annot type except handler trap ping exampl except handl shown figur 4 31 step target particular method identifi sequenc basic block captur local control flow also resolv local depend two distinct lev el first sinc java bytecod reli operand stack arithmet handler code except figur 4 except edg cdfg tri int catch arithmeticexcept e handler code intermedi result extra level depend indirect stack need factor achiev use bytecod number second depend local method variabl identifi use reach definit dataflow analysi flow repres method basic block correspond sequenc ing basic block sequenc bytecod first bytecod directli reach outsid block first bytecod execut bytecod sequenti execut control flow edg simpli repres predecessorsuccessor order basic block analysi depend exist bytecod extra level indirect operand stack resolv indirect use bytecod number bytecod number simpli denot replac stack semant bytecod analyz physic operand point bytecod gener requir result simpli achiev travers method bytecod program order instead execut bytecod stack behavior simul use compiletim operand stack opstack bytecod read data stack entri pop opstack new operand creat valu retriev stack bytecod write result stack pointer push onto opstack process account data requir one stack entri doubl precis float point long integ result also stackmanipul bytecod dup duplic top entri swap swap top two entri interpret manipul opstack accordingli bytecod discard sinc longer need purpos code function outlin exampl bytecod number shown figur 5 data depend across local variabl resolv comput reach definit particular method definit variabl bytecod may assign valu variabl definit reach point p exist path posit p definit overwrit encount reach definit comput would clear exist data depend bytecod bytecod n defin local variabl use n ms definit reach point immedi follow n comput reach definit use iter dataflow worklist algorithm 8 algorithm iter basic block particular basic block propag definit overwrit join point multipl control branch set reach definit union individu set algorithm iter set successor basic block whose output set reach definit chang converg chang set reach definit materi 32 global analysi handl data depend refer global analysi gener refer set object instanc may point set prealloc instanc pointsto relat determin simpl dataflow analysi techniqu global reach definit comput dataflow depend refer straightforward solut examin entir control flow graph treat method invoc regular control flow edg iter dataflow analysi gener pointsto inform everi refer enc howev approach suffer problem unrealiz path caus global alias inform propag one invoc site noncorrespond return site 9 figur 5 bytecod number example179iload1 ldcw 4 ireturn ireturn initi symbol operand stack opstack empti travers basic block revers postord current bytecod read data stack pop opstack appropri bytecod operand slot current bytecod write data stack push bytecod pc unto opstack push local variabl onto operand stack push constant onto operand stack pop two entri first second jump pc 9 pop entri return method entri return valu pop entri return method entri return valu opstack statu current bytecod 9 iconstm1 8 ireturn contextsensit solut motiv 9 gener transfer function method summar impact invok method global access data refer variabl transfer function map formal method paramet refer addit set variabl extend includ global refer use insid method 1 creat new instanc 2 invok method return object refer 3 access class instanc field refer input transfer function initi pointsto valu extend paramet set output gener transfer function final pointsto valu extend paramet due method invoc transfer function summari access read write method extend paramet gener use interv analysi 8 access order accord method local control flow infor mation access one follow five primit oper read assign new meet invok read primit requir one operand refer result set potenti class instanc refer point assign primit use summar assign whose lefthand side extend paramet requir two operand first target ref erenc second set potenti pointto instanc new primit indic creation new class stanc primit return set compos singl stanc prealloc possibl within loop recurs otherwis conserv pointsto set compat class instanc meet primit necessari handl join branch control flow meet point alia set refer assign one meet branch union alia set refer meet control flow edg final invok primit use resolv chang refer alia set due invok meth od effect primit caus transfer function invok method execut somemethod obj obj b new obj test1 figur 6 transfer function global refer analysi tfsomemethod assign new obj 4 experiment result hardwaresoftwar system multiprocess sy tem partit cosynthesi tool map behavior specif system need make hardwaresoftwar tradeoff 13 make tradeoff object maxim costperform mix implement necessari abl identifi concurr input specif implement java frontend analysi step standalon compil pass read design class file gener correspond cdfg represent test techniqu use design list tabl 1 first design raytrac simpl graphic appli cation render two sphere top plane shadow reflect due singl specular light sourc second applic robotarm robot arm control ler third design decod digit signal process applic featur video decod h263encod bitstream 14 result controldataflow graph analyz identifi concurr specif analysi examin concurr three level threadlevel loop level bytecodelevel threadlevel concurr exhibit commun concurr process span control flow sever method looplevel concurr exhibit core loop usual confin singl method bytecodelevel concurr exhibit bytecod oper proceed provid data depend satisfi irrespect control flow dere form concurr exist within basic block threadlevel concurr explicitli express design java thread sinc thread uniqu identifi cdfg work requir uncov form parallel looplevel concurr requir analysi control dataflow inform associ inner loop identifi data depend span differ loop iter determin true depend depend write iter loop read subsequ itera tion loop independ iter execut iter concurr minithread coarsegrain concurr express thread loop level line java class instanc basic block raytrac 698 6 37 358 tabl 1 design characterist exploit alloc thread differ subsystem target architectur hand bytecodelevel concurr cdfg span multipl basic block exist bytecod level within basic block degre depend basic block interbytecod data depend finegrain concurr impact perform improv hardwar implement basic block hardwar inher parallel therefor parallel design implement without cost overhead given enough structur resourc support parallel limit degre parallel synchron due data depend henc execut time block hardwar decreas increas data parallel tabl 2 present result analyz three differ form parallel sampl design first column indic number designerspecifi thread second column show number paralleliz loop third column indic averag number bytecod per loop fourth column show averag number bytecod per basic block fifth column assess averag data parallel basic block bytecodelevel concurr measur averag number bytecod execut simultan cycl jvm result show possibl extract parallel variou level granular java program 5 conclus futur work specif languag start point hardwaresoftwar codesign process describ key requir languag specif languag express design concept easili model provid represent rel easi analyz optim perform languag also provid highperform exe cution shown java program languag satisfi requir threadlevel concurr looplevel concurr bytecodelevel concurr number thread number loop avg bytecod per loop avg basic block avg bytecod parallel decod 3 28 27 71 25 tabl 2 parallel assess result abl partit eventu cosynthes input java specif must abl analyz specif howev major problem face analysi step java dynam link class instanc make static analysi possibl propos techniqu reli aggress refer analysi resolv ambigu global control dataflow techniqu gener control dataflow graph represent specif result show use techniqu possibl extract concurr exploit java specif futur analysi techniqu serv frontend codesign tool map java system specif target architectur compos one microprocessor tightli coupl programm hardwar resourc acknowledg work sponsor arpa grant mip dabt 6395c0049 r hardwaresoftwar co design specif design embed hardwaresoftwar system specif design embed system verilog hardwar descript languag ieee inc esterel synchron program languag design semant implement compil principl effici contextsensit pointer analysi c program java languag specif java virtual machin specif java perform advanc rapidli multipleprocess behavior synthesi mix hardwaresoftwar system enhanc h effici implement reactiv model hardwar scenic design environ compil java time v system design languag tr compil principl techniqu tool esterel synchron program languag specif design embed system effici contextsensit pointer analysi c program multipleprocess behavior synthesi mix hardwaresoftwar system effici implement reactiv model hardwar scenic design environ verilog hardwar descript languag 4th ed java virtual machin specif java languag specif specif design embed hardwaresoftwar system compil java time ctr tommi kuhn wolfgang rosenstiel udo kebschul descript simul hardwaresoftwar system java proceed 36th acmiee confer design autom p790793 june 2125 1999 new orlean louisiana unit state tommi kuhn wolfgang rosenstiel java base object orient hardwar specif synthesi proceed 2000 confer asia south pacif design autom p579582 januari 2000 yokohama japan kuhn oppold c schulzkey winterhol w rosenstiel edward kashai object orient hardwar synthesi verif proceed 14th intern symposium system synthesi septemb 30octob 03 2001 montral pq canada josef fleischmann klau buchenried rainer kress java driven codesign prototyp network embed system proceed 36th acmiee confer design autom p794797 june 2125 1999 new orlean louisiana unit state peter l flake simon j davidmann superlog unifi design languag systemonchip proceed 2000 confer asia south pacif design autom p583586 januari 2000 yokohama japan josef fleischmann klau buchenried rainer kress hardwaresoftwar prototyp environ dynam reconfigur embed system proceed 6th intern workshop hardwaresoftwar codesign p105109 march 1518 1998 seattl washington unit state fin f fummi protect ipcor test gener proceed 12th acm great lake symposium vlsi april 1819 2002 new york new york usa kuhn oppold winterhol w rosenstiel marc edward yaron kashai framework object orient hardwar specif verif synthesi proceed 38th confer design autom p413418 june 2001 la vega nevada unit state martin radetzki ansgar stammermann wolfram putzkerm wolfgang nebel data type analysi hardwar synthesi objectori model proceed confer design autom test europ p101e januari 1999 munich germani alessandro fin franco fummi webcad methodolog ipcor analysi simul proceed 37th confer design autom p597600 june 0509 2000 lo angel california unit state j zhu static memori alloc pointer analysi color proceed confer design autom test europ p785790 march 2001 munich germani rachid helaihel kunl olukotun jmtp architectur exploit concurr embed java applic realtim consider proceed 1999 ieeeacm intern confer computeraid design p551557 novemb 0711 1999 san jose california unit state cindi eisner irit shitsevalov russ hoover wayn nation kyle nelson ken valk methodolog formal design hardwar control applic cach coher protocol proceed 37th confer design autom p724729 june 0509 2000 lo angel california unit state jianwen zhu daniel gajski openj extens system level design languag proceed confer design autom test europ p99e januari 1999 munich germani jame shin young josh macdonald michael shilman abdallah tabbara paul hilfing richard newton design specif embed system java use success formal refin proceed 35th annual confer design autom p7075 june 1519 1998 san francisco california unit state c schulzkey winterhol schweizer kuhn w rosenstiel objectori model synthesi systemc specif proceed 2004 confer asia south pacif design autom electron design solut fair p238243 januari 2730 2004 yokohama japan srgio akira ito luigi carro ricardo pezzuol jacobi system design base singl languag singlechip java asip microcontrol proceed confer design autom test europ p703709 march 2730 2000 pari franc marcello dalpasso alessandro bogliolo luca benini virtual simul distribut ipbas design ieee design test v19 n5 p92104 septemb 2002 verkest joachim kunkel frank schirrmeist system level design use c proceed confer design autom test europ p7483 march 2730 2000 pari franc marcello dalpasso alessandro bogliolo luca benini specif valid disstribut ipbas design javacad proceed confer design autom test europ p132e januari 1999 munich germani axel jantsch per bjuru composit signal flow comput model combin event sampl stream vector proceed confer design autom test europ p154160 march 2730 2000 pari franc brian grattan greg stitt frank vahid codesignextend applic proceed tenth intern symposium hardwaresoftwar codesign may 0608 2002 est park colorado marcello dalpasso alessandro bogliolo luca benini virtual simul distribut ipbas design proceed 36th acmiee confer design autom p5055 june 2125 1999 new orlean louisiana unit state malay haldar anshuman nayak alok choudhari prith banerje system synthes optim fpga hardwar matlab proceed 2001 ieeeacm intern confer computeraid design novemb 0408 2001 san jose california nayak haldar choudhari p banerje precis error analysi matlab applic autom hardwar synthesi fpga proceed confer design autom test europ p722728 march 2001 munich germani annett bunker ganesh gopalakrishnan salli mckee formal hardwar specif languag protocol complianc verif acm transact design autom electron system toda v9 n1 p132 januari 2004