structur approxim class studi approxim properti nphard optim problem recent made great advanc mainli due result obtain field proof check last import breakthrough prove apxcomplet sever import optim problem thu reconcil two distinct view approxim class syntact comput khanna et al proc 35th ieee symp foundat comput scienc ieee comput societi press lo alamito ca 1994 pp 819830 paper obtain new result structur sever computationallydefin approxim class particular defin new approxim preserv reduc use mani approxim class possibl give first exampl natur npocomplet problem first exampl natur apxintermedi problem moreov state new connect approxim properti queri complex npo problem b introduct pioneer paper approxim combinatori optim problem 20 david johnson formal introduc notion approxim problem propos approxim algorithm sever problem suggest possibl classif optim problem ground approxim properti sinc clear even though decis version nphard optim problem manyon polynomialtim reduc share approxim properti main reason fact manyon reduct alway preserv object function even happen rare preserv qualiti solut clear stronger kind reduc use inde approxim preserv reduct map instanc problem instanc problem b also extend abstract paper present 1st annual intern comput combinator confer abl come back good solut b good solut surprisingli first definit kind reduc 33 given long 13 year johnson paper least seven differ approxim preserv reduc appear literatur see fig 1 reduc ident respect overal scheme differ essenti way preserv approxim rang strict reduc error increas ptasreduc basic restrict see also chapter 3 23 ptasreduc 14 preduc 33lreduc 36 ereduc 26 strict reduc 33 phi phi phi phi phi phi phi phi hyh hy continu reduc 39 areduc 33 figur 1 taxonomi approxim preserv reduc mean reduc sever notion complet approxim class introduc basic two differ approach follow one hand attent focus comput defin class problem npo ie class optim problem whose underli decis problem np apx ie class constantfactor approxim npo problem along line research howev almost complet result dealt either artifici optim problem problem lower bound qualiti approxim easili obtain 12 33 hand research focus logic defin optim problem introduc sever syntact defin class natur complet result obtain 27 34 36 unfortun approxim properti problem latter class relat standard complexitytheoret conjectur first step toward reconcil two approach consist prove lower bound modulo p 6 np like condit approxim complet problem syntact defin class 1 31 recent anoth step perform sinc closur syntact defin class respect approxim preserv reduc prove equal familiar comput defin class 26 spite import achiev beyond apx still forc distinguish maxim minim problem long interest complet proof inde result 27 state possibl rewrit everi np maxim problem np minim problem unless npconp natur question thu whether dualiti extend approxim preserv reduct final even though exist intermedi artifici problem problem lower bound approxim obtain complet result prove 12 natur question aris natur intermedi problem exist observ question also open field decis problem exampl known graph isomorph problem npcomplet unless polynomialtim hierarchi collaps 38 result ever obtain give evid problem belong p first goal paper defin approxim preserv reduc use mani approxim class possibl reduct appear literatur still hold spite fact lreduc wide use far give strong evid use obtain complet result comput defin class apx logapx class problem approxim within logarithm factor polyapx class problem approxim within polynomi factor inde one hand 14 shown lreduc strict allow reduc problem known easi approxim problem known hard approxim hand paper show weak approxim preserv unless conp weak lreduc essenti share reduc fig 1 strict reduc ereduc strict lreduc share unless p np p npologn ptasreduc reduc propos combin ereduc ptasreduc far know strictest reduc allow obtain approxim complet result appear literatur exampl apxcomplet maximum satisfi 14 26 polyapxcomplet maximum cliqu 26 second group result refer exist natur complet problem npo inde 33 12 provid exampl natur complet problem class minim maxim np problem respect sect 3 show exist maxim minim npocomplet natur problem particular prove maximum program minimum program npocomplet result show make use natur approxim preserv reduc enough power encompass dualiti problem rais 27 inde 26 shown dualiti aris apx logapx polyapx subclass npo moreov result also obtain restrict class npo pb ie class polynomi bound npo problem particular prove maximum program minimum pb program npo pbcomplet third group result refer exist natur apxintermedi problem sect 4 prove minimum bin pack natur npo problem apxcomplet unless polynomialtim hierarchi collaps sinc wellknown 32 problem belong apx belong pta class npo problem polynomialtim approxim scheme unless pnp result yield first exampl natur apxintermedi problem natur complexitytheoret conjectur roughli speak proof result structur two main step first step show minimum bin pack apxcomplet problem answer set k nonadapt queri npcomplet problem could reduc problem approxim instanc minimum bin pack within ratio depend k second step show problem approxim instanc minimum bin pack within given perform ratio solv polynomialtim mean constant number nonadapt queri npcomplet problem two step impli collaps queri hierarchi turn impli collaps polynomialtim hierarchi side effect proof show problem apxcomplet admit asymptot approxim scheme previou result consequ new connect approxim properti queri complex nphard optim problem sever recent paper notion queri complex number queri np oracl need solv given problem shown use tool understand complex approxim problem 7 9 upper lower bound prove number queri need approxim certain optim problem maximum satisfi maximum cliqu result deal complex approxim valu optimum solut complex comput approxim solu tion paper instead complex construct approxim address consid languag recogn polynomialtim machin function oracl solv approxim problem particular prove exist natur apxintermedi problem sect 41 abl solv open question 7 prove find vertic largest cliqu difficult mere find vertic 2approxim cliqu unless polynomialtim hierarchi collaps result 7 9 show queri complex good measur studi approxim properti optim problem last group result show complet approxim class impli lower bound queri complex inde sect 5 show two approach basic equival give suffici necessari condit approxim complet term querycomplex hard combinatori properti import result twofold give new insight structur complet problem approxim class reconcil approach base standard comput model approach base comput model approxim propos 8 final observ result seen extens result 26 gener suffici necessari condit apxcomplet prove 11 preliminari assum reader familiar basic concept comput complex theori definit complex class use paper refer reader one book subject see exampl 2 5 16 35 give standard definit field optim approxim theori definit 1 np optim problem fourtupl sol type 1 set instanc recogniz polynomi time 2 given instanc x solx denot set feasibl solut x solut short polynomi p exist 2 solx jyj pjxj moreov x jyj pjxj decid polynomi time whether 2 solx 3 given instanc x feasibl solut x mx denot posit integ measur often also call valu function comput polynomi time also call object function 4 type 2 fmax ming goal np optim problem respect instanc x find optimum solut feasibl solut mx solxg follow opt denot function map instanc x measur optimum solut class npo set np optim problem max npo set maxim npo problem min npo set minim npo problem npo problem said polynomi bound polynomi q exist instanc x solut x mx qjxj class npo pb set polynomi bound npo problem max pb set maxim problem npo pb min pb set minim problem npo pb definit 2 let npo problem given instanc x feasibl solut x defin perform ratio respect x ae mx oe rel error respect x perform ratio respect rel error alway number greater equal 1 respect 0 close 1 respect 0 valu feasibl solut close optimum valu easi see instanc x feasibl solut x definit 3 let npo problem let algorithm instanc x solx 6 return feasibl solut x polynomi time given arbitrari function r n 1 1 say rnapproxim algorithm perform ratio feasibl solut x respect x verifi follow inequ definit 4 given class function f npo problem belong class fapx rnapproxim algorithm exist function r 2 f particular apx logapx polyapx expapx denot class fapx f equal set o1 set olog n set o1 set o2 n o1 respect one could object differ npo expapx sinc polynomi bound comput time object function impli npo problem h2 n k approxim h k true sinc npo problem exist even hard find feasibl solut see exampl problem sect 3 eg maximum weight satisfi definit 5 npo problem belong class pta algorithm exist fix ration r 1 delta r rapproxim algorithm clearli follow inclus hold also easi see inclus strict p 6 np 12 list npo problem defin np optim problem use paper much larger list npo problem refer 11 maximum cliqu instanc graph e solut cliqu g ie subset v 0 v everi two vertic v 0 join edg e measur cardin cliqu ie jv 0 j maximum weight satisfi minimum weight satisfi instanc set variabl x boolean quantifierfre firstord formula oe variabl x weight function solut truth assign satisfi oe measur sum weight true variabl maximum program minimum pb program instanc integ theta nmatrix integ mvector b binari nvector c solut binari nvector x ax b measur maximum satisfi instanc set variabl x boolean cnf formula oe variabl x solut truth assign variabl x measur number satisfi claus minimum bin pack instanc finit set u item size su 2 q 0 1 u 2 u solut partit u disjoint set u um sum size item u 1 measur number use bin ie number disjoint set minimum order bin pack instanc finit set u item size su 2 q 0 1 u 2 u partial order u solut partit u disjoint set u um sum size item u 1 u 2 u u measur number use bin ie number disjoint set minimum degre span tree instanc graph e solut span tree g measur maximum degre span tree minimum edg color instanc graph e solut color e ie partit e disjoint set two edg e share common endpoint g measur cardin color ie number k disjoint set 2 new approxim preserv reduc goal section defin new approxim preserv reduc use mani approxim class possibl reduct appear literatur still hold justifi definit new reduc emphas disadvantag previous known one follow assum reduc instanc x solx 6 map instanc x 0 21 lreduc first reduc shall consid lreduc linear reduc 36 often practic use order show problem least hard approxim anoth definit 6 let b two npo problem said lreduc b symbol l b two function f g two posit constant ff fi exist 1 x 2 fx 2 b comput polynomi time 2 x 2 2 sol b fx gx 2 sol x comput polynomi time 3 x 2 opt b fx ffopt x 4 x 2 2 sol b fx jopt fourtupl f g ff fi said lreduct b clearli lreduc preserv membership pta inde f g ff fi l reduct b x 2 2 sol b fx b 2 pta 2 pta 36 inequ also impli minim problem rapproxim algorithm b exist 1 approxim algorithm exist word lreduct minim problem optim problem preserv membership apx next result give strong evid gener true whenev start problem maxim one theorem 1 follow statement equival 1 two problem 2 max npo b 2 min npo exist 62 apx b 2 apx l b 2 two max npo problem b exist 62 apx b 2 apx l b 3 polynomialtim recogniz set satisfi boolean formula exist polynomialtim algorithm comput satisfi assign proof 1 2 case suffic lreduc b maxim problem c apx 26 assum polynomialtim recogniz set satisfi boolean formula polynomialtim algorithm comput satisfi assign formula set suppos f g ff fi lreduct maxim problem maxim problem b b rapproxim r 1 let x instanc let solut fx opt b fxmb fx r sake conveni let opt x opt show opt x nonconstruct approxim opt let two case 1 opt b flopt definit lreduc opt gamma fiopt opt henc opt r last equal due definit fl 2 opt b flopt hold opt let us consid follow nondeterminist polynomialtim algorithm begin finput x 2 g comput x use rapproxim algorithm b lreduct b guess 2 sol x x x accept els reject appli cook reduct 10 algorithm easili follow satisfi boolean formula oe x construct polynomi time length x satisfi assign oe x encod solut x whose measur least moreov set foe x recogniz polynomi time assumpt possibl comput polynomi time satisfi assign oe x thu approxim solut x assum polynomialtim recogniz set satisfi boolean formula exist polynomialtim algorithm comput satisfi assign consid follow two npo problem fy truth assign variabl xg jxj satisfi assign x jxj satisfi assign x 2jxj otherwis clearli problem b apx apx polynomialtim algorithm comput satisfi assign formula contradict assumpt moreov easi see lreduc b via f j xx g j xyy observ 30 shown third statement theorem hold flreduc differ manyon reduc moreov 19 shown latter hypothesi somewhat intermedi p p 6 np word strong evid even though lreduc suitabl prove complet result within class contain apx max snp 36 reduc use defin notion complet class beyond apx moreov blindli use obtain posit result prove exist approxim algorithm via reduct final possibl lreduc maxim problem b defin last part proof previou theorem maximum 3satisfi impli closur max snp respect lreduc includ apx contrari commonli believ eg see 35 page 314 22 ereduc drawback lreduc mainli due fact relat perform ratio set two separ linear constraint optimum valu absolut error ereduc error reduc 26 instead impos linear relat directli perform ratio definit 7 let b two npo problem said ereduc b symbol e b two function f g posit constant ff exist 1 x 2 fx 2 b comput polynomi time 2 x 2 2 sol b fx gx 2 sol x comput polynomi time 3 x 2 2 sol b fx tripl f g ff said ereduct b observ function r ereduct map rnapproxim solut solut h constant depend reduct henc ereduc preserv membership pta also membership exp apx polyapx logapx apx consequ observ result previou section npo problem exist lreduc ereduc howev follow result show within class apx ereduc gener lreduc proposit 1 two npo problem b l b 2 apx e b proof let rapproxim algorithm r constant let f lreduct b x 2 2 sol b f l x ea x g l x ff l fi leb f l x minim problem x 2 2 thu f ereduct b otherwis maxim problem distinguish follow two case 1 eb f l x 1 case 2 eb f l case rb f l x first inequ due fact rapproxim algorithm thu defin tripl f 1 x 2 f 2 x 2 2 sol b f e x 3 1g discuss follow f ereduct b ut clearli convers result hold sinc problem npo gamma npo pb lreduc problem npo pb problem po ereduc npo problem moreov 26 shown maximum 3satisfi npo pb apxcomplet respect ereduc result obtain mean lreduc inde easi prove minimum bin pack lreduc maximum 3satisfi unless see exampl 6 ereduc still somewhat strict inde 14 shown natur pta problem exist maximum knapsack ereduc polynomi bound apx problem maximum 3satisfi unless logarithm number queri np oracl power polynomi number queri 23 apreduc mention drawback ereduc mainli due fact e reduct preserv optimum valu see 14 inde linear relat perform ratio seem restrict accord definit approxim preserv reduc given 12 could overcom problem express relat mean implic howev suffici intuit sinc function g know approxim requir must still map optimum solut optimum solut final step thu consist let function f g depend perform ratio 1 impli differ constraint put comput time f g one hand still want preserv membership pta want reduct effici even poor perform ratio requir constraint formal impos follow definit approxim preserv reduc restrict ptasreduc introduc 14 definit 8 let b two npo problem said apreduc b symbol ap b two function f g posit constant ff exist 1 x 2 r 1 fx r 2 b comput time f jxj r 2 x 2 r 1 2 sol b fx r gx comput time g jxj jyj r 3 fix r f delta r g delta delta r bound polynomi 4 fix n f n delta g n n delta nonincreas function 5 x 2 r 1 2 sol b fx r tripl f g ff said apreduct b accord definit function like 2 1rgamma1 n h n 1rgamma1 admiss bound comput time f g true function like n r 2 n also let function f depend perform ratio featur turn use order prove interest character complet problem approxim class observ clearli apreduc gener ereduc moreov easi see contrari ereduc pta problem apreduc npo problem far know reduc strictest one appear literatur allow obtain natur apxcomplet result instanc apxcomplet maximum satisfi 14 26 3 npocomplet problem section prove natur problem complet class npo npo pb previous complet result obtain max npo min npo max pb min pb 12 33 4 24 one exampl result follow theorem theorem 2 minimum weight satisfi min npocomplet maximum weight satisfi max npocomplet even subset fv variabl nonzero weight wv truth assign satisfi instanc give valu true least one v construct apreduct maxim problem minim problem vice versa use reduct show problem max npocomplet min npocomplet fact complet whole npo problem max pbcomplet min pbcomplet complet whole npo pb theorem 3 minimum weight satisfi maximum weight satisfi npocomplet proof order establish npocomplet minimum weight satisfi show apreduct max npocomplet problem minimum weight satisfi max npocomplet problem use restrict version maximum weight satisfi theorem 2 let x instanc maximum weight satisfi ie formula oe variabl variabl weight zero first give simpl reduct preserv approxim within factor 2 adjust obtain apreduct let fx formula oe ff conjunct normal form new variabl weight wz variabl even vvariabl zero weight satisfi assign fx let gx restrict assign variabl occur oe assign clearli satisfi oe note exactli one zvariabl true satisfi assign fx inde zvariabl fals vvariabl would fals oe would satisfi hand z z j true would true fals contradict henc particular hold optimum solut thu perform ratio maximum weight satisfi mean reduct preserv approxim within 2 let us extend construct order obtain rx gx everi nonneg integ k reduct describ correspond 2 b variabl z ib 1 b ki let i2f1sg b1 b ki 2f01g ki ff ib 1 b ki conjuct normal form z final defin choos k greater 2 k disregard effect ceil oper follow comput previou reduct exactli one zvariabl true satisfi assign f k x solut f k x z ib 1 b know hand case thu get therefor rx gx given r 1 choos k 1 obvious apreduct 2 similar proof use show maximum weight satisfi npocomplet ut corollari 1 min npocomplet problem npocomplet max npocomplet problem npocomplet applic corollari minimum program problem npocomplet also show natur complet problem class polynomi bound npo problem theorem 4 maximum pb program minimum pb program npo pbcomplet proof maximum program known max pbcomplet 4 minimum program known min pbcomplet 24 thu show apreduct minimum pb program maximum pb program maximum pb program minimum pb program reduct use exactli construct given satisfi variabl assign defin onevari variabl occur object function valu one object valu number onevari plu 1 object valu solut encod introduc order onevari order encod squar number fig 2 idea invert object valu solut without onevari correspond object valu n construct problem gener solut p onevari correspond object valu size solut one 1 row zero upper part figur 2 idea reduct minimummaximum pb program maxi mumminimum program variabl x j v jth onevari solut one 1 column row reduct construct follow given instanc minimum pb program maximum pb ie object function 1 inequ variabl follow inequ one 1 column 1 one 1 row 2 zero upper part 3 besid inequ includ inequ origin problem substitut variabl v sum variabl u occur object left intact object function defin order express object function binari coeffici introduc n new variabl 1c object function one verifi solut origin problem instanc onevari ie object valu exactli correspond solut construct problem instanc object valu vice versa suppos optimum solut origin problem instanc onevari perform ratio correspond perform ratio construct problem n rel error due floor oper choos n larg enough rel error made arbitrarili small thu easi see reduct apreduct ut corollari 2 min pbcomplet problem npo pbcomplet max pbcomplet problem npo pbcomplet 4 queri complex apxintermedi problem exist apxintermedi problem problem apx apx complet alreadi shown 12 artifici problem obtain diagon techniqu similar develop prove exist npintermedi problem 29 section prove natur apxintermedi problem exist instanc show minimum bin pack apxintermedi order prove result establish new connect approxim properti queri complex nphard optim problem aim let us first recal follow definit definit 9 languag l belong class p npfn decid polynomialtim oracl ture machin ask fn queri npcomplet oracl n input size class qh equal union similarli defin class function fp npfn 28 follow result prove 21 22 theorem 5 constant k exist polynomialtim hierarchi collaps querycomplex nonconstruct approxim sever nphard optim problem studi use hard result respect class function fp npdelta 7 9 howev approach appli analyz complex construct approxim solut overcom limit use novel approach basic consist consid help approxim algorithm given optim problem solv decis problem definit 10 given npo problem ration r 1 r multivalu partial function given instanc x return set feasibl solut x definit 11 given npo problem ration r 1 languag l belong p r two polynomialtim comput function f g exist x fx instanc solfx 6 2 r fx gx x 2 l class aqha equal union follow result state approxim problem help constant number queri npcomplet problem worth observ gener approxim solut even though help requir logarithm number queri comput 8 proposit 2 problem apx aqha qh proof assum maxim problem proof minim problem similar let rapproxim algorithm r 1 let l 2 p ae ae 1 two polynomialtim comput function f g exist wit latter fact x let rm partit interv rm blog ae rc start look subinterv contain optimum valu similar techniqu use 7 9 clearli done use blog ae rc queri npcomplet oracl one queri suffici know whether feasibl solut exist whose valu lie interv gx 1 sinc aeapproxim follow l decid use blog ae rc queri l 2 qh ut recal npo problem admit asymptot polynomialtim approxim scheme algorithm exist x r 1 rx x k constant time complex x r polynomi respect jxj class problem admit asymptot polynomialtim approxim scheme usual denot pta 1 follow result show class previou fact strengthen proposit 3 let 2 pta 1 constant h exist proof let minim problem pta 1 proof maxim problem similar definit constant k algorithm exist instanc x ration r 1 prove constant h exist r 1 function l r 2 fp nphgamma1 exist instanc x problem intuit function l r form nonconstruct approxim scheme comput constant number queri npcomplet oracl given instanc x check whether mean singl queri np oracl restrict instanc solx 6 thu optx 1 note instanc delta 2 2approxim algorithm let us fix r 1 distinguish two case 1 2kk 2 case optx 2k optx2 k rapproxim solut x set l r case l r comput one queri 2 2 case optx clearli dlog kk queri np suffici find optimum valu optx mean binari search techniqu case l r comput queri let l languag aqha l 2 p r r 1 let f g function wit l 2 p r observ x x 2 l solut fx exist mfx l r fx gfx 1 given l r fx decid whether x 2 l np problem sinc l r fx comput mean queri np 2 ut next proposit instead state languag l queri hierarchi decid use one queri r apxcomplet r depend level queri hierarchi l belong order prove proposit need follow technic result 2 2 recal npcomplet problem partit defin follow given set u item size exist subset u 0 u lemma 1 apxcomplet problem k two polynomialtim comput function f g constant r exist ktupl instanc partit instanc solut x whose perform ratio smaller r gx x yesinst proof let x instanc partit loss gener assum u pairwis disjoint 2 let instanc minimum order bin pack defin follow similar construct use 37 1 v new item 2 u 2 u 3 j k u 2 u u solut w must form sequenc pack u bin use u separ bin use u i1 mean one bin complet fill v particular pack u optimum solut must use either two three bin two bin use x yesinst optimum measur thu 4k gamma 1 1 14kapproxim solut optimum solut sinc minimum order bin pack belong apx 41 apxcomplet apreduct f exist minimum order bin pack defin 114ffk rapproxim solut x fourth properti apreduc impli 1 14kapproxim solut w thu optimum solut w z easili deriv right answer k queri x abl prove follow result proposit 4 apxcomplet problem qh aqha proof let h well known see instanc 3 l reduc problem answer nonadapt queri np formal two polynomialtim comput function 1 2 exist x k instanc partit problem b 1g moreov j b x j yesinst 2 x 2 l let f g r two function constant lemma 1 appli problem constant k x x instanc rapproxim solut x 2 l thu l 2 p r ut combin proposit 2 4 thu follow theorem character approxim queri hierarchi hardest problem apx theorem 6 apxcomplet problem final follow result state exist natur intermedi problem apx theorem 7 polynomialtim hierarchi collaps minimum bin pack minimum degre span tree minimum edg color apxintermedi proof proposit 3 fact minimum bin pack pta 1 25 follow aqhminimum bin pack p nph given h minimum bin pack apxcomplet proposit 4 follow qh p nph theorem 5 thu collaps polynomialtim hierarchi proof minimum degre span tree minimum edg color ident use result 18 15 ut observ previou result seem obtain use hypothesi shown follow theorem theorem 8 pack apxcomplet proof assum present ap reduct maximum satisfi minimum bin pack sinc ture machin exist given input instanc oe maximum satisfi accept comput accept comput halt optimum solut oe written tape inde guess integ k assig moe proof fact opto k proof cook theorem follow given oe find polynomi time formula oe 0 oe 0 satisfi given satisfi assign oe 0 find polynomi time optimum solut oe combin construct npcomplet proof minimum bin pack problem obtain two polynomialtim comput function 1 2 instanc oe maximum satisfi 1 instanc minimum bin pack optimum solut x oe 2 optimum solut oe observ construct rapproxim solut x oe inde optimum solut provid r 32 let 43approxim algorithm maximum satisfi 42 17 reduct maximum satisfi minimum bin pack defin follow foe immedi verifi apreduct final note result extend apx problem nphard approxim within given perform ratio 41 remark maximum cliqu follow lemma analogou proposit 2 within npo pb prove similarli binari search techniqu lemma 2 npo pb problem r 1 p r p nplog logno1 lemma fact p nplogn contain p mc 1 mc stand maximum cliqu 28 fact constant k exist polynomialtim hierarchi collaps 40 follow next result solv open question pose 7 inform result state possibl reduc problem find maximum cliqu problem find 2approxim cliqu unless polynomialtim hierarchi collaps theorem 9 p mc polynomialtim hierarchi collaps 5 queri complex complet approxim class final section shall give full character problem complet polyapx apx respect term hard correspond approxim problem respect class partial multivalu function term suitabl defin combinatori properti class function refer introduc 8 follow definit 12 fnp npqn class partial multivalu function comput nondeterminist polynomialtim ture machin ask qn queri np oracl entir comput tree 3 order talk hard respect class use follow reduc extens metric reduc 28 onequeri reduc 13 introduc 8 definit 13 let f g two partial multivalu function say f manyon reduc g symbol fmvg two polynomialtim algorithm 1 2 exist x domain f 1 x domain g 2 gt 1 x combinatori properti use character polyapxcomplet problem wellknown selfimprov see instanc 34 definit 14 problem selfimprov two algorithm 1 2 exist instanc x two ration r instanc 0 2 r 2 x moreov fix r 1 r 2 run time 1 2 polynomi readi state first result section theorem 10 polyapx problem polyapxcomplet selfimprov r 0 fnp nplog log no1 hard r 0 1 proof let polyapxcomplet problem sinc maximum cliqu selfimprov 16 polyapxcomplet 26 sinc equival respect apreduc preserv selfimprov properti see 34 selfimprov suffici prove 2 hard fnp nplog logno1 polyapxcomplet maximum cliqu ap let ff constant reduct theorem 12 8 function f fnp nplog log no1 manyon reduc maximum cliqu 1ff definit ap reduc also maximum cliqu 1ff mva 2 f manyon reduc 2 convers let polyapx selfimprov problem r 0 r 0 fnp nploglogno1 hard show problem b polyapx b apreduc aim introduc follow partial multivalu function multisat given input sequenc oe instanc satisfi problem oe i1 satisfi oe satisfi possibl output satisfi truthassign oe proof theorem 12 8 follow function fnp nploglogno1 complet 3 say multivalu partial function f comput nondeterminist ture machin n x domain f halt comput path nx exist halt comput path output valu f x make use techniqu similar proof proposit 2 easi see sinc b polyapx two algorithm b 2 exist fix r 1 manyon reduct b r multisat moreov sinc r0 fnp nplog log no1 hard manyon reduct exist multisat r 0 final let 2 function wit selfimprov apreduct b deriv follow gammagammagammagammagammagammagammagammagammagammagamma x 00 gammagammagammagammagammagammagammagammagammagammagamma x 000 easi see 000 rapproxim solut instanc x 000 rapproxim solut instanc x b b apreduc theorem prove without depend f g r definit apreduc inde possibl prove g properti unless polynomialtim hierarchi collaps selfimprov problem exist 2 fnp nploglogno1 hard polyapxcomplet order character apxcomplet problem defin differ combinatori properti intuit properti state possibl merg sever instanc one instanc approxim preserv fashion definit 15 npo problem linearli addit constant fi two algorithm exist ration r 1 sequenc x instanc x r instanc 0 2 1rgamma1fik rapproxim solut x moreov run time 1 2 polynomi everi fix r theorem 11 apx problem apxcomplet linearli addit constant r 0 exist r0 fnp np1 hard proof let r approxim apxcomplet problem proof proposit 4 constant r 0 exist r 0 hard fnp np1 order prove linear addit fix r 1 let x instanc without loss gener assum r r otherwis k instanc rapproxim use r approxim algorithm problem find rapproxim solut x reduc problem construct solv set dlog r r e instanc partit observ dlog r r e cr gamma 1 certain constant c depend r moreov claim constant fl exist construct solv kcr gamma 1 instanc partit reduc 1kcapproxim singl instanc inde shown along line proof proposit 4 linearli addit convers let linearli addit apx problem r0 fnp np1 hard r 0 let b r b approxim problem given instanc x b r 1 reduc problem find rapproxim solut x problem construct solv cr gamma 1 instanc partit proper constant c depend r question reduc r 0 sinc np problem construct solv fnp np1 function linear addit follow r 0 approxim crgamma1 instanc reduc 1 1capproxim singl instanc apreduct b note linear addit play apx less role selfimprov polyapx two properti certain sens one opposit use apxcomplet approxim problem solv decis problem depend perform ratio depend size instanc use polyapx complet approxim problem depend size instanc depend perform ratio inde possibl prove apxcomplet problem selfimprov unless polyapxcomplet problem linearli addit unless polynomialtim hierarchi collaps interest question find character combinatori properti logapx complet problem inde abl establish character present state base selfimprov properti shown follow result theorem 12 logapxcomplet problem selfimprov unless polynomialtim hierarchi collaps proof let us consid optim problem max number satisfi formula short mnsf defin follow instanc set boolean formula oe 3cnf oe 1 tautolog size input instanc solut truth assign variabl oe measur number satisfi formula ie jfi oe satisfi gj clearli mnsf logapx sinc measur assign least 1 optimum valu alway smaller log n n size input show r 2 mnsf r hard fnp nplog loglog ngamma1 given log log n queri npcomplet languag size polynomi n x construct instanc mnsf oe 1 tautolog 1 formula oe satisfi least instanc among yesinst formula easili construct use standard proof cook theorem note ad dummi claus formula achiev bound log joe j moreov rapproxim solut phi decid mani instanc x log logn yesinst also recov solut instanc function fnp nploglog logngamma1 manyon reduc mnsf r let selfimprov logapxcomplet problem function f 2 fnp nplog log logngamma1 fmvmnsf 15 mva 1ff2 mva 2 16 ff constant ap reduct mnsf last reduct due selfimprov thu x comput f x reduc find 2 16 approxim solut instanc x 0 jx 0 j jxj c certain constant c sinc 2 logapx possibl find polynomi time k log jx 0 japproxim solut x 0 k constant mean binari search techniqu find 2 16 approxim solut x 0 use adapt queri np last inequ sure hold suffici larg jxj thu fnp nplog loglog ngamma1 fnp nploglog logngamma2 impli collaps polynomialtim hierarchi 40 ut consequ theorem result 26 conjectur minimum set cover problem selfimprov r proof verif hard approxim problem structur complex bound queri sat boolean hierarchi complex approxim independ set problem introduct theori complex queri complex cliqu size maximum satisfi machin model npapproxim problem reveng boolean hierarchi bound queri approxim complex theorem prove procedur compendium np optim problem complet approxim class rel complex evalu optimum cost construct optimum maxim problem approxim scheme preserv reduc applic approxim minimum degre span tree within one optim degre comput intract guid theori npcomplet new 34approxim algorithm maximum satisfi problem npcomplet edgecolor decis tree downward closur approxim algorithm combinatori problem polynomi time hierarchi collaps boolean hierarchi collaps erratum polynomi time hierarchi collaps boolean hierarchi collaps approxim npcomplet optim problem polynomi bound minim problem hard approxim effici approxim scheme onedimension bin pack problem syntact versu comput view approxim approxim properti np minim class complex optim problem structur polynomialtim reduc flreduc versu polynomi time manyon reduc hard approxim minim problem lectur note approxim algorithm approxim preserv reduct complet problem robust measur quantifi approxim comput complex optim approxim complex class bound assembl line balanc heurist graph isomorph low hierarchi continu reduct among combinatori optim problem bound queri comput assembl line balanc gener bin pack approxim maximum satisfi tr ctr tane mielikinen esko ukkonen complex maximum matroidgreedoid intersect weight greedoid maxim discret appli mathemat v154 n4 p684691 15 march 2006 tapio elomaa matti kriinen difficulti reduc error prune level branch program annal mathemat artifici intellig v41 n1 p111124 may 2004 andrea bley complex vertexdisjoint lengthrestrict path problem comput complex v12 n34 p131149 septemb 2004 bruno escoffi vang th pascho complet approxim class beyond apx theoret comput scienc v359 n1 p369377 14 august 2006