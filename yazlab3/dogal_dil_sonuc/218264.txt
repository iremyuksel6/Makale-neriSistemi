genet algorithm oper dna fragment assembl studi differ genet algorithm oper one permut problem associ human genom projectth assembl dna sequenc fragment parent clone whose sequenc unknown consensu sequenc correspond parent sequenc sortedord represent requir special oper compar tradit permut represent requir special oper two represent associ oper compar problem rang 2k 34k base pair kb edgerecombin crossov use conjunct sever special oper found perform best experimentssemi oper solv 10kb sequenc consist 177 fragment manual intervent natur build block problem exploit progress higher level macrooper significantli improv perform b introduct comput problem pose human genom project challeng complex involv larg quantiti data human genom project plan identifi exact sequenc base pair call map entir human genom consist approxim 3 billion base pair mani differ compon project problem involv combin partial inform sequenc dna fragment consist map account known piec explor applic genet algorithm problem dna fragment assembl draw parallel familiar permut problem travel salesman problem lawler rinnooy kan shmoy 1985 explic interest featur problem sourc possibl use heurist specif find use special oper provid good perform data set 10kb size two special op erat transposit invers macrooper transform individu base group fragment oppos singl fragment group fragment call contig natur build block fragment assembl problem found ad macrooper oper directli build block significantli increas perform genet algo rithm throughout cours run genet algorithm assembl larger larger build block contig macrooper thu oper higher higher level progress explicit exampl implicit behavior describ buildingblock hypothesi accuraci variou sequenc process constrain laboratori approach dna sequenc howe ward 1989 hunkapil kaiser hood 1991 hunkapil et al 1991 churchil et al 1993 current strand dna longer approxim 500 base pair routin sequenc accur con sequent larg strand dna broken smaller piec sequenc shotgun sequenc method work appli dna first replic mani time individu strand doubl helix broken randomli smaller fragment produc set fragment short enough sequenc howev process retain either order fragment parent strand dna strand doubl helix particular fragment came paper address first problem hereaft refer fragment assembl problem reli previous develop method address align strand assign problem staden 1980 kececioglu 1991 huang 1992 churchil et al 1993 largescal shotgun sequenc project requir autom solut recreat manual process complex assembl process grow exponenti size project sever complic factor consid design comput solut first larg amount experiment error frequent quot rate 01 10 chen hunkapil 1992 repeat dna sequenc much longer individu sequenc fragment final reagent experimentalist time valuabl resourc import object comput system monitor progress sequenc determin strategi need appli target parent size mani upcom sequenc project cosmid size 40000 base pair denot 40kb experimentalist use coverag sequenc redund particular point along parent dna least 5 7 compens effect sequenc error use figur assum averag fragment length 500 base pair leav order problem approxim 600 fragment order problem nphard 1 approxim method requir determin reason layout fragment assembl packag use greedi algorithm form candid typic greedi algorithm candid solut present research must massag obtain biolog plausibl final result simul anneal appli order step fragment assembl problem churchil et al 1993 burk et al 1994 genet algorithm appli problem author parson forrest burk 1993 relat order problem map assembl other fickett cinkoski 1993 next section paper contain detail explan flow inform fragment assembl problem gener comput approach follow section 3 detail genet algorithm explor paper result appear section 4 explor answer question pose addit question final section 2 fragment assembl problem fragment assembl one step overal process build basepair map unknown segment dna step process influenc fragment assembl sever way affect overal qualiti inform use assembl influenc qualiti final solut introduc conflict inform error process overview process shown figur 1 see also churchil et al 1993 burk et al 1994 detail explan sequenc process laboratori sequenc process provid set fragment frag ment base pair sequenc fragment 2 fragment come either antiparallel strand parent dna orient fragment rel parent known assembl stage inform avail sequenc base thu order fragment must reli primarili similar fragment overlap particularli import aspect gener sequenc problem precis determin relationship orient fragment complic factor overlap comput frequent occurr repeat sequenc rang length sever base sever thousand base 3 dna fragment assembl method base sequenc similar bound misl dna repeat confus fragment similar origin locat parent sequenc fragment similar share repeat pattern fragment order final consensu sequenc gener order process includ detail align step must account insert delet error potenti present data shown figur 2 step raw sequenc data random sequenc project consensu sequenc follow churchil et al 1993 burk et al 1994 g c g c dna replic shotgun produc fragment sequenc fragment reassembl consensu sequenc cgt ctgatac gtca gtagtac cg atga gtcatca tgcg gatga tatccagtatcat figur 1 overview dna map process 1 comput compar pair fragment determin similar result overlap strength align rel orient two fragment possibl orient tri two fragment overlap orient align chosen maxim similar fragment 2 total order fragment order algorithm comput fit figur merit candid order examin overlap inform addit fragment order particular layout result contig staden 1980 contig layout gap gap occur neighbor fragment overlap 3 determin initi align use align offset orient inform first step order second step determin initi align fragment 4 determin detail align fragment also known multipl sequenc align start initi align base within fragment examin determin place insert delet error like occur account error gap insert fragment bring correspond base back align see waterman 1989 discuss multipl sequenc align 5 gener consensu sequenc column detail align examin determin consensu base posit yield consensu sequenc contig origin fragment set pairwis comparison candid order multipl sequenc align c c g c g c g g c g figur 2 overview sequenc assembl process order step must find total order given fragment result consensu sequenc accur reflect parent sequenc fragment must account order fragment appear one place order previous solv sequenc parent sequenc known judg qualiti order close final consensu sequenc correspond known parent practic howev fragment set gener find parent sequenc thu criteria must use evalu order although small number contig one goal order metric usabl object function mani individu vastli differ order fit valu use metric prevent genet algorithm distinguish exploit build block examin two object function describ section 31 use pairwiseoverlap inform basi evalu fit layout 21 fragment assembl travel salesman problem relationship order step gener class permut order problem clear probabl best known problem class travel salesman problem tsp lawler rinnooy kan shmoy 1985 mani other fragment assembl problem quit similar tsp notabl differ first solut tsp circular tour citi endpoint tour therefor irrelev fragment assembl prob lem howev endpoint repres fragment opposit end parent sequenc mani solut equival tsp thu inequival context second citi tsp assum relationship distanc order final solut problem fragment assembl problem order refer bead string intermedi step solut process layout process use overlap data posit base within fragment rel frequent two fragment overlap layout sever differ order fragment produc equival result layout phase shown figur 3 addit mani algorithm tsp reli triangl inequ hold distanc relat assumpt made overlap strength error overlap strength comput due sequenc error chimer fragment dna repeat sequenc tend invalid simplifi assumpt made relationship frag ment anoth distinguish featur fragment assembl problem fragment drawn strand dna orient fragment rel parent lost sequenc process c figur 3 differ fragment order produc equival consensu sequenc genet algorithm permut problem univers success success exampl primari problem face genet algorithm context repres solut way allow genet oper produc legal solut simpl represent solut permut repres list fragment label uniqu number order appear howev standard genet oper close space legal solut space illeg solut quit larg probabl oper form legal solut rel small three obviou approach represent problem 1 choos represent standard oper close legal solut 2 choos special oper guarante legal solut 3 penal illeg solut fit function chose explor third approach search space spars popul legal solut much time would wast gener recogn illeg solut addit fit function alreadi costli comput clear kind penalti function appli whether legal block within individu would use build block studi remain two approach first tri sortedord represent solut map legal permut order syswerda 1989 bean 1992 studi perform simpl permut represent combin two specialpurpos recombin oper edgerecombin starkweath et al 1991 order crossov davi 1985 addit recombin explor bit posit mutat sortedord represent permut represent studi posit swap block move transposit block invers oper represent describ next section along data set use test 3 genet algorithm appli fragment assembl genet algorithm oper popul candid solut call individu holland 1975 goldberg 1989 forrest 1993 typic popul initi random individu individu delet reproduc popul basi rel fit new individu form appli variou oper exist popul individu see success popul individu call gener process within genet algorithm typic follow step individu evalu determin fit individu reproduc copi differenti base fit differ genet algorithm use differ method implement idea differenti reproduct gener ga use new popul creat gener complet replac previou popul individu averag fit popul low probabl copi next gener individu high fit high probabl multipl copi next gener 4 crossov two individu select popul substr correspond posit within individu exchang one new individu insert popul next gener purpos oper allow partial solut evolv differ individu combin produc sometim better solu tion crossov oper describ report crossov rate specifi averag percentag new individu form gener crossov mutat mutat alter one individu chang primit element individu eg flip one bit mutat rate control probabl compon individu chang result individu replac parent mutat mutat believ effect two reason explor search space near exist individu local search prevent solut compon complet elimin popul select fixat lost success gener genet algorithm begin random popul cycl se lection crossov mutat repeat mani gener genet algorithm use produc result report implement modifi genesi grefenstett 1984 softwar packag although controversi well genet algorithm actual perform perform well common explan averag fit popul like increas success gener ation good partial solut combin form even better composit solut process creat good solut describ term combin build block portion solut high fit context fragment assembl problem build block portion order repres sever fragment form contig consid differ represent genet algorithm import consid like build block might combin form complet solut 31 fit function choic fit function crucial success genet algorithm particular problem fragment assembl problem choic effici reliabl measur fit complic sever factor includ error sequenc inform insert delet etc repeat sequenc bead string model studi two close relat fit function first natur analog fit function tsp let order fragment f denot fragment j appear posit order fit individu first fit function f1 w ij pairwis overlap strength fragment j fit function examin overlap strength directli adjac fragment order take time comput individu optim process attempt find layout maxim function second fit function account addit inform exploit subsequ pass assembl process churchil et al 1993 addit examin overlap strength adjac fragment consid overlap strength among pair fragment penal layout fragment strong overlap far apart specif fit function f2 use absolut valu distanc fragment layout weight overlap strength pair fragment layout posit optim process search layout minim function function complex 2 pair fragment must consid 32 represent genet algorithm appeal larg domain independ problem specif isol fit function map individu problemlevel solut perspect first solut problem repres permut problemsa represent guarante legal solutionsi appeal second use type represent provid isol problemspecif inform genet algorithm deriv gener reason chose tri sortedord represent schaffer et al 1989 syswerda 1989 also refer randomkey represent bean 1992 sortedord represent provid rather complex map individu permut order two requisit properti legal order fragment present order duplic order properti ensur use sort henc name sortedord specif consid fragment set f individu b bit find permut specifi b first convert bit string n key valu k bit sort key valu key valu posit j individu appear posit sort list fragment f j ith posit permut specifi individu b 5 fragment identifi posit individu j fragment place bit string key valu start posit start posit figur 4 sortedord represent fragment assembl problem consid bit string produc follow integ 2 fragment layout repres individu 1 5 4 2 3 intermedi shift order 3 1 5 4 2 lowest key valu individu 1 appear third posit individu first fragment intermedi layout 3 next lowest valu 2 first posit individu therefor second fragment layout 1 last key repres start posit 2 first key permut order 1 1 appear second posit intermedi layout final layout continu posit wrap begin permut base posit sort order key j bit string repres legal permut repres fragment assembl problem close oppos tsp circular solut introduc modif sortedord repr sentat individu add k bit end design start point permut order valu particip sort map describ instead allow shift order allow altern start posit figur 4 illustr map also studi straightforward permut represent togeth suit special oper represent bit string long k bit repres one fragment label 0 posit fragment individu design posit fragment occupi layout although represent vastli simplifi map bit string permut oper must complex ensur legal individu enter popul 33 recombin oper use uniform twopoint crossov method sortedord rep resent found uniform crossov perform well problem report result base standard twopoint crossov two point randomli select bit posit exchang 1989 sortedord represent close standard genet oper addit process requir find legal permut two specialpurpos crossov oper success permut problem edg recombin starkweath et al 1991 order crossov davi 1985 differ crossov oper emphas preserv differ kind inform parent thu success differ oper differ permut problem like tie abil crossov oper preserv valu inform parent crossov least three kind inform might import permut order absolut posit rel order eg preced relat schedul applic adjac tsp particularli due circular natur relev inform probabl adjac inform fragment assembl problem issu less clear adjac inform total order import howev given linear natur layout definit end point overlap natur fragment order rel posit may also import chose experi two crossov oper order crossov edg recombin order crossov preserv rel order case absolut posit order edg recombin emphas adjac inform simplic explana tion crossov oper describ term integ bit valu order crossov twopoint crossov two random point select howev instead exchang inform point inform first parent copi posit offspr shown figur 5 start begin second parent begin offspr fragment second parent place offspr fragment alreadi place offspr skip second parent thu fragment first parent retain posit rel order fragment second parent retain rel order edg recombin complic oper detail explan oper implement appear starkweath et al 1991 gener crossov attempt preserv adjac parent particular adjac common parent neither option possibl random select made exampl edgerecombin oper work shown figur 5 whitley report addit modif edgerecombin oper give even better result tsp whitley 1993 yet test modif 34 oper sortedord represent allow use simpl bitmut oper goldberg 1989 small probabl bit individu alter howev permut represent point mutat guarante produc illeg solut consequ use point mutat origin individu 972orderbas crossov edg recombin adjac list edgerecombin key adjac keys2468789 497 figur 5 order crossov edg recombin illustr order crossov individu 2 edg recombin offspr begin first fragment first parent 1 examin 1s adjac select 8 share adjac list other share adjac 3 place next share adjac 6 chosen next follow 4 4 next fragment 2 place individu remain adjac process continu end 5 place yet place yield individu 1 8 3 6 4 2 9 7 permut represent howev tri suit mutationlik oper simplest swap two posit order select random fragment posit swap creat new individu churchil et al 1993 oper restrict form 4opt transform lin kernighan 1973 use tsp terminolog use two oper reli domainspecif informa tion two oper invers transposit move block fragment specif contig order although random locat select individu oper locat simpli indic contig oper appli invers revers order fragment select contig goldberg 1989 oper use sinc fragment come strand dna total order forc orient data invert contig may extend sinc contig may orient opposit direct adjac fragment order restrict invers oper contig within layout instead gener invers oper randomli select area invert transposit move contig posit two adjac contig may allow extens contig oper allow smaller contig form anywher along individu transposit correct rel posit cluster yield improv solut transposit also restrict form 4opt restrict focus select edg break edg replac contig natur build block problem transposit inver sion design disrupt build block instead allow evolut larger contig treat smaller contig primit element mean rate mutat special oper differ mutat use sortedord represent rate specifi probabl bit individu select mutat given genera tion thu find probabl individu alter rate must multipli length individu special oper rate quot probabl individu affect thu rate 02 impli 20 probabl individu select alter oper 35 data set implement environ fragment data set report result artifici gener actual dna sequenc parent dna sequenc replic program fragment random locat deriv fragment set repres data set produc sequenc laboratori gener genfrag engl burk 1993 allow fragment set differ size error con tent coverag gener approach allow us studi differ factor affect perform genet algorithm baselin test prove use identifi particularli success unsuccess configur represent oper popul size etc complet control experi begin tackl experiment deriv dna fragment set three dna sequenc serv basi experi human brain dna sequenc humatpk01 sverdlov et al 1987 access number m55090 2026 base pair long human mhc class iii region dna fibronectin typeii repeat hummhcfib matsumoto et al 1991 access number x60189 3835 base long human apolopoprotein humapobf carlsson et al 1986 access number m15421 base long also work two longer sequenc 20kb se quenc amcg initi 40 base lamcg complet genom bacteriophag lambda access number j02459 m17233 sanger et al 1982 data set design seto experiment data set made avail test sequenc algorithm seto koop hood 1993 result obtain use fragment set first three parent sequenc experi coverag rang 3 7 mean fragment length 300 500 base addit fragment set experiment error rate 10 mismatch error 5 insert delet error use determin robust algorithm tabl 1 present inform specif fragment set test algorithm tabl 1 inform data set name atpk humatpk01 cfib hummhcfib pobf data set amcg lamcg seto experiment data set base number base pair known consensu sequenc coverag averag number fragment cover base parent gap area parent coverag cfib5 cfib10 error introduc fragment set specifi rate 5 10 base 2026 3835 3835 3835 10089 20100 34475 fragment 26 36 24 39 48 68 68 48 127 177 352 829 gap overlap comput use techniqu allow set cutoff valu overlap score valu consid zero churchil et al 1993 cutoff set twenti provid one filter spuriou overlap introduc experiment error 4 result describ earlier difficult identifi singl best measur perform problem case consensu sequenc data known correct order determin perform final step assembl process compar result sequenc known consensu sequenc goal complet match also import consid time reach solut tabl 2 summar result use match parent number contig solut number function evalu gener use genet algorithm remaind section explor overal perform achiev genet algorithm experi perform analyz differ compon genet algorithm fit function represent oper final section draw conclus data discuss futur direct research genet algorithm perform quit well appropri represent oper set term speed solut qualiti figur 6 show mean best fit improv cfib data set genet algorithm solv smaller two data set find singlecontig solut repres consensu sequenc complet match parent sequenc result howev startl fragment set rel small fragment assembl system data set size error produc result close enough correct small amount manual intervent produc correct tabl 2 genet algorithm perform fragment assembl problem data set name includ coverag parenthes num gen number gener num trial number fit function evalu genpop trial sinc individu chang gener num contig number contig ga solut greedi number contig greedi solut num sort previou result use sort order represent indic experi perform sort order paramet set crossov rate 03 special oper rate 07 pointswap rate 02 invers rate 04 transposit rate 04 scale factor 20 parent match comput singl contig solut comput entir region parent data set pop num num num parent num num name size gen trial contig match greedi sort solut even smaller data set howev correct represent crucial perform genet algorithm use represent suit oper exploit conceptu build block problem abl construct genet algorithm good perform problem result pobf data set 10kb parent interest smaller data set 177 fragment sevenfold coverag data set manual intervent genet algorithm produc singlecontig solut whose consensu sequenc complet match parent yet solv fulli remain two larg data set amcg data set 20kb parent seto data set consensu sequenc 34kb tabl 2 present result data set date exhaust test involv cfib data set seen tabl 2 fragment set includ signific amount error data set contain gap ga found correct singlecontig solut data set without gap error case data set 10 mismatch error ga find singlecontig solut 97 match parent although mismatch error 10 base pair fragment set fivefold coverag postprocess multipl sequenc align consensu gener algorithm correctli reproduc 97 base gener 42 fit best indiv popul popul mean figur 6 popul mean best fit plot typic run cfib7 data set cfib data set gap error solut found exist two contig match base pair cover solut 41 comparison greedi approach mani standard assembl packag use form greedi algorithm find appropri order staden 1980 huang 1992 evalu perform genet algorithm compar result found greedi algorithm greedi algorithm use similar use huang 1992 examin overlap strength pick strongest overlap connect yet unplac fragment contig construct tabl 2 includ solut found greedi algorithm greedi algorithm never uncov best solut except small cfib data set gap find optim solut pobf data set look solut found greedi algorithm fit valu data set shown tabl 3 result f2 function penal solut ignor signific overlap particularli inform larg differ f2 score greedi solut genet algorithm solut provid indic much manual edit would requir convert greedi solut workabl solut work even greater differ 1 7 contig initi indic tabl 3 comparison greedi algorithm genet algorithm pobf sevenfold coverag data set f1 score f2 score contig greedi 42 fit function critic part design genet algorithm select appropri fit function fragment assembl select complic process requir fragmentord step previou work parson forrest burk 1993 compar detail two fit function describ section 31 result reproduc tabl 4 experi sortedord represent show quadrat fit function f2 margin superior perform linear function f1 ran small set experi two function use permut represent edgerecombin oper case linear function perform better result appear tabl 4 atpk data set although argu object function ideal fragment assembl problem comput result show function adequ compar f2 base result achiev far nevertheless consid design appropri fit function import area continu research 43 comparison represent result experi show applic edgerecombin oper conjunct permut represent full suit oper quit success final column tabl 2 reproduc parson forrest burk 1993 give result sortedord repr sentat summar prior result sortedord represent disrupt build block fragment assembl problem use context permut represent edgerecombin oper special oper abl exploit build block power way 44 comparison oper use permut represent section describ sever experi perform analyz effect variou oper examin way interact tabl 4 ga test result two fit function best score best individu follow score individu function contig number contig layout specifi best individu data set atpk coverag 7 paramet differ random seed crossov rate 085 07 point swap 003 parent best f1 f2 score contig best f2 f1 score contig cfib510 3873 162581 7 100179 3333 8 43 7128031 13582 28 first compar two crossov oper order crossov edg recombin describ section 33 tabl 5 summar result obtain use order crossov compar result tabl 5 tabl 2 clearli demonstr even attempt tune genet algorithm paramet represent edgerecombin superior order crossov tabl 5 genet algorithm perform use order crossov oper trial number f1 fit function evalu num contig number contig found best solut 5 run popul num xover swap invers transposit num size trial rate rate rate rate contig next ran sever experi appli oper variou rate particular result worth note genet algorithm rel success solv smaller data set tradit paramet set crossov rate 07085 rate special oper 00501 9ever significantli better perform occur much lower crossov rate much higher rate special oper rate increas effici genet algorithm small data set allow genet algorithm solv larger data set run report use crossov rate 0203 special oper rate 07085 elimin one oper either crossov one special oper tend give poorer result synergist effect among variou oper find appropri solut result experi summar tabl 6 track chang fit valu tabl 6 ga performac cfib data set fivefold coverag popul 300 250000 trial run complet converg 50000 iter xover swap tran inv contig applic oper cours sever run figur 7 show efficaci differ oper life twenti differ run lowpass filter appli smooth variat data graph show util pointwis swap decreas run progress invers transposit remain use throughout comput genealog best individu popul determin oper contribut creation good individu mix chang popul chang specif everi 100 gener examin histori 5 best individu record often oper occur histori last 100 gener crossov consist contribut creation best individu cours run 5 discuss conclus one interest question rais work relat way special oper exploit build block problem way generation1000300050007000d averag fit improv crossov swap transposit figur 7 averag chang fit oper smooth use low pass filter oper improv fit consid full oper suit interact improv genet algorithm perform perform suffer oper remov suit although high enough rate transposit reduc impact loss crossov oper howev one examin mechan crossov oper two individu similar result surpris transposit mimic kind crossov oper genealog best individu shown figur 8 highlight import crossov oper creation good solut even low rate appli describ earlier low rate crossov best found tune genet algorithm paramet one conclud howev low rate indic crossov unimport solut power genealog inform tell differ stori although averag fit improv oper declin run remain activ particip creation improv individu behavior crossov transposit invers chang run swap oper remain transposit invers affect contig earli run contig like quit small frequent contain one fragment thu earli gener special oper act similarli decreas effect pointwis swap later gener consist build block hypothesi late run chang requir improv individu tend larger scale obtain singl swap ie improv tend requir movement contig conceptu build block problem rather movement individu fragment fit crossov swap transposit figur 8 oper frequenc 100 gener interv five best individu popul cfib sevenfold data set oper display order appear legend mani genet algorithm signific problem prematur converg oper suit tend prevent converg 668 gener cfib sevenfold coverag run popul close converg tradit sens although almost posit data set 50 individu fragment posit none posit 60 individu fragment valu thu ga still search improv solut two factor contribut significantli effect first permut represent alphabet posit much larger binari alphabet tradit use genet algorithm second importantli oper use genet algorithm tend quit disrupt term valu particular posit toward end run consid invers oper invert contig entir block posit within individu chang oper oper worst creat individu equal fit toward end run converg issu contig quit larg mean mani fragment posit alter effect oper coupl high rate appli counterbal strong converg seen genet algorithm applic featur fragment assembl process aid perform genet algorithm result shown tabl 2 pobf data set run number iter repres onethird fewer gener larger data set size popul taken account one would expect increas problem size 35 perspect optim must order 177 fragment instead 127 would make problem difficult howev 177 fragment problem genet algorithm time find onecontig solut solut 127 fragment problem appear stuck sixcontig solut increas coverag fivefold sevenfold correspond increas number essenti equival solut precis order becom less critic characterist search space highercoverag problem anoth indic genet algorithm appropri approach genet algorithm tend find nearoptim solut rel easili difficulti refin solut high degre redund search space also present sortedord represent mani differ combin number would map permut order howev redund search space suffici overcom disrupt solut build block caus oper see parson forrest burk 1993 detail work far demonstr feasibl use genet algorithm sequenc problem parent sequenc order 10kb coverag suffici sevenfold sinc sequenc lab use coverag level higher coverag rang restrict still work parent rang 20kb 35kb rang howev problem phase analysi order depend becom pronounc addit dramat increas size search space obviou problem dna repeat longer parent sequenc tend repeat sequenc region repeat high overlap sinc repeat sequenc gener quit similar 90 homolog uncommon lengthi thu fragment differ section dna repeat show overlap examin sequenc overlap inform indistinguish overlap result fragment drawn section dna use overlap inform addit inform must provid program attempt sequenc dna repeat segment allow repeatinduc overlap distinguish true overlap auxiliari data map inform avail object function redesign take new inform account success special oper represent exploit conceptu build block may influenc solut permut problem use techniqu genet algorithm exampl burk et al burk et al 1993 success incorpor invers transposit oper simul anneal impress perform improv gener mani interest question rais experi particularli relat role solut space redund synergist effect among variou oper acknowledg author wish thank l davi engl r hightow mathew j sim c soderlund p stolorz whitley assist project project initi map assembl workshop santa fe institut sponsor santa fe institut theoret divis lo alamo nation laboratori work perform part auspic unit state depart energi contract w7405eng36 cb support doeoher genom project erwf137 r moyzi pi rp support part lo alamo director fellowship sf support nation scienc foundat grant iri9157644 sandia univers research program grant ae1679 note 1 nphard follow straightforward reduct hamiltonian path 2 dna doubl helix compris two complementari strand polynucleotid nucleotid consist purin pyrimidin base attach sugarphosph moieti sugarphosph constant throughout entir strand base vari four base found dna adenin guanin g cytosin c thymin comput viewpoint strand dna view charact string alphabet four letter two strand complementari sens correspond posit alway pair ts cs gs although letter appear either strand pair complementari base refer base pair 3 differ famili repeat sequenc differ characterist length degre conserv among famili member repeat sequenc aris due duplic gene exampl 4 use elitist polici sigma scale cutoff valu 2 5 tie sort broken arbitrarili use left right order r genet random key sequenc optim stochast optim tool dna assembl integr physic map sequenc data stochast optim tool genom sequenc assembl analysi human apolipoprotein b gene investig dna map genet algorithm preliminari result sequenc accuraci larg dna sequenc project assembl dna sequenc fragment shuffl simul anneal appli adapt algorithm epistat domain artifici gener data set test dna fragment assembl algorithm genet algorithm principl natur select appli comput genet algorithm search addison wesley publish compani genesi system use genet search procedur adapt natur artifici system nucleic acid sequenc practic approach contig assembl program base sensit detect fragment overlap exact approxim algorithm dna sequenc reconstruct univers arizona travel salesman problem new york john wiley son effect heurist algorithm travelingsalesman problem cluster fibronectin typeiii repeat found human major histocompat complex class iii region show highest homolog repeat extracellular matrix protein genet algorithm dna sequenc assembl nucleotid sequenc bacteriophag lambda dna studi control paramet affect onlin perform genet algorithm function optim experimentallyderiv data set construct test largescal dna sequenc assembl algorithm new comput method storag manipul dna gel read data comparison genet sequenc oper famili human na uniform crossov genet algorithm mathemat method dna sequenc person commun tr ctr zongben xu kwongsak leung yong liang yee leung effici speedup strategi evolutionari comput fundament fastga appli mathemat comput v142 n23 p341388 10 octob jacqu cohen bioinformaticsan introduct comput scientist acm comput survey csur v36 n2 p122158 june 2004