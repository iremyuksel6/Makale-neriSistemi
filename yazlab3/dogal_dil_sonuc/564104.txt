distribut compon architectur scientif applic ideal goal user deal concurr aspect proven hard achiev context system compil runtim support automat parallel gener purpos languag applic focus approach automat parallel numer applic regular structur success still fulli handl irregular applic eg solut partial differenti equat pde gener geometriesthi paper describ new approach parallel scientif code make use objectori gener program techniqu order make parallel implicit invis user instead gener new solut base exist one take advantag applic characterist order captur concurr infrastructur provid part solut process user goal achiev transpar concurr give user illus sequenti program environ isol user tediou aspect geometr data represent commun pattern comput commun gener process write parallel solver pde user concentr provid local numer comput straight forward map numer algorithmfurthermor describ system demonstr approach address issu effici system show approach scalabl b introduct scientic comput applic concern solut partial dierenti equat pde describ physic phe nomena typic applic area computa tional uid dynam comput biolog forth solut pde either finit element method fem finit dierenc fd involv discret physic domain comput solut discret point comput assembl global system linear equat discret solut algorithm pde call solver scientic comput eld concern employ power comput resourc solv numer analysi problem pde exampl simul protein fold model pde 10000 particl use copyright c 2002 australian comput societi inc paper appear 40th intern confer technolog objectori languag system tool pacic 2002 sydney australia confer research practic inform technolog vol 10 jame nobl john potter ed reproduct academ notfor prot purpos permit provid text includ time step requir would requir day therefor feasibl comput time frame one would need step exam ple biolog data consist 1500 protein eld protein sequenc 15000 protein model order predict protein structur possibl set structur gener optim perform select base energi func way deal size data aris larg numer comput number iter step involv use parallel com pute parallel comput employ extens scientic comput eld explicit manner parallel scientic applic use fortran languag conjunct messag pass paradigm messag pass interfac specifi decomposit map ping commun synchron reus explor incipi phase function li brari even though limit fortran librari account reus fortran applic hardi extend consequ despit similar structur parallel applic redesign scratch given process write distribut memori applic complex errorpron mean low product goal abstract away user distribut comput aspect give user illus sequenti program model thesi scalabl parallel compil real applic code far time approach take advantag applic specic featur autom parallel process separ user data numer ical applic specic data parallel algorithm therefor captur concurr infrastructur class applic hand pde solver dynam use user solut process use gener program techniqu order coupl user data workload partit transpar distribut solut process remind paper refer fem solut process sinc treat fd case particular gener solut process thu key featur fem solver applic data parallel loos synchron domain decomposit techniqu use break physic domain smaller subdomain treat separ method data border subdomain logic connect data subdomain distribut memori set mean data resid remot processor need local comput step consist independ local com putat follow commun physic domain describ geomet rical discret structur usual translat node element face edg ie connect element user applic specic abstract matric vec tor etc attribut eg pressur temper atur index accord node ele ment face numer comput consist mainli iter entiti node element edg applic inher dynam experiment dierent geometr data struc turedegre freedom element shape differ numer algorithm time discret scheme iter scheme etc core physic phenomena simul numer applic make use applic domain featur pde solver objectori techniqu solv problem transpar concurr numer applic 11 contribut paper make follow contribut distribut compon model scien tic comput present compon model suitabl concurr scientic applic enabl us achiev illus sequenti program model distinguish activ passiv compon visibl dierent level system user take advantag loos synchron featur class applic refer therefor compon model allow optim commu nicat moreov use gener program techniqu order abl coupl user data algorithm concurr infrastruc ture distribut compon model notion global address name space remot invoc automat data consist introduc notion depend independ data item depend data need global con sistent independ data distinct allow us guid user invok global consist phase computa tion commun automat taken care architectur scalabl solut pde solut exploit similar applic well gener parallel process order captur concurr infrastructur reus asi scientic applic ie distribut pde solver programm hardest aspect solut process dealt therefor isol user geometr data represent comput commun pattern commun gener remind paper organ follow section 2 overview exist approach problem tri solv transpar con currenc motiv approach section 3 present system transpar concurr parallel pde solver section 4 describ prototyp framework implement system also discuss design rational drove ap proach section 5 conclud paper give direct futur research exist approach sever approach exist support parallel scientic applic spectrum approach lie manual parallel one end fulli automat parallel end despit inconveni manual parallel still popular approach write concurr scientic applic due ecienc taylor hand write concurr scientic applic errorpron complex task automat parallel one way tackl complex reliabl concurr applic research parallel compil scientic applic success fortran applic simpl data represent regular access pattern ujaldon sharma 1993 compiletim analysi handl arbitrari data access pattern depend runtim inform runtim analysi use address issu compil concurr loop nest presenc complic array refer irregularli distribut array wu da saltz berryman hiranandani 1995 howev approach limit loop level parallel simpl data layout array context fortran lan guag code excerpt gure 1 exempli applic compil support parallel loop level parallel ne grain result lot commun also compil support handl arbitrari access pattern context simpl data layout array objectorientedbas distribut system support data parallel applic propos chang sussman saltz 1995 hassen either support complex data represent gener distribu tion mani concurr aspect still visibl user complet survey model languag parallel comput found skillicorn talia 1998 refer objectori model skillicorn talia 1998 classi extern intern model accord whether parallel orthogon object model integr object model interest intern object model close relat dataparallel sinc top level languag appear sequen tial exist approach requir commun explicit reduc burden synchron associ model aim hide commun synchron user prototyp implement succeed achiev extent synchron phase trigger user anyway extend system implement automat detect trigger synchron phase necessari chao chang et al 1995 librari provid support distribut array distribut pointerbas data structur librari use directli applic programm parallel applic adapt andor irregular data access pattern object model base compil regular case exampl 1gather data depend info ie f303g 2data comput decomposit ie iter space 3code commun gener base data flow inform ownercomput rule runtim support irregular case exampl 1build commun schedul ie translat tabl list home processor local address array element 2move data base schedul transform code call datamovey ds figur 1 compiletim runtim support parallel mobil global address object mobil object object know pack unpack messag buer global address object object assign one processor allow copi resid processor refer ghost object rst problem see approach user expect provid implement pack unpack function support deep copi subclass mobil compon one hand pack unpack task low level oper expos user mani concurr aspect pack pack unpack unpack hand mobil object may contain pointer samesubobject user make sure one copi subobject exist point program execut use global address object allevi prob lem global object intend order support global pointer concept main problem see content ghost object updat explicit call data exchang routin approach dierent one mix concurr aspect user level let user see activ compon ie associ process model also need naiv transport entir content object everi commun updat part object need subsequ comput avoid overhead associ commun entir object contrast gener approach compil support parallel use construct approach therefor construct part solut want achiev illus sequenti program environ oppos transform sequenti program run par allel approach due limit compil support dynam analysi ecienc consid ation approach base captur concurr infrastructur class applic reus everi new applic idea similar notion skeleton readi made build block abstract characterist class applic case closer algorithm skeleton encapsul structur botorog kuchen 1995 explor approach algorithm skeleton common parallel pattern anoth class applic ie adapt multigrid method moreov botorog kuchen 1995 list seri requir languag support algorithm skeleton among data access control polymorph author introduc notion parallel abstract data type padt order account requir featur furthermor host languag use experiment imper languag ie c program languag argu objectori model gener program natur fulll requir implement algorithm skeleton therefor concentr ecient data parallel object model suitabl high perform parallel applic contrast objectori distribut middlewar support notion global name address space ecienc import applic address method wouldnt fulll requir moreov give user access distribut comput aspect commun synchro nizat etc consequ achiev ecienc transpar concurr 3 view system transpar con currenc section describ system transpar concurr distribut solut pde user perspect perspect emphas follow requir system applic class applic address parallel gener solut pde fem fd etc pde core engin natur scienc larg class applic system like highli relev larg appli research commun usabl expos user small well test well document compon set togeth control thread way compon play togeth easili learn use extend user abl use system conjunct hisher data algorithm order complet solut process ecienc last least ecienc import requir scientic applica tion architectur approach driven ecienc well succeed meet requir account follow achiev larg applic focu captur concurr infrastructur load balanc data distribut nding data need commun ie comput commun pattern know commun take place employ highlevel mathemat interfac form geometr data descript discret physic domain solut gener involv algorithm discret mathemat interfac solut exist comput kernel eg bla dongarra croz hammarl hanson 1988 lapack angerson bai garra greenbaum mckenney du croz ham marl demmel bischof 1990 numer librari eg dipack langtangen 1999 employ user solut process exist numer librari distribut solut pde still lowlevel complex lowlevel mean user still awar data distribut commun aspect well mani lowlevel aspect renumb data access set etc smith 1998 complex mean librari provid rich mix function aliti part function account numer abstract linear algebra solver time discret scheme etc gener function sometim duplic librari philosophi geometr data represent local element global mesh renumb etc mix also therefor librari becom larg hard use learn separ parallel solut process applic specic data algorithm achiev high usabl design small set well test well document compon narrowli focus function solut high level reusabl use encapsul hide detail concurr user achiev reus asi entir concurr infrastructur also hide tediou detail geometr data represent user time componentbas design account reus exist numer softwar artifact solut ecient employ truli distribut object model model notion global name address space remot invoc activ object loos synchron commun take place particular time applic life time optim commun know exactli commun take place aggreg data larg messag main conceptsstep involv distribut solut pde 1 geometr data represent 2 data structur creation 3 oprocessor data updat 4 local numer comput system account rst three phase user respons provid numer algorithm particular pde 31 geometr data represent geometr data represent one hard aspect scientic applic use gener mesh even though applic use similar geometri mani dierent represent coexist practic make exist scientic code hard un derstand modifi maintain extend isol geometr data represent compon well dene interfac access need geometr attribut system level geometr data represent easili place without aect system function requir modic system mod ule therefor system take task provid user geometr data represent use implement user applic user speci structur input domain input le call mesh grid sy tem user also speci number processor avail hisher system le describ domain prescrib well document mat le usual obtain help tool call mesh gener 2 system read data le intern compon dierent element shape use discret input domain speci mesh le system use loadbalanc partit algorithm provid meti 3 break input mesh structur data smaller region detail relat geometr data represent encapsul system compo nent user get access geometr data aspect compon interfac subdomain system level geometr data represent easili replac without aect ing system function requir modi cation system modul 32 data structur creation system creat number region input data structur equal number processor avail associ data region process 4 transpar user intern boundari geometr mesh data duplic process user access local oprocessor data need one comput user access geometr data local one processor subdomain compo nent compon present user uniform view geometr data structur employ sequenti program model implement numer algorithm solver distribut comput aspect compon incorpor invis user user subclass system provid compon userdata dene attribut eg pressur temperatur data abstract dene mesh structur involv comput nal result user provid concret exampl tool found httpwwwsfb013unilinzacat joachimnetgen 4 model singl process run singl processor interfac store retriev user dene data item tofrom specic mesh locat element node etc 33 oprocessor data updat concurr structur applic address solut pde consist independ local comput follow commun phase therefor loos synchron chang et al 1995 order automat provid oprocessor data updat need know commun need know commun pattern gener commun system comput commun pattern user explicitli invok updat phase system perform updat transpar region associ process store subdomain compon invis part compon make use local data order account distribut comput part compon comput commun pattern creat commun data contain object maintain global data consist transpar user user call system provid gener function updat make sure user dene data global consist 34 local numer comput system treat user data dierent depend depend attribut 1 call depend data dene user properti nal result ie unknown equat solv eg pre sure temperatur etc updat anoth depend data item eg coecient matric comput base unknown 2 call independ data user data assign result express comput base depend data figur show system support task transpar user user contribut complet solut process shown gure 2 employ masterwork concurr model master process respons read domain data input le distribut subdomain worker actual use hybrid masterwork spmd singl process multipl data concurr model use spmd model due key observ parallel system worker process execut similar task local domain data class applic address share featur name data parallel gure 2 associ subdomain uniqu process say subdomain commun capabl know packunpack sendrec insid system compon similar fea ture call compon activ compon contrast compon passiv captur structur data andor algorithm associ without commun ca pabil user level passiv compon employ visibl user see passiv interfac subdomain allow user manipul appropri geometr data hide geometr data represent user system instanti comput right subdomain worker user act subdomain level sequenti fashion system replic user algorithm data worker worker commun transpar user use messag gure 3 show dierenc code excerpt written classic sequenti manner code excerpt enrich system function look sequenti execut di tribut show classic concurr model applic ie mpi ver sion sinc assum complex evid reader space would allow illustr gure 3 emphas dier enc two model use grey model requir modic use black similar part easi see data item b candid depend data therefor code excerpt data special compon userdata also loc data variabl reect data user see ie subdomain hand data item c independ requir modic sequenti algorithm import observ user one observ dierenc depend independ data proper guidanc provid system document user experi task straight forward implement prototyp frame work johnson 1997 bassetti davi quinlan 1998 demonstr approach use c program languag stroustrup 2000 use meti librari load balanc graph partit irregular mesh use object orient messag pass interfac librari commun figur 4 depict view prototyp use uml fowler scott booch 1999 uni model languag formal breviti show key compon interfac uml diagram design base care studi applic domain pde solver behavior key observ applic share similar structur dierenc resid nu meric problem paramet rather concurr infrastructur therefor separ parallel algorithm geometr data applic specic paramet data algorithm abl come solut autom parallel process gure 4 useralg compon hook user anchor hisher comput framework user subclass abstract compon useralg 6 provid hisher main control ow complement framework control ow complet particular applic user also hook data represent hisher applic mention earlier 34 data independ depend user dene compon import user librari case say user extend framework composit composit rst mechan use extend 6 particular implement compon class user suppli applic specif part input file commun worker 1 worker n mesh data master data decomposit commun meti librari librari mpi figur 2 main build block system framework user depend data dene subclass framework contain compon userdata subclass second mechan use extend framework user access geometr data subdomain interfac subdomain compon user algorithm compon parameter subdomain compon subdomain creat framework user contigu consist view hisher data user write hisher applic singl subdo main spmd fashion framework instanti number worker replic user provid comput subdomain worker process model worker compon visibl user compon receiv work master process masterwork fashion master compon read input data provid user discret physic domain break smaller partit send worker base local data provid subdomain compon worker set commun pattern cooper worker gener function updat use commun pattern subdomain contain compon userdata automat gener commun everi time user call function updat user depend data item componentbas design chosen framework due construct ap proach ie construct part solut process gener approach would analyz exist solut gener new one eg compil driven parallel compil techniqu data ow analysi dynam analysi limit regular applic use simpl data layout framework fulll best need user abl plug data represent al gorithm ie provid remain part solut process benet architectur choic rang abil autom parallel process gener class applic never achiev gener irregular applic data local commun optim data encapsul concept natur provid intens research ecienc issu data local commun optim come free almost least come cost whatev make objectori languag slow abstract penalti dynam bind penalti inherit penalti last least object orient framework eectiv rout reus parson rashid speck telea 1999 gener import aspect design parallel structur numer applic refer express independ represent concurr infrastructur base concept gener program use gener program abl automat gener commun user data use contain place holder later dene user data abl packunpack sendrec data solut enabl us free user distribut comput aspect data distribut data coher consist data commun concurr model use hybrid masterwork spmd spmd wide use concurr model numer applic sinc data parallel use special process master evenli divid data send work worker process way worker approxim amount work load comput balanc valid framework two aspect usabl level system open sourc made avail research applic domain area experi classic sequenti model fem poisson solver use tetrahedr mesh void main f computeb computepressur void computepressur f void computea f void computec f void computeb f nonclass sequenti model fem poisson solver use tetrahedr mesh void main f updatep loc data computeb computepressur void computepressur f updatep loc data void computea f void computec f void computeb f binit updateb loc data jk1loc datagetnv local datagetnv bsetatknod temp updateb loc data figur 3 comparison two sequenti program model usermain public useralg userdefin public userdata user suppli compon subdomain worker commpattern master meti meshstruct useralg virtual void main oompi intboundari userdata user defin extern packag intern use framework framework intern user visibl templat void updateuserdata subdomain mydomain figur 4 infrastructur framework implement test suit test function framework document purpos well ecienc point view interest applic speedup intend run framework cluster pc now network workstat run linux oper system therefor measur applic speedup run x size problem increas number processor measur dierent size problem well 5 conclus futur work paper present new approach toward parallel scientic code ie construct approach contrast gener approach egcompil driven parallel construct part solut instead gener new solut base exist one use compon base architectur order abl allow user build concurr infrastructur approach get closer ideal goal user deal concurr without restrict gener applic class therefor abl handl distribut solut pde gener geometri mesh given ecienc import constraint class applic address show truli distribut compon model allevi ecienc problem objectori middlewar java rmi nd corba success stori nd distribut compon object model dcom nd paper attempt explor appropri object conjunct concurr much desir associ meyer 1993 context high perform comput high perform scientic comput known commun tradit reluct objectori techniqu poor perform implement objectori languag system futur work toward bring evid approach scalabl intend system architectur cheap exibl distribut comput platform consist cluster linux pc now scalabl approach potenti unlimit number comput use gain comput power r overview compil scalabl parallel machin an sorensen lapack portabl linear algebra librari highperform comput optim parallel objectori frame work algorithm skeleton adapt multigrid method distribut compon object model dcom n uml distil brief guid standard object model languag framework compar objectori reus techniqu comput partial di systemat concurr objectori program framewok transit numer soft ware nutsandbolt abstract tr extend set fortran basic linear algebra subprogram systemat concurr objectori program objectori runtim support complex distribut data structur flexibl oper execut model share distribut object model languag parallel comput c program languag comput partial differenti equat distribut memori compil design spars problem overview compil scalabl parallel machin algorithm skeleton adapt multigrid method runtim techniqu parallel spars matrix problem framework object orient framework design