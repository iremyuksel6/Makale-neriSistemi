speed power clairvoy introduc resourc augment method analyz onlin schedul problem resourc augment analysi onlin schedul given resourc say faster processor processor adversari appli analysi two wellknown onlin schedul problem classic uniprocessor cpu schedul problem 1 ri pmtnsgr fi besteffort firm realtim schedul problem 1ri pmtn sgr wi 1 ui known constant competit nonclairvoy onlin algorithm problem show simpl onlin schedul algorithm problem constant competit onlin schedul equip slightli faster processor adversari thu moder increas processor speed effect give onlin schedul power clairvoy furthermor onlin schedul constant competit input close correl processor speed also show perform onlin schedul besteffort real time schedul significantli improv system design way laxiti everi job proport length b introduct consid sever well known nonclairvoy schedul problem includ problem minim averag respons time 13 15 besteffort firm realtim schedul 1 2 3 4 8 11 12 18 postpon formal defin problem next section nonclairvoy schedul relev inform eg job arriv futur avail schedul algorithm standard way measur advers effect lack knowledg competit ratio opti ai denot cost schedul produc onlin algorithm input opti denot cost optim schedul competi support part nsf grant ccr9202158 kalyancspittedu httpwwwcspittedukalyan support part nsf grant ccr9209283 tive ratio problem min opti min onlin algorithm standard way interpret competit ratio payoff game play onlin algorithm allpow malevol adversari specifi input one primari goal analysi identifi work well practic competit analysi critic often yield ratio unrealist high normal input result fail identifi class onlin algorithm work well schedul problem consid good exampl phenomenon competit ratio unbound simpl nonclairvoy algorithm perform reason well practic explain phenomenon adopt call weak adversari model assum speed processor use nonclairvoy schedul 1 speed processor use clairvoy ad versari ffl 0 defin fflweak competit ratio problem min subscript denot speed processor use correspond algorithm origin motiv standard competit ratio use diverg onlin al gorithm output optim measur advers effect nonclairvoy fflweak competit ratio give us anoth measur also suggest practic way combat advers effect nonclairvoy problem small ffl competit ratio moder ffl mean moder increas processor speed effect buy power clairvoy therefor weak adversari model give system design practic way increas speed processor improv perform system normal input one would intuit expect offlin perform system would degrad drastic speed processor increas slightli algorithm bound ffl competit ratio bound competit ratio input opt 1 iopt1ffl bound thu algorithm bound fflweak competit ratio bound competit ratio input fall formul normal give algorithm schedul problem fflweak competit ratio sole function ffl input furthermor ffl increas fflweak competit ratio quickli approach one previou current result gener schedul problem consist collect jng independ job run singl processor result extend multiprocessor set restrict attent singl processor simplic job j releas time r length x j run time r time requir complet j x divid speed processor assum onlinenonclairvoy schedul awar j consid preemptiv schedul job alway restart point last execut assum context switch requir time problem minim averag respons time job well known wide studi problem oper system schedul see exampl 7 14 assum nonclairvoy schedul learn x time r gen eral deduc x run j com pletion complet time c job j time j alloc enough time finish execut similarli respons time w idl time speed processor w problem minim averag respons determinist competit ratio omegagamma n 13 random competit ratio n 15 easili shown algorithm doesnt unnecessarili idl processor competit ratio surprisingli best known upper bound competit ra tio even allow random competit ratio commonli use round robin algorithm section 3 first consid queue size function time defin qa set job releas time finish algorithm time assum use speed processor show everi non clairvoy schedul algorithm input time jqa 1jjq opt set cardin give onlin algorithm balanc b short guarante time jqb 1 ffl jqopt 1j impli balanc fflweak competit ratio 1 ffl problem minim averag respons time contrast show fflweak competit ratio round robin omegagamma n 1gammaffl 1 assum nonclairvoy ant schedul equip unit speed processor ffl speed processor instead 1ffl speed pro cessor assum ffl 1 case give nonclairvoy schedul algorithm balance2 averag respons time 1 1 ffl time averag respons time adversari mean nonclairvoy schedul supercomput old 386 pc constant competit clairvoy schedul supercomput fi nalli demonstr balanc fair everi job see prove maximum idl time balanc quit compar offlin besteffort firm realtim schedul job j deadlin benefit b addit releas time execut time also use defin valu densiti job j laxiti j speed processor maximum amount j delay complet sinc realtim system embed system schedul gener awar advanc job may ceiv thu standard assumpt time r schedul learn x b j finish time algorithm receiv benefit b otherwis benefit gain job goal schedul maxim total benefit job complet sinc maxim problem competit ratio definit introduct modifi invert ratio exampl competit ratio problem min opti determinist competit ratio problem thetaphi 3 4 11 18 random competit ratio thetaminlog phi log delta 8 12 import ratio phi ratio maximum valu densiti job minimum valu densiti job delta ratio length longest job length shortest job competit ratio unbound even special case section 4 first assum nonclair voyant schedul adversari unit speed processor laxiti job j least fflx upper bound standard competit ratio laxiti assumpt also upper bound fflweak competit ratio sinc job j doesnt laxiti least fflx 1 speed processor cant finish unit speed pro cessor formul also ad advantag show effect laxiti laxiti sumption give algorithm slacker competit ratio function ffl approach three ffl increas result show realtim system design everi job laxiti reason fraction execut time job result competit ratio reason small effect laxiti competit ratio special case 1 6 show fflweak competit ratio slacker approach one ffl increas weak adversari model compar onlin algorithm less power knowledg adversari consid queryrespons problem kserver problem special case eg 17 19 onlin weight match 9 case adversari handicap fewer server one argu weak competit ratio essenti call compar ratio 10 howev result 10 realli differ flavor primarili concern effect partial clairvoy anc method suggest address limit competit analysi method includ restrict input distribut satisfi special properti eg 10 16 compar cost solut produc onlin algorithm input worstcas optim cost input size 5 3 averag respons time follow well known lemma explain first consid queue size lemma 31 schedul algorithm speed processor total respons time lemma 32 everi nonclairvoy schedul algorithm input time proof job arriv time 0 one job arriv time 1 adversari set job length onlin hasnt finish job time one show adversari alway run shorter job alway two activ job key point note time sum remain unfinish length two job adversari queue satisfi give onlin algorithm balanc guarante queue size much optim weak adversari scenario algorithm balanc job j time defin amount time balanc execut j time time balanc split process time equal among job j minimum analysi balanc base follow lemma lemma 33 let b algorithm balanc point time jqb 1 ffl jqopt 1j proof lemma follow ensu chain reason let ub set job unfinish balanc ua set job unfinish adversari time mention lemma 33 intuit adversari use time balanc spent job ua finish job ub gammau need show weak adversari assumpt mean order borrow enough time finish job ub gamma ua must case ua reason larg say job j immedi borrow anoth job j j denot balanc ran j j time 0 satisfi time 0 adversari could execut balanc execut j j borrow relat denot j transit closur immedi borrow relat defin g intuit adversari transfer time j j 2 ua j lemma 34 let j job balanc saw complet time job j proof suppos job j mani job j j select one reach j shortest path p direct unweight graph induc relat immedi borrow let j k job p immedi j j j k j j definit p x last time j j run time notic must case c k x j k would j j predecessor p henc definit balanc j k j j k henc deduc reach contradict sinc pg sinc adversari complet job ub gammau total time spent balanc job ua must least partit time balanc spent job cumul time ith class least ffl note could collect time interv call partit good job x 2 ua portion time spent balanc x includ kxk kj k lemma 35 alway exist good partit proof earliest releas time job bx let ub gamma index j definit relat immedi borrow must case job execut balanc time interv tj must member bj also observ rang 1 must run finish job bj interv tj therefor 1 p must case cumul amount time spent balanc job bj must least observ consequ induct time spent job ua balanc distribut job ub gamma ua job j get ffl unit time job bj u result follow sinc lemma 34 kxk kj k proof lemma 35 intuit suggest adversari go finish job need rais ffl k j k unit time job j 34 know suggest analyz follow problem get lower bound number job ub politician problem n politician tri rais money contributor ith politician must rais ffl dollar j contributor c j dollar contribut elect rule say jth contributor contribut ith politician c j politician rais money mani contributor contributor give money sever politician lemma 36 solut politician problem ffln proof contribut j contributor politician sinc fraction ffl ith politician got j contributor sinc everi politician success case elect rule fraction c j j contributor gave ith politician proof appli lemma 35 know job j must find ffl unit time job j lemma 34 appli lemma 36 case get jua j follow theorem follow lemma 31 theorem 31 fflweak competit ratio balanc respect averag respons time ffl show commonli use algorithm round robin 7 14 constant fflweak competit ratio small ffl round robin split process time evenli among unfinish job lemma 37 problem minim averag respons time fflweak competit ratio round robin proof divid time stage let ith stage start time let ffl two job length 1 ffl releas time 0 one job releas time length si exactli length round robin left previou job guarante adversari finish job releas time time get recurr expand get total respons time adversari theta theta1 total respons time round robin theta follow theorem show balanc overli delay job improv perform averag respons time theorem 32 fflweak competit ratio balanc respect maximum idl time 1 ffl proof time balanc complet job j idl time maxi mum shorten unfinish job let us assum balanc complet job time let idl time experienc use balanc lemma 34 amount time spent balanc job r due differ speed must case adversari finish job j j time 1 fflt balanc run j j hand balanc ran j j r therefor gamma notic j j must arriv tgamma therefor idl time incur adversari j j must least assum nonclairvoy schedul equip unit speed processor ffl speed processor almost competit equip 1 speed processor assum ffl 1 assum simplic 1ffl integ algorithm balance2 run job j run least unit speed processor run job j run least ffl speed processor analysi balance2 follow line analysi balanc modifi definit immedi borrow follow way job j immedi borrow time anoth job j j run j j either balance2 run run j processor slower processor j j run defin ua ub borrow bj defin initi length j execut time balance2 lemma 38 let j job balanc saw complet time job j modifi politician problem n politician origin contributor let 1 must refund least ffl i1 dollar contributor jth contributor requir c j dollar refund elect rule say ith politician refund money jth contributor c j lemma 39 solut modifi politician problem ffln gamma 1 proof assum without loss gener assum 1 refund c j1 refund c j2 situat swap transit refund c j2 2 refund c j1 easi see assum without loss gener solut modifi politician problem without swap let us multipli refund politician factor 1ffl simultan also increas pool potenti contributor factor 1ffl replac origin contributor 1ffl ident contributor repeat previou assign 1ffl time politician still success refund money prove induct 1 least contributor among mffl contributor get refund politician 1 contributor get refund politician assum get refund first politician swap assumpt otherwis c 1 accept refund politician assum hypothesi hold show hypothesi also hold induct hypothesi contributor 1 get refund ith politician let c ffi highest contributor got refund ith politician c ffi i1 c ffi get refund politician hand c ffi i1 contributor get refund politician swap assumpt lemma 310 let b algorithm balance2 point time jqb 1 ffl jqopt 1j proof go reduc modifi politician problem member ua contributor member ub gamma ua politician let ub gamma j job order increas order releas time sinc least two job unfinish time interv r must case balance2 run processor throughout period assum balance2 run two job j j b time 0 time r ffi claim j g neither j j b j ffigamma1 bj ffigamma1 definit otherwis say j execut round robin fashion claim follow notic assum length job j ffi exactli best case adver sari balance2 adversari execut length job ub gamma ua henc extra fflt gamma r ff2 work refund done balance2 must go job ua consid might distribut must case extra work must period r must distribut job think j ffigamma1 give refund job bj ffigamma1 elect rule satisfi lemma 38 appli modifi politician lemma rest argument theorem 33 averag respons time bal ance2 unit speed processor ffl 1 speed processor 1 ffl time averag respons time adversari given unit speed processor proof theorem follow appli lemma 310 note adversari must run job durat ffl even balanc complet job time 4 realtim schedul describ algorithm slacker need introduc definit notat recal first assum nonclairvoy schedul clairvoy adversari unit speed processor laxiti job j least fflx notat conveni let job j viabl time schedul algorithm finish j run j least x unit time defin slack job j time job fresh time otherwis say job stale time let c constant defin later defin densiti class job j blog c v c assum normal smallest valu densiti one densiti class rang 0 blog c phic x set job let kxk denot total benefit job x let opt set job finish adversari algorithm slacker time r slacker switch j j higher densiti class job j j slacker current run happen j j save repres job densiti class blog c v j c slacker finish job j time let ff largest integ current fresh job densiti class ff viabl repres job class ff viabl repres job j densiti class ff slacker resum execut j otherwis slacker start execut arbitrari fresh job densiti class ff let set job complet slacker r set job run slacker may proper subset r sinc slacker may finish everi job start lemma 41 let j arbitrari repres job densiti class ff slacker com plete period least unit time r slacker run job densiti class ff lemma 42 assum densiti job integr power c proof imagin job j 2 r account associ account job initi start b point account start zero point redistribut point account job account job r gamma argument revers induct densiti class first note slacker finish everi job densiti class blog c phic begin assum consid job densiti class ff let j job repres job densiti class ff time 1 2 slacker ran job j j densiti class fi ff unit time transfer j j account j account lemma 41 j borrow total time least ffi x henc borrow least c ff x point thu account contain least b point need examin much account job j densiti class ff deplet job lower densiti class repres job densiti class ff take c fi x ffi point account j henc number point remain account j least lemma 43 assum densiti job integr power c koptk 13ffi proof assum adversari ran job densiti c ff unit time credit adversari point regardless whether finish job defin job dens densiti c ff greater show total amount time adversari spent run dens job time time slacker run dens job divid time follow way let oe 0 first point time slacker start run dens job let 0 first point time oe slacker run dens job let oe 1 first point time igamma1 slacker begin run dens job note dens job arriv oe i1 consid longest dens job j j arriv oe slacker run j stale time henc mean time adversari run dens job slacker didnt run 12ffi time time slacker run dens job must add one ratio job adversari slacker ran lemma follow revers induct ff theorem 41 assumpt everi job j laxiti least fflx competit ratio slacker proof appli lemma 42 lemma 43 remov condit densiti job integr power c one verifi let get bound competit ratio ffi 0 competit ratio goe three ffi increas go back assum slacker 1 speed processor show fflweak competit ratio approach one modifi lemma 43 follow proof similar proof lemma 43 lemma 44 assum densiti job integr power c slacker 1 speed processor 5 conclus believ weak adversari model use identifi onlin algorithm work well practic type problem import weaken adversari done way correspond strengthen onlin algorithm achiev practic worth mention problem consid paper increas speed onlin processor way weaken adver sari exampl case realtim schedul suffic design realtim system way laxiti condit satisfi final would like mention weak adversari model use recent show natur greedi algorithm work reason well practic almost optim onlin weight match 9 tradit competit analysi show bound theta2 wherea weak adversari analysi yield bound thetalog size graph acknowledg second author would like thank daniel moss rege colwel richard su choza dimitri zorin mani help discuss realtim schedul r improv perform guarante use slack time onlin schedul maxim task complet competit onlin realtim task schedul onlin schedul presenc overload new measur studi onlin algorithm onlin realtim schedul laxiti oper system concept fault toler realtim schedul onlin transport problem beyond competit analysi optim onlin schedul algorithm overload realtim system moca multiprocessor onlin competit algorithm realtim system schedul oper system concept design non clairvoy schedul statist adversari onlin algorithm amort effici list updat page rule onlin schedul job fix start end time kserver dual loos competit page tr amort effici list updat page rule oper system concept 3rd ed onlin schedul presenc overload oper system concept design competit onlin realtim task schedul moca onlin schedul job fix start end time nonclairvoy schedul approxim algorithm schedul optim timecrit schedul via resourc augment extend abstract art comput program volum 1 3rd ed schedul overload realtim system onlin comput competit analysi schedul dark page replac gener cach problem tradeoff speed processor harddeadlin schedul schedul algorithm speed power claivoy competit analysi round robin algorithm onlin schedul onlin transport problem faulttoler realtim schedul maxim job complet onlin minim flow time nonclairvoyantli jitter control qo network ctr moham eid hussein uwe schwiegelshohn util nonclairvoy onlin schedul theoret comput scienc v362 n1 p238247 11 octob 2006 jaehoon kim kyungyong chwa onlin deadlin schedul faster machin inform process letter v85 n1 p3137 januari leah epstein rob van stee optim onlin flow time resourc augment discret appli mathemat v154 n4 p611621 15 march 2006 marek chrobak leah epstein john noga ji sgall rob van stee tom tich nodari vakhania preemptiv schedul overload system journal comput system scienc v67 n1 p183197 august thoma erlebach alexand hall nphard broadcast schedul inapproxim singlesourc unsplitt mincost flow proceed thirteenth annual acmsiam symposium discret algorithm p194202 januari 0608 2002 san francisco california thoma erlebach alexand hall nphard broadcast schedul inapproxim singlesourc unsplitt mincost flow journal schedul v7 n3 p223241 mayjun 2004 holeung chan takwah lam karkeung nonmigratori onlin deadlin schedul multiprocessor proceed fifteenth annual acmsiam symposium discret algorithm januari 1114 2004 new orlean louisiana luca becchetti stefano leonardi alberto marchettispaccamela kirk pruh semiclairvoy schedul theoret comput scienc v324 n23 p325335 20 septemb 2004 franci l chin stanley p fung improv competit algorithm onlin schedul partial job valu theoret comput scienc v325 n3 p467478 6 octob 2004 jaehoon kim kyungyong chwa nonclairvoy schedul weight flow time inform process letter v87 n1 p3137 juli guido schfer naveen sivadasan topolog matter smooth competit metric task system theoret comput scienc v341 n1 p216246 5 septemb 2005 jason mccullough eric torng srpt optim util faster machin minim flow time proceed fifteenth annual acmsiam symposium discret algorithm januari 1114 2004 new orlean louisiana bala kalyanasundaram kirk r pruh maxim job complet onlin journal algorithm v49 n1 p6385 1 octob jeff edmond kirk pruh broadcast schedul fair fine proceed thirteenth annual acmsiam symposium discret algorithm p421430 januari 0608 2002 san francisco california n bansal k dhamdher minim weight flow time proceed fourteenth annual acmsiam symposium discret algorithm januari 1214 2003 baltimor maryland bala kalyanasundaram kirk r pruh minim flow time nonclairvoyantli journal acm jacm v50 n4 p551567 juli chiuyuen koo takwah lam tsuenwan ngan kunihiko sadakan karkeung onlin schedul tight deadlin theoret comput scienc v295 n13 p251261 24 februari anupam gupta bruce magg florian oprea michael k reiter quorum placement network minim access delay proceed twentyfourth annual acm symposium principl distribut comput juli 1720 2005 la vega nv usa chiuyuen koo takwah lam tsuenwan ngan karkeung competit deadlin schedul via addit faster processor journal schedul v6 n2 p213223 marchapril takwah lam tsuenwan johnni ngan karkeung perform guarante edf overload journal algorithm v52 n2 p193206 august 2004 chiuyuen koo takwah lam tsuenwan ngan karkeung extra processor versu futur inform optim deadlin schedul proceed fourteenth annual acm symposium parallel algorithm architectur august 1013 2002 winnipeg manitoba canada jeff edmond kirk pruh maiden analysi longest wait first proceed fifteenth annual acmsiam symposium discret algorithm januari 1114 2004 new orlean louisiana michael h goldwass patienc virtu effect slack competit admiss control journal schedul v6 n2 p183211 marchapril c greg plaxton yu sun mitul tiwari harrick vin reconfigur resourc schedul proceed eighteenth annual acm symposium parallel algorithm architectur juli 30august 02 2006 cambridg massachusett usa ryan porter mechan design onlin realtim schedul proceed 5th acm confer electron commerc may 1720 2004 new york ny usa jeff edmond suprakash datta patrick dymond tcp competit limit adversari proceed fifteenth annual acm symposium parallel algorithm architectur june 0709 2003 san diego california usa jeff edmond kirk pruh maiden analysi longest wait first acm transact algorithm talg v1 n1 p1432 juli 2005 kirk pruh competit onlin schedul server system acm sigmetr perform evalu review v34 n4 march 2007 wuntat chan takwah lam kinsh liu prudenc w h wong new resourc augment analysi total stretch srpt sjf multiprocessor schedul theoret comput scienc v359 n1 p430439 14 august 2006 chandra chekuri ashish goel sanjeev khanna amit kumar multiprocessor schedul minim flow time resourc augment proceed thirtysixth annual acm symposium theori comput june 1316 2004 chicago il usa holeung chan takwah lam kinsh liu extra unitspe machin almost power speedi machin competit flow time schedul proceed seventeenth annual acmsiam symposium discret algorithm p334343 januari 2226 2006 miami florida joan boyar lene favrholdt kim larsen rel worst order ratio appli page proceed sixteenth annual acmsiam symposium discret algorithm januari 2325 2005 vancouv british columbia nikhil bansal kirk pruh server schedul lp norm rise tide lift boat proceed thirtyfifth annual acm symposium theori comput june 0911 2003 san diego ca usa joan boyar lene favrholdt kim larsen rel worstord ratio appli page journal comput system scienc v73 n5 p818843 august 2007 sandi irani kirk r pruh algorithm problem power manag acm sigact news v36 n2 june 2005 roughgarden va tardo bad selfish rout journal acm jacm v49 n2 p236259 march 2002