web proxi acceler numer studi show miss ratio forward proxi typic least 4050 paper propos evalu new approach improv throughput web proxi system reduc overhead handl cach miss name propos frontend web proxi high perform node filter request process miss forward hit new cacheabl content proxi request filter base hint proxi cach content system call proxi acceler achiev significantli better commun perform tradit proxi system instanc acceler built embed system optim commun http process kernelmod http server scalabl web proxi cluster size achiev use sever acceler use analyt model tracebas simul real implement studi benefit implement tradeoff new approach result show singl proxi acceler node front 4node web proxi improv costperform ratio 40 hintbas request filter implement choic affect overal hit ratio avail implement hint manag modul integr web proxi softwar present experiment evalu implement demonstr associ overhead small b introduct proxi cach larg internet servic provid receiv high request volum numer studi show miss ratio often least 4050 even larg proxi cach 7912 consequ reduct cach miss overhead result signific throughput improv proxi cach experienc high request volum base insight experi web server acceler 15 paper propos evalu new approach improv throughput web proxi system name propos frontend web proxi system high perform node filter request process miss forward hit new cacheabl content proxi web proxi missrel overhead reduc receiv cacheabl object push acceler perman connect consequ proxi use releas resourc servic increas number hit figur 1 illustr interact proxi acceler web proxi node client web server hint cach webserv client 30 webproxi gbyte 35 35 noncach content hit proxi acceler figur 1 acceler web proxi architectur acceler extend http server run embed oper system optim commun like web server acceler describ 15 generalpurpos oper system kernelmod serviceinterrupt level like netfin web server accelerator16 acceler main memori cach mainli use store content forward web proxi acceler filter request base summari proxi cach content call hint hint maintain base inform provid proxi node inform deriv acceler decis hint represent updat mechan import factor perform gain enabl propos proxi acceler method due relat requir system network resourc intrins tradeoff resourc usag inform accuraci previou research consid use locat hint context cooper web proxi 8192210 system appli approach manag clusterbas web proxi addit experi new hint mainten mechan specif design interact front end cluster homogen node work extend set solut proxi cach redirect 1131417 relev comparison propos 14 front end identifi process request noncach content extend function proxi acceler process request content cach web proxi includ cacheabl content current proxi cach build top previou research clusterbas network servic 42 proxi acceler method overcom intrins limit contentbas rout compon integr sever acceler node front web proxi cluster paper use analyt model conjunct simul studi potenti perform improv proxi acceler scheme evalu impact sever hint represent mainten method throughput hit ratio resourc usag addit present evalu perform impact actual implement hint manag compon web proxi applic analyt studi reveal throughput improv signif icant instanc acceler achiev order magnitud better throughput web proxi node commun oper embed system consid 15 singl acceler node boost throughput fournod web proxi 100 simul valid appropri hint represent updat protocol propos acceler method offload 50 wp load impact observ hit ratio addit evalu implement show overhead incur hint manag signific impact clientperceiv respons time throughput paper overview rest paper structur follow section 2 describ architectur acceler web proxi section 3 analyz expect throughput improv analyt model section 4 evalu impact hint manag sever web proxi perform metric tracedriven simul section 5 present implement hintmanag modul web proxi applic evalu perform impact section 6 discuss relat work section 7 summar result 2 acceler web proxi typic highperform web proxi system consist cluster node run web proxi applic frontend node distribut request applic node front endbas solut improv perform web proxi system restrict mainli balanc load base criteria like number activ connect cpu util inher unpredict content mixtur web proxi cach typic contentbas rout polici distinguish origin server andor object type less benefici howev contentbas scheme distinguish cacheabl noncach content prove bring signific perform improv web proxi system combin offload process request noncach content proxi node front end 14 paper propos offload proxi node overhead extend function frontend name extend frontend call proxi acceler pa contentbas router distinguish cach hit miss base inform proxi cach content case cach hit pa forward request web proxi wp node contain object either tcp splice handoff 1721 case cach miss pa send request origin web site bypass wp receiv object web site pa repli client appropri push object wp node select base load balanc criteria wp wp wp wp pa pa web proxi cluster request hint router server client figur 2 interact web proxi wp cluster sever proxi acceler pa enabl element new frontend function pa inform content wp cach henceforth call hint possibl solut hint represent updat mechan discuss later section evalu tracebas simul section 4 pa includ main memori cach store content wait push wp addit pa cach store duplic object wp cach request satisfi pa cach never reach wp reduc load wp figur 1 illustr interact pa fournod wp cluster pa wp node connect perman tcp connect request handoff 17 hint updat content push notic wp node still interact web site occur pa filter accur cach object revalid scalabl system may includ sever pa figur 2 router balanc load among pa hint wp node therefor pa appropri forward incom hit polici new content distribut may simpl roundrobin pa built stock hardwar run embed oper system optim commun altern pa built extend kernelmod http server either way pa achiev order magnitud better throughput web proxi node commun oper wp node would typic run softwar extend hint mainten distribut handoff tcpip connect url request push object pa cach hint represent previou research consid sever hint represent consist protocol hint represent vari scheme provid accur inform 2210 scheme trade accuraci reduc cost eg memori commun requir lookup updat studi consid two represent one provid accur inform one provid approxim inaccur inform accurateinform scheme call directori scheme use list object identifi includ entri object known exist wp cach implement list repres hash tabl 1022 hint space hint entri figur 3 hint represent base bloom filter approximateinform scheme base bloom filter 5 filter repres bitmap henceforth call hint space see figur 3 sever hash function regist object hint space hash function appli object identifi correspond bit gener call hint entri set hint space hint lookup posit entri associ object interest set hint entri clear object left cach whose represent includ entri therefor cach owner ie wp node maintain collis counter entri updat whenev relat object ad remov cach collis counter reach maximum valu longer updat entir hint space recomput number overflow counter reach threshold pa maintain bloom filter wp node hint consist hint consist protocol ensur inform pa site reflect content wp cach protocol choic vari sever dimens entiti identifi updat protocol initi rate updat messag exchang inform previous propos solut updat identifi either wp henceforth call wponli updat 819 contentbas router pa 17 method signific likelihood wrong request redirect decis first method may result fals miss inher delay updat second method may result fals hit inform object remov cach propag router fals miss also possibl entri router directori discard period due space limit paper propos evalu method call eager hint regi tration attempt address drawback previou method name pa wp identifi record hint pa push object wp node eagerli regist object exist correspond cach side effect method enabl reduct updat traffic sent wp node name wp node send updat notif object receiv pa small except due asynchron commun pa wp discuss section 5 respect protocol initi previous propos solut address wponli updat updat pull hint owner ie pa 19 push cach owner ie wp 82210 respect updat rate previou propos consid updat messag sent fix time interv 19 fix number cach updat 8 exchang inform may increment address updat occur sinc previou messag 10819 copi entir hint space 8 proxi acceler cach pa cach may includ object receiv web site push associ wp node select pa cach replac polici consid object pa cach also exist wp cach consequ pa cach replac polici focus minim networkrel cost shown appropri wp cach polici maxim hit ratio base hot statist object size expect enabl better pa perform polici like greedyduals 6 follow section evalu throughput potenti propos proxi acceler method impact sever hint implement choic 3 expect throughput improv major benefit propos hintbas acceler web proxi throughput improv analyz throughput properti scheme analyt model vari number wp pa node pa function cach size wp pa cpu speed system model network mg1 queue server repres pa wp cpu disk web site servic event repres 1 stage process client request eg pa miss wp hit disk access 2 hint cach manag oper eg hint updat object push event arriv rate deriv rate client request likelihood request switch one process stage anoth likelihood variou event cach hit disk oper deriv recent studi cach perform web content model 2314618 overhead associ event includ basic comput overhead io overhead eg connect receiv messag handoff oper system overhead eg context switch basic overhead ident pa wp io oper system overhead differ name pa overhead correspond embed system use web server acceler 15 200 mhz power pc pa incur 514sec miss overhead ie 1945 missessec 209sec hit overhead 4783 hitssec wp overhead deriv 17 300 mhz pentium ii incur 2518sec miss overhead ie 397 missessec 1392sec hit overhead 718 hitssec overhead assum 8 kbyte object follow paramet fix studi 1 40 noncach content ratio 25 miss ratio 2 tcp handoff use pa client connect upon posit hint lookup 3 directorybas hint 1 hour increment updat 4 disk io requir 75 wp hit 5 one disk io per object 6 four network io per object transmiss 7 25 wp hit push pa pa cach hot object 8 30sec wp context switch overhead unless otherwis specifi pa node 450 mhz cpu wp node 300 mhz cpu cost hintrel oper deriv implement simulationbas studi see section 4 hintbas acceler improv throughput costperform ratio figur 4 present expect perform tradit wpcluster throughput wp node tradit figur 4 throughput number wp pa node servic pa cache1030507090costperform improv wp node wp300mhz pa300mhz wp300mhz pa450mhz wp300mhz pa700mhz figur 5 costperform improv number speed wp pa node servic pa cach cluster enhanc four pa pa servic object cach plot illustr hintbas acceler enabl signific wp throughput improv instanc singl pa node increas perform 2node wp three time 4 node wp two time two pa 4node wp achiev higher throughput 16node wp howev consist previou studi contentbas rout 4221 plot illustr pa becom bottleneck larg wp cluster costperform improv enabl propos scheme rele vant instanc figur 5 illustr assum cost pa throughput wp node tradit 1 pa noncach 2 pa noncach figur 6 throughput hintbas acceler noncach redirect servic pa cache200040001 throughput wp node tradit pa hit 0 pa hit 10 figur 7 throughput pa servic object cach almost wp node costperform improv achiev singl pa 60 2node wp 40 4node wp perform benefit scheme increas differ wp pa cpu speed illustr figur 5 case 700 mhz pa cpu figur 5 also illustr 2node acceler benefit rel larg wp configur instanc costperform improv 2 pa lower 1 pa 2node wp hintbas acceler benefit redirect noncach object figur 6 illustr appropri size wp clu ter propos hintbas acceler enabl better perform previous propos polici redirect noncach object 14 workload 25 miss ratio 2node wp cluster attain doubl throughput level frontend identifi process request cach miss along request noncach content palevel cach benefit lowperform wp figur 7 illustr effect pa cach margin particular ratio noncach content signific like select experi paramet summar hintbas web proxi acceler may lead signific perform costperform improv pa node achiev much higher throughput network io wp node new scheme improv upon previous propos redirect noncach content appropri size wp cluster 4 impact hint manag section evalu hint represent consist protocol affect perform acceler web proxi focu perform metric hit ratio throughput cost metric memori comput commun requir perform cost metric depend variou characterist hint manag mechan see tabl 1 instanc lookup overhead affect longterm pa throughput also fals miss decis pa filter caus undu network load respons delay tabl 2 summar differ represent method updat protocol introduc section 2 instanc lookup overhead constant bloom filterbas scheme directori scheme depend con text name well hash tabl balanc similarli eager registr result fals miss wponli registr amount fals miss increas updat period studi identifi compar relev trend represent method updat protocol studi conduct tracedriven simul segment home ip web trace collect uc berkeley 1996 11 trace includ 557 million client request cacheabl object period 1267 day number object 168 million total size 17 gbyte factor factor consid studi follow 1 pa tabl impact hint manag choic characterist affect memori wp wp memori hit ratio memori pa pa cach hit ratio updat period longterm throughput updat period wppa shortterm throughput lookup time pa longterm throughput fals hit wp load fals miss network usag tabl select method characterist characterist represent directori bloom filter memori wp none ohint space memori pa oobj wp ohint space lookup overhead contextdepend constant fals hit none oobj wp protocol wponli eager reg fals miss perioddepend none pa comput onoff larg burst smaller burst wp memori 2 hint represent 3 hint updat protocol 4 updat period name consid configur 0251 gbyte pa memori memori bloom filterbas scheme vari size hint space 0510 mbyte number hash function hash function return remaind hint space size divid integ obtain combin four byte object identifi due limit associ trace encod object identifi compos 16byte md5 represent url 4byte encod server name restrict make imposs accur evalu resourc requir associ bloom filterbas scheme final experi updat period rang 1 sec 2 hour fix paramet experi push updat comparison pull updat push updat allow better control hint accuraci 8 lower io overhead addit experi increment updat consid appropri entir copi updat context hint represent system paramet consid studi wp cach replac polici lru pa cach replac lru bound replac burst accord polici incom object cach would caus given number object remov cach polici expect perform well base studi show small object larg contribut hit ratio 183 cach garbag collect invok new object accommod 41 cost metric memori requir main memori requir hint mechan deriv hint metadata messag buffer use hint consist protocol hint metadata directori scheme metadata maintain wp pa requir increas linearli popul wp cach instanc implement 68byte entri metadata 70 mbyte 10 gbyte wp cach contrast bloom filterbas scheme metadata maintain pa wp independ cach size pa metadata larg hint space multipli number wp node wp metadata larg hint space multipli size collis counter eg 8 bit hint consist protocol messag buffer storag space requir wp site hint consist protocol increas rate wp cach updat period consist protocol directori scheme updat entri unpredict length includ full name object bloom filterbas scheme updat correspond hint entri updat repres 5byte data structur cach updat result mani hint entri updat hash function filter comput requir comput requir associ acceler scheme result mainli request lookup process updat messag addit minor comput overhead may incur wp pa upon cach updat lookup overhead directori scheme lookup overhead depend distribut object hash tabl bucket bloom filterbas maximum entri per updat messag wp memori mbyte bloomfilt wponli bloomfilt eager wponli figur 8 variat maximum number entri per updat messag 1 hour period 256 mbyte pa 4 mbyte hint space 4 entri per object01030507 1000 2000 3000 4000 5000 6000 7000 8000 9000 1000011000 total entri per updat payload mentri wp memori mbyte bloomfilt wponli bloomfilt eager wponli figur 9 variat total number updat entri 1 hour updat period 256 mbyte pa 4 mbyte hint space 4 entri per object scheme lookup overhead predict depend mainli filter paramet specif overhead includ transform object name one integ valu comput hash function select test correspond bitmap entri 332 mhz powerpc transform object name md5 represent take 9sec per 55 byte string segment four simpl hash function use bloom filter implement overhead hash function comput bitmap lookup 1sec overal lookup overhead lower 10 expect cach hit overhead 300mhz pa see section 3 hit memori mbyte directori bloomfilt figur 10 variat overal hit ratio wp configur 512 mbyte pa bloom filter hint consist protocol amount comput trigger receipt hint consist messag depend number updat entri includ messag hint entri collis bloom filterbas scheme result half load directori scheme 160byte object iden tifier variat maximum averag messag size present figur 8 figur 9 illustr trend figur also illustr benefit eager registr approach hint scheme averag eager hint registr reduc half comput load similar trend observ commun requir consist protocol note larg maximum observ figur 8 due larg wp cach replac burst 2300 object 42 perform metric hit ratio characterist hint mechan affect observ hit ratio likelihood fals miss typic fals miss due hint represent updat delay experi select hint represent fals miss result updat delay expect likelihood fals miss increas updat period figur 11 illustr trend indirectli ratio request direct wp tradit updat mechan decreas increas updat period eager hint registr reduc number observ fals miss less impact bloomfilt scheme collis 262728290 1000 2000 3000 4000 5000 6000 7000 8000 request wp hint updat period sec eager bloomfilt wponli bloomfilt eager directori wponli directori figur 11 variat wp request updat protocol period 256 mbyte pa 4 gbyte fals hit hint space mbyte 6 gbyte wp 8 gbyte wp figur 12 variat fals hit ratio hint space wp cach 512 mbyte pa amount hint metadata wp relev impact overal hit ratio ie hit pa wp cach ratio metadata wp memori larg small wp cach size see figur 10 pa metadata signific impact object remov pa cach push wp rather discard throughput extent throughput improv depend well pa identifi wp cach miss characterist reflect likelihood fals hit affect represent method consist protocol hint represent directori scheme fals hit bloom fals hit wp memori mbyte figur 13 variat fals hit ratio hint entri perobject 512 mbyte pa filterbas scheme likelihood fals hit increas hintspac collis illustr figur 12 occur hint space decreas number object wp cach increas notic falsehit ratio constant hint space increas beyond threshold threshold depend wp cach size effect due characterist select hash function likelihood fals hit also depend number hint entri per object figur 13 illustr variat observ experi filter 35 hash function typic ratio fals hit decreas number hint entri per object hint space occup high invers may occur due collis hint consist protocol impact updat period fals hit ratio signific configur frequent wp cach updat eg system small wp cach figur 14 illustr trend hint scheme instanc bloom filter differ falsehit ratio observ 1hour 1sec updat 007 4 gbyte cach 004 6 gbyte cach compar two scheme rel impact updat period almost ident request respons time besid overhead hint lookup updat acceler wp architectur affect averag request respons time reduct hit ratio wp pa mainmemori cach besid amount metadata avail main memori hit ratio depend cach replac polici consid pa cach figur 15 illustr 12340 1000 2000 3000 4000 5000 6000 7000 8000 fals hit hint updat period sec bloomfilt 4 gb wp bloomfilt 6 gb wp figur 14 variat fals hit updat period 256 mbyte pa 4 mbyte hint space40506070 hit replac bound total hit 256 pa pa hit 256 pa total hit 512 pa pa hit 512 pa figur 15 variat hit rate replac bound 1 unbound replac bloom filter 6 gbyte wp 4 mbyte hint space bound replac polici enabl better pa hit ratio without reduc overal hit ratio instanc limit replac burst 10 object enabl 5 larger pa hit ratio unlimit burst see bound 1 averag replac burst significantli smaller maximum eg 3 vs 2300 experi summari trade accuraci bloom filterbas scheme exhibit lower comput commun overhead howev metadata wp node may reduc memoryhit ratio gener hint lookup overhead small respect typic request process overhead overhead predict bloom filterbas scheme eager hint registr reduc updaterel overhead prevent hit ratio reduct caus updat delay fals hit ratio consequ throughput significantli affect hint represent updat period bloom filterbas scheme ratio increas exponenti hint space content 5 implement hint manag web proxi node implement hintbas acceler web proxi infrastructur built extend threadbas web proxi applic kernelmod http server function hint manag content push implement hint mechan base bloom filter eager registr period updat implement make possibl flexibl system configur name web proxi node interact multipl acceler acceler node interact multipl proxi node hint represent size hint space customiz initi time collis counter take one byte bloom filter six hash four appli object name two origin server ip address object name 0 1 transform integ valu evalu polynomi p fix prime number overhead name transform 095sec first 10 byte 07sec addit 10 byte measur 332 mhz powerpc note although less effect md5 avoid collis solut character lower comput overhead clearli benefit proxi acceler perform hash function equal modhintspac appli result 4byte integ three permut byte similarli modhintspac function appli 4byte integ repres ip address one permut byte overhead comput hash function 55sec wp sever node correspond bloom filter repres pa interleav bitmap represent correspond bit filter place consecut memori locat see figur 16 comparison origin represent bloom filter repres separ memori segment interleav representa hint entri hash1obj hint space figur 16 hint represent interleav bloom filter 4 wp node tion character predict lookup overhead independ cluster size interleav represent lookup overhead 4bit entri constant 128sec 332 mhz powerpc origin representa tion overhead vari 119sec singl node lookup 439sec four node lookup hint updat protocol hint manag implement use eager hint registr protocol introduc section 2 name acceler regist hint push object toward proxi node proxi node collect hint updat period send acceler acceler receiv updat result cach updat content push wp node except made hint entri set push oper previou clear reach acceler push object set entri represent appropri handl situat may lead fals miss identifi type situat proxi updat label push content sent acceler carri label recent updat enact proxi web proxi softwar extens extens web proxi softwar three compon first compon repres updat interfac invok proxi thread handl client request object ad perman remov cach cach oper remov object accommod newer version result hint updat call thread indic object name origin server correspond cach oper result hint updat record updat buffer updat buffer get full releas transmiss updat buffer organ activ set wait set updat record buffer activ set buffer get full replac one wait set activ set includ buffer activ acceler local proxi node updat regist activ buffer associ node origin oper specif updat result cach add oper regist buffer proxi node receiv content origin web server otherwis updat regist buffer acceler push object proxi cach updat cacheremov oper regist buffer proxi node scheme prevent replic updat represent proxi interact sever acceler permit use multicast avail second compon repres proxi acceler interfac compon consist three thread one thread listen incom connect acceler one thread handl acceler request transmiss entir hint space third thread handl period updat acceler may request complet copi hint space initi period updat thread dissemin regist acceler updat buffer releas transmiss buffer releas thread transmit current activ batch updat buffer third compon web proxi extens push handler compon receiv new content store cach content sent http format post request requir proxi node duplic header process alreadi done acceler decoupl implement proxi cach acceler order hide latenc relat io oper multipl push connect concurr activ acceler proxi experiment evalu remaind section present experiment evalu overhead hint manag experiment evalu done web polygraph proxi perform benchmark 20 compon benchmark polyclt polysrv web proxi proxi acceler run separ node switch ethernetbas lan select traffic model meant stress hintrel compon web proxi applic name request model character 75 miss ratio content size fix 2 byte result header 370 byte per request request issu polyclt node besteffort mode mean new request sent soon repli previou one receiv experi consist 100000 request experi web proxi configur vari origin ie hint collect updat hint collect updat hint collect updat one two acceler experi role acceler reduc receiv hint updat request receiv directli web proxi therefor pass acceler updat period 5 min web polygraph statist respons time observ client show distribut hit miss respons time almost ident 98percentil test configur 99percentil miss respons time experienc configur activ hint manag differ less 1 perform origin configur hit respons time 99percentil differ less 10 perform origin configur throughput observ client unchang experi activ acceler 18 lower experi activ acceler web proxi intern monitor instrument collect statist overhead hint collect proxi acceler activ overhead includ hint comput segment collect batch updat buffer statist show minimum 31sec median 4sec 95percentil 123sec result demonstr hint collect updat protocol neglig impact perform web proxi node 6 relat work previou research consid use locat hint context cooper web proxi 8191022 paper hint help reduc network traffic effici web proxi cach cooper extend approach use hint improv throughput individu web proxi addit propos evalu new hint mainten techniqu reduc overhead exploit interact cach redirector associ cach web traffic intercept cach redirect relat approach architectur web server acceler 15 acedirector alteon 1 dy nacach infolibria 13 content smart switch 14 lard 17 abil integr proxi acceleratorlevel cach render approach similar architectur central element embed systembas cach hierarch cach architectur 13 front end web server 15 proxi acceler extend approach bypass web proxi propos 14 besid noncach object acceler identifi miss process local trade throughput rout compo nent bottleneck resourc approach boost even throughput bottleneck proxi node furthermor approach similar redirect method use architectur focus contentbas redirect request web proxi node 117 howev approach enabl dynam rather fix map object wp nodes1 contrast method 17 redirect caus cach multipl object replica independ client request pattern 7 conclus base observ miss ratio proxi cach often rel high 7129 develop method improv perform clusterbas web proxi shift cach missrel function execut proxi acceler extend contentbas router implement embed system optim commun consequ web proxi servic larger number hit proxi acceleratorbas system achiev better throughput tradit web proxi 181917 system web proxi bypass noncach object 14 addit moder load respons time improv proxi acceler main memori cach 1513 studi show singl proxi acceler node order magnitud better throughput commun oper proxi node 1516 improv costperform ratio 4node web proxi 35 studi show eager registr must bloom filterbas scheme appropri directori scheme larg wp cluster pa wp node compar power implement acceler web proxi node demonstr overhead ad hint manag signific comparison typic proxi node overhead r alteon web system scalabl contentawar request distribut clusterbas network server proceedingsproc chang web client access pattern distribut packet rewrit applic scalabl server architectur spacetim tradeoff hash code allow error measur access characterist world wideweb client proxi cach proceedingsproc scalabl widearea web cach share protocol proceedingsproc perform web proxi cach heterogen bandwidth environ tast crispi squid uc berkeley home ip http trace httpwww system design issu internet middlewar servic deduct larg client trace dynacach weav cach internet 3rd intern www cach workshop year1998year design perform web server acceler ibm netfin web server acceler v2 perform studi squid proxi http10 www journal 12 year1999year cach digest httpsquid high perform benchmark web polygraph httpircach design altern scalabl web server accel erat beyond hierarchi design consider distribut cach internet scale perform cooper web proxi cach tr ctr chihung chi hongguang wang gener model character content modif dynam web object web content cach distribut proceed 8th intern workshop kluwer academ publish norwel 2004 yu state art local distribut webserv system acm comput survey csur v34 n2 p263311 june 2002