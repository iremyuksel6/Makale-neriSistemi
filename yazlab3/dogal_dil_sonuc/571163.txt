modular termin contextsensit rewrit contextsensit rewrit csr recent emerg interest flexibl paradigm provid bridg abstract world gener rewrit appli set declar specif program languag obj cafeobj elan maud natur approach studi properti program written languag model contextsensit rewrit system especi interest prove termin system therebi provid method establish termin eg obj program prove termin contextsensit rewrit exist transform method reduc problem termin transform ordinari term rewrit system tr transform howev seriou drawback particular seem support modular analysi termin problem paper show substanti part wellknown theori modular term rewrit extend csr via thorough analysi addit complic aris contextsensit precis mainli concentr termin properti obtain modular result correspond nice fact languag modular design program specif explicitli promot sinc also complement modular analysi techniqu b introduct programm usual organ program compon modul compon program easier de velop analyz debug test eventu programm want interest comput properti like termin hold whole program could prove individu compon program roughli speak ing modular properti mean contextsensit rewrit csr 26 restrict rewrit forbid reduct select argument function way termin behavior rewrit comput improv prune infinit rewrit sequenc sever method develop formal prove termin csr 8 12 13 25 43 47 termin innermost contextsensit rewrit recent relat termin declar languag obj cafeobj maud 27 28 languag exhibit strong orient toward modular design program specif set achiev modular proof termin desir instanc borrow appendix c5 16 figur 1 show specif program use lazi list modul truthvalu nat introduc sort constructor boolean natur number modul idnat provid special builtin syntact ident oper 1 obj see modul ident appendix 1 definit binari predic meaning provid rule attempt top bottom quit reason assumpt obj implement point view nevertheless discuss termin program depend fact way obj truthvalu obj nat nat obj idnat protect truthvalu var obj lazylist list list list list assoc idr nil strat 0 obj inf protect lazylistnat list strat 1 0 obj take protect lazylistnat list list strat 1 2 0 figur 1 modular specif obj3 d3 16 modul inf specifi function inf abl build infinit object list natur number follow number n modul take specifi function take abl select first n compon lazi list given second argument take fi nalli modul length introduc function comput length finit list use strategi annot strat 0 list constructor con modul lazylist intend 1 allow real termin behavior program due disallow recurs call infsn definit inf 2 avoid useless reduct first compon list comput length instanc possibl obtain valu ss0 lengthtakes0infs0 without risk nontermin 2 although simpl program figur 1 provid claim justifi use result 31 30 terest applic modular result instanc wherea possibl prove termin program use automat techniqu prove termin knuthbendix polynomi recurs path order see 1 5 pretti simpl separ prove termin modul idnat inf take length modular result permit formal proof termin ultim reli use pure automat techniqu recurs path order see exampl 9 moreov automat tool prove termin cime 20 system 3 also use prove termin correspond modul way user allow ignor detail termin proof techniqu reli use softwar tool go detail let us mention exist alreadi abund literatur rewrit contextsensit relat strategi cf eg 3 7 9 10 11 40 2 preliminari 21 basic subsequ assum gener familiar basic theori term rewrit cf eg 1 5 given set pa denot set subset given binari relat r set denot reflex closur r transit closur r reflex transit closur r element rnormal form exist b r b nfr set r normal form say b rnormal form b rnormal form r b say r termin infinit sequenc a1 r a2 r a3 say r local confluent everi b c whenev r b r c exist b r say r confluent everi b c whenev r b r c exist r confluent termin say r complet throughout paper x denot countabl set variabl f denot signatur ie set function symbol f g fix ariti given map ar f n set term built x said linear multipl occurr singl variabl term view label tree usual way posit p q repres chain posit natur number use address subterm given posit p q denot concaten pq posit order standard prefix order given set posit p maxim p set maxim posit p wrt p posit q set posit denot empti chain set posit term post posit nonvari symbol denot posf posx posit variabl subterm posit p denot p ts p term subterm posit p replac symbol label root denot roott rewrit rule order pair l r written l r l r varl lefthand side lh rule l r righthand side rh tr set rewrit rule 3 avail httpcimelrifr lr denot set lhss r instanc l lh l rule redex set redex posit posrt tr r leftlinear l lr l linear term given trss let r r tr rewrit posit p written r rule l r r p post substitut tr termin termin say innermost rewrit written p innermost termin 22 contextsensit rewrit given signatur f map f pn replac map fmap f f f 1 arf 26 let mf mr determin consid symbol set fmap sake simplic iti appli replac map mf symbol signatur f assum whenev f f replac map specifi argument posit reduc symbol f accordingli set replac posit po set posit replac redex contextsensit rewrit system csr pair r r tr replac map contextsensit rewrit csr 26 contract replac redex rewrit r p po exampl 1 consid tr r 2 csr r correspond obj3 program figur 1 con replac see 27 detail correspond sinc 22 po takes00infs0 redex infs0 rewritten normal form call r normal form csr r termin resp local confluent conflu ent complet termin resp local confluent confluent complet slightli abus terminolog shall also sometim say tr r termin csr r termin innermost csr contract maxim posit replac redex r p maxim po r say r innermost termin termin 3 modularproofsoftermin csr transform subsequ assum basic familiar usual notion notat terminolog modular rewrit cf eg 45 33 17 38 39 4 say properti csrss modular disjoint constructor share compos union whenev two resp disjoint constructor share compos csrss r1 r2 2 properti union r1r2 1 properti 5 two csrss r1 1 disjoint signatur r1 di joint csrss r1 1 r2 2 constructor share share constructor symbol see definit 7 detail final csrss r1 1 r2 2 compos share defin symbol provid share defin rule cf 39 note disjoint trss share constructor share constructor trss compos termin csrss r usual prove demonstr termin transform tr r obtain r use transform 6 8 12 13 25 43 47 simplest trivial correct transform prove termin csrss ident r termin r termin everi replac map consid interact modular transform prove termin csr r imagin two main scenario first modular next transform mt first given r look decomposit modular eg disjoint constructorshar compos etc prove termin transform first transform next modular tm first transform r r look suitabl decomposit termin ensur termin r henc r second approach tm actual standard problem abl achiev modular proof termin first approach mt succe 1 st way termin impli termin entail termin 2 transform compat ie possibl modular criterion way termin would impli termin 4 relev work modular mention elsewher includ list highli incomplet 22 23 24 5 typic invers implic trivial 6 see httpwwwdsicupvesuserselpslucasmuterm tool muterm 10 implement transform inde first requir satisfi transform report literatur fact modular definit base individu rule symbol signatur disregard interact ie actual transform hand second requir fulfil mani transform gener accord review main nontrivi correct transform prove termin csr regard suitabl modular proof termin 31 contract transform let f signatur mf replac map contract transform 25 non replac argument symbol f remov new contract signatur f l obtain possibl reduc ariti symbol function drop nonreplac immedi subterm term construct contract term join also transform replac argument correspond oper f l csr r contract r exampl 2 consid csr r exampl 1 take accord definit dicult see given trss l also clear ms impli ms compo ie usual criteria modular preserv transform 32 zantema transform zantema transform mark nonreplac argument function symbol disregard posit within term 47 given z consist two part first part result r replac everi function occur left righthand side f fresh function symbol ariti f includ f occur nonreplac argument function symbol directli new function symbol use block reduct posi tion addit variabl x occur nonreplac posit lh l rewrit rule l r occurr x r replac activatex activ new unari function symbol use activ block function symbol second part r z consist rewrit rule need block unblock function symbol everi f f togeth rule activatex x problem activ new defin symbol defin rule new block symbol appear signatur mean start compos modul z z compos block symbol exampl 3 consid trss correspond modul inf idnat figur 1 view modul share constructor let exampl 1 compos problem z block present z note sinc rule activatex x present everi transform system compos best achiev appli transform instanc disjoint trss lose disjoint appli transform 8 ferreira ribeiro propos variant zantema transform prove strictli power zantema one see 13 transform problem regard modular 33 giesl middeldorp transform giesl middeldorp introduc transform explicitli mark replac posit term use new symbol activ given tr tr r activ mark r consist follow rule l r r f f markfx1 xk 12 unfortun unless r transform never yield pair compos trss note two dier ent compos system r share symbol defin symbol ie rule must coincid renam variabl henc r impli dier least constructor symbol howev eg f fr fs new rule markfx1 xk r gm gm sinc mark defin gm gm compos thu proven follow theorem 1 let r dierent compos csrss r gm gm compos note sinc disjoint trss share constructor share constructor trss compos follow giesl middeldorp transform provid possibl mtanalysi termin csrss least regard modular criteria consid 12 giesl middeldorp suggest slightli dierent present r mgm previou transform present symbol activ use anymor howev sinc regard modular conflict due use symbol mark new transform exactli problem giesl middeldorp also introduc transform complet ie everi termin csr r transform termin tr r c 12 given tr replac map proper top r consist follow rule see 12 detail explan l r r f f activefx1 x xk properc okc properfx1 xk unfortun dicult see regard mtmodular analysi termin due rule defin proper follow theorem 2 let r dierent compos csrss r c c compos 34 anontransform approach modular previou discuss show contract transform seem suitabl choic perform modular analysi termin csrss howev consid obj program figur 1 repres csr r exampl 1 note direct proof termin r possibl contract transform shown exampl 2 r l termi nate cours set modular use either hand note z exampl 3 kbotermin resp rpotermin therefor r z contain z z either kbo rpotermin moreov attempt prove termin r z use cime fail everi consid combin includ techniqu potenti deal nonsimpli termin trss like use depend pair togeth polynomi order proof criteria similarli termin r gm r c prove either use kbo rpo see 2 formal justif claim fact could even prove simpli termin see 31 hand result section show mt tm approach abl provid simpler proof termin r henc termin r remain dicult automat prove follow section show situat dramat chang use direct modular analysi termin csr 4 modular termin csr main section investig whether known modular result ordinari term cf eg earli pioneer work toyama 45 44 later survey stateoftheart modular rewrit like 33 37 19 extend contextsensit rewrit sinc tr r view csr r modular result trss cover specif case csrss name replac restrict yet interest case cours aris proper replac restrict paper concentr termin properti first studi obtain criteria modular termin csrss later well also consid weak termin properti surprisingli may help guarante full termin con fluenc condit gener set consid also extent certain nondisjoint combin ordinari term rewrit deep understand disjoint union case appear indispens properli treat nondisjoint union reason mainli focu case disjoint union practic purpos obviou nondisjoint combin much interest yet lesson learn nowaday fairli well understood modular analysi term rewrit suggest extrem care seemingli plausibl conjectur obviou fact 41 modular termin disjoint union section investig modular termin disjoint union csrss simplic kind global assumpt assum consid csrss finit result also hold system arbitrarili mani rule first posit result modular termina tion neg one 45 44 given rusi nowitch 41 show absenc collaps rule absenc duplic rule suce termin disjoint union two termin trss later middeldorp 32 refin gener criterion show suce one system doesnt collaps duplic rule care inspect proof actual show result also csrss even interestingli addit sourc gener aliz consid eg follow variant toyama basic counterexampl exampl 4 system termin csrss well disjoint union latter consequ theorem 3 toyama origin version union nontermin restrict collaps duplic care inspect two csrss interact show duplic rrule problem regard nontermin first two occurr x rh r1 rule becom block appli rule particular extract subterm two posit crucial toyama counterexampl work prohibit 3 observ natur lead conjectur blockedinact variabl rhss shouldnt count duplic definit 1 rule l r csr r non duplic everi x varl multiset replac occurr x r contain multiset replac occurr x l r nondupl rule cours order sensibl combin two csrss one requir basic compat condit regard respect replac restrict definit 2 two csrss r1 said compat replac restrict share function symbol ie disjoint csrss trivial compat theorem 3 let r1 two disjoint termin csrss let r union follow hold r termin r1 noncollaps ii r termin r1 nonduplica ting iii r termin one system non collaps nondupl proof sketch proof idea point differ tr case three properti follow immedi follow observ infinit r deriv s1 s2 minim rank ie minim counterexampl infinit mani outer reduct step b infinit mani inner reduct step destruct level 2 c infinit mani duplic outer reduct step b prove trss cf eg minim counterexampl approach 17 c prove 38 small adapt instead wellfound measur shown decreas name multiset rank special subterm level 2 take activ ie count special subterm activ posit modif proof goe result abl explain termin exampl 4 without use sophist proof method combin system fact case trss syntact condit noncollapsing nondupl turn special case precis consequ abstract structur theorem character minim counterexampl cf 17 7 csrss power result also hold show first need anoth definit r mean r provid r di joint definit 3 tr r said termin fptermin short rgx r said fptermin r gx x gx theorem 4 extend 17 theorem 7 let r1 two disjoint termin csrss union r nontermin one system fptermin system collaps proof quit nontrivi proof practic trss care inspect 17 reveal abstract construct result transform minim counterexampl disjoint union counterexampl one system extend free project rule fresh binari oper work alreadi shown trss abstract power structur result lot less straightforward direct indirect consequ corollari mention two corollari 1 termin modular nondeterminist collaps 9 disjoint csrss corollari 2 fptermin modular disjoint csrss next look modular weak termin properti 7 construct 17 involv trss must finit branch practic alway satisfi case infinit branch system handl 38 similar involv abstract function base underli idea extract relev inform deeper alien subterm 8 import properti later call ce termin 38 howev isnt realli tell natur slightli dierent properti 17 call termin preserv nondeterminist collaps precis rather lengthi prefer use fptermin sinc natur express rewrit system addit project rule free ie fresh function 9 csr nondeterminist collaps term reduc two distinct variabl finit number contextsensit rewrit step 42 modular weak termin proper tie weak termin properti clearli interest sinc full termin may unrealist need realli correspond comput process model certain process program inher non termin still one may wish comput normal form certain input guarante exist hand interestingli trss turn weak termin properti help order obtain modular way full termin properti certain assumpt definit 4 let r csr r said weakli termin wn weakli ter minat r weakli innermost termin win innermost contextsensit rewrit relat weakli termin strongli innermost termin sin innermost contextsensit rewrit relat strongli termin ordinari trss wellknown dicult prove weak termin weak innermost termin strong innermost termin modular properti cf eg 6 17 18 wrt disjoint union surprisingli hold gener csrss shown follow counterexampl exampl 5 consid disjoint csrss innermost termin fact even termin union r neither termin innermost termin ever r weakli innermost termin henc also weakli termin fa b ga b fga b ga b latter term r normal form even win wn modular gener csrss next illustr modifi version exampl 5 exampl 6 consid disjoint csrss fb x fx x x wn sin even sn union r neither win wn first innermost r step issu innermost reduc first argument f second one vice versa subsequ innermost step must use one first four necessarili yield cycl therefor fa b ga b doesnt innermost r normal form also r normal form care inspect goe wrong well inspect correspond proof contextfre case show problem come innermost redex point block inact forbidden posit becom unblock activ later condit need prevent phenomenon follow definit 5 conserv block csr r said conserv block cb short follow hold everi rule l r r everi variabl x occur l inact posit occurr x r inact 10 condit properti win wn sin turn inde modular csrss theorem 5 modul crit win wn sin win modular disjoint csrss satisfi cb b wn modular disjoint csrss satisfi cb c sin modular disjoint csrss satisfi cb proof b c prove structur induct case trss cf eg 18 19 condit cb ensur innermost term rewrit deriv construct proof induct step also still innermost ie proof goe csrss well 43 relat innermost termin ter minat trss power criterion known sin impli henc equival termin sn name equival hold local confluent overlay trss 18 via modular sin trss gave rise immedi new modular result termin com plete case contextfre rewrit cf 18 tunat equival criterion sin sn also extend csrss directli nontrivi proof requir care analysi subtl addit assumpt vacuous satisfi trss 11 definit 6 csr r said context sensit overlay system overlay csr overlay critic pair 12 l1 r2 r1 activ nonroot posit l 1 r lefthomo geneou replac variabl lhrv short everi replac variabl x l occurr x l r replac 13 formal everi rule l r r everi variabl x l po 11 similar claim recent made 14 without proof remain unclear whether claim without condit lhrv true rewrit rule variabl common nonvari posit l 1 l 1 l 2 unifi gener unifi observ definit overlay tr overlay csr vice versa consid csr r tr r 13 formal everi l r r everi x var l po theorem 6 local complet criterion let r local confluent overlay csr satisfi lhrv let innermost termin termin proof sinc proof use essenti approach construct one 18 trss focu dierenc problem aris due context sensit basic proof minim counterexam ple suppos infinit r deriv issu dicult see one construct infinit minim deriv follow form nontermin proper subterm termin henc complet sinc reduct step strictli p1p2 p finit often po sibl eventu must root reduct step idea transform infinit deriv infinit innermost deriv way reduct step still proper nermost reduct step use rule wherea reduct technic achiev trss transform uniqu normal complet subterm given term doesnt touch top part given nontermin term formal 14 t1 tn maxim termin henc complet subterm crucial subtl issu make sure guarante rule l r appli i1 still applic posit p1 p ie pattern l destroy case trss guarante overlay properti combin complet gener case overlay csrss may contextfre rewrit step pattern l strictli root would invalid argument account problem slightli modifi definit follow t1 tn maxim termin henc complet subterm activ posit ie maxim complet subterm inact posit left untouch almost done howev still problem name variabl part lh l rule l r tr case get l csrss may problem nonleft linear rule synchron normal within variabl becom imposs eg one occurr x activ anoth one inact consequ result transform term l would instanc l l r applic avoid need addit requir lhrv also 14 note normal perform account enabl synchron nonlinear vari abl adapt modif proof final goe tr case 15 clearli stronger local version directli impli global complet criterion corollari theorem 7 global complet criterion let r local confluent overlay csr satisfi lhrv r innermost termin also termin henc complet 44 modular complet combin previou result get anoth new criterion modular termin csrss fact also modular complet theorem 8 modular crit complet let r1 two disjoint termin csrss satisfi lhrv cb suppos r1 local confluent overlay disjoint union r also overlay termin confluent henc complet proof termin r clearli impli innermost termin r 2 theorem 5 thu yield innermost termin r r overlay csr definit notion similarli lhrv cb also hold r sinc syntact properti pure rulebas assumpt miss need appli theorem 7 local confluenc inde guarante critic pair lemma 26 theorem 4 pp 25 csrss turn crucial reli condit lhrv henc appli theorem 7 yield termin r togeth local confluenc show via newman lemma confluenc complet 45 extens constructorshar case case trss justifi hope mani modular result hold disjoint union also extend gener combin natur next step constructor share union concentr case constructor share csrss slightli gener set union compos csrss beyond scope present paper touch expect approach analysi also applic set alreadi trss technic rather complic definit 7 csr r set defin function symbol r r set constructor current counterexampl statement theorem 6 without lhrv assumpt current proof doesnt seem work without remain investig whether impos linear restrict would help observ also lhrv properti play crucial role known local global confluenc criteria csrss littl known prove local confluenc csrss without lhrv cf 26 c2 d1 d2 denot respect signatur set constructor defin function symbol r1 r2 1 said constructor share set share constructor rule l r r said share constructor lift rootr c 2 r said share constructor lift constructor lift rule 1 2 rule l r r said share lift rootr variabl share constructor r said share symbol lift collaps constructor lift rule r layer preserv share symbol lift trss main problem disjoint union aris addit interfer two system mix term interfer stem nonleft linear b rewrit step destroy lay ere structur mix term therebi potenti enabl new rewrit step possibl usual sever problem dealt synchron step howev b seriou issu main sourc almost problem disjoint union destruct step possibl via collaps rule cf eg theorem 3 4 constructor share union interfer fusion previous separ layer also possibl via share constructor lift rule basic exampl term rewrit follow variant toyama counterexampl exampl 7 two constructor share trss termin union admit cycl observ applic two constructor lift rule enabl applic rule previous possibl take addit sourc interfer account name besid collaps rule also constructor lift rule result disjoint union also extend constructor share case first let us look illumin exampl exampl 8 consid two constructor share csrss share constructor c system obvious termin union admit cycl observ csr r1 share symbol lift nondupl tr duplic csr wherea r2 constructor lift nondupl csr next gener result need addit definit definit 8 let f r f csr f f say f fulli replac n ariti f readi gener theorem 4 constructor share case cf 17 theorem 34 theorem 9 theorem 4 extend let r1 two constructor share compat ibl termin csrss share constructor fulli replac union r nontermin one system fptermin system share symbol lift ie collaps constructor lift proof sketch proof idea proof similar one tr case ie theorem 34 17 given minim counterexampl union ie infinit ground deriv minim rank let say top layer f1 abstract transform defin abstract concret syntact inner part term retain relev syntact f1inform may eventu pop fuse topmost f1 layer dierenc recurs definit abstract function use r instead 17 abstract f1inform collect brought uniqu syntact form via fresh binari function symbol g fresh constant prepar dicult show contain infinit mani outer reduct step b outer step translat correspond outer r1 1step use rule posit c contain infinit mani inner reduct step destruct level 2 henc must r2 2 step inner step destruct level 2 translat nonempti sequenc rewrit step use project rule g ie inner step destruct level 2 henc r1 1 r2 2step translat possibl empti sequenc rewrit step use r1 gx x gx observ without assumpt share constructor fulli replac properti b e need hold gener 17 c impli r2 2 share lift b e obtain infinit r1 gx x gx deriv mean r1 1 fp termin note case trss result hold finit csrss also finit branch one contrast disjoint union case doesnt hold infinit branch system cf 38 correspond counterexampl infinit branch constructor share trss roughli speak failur due fact non replac constructor contextsensit make abstract transform interfer reduct step nonmonoton way without assumpt statement theorem hold gener wit exampl clearli csrss r1 r2 exampl fptermin union even termin note share constructor c fulli replac next let us consid extens syntact modular criteria theorem 3 constructor share union theorem 10 let r1 two constructor share compat termin csrss let r union follow hold r termin r1 layerpr serv ii r termin r1 nonduplica ting iii r termin one system layer preserv nondupl proof proof essenti analog one theorem 3 one disjoint csrss exampl 9 readi give modular proof termin obj program figur 1 consid csr r exampl 1 constructor share compat union note rpotermin use preced true fals henc termin hand take rpotermin use preced take nil inf length 0 henc termin also polynomi termin easili prove use cime 20 system sinc layerpreserv nondupl theorem 10 conclud termin r accord 27 impli termin obj program exampl 10 consid two constructor share trss c ie termin use wellfound polynomi order togeth 12 giesl middeldorp show termin r1 prove exist transform complet one see section 33 howev proof termin r1 report literatur yet abl give simpl modular proof note r1 ter minat henc r1 r2 termin sinc r1 layerpreserv nondupl termin r1 theorem 10 trss theorem 9 whole number direct indirect corollari state concret modular criteria termin case constructor share union detail rather focu result along line section 42 44 cours neg counterexampl section 42 exampl 5 6 immedi extend constructor share case yet posit result regard modular weak termin properti win wn sin extend disjoint csrss constructor share one theorem 11 theorem 5 extend win preserv union constructor share csrss satisfi cb b wn preserv union constructor share csrss satisfi cb c sin preserv union constructor share csrss satisfi cb proof proof b c essenti theorem 5 name structur induct case analysi dierenc case share constructor root may topwhit topblack princip subterm common modular terminolog cf eg 17 constructor symbol root doesnt disturb reason proof condit cb ensur innermost term rewrit deriv construct proof induct step also still innermost ie proof go csrss well similarli obtain theorem 12 theorem 8 extend let r1 two constructor share compati ble termin csrss satisfi lhrv cb suppos r1 1 r2 2 local confluent overlay ing constructor share union r also overlay termin confluent henc complet proof analog proof theorem 8 use theorem 11 instead theorem 5 5 relat work far know result first deal analysi modular properti csrss properti csrss fairli well investig especi regard termin proof techniqu also concern properti verif criteria cf eg 25 26 28 27 29 31 30 47 8 12 13 15 14 recent interest develop includ particular approach giesl middeldorp prove innermost termin csrss via transform ordinari trss along line 12 well rpostyl approach 2 directli prove termin csrss without intermedi transform without recur ordinari trss comparison result approach latter one mention remain done 51 perspect open problem paper start systemat investig modular aspect contextsensit rewrit almost exclus focuss termin properti cours begin research done shown take addit complic aris contextsensit care account inde possibl extend coupl fundament modular result trss gener case csrss sens obtain result quit encourag also seem indic consider amount structur knowledg modular term rewrit taken contextsensit rewrit howev also turn coupl new phenomena ugli properti crucial interfer tradit approach trss particular turn syntact restrict cb lhrv replac play crucial role condit certainli consider restrict practic henc also thoroughli investig apart disjoint union case also shown obtain result disjoint union extend nice case share construc tor hand cours modular result alway help simpl exampl follow exampl 11 two csrss constructor share termi nate union r termin howev none modular result applic reader invit verifi intuit reason nonapplic gener modular result lie fact termin proof r must somehow exploit intern termin argument bit precis decreas first argument second rule lexicograph domin happen second argument make explicit consid also follow semant meaningless variant clearli r3 also termin howev union constructor share csrss r1 r3 becom nontermin nthsx failur modular criteria becom comprehens name syntact modular structur combin r3 former case got termin latter one nontermin thu unrealist expect applic gener modular result particular exampl yet consid still anoth system consid union termin compos csrss might wish conclud termin combin modular criterion seem hopeless word expect mani result hold constructor share csrss also extend union compos csrss addit may share defin function symbol provid share defin rule cf 39 extent also hierarch combin csrss cf eg 21 4 howev sinc modular known errorpron domain concret claim care verifi subject futur work 6 conclus present first step thorough modular analysi contextsensit rewrit paper mainli focuss termin properti result obtain encourag remain lot work done 7 r rewrit recurs path order contextsensit principl maud hierarch termin rewrit oper evalu strategi termin rewrit local strategi principl obj2 overview cafe specif environ algebra approach creat transform techniqu contextsensit rewrit system transform contextsensit rewrit system innermost termin contextsensit rewrit transform techniqu contextsensit rewrit system introduc obj gener su abstract relat restrict termin confluenc properti rewrit system termin confluenc properti structur rewrit system modular confluenc simplifi proof modular proof complet hierarch term rewrit system modular simpl termin term rewrit system share constructor termin combin compos term rewrit system modular noncopi term rewrit termin contextsensit rewrit rewrit termin ondemand rewrit termin obj program termin rewrit strategi annot transfinit rewrit semant term rewrit system termin canon contextsensit rewrit modular properti term rewrit system modular properti condit term rewrit system complet combin condit constructor system complet combin constructor system modular properti compos term rewrit system modular termin term rewrit system modular properti compos term rewrit system termin direct sum term rewrit system counterexampl termin direct sum term rewrit system churchross properti direct sum term rewrit system termin direct sum leftlinear complet term rewrit system termin contextsensit rewrit tr churchross properti direct sum term rewrit system counterexampl termin direct sum term rewrit system termin direct sum termrewrit system suffici condit termin direct sum term rewrit system modular simpl termin term rewrit system share constructor complet combin constructor system modular confluenc modular properti condit term rewrit system complet combin condit constructor system modular termin term rewrit system modular proof complet hierarch term rewrit system modular noncopi term rewrit modular termin italicritalicconsist leftlinear term rewrit system modular properti compos term rewrit system termin direct sum leftlinear complet term rewrit system rewrit principl obj2 contextsensit rewrit strategi termin rewrit strategi annot termin contextsensit rewrit rewrit contextsensit acrewrit transform contextsensit rewrit system transfinit rewrit semant term rewrit system termin canon contextsensit rewrit termin contextsensit rewrit recurs path order contextsensit hierach termin termin ondemand rewrit termin obj program overview cafe specif environmentan algebra approach creat verifi maintain formal specif network ctr beatriz alarcn ral gutirrez jo iborra salvador luca prove termin contextsensit rewrit muterm electron note theoret comput scienc entc 188 p105115 juli 2007 bernhard gramlich salvador luca simpl termin contextsensit rewrit proceed 2002 acm sigplan workshop rulebas program p2942 octob 05 2002 pittsburgh pennsylvania jrgen giesl aart middeldorp transform techniqu contextsensit rewrit system journal function program v14 n4 p379427 juli 2004 salvador luca contextsensit rewrit strategi inform comput v178 n1 p294343 octob 10 2002 salvador luca prove termin contextsensit rewrit transform inform comput v204 n12 p17821846 decemb 2006