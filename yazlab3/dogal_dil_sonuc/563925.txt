compact discrimin inform spatial tree cacheconsci behaviour data structur becom import memori size increas whole databas fit main memori spatial data rtree origin design diskbas data adopt inmemori applic paper investig small amount space inmemori rtree node use better make rtree cacheconsci observ mani entri share side parent introduc partial rtree store inform given parent node experi show partial rtree show per cent better perform tradit rtree also investig could improv search perform store descript inform instead standard minimum bound box without decreas fanout rtree partial static otre base otre store import part inform otre box experi show approach reduc search time line data 60 per cent b introduct latest survey shown avail cheap memori lead comput system main memori size order terrabyt next 10 year bernstein et al 1998 mani databas entir main memori databas technolog mean tradit bottleneck memorydisk latenc replac cpumemori latenc crucial factor databas perform therefor increasingli import databas index structur algorithm becom sensit cach behaviour recent research index structur includ sever paper address cachesensit index struc ture rao ross 2000 author propos pointer elimin techniqu btree node csbtree store contigu therefor pointer rst child node need store parent pointer elimin techniqu extend spatial data structur paper ross et al 2001 introduc costbas unbalanc rtree curtre cost factor cach behaviour given architectur model cost function curtre built optim respect cost function given queri model prefetch instruct combin multipl size node assist achiev better cach behaviour chen et al 2001 method improv space util compress entri rtree node get wider tree kim et al 2001 valu describ discrimin minimum bound box mbb rtree repres rel parent number bit per valu reduc map valu coarser repr sentat problem cachesensit data structur complex key address paper bohannon et al 2001 use partial key xed size paper investig make better use inmemori spatial tree node elimin unnecessari inform discrimin store descript inform minimum bound box tradit use approxim spatial object inmemori rtree typic small node size 3 7 entri natur node size determin size cachelin observ rtree substanti part inform store multipl time dierent level tree often entri node share least one side enclos parent bound box propos use partial inform rtree node show improv space util perform rtree introduc concept partial rtree inform hand parent children elimin multipl store valu valu add inform entri alreadi given parent store node also investig descript inform standard minimum bound box store use addit space compar standard rtree partial static otre base otre sitzmann stuckey 2000 store four valu thu increas fanout tree provid better discrimin inform thu improv search structur paper follow section 2 brie describ rtree talk inmemori use present partial rtree section 3 describ redund inform elimin aect insert search section 4 describ store descript inform entri partial otre present experiment result section 5 conclud paper section 6 summari outlook futur work section 7 use rtree main memori 21 rtree structur rtree variant guttman 1984 beckmann et al 1990 data structur ndimension data origin design index diskbas data rtree node number subtre tn 1 tn discrimin minimum bound box tid array four side valu pointer tit pointer point object identi node leaf node otherwis point anoth rtree node rtree built maximum number entri per node minimum number entri per node m2 rule determin shape rtree 1 leaf node appear level 2 everi node root node contain entri 3 root node least two entri unless leaf node insert entri node result overful node node split split algorithm linear quadrat complex present literatur guttman 1984 beckmann et al 1990 22 dierenc disk inmemori rtree concept rtree organ spatial object balanc search tree use minimum bound box mbb discrimin work well diskbas context io cost rtree directli depend number block access system small mainmemori competit compar spatial access method approach also transfer inmemori use rtree work similarli well respect cachebehaviour rtree whose perform depend number cach miss occur thu strength rtree concept diskbas inmemori use look size rtree node observ expect number entri per node inmemori case signicantli smaller diskbas case page size 4 kbyte 170 entri one node regular rtree 255 use csbtechniqu elimin pointer assum 4 byte long number inmemori rtree use cachelin 64 byte normal rtree node use 4 byte per number store 3 en tri csbpointer elimin techniqu en figur 1 memori layout csbrtree node increas fanout tree case assum byte per number 5 entri csbtechniqu 7 entri per node figur 1 show memori layout csbr tree node node consist pointer p contigu array child node counter n number entri entri e 1 e n entri e consist four side 1 4 child node csbrtree node store contigu refer th child node tp use base pointer tp ad oset convent rtree notat correspond tti th child node convent rtree node analyz characterist small rtree node make observ quit dierent larg rtree node use diskbas data discrimin mbb usual small entri share side enclos mbb increas fanout small node immedi eect height tree investig whether improv perform inmemori rtree make use two properti state elimin multipli store inform 31 analyz rtree small node idea partial rtree motiv small experi use simpl dataset line polygon see section 5 count mani discrimin rtree share one side parent use node small size result tabl 1 rtree 3 entri per node file side share parent avg l100000 3093 4835 1455 001 603 228 p10000 2735 2967 1872 740 1679 227 p50000 2774 2880 1009 773 1661 226 p100000 2779 2004 1912 775 1627 225 tabl 1 mbb side share parent mbb averag 225 23 side discrimin store per entri shown last column le least 83 per cent discrimin share least one side parent propos method inform parent discrimin use construct complet box show increas fanout rtree node result better search perform 32 compact rtree represent propos store side discrimin entri common parent consid object depict figur 2 o2 o3 figur 2 object rtree node dash line repres minimum bound box node contain three object o1 o2 o3 o1 share left upper side parent need store right bottom side o2 left side need store three side given parent discrimin four side o3 must store node entri share side parent structur rtree node partial inform therefor dynam tradit rtree node structur instead store four side everi discrimin store 0 4 side per entri structur shown figur 3 bn e1 valuesbit figur 3 node structur partial rtree partial rtree node contain pointer p counter n number entri node rst part node contain sequenc 4bit eld biteld correspond entri ascend order biteld indic side store node side inherit parent actual side store revers order start end node allow us make full use space rtree node minim copi comparison oper insert search tabl 1 show store 225 side per discrimin assum side 4 byte larg save correspond bit use 4 bit per entri extra inform still save 52 bit per entri partial rtree node base pointer sp number subtre sn 1 sn 4bit array sib indic side dier parent discrimin remaind node array side valu ss ssj j th side valu node correspond side j th true bit occur bit eld ignor fact array store revers order assum sl give number side store partial rtree node note actual store node sinc calcul number true bit 4bit eld 33 creat partial represent given rtree node parent discrimin pd creat correspond partial rtree node map entri partial inform use algorithm toparti ignor pointer inform eectiv unchang topartialt pd sn tn els sl return discrimin tid occur rtree node check side j versu parent discrim inat dierent correspond side parent set correspond bit sibj store side next avail space partial rtree node sl keep track mani side store total 34 extract inform partial r tree read discrimin partial rtree node need combin inform parent discrimin inform store node algorithm tocomplet convert partial rtree node togeth parent discrimin pd total rtree node ignor pointer inform tocomplet pd tn sn l 0 tid pd sibj l return set number subtre appropri count side initi bit eld examin turn discrimin initi parent discrimin dier ent side makr true bit next side valu copi rtree node return tocomplet partial rtree node ident rtree node given toparti construct inform lost import note search oper need restor entri complet rather use partial inform perform search describ build partial rtree insert procedur object partial rtree requir extra step compar standard rtree insert algorithm insert describ insert object discrimin e partial rtree discrimin pd algorithm eectiv rst convert partial rtree node visit correspond total rtree node perform insert convert back partial rtree node node insert pd e case extern els return sl sr dl dr replac ti tl tr sr 6 null els return sl sr dl dr insert object extern node convert node complet node simpli add entri naiv new parent discrimin pd e minim bound box includ pd e represent node depend parent discrimin represent entri new entri may chang might need recalcul exampl entri previous share 2 side parent might share 1 side new larger parent discrimin convert expand total rtree node back partial rtree node full test whether new represent larg node partial rtree node full sidebit great node togeth bit sn pointer new represent node larg node either space new entri addit caus entri longer node split use linear quadrat split algorithm propos literatur guttman 1984 beckmann et al 1990 algorithm split node two node con tainint entri avail space chang pass back parent node intern node rst select best subtre insert choos subtre whose discrimin show smallest increas area insert new entri insert continu select subtre result insert lower level use recalcul new represent node note need recalcul represent node node lower split also parent discrimin chang new represent might larger parent discrimin enlarg mean might split node intern level even new entri ad insert lower tree check split necessari new represent determin propag chang parent level algorithm shown convert partial rtree node rtree node back process eas explan implement convers discrimin avoid 36 search partial rtree search partial rtree need reconstruct complet entri determin whether search continu child tree instead need compar store side entri queri know inherit side match queri clari figur 4 imagin determin queri box q intersect parent discrimin pd entri discrimin e order determin check box q lie complet pd left pd etc comparison repres four dash arrow order determin q intersect e need consid whether lie complet e right sinc comparison alreadi made parent box pd henc two comparison requir respect side e share parent e pd figur 4 reduc comparison partial rtree search rtree node simultan scan biteld start node entri store back node store queri side way detect mismatch entri queri four comparison l 0 match true sibj ssl qdi match fals break match case entri intern node check whether store side clash queri use bit eld determin side store ss refer discrimin side know side store node parent discrimin therefor match queri entri match queri continu search level otherwis consid next entri entri extern node compar store side queri output entri match queri search algorithm show redund normal rtree occur store side also comparison partial rtree reduc number comparison search time reduc number side store entri store better inform partial rtree tri improv perform rtree elimin redund informa tion thu creat room entri x figur 5 approxim polygon rtree otre result increas fanout node alter nativ tri improv search behaviour tree use gain space store descript inform standard minimum bound box help lter unsuccess search path higher level tree paper sitzmann stuckey 2000 introduc otre constraintbas data structur store orthogon box addit standard bound box give better descript object tree 41 otre approach structur otre similar rtree dierenc store two minimum bound box per entri convent mbb addit mbb along axe v w leav origin angl 4 x axe valu v w obtain pand 2 thu object otre describ eight valu repres lower upper bound four axe x store otre discrimin array eight side valu lower upper bound x axi store side 0 1 side 2 3 refer axi side 4 5 v axi side 6 7 w axi shown figur 5 standard mbb depict solid line poor represent kind data although two shade polygon far intersect intersect test base mbb indic overlap inform object given describ object addit orthogon box dash line use intersect box lack overlap two polygon clear otre represent particularli use line data figur 6 compar area discrimin rtree otre line data sin co figur size otre bound box rtree bound box line data store 2d unit length line angl 0 8 horizont area bound box co sin otre hand area intersect bound box co sin sin 2 mean otre region bound line averag 2 time area rtree minimum bound box experi found otre inde improv accuraci search signicantli disadvantag otre becam also appar store eight number per entri instead four fanout tree signicantli reduc therefor overal search perform could slightli improv line data intersect queri otre rst present impract inmemori use typic 64 byte cachelin 2 entri node paper transfer otre approach inmemori data structur tri overcom weak otre store four descript side otre combin inform inform obtain parent discrimin 42 compact otre represent although elimin share side also reduc number side per discrimin otre av erag still need store four side per discrimin fanout otre therefor still smaller standard rtree therefor appli anoth techniqu elimin side otre discrimin add littl inform object describ partial otre base complet otre represent discrimin four descript side select storag entri less four side select discrimin share four side parent node structur similar partial rtree represent e4bit 4 number less valu figur 7 node structur partial otre node contain pointer p rst child node counter n biteld form rst part remain node partial otre case contain 8 bit indic side entri store node side store descend order back node case store 4 side per entri node inform share parent number side reduc compar rtree slightli space overhead one addit byte per entri use bit vector almost halv space requir complet otre 43 select descript data partial otre node creat start complet otre node enrti repeatedli discard least use inform represent contain 4 side algorithm otoparti equival otre toparti otopartialt pd sn tn jsibj sibj sl return otre discrimin rst elimin side share parent set bit sib fals long bit eld consid set contain 4 side repeatedli call eliminatesid delet side least import ie inform set side reduc set four side store side node set biteld eliminatesid choos side elimin caus least increas area discrimin area discrimin intersect mbb orthogon mbb discard side discrimin show least increas area side elimin figur show exampl elimin side depict minimum bound box orthogon minimum bound box describ object group object part gure side box store inform describ area shade grey store side shown solid line see lower upper bound x add extra inform bound given mobb alreadi elimin shown part b still describ shade area furthermor observ lower upper bound add littl inform object elimin discrimin result area slightli larger still tight approxim object 44 reconstruct otre represent search dynam insert might want reconstruct complet otre represent oppos partial rtree convers complet otre represent partial otre represent inform get lost b c figur 8 elimin side otre discrimin store approxim origin otre discrimin therefor partial otre represent less accur complet otre represent still descript rtree inform algorithm otocomplet convert partial otre node back complet otre node ie entri eight side although entri complet approxim origin complet otre represent partial rtree start copi parent discrimin replac valu side store actual valu function tighten propag tighten otre discrimin result discrimin approxim origin otre entri otocomplet pd tn sn l 0 pd sibj l tid tightend return although store inform otre discrimin may abl reconstruct inform side store mbb axe x also give bound axe v w vice versa thu tighten bound figur 9 illustr tighten mbb x mbb v w mobb mbb x determin tighter lower bound v mbb v w determin tighter upper bound tighter bound illustr dash line function tighten take discrimin side read node parent mobb xl xu mbb yl vl wl wl figur 9 tighten represent otre discrimin tightend return boundari x base valu v w orthogon box comput origin valu replac comput bound tighter process perform orthogon mbb 45 insert dynam partial otre insert entri partial otre ident insert partial rtree except function getrepresent tree new represent node base previou represent store tree partial rtree represent complet accur represent entri partial tree represent alreadi approxim entri creat new partial otre represent therefor produc anoth approxim alreadi approxim entri qualiti represent entri therefor deterior everi time represent chang recalcul dynam insert happen frequent accuraci object descript partial dynam otre therefor poor lead inaccur search involv high cost partial dynam otre therefor seem use practic although rst approxim accur descript entri provid inform rtree bound box therefor suggest use partial otre approach static environ partial static otre gener exist otre everi discrimin tree convert partial otre represent result partial otre take half space origin otre repres entri descript way rtree 46 build static partial otre static partial otre creat complet tree determin fanout partial otre given node size complet otre fanout creat node complet otre twice larg one partial tree read complet otre convert everi discrimin partial represent appli storesid algorithm result partial otre node given node size fanout complet larger tree appli approxim step discrimin tree accur 47 search partial otre search partial otre two dierent way dierent cost accuraci accu ratesearch shown read everi entri tree tri reconstruct complet otre represent use readentri intersecttid q case search algorithm travers tree reconstruct complet represent entri output leaf whose approxim intersect approxim queri object altern faster less accur search algorithm similar partial rtree search entri complet reconstruct side store compar queri reduc search time copi parent node copi entri side tighten perform fastsearch exactli analog search l 0 match true sibj ssl qdi match fals break match case search algorithm implement lter step creat set candid object might actual intersect queri renement step take candid object subsequ step check intersect queri object 5 experi 51 descript experi experi conduct sun ultra5 270 mhz 256 mbyte ram solari 26 level2 cach line architectur 64 byte implement partial rtree partial otre use csbtechniqu describ section 3 4 compar partial rtree normal rtree also use pointer elimin techniqu 64 byte cachelin tradit otre use node contain entri therefor includ result normal otre graph discuss tree use quadrat split algorithm tree test data consist set randomli construct line polygon data relat line data set contain number line approxim length 20 squar area 5000 polygon data set contain convex polygon 10 node edg length approxim 40 squar area 10000 polygon construct randomli creat 10 point use graham scan algorithm calcul convex hull experi measur perform partial rtree partial static otre compar search perform rtree test case queri tree 10000 random queri measur number node ac cess search time number result search time includ renement step 52 experiment result figur show averag number node per queri line data polygon data spectiv node access use rough measur cach miss ie worst case number cach miss line data partial rtree show reduct per cent number node access compar rtree accur partial otre reduc number node access 60 per rtree partial partial otre line rtree accur fast 100 26 21 25 26 1000 221 159 139 152 5000 1010 724 474 513 10000 1954 1403 869 933 50000 9194 6444 4010 4295 100000 18193 12701 7613 8105 figur 10 averag node access line data queri rtree partial partial otre poli rtree accur fast 500 279 209 264 266 1000 559 407 549 554 5000 2711 1982 2708 2732 10000 5305 3923 5303 5354 100000 51492 38728 51021 51516 figur 11 averag node access polygon data queri cent fast search partial otre still per cent less node access rtree polygon data partial rtree show similar improv 25 per cent partial otre hand reduc number node access margin 1 per cent measur search time per queri line polygon data obtain result shown figur 12 13 line data partial rtree improv normal rtree 25 per cent partial otre accur search show expens accur search although could decreas number node access signicantli gain time use perform expens opera tion search time partial accur otre cent higher rtree less accur fast otre search algorithm hand reduc search time 35 per cent show clearli although fast search slightli less accur search subtre faster execut time result best perfor manc polygon data partial rtree reduc search time 25 per cent compar rtree partial partial otre line rtree accur fast 1000 033 029 112 042 5000 192 151 384 149 10000 411 320 703 279 50000 1974 1448 3258 1306 100000 3872 2837 6164 2459 figur 12 averag search time line data rtree partial partial otre poli rtree accur fast 500 031 037 209 068 1000 072 075 422 144 5000 521 407 2136 751 10000 1089 850 4237 1519 50000 5410 4030 20394 7429 100000 11058 8410 40551 14784 figur 13 averag search time polygon data partial partial otre otre line rtree accur fast 500 1175 418 516 416 1000 2283 805 953 805 5000 11751 4155 4498 4155 10000 23417 8286 8809 8282 50000 116440 41177 43223 41131 100000 233360 82657 85969 82581 figur 14 total number result line data normal rtree partial otre improv rtree accur otre search suffer high comput cost show increas 250 per cent even fast otre search show slight increas search time show great improv line data addit orthogon bound box otre seem help make search polygon data ecient nevertheless shown figur 14 15 still reduc number hit lter step sig nicantli includ number result complet otre fanout measur best possibl reduct result compar rtree partial rtree number hit complet otre reduc number result per cent line data 25 per cent polygon data accur search partial otre still achiev 64 per cent reduct line data 23 per cent polygon data fast otre search slightli less accur still show reduct 64 per cent line data 20 per cent polygon data partial partial otre otre poli rtree accur fast 100 595 467 486 456 500 2833 2192 2287 2155 1000 5745 4422 4583 4371 5000 28474 22057 22875 21725 10000 56938 44033 45608 43419 100000 567204 436057 449977 430840 figur 15 total number result polygon data thousand compar search time search tree take renement step account renement step take set result obtain search tree lter step test actual intersect queri object object candid result set search time experi shown figur 16 17 rtree partial partial otre line rtree accur fast 500 031 031 079 042 1000 066 066 136 072 5000 422 347 485 263 10000 867 706 911 510 50000 4317 3446 4330 2402 100000 8713 6872 8169 4580 figur averag search time line data includ renement time rtree partial partial otre poli rtree accur fast 500 112 117 286 153 1000 248 240 586 320 5000 1491 1315 3008 1685 10000 3038 2678 5947 3350 50000 15334 13238 29043 16311 100000 figur 17 averag search time polygon data includ renement time number result chang improv partial rtree compar normal rtree similar search includ rene ment step otre hand rel perform rtree chang accur search otre show slight improv rtree larg line data le similar perform line data set fast search otre show reduct search time 60 per cent larger le polygon data even reduc number candid renement step make partial otre competit accur search search time 60 higher rtree still improv shown fast otre search polygon data 6 summari investig make better use space small rtree node inmemori applic mani entri share side parent introduc partial rtree store inform given parent node experi show partial rtree show better perform rtree random line queri line polygon data improv rang 10 per cent due higher fanout node show 4 compar 3 normal rtree also investig could make better use space store dierent inform promis yield better approxim entri partial otre base otre store import part inform otre box implement static version partial otre investig two search algorithm fast search algorithm still show enough accuraci show improv per cent line data without renement step per cent improv line data rene ment step polygon data search could improv static partial otre still show stabl perform similar rtree 7 futur work investig improv fanout tree store biteld encod use humanencod furthermor also experi static partial otre diskbas databas environ r asilomar report databas research improv index perform prefetch optim multidimension index tree main memori access make b tr rtree effici robust access method point rectangl asilomar report databas research make b tree cach consciou main memori optim multidimension index tree main memori access mainmemori index structur fixeds partial key improv index perform prefetch rtree costbas unbalanc rtree otre ctr jeong min shim seok il song jae soo yoo young soo min effici cach consciou multidimension index structur inform process letter v92 n3 p133142 15 novemb 2004