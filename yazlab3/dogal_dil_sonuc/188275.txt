faulttoler rout mesh architectur import distribut comput system abl rout messag aroundwhatev faulti link node may present present faulttoler routingalgorithm assur deliveri everi messag long path betweenit sourc destin algorithm work mani common mesh architecturessuch toru hexagon mesh propos scheme also detect thenonexist path pair node finit amount time moreov theschem requir node system know state faulti eachof link perform rout scheme simul squar andhexagon mesh vari physic distribut faulti compon isshown shortest path sourc destin messag istaken high probabl path exist usual found quickli b introduct processor distribut comput system commun send messag network fault network prevent deliveri messag unless network provid faulttoler rout howev distribut system pay littl attent potenti problem provid simpl effici rout algorithm algorithm usual work properli fault present network paper propos simpl effici faulttoler rout algorithm use mani meshtyp distribut system architectur obviou way handl faulttoler rout node keep track fault system node expect know state fail link algorithm propos 6 broadcast inform faulti compon node system inform messag alway rout shortest path two main problem approach first amount memori may need store inform especi system larg second overhead induc standard rout algorithm system allow rout decis made simpl circuitri use inform messag header allow optim like virtual cutthrough 4 speed messag deliveri avoid buffer intermedi node inform must consult messag must buffer messag deliveri delay therefor restrict situat node know state link work alreadi done faulttoler rout hypercub 1 3 5 7 algorithm either take advantag specif mathemat properti hypercub therefor inapplic mesh use form global inform want avoid author 1 present algorithm use global inform reli properti specif hypercub toler n fault n dimens hypercub date know faulttoler rout strategi meshtyp distribut system system requir node know condit faulti nonfaulti link rout scheme deliv messag success long path sourc destin requir assumpt number fault fault pattern exist path sourc destin node rout scheme abl detect finit amount time paper organ follow section 2 briefli describ two repres mesh architectur section 3 outlin faulttoler rout algorithm work case section 4 case algorithm work examin fix present section 5 perform algorithm simul sever mesh type paper conclud section 6 homogen mesh architectur mesh architectur provid number advantag distribut architectur hypercub mesh number link per node constant increas mesh size increas number link per node hypercub increas number node high number commun link correspond high throughtraff overload node larg system also number node mesh quadrat function mesh dimens wherea hypercub exponenti function hypercub dimens two mesh architectur consid paper toru hexagon mesh mesh sever characterist common mesh architectur must order rout algorithm work mesh must regular unwrap must planar wrap must homogen link associ vector one must abl chang order link vector path without chang destin one arriv node regardless whether one take two hop x direct follow one hop direct one hop x direct follow one hop direct follow one hop x direct addit assum rout done hopbyhop basi rout decis made intermedi node instead path chosen node messag origin assum messag system base storeandforward approach may employ techniqu virtual cutthrough 4 possibl order avoid overhead buffer messag individu node messag buffer intermedi node outgo link wish use busi assum node enough buffer space deadlock problem algorithm could use circuitswitch environ consid possibl paper 21 toru unwrap squar mesh dimens theta j contain ij node laid rectangular node along horizont edg j node along vertic edg wrap squar mesh becom toru right link node right edg mesh connect node left edg row downward link figur 1 hexagon mesh dimens 3 node bottom edg mesh connect node top edg mesh column node mesh four orient direct one think right link x direct downward direct left top link becom gammax gammay direct set shortest path two node express offset two direct exampl shortest path node 10 7 would defin offset 2 xdirect gamma1 ydirect given offset messag rout simpli send along link reduc one offset 22 hexagon mesh unwrap hexagon mesh hmesh set node laid hexagon grid central node insid seri nest hexagon hexagon one node edg one immedi insid edg dimens e mesh defin number node one side outermost hexagon shown 2 number node edimension hmesh 3e node unwrap hmesh six orient direct one correspond six link without loss gener link point horizont right thought x direct link 60 degre counterclockwis direct link 120 degre counterclockwis z direct remain three link point gammax gammay gammaz direct respect hmesh edg dimens e wrap use ctype wrap 2 produc homogen mesh exampl cwrap hmesh edg dimens 3 given fig 1 figur 2 detour hexagon mesh theta1 algorithm present 2 give shortest path two node cwrap hmesh return three integ x z repres distanc travel correspond direct least one offset guarante zero jm x e dimens mesh toru rout done simpli send messag along link reduc one offset detour structur system import factor rout algorithm faulttoler rout algorithm hypercub take advantag system uniqu mathemat properti logic take advantag simpl regular structur mesh system consid link failur sinc node failur model failur link toru hmesh provid obviou method detour around singl faulti link link form one side squar triangl whose side form conveni detour link fail exampl consid hexagon mesh fragment fig 2 link 0 fail messag could detour around fail link use path 7 0 path 11 0 recurs exampl link 7 also fail detour could 6 7 0 messag one two mode free mode fault obstruct path detour mode messag path block fault rout done node follow algorithm ftrout 1 messag detour mode current node closer destin node enter detour mode put messag free mode 2 messag free mode select set link along shortest path destin messag detour mode select link immedi counterclockwis link messag enter node 3 select link nonfaulti send messag along link 4 link node alreadi select test halt otherwis select link counterclockwis set previous select link go step 3 account algorithm simpl messag need keep track destin node current state free detour distanc destin messag enter detour mode one problem algorithm halt messag reach destin current node nonfaulti link way detect unreach destin intuit seem messag unreach destin get cycl follow theorem show messag attempt reach unreach de tinat form cycl also show cycl take place entir detour mode cycl includ node messag last enter detour mode link left node detect cycl simpl rememb node messag enter detour mode link exit node messag leav detour mode return node enter detour mode leav node link cycl reach destin lemma 1 given messag nonfaulti link node n nonfaulti link node n enter n detour mode remain detour mode leav n link enter link proof let first nonfaulti link clockwis one nonfaulti link node rest proof follow trivial descript algorithm 2 lemma 2 finit mesh messag never reach destin eventu reach point never return free mode proof hop messag make free mode result transit detour mode free mode reduc one minimum distanc messag destin call hop reduc hop hop reduc hop must made detour mode messag start finit distanc destin finit number reduc hop made messag messag reach destin theori undergo infinit number hop thu must last reduc hop path hop made messag last reduc hop reduc hop messag must detour mode 2 given show messag must cycl theorem 1 finit homogen mesh messag reach destin eventu cycl proof lemma 2 messag reach destin eventu reach point never return free mode consid messag reach destin enter detour mode perman lemma 1 clear know current node outbound link enough determin futur rout behavior messag outbound link determin next node inbound link next node therefor outbound link next node turn determin outbound link next node call current node select outbound link state messag lemma 1 clear given current state sequenc futur state determin alway whenev messag state sinc finit number node finit number avail outbound link per node finit number state messag reach destin pass infinit number state must therefor pass state twice within finit amount time clearli constitut cycl messag return observ return go sequenc state continu return indefinit sinc sequenc state follow alway 2 show cycl must includ node messag enter detour mode theorem 2 messag cycl return node messag enter detour mode exit node via link proof assum messag enter detour mode perman cycl node could appear tour cycl node appear time messag reach node must exit node via differ link use therefor step cycl may specifi node outgo link pick nodelink pair cycl find first occurr pair last free node call n 1 sinc messag detour mode lemma 1 show nodelink pair n 2 preced n 1 preced subsequ occurr n 1 therefor n 2 cycl argument appli n 3 node messag enter detour mode k link exit theorem follow 2 theorem 2 redefin step 3 ftrout detect cycl halt 3 select link faulti go step 4 messag detour mode enter detour mode node later left node select link messag cycl halt otherwis send messag select nonfaulti link point faulttoler rout algorithm may caus messag cycl presenc cycl increas likelihood deadlock sever reason first messag run tail fit condit theorem 2 therefor consid undeliver discard later consid modif rout algorithm tri deliv messag fit condit theorem 2 even modif deadlock still problem sinc messag system base storeandforward system may employ virtual cutthrough messag run tail may buffer allow tail catch 4 cycl theorem 1 2 show rout algorithm alway termin remain us show fail deliv messag reachabl destin section consid type cycl exist impli regard reachabl destin 41 type cycl cycl detect check current node outgo link node messag enter detour mode correspond outgo link howev tell us littl cycl inform gain exploit direct properti link mention section 2 link correspond vector vector correspond distanc usual 1 one mesh avail direct exampl toru right link vector length one x direct hmesh link degre counterclockwis vertic vector length one z direct figur 3 circl defin mesh vector sum path sum avail direct vector individu link path reduc appropri exampl toru path goe right twice twice left mesh vector sum gamma2i reduc sum import hmesh exampl 1x 0y 1z equival 0x 1y 0z mesh vector sum travers link kept messag cycl divid two type first kind cycl character zero mesh vector sum messag return node cycl start kind cycl call circl case fig 3 messag sent node 0 node 11 would travel along perimet isol mesh compon return node 0 circl indic mesh becom disconnect shown later case circl destin reachabl second kind cycl character nonzero mesh vector sum messag return node cycl start kind cycl call incis fig 4 show exampl incis messag sent node 0 node 1 would head upward node 8 9 17 5 12 back 0 incis necessarili indic mesh becom disconnect exampl show destin may fact reachabl path contain fault incis possibl unwrap mesh mesh vector sum cycl plane must zero rest section assum cycl encount faulti link ie faulti link check least cours cycl presenc fault doesnt affect cours cycl fix make reachabl destin unreach figur 4 incis 42 circl circl indic mesh becom disconnect messag trace perimet one connect compon easier work planar graph graph wrap may longer planar howev take advantag fact unwrap graph planar wrap graph homogen unrol graph form infinit planar graph result much like fig 4 extend infinit direct theorem 3 messag circl destin reachabl proof jordan curv continu nonselfintersect curv whose origin terminu coincid union edg cycl planar graph form jordan curv path circl thu form jordan curv except case link travers twice deriv true jordan curv connect midpoint faulti link order test rout algorithm curv run alongsid path cycl sinc doesnt intersect true jordan curv also properti link intersect faulti pass node jordan curv partit node planar graph two disjoint set intern node extern node path intern node extern node must cross jordan curv unwrap mesh singl jordan curv two disjoint set node wrap mesh infinit number jordan curv curv defin intern node finit set node extern node rest plane link cross jordan curv faulti faultfre path cross jordan curv thu faultfre path intern node node correspond set extern node remain show node cycl path destin node differ set assum node cycl intern node case extern node similar consid node cycl closest destin link connect node shortest path destin must faulti start cycl node end link extern node sinc side jordan curv also closer destin node cycl consid shortest path one node destin faulti link path one node connect edg must cycl sinc faulti link check cours cycl would therefor closer destin node cycl closest destin sinc exist fault free path extern node destin destin must extern node faultfre path node cycl destin 2 43 incis theorem 3 assur us messag circl path destin note incis possibl unwrap mesh system ftrout alway deliv messag reachabl destin exampl fig 4 show true wrap mesh system must modifi algorithm tri altern rout destin main difficulti decid altern rout tri subsect consid method select altern 1 endpoint vector path mesh vector sum path endpoint distanc path length endpoint vector definit 2 characterist vector incis endpoint vector singl trip cycl may easier think characterist vector actual vector direct length infinit plane represent use discuss circl lemma 3 two incis differ characterist vector cross proof lemma obviou next theorem need introduc concept subdivis graph graph g contain subdivis graph h node h correspond node g exist set nodedisjoint path p g everi link two node h path correspond node g essenti node h replac node g link h replac nonintersect path g theorem 4 faulti link caus messag go incis remov graph result graph planar proof graph planar contain subdivis either k 5 complet graph 5 vertic k 33 complet bipartit graph two set 3 vertic show subdivis k 5 k 33 exist origin mesh cross incis consid k 5 first least two path correspond edg k 5 must use wrap link mesh fact must two incis nonparallel characterist vector subdivis k 5 see take subdivis k 5 complet mesh cut select link result graph unwrap mesh choos link cut fewest possibl link subdivis k 5 cut result graph irregular mesh fragment much like fig 5 without wrap link result graph unwrap incis possibl howev cut link k 5 subdivis possibl circl inher planar circl subdivis k 5 untouch cut therefor disrupt incis singl incis number parallel one restor wrap link similar fig 5 graph remain planar sinc k 5 nonplanar must two nonparallel incis subdivis similar argument hold k 33 must two nonparallel incis subdivis k 33 sinc two nonparallel incis subdivis k 5 least one incis must nonparallel messag incis lemma 3 messag incis incis subdivis k 5 must cross similarli subdivis k 33 one incis must cross messag incis sinc subdivis k 5 k 33 cross messag incis must contain faulti link faulti link remov subdivis longer possibl sinc subdivis k 5 k 33 present mesh faulti link remov result mesh must planar 2 planar embed graph incis shown fig 4 shown fig 5 theorem 4 assur us messag incis system graph planar tell us diamet graph result graph much like figur 5 planar embed faulti hmesh fig 5 irregular mesh fragment surround wrap link one edg mesh fragment form incis distanc two edg may vari must bound properti origin wrap mesh definit 3 width mesh respect incis length shortest incis parallel width respect incis easi calcul x theta mesh either depend smaller whether incis parallel xaxi yaxi neither hmesh width alway 2e gamma 1 e edg dimens mesh easili verifi distanc two edg mesh fragment alway less width mesh respect incis width respect incis w path destin path destin one node cycl endpoint distanc less w modifi step 3 ftrout properli handl incis 3 select link faulti go step 4 messag detour mode enter detour mode node later leav node select link send messag select nonfaulti link otherwis messag cycl cycl incis messag incis comput w width mesh respect incis b node cycl find endpoint vector length less w correspond path destin c determin mani uniqu altern contain within vector elimin vector point destin replic messag send one copi altern sinc copi take shortest path destin recomput shortest path stick one modif guarante messag reach destin destin reachabl howev come price previou version algorithm usual implement dedic hardwar network interfac work involv modif usual requir attent node main processor caus consider overhead delay also anoth flag must maintain tell whether messag origin copi flag affect messag rout whether messag discard run incis practic unlik properli handl incis worth extra cost show next section incis rare occur larg number failur present 5 simul simul use determin perform ftrout simul done toru cwrap hexagon mesh rout algorithm use simpler version effort made find altern rout case incis done partli proper handl incis add great deal complex algorithm therefor simul partli intuit notion incis failur would extrem rare intuit born simul result simul link failur assum uniform random distribut node failur equival failur link result distribut link failur nonuniform test simul node failur result improv unexpect node failur result mesh regular fewer dead end blind alley found link failur simul result 8toru 5dimension hmesh plot fig 6 8toru 64 node system 128 link 5hmesh 61 node system 183 link fig 6a 6b plot percentag messag deliver percent actual deliv percentag link faulti upper line percentag messag deliver ie destin reachabl curv messag actual deliv simpl rout algorithm percentag messag percent link faulti deliver deliv messag vs percent percentag messag percent link faulti deliver deliv b messag vs percent f f f f f f f f f f f f averag number extra hop percent link faulti f 8toru c mean extra hop vs percent faulti 8toru f f f f f f f f f f f f f f f f f averag number extra hop percent link faulti f 5hmesh mean extra hop vs percent figur algorithm perform small system time indistinguish deliver curv fig 6c 6d show averag differ length path rout algorithm took shortest path percentag link faulti remain small reason number failur result show simpl algorithm work surprisingli well length littl differ deliver deliv curv agre intuit incis failur would rare path length encourag also curv begin climb steepli nearli 20 link fail note advantag gain hmesh 50 percent link per node deliver curv stay higher longer extra hop curv stay lower longer correspond curv toru result fig 6 good rel small system also ran simul 32toru 1024 node 19hmesh 1027 node result run plot fig 7 percentag messg percent link faulti deliver deliv messag vs percent percentag messag percent link faulti deliver deliv b messag vs percent f f f f f f f f f f averag number extra hop percent link faulti f 32toru c mean extra hop vs percent faulti 32toru f f f f f f f f f f averag number extra hop percent link faulti f 19hmesh mean extra hop vs percent figur 7 algorithm perform larg system graph much smaller system way improv larger system fig 7a 7b deliver deliv curv nearli indistinguish slight gap curv seen fig 6a 6b present also seen deliver deliv curv reach 0 faster smaller system larg result mesh diamet larger system path destin path much longer therefor like contain fault greater number path offset increas probabl path faulti fig 7c 7d see peak extra number hop curv increas faster mesh size unexpect sinc larger mesh opportun turn blind alley offset somewhat fact extra hop curv larg mesh begin rapid climb much later 6 conclus paper present faulttoler rout algorithm use multicomput mesh type interconnect work wrap unwrap mesh simul show messag deliv nearminim path even presenc larg number link failur almost case messag reach destin destin reachabl case messag reach destin algorithm determin within finit amount time rare case wrap mesh messag deliv destin reachabl happen unless fairli larg number fault present algorithm extend consider expens complex properli handl case consid squar hexagon mesh paper algorithm work mesh type requir unwrap version mesh planar graph wrap mesh homogen r adapt faulttoler rout hypercub multicomput address rout broadcast hexagon mesh multiprocessor hyperswitch network hypercub comput virtual new comput commun switch techniqu adapt packet rout hypercub distribut fault toler larg multiprocessor system faulttoler rout permut extrastag network tr hyperswitch network hypercub comput adapt packet rout hypercub address rout broadcast hexagon mesh multiprocessor adapt faulttoler rout hypercub multicomput distribut faulttoler larg multiprocessor system