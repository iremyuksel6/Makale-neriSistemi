billiard relat system bulksynchron parallel model two exampl show suitabl bulksynchron parallel bsp model discreteev simul homogen largescal system model provid unifi approach gener purpos parallel comput addit effici scalabl comput ensur portabl across differ parallel architectur valuabl featur approach simpl cost model enabl precis perform predict bsp algorithm show theoret empir system uniform event occurr among compon collid hardspher isingspin model effici simul practic current parallel comput support bsp model b introduct parallel discreteev simul billiard relat system consid nonobvi algorithm problem deserv attent literatur 1 5 7 8 9 11 13 18 24 23 25 current import class applic simul comput physic 6 7 10 14 15 20 21 eg hardparticl fluid isingspin model disk pack problem howev kind system view gener set mani move object 3 16 present everywher real life eg big citi transport problem navig system comput game combat model hand system consid suffici gener comput intens enough use sort benchmark time warp simul 5 23 25 wherea differ simul techniqu shown effici deal larg system 8 9 11 13 18 similar parallel softwar develop last decad preval approach simul system follow machin depend exploit inher parallel associ problem current howev one greatest challeng parallel comput establish solid foundat guid rapid process converg observ field parallel comput system enabl architectur independ softwar develop emerg rang scalabl parallel system 17 bulk synchron parallel bsp model propos provid foundat 22 wide rang ap plicat model alreadi shown success bridg role ie bridg hardwar softwar direct analog role play von neumman model sequenti comput last fifti year present bsp model implement differ parallel architectur share memori multiprocessor distribut memori system network workstat enabl portabl effici scalabl parallel softwar develop machin 19 4 first step bsp implement conserv optimist parallel simul algorithm far given 12 paper follow differ approach use conserv algorithm design pure bsp concept evalu perform two exampl isingspin model hardparticl fluid note potenti largescal system properti random even distribut event among constitu element believ howev two exampl exhibit suffici gener complex repres wide rang relat asynchron system eg instanc multipleloop network describ 8 system mention note synchron natur bsp model algorithm reminisc propos 8 18 2 bsp model detail descript bsp model reader refer 22 17 bulksynchron parallel bsp comput consist set processormemori pair ii commun network deliv messag pointtopoint man ner iii mechan effici barrier synchron subset processor special broadcast combin facil defin time step time requir singl local oper ie basic oper addit multipl local held data valu perform bsp comput character follow four paramet p number processor ii processor speed ie number time step per second iii l synchron period ie minim number time step network l g ring op op 2d array p p p p butterfli ologp ologp hypercub ologp o1 tabl 1 bsp paramet parallel comput elaps two success barrier synchron processor iv g ratio total number local oper perform processor one second total number word deliv commun network one second ie g normal measur time step requir sendrec oneword messag situat continu traffic commun network see tabl 1 taken 17 show bound valu g l differ commun network bsp comput oper follow way comput consist sequenc parallel super step superstep sequenc step follow barrier synchron processor point remot memori access take effect superstep processor carri set program thread follow perform number comput step set thread valu held local start send receiv number messag correspond nonloc read write request complex superstep bsp algorithm determin follow let work w maximumnumb local comput step execut processor let h maximum number messag sent processor h r maximum number messag receiv processor cost given time step altern g cost bsp algorithm simpli sum cost superstep architectur independ achiev bsp model design algorithm parameter n size problem p number processor also l g result algorithm effici implement rang bsp architectur wide differ l g valu exampl machin larg g must provid algorithm suffici parallel slack ie v processor algorithm implement p processor machin v p ensur everi nonloc memori access least g oper local data perform 3 basic bsp simul algorithm kind system relev paper ie statist homogen steadi state system event occurr randomli evenli distribut among constitu element simul bsp comput use twophas conserv algorithm follow pprocessor bsp comput whole system divid p equals region own uniqu processor event involv element locat boundari call border zone event bz event use synchron parallel oper processor conserv less effici version algorithm work iter compos two phase parallel phase processor simultan allow simul sequenti asynchron region ii synchron phase occurr one border zone event simul one processor one remain idl state improv effici algorithm exploit opportun simul p border zone event parallel synchron phase synchron phase use caus barrier synchron processor simul time exchang state inform among neighbor region system exampl studi state inform refer state particular atom particl locat neighbor region parallel phase everi processor simul event whose time less current global next bz event ie bz event least time among local next bz event held region processor thu global processor synchron issu period variabl time interv driven chronolog occurr bz event see pseudocod figur 1 assum n element evenli distribut throughout whole system region made np theta np element goal simul occurr event averag assum occur randomli evenli distribut among element ie mn per ele ment goal achiev bsp algorithm iter wherein iter simul total npe event parallel phase plu one event synchron phase name defin f fraction bz event occur simul show kind system interest lead show choos region suffici larg alway possibl achiev degre parallel strategi howev actual gain run time due parallel phase processor simul oap event sequenti crucial depend cost commun synchron among processor synchron phase cost depend particular parallel comput parallel prefix oper figur 1 realiz follow virtual tari tree construct among k processor own region next border zone event nbze take place event schedul occur time bz parallel prefix oper calcul minimum among set p local nbze distribut p processor minimum store processor parallel simul processor initialis end condit beginsuperstep simul event time less bz processor k read state neighbor region endsuperstep processor k simul occurr nbze endwhil figur 1 hyperconserv simul algorithm p processor leav root partial calcul absolut minimum distribut among processor go root leav cost oper valu depend paramet g l eg small number processor p could conveni set effici algorithm figur 1 improv attempt simul parallel border zone event per iter explain procedur exampl let us assum situat next bz event e region r r b respect bg identifi element region r schedul next bz event e occur time addit defin time element 0 r schedul bz event assum element relat due topolog system simul eg neighbor atom isingspin model describ note 0 necessarili time next bz event region howev simul e e 0 restrict order relat respect schedul time 0 must simul e e 0 otherwis first simul thu simul parallel two next bz event e e b otherwis must process sequenti bz event region lesser condit reach new bz event process region r nonbz event time interv two consecut bz event parallel simul region r initialis end condit beginsuperstep endsuperstep beginsuperstep simul event e k time k k k 0 0 simul next bz event e endif endsuperstep endwhil figur 2 conserv bsp simul algorithm simul well describ pseudocod region r shown figur 2 oper read valu 0 element 0 store region r b 4 isingspin system isingspin system model n theta toroid network everi node network atom magnet spin valu gamma1 1 atom attempt chang spin valu discret time given time atom current simul x random variabl neg exponenti distri bution new spin valu decid consid current spin valu four neighbor goal simul process occurr spin chang event sequenti simul system trivial sinc necessari deal one type event use effici eventlist administ time ik1 cost c 1 process event take place sequenti algorithm ologn even o1 calendar queue use 2 conjectur calendar queue o1 cost workload similar one produc isingspin system cost sequenti simul whole system n atom case parallel simul toroid network divid p p theta p p region np theta atom region total 4 gamma 1 atom border zone ie f region sequenti eventlist algorithm appli parallel phase although execut smaller number atom np cost c p process everi event parallel phase eventlist use iter cost parallel phase determin maximum number event simul processor period number hard determin optimist assum averag similar number event simul processor go assum total simul parallel phase execut simu lation total simul processor introduc constant error sinc averag maximum per iter consid also assum analysi f bz bz event take place simul sequenti hyperconserv algorithm figur 1 thu cost tp parallel simul given tc p g l cost commun g synchron l among p processor gener iter predict perform bsp algorithm need compar fastest sequenti algorithm problem aim defin speedup show exist bsp algorithm total cost smaller cost ts sequenti altern ie bsp algorithm consid comput cost also cost commun synchron among processor case isingspin model sinc c p c 1 replac c p c 1 obtain upper bound tc requir achiev 1 express show effect cost tc essenti absorb f bz c 1 given particular machin character paramet g l alway achiev speedup 1 suffici larg problem character paramet f bz exampl extrem situat system low c 1 simul ineffici chine say high g l way achiev increas parallel slack increas andor reduc p enough reduc effect tc p hyperconserv algorithm given figur 1 cost tc domin parallel prefix oper ie p isingspin system f exp tabl 2 result 8processor ibmsp2 effici algorithm shown figur 2 cost depend number q differ processor everi processor commun order decid whether simul next bz event name case 2d isingspin model q 2 isingspin model estim bound tc ensur 1 end substitut obtain log p hyperconserv algorithm hand less conserv algorithm assum p bz event process iter name obtain better bound note restrict case c lead bound oa oa p respect given bound g l shown tabl 1 see restrict upper bound tc possibl satisfi practic exampl run hyper conserv algorithm 2d array comput would requir one adjust p p tabl 2 show empir result obtain use run time olog n sequenti algorithm less conserv parallel algorithm figur 2 column 4 show fraction bz event per iter valu 10 mean one bz event simul processor best case column show averag among iter 5 harddisk fluid second exampl complex consist twodimension box size l theta l contain harddisk evenli distribut random assign veloc nonobvi problem consist simul total nddc elast diskdisk collis ddc event run time small possibl section show similar bound tc although much higher constant factor requir simul system bsp comput effici achiev effici sequenti run time whole box divid p n c theta p n c cell size oe theta oe diamet disk box period sens everi time disk run box boundari wall reenter box opposit point neighborhood disk whose center locat cell c compos cell c eight cell immedi period adjac c defin averag number disk per cell sinc oe disk collid 9 locat neighborhood reduc ologn cost associ simul everi ddc event take place sinc regard constant use olog n eventlist administ pend event collis disk move freeli ddc event eventu cross neighbor cell regard instant disk cross cell c neighbor cell c virtual wall collis vwc event time vwc event take place necessari consid possibl collis among disk locat new cell becom part neighborhood ie cell immedi adjac c adjac c 3 disk consid consid effect event defin averag number vwc event take place two consecut ddc event goal simul nddc ddc event actual involv process occurr event note 1 repres probabl next event take place given instant simul time ddc event wherea probabl next event vwc event perform simul necessari maintain disk updat inform time possibl collis disk j locat neighborhood also necessari period updat time cross neighbor cell virtual wall w comput done pairwis manner consid posit veloc two object involv event calcul outcom dynam set eventtupl repres disk j virtual wall w e indic ddc vwc event initi first futur event eventtupl predict n disk system new futur event success calcul simul advanc end name everi time disk suffer ddc event notic subset event calcul disk one realli occur simul obviou identifi event advanc differ method cope problem propos literatur 6 10 14 20 howev common principl use effici data structur maintain eventlist futur event store remov take place invalid earlier event ddc event et 1 store eventlist becom invalid anoth ddc event et place simul assum one event e actual maintain disk one minim time et eventlist event e becom invalid new event e 0 calcul consid complet neighborhood word everi ddc vwc invalid event retriev eventlist new collis calcul consid 9 locat neighborhood impli fairli slower sequenti simul also simplifi implement analysi note fraction invalid event retriev next event less 15 14 neglect effect analysi well initi simul enter basic cycl essenti compos follow oper pick chronolog next event event list ii updat state disk involv current event iii calcul new event disk one vwc event sever ddc event iv insert one event eventlist per disk involv current event oper cyclic perform end condit reach ie occurr border zone event case parallel simul run time sequenti algorithm estim follow constant factor neglect consid oper updat posit veloc disk calcul one ddc event singl oper cost o1 also everi disk necessari consid disk locat neighborhood calcul new ddc event calcul vwc take time o1 well cost associ eventlist log n per event insert wherea retriev next event neglig select event minim time disk also neglig sinc done new event calcu late give cost 2 3 log n simul ddc vwc event take place respect overal cost simul ddc take place notic c 1 includ cost vwc event take place two consecut ddc event total run sequenti algorithm use theori harddisk fluid deriv follow express 13 diskarea densiti system calcul tddc obtain ex pressionm even extrem condit eg ae 001 hand restrict oe impos lower bound opt replac practic choos effici simul term total run time space use cell parallel phase everi processor simul evolut disk locat region total p processor averag np disk everi region logarithm properti averag run time spent processor comput occurr two consecut ddc event region emphas harddisk system far difficult simul parallel isingspin model particular necessari cope problem event schedul particular disk may occur predict time disk hit neighbor disk earlier simul time necessarili lead one deal possibl rollback whole simul restart check point pass without error exampl algorithm figur 2 processor simul region r fetch time 0 region r b superstep might occur processor simul region r b chang valu 0 next invalid way work made processor simul r parallel phase ie superstep 1 cope prob lem maintain addit copi whole state simul state array one entri per disk entri keep disk inform posit veloc local simul time also use singl link list regist posit main state array modifi complet iter ie parallel phase plu synchron phase describ problem occur use link list make two state array ident repeat iter better estim 0 see 13 specif detail bsp simul harddisk fluid eg sinc bsp comput distribut memori system maintain region copi disk locat border zone neighbor region thu synchron phase also involv transfer inform among neighbor region properli updat state disk copi region simul processor made theta cell also defin bz cell 4 gamma 1 cell locat boundari everi region studi probabl case bz event take place calcul f bz function paramet harddisk system gener express f bz given pddcbz pvwcbz probabl ddc vwc event take place border zone re pectiv probabl calcul consid given disk probabl arbitrari cell direct also probabl calcul bit involv mani case consid briefli express given obtain studi two type bz event ddc vwc posit disk ei involv probabl disk locat bz cell wherea probabl disk locat cell neighbor bz cell vwc event disk cross cell probabl 14 wherea ddc event disk collid disk locat neighbor cell probabl 18 disk locat cell neighbor bz cell probabl disk locat corner box case probabl bz event 58 ddc 24 vwc disk locat corner last probabl 38 14 respect similar consider use disk locat insid bz cell vwc ddc probabl bz event bz weight sum case obtain 2 2 pm repres probabl ddc two disk locat cell probabl depend size cell oe purpos analysi enough say f bz run time tp parallel algorithm given tpp time spent simul npe event ddc vwc parallel phase sp time spent synchron phase simul one event plu cost tc associ commun synchron among pro cessor note npe event total 11 npe ddc event event evenli distribut among p processor name p processor simultan simul 11 npe p ddc event tpp given f bz tsp given name therefor last express made exig tc assum obtain log n tc show practic simul 1a bound tc similar isingspin system hand assum p border zone event simul iter less conserv algorithm f bz lead bound similar one ise spin model well import note calcul involv deriv speedup conserv sens mix bsp cost unit one defin harddisk fluid f exp tabl 3 empir result ibmsp2 basic unit cost updat disk state calcul new event disk much higher cost time step assum g l bsp model tabl 3 show empir result harddisk fluid simul less conserv algorithm run ibmsp2 parallel comput 6 final comment paper deriv upper bound cost commun synchron among processor order perform effici conserv simul two system exampl conclud possibl satisfi bound current parallel comput empir result confirm conclus believ exampl analyz paper exhibit suffici gener complex consid repres wide class system event take place randomli evenli distribut among constitu element first exampl simpl system link among neighbor region processor maintain fix whole simul ever cost event process system extrem low impos harder requir cost commun synchron upper bound much lower constant factor second exampl notic complex dynam natur system link among region chang randomli simul thu even hyperconserv algorithm figur 1 necessari cope problem rollback sinc schedul event associ disk necessarili occur predict time howev simul time progress statist rate region upper bound commun synchron similar first simpler exampl notic constant factor much higher second system exampl relax requir bound empir result obtain less conserv algorithm shown figur 2 run ibmsp2 could obtain speedup 1 hyperconserv algorithm figur 1 run similar condit emphas ever result obtain particular machin fairli high g l valu increas slack 5 disk per processor obtain algorithm figur 1 experi describ tabl 3 acknowledg author support univers magallan chile chilean scholarship r distribut simul time warp part 1 design collid puck calendar queue fast o1 prioriti queue implement simul event set problem discret event simul object movement interact green bsp librari per formanc collid puck simul time warp oper system part 2 asynchron behavior sector effici algorithm hardspher problem effici parallel simul dynam ise spin system effici distribut eventdriven simul multipleloop network simul collid rigid disk parallel use bound lag without time warp simul billiard similar system simul billiard serial parallel direct bsp algorithm parallel discreteev simul eventdriven hardparticl molecular dynam use bulk synchron parallel ef ficient algorithm manybodi hard particl molecular dynam empir assess prioriti queue eventdriven molecular dynam simul object orient c approach discret event simul complex larg system mani move ob ject gener purpos parallel comput ing parallel simul billiard ball use share variabl event schedul problem molecular dynam simul reduct eventlist molecular dynam simul bridg model parallel com putat distribut combat simul time warp model perform im plement distribut combat simul time warp oper system case studi serial parallel simul tr effici parallel simul dynam ise spin system calendar queue fast 01 prioriti queue implement simul event set problem implement distribut combat simul time warp oper system effici distribut eventdriven simul multipleloop network bridg model parallel comput simul billiard similar system discret event simul object movement interact gener purpos parallel comput effici algorithm manybodi hard particl molecular dynam effici algorithm hardspher problem parallel simul billiard ball use share variabl object orient c approach discret event simul complex larg system mani move object ctr wentong cai emmanuel letertr stephen j turner dag consist parallel simul predict robust conserv algorithm acm sigsim simul digest v27 n1 p178181 juli 1997