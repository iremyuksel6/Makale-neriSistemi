observ proof rewrit observ concept contribut better understand softwar correct order prove observ properti concept context induct develop hennick hennick formal aspect comput 34 1991 326345 propos paper emb context induct implicit induct framework bouhoula rusinowitch journal autom reason 142 1995 189235 proof system obtain appli condit specif allow mani rewrit techniqu refut fals observ conjectur reason assumpt method refut complet ie refut conjectur observ valid moreov proof system oper implement within spike prover interest comput experi report b introduct observ concept fundament formal method sinc prove correct program respect specic essenti abl abstract away intern implement detail data object view equal distinguish experi observ result idea semant specic must describ behaviour abstract data type view extern user due 14 though lot work devot semant aspect observ see 4 classic proof techniqu studi 3572524 even less implement recent increas interest behaviouralobserv proof project cafeobj see eg 27 new approach valid objectori softwar promot b jacob 1819 paper propos automat method prove observ properti condit specic method reli comput famili email address adelbouhoulasupcomrnutn adel bouhoula rusiloriafr michael rusinowitch preprint submit elsevi scienc well chosen context call critic context cover sens observ one famili appli induct scheme infer system basic consist extend term critic context simplifi result power rewrit machineri order gener new subgoal advantag approach allow also disprov fals observ conjectur method even refut complet interest class specic prototyp implement top spike prover 9 comput experi report given exampl treat fulli automat way program relat work hennick 16 propos induct principl call context induct proof principl behaviour abstract properti observ valid valid observ experi experi repres observ context context observ sort signatur specic distinguish subset sort speci observ henc properti valid observ experi valid correspond observ context context c view particular term contain exactli one variabl therefor subterm order dene noetherian relat set observ context consequ principl structur induct induc proof principl properti context observ sort call context induct approach provid uniform proof method veric behaviour properti implement system isar 3 ever concret exampl veric non trivial task requir human guidanc system often need gener current induct assert nest context induct achiev proof malcolm goguen 25 propos proof techniqu simpli hennick proof idea split signatur gener dene function prove two term behaviour equival come prove give result observ context built dene function provid gener verifi congruenc relat wrt behaviour equival proof techniqu ecient optim hennick proof bidoit hennik 6 investig rst order logic theorem prover use prove properti observ framework method consist comput automat special context call crucial context enrich specic automat prove observ properti method develop proof equat specic one sort observ side fail sever exampl cf stack exampl possibl comput crucial context bidoit hennick 7 also investig character behaviour theori allow prove behaviour theorem standard proof techniqu rst order logic particular propos gener condit innit axiomat observ equal transform nitari one howev gener automat procedur gener nite axiomat observ equal puel 30 adapt huethullot procedur proof consist wrt nal model lysn 24 extend bachmair method proof consist nal algebra framework proof techniqu base special complet procedur whose idea consid critic pair emerg posit rewrit rule equat also emerg posit equat rewrit rule approach restrict equat requir ground converg properti axiom order sound case ground converg need refut complet preliminari version paper present march 1998 2 comparison system studi admit power simplic techniqu instanc contextu simplic allow condit rule exist recent relat work 1226 instanc circular coinduct rewrit approach goguen rusu 12 also base comput special context howev context use gener refut approach also allow simplic techniqu sinc eg claus smaller current subgoal use induct hypothesi contextu rewrit avail unlik other also allow specic relat constructor section 3 introduc approach simpl exampl give section 4 concept algebra specic rewrit requir order describ observ semant section 4 induct scheme section 6 infer system section 7 final report comput experi prototyp implement section 8 futur extens techniqu sketch conclus 3 objectori exampl observ specic techniqu well adapt descript objectori system non observ sort use model state object state observ appli method attribut henc observ techniqu allow describ system abstract way hide implement detail object consid behaviour equival whenev produc reaction observ experi action transit messag consid instanc simpl class point given cartesian coordin class point privat distanc nat method creat incri decri assum point instanc initi locat origin 0 move method incrx incri resp decx deci increment coordin two accessor getx geti allow consult public attribut xy point instanc also come privat attribut whose valu distanc cover sinc creation distanc increment call incrx incri given two fresh instanc class p p prove behaviour equivalen although attribut ident behaviour equival dene use observ context context term describ experi appli object instanc getx observ context point class approach reli comput famili well chosen context call critic context famili cover sens observ context appli induct scheme point exampl critic context getxz point getyz point infer system basic consist appli critic context conjectur simplifi result rewrit rule order gener new subgoal instanc prove behaviour equival b b reduc proof getxb getya getyb subgoal simpli tautolog equat nish proof 4 basic notion assum reader familiar basic concept algebra specic 37 term rewrit equat reason mani sort signatur pair f set sort f set function symbol short mani sort signatur simpli denot f assum partit f two subset rst one c contain constructor symbol second set dene symbol let x famili sort variabl let f x set sort term stand set variabl appear term linear variabl occur vart empti ground term set ground term arbitrari nonempti set let fg f ariti n f function n pair fa call algebra carrier algebra sake simplic write denot algebra f fa nonambigu substitut assign term appropri sort variabl domain dene xg term denot applic appli everi variabl ground term ground substitut denot syntact equival object let n set sequenc posit integ term p ost n denot set posit express tu denot subterm posit u write ts u resp ts indic subterm posit u resp positionth top posit written let tu denot symbol posit u posit u term said strict posit posit u term linear variabl posit x occur otherwis u non linear variabl posit linear variabl term variabl occur depth term dene follow constant variabl otherwis denot transit irr exiv relat set term monoton impli ws u wt u stabl per instanti impli satis subterm properti f note condit impli noetherian multiset extens denot equat formula form l r condit equat formula follow form written v n call condit rule flg fr substitut precondit rule v n term l lefthand side rule rewrit rule c l r leftlinear l linear set condit rule call rewrit system constructor free root lefthand side rule let term c x call constructor term rewrit system r leftlinear everi rule r leftlinear dene jrj maxim depth strict posit lefthand side let r set condit rule let term u posit write tl u r tr u substitut condit rule v n r r 2 1 n exist c r c rewrit extend liter claus expect term irreduc normal form term r term ground reduc ground instanc reduc complet dene ground term root f reduc term c say r sucient complet symbol complet dene claus c express claus c horn claus 1 claus c posit claus tautolog either contain subclaus posit liter claus c logic consequ e c valid model e denot e say c induct valid e denot e ground substitut exist j say two term joinabl denot r v r v term v rewrit system r ground converg term u v joinabl whenev r 5 observ semant notion observ techniqu see eg 4 introduc mean describ observ given algebra variou observ techniqu propos literatur observ base sort 36312816 oper 1 term 34155 formula 333422 observ specic obtain ad observ techniqu standard algebra specic observ techniqu base sort easili extend oper observ semant base weaken satisfact relat inform speak behaviour properti data type obtain forget unnecessari inform object distinguish experi consid observ equal 51 context framework algebra specic experi formal repres context observ sort oper signatur specic thu show certain properti valid observ experi formal reason context observ sort oper notion context use close one use bidoit hennick 6 denit 51 context let f x term algebra signatur 1 context context nonground term c 2 distinguish linear variabl call context variabl c indic context variabl occur c often write cz instead c sort z variabl z sort context call empti context sort 2 applic context cz term 2 f x sort denot ct dene result replac z cz context c said applic applic context equat b equat 3 except varc denot set variabl occur c context variabl c context c ground 4 subcontext resp strict subcontext c context subterm strict subterm c context variabl next lemma give properti context lemma 52 let cz c 0 z 0 two context c 0 sort term sort 0 substitut z 62 dom notion context gener claus clausal context claus list context appli order equat negat claus set contextu variabl clausal context set contextu variabl compon denit 53 clausal context let set context c clausal context wrt claus list context applic e applic c c denot cc equal claus v dene composit clausal context way context denit 54 let n two clausal context 2 1n c applic c 0 composit c c 0 denot cc 0 clausal context fc 1 c 0 g clausal context induc order relat claus call context subsumpt sinc extens classic subsumpt order view gener function subsumpt rule dene 32 use redund elimin rstorder theoremprov denit 55 context subsumpt claus c contextu subsum c 0 exist clausal context c substitut c 0 c note strict part order wellfound argument standard subsumpt lemma 52 extend clausal context straightforward way lemma 56 let c c 0 two clausal context let c claus substitut contextu variabl c dom 52 observ valid notion observ valid base idea two object given algebra observ equal distinguish comput observ result comput formal context dene observ specic need specifi observ sort notion observ specic gener bobj hidden logic 12 cafeobj coher hidden algebra logic 26 well bidoit hennick observ logic 7 also allow nonbehavior oper expect result gener directli gener framework denit 57 observ specic observ specica tion sp ob quadrupl f e ob f signatur e set condit equat ob set observ sort follow assum observ specic sp ob given signatur specic stack sort nat stack observ sort nat constructor 0 nat nat nat nil stack nat stack stack dene function pop stack stack axiom toppushisi popnilnil poppushiss fig 1 stack specic exampl 58 specic stack figur 1 observ speci cation fnatg denit 59 observ context context whose sort belong ob observ clausal context clausal context whose compon context observ set observ context denot c ob sake simplic also denot set observ clausal context exampl 510 consid specic stack figur 1 innit ly mani observ context topz stack toppopz stack denit 511 term b observ equal c 2 c ob denot e simpli ob b exampl 512 consid stack specic figur 1 equat satis initi algebra howev intuit observ satis observ element occur pushtop pop prove formal consid observ context lemma 513 relat ob congruenc proof relat ob obvious equival relat us prove fa sucient show induct j immedi us show fa consid arbitrari observ context cz sort induct hypothesi deduc sinc observ context transit ind cfa induct step complet 2 main goal gener implicit induct proof observ framework particular sort observ theori obtain reduc standard initi one howev gener initi semant straightforward sinc specic admit condit axiom instanc let two ground equat assum e 6j ind may e v case v reason adopt semant close one dene p padawitz 29 denit 514 observ properti let c v n say c observ properti observ valid denot e ground substitut e ob congruenc e quotient algebra respect ob properti f e studi 29 particular shown f e nal class termgener visibl initi algebra proof system develop follow section dedic deriv valid algebra f e theorem 515 let c e proof simpl consequ fact f e 6 induct scheme purpos section introduc ingredi allow us prove disprov observ properti task amount gener check innit number ground formula valid sinc innit number instanc innit number context consid build ground instanc induct come play test substitut provid us induct scheme substitut critic context provid us induct scheme context gener possibl consid observ context howev cover context sucient prove observ theorem reason ground irreduc observ context rather whole set observ context follow denot r condit rewrit system denit 61 cover set cover set denot cs r nite set irreduc term ground irreduc term exist term cs ground substitut introduc notion cover context use schemat context note cover context need observ unlik crucial context 6 intuit idea use cover context extend conjectur top order creat redex obtain formula simpli axiom induct hypothesi denit 62 cover context set cover context set cc minim inclus set context ground irreduc context c ob z substitut varc c subcontext c ob cover context set specic stack fz nat topz stack popz stack g context pushi z stack belong cover context set sinc z stack poppushi z stack reduc note usual innit mani possibl cover context set instancefz nat topz stack toppopz stack poppopz stack g also cover context set similar notion call complet set observ propos hennick 17 recent anoth close concept introduc goguen et al 12 cover set cover context set fundament correct method howev help us disprov non observ valid claus purpos introduc new notion critic context set use test set dene 8 follow rene cover context set prove behaviour properti also disprov non valid one need rst introduc follow notion context c quasi ground reduc ground substitut term strongli irreduc none nonvari subterm match lefthand side rule r posit claus c po w n strongli irreduc c po tautolog maxim element fa wrt strongli irreduc r induct posit f 2 f posit p exist r rewrit rule lefthand side ft posit ft function symbol nonlinearvari subterm given r set induct variabl term subset variabl whose element occur subterm form fs term 2 1n induct posit f notion induct variabl extend claus expect test set test substitut dene simultan denit 63 test set test substitut test set cover set follow addit properti instanc ground reduc term test substitut match lefthand side r ii instanc posit claus c po test substitut strongli irreduc c po induct valid wrt r test substitut claus c instanci induct variabl c term taken given test set whose variabl renam follow denit introduc notion critic context set critic clausal context denit 64 critic context set critic clausal context critic context set cover context set posit claus c po cc po strongli irreduc test substitut c po c clausal context c po wrt c po observ valid wrt r critic clausal context wrt claus c clausal context c whose context belong exampl 65 exampl 1 set critic context r fpopz stack z nat topz stack g test substitut critic context set permit us refut fals conjectur construct counterexampl denit 66 provabl inconsist say claus v n j provabl inconsist exist test substitut clausal critic context c 1 induct theorem wrt r strongli irreduc r provabl inconsist claus observ valid theorem 67 let r ground converg rewrit system let c provabl inconsist claus c observ valid proof let c v n j provabl inconsist claus exist critic context c test substitut r strongli irreduc r denit 64 j observ valid wrt r r 6j ob c use 2 exampl 68 consid stack specic figur 1 let us check whether conjectur observ valid appli rst induct step obtain 1 2 these subgoal simpli r obtain 3 4 equat appli induct step obtain 5 topnilx 6 toppushyzx equat simpli r provabl inconsist sinc r ground converg conclud observ valid 61 comput test set comput test set test substitut condit specica tion decid axiom sucient complet constructor speci set uncondit equat see 2321 unfortun algorithm exist gener case condit specic howev 8 procedur describ comput test set axiom sucient complet arbitrari specic constructor 62 comput critic context let us rst introduc follow lemma give us use character critic context set lemma 69 let r leftlinear condit rewrit system let cc cover context set context cz variabl cz appear depth greater equal jrj 1 exist observ context c ob c ob c strongli irreduc cc critic context set r proof let c posit claus cc strongli irreduc test substitut c c critic clausal context c let us prove c observ valid c 2 c ob denit 63 conclud cc induct theorem therefor c observ valid assum c 62 c ob assumpt exist c quasi ground reduc contain observ strict subcontextg c quasi ground reduc c contain observ subcontext variabl includ context one c occur jrj g repeat c quasi ground reducibleg cc output cc fig 2 comput critic context observ clausal context c ob c ob c strongli irreduc let us show c ob cc strongli irreduc assum otherwis exist rule lefthand side l appli c ob cc posit p everi nonvari posit p 0 l pp 0 nonvari posit c ob c sinc variabl cz appear depth greater equal jrj 1 sinc l linear dene substitut everi variabl x occur posit q l x c ob cpq c ob cp l contradict assumpt c ob c strongli irreduc c ob cc strongli irreduc denit 63 c ob cc induct valid thu r 6j ob c 2 us present method construct critic context idea procedur follow start non quasi ground reduc observ context depth smaller equal jrj construct context embed one observ context give non quasi ground reduc observ context quasi ground reduc cosemidecid condit rewrit system argument employ ground reduc 20 procedur amount enumer ground instanc term check reduc prove reduct ground reduc quasi ground reduc decid equat system proposit 610 given set non condit rewrit rule r context cz decid whether cz quasi ground reduc proof let us rst introduc new constant symbol 62 f let red l x unari predic true ground term x contain subterm instanc l context cz quasi ground reduc instanc cd substitut satisfi 8x x 2 reduc r denot g set ground term contain one one occurr note g regular tree languag henc quasi ground reduc cz express rstorder formula red red l set lefthand side r g formula decid thank theorem 418 caron et al 10 2 follow proposit also use test context quasi ground reduc proposit 611 let r equat rewrit system dene function complet dene free constructor given context form ft complet dene function constructor term z appear induct posit f cz quasi ground reduc proof assum exist ground instanc cz form irreduc r consid substitut z ground irreduc constructor term ft ground irreduc assum otherwis exist rule lefthand side l appli ft posit z cz posit p appear function symbol l therefor p induct posit f contradict assumpt p induct posit f ft ground irreduc contradict assumpt f complet dene 2 theorem 612 let r rewrit system cc result applic procedur given figur 2 1 cc cover context set r 2 r equat leftlinear cc critic context set r proof rel easi show cc cover context set r assum r equat leftlinear let us prove cc also critic context set r construct nonobserv context cc variabl depth greater equal jrj sinc r equat non quasi ground reduc context necessarili strongli irreduc hand r leftlinear variabl nonobserv context occur jrj context cz exist c 2 cc show exist observ context c ob c ob c strongli irreduc proof done induct specic list sort nat bool list observ sort nat bool constructor 0 nat nat nat nil list insert nat list list true bool fals bool dene function union list list list nat list bool eq nat nat bool axiom unionnill inxnilfals eqxytru eqxyfals eq00tru eq0sxfals eqsx0fals fig 3 list specic exampl 613 consid stack specic figur 1 stack pushi z stack g critic context set r exampl 614 consid list specic figur 3 list g list x insertx z list g list xg cover context set r fact unionx z list quasi ground reduc ini unionz list x quasi ground reduc sinc list n il irreduc ini insertx z list quasi ground reduc possibl comput critic context set case r condit rewrit system sucient appli procedur given figur 2 comput cover context set cc check non observ context c 2 cc exist observ context c ob c ob c strongli irreduc exampl 614 inx unionz list strongli irreduc conclud list unionz list xg critic context set r 7 infer system infer system use see figur 4 base set transit rule appli set conjectur prove h set induct hypothes initi set condit rule r orient well found order ideriv sequenc state say ideriv fair set persist claus ji context induct perform implicitli gener rule claus extend critic context test set extens simpli either delet contextu simplif case simplif result conjectur collect simplif illustr case reason simpli conjectur condit rule contextu simplif view power gener contextu rewrit 38 allow simplifi observ properti rule context subsumpt appear use manipul non orient conjectur ideriv fail exist conjectur rule appli ideriv succe conjectur prove exampl 71 let us take signatur axiom specic figur 1 let us add new function elem nat bool follow axiom assum observ sort bool test set critic context g easili show topi induct theorem observ valid sinc ground term topt reduc either 0 s0 note exampl relat constructor handl relat approach 1226 theorem 72 correct success ideriv let fair ideriv succe r proof suppos r 6j ob e 0 let set minim element wrt fc j ground irreduc substitut r 6j ob cg note 6 sinc r 6j ob e 0 well found let c 0 claus c 0 minim wrt context subsumpt exist claus irreduc ground substitut c r 6j ob c consid observ context c ob r 6j c ob c without loss gener assum c ob irreduc otherwis simpli r irreduc one properti show rule appli c show deriv fail sinc c must persist deriv fair hypothesi henc let us assum c rule appli c discuss situat accord rule appli everi case shall deriv contradict order simplifi notat write e e j h h j case simplif suppos rule case simplif appli c sinc r exist k r r 6j c ob cl r r 6j ob c k hand c contradict sinc prove exist instanc claus observ valid smaller c contextu simplif suppos rule contextu simplif appli c without loss gener assum c context built replac l context variabl z let c ob c 1n1 ob ob c minim counterexampl r ob henc r ob c r conclud hand c gener suppos rule gener appli c sinc substitut ground irreduc exist ground substitut test substitut besid sinc r 6j ob c consid irreduc ground observ context c ob r 6j c ob c sinc c ob ground irreduc exist critic context c c 0 2 c ob c delet appli r contextu simplif case simplif appli cc follow reason use proof sound contextu simplif case simplif deriv contradict context subsumpt sinc r 6j ob c c contextu subsum axiom r exist c fcg r 6j cc 0 c empti context sinc c minimum subsumpt order therefor c 0 62 e n fcg hand c 0 62 h otherwis rule gener also appli c contradict previou case henc rule appli c delet sinc r 6j ob c c tautolog rule need consideredtheorem 73 correct disproof let ideriv exist j disproof appli r 6j proof exist j disproof appli theorem 67 conclud r 6j prove r 6j sucient prove follow claim let ideriv step 8i j r simplic rule equat use simplic occur therefor observ valid r assumpt henc e j1 observ valid r gener c everi auxiliari equat use rewrit instanc c critic context c test substitut either r observ valid r subsumpt delet e j1 e j therefor e j1 observ valid r 2 consid boolean specic specic assum exist sort bool two free constructor ftrue falseg everi rule r type v n conjectur boolean claus ie claus whose neg liter complet dene symbol r f strongli complet 8 wrt r rule whose lefthand side ident renam r say r strongli complet f 2 f strongli complet wrt r theorem 74 refut complet let r condit rewrit system assum r ground converg strongli complet let e 0 set boolean claus r 6j deriv issu case simplic r contextu simplic c context subsumpt contextu subsum c delet c tautolog gener critic context c test substitut applic delet contextu case simplic disproof c provabl inconsist fig 4 infer system proof theorem 72 rule permit us introduc neg claus case simplif sinc axiom boolean precondit e 0 contain boolean claus claus gener ideriv boolean disproof appli ideriv exist posit claus c gener appli c therefor exist critic context c test substitut r 6j cc moreov cc match lefthand side r otherwis contextu simplif rule case simplif rule appli cc sinc r strongli complet consequ c provabl inconsist claus therefor r 6j 8 comput experi prototyp written object caml top spike design prove disprov behaviour properti condit theori nice featur approach need modic implicit induct system spike get oper procedur observ deduct also optimis strategi avail spike also appli observ proof system rst step proof session comput test set critic context second step check ground converg set axiom step succeed refut fals behaviour properti comput fail user introduc cover set cover context preliminari task proof start exampl 81 prove automat pushtop behaviour properti stack specic see figur 1 note exampl fail approach 6 sinc possibl comput automat set crucial context two stack top necessarili equal approach 16 introduc auxiliari function iter pop nat stack stack iter popn iter time pop easi pop unari function iter pop dene iter pop0 iter popn pop prove properti context form topiter popx cz stack howev schemat context could complic case function ariti greater two process seem easi automat gener approach 25 problem remain us describ proof prover comput rst test set r induct posit function necessari induct proof also comput critic context comput done begin proof test set r critic context r induct posit function applic gener subsum nil r delet subsum subsum delet subsum initi conjectur observ valid r exampl 82 consid specic list figur 3 theorem automat prove test set r list critic context r induct posit function applic gener delet delet subsum true r simplif simplif delet applic gener delet delet delet subsum true r simplif fals r delet subsum true h4 initi conjectur observ valid r way prove follow conjectur 9 conclus present automat procedur prove observ properti condit specic method reli construct set critic context enabl prove disprov conjectur reason hypothes shown procedur refut com plete non observ valid conjectur detect nite time shown potenti context induct techniqu reason object behaviour especi renement implement prove sever exampl complet automat way cover context wrt denit 62 garante sound proce dure howev cover context comput procedur may contain unecessari context exampl 3 unionz list x useless observ plan rene notion cover critic context order select need context also plan extend observ techniqu term formula near futur plan extend approach verifi properti concurr distribut object system acknowledg thank dian bahrami refere help comment r prove correct algebra speci observ proof critic context prove correct algebra implement isar system behaviour approach algebra speci toward adequ notion observ prove observ theorem lp behaviour theori proof behaviour properti autom theorem prove test set induct implicit induct condit theori encompass properti automata constraint fundament algebra speci rosu k toward algebra semant object paradigm speci implement parameter observ speci context induct proof principl behaviour abstract algebra implement structur speci reason class objectori languag logic model tool decid quasireduc autom inductionless induct use test set test ground coreduc properti termrewrit system extend bachmair method proof consist prove correct test toward autom veri cation behaviour properti verifi behaviour speci initi behaviour semant algebra speci comput horn claus theori proof behaviour valid condit equat observ equival algebra speci toward formal develop program algebra speci toward formal develop ml program foundat methodolog final algebra semant data type extens algebra speci implement contextu rewrit tr observ equival algebra specif toward formal develop program algebra specif implement revisit comput horn claus theori initi behavior semant algebra specif theoremprov resolut superposit autom inductionless induct use test set algebra specif toward adequ notion observ test ground coreduc properti termrewrit system extend bachmair method proof consist final algebra behaviour approach algebra specif toward algebra semant object paradigm behaviour theori proof behaviour properti autom theorem prove test set induct fundament algebra specif reasonong classess objectori languag specif observ formula observ satisfact relat prove correct algebra specifi softwar prove correct algebra implement isar system prove observ theorem lp behaviourrefin coalgebra specif coinduct correct proof implement parameter observ specif toward formal develop ml program encompass properti automata constraint implement contextu rewrit verifi behaviour specif cafeobj environ circular coinduct rewrit specif applic program abstract data type ctr abdessamad imin michal rusinowitch grald oster pascal molli formal design verif oper transform algorithm copi converg theoret comput scienc v351 n2 p167183 21 februari 2006 grigor rosu implement behavior rewrit proceed 2002 acm sigplan workshop rulebas program p4352 octob 05 2002 pittsburgh pennsylvania manuel martin closur properti class behavior model theoret comput scienc v379 n12 p5383 june 2007