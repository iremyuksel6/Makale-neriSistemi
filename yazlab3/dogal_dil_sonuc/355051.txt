autom systemat test constraintbas interact servic constraintbas languag express concis way complex logic new gener interact servic applic bank stock trade must support multipl type interfac access data includ automat speechrecognit interfac input may provid order user servic studi paper systemat test eventdriven applic develop use languag show applic test automat without need manuallywritten test case effici take advantag capabl take unord set event input b introduct today becom commonplac modern interact servic person bank stock trade one interfac access data exampl mani bank allow custom access person bank servic autom teller machin bankbi phone interfac webbas interfac furthermor telephonebas servic start support automat speech recognit natur languag understand ad flexibl interact user multipl interfac provid servic duplic seriou problem may differ servic logic ie code defin essenc servic everi differ user interfac servic moreov support natur languag interfac servic must allow user consider flexibl way input servic request thu desir program idiom method servic provid follow capabl allow request phrase variou way eg need inform provid order prompt miss inform correct erron inform lookahead allow user speak sever command backtrack earlier point servic logic constraintbas languag foundat overview see 16 19 provid suitabl paradigm support requir flexibl user input exampl languag dialogu manag includ method base frame 1 form 9 15 approach base andor tree 22 sisl sever interfac singl logic 4 power express constraintbas languag allow construct succinct program complex reactiv behavior motiv need reliabl yet costeffect test techniqu tool suitabl check correct businesscrit applic develop use languag studi paper automat effici check tempor properti program written constraintbas languag interact servic first present nondeterminist algorithm systemat test logic program constraintbas languag possibl use arbitrari host languag code potenti elabor access extern data databas lookup full program make use classic constraint satisfact model check techniqu problemat consequ algorithm assum usual done test user specifi fix set possibl data valu user input algorithm dynam detect runtim set input event applic current readi accept use inform drive execut applic send input select nondet minist use conjunct systemat statespac explor tool verisoft 11 support special system call call vs toss simul nondetermin nondeterminist test driver systemat gener possibl behavior program behavior monitor check userspecifi safeti properti algorithm thu elimin need manuallywritten test case automat applic program test techniqu made possibl structur interfac eventdriven constraintbas program provid environ unfortun express constraintbas languag make algorithm quit ineffici instanc servic await 10 input user particular order 10 differ path collect input howev flip side abil accept unord set input provid order inabl constraint languag observ alli distinguish permut unord set input thu gener sequenc alway necessari check tempor properti consid second algorithm make systemat test significantli effici exploit observ take advantag form symmetri induc constraint abil specifi set input event rather singl event basic problem idea discuss work common determinist constraintbas languag domain interest concret present context sisl languag mention earlier sisl includ determinist constraintbas domainspecif languag develop eventdriven reactiv servic implement librari java sisl support develop servic share multipl user interfac includ automat speech recognit base textbas natur languag understand telephon voic access web graphic base interfac sisl current use prototyp new gener call process servic lucent technolog switch product paper organ follow next section describ sisl languag formal semant present algorithm automat effici check safeti properti sisl program algorithm implement implement issu discuss section 4 simpl exampl sisl applic present section 5 result experi exampl discuss final present conclud remark compar result relat work 2 sisl sever interfac singl 21 overview sisl sisl applic consist singl servic logic togeth multipl user interfac servic logic interfac commun via event user interfac collect inform user send servic logic form event servic logic react event report user interfac set enabl event ie set event readi accept current state user interfac util inform appropri prompt user user interfac perform function use conjunct sisl servic logic exampl context interact natur languag servic brows display organiz data corpor databas sisl may inform naturallanguag interfac accept organ eg user said show size organ interfac may prompt user eg say organ want see user respond someth naturallanguag interfac recogn organ interfac gener sisl event indic organ detect event process sisl servic logic sisl servic logic applic specifi reactiv constraint graph direct graph enrich structur node travers reactiv constraint graph driven recept event environ event associ label event name may carri associ data respons graph travers node execut action reaction graph end need wait next event sent environ predic event play import role reactiv constraint graph par ticular node may contain order set predic indic conjunct inform receiv user upon receipt appropri event predic current node evalu order satisfact predic node trigger node chang graph may violat predic reactiv constraint graph implement java librari import aspect reactiv constraint graph node may associ action consist arbitrari java code execut upon entri intoexit node action henc side effect local global variabl java program extern databas note individu predic action associ 22 sisl process algebra section describ process algebra succinctli describ sisl program event begin descript event use process algebra set input label set valu v carri label label associ valu call event write e rang v signatur subset use signatur jj size predic signatur boolean valu function v jj bool map everi set fa vja ftrue falseg signatur predic sometim written syntax term process algebra follow abstract viol denot process sequenti composit viol constraint refer p viol target node predic inform dynam semant process combin follow intuit mean sequenti composit standard mean p1 execut first p2 execut termin choic function like prefix process alg bra process wait event label data v term correspond choic node reactiv constraint graph repres disjunct event receiv user everi event set sisl servic logic automat send correspond prompt user choic node wait user send event specifi set event arriv correspond transit taken control transfer child node ensur determin sisl program event must distinct next viol n constraint combin interest dynam behavior term correspond constraint node reactiv constraint graph associ order set predic event intuit constraint node await event thu node repres conjunct inform receiv user event sent constraint node order control reach constraint node sisl servic logic automat send prompt event everi event still need order evalu predic addit automat send option prompt event mention predic correspond inform correct user everi round interact constraint node wait user send event mention associ predic predic associ constraint node evalu order soon event arriv event resent user interfac ie inform correct predic event signatur reevalu order two way exit constraint node predic evalu satisfi case control transfer p next predic nonnul p viol evalu fals predic j j evalu true predic first predic order fals viol nonnul case control transfer p viol mention earlier node chang may caus sideeffect action execut howev evalu satisfact violat individu predic caus side effect occur node chang describ 23 sisl state machin semant describ associ space state machin associ sisl describ semant sisl process state machin state machin sisl semant tupl set input label set state s0 uniqu start state f set final state transit relat v determinist ie given state event e one 0 e 0 transit relat case write e final state outgo transit construct describ denot sisl combin construct state machin section use p perhap supersubscript rang member given class state machin state machin correspond null singl state start state final state transit sequenti composit describ standard fashion assumpt final state arc final state p1 redirect uniqu start state p2 p1 p2 formal sequenti composit state machin state machin choic describ build state machin ad new start state transit label start state state machin p formal given state machin p result state machin p new state constraint viol set intermedi state sisl program goe collect event k determin partial map f intuit domain partial function f written domf indic label data receiv intuit clear inform still requir satisfi requir constraint node given transit enabl state label undefinedg furthermor start state given partial map empti domain sinc inform receiv ident label f consist f predic domf includ f inconsist otherwis ie predic domf includ f complet domf k incomplet otherwis four combin two paramet possibl formal set state partial map f either inconsist incomplet let transit relat state defin follow v consist complet map transit label v state label f p next p next target transit make inform contain state complet consist fashion v inconsist map first falsifi g p viol null arc label v state label f start state p viol caus predic violat nonnul target node caus control move node transit label v state label f state label g consist incomplet g inconsist p viol null first predic order falsifi g predic violat predic null target node violat control remain constraint node transit label v add chang inform label state chang inform call overwrit event v overwrit event caus transit state f 2 domf start state given partial map empti domain final state given union final state p next nonnul p viol formal given state machin p next nonnul p result state machin partial map empti domain follow write target refer target node predic 3 automat test sisl program section show sisl program automat systemat test violat safeti properti use nondeterminist test algorithm use conjunct systemat statespac explor tool verisoft 11 support special system call vs toss simul nondetermin nondeterminist test algorithm systemat drive execut sisl applic test order exhibit possibl behavior safeti properti repres prefixclos finit automata finit word 3 assum represent ap defin safeti properti lp set finit word accept finit automaton ap let alphabet ap construct contain set input event state machin repres sisl program test call input event observ event let w jo denot project word w 2 set definit 31 let state machin defin semant sisl program defin previou section therefor omit let w denot execut goe state state 0 receiv finit sequenc w event includ overwrit event let denot set observ event defin set observ behavior languag lo finit word lo jo g word set observ behavior sisl program respect set observ event defin set finit sequenc observ event sisl program take input exclud overwrit event technic conveni effici reason deliber ignor overwrit event definit sinc occurr artifact userinterfac system affect transit node node henc logic sisl program problem address work thu check automat effici lo lp naiv solut problem consist drive execut sisl program test driver nondeterminist send enabl input event associ valid data valu whenev readi take new input execut nondeterminist test driver control verisoft check lo lp done monitor possibl execut conjunct test driver check observ behavior accept ap howev naiv approach would gener state space typic larg would render analysi intract instanc input event take 32bit integ argument would immedi gener branch point 2 branch clearli data valu caus unaccept state explos case constraint node instanc one could think analysi predic associ node use constraint satisfact techniqu might use gener automat data valu howev approach problemat context sinc predic sisl program implement arbitrari java code quit elabor may involv access extern data instanc evalu predic may involv databas lookup fetch test provis data subscrib servic also evalu predic set input data valu may chang time evalu predic may depend data previous modifi current execut close automat open reactiv java program gener environ interest hard problem 5 beyond scope present work therefor simpli assum usual done test user specifi fix set valuesa possibl data valu input event whenev event provid input sisl program test data valu v valuesa chosen nondeterminist test driver pass argument event sisl servic given set v set valuesa data valu defin restrict v follow definit 32 let state machin defin semant sisl program defin previou section let v complet valuat function associ input event finit nonempti set valuesa data valu 8a call restrict v state machin ag restrict v thu set state sisl program repres reach data valu associ input event taken v exclus note sinc sisl program determinist successor state 0 reach receiv input event av state alway uniqu remaind section discuss restrict version origin problem name check automat effici lo mv lp instead lo lp simpl algorithm check whether lo mv lp present figur 1 reach state algorithm nondeterminist select enabl input event step 2b data valu v valuesa step 2c send av sisl program test step 2d nondetermin simul special oper vs toss support verisoft oper take argument posit integ n return integ 0 n oper nondeterminist execut transit start vs tossn may yield n differ successor state correspond differ valu return vs toss execut nondeterminist nontermin test driver algorithm control verisoft verisoft provid valu return call vs toss order systemat explor possibl also forc termin everi execut certain depth reach maximum depth specifi user via one sever paramet user set control statespac search perform verisoft measur number call vs toss execut far current run algorithm check lo mv lp done follow whenev event av sent sisl servic ssv test automaton ap repres properti p evalu av 2 automaton may move reach new state con struction ap reach nonaccept state mean properti p violat error report search stop last scenario execut save memori replay later user verisoft simul algorithm figur 1 gener possibl sequenc input event associ data valu taken input sisl program rest section show gener sequenc actual necessari check type safeti properti consid precis show initi sisl servic ssv 2 loop forev let e set nonoverwrit event enabl current state b let vs tossjej 1 let th element e c let j vs tossjvaluesaj 1 let v j th element valuesa send av ssv figur 1 simpl algorithm algorithm figur 1 optim gener possibl sequenc input event enabl constraint node provid event observ exampl 33 let p sisl program let 1 predic signatur given let set observ event empti interleav unobserv input event drive system successor node constraint node void effect properti check need gener cons quentli test constraint node requir gener one sequenc input event rather sequenc gener naiv algorithm hand test constraint node requir gener sequenc gener naiv algorithm observ exploit algorithm figur 2 algorithm behav previou one except case constraint node case step 2c algorithm start step 2cii nondeterminist choos data valu va associ input event enabl constraint node step 2ciii evalu success predic constraint node predic violat select set data valu va 2 e ad set mark violat predic unless exist anoth predic j previous ad mark whose signatur j contain signatur whose signatur contain set observ event step 2ciiia select set data valu satisfi predic node step 2civ one violat predic set mark target 6 null nondeterminist chosen input event signatur select set event provid sisl program step 2cive otherwis predic satisfi set set enabl input event enabl node step 2cv unobserv input event set sent sisl program step 2cvi final remain henc observ input event sent sisl program one one random order pick nondeterminist among set possibl interleav event step 2cvii correct algorithm figur 2 prove show weak bisimul node reach execut algorithm node mv restrict v turn guarante observ behavior mv observ nondeterminist execut algorithm figur 2 let node current node sisl program state write n w denot exist sequenc nonoverwrit input event w 0 w 0 jo node n n 0 travers transit 0 theorem 34 let restrict state machin defin semant sisl program valuat function v let state machin defin set 0 repres set state transit perform sisl program test algorithm figur 2 reachabl state mv n w n w mv proof sketch proof immedi n constraint node consid case n constraint node let reachabl state mv simplifi present assum first state reach enter node n visit n case treat similar way let us show everi node transit n w mv match node transit n w convers immedi exist sequenc nonoverwrit input event w 0 w 0 jo node n n 0 travers transit 0 simplic assum 0 denot first state reach enter node n 0 execut w 0 case treat similar way n 0 node pnext reach predic n sat isfi set fva ja 2 w 0 g data valu associ input event provid execut w 0 state 0 satisfi predic n thu exist execut algorithm figur 2 select set data valu step 2cii case none predic node n mark algorithm select input event w sent sisl program step 2cv exist one execut algorithm send observ event w 0 order w step 2cvii otherwis n 0 nonnul target node target reach predic n violat mean set fva ja 2 data valu associ input event provid execut w 0 state 0 violat predic sinc reachabl also mean predic violat wise target j would reach instead target execut w 0 exist execut algorithm figur 2 select step 2cii set data valu fva ja 2 initi sisl servic ssv 2 loop forev let e set nonoverwrit event enabl current state b current node ssv constraint node let th element e ii let j vs tossjvaluesaj 1 let v j th element valuesa iii send av ssv c current node ssv constraint node sequenc predic associ constraint node ii loop event e order let j vs tossjvaluesaj 1 let va j th element valuesa iii loop 1 violat data valu fva ja 2 eg mark impli add set mark iv jmarkedj 0 remov mark target b c let vs tossjmarkedj 1 let th element mark v els let vi 2 n send ava ssv vii loop let vs tossj oj 1 let th element b send ava ssv c remov event set figur 2 optim algorithm g set data valu violat predic ad set mark step 2ciii algorithm unless exist anoth violat predic j j previous ad mark target case violat predic also lead node n 0 via sequenc w 00 input event w 00 jo case predic whose violat lead n 0 via sequenc w 000 event w 000 jo w ad mark predic select step 2civ algo rithm event signatur includ event w sent sisl program exist one execut algorithm send observ event w 000 order w step 2cvii immedi corollari theorem observ behavior mv gener algorithm figur 1 thu use check whether lo mv lp also prove optim constraint node perform step 2c algorithm figur 2 optim follow sens theorem 35 let defin theorem 34 let reachabl state mv constraint node given set fva ja 2 eg data valu associ input event enabl node enter n w exist exactli one transit n w proof sketch contradict assum exist two transit n w impli exist two predic j n violat set fva ja 2 eg data valu whose signatur includ target transit label w wg therefor condit step 2ciiia algorithm figur 2 j ad set mark henc algorithm visit node n 0 twice execut two differ sequenc event w 0 w 00 w 0 jo jo 4 implement issu automat systemat test sisl program violat safeti properti use algorithm present previou section integr verisoft sisl verisoft tool systemat explor state space system compos sever concurr process execut arbitrari code written languag state space system direct graph repres combin behavior compon system path graph correspond sequenc oper scenario observ execut system verisoft systemat explor state space system control observ execut compon reiniti execut verisoft drive execut whole system intercept suspend resum execut specif oper system call execut implement test exampl oper intercept verisoft oper commun object eg send receiv messag vs tossn oper mention earlier simul nondetermin introduc branch point n 1 branch state space whenev execut verisoft alway guarante complet coverag state space depth word possibl execut system depth guarante cover sinc verisoft typic gener execut evalu thousand test per minut quickli reveal behavior virtual imposs detect use convent test techniqu detail statespac explor techniqu use verisoft given 11 verisoft appli success analyz sever softwar product develop lucent technolog telephoneswitch applic implement network protocol eg see 12 order use verisoft control execut nondeterminist algorithm section 3 built verisoft interfac sisl interfac provid necessari inform request algorithm previou section current set enabl input event etc algorithm implement straightforward manner java call extern oper vs toss perform use java nativ interfac verisoft control execut result singl process form combin sisl applic test nondeterminist test driver intercept call vs toss provid valu return call creat destroy java virtual machin reiniti program test safeti properti use specificationbas test packag triveni 6 framework eventdriven concurr program java implement use standard algorithm 20 translat given safeti formula proposit lineartim tempor logic formula finitest automaton whose languag set finit event sequenc violat formula 5 exampl experi consid tabl 1 describ interact bank servic call teller motiv sisl implement servic describ transfer fund detail transfer capabl establish number constraint among three input event sourc account target account transfer amount requir make specifi sourc target account must valid account previous given loginpin dollar amount must greater zero less equal balanc sourc account must possibl transfer money sourc target account constraint captur minimum requir input transfer transact proceed perhap import constraint specifi exampl specifi order three input user repeatedli enter incorrect inform figur 3 depict sisl servic logic teller specifi reactiv constraint graph use constraint node describ requir transfer capabl deposit capabl withdraw capabl particular constraint node transact type order enter servic user must first provid startservic event eg dial servic go web page depict figur 3 user must success log valid login pin combi nation sinc login pin may provid either order constraint node express requir expositori simplic iti assum login pin must ident login success user success log servic provid choic among differ transact type starttransf event provid exampl control flow transfer constraint node user prompt sourc ac count target account amount order user provid sourc account amount greater balanc sourc account exampl constraint amt bal ancesrc violat sinc explicit failur target node specifi control flow remain current node user provid consist inform account amount transfer perform control revert back choic node transact type selfloop annot quit choic node indic subgraph node repeatedli execut precondit becom fals ie user quit servic tempor properti interest teller includ servic accept sourc account current transact type either withdraw transfer servic accept target account current transact type either deposit transfer servic begin deposit transact user given login pin past quit servic properti describ english equival formula proposit lineartim tempor logic terminol ogi set observ event analyz properti set event occur correspond formula ex ampl set observ event anali first properti fsrcstartwithdraw startdeposit starttransferg particular refer last transact type necessit startd posit event occur correspond formula implement two valid account check save transfer permit account differ ie check save viceversa money market account consid valid account exampl initi balanc account zero hasquit variabl set fals implement portion teller consist approxim 200 line text markup languag automat translat sisl toolset approxim 500 line java code current applet html automat speech recognit voicexml 21 interfac 300 line share servic logic 51 result experi evalu approach compar effici algorithm present section 3 perform systemat statespac explor teller servic teller interact bank servic servic login protect custom must authent enter identifi login pin password access function custom may mani money account function requir custom select account involv authent custom may make deposit make withdraw servic make sure custom enough money account withdraw specifi amount transfer fund account servic prompt custom select sourc target account transfer amount perform transfer 1 custom enough money sourc account 2 transfer permit two account quit servic tabl 1 highlevel descript teller loginpin isvalidsrc amt balancesrc withdraw notifi deposit notifi isvalidsrc amt balancesrc transfer notifi startwithdraw startdeposit starttransf choic node hasquitfals userquit figur 3 reactiv constraint graph teller first select follow data associ event name pin event assign two name set fjohn maryg src tgt amt event assign three type set fcheck save moneymarketg amt event assign valu set f0 100g analysi first test follow tempor prop erti servic accept target account current transact type deposit set observ event properti ftgt startdeposit startwithdraw starttransferg expect algorithm report violat trace current transact type transfer target account accept ran set experi set observ event empti order measur effici algo rithm actual test uncaught runtim except sisl java program along path certain depth measur number event sent servic logic ran test success time increas maximum depth path explor result summar figur 4 plot left depict number path explor algorithm maximum depth path explor plot right depict run time algorithm second maximum depth path explor interest observ made experiment data first expect run time algorithm proport number path explor second consid rate number path run time increas respect maximum path depth rate significantli less optim algorithm import observ experiment data maximum depth 5 6 optim algorithm explor number path henc run time phenomenon occur optim algorithm perform bulk work upon entri constraint node especi true case empti set observ event case work done optim algorithm upon entri constraint node exampl teller path depth 4 consist startservic event follow consist name pin event either order follow transact type depth 5 control enter one transact constraint node optim algorithm perform work choos event data comput mark predic choos mark predic upon entri node mere send correspond event fix order henc set path explor ident depth 5 6 run time except extrem minor activ send addit event similar phenomenon occur depth 8 9 10 result show even small exampl teller optim algorithm provid signific improv effici exampl depth 11 simpl algorithm take one half hour complet optim algorithm take eleven minut henc latter use effici systemat test much complic servic simpl simpl optim figur 4 experiment result number path explor left run time second right vs path depth 6 conclud remark 61 sisl applic current use sisl sever project involv multimod interact servic exampl sisl use prototyp new gener call process servic lucent technolog switch product part researchdevelop collabor develop call process featur may form basi new product offer servic logic featur expect quit complex need test thoroughli plan use techniqu tool present paper test applic also plan test two sisl applic develop lucent technolog interact servic base system visual explor analysi data collabor applic user may interact system rich collect devic 62 relat work conclud comparison approach relat work combin open reactiv system gener environ relat idea hide set visibl action process process calculu 13 17 close automat open reactiv eventdriven program systemat test modelcheck purpos studi 5 8 sequenti datadriven program numer algorithm also propos automat gener set input data suffici exercis test possibl path controlflow graph program instanc previou work make extens use static analysi techniqu eg 7 18 2 automat extract inform dynam behavior sequenti program examin text contrast algorithm present dynam detect runtim set input event applic test current readi accept use inform drive execut without use static analysi techniqu make algorithm directli applic host languag java perl script etc environ includ extern databas etc observ exploit second algorithm name interleav input event constrain node sometim effect overal behavior system somewhat similar intuit behind partialord reduct algorithm use modelcheck prune state space concurr system eg see 10 major differ algorithm exploit notion independ commut action execut interact concurr process contrast constraintbas program pure sequenti reduct obtain deriv directli structur program take advantag form symmetri induc constraint node abil specifi set input event rather singl event anoth exampl program languag construct induc symmetri exploit verif sy temat test scalarset 14 7 r develop principl dialogbas interfac compil principl recogn safeti live sisl sever interfac abstract interpret unifi lattic model static analysi program construct approxim fixpoint model check program languag use verisoft model check without model analysi heartbeat monitor telephon switch use verisoft commun sequenti process better verif symmetri speech interfac form www constraint logic program commun concurr program flow analysi theori applic concurr constraint program automatatheoret approach automat program verif event driven model dialogu system tr commun sequenti process compil principl techniqu tool constraint logic program commun concurr concurr constraint program model check program languag use verisoft model check without model automat close open reactiv program filterbas model check partial system abstract interpret partialord method verif concurr system program flow analysi better verif symmetri design implement triveni ctr jean berstel stefano crespi reghizzi gill roussel pierluigi san pietro scalabl formal method design automat check user interfac proceed 23rd intern confer softwar engin p453462 may 1219 2001 toronto ontario canada jean berstel stefano crespi reghizzi gill roussel pierluigi san pietro scalabl formal method design automat check user interfac acm transact softwar engin methodolog tosem v14 n2 p124167 april 2005 patric godefroid softwar model check verisoft approach formal method system design v26 n2 p77101 march 2005