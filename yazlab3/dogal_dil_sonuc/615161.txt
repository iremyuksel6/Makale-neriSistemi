concurr control issu nest transact concept nest transact offer decompos execut unit finergrain control concurr recoveri flat transact furthermor support decomposit unit work subtask appropri distribut comput system prerequisit intratransact parallel howev exploit full potenti suitabl granul concurr control well access mode share data necessari articl investig variou issu concurr control nest transact first mechan cooper commun within nest transact imped parallel execut transact among parent children among sibl therefor model nest transact propos allow effect exploit intratransact parallel start set basic lock rule introduc concept downward inherit lock make data manipul parent avail children support supervis restrict access concept refin control downward inherit initi concurr control scheme base sx lock flat nonoverlap data object order adjust scheme practic applic set concurr control rule deriv gener lock mode describ compat matrix also rule combin hierarch lock scheme improv select access data granul vari size tie togeth type hierarchi transact object shown control downward inherit hierarch object achiev nest transact final problem deadlock detect resolut nest transact consid b introduct multipl user access databas simultan data oper coordin order prevent incorrect result preserv consist share data activ call concurr control provid concurr user illus referenc dedic databas classic transact concept eswaran76 defin transact unit concurr control databas manag system dbm guarante isol execut entir transact impli result deriv multiprogram environ obtain serial execut schedul import transact properti atom consist durabl defin hrder83 dbm compon respons achiev properti transact manag includ concurr control major function current dbmss transact manag typic design singl level control structur implement optim execut short transact data refer anon85 twophas lock far common method control concurr among transact accept standard solut bernstein81 gray78 run central dbm transact granular well lock protocol usual obtain satisfactori perform high perform transact system special concurr control method consid mandatori increas level parallel gawlick85 reuter82 howev without requir chang transact concept execut complex transact involv exampl sequenc join sort oper relat dbm turn singl level transact achiev optim flexibl perform especi distribut system highli desir gener control structur support reliabl distribut comput effect major concern decompos finer grain control concurr recoveri solut problem concept nest transact propos moss moss85 singl level transact enrich inner control structur mechan allow dynam decomposit transact hierarchi subtransact therebi preserv properti transact unit assur atom isol execut everi individu subtransact consequ subtransact may distribut system among variou processor node perform subtask entir transact prime aspect nest transact decomposit unit work subtask distribut lead follow advantag comput system par ticular distribut dbm intratransact parallel larger transact inher parallel may anticip execut take advantag inher concurr applic suitabl granul concurr control well access mode eg lock mode necessari environ enabl parallel execut nest transact concept embodi appropri control structur support supervis therefor safe intratransact concurr therebi increas effici decreas respons time intratransact recoveri control uncommit subtransact abort roll back without sideeffect transact outsid hierarchi henc concept nest transact contribut consider refin scope intransact undo compar singl level transact undo recoveri necessarili yield state begin transact bot may refin ad appropri savepoint concept nest transact hrder87 rothermel89 explicit control structur parallel asynchron activ coordin singl unit work extern point view introduct power explicit control structur allow deleg piec work atom execut appear mandatori structur greatli reduc complex program enhanc reliabl transact process system modular subtransact facilit simpl safe composit transact program whose modul may design implement independ system modular serv design goal well encapsul inform hide failur limit secur distribut implement concept nest transact support implement distribut algorithm flexibl control structur concurr execut distribut data process turn major impact overal effici term costeffect use hardwar special processor io devic es respons distribut also affect avail replic data henc robust system may improv variou way central dbm nest transact use howev exploit full potenti due lack resourc obviou advantag clearer control structur execut complex transact support design reliabl program also allow isol rollback uncommit subtransact case forc abort transact failur serializ transact control strict 2phase lock protocol equival method quir neither lock granul lock durat affect approach subtransact releas lock inherit parent transact multilay central dbm kind multilevel transact manag provid subtransact serv control structur variou layer gain higher degre concurr flexibl control lock granul socal multilevel concurr control introduc furthermor isol rollback subtransact guarante system r concept use two layer lock appli twice tupl eot long tupl lock page durat tupl oper short page lock action sinc tupl oper regard subtransact page lock releas eot parent transact techniqu call open nest transact problem involv discuss gray81 gener open nest transact central system call multilevel transact propos weikum86 weikum84 moss86 been89 allow earli releas lock lower level control howev reli compens oper subtransact appli case rollback recoveri detail descript aspect multilevel transact manag includ discuss perform issu given weikum91 dont want consid kind multilevel structur concurr control central dbm oper due salient properti support nest transact mani research focuss attent design implement distribut system approach base pro posal result experi distribut system design especi report allchin83 jessop82 liskov85 mllerl83 spector83 walter84 tri adjust concept nest transact improv use distribut dbm prime goal investig conceiv extens flexibl intratransact parallel due space limit restrict discuss concurr control deadlock detect issu recoveri problem dealt moss87 hrder87 rothermel89 facilit discuss introduc model nest transact design prohibit parentchild siblingparallel sec 3 basic concurr control model invent moss moss85 discuss system extend refin concept downward inherit enabl transact pass lock child transac tion sec 4 propos number gener extens concurr control nest transact concept control downward inherit enabl parent give child access share data time restrict mode usag anoth refin allow use gener lock mode compar simpl sx lock model henc applic may better adjust synchron need far effort direct toward enhanc concurr control transact hierarchi oper flat object sinc everi practic dbm forc use object hierarchi provid fine well coars lock granul reason cost design concurr control protocol combin object transact hierarchi well support control downward inherit conclud summar result final section 2 model nest transact concurr control techniqu go present paper base nest transact model introduc moss moss85 transact may contain number subtransact may compos number subtransact conceiv result arbitrarili deep hierarchi nest transact root transact enclos transact call toplevel transact tltransact transact subtransact call par ent subtransact children also speak ancestor descend ancestor descend relat reflex transit closur parent child relat use term superior inferior nonreflex version ancestor descend set descend transact togeth parentchild relationship call transact hierarchi follow use term transact denot tltransact subtransact hierarchi tltransact repres socal transact tree node tree repres transact edg illustr parentchild relationship relat transact transact tree shown fig 1 root repres tltransact children subtransact c f g parent c b inferior c e f g superior b cours descend ancestor set c addit contain c hierarchi c depict subtre span cs descend properti defin flat transact atom consist isol execut durabl acidproperti hrder83 nest transact model acidproperti fulfil tltransact subset defin subtransact subtransact appear atom transact may commit abort independ abort subtransact affect outcom transact belong subtransact hierarchi henc subtransact act firewal shield outsid world intern failur concurr control scheme introduc moss appli isol execut guarante subtran action howev increas intratransact parallel enhanc scheme propos pa figur 1 exampl transact tree f g hierarchi c per allow transact belong tltransact hierarchi share data control man ner durabl effect commit subtransact depend outcom superior even commit abort one superior undo effect subtransact effect becom perman tltransact commit consist properti subtransact seem restrict sometim parent transact need result sever child transact perform consist preserv action exploit inher potenti nest transact advantag state sec 1 degre intratransact parallel high possibl two kind intratransact parallel defin parentchildparallel siblingparallel first kind parallel support transact may run parallel children second kind sibl allow run concurr use definit abl character four level intra transact parallel neither parentchild siblingparallel point time one transact activ tltransact hierarchi ie intratransact parallel sinc transact hierarchi execut serial concurr control among need ex ampl transact execut singl process process commun mean synchron remot procedur call mechan level parallel provid siblingparallel sibl may perform concurr transact never run parallel superior kind restrict parallel enabl transact share object ancestor without concurr control exampl argu system lisk85 intratransact parallel restrict level parentchildparallel sinc transact children may run concurr sibl may tltransact hierarchi transact along one path hierarchi may run parallel kind restrict simplifi intratransact concurr control sens transact resid path synchron reason hardli justifi system design parentchild well siblingparallel level permit arbitrari intratransact parallel ism ie principl transact tltransact hierarchi may execut concurr cours compar degre parallel describ degre requir sophist concurr control scheme exampl locu mller83 cloud allchin83 support level parallel discuss far transact model contain essenti restrict transact may either perform entir singl processor site may distribut multipl processor locat one site moreov model restrict kind data distribut implement underli system henc consider appli data share well data distribut approach rahm92 sinc focu concurr control concept introduct refin implement issu would burden discuss 3 basic lock rule nest transact lock standard method concurr control dbm use success varieti applic past decad longer therefor reason choos convent lock protocol start point investig nest transact convent lock protocol offer two mode synchron read permit multipl transact share object time write give right singl transact exclus access object eg see gray78 far concurr control concern data model initi consist disjoint object lockabl unit next part section summar lock scheme nest transact propos moss moss85 scheme allow upward inherit lock ie transact inherit lock children vice versa last part extend scheme support upward well downward inherit scheme present section implement sever system 31 upward inherit lock describ lock rule propos moss introduc terminolog possibl lock mode object nl xmode null mode nl repres absenc lock request lock object transact acquir lock object mode hold lock mode termin besid hold lock transact retain lock subtransact commit parent transact inherit lock retain transact hold lock right access lock object correspond mode true retain lock retain lock place holder retain xlock denot rx oppos hx xlock held indic transact outsid hierarchi retain acquir lock descend retain potenti transact retain xlock nondescend hold lock either x smode retain slock guarante nondescend hold lock xmode potenti smode soon transact becom retain lock remain retain lock termin introduc terminolog formul lock rule transact may acquir lock xmode transact hold lock x smode transact retain lock x smode ancestor transact may acquir lock smode transact hold lock xmode transact retain lock xmode ancestor r3 subtransact commit parent inherit ts held retain lock parent retain lock mode x held retain lock previ ousli 2 r4 transact abort releas lock hold retain superior hold retain lock continu obvious rule state allow upward inherit lock ie transact inherit children lock vice versa principl upward inherit exemplifi fig 2 use notion x ssphere describ implic principl x 2 note inherit mechan may caus transact conceptu retain sever lock object cours number lock retain transact limit one retain restrict lock figur 2 upward inherit lock r r rs r retain xlock acquir slock eott r r r retain xlock acquir xlock eott xsphere ssphere sphere ssphere object defin set transact potenti lock object xmode smode fig 2a xsphere object disappear entir transact acquir slock object ie transact may acquir xlock object transact rs hierarchi may lock object smode commit new xsphere establish consist descend ts parent transact fig 2b x well ssphere disappear acquir xlock commit new x ssphere establish gen eral transact acquir lock object may caus object x ssphere shrink termin transact may caus grow rule state allow upward inherit commit time ie transact may inherit child lock latter commit restrict guarante transact see effect commit children henc affect failur children furthermor restrict ensur subtransact transact tree serializ allow upward inherit commit time would caus transact becom depend outcom child transac tion ie subtransact would act firewal anymor hrder87 applic code within subtransact cope concurr recoveri issu 32 downward inherit lock feel especi restrict caus allow upward lock inherit prevent desir decomposit transact set cooper subtransact exampl assum applic navig object base updat access object desir decomposit task depict fig 3 transact read object determin next object access appli next oper current object content creat new child transact asynchron perform updat oper current object read next object act describ decomposit appeal characterist 1 updat oper perform parallel 2 updat oper fail affect oper fail oper restart later point time 3 updat oper perform isol particular import updat object may impli updat object exampl updat two differ object may impli two updat access path figur 3 decomposit applic updat o1 updat o2 updat unfortun decomposit imposs basic lock rule propos moss appli abl perform next oper object must hold rlock object sinc must hold rlock commit child ever acquir xlock object word object read updat ts children anymor decomposit requir exampl fig 3 possibl soon downward inherit lock support underli lock scheme scheme subtransact may inherit lock superior inherit lock take place superior hold lock explicitli offer lock downward inherit transact offer lock hold transact hierarchi acquir lock accord lock rule state consequ concept downward inherit allow transact make subset lock avail hierarchi lock rule propos moss easili extend support downward inherit ad new rule r5 transact hold lock offer lock transact hierarchi offer lock retain lock mode held lock transact offer lock temporarili disclaim right access lock object give transact hierarchi opportun lock object mode cours hierarchi might either one transact hold lock xmode number transact hold lock smode sinc transact offer lock still retain lock mode held lock transact outsid hierarchi lock object mode conflict mode retain lock becom holder transact must acquir lock anew succe rule r1 state fulfil exampl appli lock offer mechan illustr fig 4 transact r offer xlock hold xsphere compris rs hierarchi establish correspond object ie descend r opportun lock object either xmode depict exampl object x ssphere disappear descend r lock object xmode figur 4 downward inherit lock r r hold xlock r r offer xlock r acquir xlock r eott xsphere ssphere downward inherit lock possibl isol properti transact may violat transact belong differ tltransact hierarchi still interfer transact hierarchi may share data consequ transact may see uncommit data supe rior howev lead inconsist sinc effect transact undon superior abort hand transact may never see uncommit data inferior ie subtransact act firewal even downward inherit lock allow lock offer mechan similar one describ implement locu system mller83 kind automat downward inherit provid argu system liskov85 particular approach concurr control consider simplifi sinc conflict among transact hierarch path prevent allow siblingparallel automat downward inherit implicitli obtain rule transact may acquir lock transact hold lock superior 4 enhanc concurr control nest transact use idea downward inherit gain flexibl lock inherit given transact hierarchi howev poor control specif usag reason kind offer concept still shortcom situat transact offer lock desir control mode inferior hold lock exampl consid access sequenc shown fig 3 addit rule r5 possibl make desir decomposit transact offer xlock o1 o2 o3 etc children c1 c2 c3 etc acquir hold lock mode later howev would help could prevent child ci abl hold lock xmode order make sure ci chang resp oi 41 control downward inherit need control lock mode inferior access offer object becom obviou consid exampl cooper design environ bancilhon85 kim84 fig 5 show design task structur threelevel transact hierarchi assum transact b gener object describ interfac work piec transact c children b design subpart work piec therefor requir read access interfac descrip tion allow children read b must offer lock hold way control mode children hold lock one children may acquir lock xmode two undesir consequ first child chang second child block sibl prevent read overcom problem suggest extens lock rule introduc previou section scheme discuss previous transact offer lock hold inferior extend scheme replac lock offer mechan primit support upgrad downgrad lock downgrad transact hold lock mode downgrad lock less restrict mode downgrad lock transact hold lock mode mand retain lock mode ex ampl transact hold lock xmode downgrad lock mode nl 3 upgrad transact hold lock mode upgrad lock restrict mode follow condit satisfi transact hold lock mode conflict transact retain lock mode conflict ancestor 4 exampl transact hold lock smode upgrad lock mode x transact hold lock x smode transact retain lock x smode ancestor extend scheme hold retain lock exactli semant mosss scheme downgrad lock mode mode transact hold lock mode retain mode sinc transact retain lock mmode prevent transact outsid hierarchi hold lock mode conflict hand sinc hold lock mode keep inferior hold lock mode conflict contrast offer lock describ basic scheme downgrad allow transact control 3 note downgrad nl correspond gener releas lock releas lock limit shere downgrad 4 note condit equival condit must satisfi transact acquir lock figur 5 decomposit design task b rxh b lx acquir lock xmode ls acquir lock smode ds downgrad lock smode ux upgrad lock xmode hold xmode retain xmode hold smode task structur b concurr work step c inferior hold lock exampl transact downgrad lock x smode prevent transact outsid hierarchi hold lock mode preclud inferior hold lock xmode allow inferior hold lock smode cours downgrad lock nlmode equival offer lock basic scheme state holder lock upgrad lock mode restrict current hold mode featur allow transact upgrad lock downgrad previous eg transact downgrad lock smode could upgrad lock mode x soon children commit cours transact also upgrad lock without downgrad follow describ extend lock rule ital use point extens ad mosss scheme transact may acquir lock xmode upgrad lock hold mode x transact hold lock x smode transact retain lock x smode ancestor transact may acquir lock smode transact hold lock xmode transact retain lock xmode ancestor er3 subtransact commit parent inherit ts held retain lock parent retain lock mode x held retain er4 toplevel transact commit releas lock hold retain er5 transact abort releas lock hold retain superior hold retain lock continu hold lock xmode downgrad lock mode nl perform downgrad oper retain lock xmode er7 transact hold lock smode downgrad lock mode nl perform downgrad oper retain lock smode mode transact downgrad lock determin mode transact ts hierarchi hold lock downgrad mode transact ts hierarchi hold lock xmode sinc conflict x downgrad mode nl transact ts hierarchi potenti hold lock mode exampl may help clarifi key issu control downward inherit effect offer xlock depict scenario fig 4 similar scenario fig 6 illustr downgrad xlock mode downgrad slock handl analog manner essenti issu observ exampl slock may grant within rs hierarchi ie xsphere establish lock downgrad mode given extend lock rule problem describ design environ exampl solv easili see fig 5 gener object transact b downgrad xlock hold mode sinc hold lock smode c prevent hold lock xmode guarante chang block note sinc retain lock xmode downgrad lock transact e hold lock mode ie e neither read write commit c b upgrad lock 42 correct concern state section 31 upward lock inherit commit ensur subtransact act firewal case failur subtransact tltransact remain isol sinc propos concept control downward inherit like discuss impact concept correct concurr execut tltransact serializ transact tltransact tree lock data object access lock hold transact transact tree releas tltransact commit lock protocol correspond strict 2phase lock tltransact determin serial order time commit hold singlelevel transact figur control downward inherit r r hold xlock u r rxh u r rxh u r rxh u r downgrad x slock u acquir slock eott ssphere let us discuss visibl data chang induc depend within transact tree mosss nest transact model follow hold transact may see chang transact commit depend 5 say transact depend transact undo effect caus abort transact seen state object state never seen chang anoth transact commit contrast model allow control downward inherit make uncommit data avail inferior reason observ follow properti transact may see chang transact commit depend upon transact superior object state seen transact may chang inferior transact may see chang superior transact downgrad correspond lock explicitli whether transact may see effect superior control applic logic term failur transact see chang superior caus problem superior abort transact abort also note transact seen object object chang superior transact commit transact downgrad lock must awar consequ reduc isol downgrad nlmode may caus unrepeat read downgrad transact point view xlock two case must consid downgrad x nlmode x smode first case downgrad point view lost updat und unrepeat read possibl principl howev much flexibl cooper enabl correct execut enforc applic level protocol cscwlike applic even conceiv kind highlevel control base socal social protocol end user latter case prevent inferior downgrad transact keep downgrad lock xmode neither unrepeat read lost updat occur import question whether firewal properti nest transact way affect downgrad mechan transact downgrad lock becom depend outcom inferior child fail updat possibl object downgrad lock roll back therefor downgrad transact affect may creat anoth child 5 rememb effect commit subtransact becom perman toplevel transact commit reason transact may see data commit transact depend upon ensur abort effect one transact wipe due failur transact hierarchi depict fig 5a transact e may see chang transact c b commit b commit e becom depend c failur wipe effect c caus cours e abort work summari fact transact may see chang superior caus problem firewal properti affect downgrad mechan lost updat may happen lock downgrad x nlmode case provid highest degre flexibl term cooper applicationlevel concurr control mechan need ensur requir form correct sinc applic decid use downgrad mechan adapt level system support isol cooper need facil applicationspecif concurr control 43 gener lock mode thu far describ refin concurr control scheme sx lock flat nonoverlap object eg tupl relat particular develop mechan control downward inherit lock nest transact closer consider reveal lock mode compris x far may enrich special mode better adapt concurr control access pattern practic applic exampl tailor lock mode frequent kind object access could help effect exploit inher parallel concurr transact furthermor use semant knowledg could greatli optim content pattern data access howev requir enhanc lock mode particular presuppos abil introduc userdefin lock mode eg see allchin83 schwarz84 refin lock mode may easili integr model present far assum data model remain unchang lock rule state sec 41 sx scheme gener basic andor userdefin lock mode follow transact may acquir lock mode upgrad lock hold mode transact hold lock mode conflict transact retain lock mode conflict ancestor gr2 subtransact commit parent inherit ts held retain lock parent retain lock mode held retain gr3 toplevel transact commit releas lock hold retain gr4 transact abort releas lock hold retain superior hold retain lock continu gr5 transact hold lock mode downgrad lock less restrict mode downgrad lock retain mode lock rule state allow upward well control downward inherit arbitrari lock mode rule gr5 omit would get gener mosss scheme provid upward inherit 44 use hierarch lock nest transact let us reconsid underli data model seriou drawback realist concurr control situat particular flat object structur requir disjoint lockabl unit given granul make impract larg databas small granul need transact larger one other improv select access data granul vari size hierarch lock scheme propos context hierarch structur object introduc certain complex deal orthogon transact data hierarchi mention earlier lock disjoint partit given size insuffici perform reason applic choic lockabl unit affect lock overhead transact space lock control block time request releas lock well concurr among transact henc impli dichotomi increas concurr use fine lockabl unit higher cost lock manag small granul appropri simpl transact access tupl intoler hard implement complex transact access larg fraction data base assum exampl sequenti scan relat 10 6 tupl tupl lockabl unit would requir 10 6 consecut lock request store mani lock control block cours main memori perform reason henc coarser granular lock sometim natur effici eg sort reorgan relat argument convinc everi dbm design object hierarchi lock purpos provid fact everi practic dbm support hierarchi typic 2 3 4 level eg system r gener 4level hierarchi databas segment relat tupl astrahan76 appropri hierarch lock scheme propos flat transact gray76 two key idea allow design scheme could adapt transact need either lock item use fine lockabl unit lock larger set item larger lock granul node r hierarchi lock explicitli result entir subtre implicitli lock transact lock part hierarchi place intent mode lock along path r avoid situat ancestor node r lock incompat mode compar r ilock mere serv place holder signal fact lock subtre done lower level hierarchi therebi prevent incompat lock grant correspond node besid known mode x intent share mode intent exclus mode ix introduc express transact intent read updat read object lower level hierarchi respect refin share intent exclus mode six grant slock entir subtre transact addit indic transact intent request xlock explicitli finer object granul later follow tabl taken gray76 show compat among requestlock mode deriv semant comprehens discuss precis effect lock mode compat refer reader semin work j gray gray78 basic lock rule object hierarchi introduc essenti ingredi gener lock rule nest transact appropri lock mode object hierarchi combin togeth start basic concurr control model upward inherit allow transact hierarchi gener rule gr1 gr4 appli furthermor acquir lock object consid addit rule result object hierarchi oppos flat object accord gray et al approach control concurr access object hierarchi obey follow rule 1 instead lock object directli everi transact observ strict hierarch protocol request appropri lock root leaf object hierarchi follow denot roottoleaf rule lock grant level accord compat express tabl soon lock obtain transact may request anoth appropri lock next lower level 2 leveltolevel transit obey follow constraint call leveltolevel rule held node allow request descend node ix grant node carri privileg request ix six x next level x allow read write access respect descend node without lock six carri privileg ix henc mode allow read access de scendant write access lower level may request ix x next level ix mode lock compat mode request nl ix six x ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye ye far acquir lock concern rule obtain transact hierarchi object hierarchi must satisfi independ follow roottoleaf rule transact must request lock root leaf object hierarchi whether lock object may grant particular mode decid accord leveltolevel rule gener lock rule gr1 gr4 lock mode compat depict tabl sinc rule introduc object hierarchi independ underli transact model rule hierarchi appli independ protocol propos gray76 flat transact differ rule impli transact model exampl may clarifi issu involv lock retain object hierarchi follow sce hierarch lock xaccess relat r parent p eott 1 retain lock p inferior qualifi acquir read write access r tupl r follow tabl show lock 2 3 obtain write read access tupl r upgrad downgrad hierarch lock although succeed tie togeth hierarchi type transact object hierarchi far obtain econom effici solut concurr problem compar basic approach sec 31 sinc make transact object avail inferior argument discuss earlier appli therefor desir enabl control downward inherit presenc object hierarchi assum exampl transact p hold sixlock relat r want permit write access tupl r inferior use kind inherit mechan sec 41 p downgrad lock object appropri mode p retain sixlock r rsix hold r ixmod hix note rsix prevent incompat lock r grant nondescend inferior let us examin whether straightforward approach may appli scenario depict follow tabl p hold r sixmod tupl r xmode assum p downgrad sixlock r request lock inferior impli obey roottoleaf leveltolevel rule henc soon acquir appropri lock ancestor r request compat lock r present scenario meant serv counterexampl ar databas db hix rix hix segment hix rix hix relat r hx rx hix tupl hx 1 hs 3 hx 2 hs 4 object hierarchi bitrari inherit hierarch lock aim clarifi new issu inherit object data hierarchi show p hold lock tupl level downgrad correspond lock relat level nlmode ie without particular protect illustr situat acquir sixlock r give read access tupl r hand p still tupl lock xmode name 1 2 exclus lock tupl would read sinc read access tupl r need check anymor even wors writewrit interfer tupl could occur lock r xmode cours sketch exampl may caus sever consist problem anomali would occur lock relat r togeth lock tupl downgrad control given holdmod alon would guarante desir consist exemplifi downgrad r smode key observ exampl downgrad lock without consid whole object hierarchi may lead inconsist shown upgrad lock object hierar chi exampl transact lock databas ismod upgrad slock hold segment databas xmode similar inconsist may occur obvious prevent violat leveltolevel rule upgrad downgrad lock may enforc upgrad downgrad oper lock held object hierarchi transact upgrad lock held object within object hierarchi might necessari also upgrad lock held superior object order satisfi leveltolevel rule exampl hold slock databas segment databas relat segment respect leveltolevel rule enforc upgrad islock ixmod relat lock upgrad xmode sinc upgrad lock object superior object perform atom manner upgrad done roottoleaf direct cours upgrad oper take place gener lock rule gr1 gr4 ful fill otherwis block may caus deadlock occur see sec 5 sinc upgrad lock object convert mode lock restrict one level tolevel rule violat far lock inferior object concern howev due upgrad oper lock held upgrad transact inferior object may becom useless exampl lock relat r upgrad six xmode lock escal bernstein87 lock held upgrad transact individu tupl r need anymor clean approach handl useless lock releas part upgrad oper actual object hierarchi p p downgrad use downgrad lock databas db hix hix hix segment hix hix hix relat r hsix rsix hsix tupl hx 1 hx 1 hx 3 hx 2 hx 2 hx 4 implement may optim cleanup process use pragmat argument eg see system r astrahan76 downgrad lock held transact object confin subhierarchi root object superior object hierarchi involv sinc downgrad violat leveltolevel rule far superior concern howev respect object subhierarchi downgrad lock may caus violat leveltolevel rule hold lock subobject downgrad mode lock held may violat leveltolevel rule exampl assum hold ixlock relat r xlock tupl r downgrad lock r ix ts xlock consist anymor lock mode parent object consequ downgrad lock may requir downgrad lock held object subhierarchi leveltolevel rule satisfi exampl would requir downgrad ts lock tupl nlmode follow tabl deriv leveltolevel rule list possibl mode lock grade mode hold lock object subhierarchi without violat leveltolevel rule exampl lock downgrad ismod hold subobject either nl smode subobject held restrict mode lock object must downgrad one list mode note sinc downgrad entir subhierarchi done atom downgrad perform leaftoroot direct observ rule consistencypreserv downward inherit lock may easili achiev p previou exampl downgrad tupl 1 2 downgrad relat r control lock usag possibl downgrad appropri mode follow scenario lock subhierarchi relat r downgrad differ mode allow select control access rs subobject object transact downgrad mode ix consist mode lock subobject nl nl ix six x object hierarchi p p downgrad use downgrad lock databas db hix hix hix segment hix hix hix relat r hsix rsixhix hsix tupl hx 1 rxh 1 hs 1 hx 2 rx 2 hx 2 downgrad intent mode ix six impli subsequ downgrad lock subobject order satisfi leveltolevel rule howev avoid restrict downgrad oper xlock hold lock object xmode entir subhierarchi lock implicitli hold lock subobject henc downgrad involv downgrad lock lower level os subhierarchi let us summar find control downward inherit lock data hierarchi gen eral downgrad entir subtre necessari hierarch object guarante consist downward inherit nest transact mlock held transact object downgrad might necessari downgrad lock held inferior order satisfi leveltolevel rule downgrad allow x slock downgrad lock never involv lock held lower level object hierarchi simplifi downgrad mechan substanti 5 deadlock detect nest transact lock protocol pessimist block lock request data current grant anoth transact conflict mode therefor immun deadlock deadlock may occur among transact belong variou tltransact even among subtransact within singl transact hierarchi deadlock detect mainli follow basic approach sketch moss85 allow identifi exist deadlock addit propos mainten inform waitsforretainedlock relat detect openingup deadlock earli possibl deadlock nest transact resolv concept known singlelevel transact extend mechan tailor properti nest structur moss85 rukov91 transact acquir lock data incompat lock held anoth transact request transact deactiv direct wait lock holder occur direct wait maintain waitsforlock relat order detect deadlock use waitsforlock relat deadlock detect perform immedi transact block elaps time deadlock exist cycl found waitsforlock relat singlelevel transact cycl compos direct wait wait lock seen sec 31 nest transact inner structur determin along path lock inherit whether retain lock acquir assum subtransact r wait lock held subtransact commit lock inherit retain parent transact p see fig 7 lock request transact ps xor sphere serv transact r outsid ps sphere howev acquir retain lock reason wait retain lock p wait retain lock indirect wait propag along ancestor hierarchi p follow introduc two differ wait relationship waitsfor retainedlock lock requestor r directli wait lock holder mode request lock conflict lock mode hold let q highest ancestor ancestor r r indirectli wait ancestor q commit wait relationship call waitsforretainedlock wait rule impli requestor r tltransact r must wait retain lock ts tltransact releas commit waitsforcommit sinc wait lock requestor r proceed work ancestor r may wait fig 7 u commit r us parent commit u ancestor r commit r doesw denot kind wait relationship waitsfor commit repres parentchild relationship outlin fig 7 due depend ancestor r may wait transact r directli indirectli wait cours wait may broken soon one ancestor abort illustr fig 7 r directli wait indirectli wait retain lock p q furthermor sinc u wait commit r also wait p q sec 44 hierarch lock employ nest transact key observ exhibit object transact hierarchi orthogon consequ aspect ad deadlock detect hierarch compos object use illustr fig 7 waitsfor relat occur among transact thu rule hierarch lock protocol interfer waitsforlock waitsforcommit relationship long roottoleaf leveltolevel rule observ u waitsforlock waitsforcommit fig 7 lock commit wait 51 detect exist deadlock order handl deadlock detect nest transact success combin variou waitsfor relat consid waitsforlock relat directwait deadlock found indic fig 8a wherea kind deadlock detect true matter whether deadlock occur within tltransact among subtransact variou tltransact cycl fig 8a consist direct wait transact cycl proceed fig 8b howev anoth kind cycl encount situat mean progress stop everywher cycl wait lock q q p may proceed time commit without abort sinc must roll back anyway best decis detect resolv ancestordescend deadlock immedi request caus lock wait ancestor q detect use combin waitsforlock waitsforcommit relat inform situat illustr fig 8b would frequent caus descend refer exclus use data uncoordin way control downgrad lock howev provid mechan avoid cycl applic knowledg appli reduc possibl deadlock involv lock commit wait coordin work requir parent p downgrad lock object current grant p creat child work acquir lock nonconflict mode without caus block situat downgrad enabl deadlockfre cooper enforc request lock mode restrict offer one deadlock may aris upgrad lock may lead wait situat therefor deadlock occur singlelevel transact assum fig7 r alreadi hold slock object r upgrad lock mode x r wait direct ancestor r retain lock r tltransact ts tltransact commit henc wait rule appli lock grade directwait deadlock fig 8 deadlock situat r b ancestordescend deadlock 52 detect openingup deadlock combin use waitsforlock waitsforcommit relat turn suffici nest transact detect exist cycl embodi directwait ancestordescend deadlock sinc waitsforlock relationship repres requestor holder lock commit lock holder current retain waitsforretainedlock relationship requestor ancestor holder retain explicitli establish waitsfor informa tion nest transact howev waitsforretainedlock relationship taken account provid earli deadlock detect may save lot useless work shown scenario fig 9 fig 9 repres deadlockfre situat sinc transact possibl other proceed work rwait g obtain request lock wait indic wait forcommit r indirectli wait oldest ancestor ancestor r hand g indirectli wait v evalu inform r g v abl immedi detect cycl open optimist attitud would care openingup deadlock sinc abort transact involv would eventu avoid actual occurr deadlock exampl abort transact fig9 resolv openingup deadlock progress ceas within tl transact v howev transact abort regard except taken account remedi break openingup deadlock cycl contrast pessimist approach usual save work use transit waitsforcommit waitsforretainedlock relationship ancestor eg v r g well r g v construct direct futur cycl v roll back either v ever deadlock detect resolut level highest noncommon ancestor transact caus conflict may appropri deadlock resolut typic base transact rollback affect minim data granul work lost u r f g fig 9 openingup deadlock among nest transact reason special measur use determin openingup deadlock earli possibl suitabl level nest transact hierarchi addit waitsforlock wait forcommit relat waitsforretainedlock relationship includ waitsfor infor mation exampl fig9 relationship r c r b r well g p g q repres order success search openingup cycl open deadlock detect transact involv consid determin lowcost victim rollback sinc rollback parent transact impli rollback inferior commit un commit rollback child transact alway cheaper correspond parent tran action reason rollback lock holder retain lock requestor alway cheaper ancestor potenti cycl henc set transact choos rollback victim set lock holder retain lock requestor fig 9 set candid dt rg respect note contrast moss85 transact model transact must leav current transact tree howev method cost measur could appli break cycl principl sinc candid transact occur arbitrarili transact hierarchi resourc estim involv evalu subtre may becom much complic summar waitsforretainedlock relationship evalu detect openingup deadlock earli possibl sinc candid transact break cycl lock holder retain er lock requestor mechan deadlock resolut deriv provid singlelevel transact earli detect openingup deadlock save transact work howev discuss addit represent manag waitsforretainedlock relationship requir overhead deadlock infrequ particular system implement take tradeoff account 6 comparison system implement follow compar system implement nest transact regard degre parallel support appli concurr control scheme way deadlock treat particular consid argu liskov88 liskov87 camelot spector88 epingers91 cloud ahamad87 dasgupta89 eden almes85 pu85 locu mller83 weinstein85 tabl summar result camelot cloud eden locu allow parentchild well sibl parallel argu permit parent transact run parallel children result simpler lock rule liskov87 system consid base twophas lock howev cloud locu support downward inherit downward inherit scheme locu requir lock holder explicitli state downward inherit may potenti take place transact cloud allow share lock ancestor total uncontrol manner allchin83 transact close file locu lock held file becom retain lock although support downward inherit mean explicit offer mechnism locu scheme uncontrol sens lock holder offer lock control mode descend may acquir lock none five system support control downward inherit support object hierarchi argu camelot cloud implement deadlock resolut base timeout mechan wherea eden appli woundwait deadlock avoid scheme rosenkrantz78 locu neither perform deadlock detect implement avoid scheme howev provid interfac oper system data permit system process detect deadlock construct waitforgraph manner differ deadlock resolut strategi may implement weinstein85 7 conclus present investig concurr control nest transact focu paper primarili achiev high degre intratransact parallel within nest transact use lock protocol parentchild sibl downward control object deadlock parallel parallel inherit downward hierarchi avoid inherit support detect argu ye timout base resolut camelot ye ye timeout base resolut cloud ye ye ye timeout base resolut eden ye ye woundwait avoid scheme locu ye ye ye neither resolut avoid initi concurr control mechan nest transact base sx lock protocol flat object serious limit parentchild parallel therefor concept downward inherit introduc refin control downward inherit order enabl transact restrict access mode inferior object control downward inherit turn use concept achiev safe parentchild cooper data structur read written share manner practic applic sometim need special lock mode well multilevel object hierarchi offer effici way lock granul vari size therefor gener lock rule nest transact appli richer access mode flat object impor tantli kind gener prerequisit integr transact object hierar chi sinc appropri use object hierarchi impli suitabl access mode beyond x lock result could combin type hierarchi gener concurr control model could enhanc model use concept control downward inherit even richer set access mode final studi principl deadlock detect nest transact contrast singlelevel transact waitsforlock relat suffici search wait cycl among transac tion detect deadlock nest transact requir mainten waitsfor commit relat combin use waitsforlock relat deadlock frequent antici pate openingup deadlock may span transact tree detect earli possibl save transact work purpos addit introduc waitsforretainedlock relat acknowledg c mohan share great knowledg experi concurr control us would like thank contribut led essenti simplif clarif concept propos paper would also like thank j palmer p schwarz refere help comment paper r eden system technic review fault toler comput object base distribut system architectur decentr system system r relat approach databas manag model concurr nest transact system concurr control distribut databas sy tem concurr control recoveri databas system model cad transact cloud distribut oper system notion consist predic lock databas system camelot avalon distribut transact facil camelot avalon hot spot note databas oper system transact concept virtu limit granular lock degre consist share data base principl transactionori databas recoveri concept transact recoveri nest transac tion eden transact base file system nest transact engin design databas implement argu argu languag system distribut program argu transact manag r nest transact approach reliabl distribut comput nest transact mechan locu nest transact gener object eden implementa tion framework workload alloc distribut transact process system concurr hightraff data element ariesnt recoveri method base writeahead log nest transact system level concurr control distribut databas system hierarch deadlock detect nest transact synchron share abstract type transact construct reliabl distribut comput flexibl nest transact multipl commit point approach structur advanc databas applic theoret foundat multilevel concurr control principl realiz strategi multilevel transact manag ment transact synchron distribut oper system tr principl transactionori databas recoveri synchron share abstract type nest transact approach reliabl distribut comput concurr control recoveri databas system theoret foundat multilevel concurr control abstract recoveri manag measur transact process power implement argu concept transact recoveri nest transact distribut program argu model concurr nest transact system ariesnt recoveri method base writeahead log nest transact principl realiz strategi multilevel transact manag camelot avalon framework workload alloc distribut transact process system system level concurr control distribut databas system system r transact synchron distribut oper system concurr control distribut databas system notion consist predic lock databas system concurr hightraff data element transact mechan engin design databas nest transact multipl commit point architectur issu transact manag multilay system logbas recoveri nest transact note data base oper system argu languag system nest transact mechan locu ctr erhard rahm parallel queri process share disk databas system acm sigmod record v22 n4 p3237 dec 1993 patiomartnez r jimnezperi arvalo implement transact use ada except featur miss acm sigada ada letter vxxi n3 septemb 2001 hongren chen h chin schedul valuebas nest transact distribut realtim databas system realtim system v27 n3 p237269 septemb 2004 elisa bertino barbara catania elena ferrari nest transact model multilevel secur databas manag system acm transact inform system secur tissec v4 n4 p321370 novemb 2001 kunal verma john miller boanerg alemanmeza design highperform databas engin db4xml nativ xml databas system journal system softwar v69 n12 p87104 01 januari 2004 laurent dayn grzegorz czajkowski lightweight flexibl isol languagebas extens system proceed 28th intern confer larg data base p718729 august 2023 2002 hong kong china stefan deloch theo hrder nelson matto bernhard mitschang joachim thoma advanc data process krisi model concept implement techniqu clientserv issu vldb journal intern journal larg data base v7 n2 p7995 may 1998 c mohan repeat histori beyond ari proceed 25th intern confer larg data base p117 septemb 0710 1999 alexand thomasian concurr control method perform analysi acm comput survey csur v30 n1 p70119 march 1998 klau r dittrich han fritschi stella gatziu andrea geppert anca vaduva samo hindsight experi build activ objectori dbm inform system v28 n5 p369392 juli norman w paton oscar daz activ databas system acm comput survey csur v31 n1 p63103 march 1999