theorybas represent objectori domain model abstractform softwar specif long tout way increas qualiti reliabl softwar howev remain intric manual intens activ altern use formal specif directli translat graphic base semiform specif formal specif howev translat take place formal definit basic objectori concept must found paper present algebra model objectorient defin objectori concept repres algebra use objectori algebra specif languag oslang oslang combin basic algebra specif construct categori theori oper captur intern object class structur well relationship class b introduct field softwar engin continu evolv toward tradit engin di ciplin concept emerg import evolut use formal specif represent softwar requir formal languag 12 represent mani potenti benefit rang improv qualiti specif automat gener execut code impress result emerg util formal specif 34 develop formal specif repres user requir still difficult task restrict adopt formal specif practition hand approach requir model gain accept use objectori method initi introduc program paradigm applic extend entir softwar lifecycl inform approach consist graphic represent natur languag descript mani variat rum baugh object model techniqu omt typic perhap wide referenc 5 omt three model combin captur essenc softwar system object model captur structur aspect system defin object attribut relationship associ behavior system captur two model dynam model captur control flow classic statetransit model statechart function model repres system calcul hierarch data flow diagram process descript three model need captur softwar system requir although given system one two model may lesser import even omit system kid 3 specwar 6 make progress softwar synthesi research acquisit formal specif keep pace formal specif softwar remain intric manual intens activ problem associ specif acquisit includ lack expertis mathemat logic concept among softwar develop inabl effect commun formal specif end user valid requir tendenc formal notat restrict solut creativ 7 fraser et al suggest approach overcom problem via parallel refin semiform formal specif parallel refin approach design develop specif use semiform formal represent success refin represent parallel 7 fig 1 show concept parallel refin system formal specif develop system domain engin would use graphicallybas objectori interfac specifi domain model domain model would automat translat formal class theori store librari user knowledg domain would use graphicallybas objectori interfac refin domain model problem specif formal function specif final softwar engin would map function specif appropri formal architectur theori gener specif capabl transform code system specwar bailor approv system specif specif structur domain engin specif gener objectori user interfac specif acquisit mechan domain knowledg domain theori composit subsystem class theori theori librari abstract type problem requir architectur theori specif generationrefin subsystem architectur match subsystem function specif design decis nonfunct function figur 1 parallel refin specif acquisit mechan critic element success system definit formal represent captur import aspect objectorient along formal represent syntax semant inform model map ensur full equival inform formal model formal represent inform model done bit piec 8910 full consist integr formal object model exist paper describ method fulli repres objectori model use algebra theori 11 algebra languag oslang defin extens kestrel institut slang 12 oslang support algebra represent object allow use categori theori oper morphism colimit combin primit object specif form complex aggreg extend object specif captur multipl inherit 13 use formal represent along formal transform inform model demonstr automat gener formal algebra specif commerci avail object orient case tool remaind paper organ follow section 2 discuss relat work section 3 present basic algebra categori theori concept section 4 introduc basic object model section 5 7 describ inherit aggreg object commun detail final section 8 discuss contribut plan futur relat work number effort design incorpor objectori concept formal specif languag mooz 14 objectz 15 extend z ad objectori structur maintain modelbas semant z 16 ooz 17 also extend z provid semant base algebra categori theori although z extens provid enhanc structur techniqu provid improv specif acquisit meth od foop 18 algebra objectori specif languag base obj3 19 foop obj3 focu prototyp provid littl support specif acqui sition research direct toward improv specif acquisit translat objectori specif formal specif 10 howev techniqu base z lack strong notion refin specif code 3 theori fundament theorybas algebra specif concern 1 model system behavior use algebra collect valu oper valu axiom character algebra behavior 2 composit larger specif smaller specif composit specif accomplish via specif build oper defin categori theori construct 20 theori set assert logic prove axiom given specif thu specif defin theori term theori present algebra specif structur specif defin term sort abstract collect valu oper sort structur call signatur signatur describ structur solut howev signatur specifi semant specifi semant definit signatur extend axiom defin intend semant signatur oper signatur associ axiom call specif exampl specif shown figur 2 spec array sort e oper appli axiom 8 e figur 2 array specif specif allow us formal defin intern structur object class attribut oper howev provid capabl reason relationship object class creat theorybas algebra specif parallel objectori specif abil defin reason relationship theori similar use objectori approach inherit aggreg etc must avail categori theori abstract mathemat theori use describ extern structur variou mathemat system 21 use describ relationship specif categori consist collect cobject carrow object 1 carrow object 2 carrow compos 3 arrow composit associ obviou exampl categori set cobject set c arrow function set howev greater interest research categori spec spec consist specif cobject specif morphism c arrow specif morphism oe pair function map sort oe oper spec finitemap sort r oper appli axiom 8 figur 3 finit map specif oeomega one specif compat sort oper second specif axiom first specif theorem second specif intuit specif morphism defin one specif embed anoth exampl morphism array finitemap figur 3 shown appli 7 applyg specif morphism compris basic tool defin refin specif toolset extend allow creation new specif set exist spec ific often two specif deriv common ancestor specif need combin desir combin consist uniqu part two specif share part common specif part defin share ancestor specifica tion combin oper colimit conceptu colimit share union set specif base morphism specif morphism defin equival class sort oper exampl morphism oe specif specif b map sort ff sort fi ff fi equival class thu becom singl sort colimit specif b oe colimit oper creat new specif colimit specif specif morphism specif colimit specif exampl show relationship colimit multipl inherit provid section 5 basic tool morphism colimit construct specif number way 20 1 build specif signatur set axiom 2 form union set specif via colimit 3 renam sort oper via specif morphism 4 parameter specif mani method use translat objectori specif theorybas specif detail semant objectori concept use specif categori theori construct present next 4 object class build block objectorient object class defin structur object respons extern stimuli base current state formal defin section 41 class type class templat individu object instanc creat fig 4 show specif bank account class oslang 41 class structur theorybas object model captur structur class theori present algebra specif follow class type c signatur hsomega set axiom phi sigma ie theori present specif denot set sort includ class sort omega denot set function phi denot set axiom sigma sort use describ collect data valu use specif oslang distinguish sort class sort set possibl object class algebra sens realli set possibl abstract valu represent object class function inomega classifi oslang syntax attribut method stateattribut state class acct import amnt date class sort acct sort acctstat oper attribut stateattribut method createacct state event newacct axiom state uniqu invari axiom oper definit method definit event definit 8 acct x amnt acctstateaok 8 acct x amnt acctstateaoverdrawn endclass figur 4 object class event oper attribut defin implicitli visibl function return specif data valu fig 4 function date bal attribut method nonvis function invok via visibl event modifi object attribut valu method domain includ object along addit paramet return valu alway modifi object fig 4 function createacct credit debit method semant function well invari class attribut valu defin use first order predic logic axiom gener axiom defin method describ effect attribut valu follow exampl 42 class behavior state model state partit crossproduct object attribut valu exampl bank account might partit ok overdrawn state base partit balanc valu formal class type least one state sort multipl state sort allow model concurr state model substat model set state element state sort defin nullari function state attribut defin state sort function return current state object set state invari axiom describ constraint class attribut must hold true given state object model separ state attribut normal attribut captur notion object abstract state might defin statechart valu state attribut defin object abstract state valu normal attribut defin object true state fig 4 class state sort acctstat class state attribut acctstat state constant ok overdrawn state invari axiom state balanc account greater equal zero account must ok state howev balanc account becom less zero state must becom overdrawn tempt replac implic oper equival oper would unnecessarili restrict subclass deriv class defin section 5 addit axiom ok 6 overdrawn ensur correct interpret specif state ok overdrawn distinct event event visibl function allow object commun may directli modifi state attribut present detail discuss specificaiton commun object section 7 side effect receipt event may caus invoc method gener event sent object event distinct method separ control execut separ keep us emb statebas control inform within method class new event trigger creat method initi object state attribut fig 4 function newacct deposit withdraw event effect event class behavior repres statechart fig 5 defin set axiom similar follow axiom fig 4 ok overdrawn depositaxcreditax newacctd figur 5 account statechart class oper oper visibl function gener use comput deriv attribut may directli modifi attribut valu fig 4 function acctattrequ oper similar method event semant oper defin use first order predic logic axiom inherit class inherit play import role objectorient howev correct use inherit uniformli agre upon work chosen use strict form inherit allow subclass object freeli substitut superclass situa tion subtyp interpret select simplifi reason classs properti keep close relat softwar synthesi concept 6 believ advantag strict inherit outweight disadvantag research sinc argument favor less strict approach inherit polymorph overload much german implement specif thu subtyp subclass may extend featur superclass liskov defin desir effect substitut properti 22 object type object type program p defin term behavior p unchang substitut subtyp way ensur substitut properti hold case ensur effect superclass oper perform object equival subclass superclass achiev inherit must provid map sort oper attribut superclass subclass preserv semant superclass basic definit specif morphism extend oslang map class sort classsort attribut attribut method method etc provid us formal definit inherit 13 specif morphism map sort oper one algebra specif sort oper second specif axiom first specif theorem second specif 13 thu essenc specif morphism defin embed function one specif second specif class said inherit class c denot exist specif morphism c class sort subsort class sort c ie cs provid concis mathemat precis definit inherit ensur preserv substitut properti state theorem 1 11 theorem 1 given specif morphism oe c two intern consist class c cs substitut properti hold c sinc assum user defin specif initi consist ensur consist subclass long user introduc new axiom subclass redefin method defin superclass affect attribut also defin superclass exampl singl inherit use subclass acct class shown fig 6 import statement includ sort function axiom declar acct class directli new class class sort declar sacct acct state sacct subsort acct function axiom appli acct object appli sacct object well statechart sacct shown fig 7 import oper defin specif morphism acct sacct subsort declar complet requir definit 2 inherit therefor sacct valid subclass acct substitut properti hold 51 multipl inherit multipl inherit requir slight modif notion inherit state definit 2 set superclass must first combin via categori theori colimit oper use inherit base specif morphism colimit oper compos set exist specif creat new colimit specif 21 new colimit specif contain sort function origin set specif without duplic share sort function common ancestor specif conceptu colimit set specif share union specif therefor colimit oper creat new specif colimit specif morphism specif colimit specif definit 3 multipl inherit class multipli inherit set class fc 1 g exist specif morphism colimit fc 1 c n g class sort subsort class sort fc 1 c n g definit state sort oper superclass map sort oper subclass defin axiom logic consequ axiom class sacct import acct rate class oper attribut rate method createsacct event newsacct computeinterest sacct date sacct axiom 8 date r rate a1 sacct oper definit method definit 8 sacct amnt 8 sacct amnt event definit endclass figur save class ok overdrawn depositaxcreditax ratechangeadr ratechangeadr computeinterestad intad figur 7 save account statechart subclass impli oper defin superclass applic subclass well definit ensur subclass inherit sens definit 2 superclass fc 1 c n g shown theorem 2 11 theorem 2 given specif morphism colimit fc 1 c n g class sort subsort class sort fc 1 c n g substitut properti hold superclass fc 1 c n g import note definit 3 ensur valid inherit axiom defin oper superclass specif fc 1 c n complet failur complet defin oper result inconsist colimit specif 11 use multipl inherit combin featur save account check account cacct defin fig 8 comput result class colimit class acct sacct cacct morphism acct sacct cacct comput shown fig 9 arrow label repres import morphism c repres morphism form colimit oper simpl extens colimit specif class sort definit combacct sacct cacct yield desir class combacct subclass sacct cacct denot oper class sort definit fig 10 show long version combin specif signatur attribut method event inherit combacct class axiom omit breviti class cacct import acct class sort cacct acct oper attribut checkcost method createcacct setcheckcost cacct amnt cacct event newcacct changecheckcost cacct amnt cacct axiom 8 cacct x amnt axiom omit endclass figur 8 check class sacct cacct acct combacct c c c figur 9 colimit account class combacct import sacct cacct class sort acctstat oper attribut rate checkcost stateattribut method createacct combacct createsacct combacct createcacct combacct createcombacct combacct combacct combacct combacct combacct setcheckcost combacct combacct state event newacct combacct newsacct combacct newcacct combacct newcombacct combacct combacct combacct combacct computeinterest combacct changecheckcost combacct combacct axiom 8 cacct x amnt axiom omit figur 10 combin account signatur 6 aggreg aggreg relationship two class one class aggreg repres entir assembl class compon partof assembl aggreg class allow model system compon also provid conveni context defin constraint associ compon aggreg class behavior defin compon constraint thu aggreg impos architectur domain model specif deriv compon aggreg class model similarli attribut class concept objectvalu attribut objectvalu attribut class attribut whose sort type set object classsort anoth class formal specif function take object return extern object set object effect method objectvalu attribut similar normal attribut howev instead directli specifi new valu objectvalu attribut event sent object store objectvalu attribut formal defin aggreg use colimit oper objectvalu attribut class c aggreg set compon class fd 1 n g exist specif morphism colimit fd 1 n g c c least one correspond objectvalu attribut class sort fd 1 n g aggreg class combin number class via colimit oper specifi system subsystem colimit oper also unifi sort function defin separ class associ ensur associ actual relat two specif class captur domain model within singl structur creat domainlevel aggreg creat aggreg colimit class associ within domain taken 61 aggreg structur aggreg consist number class provid conveni mean defin addit construct relationship construct includ class set individu compon associ 611 class set class type definit specifi templat creat new instanc order manag set object class class set creat class defin class set class whose class sort set object previous defin object class c class set includ class event definit event c recept class event class set object send correspond event c object type c contain class set object class c subclass class set c subclass class set 1 n class set creat class type whose class sort set object defin basic function set exampl fig 11 acctclass import acct class specifica class acctclass containedclass acct class sort acctclass event axiom endclass figur 11 oslang class set specif tion add addit class event class event mirror object event defin class type distribut event invoc object class set result specif effect set acct object use categori theori colimit oper class type specif combin basic set specif automat deriv class set specif 612 specif compon compon may either fix variabl recurs structur three structur use objectvalu attribut refer object defin aggreg differ lie type object referenc function axiom defin objectvalu attribut fix configur aggreg refer particular object refer may chang abil aggreg object chang object refer objectvalu attribut determin whether method exist initi method modifi objectvalu attribut method modifi objectvalu attribut aggreg fix method modifi object valu attribut aggreg variabl recurs structur also easili repres use objectvalu attribut case objectvalu attribut defin class type refer class sort 613 associ associ model relationship aggreg compon defin link singl connect object instanc associ group link link defin object class may connect along attribut function defin link link attribut link function belong one object involv exist link object formal associ repres gener specif defin set individu link link defin specif use objectvalu attribut refer individu object two class link may also defin link attribut function manner ident object class basic link class whose classset associ associ set link associ two class handl similar manner simpli ad addit objectvalu attribut definit 6 link link object class type two objectvalu attribut definit 7 associ associ class set link specif multipl defin number link associ given object may particip binari associ imag oper defin class associ ation imag oper return set object particular object associ use defin multipl constraint shown fig 12 binari associ allow five categori associ multipl exactli one mani option one numer specifi true ternari higher level associ rel rare howev exactli one 7 mani 7 option 7 one 7 numer specifi 7 numer specifi 7 figur 12 associ multipl axiom model use associ class ternari associ imag oper return set object tupl associ given object sinc output set tupl multipl axiom shown fig 12 appli 614 bank exampl exampl link specif class custom cust illustr acct class associ custom account shown fig 13 calink link specif relat object two class without embed intern refer class although name objectvalu attribut sort correspond custom acct class link specif formal tie class togeth relationship actual formal aggreg specif associ acct class custom class shown fig 14 custacct class defin set calink object axiom defin multipl relationship account custom case exactli one custom per account custom may one account custom acct custacct class combin form aggreg bank sort cust custacct sort acct custacct unifi via specif morphism defin equival shown fig 15 actual specif aggreg colimit bankaggreg shown refin aggreg specif bank seen fig 16 set specif use unifi sort integ specif ensur singl copi integ includ three copi set specif includ sinc class requir uniqu set bankaggreg specif comput custacct associ actual associ custom class acct class new function axiom link calink class sort calink sort custom account oper attribut custom account method event axiom oper definit creat method definit 8 c custom account new event definit 8 c custom account calinkattrequalnewcalinkca createcalinkca endlink figur 13 custom account link associ custacct linkclass calink class sort custacct sort account custom method imag custacct custom account custom event newcustacct custacct axiom multipl axiom new event definit definit imag oper endassoci figur 14 custacct associ acctclass custclass custacct bankaggreg c c integ c bank figur 15 aggreg composit class bank import class sort bank attribut custacct method aggreg method defin updateacct updatecustacct custacct event startaccount axiom definit aggreg method term compon invari definit oper 8 b bank address acctno c custom definit method 8 b b1 bank acctno c custom addaccountb c date built definit event attrequalnewbank createbank 8 bbank anacctno ccustom attrequalstartaccountbcanaddaccountbcan 8 b bank acctno c custom amount 8 b bank acctno c custom amount endclass figur aggreg specif ad extens colimit specif bank class type specif shown fig 16 describ aggregatelevel interfac aggreg behavior base compon event method 62 aggreg behavior aggreg creat via colimit oper specif requir make aggreg behav integr manner first new aggreg level function defin enabl aggreg respond extern event constraint aggreg compon specifi ensur aggreg behav unsuit unexpect manner final local event commun path defin definit new function constraint discuss section commun object discuss section 7 621 specif function aggreg compon work togeth provid desir function function decomposit often depict use data flow diagram dfd use break aggregatelevel method lowerlevel process process defin function model map event attribut defin aggreg compon aggregatelevel axiom exampl shown data flow diagram fig 17 aggreg method addaccount use implement aggreg event startaccount makedeposit makewithdraw event map directli compon event requir function decomposit addaccount process add account establish custom defin term oper defin directli bank specif figur 16 includ bank specif via bank aggreg specif customeraccount link specif figur account specif figur 4 follow axiom defin addaccount term subprocess data flow depict data flow diagram addaccount custom new calink new account acct custom acct updat custacct custacctassoc custacct updat acct acct custacct figur 17 bank aggreg function decomposit assum date built addaccount method two paramet bank object b plu exist custom object shown data flow diagram return modifi bank object b1 addaccount method defin subprocess first new account acct creat invok newacct process pass updateacct process store new account account class newcalink process along custom return custacct link final new custacct link pass updatecustacct process store custacct associ newacct newcalink process event defin acct class calink associ respect alreadi avail via aggreg updateacct updatecustacct process could alreadi exist part account class custacct associ shown defin aggreg specif 622 specif constraint compon aggreg compon behavior must often constrain aggreg act integr fashion gener constraint express axiom defin compon attribut aggreg colimit compon aggreg may access compon directli defin axiom relat variou compon attribut engin wheel transmissiondr automobilerpm conversionfactor rpm connect figur automobil aggreg function decomposit simplifi automobil object diagram shown fig 18 object diagram contain one engin rpm attribut one transmiss conversionfactor attribut four wheel rpm attribut two relationship exist object drive relat transmiss exactli two wheel connect relat two wheel probabl axl obvious number constraint implicit object diagram must made explicit aggreg first rpm engin conversionfactor transmiss rpm wheel relat also wheel driven transmiss must connect connect wheel rpm axiom defin relationship rpm wheel driven transmiss transmiss conversionfactor engin rpm case wheelobj object valu attribut drive link point two wheel connect transmiss axiom ensur two wheel connect connect link rpm valu wheel1 wheel2 object valu attribut link final constraint two wheel driven transmiss connect specifi implicitli specif createautomobil method transmiss wheel object w1 w2 w3 w4 creat line 1 5 drive connect link creat defin ensur appropri constraint met line 6 9 final line 10 engin creat insert automobil aggreg wheel w1 w2 associ transmiss via drive associ line 6 also associ togeth via connect associ line 8 thu constraint satisfi whenev automobil aggreg object creat 7 object commun point theorybas object model suffici describ class relationship composit aggreg class howev object commun yet address exampl suppos bank system describ earlier archiv object log transact occur obvious archiv object must told transact take place model object awar certain set event gener receiv object perspect event gener broadcast entir system receiv system scheme event defin separ event theori shown fig 19 event theori consist class sort paramet sort event signatur map via morphism sort event gener receiv class event sent singl object event theori class sort map class sort event archivewithdraw class sort archiv sort acct amnt event archiv endclass figur 19 event theori object class howev event theori class sort map class sort class set commun may occur set object class sort event theori class sort event paramet final part event theori event signatur map compat event signatur receiv class colimit class event theori morphism unifi event sort invoc event gener class correspond invoc actual event receiv class incorpor event origin acct class archivewithdraw event theori specif import acct class objectvalu attribut archiveobj ad refer archiv object axiom defin effect withdraw event modifi reflect commun archiv object shown basic axiom state withdraw event receiv valu archiveobj modifi archivewithdraw event defin event theori specif thu acct object know commun object object howev know object commun matter object commun determin aggregatelevel actual connect commun compon made modifi bank aggreg diagram includ archivewithdraw event theori archiveclass specif shown fig 20 colimit oper includ morphism archivewithdraw acctclass archiveclass unifi sort event signatur acctclass sort event signatur archiveclass unif creat commun path account object archiv object acctclass custclass custacct bank archivewithdraw archiveclass c c figur 20 bank aggreg archiv commun object multipl class requir addit anoth level specif broadcast commun event interest object class class sort broadcast theori call broadcast sort repres object send object commun broadcast theori defin objectvalu attribut receiv class fig 21 show exampl archivewithdrawalmult event theori modifi commun two class case archivewithdraw theori use unifi archivewithdrawalmult account class well two class simplifi version colimit diagram specif shown fig 22 multipl receiv class add layer specif howev multipl send class handl simpli addit construct requir morphism send class event theori map appropri objectvalu attribut send class class sort event theori event signatur send class event signatur event theori event archivewithdrawalmult class sort archiv sort amnt acct x attribut event archiv axiom 8 archiv ac acct amnt endclass figur 21 broadcast theori acctclass custclass custacct bank archiveclass printerclass archivewithdrawalmult c c c c c archiv archiv archiv c c c c figur 22 aggreg use broadcast theori 71 commun aggreg compon commun compon handl aggreg level describ ever commun aggreg one compon unif objectvalu attribut class sort via event theori work sinc class sort aggreg creat colimit comput solut requir use sort axiom equival two sort shown use bank exampl discuss assum archivewithdraw event also receiv bank aggreg archivewithdraw event theori includ account class type colimit oper bank aggreg enabl bank aggreg receiv archivewithdraw event sortaxiom use bank specif equival bank sort aggreg archiv sort event theori shown archiv use sort axiom unifi bank sort archiv sort thu signatur archivewithdraw event defin event theori bank aggreg becom equival commun aggreg compon subcompon much simpler sinc aggreg includ sort function axiom compon subcompon via colimit oper aggreg directli refer compon objectvalu attribut declar either compon aggreg awar configur determin correct objectvalu attribut use problem 8 discuss result futur effort 81 object model research establish formal mathemat represent objectori paradigm within categori theori set theorybas object model class defin theori present specif basic objectori concept inherit aggreg associ interobject commun formal defin use categori theori opera tion work formal aspect objectorient exist 2381824 25 first formal import aspect objectorient cohes comput tractabl framework fact formal inherit aggreg associ provid techniqu ensur consist objectori specif base composit process complet integr model allow captur objectori model formal specif furthermor algebra languag oslang allow straightforward translat exist algebra languag slang larch transform execut code thu model provid bridg exist inform case tool exist formal specif languag tie eas use former technic advantag latter 82 applic object model show applic theorybas object model develop proof concept parallelrefin specif acquisit system system use commerci avail omtbas objectori case tool captur inform specif includ graphic represent object dynam function model along textual input form method definit classlevel constraint neither graphic format defin omt gener easier defin directli use firstord axiom output userinterfac pars translat oslang base theorybas object model translat graphicallybas input oslang complet autom two complet objectori domain model develop use system school record databas fuel pump station domain chosen demonstr wide divers domain stress function dynam aspect support model total 37 class includ 76 method oper 89 attribut 5 aggreg event 7 associ specifi domain model suffici larg divers demonstr applic theorybas model support realist problem domain 83 futur plan definit theorybas model map 11 inform represent provid necessari framework parallel refin system specif develop shown fig 1 theorybas object model allow develop domain model librari class theori oslang represent next transform slang specif straightforward manner allow full use specwar develop system specwar system alreadi demonstr abil gener execut code algebra specif thu technolog exist transform inform objectori model correct execut code class theori translat code desir approach treat full domain model specif specif develop input design process thu next step develop specif generationrefin subsystem fig 1 elicitorharvest elicit requir user reason domain model harvest compon domain model build desir specif abil map inform model theorybas object model allow user interfac system use familiar inform represent formal model support reason need guid user well assur harvest specif remain consist constraint domain model acknowledg work support grant rome laboratori nation secur agenc air forc offic scientif research r report knowledgebas softwar assist softwar engin twentyfirst centuri kid semiautomat program develop system transform approach transport schedul diagram softwar synthesi strategi incorpor formal speci ficat formal semant object model diagram statechart visual formal complex system teach formal extens informalbas objectori analysi methodolog formal transform graphicallybas objectori represent theorybas specif kestrel institut fundament algebra tool semant comput part comma categori colimit signatur theori specifi conceptrecognit system z objectz objectori extens z compar descript objectori specif languag specif ooz exampl unifi function objectori relat program logic semant introduc obj3 algebra specif syntax semant structur categori theori definit exampl data abstract hierarchi practic consequ formal defint inherit algebra theori objectori system model multipl inherit colimit tr ctr ana mara fune chri georg formal uml class diagram uml unifi process idea group publish hershey pa