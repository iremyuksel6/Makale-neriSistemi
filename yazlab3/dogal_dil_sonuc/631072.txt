except handler function program languag construct express except handl greatli help avoid clutter code allow programm separ code handl unusu situat code normal case author propos new approach emb except handler function languag propos approach discard convent view treat except mean effect control transfer instead except use chang state object two type except termin resum treat differ termin except rais view shield input object hand resum except design input object curabl requir immedi applic handler function approach enabl clean semant function rais except without associ implement restrict without loss referenti transpar commut properti function b introduct function program languag fp 1 describ algorithm clear concis natur way program languag highli desir featur fp program construct use primit userdefin function build block function program form oper compos function program exhibit clear hierarch structur high level program combin form higher level pro gram besid function languag free side effect express parallel natur way properti make fp attract theoret perspect also program construct point view key issu program construct robust 8 softwar reliabl achiev judici use faulttoler tool except handl 4 one two techniqu use develop reliabl softwar function languag name standard ml 7 parallel standard ml psml 6 alex 3 gerald 9 author depart electr engin mcgill univers 3480 univers street montreal h3a 2a7 canada research work support grant receiv micronet network centr excel canada preliminari version work appear proceed 16th intern comput softwar applic confer chicago il 1992 function languag fl 2 support construct softwar faulttoler one reason could attribut concis semant strong mathemat properti function languag make prove correct program easi henc program verif tech niqu rather faulttoler tool popular function languag despit fact argu notat except handl still necessari follow reason definit except necessarili restrict failur follow goodenough definit 5 consid except condit brought attent oper invok treat except failur broaden outlook except handl becom use tool function languag imper languag except classifi two type name termin resum except paper defin develop requir notat program termin resum except though propos notat principl use function applic languag choos backu fp 1 expositori pur pose discuss certain preliminari except handl next section section also present approach embed faulttoler tool fp subsequ section introduc new construct program termin except present exampl explain mean intent propos construct section iv demonstr introduct new construct destroy algebra properti fp section v deal resum ex ception final compar work relat work section vi ii background section concept except handl elucid imper framework reason simplic eas understand preliminari specifi servic provid given softwar modul classifi normal expect desir abnorm expect undesir unanticip un expect undesir servic 4 5 first case execut modul termin normal second case lead except result except handl modul certainli fail provid specifi servic handl detect except mod ule therefor contain except handler despit occurr lower level except modul provid normal servic say lower level except mask handler hand modul unabl mask lower level except provid except result except propag higher level last three case correspond unexpect behavior softwar modul unexpect behavior attribut exist one design fault either modul lower level modul design fault unanticip except handl help default except handler notat procedur use indic procedur p addit normal return also provid except return e bracket three dot denot paramet procedur whose detail german discu sion bodi p design insert construct respons rais except condit b true except e rais cleanup oper may perform signal e construct repres case except detect runtim test b altern except could detect system run time signal except condit arithmet overflow flow illeg array index explicit condit need program systemdefin except point except rais either detect system runtim test call activ point handler h e associ place p invok fact handler associ invok p ancestor p programm desir place handler associ term associ point except depend type servic requir except one two type name termin except resum except 4 5 consid procedur defin procedur except e invok runtim test b satisfi follow control transfer handler h e termin except complet h execut control continu associ point resum except statement follow execut complet h thu except control switch activ point handler continu execut associ point wherea resum except control temporarili jump handler return activ point complet handler fact made use defin notat except handl fp b relat issu bretz 3 identifi two problem support except handl construct function program except imper languag treat mean effect control transfer henc fundament conflict function approach follow function languag control flowori view except due except function languag result nondeterminist behavior fp program exampl two except point insid given function result parallel evalu function could differ depend except rais first consid evalu function addsubexp defin use alex syntax 3 signal applic like handl xx termin could yield 3 5 depend order evalu subexpress problem consid intrins incorpor except function languag languag ml 7 alex 3 circumv problem propos sequenti execut fp restrict sever essenti requir control flow view except carri function lan guag discard view defin semant fp function oper except object without impos restrict execut though gerald 9 psml 6 allow parallel execut subexpress retain determinist behavior assign prioriti except secondli except handl might caus side effect express henc might violat properti referenti transpar propos solut 3 7 suggest associ environ function case discard convent control flow view except solv problem natur establish section iv introduct new construct preserv algebra properti function languag approach like psml 6 use error valu handl except howev import differ two section vi bring differ reev et al 9 point embed except handl construct lazi function languag transform nonstrict function hyperstrict function illustr help express handl bad x0 termin phi nonstrict binari oper nonstrict argument signal bad propag oper phi handl respect handler function even though phi defin nonstrict argument uppropag signal phi make strict subexpress need evalu determin whether rais except reev et al claim transform nonstrict actor hyperstrict actor due uppropag signal nonstrict oper overcom problem notion downpropag firewal defin 9 paper howev argu uppropag persist natur except valu caus problem mean except valu part object hx error signal e special statu persist object indistinguish e also refer follow strict semant except valu section iiic illustr help exampl show problem could overcom follow lazi semant error valu follow subsect describ approach incorpor except handler function languag c approach embed except handler fp except incorpor except handler fp discard convent control flowori approach instead termin except consid shield input object termin except e rais appli function f object x input object consid shield e object repres x e except object x e compon composit object x 1 object respect known fulli partial shield object shield object x 1 x e 1 one fulli shield object possibl shield differ except name constitu element thu partial shield object fulli shield object shield either except anoth except x e e 0 valid object howev object valid interestingli e 0 e object observ hierarchi shield function except respect handler oper fullyshield object inhibit word object fulli shield function appli behav like ident function handler h except e appli x e remov shield object result h x must note handler remov correspond shield thu object shield number except shield remov respect handler appli appropri order function oper partial shield object either behav like ident function result expect valu depend semant function function defin nonstrict respect except shield object 1 even though function strict diverg comput origin definit fp relax allow function semant fp function function form oper shield object partial shield object describ next section reason choos nonstrict semant henceforth nonstrict paper refer nonstrict respect shield object allow shield object exist carri strict fp function function form ultim handl appropri handler resum except resum except handl local possibl therefor embed function languag caus fundament conflict sinc resum except handl local concept shield object help howev sophist handl requir resum except view situat follow manner resum except rais input object consid abnorm need cure immedi instead pass object possibl shield handler handler invok activ point immedi cure function view simpl serv purpos follow section introduc notat construct termin resum except new construct defin domain semant fp function redefin requir iii termin except object function function form fp extend follow way emb termin except extend fp system object formal object undefin denot atom x sequenc object hx x could normal object ii partial shield iii complet shield singl except domain object divid three disjoint set name set c complet shield object form x e ii set p partial shield object form hx iii set n normal shield object form hx p set n p c primit function semant primit function oper shield object defin mean function appli normal object 1 select tail null function construct constant nonstrict appropri compon input object chose nonstrict semant want show approach emb except handl construct introduc hyperstrict straightforward extend definit function function form support lazi semant also possibl prove algebra law fp nonstrict function line similar given 1 present beyond scope paper select tail atom equal equal strict function strict compon argument input object x partial fulli shield equal behav like ident function id null revers revers distribut left function distribut right defin similar way add subtract multipli divid function expect input object form except function input form x 1 strict transpos append left append left strict second compon input similarli append right function strict first compon input next deal function form function form composit f construct condit constant constant function nonstrict partial fulli shield object mean appli insert definit definit fp program written form hfuncnamei hfuncdefni repres function name function bodi respect term insid brace option term includ function rais except except rais function list exceptionlist program except termin except rais use esc function except name e ad syntact sugar esc function written fp style esc ffi e id howev continu use represent esc e simplic sake handler function handler termin except e written read e h applic function call handler function x defin order write handler function fp style function hand defin howev prefer sake simplic definit esc handler function observ except name final default handler written follow semant b exampl illustr notat introduc far mean exampl exampl 31 first exampl deal systemdefin except consid select function k select kth element object let systemdefin except e isv isv stand illeg selector valu sume runtim applic function k object rais except e isv whenev k greater n except case applic result hx handler function 1r function select rightmost element structur object appli shield object produc xn exampl 32 consid addsubexp function discuss section iib problem program fp applic addsubexp1 result appli final add result irrespect order subexpress exp1 exp2 evalu interest note gerald 9 psml 6 one two except e1 e2 given higher prioriti except allow propag exampl evalu subexpress parallel determinist behavior guarante way gerald intuit approach adopt gerald base replac model yemini berri 11 obviou psml use error data valu handl except priorit except result loss commut properti commut regain gerald enforc certain lexic scope rule case enforc prioriti subexpress parallel execut model would caus addit implement overhead neither gerald psml address implement issu involv priorit except exampl 33 lastli consid convers string number ascii equival assum function asc asc produc ascii equival number ascii charact respect convers string number easili done fp use applytoal function illustr featur propos notat recurs context program exampl follow way ascii ffi1 asciistr ffitl function ge le repres respect greater equal less equal logic function applic asciistr input h64 65 30i result ha b c remark certain remark order systemdefin except detect implicitli runtim except rais execut primit function fp appropri declar systemdefin except type termi nate handler systemdefin except easili defin use propos notat shown exampl 31 ii propos user freedom defin handler anywher like shield object partial fulli propag strict function reach handler propag implicit howev nonstrict function may danger effect partial complet prune except object henc care need exercis place handler function iii shield object propag dynam invoc chain encount appropri han dler henc handler associ dynam may observ view termin except shield abnorm valu facilit dynam handler associ natur manner iv mention earlier psml gerald requir addit priorit scheme retain determinist behavior parallel execut model ap proach howev except object nonpersist caus indetermin behavior matter order subexpress evalu v lastli review problem except introduc hyperstrict function languag consid function signal e1 express similar handl bad x0 termin select function use former place oper phi 9 argu uppropag signal bad transform phi strict function howev reduc circledplu turn return valu 14 thu evalu remain nonstrict even presenc except e1 uppropag howev allow except object persist applic circl plu h12 13 14i would result 2 h13 e1 make select function strict thu say essenti persist natur except ob ject uppropag transform nonstrict function strict function follow section present formal approach describ termin except handler iv formal studi fp except preliminari set input object call input domain denot order studi algebra properti function pro gram first need studi behavior primit function fp primit function f domain input object partit two disjoint set call activ domain repres ad f denot id f intuit activ domain function f consist object function intend effect object belong ident domain f function inhibit formal object x belong ad f x ident function id ad id f set object object activ domain function could still partial complet shield object activ domain ident domain esc e object belong c form domain esc e next consid handler function may note effect applic handler function object belong activ domain slightli differ effect f x x 2 ad f perform two action remov shield x ii applic h normal object bar small differ say primit function f includ esc e function handler function behav either f identifi function id behavior f howev determinist depend entir whether input object activ ident domain f b choic oper repres behavior function mathemat introduc determinist choic oper function f written f f1 f f2 identifi function applic f object x result ad f f 1 appropri defin handler func tion detail f requir prove algebra properti henc ignor henceforth follow axiom written choic oper use definit function form present section iiia axiom 1 composit axiom 2 condit axiom 3 construct axiom 4 applytoal axiom 5 insert f basi axiom select choic determinist select one function influenc select therefor choic oper rewritten one variabl choic subscript suitabl renam lastli n 8x activ domain constant function n c algebra law fp program section prove algebra law fp program list 1 import realiz fp program consid extend includ except handler function composit associ composit condit proof proof law similar l2 2 construct composit l4 use axiom 3 axiom 1 l5 proof law prove line similar l2 l4 axiom 2 3 use proof 2 construct applytoal use axiom 2 use axiom 4 miscellan proof use axiom 1 4 law prove 2 proof law prove use axiom 2 algebra law law mean exhaust one easili prove law describ 1 line similar discuss v resum except section introduc notat program resum except notat resum except denot e e could possibl subscript function re e introduc rais resum except handler h resum except repres influx symbol indic e type resum mention earlier applic function object x rais resum except object x treat cur abl correspond handler function appli object x activ point neither correspond handler default handler present resum except runtim error occur re e function invok resum except shield object exist definit object function function form suffici express explicit compiletim techniqu requir accomplish dynam associ handler resum except beyond scope paper discuss implement associ handler present simpl exampl illustr resum except program exampl 51 exampl deal program add magnitud sequenc number program call function sum add two number except rais sum whenev either number consid addit neg handler take input argument return magnitud sum oper resum handl except negat function negat input argument seen cond function exampl rais e whenev input neg cure function negat immedi appli input object except e rais b remark first sight function rais resum except appear violat referenti transpar consid function f rais resum except e suppos h handler e necessarili associ f fx may result one two valu depend whether object lie normal except domain f thu appear f non determinist reason follow way function f consid sort higher order function h argu ment function f select appli h whenev input object except domain f determinist function whose rang divid two set one correspond normal valu except valu ii resum except indirectli use defin higher order function fp exampl consid function f written composit two function let want defin function fh f h suppli argument use resum except notat function defin thu function f consid place holder fill handler function differ handler function associ f gener number fh function interest use resum except vi relat work attempt 2 3 6 7 9 10 incorpor except handl function applic languag compar earlier propos main differ work relat one radic chang way except view earlier propos 3 7 treat except mean effect control transfer lead fundament conflict remedi requir imposit sequenti execut treat except object either shield requir immedi applic cure function approach natur suit function style therefor necessit constraint execut model ii approach similar psml 6 use error data valu handl except howev psml explain section iiib determinist program behavior retain assign prioriti except besid priorit except involv addit implement overhead gerald 9 use replac model yemini berri 11 also priorit except guarante determinist behavior hand ap proach follow nonstrict semant avoid need requir iii gerald argu uppropag error signal transform nonstrict function strict function overcom problem use firewal downpropag propos section iiic establish persist natur error signal gerald make nonstrict function strict function shield object nonpersist approach introduc hyperstrict iv scheme except automat propag higher level modul appropri handler found propag except along dynam invoc chain transpar user program languag ml 7 also support implicit propag except contrast alex 3 except must explicitli transmit v ml 7 support termin type except wherea work like alex 2 allow resum termin except vi fl languag 2 design construct except handl though userdefin except program fl except mainli use signal applic inappropri input object primit function one type except allow fl vii wadler 10 suggest lazi evalu need extra construct provid except handl function result packag singleton list null list repres error result howev minimalist approach requir consider programm effort disciplin moreov method support differ kind name except vii conclus paper introduc notat except handl fp languag construct reliabl softwar notat introduc illustr help exampl program incorpor except handl fp convent view treat except mean effect control transfer discard view except allow us describ semant fp function function way retain referenti transpar nice mathemat properti function languag fact accomplish without impos addit execut constraint sequenti execut semant primit function fp defin nonstrict manner except object mean even eager evalu strategi follow implemen tation result still lazi except object lastli approach except handl introduc hyperstrict even though chose backu fp incorpor except handl construct scheme gener could appli function languag addit alex support except differ class call retri 3 retri except exit handler execut control switch begin modul except rais attempt incorpor class except inher control transfer present propos method except handl advantag retain nice mathemat properti function languag ii determinist program behavior iii nonstrict lazi languag lead implement parallel program languag acknowledg author thank anonym review help comment work present paper would taken present shape without numer discuss author ra nichol univers western ontario london canada r program liber von neumann approach function style algebra program fl languag manual except handl construct function languag except handl softwar fault toler except handl issu propos notat except handl parallel function lan guag psml definit standard ml version 3 system structur softwar fault toler ger ald except lazi function program languag replac failur list success method except handl backtrack pattern match lazi function languag axiomat treatment except handl expressionori languag tr replac failur list success axiomat treatment except handl expressionori languag program liber von neumann style except handl except handl construct function languag ctr margaret burnett anurag agraw pieter van zee except handl spreadsheet paradigm ieee transact softwar engin v26 n10 p923942 octob 2000 takeshi ogasawara hideaki komatsu toshio nakatani edo exceptiondirect optim java acm transact program languag system topla v28 n1 p70105 januari 2006