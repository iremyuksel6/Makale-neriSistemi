effici dynam schedul algorithm multiprocessor realtim system abstractmani timecrit applic requir predict perform task applic deadlin met paper propos effici algorithm nonpreempt schedul dynam arriv realtim task aperiod task multiprocessor system realtim task character deadlin resourc requir worst case comput time p processor p degre parallel task use parallel task meet deadlin thu obtain better schedul compar nonparalleliz task schedul algorithm studi effect propos schedul algorithm conduct extens simul studi compar perform myopic 8 schedul algorithm simul studi show schedul propos algorithm alway higher myopic algorithm wide varieti task paramet b introduct multiprocessor emerg power comput mean realtim applic avion control nuclear plant control capabl high perform reliabl problem multiprocessor schedul determin processor given task ex ecut done either static dynam static algorithm assign task processor time task start execut determin priori static algorithm work support indian nation scienc academi depart scienc technolog 9 12 often use schedul period task hard deadlin main advantag solut found one sure deadlin guarante howev approach applic aperiod task whose characterist known priori schedul task multiprocessor realtim system requir dynam schedul algorithm dynam schedul 3 8 new task arriv schedul dynam determin feasibl schedul new task without jeopard guarante provid previous schedul task thu predict execut schedul analysi must done task execut begun feasibl schedul gener time resourc constraint task satisfi ie schedul analysi success task dispatch accord feasibl schedul r oeae oeae oeae current schedul dispatch queue processor min length dispatch queue fig1 parallel execut schedul processor oe task task queue schedul dynam schedul algorithm either distribut central distribut dynam schedul scheme task arriv independ processor task arriv processor local schedul processor determin whether satisfi constraint incom task task accept satisfi otherwis local schedul tri find anoth processor accept task central scheme task arriv central processor call schedul distribut processor system execut paper assum central schedul scheme commun schedul processor dispatch queue processor dispatch queue organ shown fig1 ensur processor alway find task dispatch queue finish execut current task schedul run parallel processor schedul newli arriv task period updat dispatch queue schedul ensur dispatch queue alway fill minimum capac task left parallel oper minimum capac depend averag time requir schedul reschedul task upon arriv new task 10 shown 3 exist algorithm optim schedul dynam arriv task without mutual exclus constraint multiprocessor system neg result motiv need heurist approach solv schedul problem recent mani heurist schedul algorithm 8 13 propos dynam schedul set task comput time deadlin resourc requir 13 shown uniprocessor system simpl heurist account resourc requir significantli outperform heurist schedul base earliest deadlin first edf ignor resourc requir multiprocessor system resourc constrain task heurist search algorithm call myopic schedul algorithm propos 8 author 8 shown integr heurist function deadlin earliest start time task perform better simpl heurist edf least laxiti first minimum process time first meet deadlin achiev high resourc util two main goal task schedul realtim system preemptiv 12 nonpreempt algorithm 8 9 avail literatur satisfi requir schedul preemptiv algorithm alway higher nonpreempt version howev higher schedul preemptiv algorithm obtain cost higher schedul overhead paralleliz task schedul consid paper intermedi solut tri meet conflict requir high schedul low overhead known schedul algorithm 8 9 12 consid task execut singl processor may result miss task deadlin due poor processor util moreov task would miss deadlin total comput time requir deadlin motiv factor go paralleliz task schedul howev simul studi assum comput time task less deadlin order compar result nonparalleliz task schedul algorithm paralleliz task schedul problem studi earlier nonrealtim system 2 4 11 prove npcomplet mani research assum sublinear task speedup due interprocessor commun overhead propos approxim algorithm 2 4 problem heurist algorithm preced constrain task linear speedup assumpt report 11 realtim system task addit constraint name readi time deadlin make realtim schedul problem harder nonrealtim schedul 5 linear overhead assumpt optim pseudopolynomi time algorithm propos schedul imprecis comput task realtim system solut static schedul appli dynam case consid paper 1 algorithm schedul realtim task partition hypercub multiprocessor propos degre parallel task determin schedul rather specifi part requir task ie schedul chang degre parallel task meet deadlin 7 paralleliz task schedul algorithm dynam schedul independ realtim task multiprocessor propos work assum task period importantli algorithm report 1 5 7 consid resourc constraint among task practic requir complex realtim system paralleliz realtim task schedul wide applic problem robot arm dynam imag process exampl robot arm dynam problem consist two comput modul comput dynam solut linear system equat exhibit high degre parallel realtim constraint 14 similarli typic realtim imag process applic involv pixellevel oper convolut carri parallel differ portion imag oper task match group split object also done parallel object work propos dynam schedul algorithm exploit parallel task order meet deadlin therebi increas perform system rest paper structur follow task model definit state section 2 section 3 present dynam schedul algorithm section 4 evalu perform simul studi final section 5 conclud remark made basic 21 task model assum realtim system consist processor 1 1 task aperiod character arriv time readi time r worst case comput time worst case comput time upper bound comput time run j processor parallel 1 j 2 task might need resourc data structur variabl commun buffer execut everi task two type access resourc exclus access case task use resourc b share access case share resourc anoth task task also will share resourc resourc conflict exist two task j requir resourc one access exclus 3 task parallel parallel subtask also call split task start time order synchron execut 4 task nonpreempt ie task split task start execut finish complet 5 task worst case comput time j k call sublinear speedup assumpt sublinear due overhead associ commun synchron among split task task 22 terminolog definit 1 task feasibl schedul time constraint resourc requir met schedul schedul set task said feasibl schedul task feasibl schedul definit 2 partial schedul feasibl schedul subset task partial schedul said strongli feasibl schedul obtain extend current schedul one remain task also feasibl 8 definit 3 eat earliest time resourc r k becom avail share exclus usag 8 definit 4 let p set processor r set resourc request task earliest start time task denot estt earliest time execut start defin est eat u k avail timej denot earliest time processor p j becom avail execut task third term denot maximum among earliest avail time resourc request task share mode exclus mode 3 dynam task schedul algorithm section present dynam schedul algorithm exploit parallel task meet deadlin context paper dynam schedul algorithm complet knowledg current activ set task new task may arriv schedul current set propos paralleliz task schedul algorithm variant myopic algorithm propos 8 myopic algorithm heurist search algorithm schedul dynam arriv realtim task resourc constraint vertex search tree repres partial schedul schedul vertex extend vertex strongli feasibl strong feasibl check first k task current task queue also known feasibl check window larger size feasibl check window higher schedul cost look ahead natur propos schedul algorithm similar myopic algorithm except parallel task whenev deadlin met schedul cost myopic algorithm degre parallel ie number split task task chosen way task deadlin met schedul task processor resourc minimum earliest avail time select schedul cost paralleliz task schedul algorithm made equal myopic algorithm perform feasibl check k task k k compar k myopic algorithm valu k depend number task parallel degre parallel ie feasibl check done till sum degre parallel task reach k word paralleliz task schedul algorithm number task check feasibl less equal size feasibl check window k worst case none task need parallel paralleliz task schedul algorithm behav like myopic algorithm case k paralleliz task schedul algorithm schedul set current activ task given paralleliz task schedulingk maxsplit k size feasibl check window maxsplit maximum degre parallel task input paramet begin 1 order task task queue nondecreas order deadlin start empti partial schedul 2 determin whether current vertex schedul strongli feasibl perform feasibl check k less k task feasibl check window given ffl let k count number task feasibl check done k 1th task current task queue ffl let numsplit maximum degre parallel permit current task ffl let cost sum degre parallel k task feasibl check done far b feasibl true k gamma cost numsplit ii comput iii find smallest j est iv j exist cost v els numsplit maxsplit break vi els feasibl fals 3 feasibl true comput heurist function h first k task b extend schedul task best smallest h valu 4 els backtrack previou search level b extend schedul task next best h valu 5 move feasibl check window one task 6 repeat step 25 termin condit met end termin condit either complet feasibl schedul found b maximum number backtrack h function evalu reach c backtrack possibl heurist function h integr heurist captur deadlin resourc requir task k w constant input paramet algorithm backtrack deadlin task met use degre parallel upto maxsplit time complex propos algorithm schedul n task okn myopic algorithm fig2b feasibl schedul produc paralleliz task schedul algorithm task set given fig2a 4 processor 1 resourc 2 instanc arriv time task fig2a 0 input valu k w number backtrack maxsplit taken 4 1 1 2 respect fig2c fig2d show search tree construct myopic schedul algorithm task set given fig2a myopic algorithm unabl produc feasibl schedul task set wherea propos algorithm abl produc feasibl schedul task set search tree construct propos algorithm given fig2c fig2 fig2b task 11 13 parallel schedul processor p 2 p 4 p 1 p 3 respect task readi time comp time deadlin resourc share 28 exclus fig2a exampl realtim task set t2t 48 fig2b feasibl schedul produc paralleliz task schedul algorithm fig2c2 node search tree repres two box left box show earliest avail time processor execut new task right box two entri separ comma correspond earliest avail time resourc instanc one entri per resourc instanc entri valu within without parenthesi indic avail time particular resourc instanc exclus share mode exampl entri 0303434 indic first instanc resourc avail share mode time 0 exclus mode time 30 second instanc resourc avail share exclus mode time 34 fig2c2 forward arc correspond extend schedul wherea backward arc correspond backtrack label b forward arc denot task schedul processor p b exampl 13 3 1 denot task 13 parallel schedul processor 1 infeas due 11 infeas due 13 1 41374137 fig2c portion search tree common algorithm fig2d portion search tree specif myopic algorithm fig2 portion search tree specif paralleliz task schedul algorithm illustr work myopic algorithm consid first vertex fig2d point task feasibl check window est similarli three task also feasibl therefor current schedul strongli feasibl heurist valu four task 58 61 61 64 respect best task 10 schedul extend schedul p 3 new vertex thu obtain strongli feasibl 11 feasibl henc algorithm backtrack previou vertex extend schedul use next best task 11 paralleliz task schedul consid vertex schedul 10 fig2 feasibl check window size 3 sinc three task schedul three 11 check feasibl sinc feasibl check 13 exce k therefor schedul extend schedul 12 p 1 t11 t13 h valu first schedul extend 11 parallel schedul split task p 2 p 4 final 13 schedul note task feasibl schedul 4 simul studi studi effect task parallel meet task deadlin conduct extens simul studi interest whether task task set finish deadlin therefor appropri metric schedul task set 8 call success ratio defin ratio number task set found schedul schedul algorithm number task set consid schedul paramet use simul studi given fig3 schedul task set gener simul use follow approach 1 task task set gener till schedul length input paramet idl time processor describ 8 comput time c 1 task chosen randomli min c max c 2 deadlin task randomli chosen rang sc 1 r sc sc shortest complet time task set gener previou step 3 resourc requir task gener base input paramet usep sharep 4 comput time c j task execut j processor j 2 equal 1 exampl c 1 comput time c 2 7 5 4 respect point perform curv figs48 averag 5 simul run 200 task set task set contain approxim 175 200 task fix schedul length 800 task set gener simul run number instanc everi resourc taken 2 figs48 repres success ratio vari r w usep numbtrk k respect maxsplit 1 task consid nonparalleliz algorithm behav like myopic algorithm note schedul cost differ valu maxsplit equal achiev make number task check feasibl k variabl discuss previou section ie maxsplit1 figs48 interest note increas degre parallel increas success ratio speedup function use paramet explan min c minimum comput time task taken 30 max c maximum comput time task taken 60 r laxiti paramet denot tight deadlin usep probabl task use resourc sharep probabl task use resourc share mode taken 05 k size feasibl check window w weightag given estt h calcul numbtrk number backtrack permit search numproc number processor consid simul numr number resourc type consid simul maxsplit maximum degre parallel task fig3 simul paramet 41 effect laxiti paramet fig4 show effect success ratio laxiti paramet r help investig sensit task parallel vari laxiti fig4 clear lower valu maxsplit sensit chang r higher valu maxsplit exampl success ratio offer maxsplit1 vari 472994 compar variat success ratio offer maxsplit4 due fact task experi degre parallel order meet deadlin laxiti deadlin tight task higher laxiti rare need parallel sinc deadlin met without parallel show task parallel effect task tighter laxiti 42 effect w paramet sensit integr heurist variou degre task parallel studi fig5 effect w differ valu maxsplit offer similar trend success ratio increas initi increas w satur larger valu w increas w beyond 60 would decreas success ratio shown fig5 w larg integr heurist behav like simpl heurist take care avail processor resourc ignor task deadlin similarli w0 success ratio would poor integr heurist reduc edf also simpl heurist success laxiti paramet fig4 effect r paramt success paramet fig5 effect w paramet 43 effect resourc usag effect resourc usag success ratio shown fig6 fix r k numbtrk sharep valu 009 7 10 05 respect fig6 observ success ratio decreas increas usep due resourc conflict among task make valu estt task decid avail requir resourc rather avail processor readi time task lower valu resourc usag usep differ success ratio offer maxsplit4 maxsplit1 less compar higher valu usep show task parallel effect resourc constraint among task high anoth studi shown usep fix sharep vari success ratio increas increas sharep 44 effect number backtrack fig7 impact number backtrack success ratio plot variou valu maxsplit plot interest note success ratio improv significantli increas valu numbtrk valu maxsplit clearli motiv need find techniqu increas success ratio increas schedul cost fix number backtrack exploit parallel task propos paper one techniqu demonstr simul result differ valu maxsplit success resourc usag probabl fig6 effect resourc usag probabl success number backtrack fig7 effect number backtrack 45 effect size feasibl check window fig8 show effect vari feasibl check window k success ratio differ valu maxsplit note larger valu k algorithm look ahead natur number h function evalu feasibl window also mean increas schedul cost increas size feasibl check window k increas success ratio valu maxsplit effect lower valu maxsplit ie larger valu maxsplit less sensit chang k indic task set feasibl schedul allow task parallel nonparalleliz task schedul schedul cost conclus meet deadlin achiev high resourc util two main goal task schedul realtim system preemptiv nonpreempt algorithm avail literatur satisfi requir schedul preemptiv algorithm alway higher nonpreempt version howev higher schedul preemptiv algorithm obtain cost higher schedul overhead paralleliz task schedul consid paper intermedi solut tri meet conflict requir high schedul low overhead paper propos new algorithm base paralleliz task model dynam schedul task realtim multiprocessor system demonstr simul task parallel use concept achiev better schedul allow number backtrack without parallel simul studi show success ratio offer algorithm alway higher myopic algorithm wide varieti task paramet simul studi follow infer drawn ffl task parallel effect task tighter laxiti resourc constraint among task high sensit w differ valu task parallel offer similar trend increas size feasibl check window k increas success ratio valu maxsplit ffl impact number backtrack success ratio less signific compar paramet clearli indic need spend schedul cost task parallel rather backtrack success size feasibl check window fig8a effect k 8 processor success size feasibl check window fig8b effect k processor resourc reclaim schedul consist paralleliz realtim task possibl actual comput time task less worst case comput time resourc reclaim algorithm propos 6 10 appli algorithm ignor fact task parallel schedul one processor therefor problem resourc reclaim parallel task need research r onlin hard realtim schedul parallel task partition multiprocessor approxim algorithm partition independ task schedul problem multiprocessor onlin schedul hard realtim task approxim algorithm schedul task vari partit size partition multiprocessor system algorithm schedul imprecis comput new approach schedul paralleliz task realtim multiprocessor system effici schedul algorithm realtim multiprocessor system alloc schedul precedencerel period task resourc reclaim multiprocessor realtim system heurist schedul parallel task analysi schedul process releas time deadlin preced exclus relat schedul task resourc requir hard realtim system parallel process realtim simul case studi tr ctr wei sun chen yu xavier defago yuanyuan zhang yasushi inoguchi realtim task schedul use extend overload techniqu multiprocessor system proceed 11th ieee intern symposium distribut simul realtim applic p95102 octob 2226 2007 moham alghamdi tao xie xiao qin parm powerawar messag schedul algorithm realtim wireless network proceed 1st acm workshop wireless multimedia network perform model octob 1313 2005 montreal quebec canada g manimaran shashidhar merugu anand manikutti c siva ram murthi integr schedul task messag distribut realtim system engin distribut control system nova scienc publish inc commack ny 2001 g manimaran c siva ram murthi faulttoler dynam schedul algorithm multiprocessor realtim system analysi ieee transact parallel distribut system v9 n11 p11371152 novemb 1998 r alomari arun k somani g manimaran effici overload techniqu primarybackup schedul realtim system journal parallel distribut comput v64 n5 p629648 may 2004 wan yeon lee sung je hong jong kim onlin schedul scalabl realtim task multiprocessor system journal parallel distribut comput v63 n12 p13151324 decemb xiao qin hong jiang dynam reliabilitydriven schedul algorithm parallel realtim job execut heterogen cluster journal parallel distribut comput v65 n8 p885900 august 2005