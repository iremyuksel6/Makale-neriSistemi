effici partial order reduct algorithm altern proviso implement paper present partial order reduct algorithm call twophas gener significantli reduc state space larg class practic protocol altern algorithm class reduc statespac gener twophas preserv ctlastx assert twophas achiev reduct follow altern implement proviso step particular twophas avoid instack check tool use order realiz proviso step paper demonstr instack check ineffici practic demonstr much simpler altern method realiz proviso twophas easili combin onthefli modelcheck algorithm reduc memori requir simpl power select cach scheme also easili ad twophasea version twophas use onthefli modelcheck select cach implement modelcheck call pv protocol verifi routin use larg problem pv accept proper subset promela never automaton express ltlx assert verifi pv help us complet full statespac search sever order magnitud faster altern tool avail class dozen real protocol pv help us detect bug real distribut share memori cach coher protocol miss incomplet search use altern tool b introduct increas scale softwar hardwar system correspond increas number complex concurr protocol involv design formal verif concurr protocol import practic need automat verif finit state system base explicit state enumer method ces86 z support part graduat fellowship univers utah present address hewlettpackard cupertino system lab cupertino ca 95014 ratancuphpcom x support part darpa contract dabt6396c0094 utah verifi nsf grant ccr9800928 c 2000 kluwer academ publish print netherland hol91 dil96 hp96 hol97 shown consider promis realworld protocol verif problem use success mani industri design hol97 dpn93 use explicit state enumer tool protocol model set concurr process commun via share variabl andor commun channel hp96 dil96 tool gener state graph repres protocol check desir tempor properti graph common problem approach state graph practic protocol quit larg size graph often increas exponenti size protocol commonli refer state explos interleav model execut use tool one major caus state explos shown simpl exampl figur 1 figur 1a show system two process p1 p2 figur 1b show state space exampl properti consider involv least one variabl x one two shade state need gener thu save one state straightforward extens exampl n process would reveal interleav model execut would gener state partial order reduct attempt bring reduct exploit fact realist protocol mani transit commut henc suffici explor transit one order preserv truth valu tempor properti consider essenc everi state partial order reduct algorithm select subset transit explor wherea normal graph travers depth first search df algorithm would explor transit partial order reduct algorithm play import role mitig state explos often reduc comput memori cost exponenti simpl system000000000000000000111111111111111111000000000000000000111111111111111111 x0 b state graph figur 1 simpl system state graph 2000revtex 21072000 1637 p factor paper present new partial order reduct algorithm call twophas practic case outperform exist implement partial order reduct algorithm implement tool call pv protocol verifi find routin applic research partial order reduct algorithm present pel96a hp94 implement explicit state enumer model checker spin 1 hp96 hol97 implicit state explor tool vi cospan abhq97 klm algorithm present god95 implement popackag tool gener partial order reduct algorithm must avoid call ignor problem problem infinit postpon action result incorrect reductionus measur progress partial order reduct algorithm gener solv problem use proviso whose need first recogn valmari val92 tradit way implement proviso made clear momentarili ensur subset transit select state gener state stack maintain df algorithm subset transit satisfi check found state transit execut df algorithm popackag algorithm also algorithm present hgp92 requir least one select transit gener state stack wherea spin algorithm requir stronger condit select transit gener state stack stronger proviso hereaft abbrevi proviso suffici preserv stutter wherea weaker proviso preserv stutter free safeti properti hgp92 hp94 pel93 pel96a context verifi reactiv system directori base coher protocol servercli protocol observ commonli adopt method implement provisonam explicit instack check next statescaus exist partial order reduct algorithm ineffect ng96 exampl invalid distribut share memori protocol describ later spin abort search run memori gener 270000 state limit 64mb memori usag ultim finish 961089 state allow memori popackag also abort search gener similar number state invalid mani opportun partial order reduct refer spin paper refer version exist public domain end 1995 first time twophas implement within pv mid1998 experi compar pv spin finish reduc complex henc protocol complex ought easi onthefli explicit enumer tool handl intuit confirm fact twophas partial order reduct use instack check finish comfort protocol within 64m main memori gener 27600 state fact shown section 7 nontrivi exampl implement twophas model checker call pv ng98b outperform instack check base algorithm altern implement proviso term proviso use refer condit a5 val96 page 222 2 roughli speak state everi action enabl state reduc state space present stubborn set state 0 reduc statespac reachabl twophas algorithm implement proviso condit a5 follow encount new state x expand state use determinist transit first phase notion defin shortli result state determinist transit equival singleton ampl set pel96a taken state without effect truth properti verifi second phase expand complet need crossov firstphas second phase detect use differ much simpler strategi instack check strategi provid twophas advantag mention earlier import consequ strategi twophas natur support select cach conjunct onthefli model check explicit enumer search algorithm typic save list visit state hash tabl cach sinc number visit state larg would benefici visit state need store hash tabl refer select cach onth fli model check mean algorithm find properti true state graph system construct oppos find graph complet construct difficult combin onthefli model check algorithm partialord reduct selectivecach due need share inform among three aspect hpy96 shown previou attempt combin instack check base algorithm onthefli algorithm present cvwy90 er roneou howev thank fact first phase twophas depend stack state combin easili use colloqui plural form word proviso mean particular implement instack check onthefli algorithm present cvwy90 simpl effect selectivecach strategi discuss section 6 61 rest paper organ follow section 2 present relat work section 3 present definit background section 4 present basic depthfirst search algorithm instack check base partial order reduct algorithm section 5 present twophas algorithm proof correct section 6 present onthefli model check algorithm present cvwy90 discuss combin twophas section also present simpl effect select cach strategi show incorpor twophas section 7 compar perform algorithm pel96a implement spin twophas implement pv tool provid qualit explan result final section 8 provid conclud remark 2 relat work lipton lip75 suggest techniqu avoid explor entir state graph find concurr system deadlock lipton note execut transit postpon much possibl right mover transit execut soon possibl left mover without affect deadlock partial order reduct consid gener idea verifi richer properti deadlock gw92 gp93 god95 partial order theori base trace preserv safeti properti present work use slight variat proviso pel96a partial order reduct algorithm base ampl set proviso present hp94 algorithm similar base algorithm pel96a given algorithm implement spin algorithm pel96a discuss section 4 algorithm proviso realiz use instack check valmari val92 val93 present techniqu base stubborn set construct reduc graph preserv truth valu stutter free twophas algorithm conceiv end 1995 context verifi real distribut share memori protocol use avalanch processor ckk96 first prove twophas preserv stutterfre safeti properti ng97a later extend proof ltlx ng97b ng98a nal98 pv tool embodi twophas also demonstr ng98b thank editori comment receiv review paper know condit determinist discov us avoid explicit instack check turn exact condit requir ctlx stutter free ctl preserv method gkpp95 val96 pel96b fact realiz twophas end implement condit a5 a8 val96 thu twophas preserv ctlx argu section 51 refer exist proof new insight character contribut follow 1 experiment character state explos caus instack method 2 new partial order reduct algorithm call twophas use altern proviso implement instack method therebi consider mitig state explos 3 advantag method realiz proviso term support select cach onthefli modelcheck 4 extens list experi demonstr superior perform pv modelcheck compar tool class 3 definit notat process orient model languag process maintain set local variabl access assum valu local variabl form local state process conveni process assum contain distinguish local variabl call program counter control state concurr system system consist set process set global variabl pointto point channel finit capac facilit commun among process global state state consist local state process valu global variabl content channel denot set possibl state syntact state system obtain take cartesian product rang variabl local variabl global variabl program counter channel system rang variabl local global channel assum finit henc also finit program counter process associ finit number transit transit process p readwrit local variabl p readwrit global variabl send messag 2000revtex 21072000 1637 p channel sender andor receiv messag channel receiv transit may enabl state exampl receiv action channel enabl channel nonempti transit enabl state uniqu defin nondetermin simul multipl transit given program counter 0 use indic transit 2 indic state system ts indic state result execut p indic sequenti process system pcsp indic program counter control state p pct indic program counter transit associ local transit statement said local involv global variabl global transit said global involv one global variabl two global transit two differ process may may commut wherea two local transit two differ process commut control state program counter process said intern transit associ local transit uncondit safe local transit said uncondit safe state 2 enabl disabl 2 remain enabl disabl 0 transit anoth process note uncondit safe transit definit also local transit observ follow execut 0 either order would yield state iet 0 commut properti commut form basi partial order reduct theori note channel commun statement uncondit safe transit process p attempt read channel empti transit disabl howev process q write channel becom enabl similarli transit process p attempt send messag channel channel full disabl process q consum messag channel becom enabl condit safe condit safe transit behav like uncondit safe transit state character safe execut condit pt formal local transit process p said condit safe whenev state 2 pt enabl disabl also enabl disabl 0 transit process p word 0 commut state repres pt channel commun primit condit safe receiv oper channel c safe execut condit c empti similarli send oper channel c safe execut condit c full safe transit safe state uncondit safe transit condit safe whose safe execut condit true i 2 pt determinist process p said determinist written deterministicp control state p intern transit p control state safe exactli one transit p enabl independ two transit 0 said independ iff least one transit local belong differ process partial order reduct algorithm val92 pel96a hp94 god95 use notion ampl set base safe transit twophas hand use notion deterministicsingleton ampl setsto obtain reduct proof correct twophas algorithm use notion independ transit 31 linear tempor logic b uchii automaton ltlx formula ltl formula without next time oper x formal system ltlx lineartim logic without next time oper stutter free ltl defin atom proposit mean boolean connect 2 alway 3 eventu u oper infinit sequenc state assign truth valu satisfact relat ff j oe defin follow ff ff ff ff ff ff concurr system j oe true iff sequenc ff gener initi state ff buchii automaton vl90 nondeterminist finit automata accept condit specifi infinit word word accept automaton formal buchii automaton tupl set state q 0 initi state sigma input delta q theta sigma theta q f q set final state run word infinit sequenc state delta sequenc ff accept iff least one state f appear infinit often oe model check problem may view automatatheoret verif problem lm loe lm loe languag accept lineartim tempor formula oe respect automaton buchii automaton oe accept languag loe verif problem lm loe answer construct state graph synchron product oe momega oe strongli connect compon graph repres satisfi accept condit oe oe violat kur94 4 basic df instack check base partial order reduct algorithm figur 2 show basic depth first search df algorithm use construct full state graph protocol v f hash tabl visit use cach state alreadi visit statement 1 show algorithm expand transit given state statement show algorithm construct state graph system e f partial order reduct base search algorithm attempt replac 1 choos subset transit idea two transit 0 commut state properti verifi insensit execut order 0 algorithm explor ts postpon examin 0 ts cours care must exercis ensur transit postpon forev commonli refer ignor problem algorithm pel96a hp94 shown df po figur 3 alreadi mention algorithm implement spin algorithm also use ampl select subset transit expand step ampl return proper subset enabl transit follow condit must hold set transit return commut 2000revtex 21072000 1637 p modelcheck f f foreach enabl endif endforeach figur 2 basic depth first search algorithm transit b none transit result state current explor indic presenc redset variabl maintain df po intuit reason behind condit b two state 0 reach without condit might deleg expans transit 0 vice versa henc without condit algorithm may never explor transit condit b sometim refer reduct proviso simpli proviso enforc highlight line ampl transit say postpon must examin successor avoid ignor problem howev ts explor iet 2redset circular result ts might postpon break circular ampl ensur ts redset section 61 show later depend ampl redset evalu set transit import consequ onthefli model check algorithm use 41 efficaci partial order reduct partial order reduct algorithm shown figur 3 reduc number state exponenti factor hp94 pel96a howev mani practic protocol reduct effect reason trace implement proviso use instack check motiv use system shown figur 4 figur 4a show system consist two sequenti process p1 p2 commun ie total number state system 9 optim reduc graph system contain 5 state shown figur 4b figur 4c show state graph gener partial order reduct algorithm figur 3 graph obtain follow initi state s0s0 amples0s0 may return either 2000revtex 21072000 1637 p f record redset partli expand redset use redset foreach transit ampl complet expand remov redset redset redsetfsg f process p accept true transit p foreach ift global enabl condit safe 62 pt accept fals endif accept least one enabl transit return enabl transit subset transit found return enabl transit figur 3 proviso base partial order reduct algorithm f 5 g without loss gener assum return result state s1s0 s2s0 without loss gener assum algorithm choos expand s1s0 first transit f 2 g p 1 f 5 p 2 enabl 2 s1s0 s0s0 df pos1s0 call redsetfs0s0g result amples1s0 return f 2 g return f 5 g execut 5 s1s0 result s1s1 third state figur continu way graph shown figur 4c obtain note system contain 9 reachabl state system thu show instack check base partial order reduct algorithm might fail bring appreci reduct confirm exampl section 7 algorithm may bring much reduct realist protocol also tt22 tt44 tt66 tt88 system b optim graph c search order dfspo figur 4 simpl exampl optim reduc graph reduc graph gener df po 5 twophas algorithm previou contriv exampl show size reduc graph gener algorithm base instack check quit high true even realist reactiv system reactiv system transact typic involv subset process exampl servercli model comput server client may commun without interrupt server client complet transact transact complet state system reset initi state partial order reduct algorithm use instack check state reset done initi state stack entir reachabl analysi complet sinc least one process reset algorithm gener unnecessari state thu increas number state visit alreadi demonstr figur 4 section 7 demonstr realist system also number extra state gener due proviso high propos algorithm describ figur 5 first phase phase1 twophas execut determinist process result state second phase enabl transit examin twophas algorithm often outperform spin popackag evidenc exampl section 7 note phase1 gen f fulli expand use proof f list fsg path fg foreach process p determinist p let enabl transit p old path fold sg goto nextproc endif list list next process returnpath f path phase1 phase 2 classic df s62v r fe use proof state path foreach enabl transit els state path figur 5 twophas algorithm eral notion coarsen action exampl implement dstep spin coarsen two action given process combin togeth form larger atom oper phase1 action multipl process execut 51 correct twophas algorithm correct twophas follow previou result particu lar theorem 63 val96 state condit a5 a8 hold reduc unreduc transit system branchingbisimilar condit a5 state everi action enabl state reduc state space eventu stubborn set state 0 reduc statespac reachabl condit easili satisfi twophas state attain end phase1 fulli expand phase2 fe figur 5 twophas record state fulli expand condit a8 state everi state reduc state space either stubborn set contain action intern action stubborn set exactli enabl superdeterminist exact definit superdetermin context val96 may found refer context superdetermin defin determinist page 8 correct twophas understood also term proof pel96b proof correct twophas first principl may found nal98 6 onthefli model check model check algorithm said onthefli examin state graph system build graph find truth valu properti consider truth valu properti evalu inspect subgraph algorithm need gener entir graph sinc state graph mani protocol quit larg onthefli model check algorithm might abl find error protocol otherwis imposs analyz discuss section 31 model check problem equival view answer question graph repres momega oe synchron product model buchii automaton repres oe contain path satisfi accept condit oe algorithm df df po onthefli model check algorithm sinc construct graph e f e r must analyz later find accept condit buchii automaton oe met note e f e r hold inform edg travers part search condit infinit path e e f e r satisfi accept condit oe equival express 2000revtex 21072000 1637 p strongli connect compon scc graph satisfi accept condit tarjan tar72 present df base onthefli algorithm comput scc without store edg inform sinc space premium verif problem store edg inform major benefit use algorithm algorithm use one word overhead per state visit travers graph twice onthefli model check algorithm cvwy90 shown figur 6 algorithm use find graph least one infinit path satisfi buchii accept condit note wherea tarjan algorithm find strongli connect compon satisfi accept condit oe algorithm cvwy90 guarante find one infinit path satisfi accept condit sinc presenc infinit path impli properti violat usual suffici find one infinit path attract algorithm cvwy90 come fact implement one bit per state compar one word per state case tarjan algorithm algorithm consist two df search dfs1 dfs2 outer df dfs1 similar df except instead maintain e f algorithm call inner df dfs2 accept state fulli expand dfs2 find accept state reach expand state state reach self path violat oe found stack need implement dfs1 dfs2 figur assum full state graph gener use along partial order reduct statement label 1 dfs1 dfs2 appropri modifi use transit use conjunct df po search strategi twophas earlier attempt combin onthefli model check algorithm df po shown incorrect hpy96 reason ampl depend redset henc state expand line indic 1 dfs1 dfs2 ampl might evalu differ valu ampl return differ set transit dfs1 dfs2 even accept state reachabl graph construct dfs1 dfs2 might abl prove fact sinc inform redset differ dfs1 dfs2 ampl may inde return differ transit lead incorrect implement hpy96 solv problem use follow scheme ampl impos order process system ampl choos process say due proviso choos ampl equal enabl transit addit one bit inform record v1 indic complet expand en f outer df f foreach enabledtransit accept state call nest df 62 v2 seed inner df f foreach enabl transit tsseed error elseif dfs2t figur 6 onthefli model check algorithm counter part dfs2 bit inspect find ampl must return enabl transit must return subset transit without requir proviso strategi reduc opportun obtain effect reduct deem good price pay abil use onthefli model check algorithm thank independ phase1 global variabl includ phase1 call dfs2 result state exactli call dfs1 henc onthefli model check algorithm use easili conjunct twophas section 62 argu combin onthefli model check algorithm select cach techniqu use directli twophas 61 select cach twophas df po use conjunct onthefli model check algorithm obviat need maintain e r howev memori requir hold v r practic protocol still quit high select cach refer class techniqu instead save everi state visit v r subset state save natur way incorpor select cach twophas instead ad state path v r line 1 twophas ad guarante given state alway gener subgraph beneath whether expand part outer df inner df henc onthefli model check algorithm still use ad instead list also mean memori use list phase1 reus even memori requir hold intermedi variabl list reduc reason maintain variabl ensur loop termin still guarante instead ad list uncondit ad sold total order pv use bitwis comparison 62 combin onthefli model check select cach twophas select cach techniqu combin twophas execut goe follow given state first expand phase1 result state ad v r fulli expand contain fulli expand state impli state graph start given state dfs1 dfs2 onthefli algorithm henc onthefli algorithm select cach use togeth twophas 7 experiment result alreadi mention twophas outperform algorithm df po implement spin instack check succe often confirm result tabl 3 tabl show result run df po twophas without select cach enabl variou protocol column correspond df po show number state enter v r time taken second spin 4 column column twophas show number state v r time taken second twophas run without select cach select column twophas show 3 exampl well pv tool distribut avail web url wwwcsutaheduform verif 4 experi run version spin avail 199798 number state enter v r list time taken second twophas run select cach verif run conduct ultrasparc1 512mb dram contriv exampl b5 system shown figur 4a process w5 contriv exampl show twophas alway outperform df po system determinist state henc twophas degener full search wherea df po find signific reduct sc servercli protocol protocol consist n server n client client choos server request servic servic consist two round trip messag server client local comput df po complet graph construct 4 memori limit 64mb memori limit increas 128mb gener 750k state protocol mig inv two cach coher protocol use implement distribut share memori dsm use directori base scheme avalanch multiprocessor ckk96 directori base dsm implement cach line design node act homea node respons maintain coher line node need access line requir permiss contact home node obtain permiss mig inv two cach line four process two processor act home node cach line two processor access cach line algorithm complet analysi mig within 64mb main memori albeit twophas perform much better inv much involv coher protocol df po requir 128mb memori twophas hand finish comfort gener modest 27600 state select cach 60736 state without select cach within 64mb main memori protocol spin distribut pftp snoopi protocol provid part spin distribut pftp df po gener fewer state twophas without state cach reason littl determin protocol sinc twophas depend determin bring reduct gener larger state space howev state cach number state hash tabl goe factor 27 snoopi even though twophas gener fewer state number state gener df po twophas without select cach close obtain meaning con clusion reason twofold first protocol contain determin help twophas howev number deadlock protocol henc proviso invok mani time henc number state gener close tabl number state visit time taken second df po algorithm twophas algorithm variou protocol protocol df po twophas select mig 11362814 2280526 918517 inv 96108937 6073652 2760030 snoopi 1627944 1430527 861124 upo 49e06210 73354632 17661821 rowo 52e06330 86866544 22263632 memori model verif exampl model hewlettpackard precis architectur hppa splittransact coher bu call runway bcs96 ggh 97 modern symmetr multiprocessor interconnect bu common subset promela support pv tool spin appli approach verifi memori order via finitest reachabl analysi describ nal98 col92 gmng98 ngmg98 runway bu model method establish given memori order write atom wa uniprocessor order upo readord ro read write order rowo involv write highli nondeterminist test au tomata drive bu verifi execut never caus test automata enter one error state protocol number state save df po approxim 25 time larger number state save twophas select cach 8 conclus present new partial order reduct algorithm twophas implement proviso without use instack check correct twophas shown follow earlier result ctl x preserv partialord reduct method also show algorithm combin onthefli modelcheck algo rithm extens set experi demonstr twophas outperform algorithm realiz proviso use instack check instack check succe often twophas also natur lend use conjunct simpl yet power select cach scheme twophas implement modelcheck call pv avail upon request r automat verif finitest concurr system use tempor logic specif acm transact program languag system reason parallel architectur memori effici algorithm verif tempor properti stanford murphi verifi partial order approach branch time logic model check test modelcheck refin depend improv partialord verif method use partial order effici verif deadlock freedom safeti properti coverag preserv reduct strategi reachabl analysi design valid comput protocol model checker spin improv formal ver ific holzmann nest depth first search formal design verif method share memori system partial order reduct without proviso new partial order reduct algorithm concurr system verif modelcheck verifi ltlx properti partial order reduct algorithm without proviso explicit enumer modelcheck test modelcheck approach verif formal memori model multiprocessor translat sr promela one combin partial order reduct onthefli model check partial order reduct linear branch tempor logic process algebra stubborn attack state explos stubborn set method process algebra handbook theoret comput scienc tr automat verif finitest concurr system use tempor logic specif design valid comput protocol reason parallel architectur formal specif abstract memori model stubborn attack state explos computeraid verif coordin process model checker spin new partial order reduct algorithm concurr system verif stubborn set method process algebra partial order reduct verifi hardwar softwar context use myampersandldquotest modelcheckingmyampersandrdquo verifi runwaypa8000 memori model reduct handbook theoret comput scienc coverag preserv reduct strategi reachabl analysi improv formal verif formal model valid appli commerci coher bu test modelcheck approach verif formal memori model multiprocessor memori effici algorithm verif tempor properti one one onthefli verif stubborn set refin depend improv partialord verif method extend abstract combin partial order reduct onthefli modelcheck state spin use partial order effici verif deadlock freedom safeti properti partial order approach branch time logic model check formal design verif method share memori system ctr madanl musuvathi shaz qadeer iter context bound systemat test multithread program acm sigplan notic v42 n6 june 2007 twan basten dragan bonaki marc geilen clusterbas partialord reduct autom softwar engin v11 n4 p365402 octob 2004