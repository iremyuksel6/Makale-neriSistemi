autom test data gener use iter relax method import problem aris path orient test gener test data caus program follow given path paper present novel program execut base approach use iter relax method address problem method test data gener initi arbitrarili chosen input given domain input iter refin obtain input branch predic given path evalu desir outcom iter program statement relev evalu branch predic path execut set linear constraint deriv constraint solv obtain increment input increment ad current input obtain input next iter relax techniqu use deriv constraint provid feedback amount input variabl adjust branch path evalu desir outcomewhen branch condit path linear function input variabl techniqu either find solut path one iter guarante path infeas contrast exist execut base approach may requir unaccept larg number iter rel long path consid one input variabl one branch predic time use backtrack branch condit path nonlinear function input variabl though may take one iter deriv desir input set constraint solv iter linear solv use gaussian elimin make techniqu practic suitabl autom b introduct softwar test import stage softwar develop ment provid method establish confid reliabl softwar time consum process account 50 cost softwar develop 10 given program test criteria gener test data satisfi select test criteria difficult problem test data given test criteria program gener automat reliev softwar test team tediou difficult task reduc cost softwar test significantli sever approach autom test data gener propos literatur includ random 2 syntax base 5 program specif base 1 9 12 13 symbol evalu 4 6 program execut base 7 8 10 11 14 test data gener particular type test criteria path coverag requir gener test data caus program execut follow given path gener test data given program path difficult task pose mani complex problem 4 symbol evalu 4 6 program execut base approach 7 10 14 propos gener test data given path gener symbol evalu statement along path requir complex algebra manipul difficulti handl array pointer refer program execut base approach handl array pointer refer effici array index pointer address known step program execut one major challeng method impact infeas path sinc concept inconsist constraint method larg number iter perform search input abandon infeas path exist program execut base method 7 10 use function minim search algorithm locat valu input variabl select path travers consid one branch predic one input variabl time use backtrack therefor even branch condit path linear function input may requir larg number iter long path paper present new program execut base approach gener test data given path novel approach base relax techniqu iter refin arbitrarili chosen input relax techniqu use numer analysi improv upon approxim solut equat repres root function 15 techniqu function evalu approxim solut result valu use provid feedback amount valu approxim solut adjust becom exact solut equat function lin techniqu deriv exact solut equat approxim solut one iter nonlinear function may take one iter deriv exact solut approxim solut method test data gener given path program initi arbitrarili chosen input given domain path travers program execut input input iter refin use relax techniqu obtain new input result travers path appli relax techniqu test data gener problem view branch condit given path function input variabl deriv two represent function one represent form subset input assign statement along given path must execut order evalu function represent comput slice oper data depend graph program statement path start predic consider therefor refer predic slice note predic slice alway provid exact represent function comput branch condit use exact represent form program statement deriv linear arithmet represent function comput branch condit term input variabl arithmet represent function term input variabl necessari enabl applic numer analysi techniqu sinc program represent function suitabl purpos function comput branch condit linear function input linear arithmet represent exact function comput branch condit nonlinear function input linear arithmet represent approxim function neighborhood current input two represent use refin arbitrarili chosen input obtain desir input follow let us assum execut predic slice use arbitrarili chosen input determin branch condit evalu desir outcom case evalu branch condit also provid us valu call predic residu amount function valu must chang order achiev desir branch outcom use linear arithmet represent predic residu deriv linear constraint increment current input one constraint deriv branch condit path linear constraint solv simultan use gaussian elimin comput increment current input new input obtain ad increment current input sinc constraint correspond branch condit path solv simultan method attempt chang current input branch predic path evalu desir outcom predic slice execut new input branch condit path linear function input ie linear arithmet represent predic function exact method either deriv desir input one iter guarante path infeas result immens practic import accord studi report 6 case studi 3600 test case constraint gener group fortran program shown constraint almost alway linear larg class path method abl detect infeas even though problem detect infeas path unsolv gener path feasibl method extrem effici find solut exactli one iter least one branch condit path nonlinear function input increment current input comput solv linear constraint increment may immedi yield desir input set linear constraint increment deriv linear arithmet represent case approxim correspond branch condit therefor may take one iter obtain desir input even branch predic path nonlinear function input set equat solv obtain new input current input linear solv gaussian elim inat gauss elimin algorithm wide implement establish method solv system linear equat make techniqu practic suitabl autom import contribut novel method present paper ffl innov use tradit relax techniqu test data gener ffl condit path linear function input either gener test data one iter guarante path infeas fore effici find solut well power detect infeas larg class path ffl gener techniqu gener test data even condit given path nonlinear function input case also number iter inconsist constraint use indic potenti infeas path ffl set constraint solv method alway linear even though path may involv condit nonlinear function input set linear constraint automat solv use gaussian elimin wherea direct method exit solv set arbitrari nonlinear constraint gaussian elimin wide implement experi algorithm make method practic suitabl autom ffl scalabl larg program number program execut requir iter independ path length bound number input variabl size system linear equat solv use gaussian elimin increas number branch predic path increas cost significantli less exist techniqu organ paper follow overview method present next section algorithm test data gener describ section 3 illustr exampl involv linear nonlinear path loop array relat work discuss section 4 import featur method summar futur work outlin section 5 overview defin program modul direct graph e n set node e set edg uniqu entri node e uniqu exit node node n repres singl statement condit express possibl transfer control node n node n j map edg n g sequenc node n variabl k input variabl modul either appear input statement input paramet domain dk input variabl k set possibl valu hold input vector number input call program input paper may refer program input input use term interchang condit express multiway decis statement call branch predic without loss gen eral assum branch predic simpl relat express inequ equal form e1 op e2 e1 e2 arithmet express op one f 6g branch predic contain boolean variabl repres true valu boolean variabl numer valu zero greater fals valu neg numer valu branch predic path conjunct two boolean variabl predic consid multipl branch predic must simultan satisfi travers path branch predic path disjunct two boolean variabl b time one branch predic 0 b 0 consid along branch predic path solut found one branch predic one tri branch predic e1 op e2 transform equival branch predic form f op 0 f arithmet express e1 gamma e2 along given path f repres real valu function call predic function f may direct indirect function input variabl illustr let us consid branch predic condit statement p2 exampl program figur 1 predic function f2 correspond branch predic bp2 along path g predic function f2 indirectli repres function input variabl xy z state problem address paper problem statement given program path p travers certain evalu true fals branch predic bp1 program input caus branch predic evalu p travers present new method gener program input given path program travers program execut use input method test data gener initi arbitrarili chosen input given domain given path travers input set linear constraint increment input deriv use relax method increment obtain solv constraint ad input obtain new input path travers new input method termin otherwis step refin input carri iter obtain desir input briefli review relax techniqu use numer analysi refin approxim solut linear equat relax techniqu approxim solut linear equat gener substitut x0 y0 lh equat would result non zero valu r0 call residu ie increment deltax deltay x0 y0 comput satisfi linear constraint given therefor solut equat 1 order formul test data gener problem relax techniqu problem view predic function correspond branch predic path function program input appli relax techniqu linear arithmet represent term relev input variabl requir predic function first deriv exact program represent call predic slice function comput predic function use deriv linear arithmet represent two represent use innov way refin program input predic slice exact program represent predic function predic slice defin follow definit predic slice sbpp branch predic bp path p set statement comput valu upon valu bp may directli indirectli data depend execut follow path p word sbpp slice data depend branch predic bp use program consist 0 readxyz 1 2 3 els 5 7 8 writenonlinear quadrat endif 9 endif 0 readxyz statement predic slice sbp1 p 0 readxyz 1 2 statement predic slice sbp2 p 0 readxyz 1 statement predic slice sbp4 p figur 1 exampl program predic slice path pf01p12p2456p49g input assign statement preced bp path p illustr definit use exampl program figur 1 consid path p let bp denot th branch predic along path p predic slice correspond branch predic bp 1 bp2 bp4 along path p illustr exampl predic slice includ input assign statement valu predic function input comput execut correspond predic slice input note predic slice convent static slice sinc comput statement along path also dynam slice comput static use input assign statement along path precis dynam slice illustr latter consid code segment given figur 2 inputi j figur 2 code segment path use array 6 j evalu bp aj 0 data depend assign statement wherea j evalu bp data depend assign state ment therefor predic slice branch predic bp consist input statement well assign statement word predic slice path orient static slice concept predic slice enabl us evalu outcom branch predic path irrespect outcom branch predic predic slice branch predic path execut use arbitrari input even though path may travers input possibl condit predic slice execut predic slice input valu correspond predic function comput branch outcom evalu correspond outcom execut predic slice input travers path input branch predic path evalu desir outcom execut respect predic slice input comput respect predic function path travers program execut use input branch predic path evalu desir outcom predic slice execut input path travers program execut use input conceptu predic slice enabl us view predic function path independ function input variabl therefor method simultan forc branch predic along path evalu desir outcom contrast exist program execut base method 7 10 test data gener attempt satisfi one branch predic time use backtrack fix predic satisfi earlier tri satisfi predic appear later path consid branch predic path simultan path may travers intermedi input predic slice also use identifi relev subset input variabl valu predic function depend subset input variabl requir linear arithmet represent predic function term input variabl deriv subset input variabl valu comput predic function depend determin dynam illustr exampl figur 2 therefor given input branch predic path correspond predic slice execut use input dynam data depend graph base upon execut construct relev input variabl correspond predic function determin take dynam slice depend graph note scalar referenc predic slice correspond predic function subset input variabl predic function depend determin static predic slice execut predic slice input data follow dynam slice determin relev input variabl necessari handl array defin subset input variabl input depend set definit input depend set idbpip branch predic bp input along path p subset input variabl bp directli indirectli data depend input variabl identifi execut statement predic slice sbpp input take dynam slice dynam data depend graph exampl execut sbp2p input note evalu bp2 depend input variabl xy z therefor zg explain use input depend set deriv linear arithmet represent term input variabl predic function given input deriv linear arithmet represent predic function given predic function input depend set id input write gener linear function input variabl id comput valu coeffici gener linear function repres tangent plane predic function give us linear arithmet represent predic function exampl predic function f2 input linear function input id b c slope f respect input variabl xy z respect constant term slope b c comput evalu correspond deriv predic function input i0 constant term comput linear function f evalu valu i0 comput execut correspond predic slice i0 evalu predic function repres tangent plane predic function input i0 give us linear arithmet represent predic function i0 predic function comput linear function input tangent plane exact represent predic function wherea predic function comput nonlinear function input tangent plane fxi approxim predic function neighborhood input i0 illustr deriv linear arithmet represent predic function f2 input approxim deriv predic function divid differ comput i0 execut sbp2p i0 chosen increment input variabl x comput divid differ 2 give valu 2 comput valu b execut predic slice sbp2p i0 comput divid differ f2 two point respect give b equal gamma2 similarli get c equal 1 comput valu solv equat substitut valu b c f2i0 equat solv get equal gamma100 therefor obtain linear arithmet represent f2 i0 exampl f2 comput linear function input therefor linear arithmet represent i0 comput exact represent function input comput f 2 also input variabl influenc predic function f2 appear represent paper approxim deriv predic function divid differ tool develop comput deriv program respect input variabl 3 tool get exact deriv valu rather use divid differ therefor techniqu deriv linear arithmet represent predic function accur implement autom test use method explain deriv linear arithmet represent current input predic function given path order deriv set linear constraint increment current input linear arithmet represent execut predic slice branch predic current input comput valu correspond predic function use valu predic function provid feedback comput desir increment current input predic residu valu predic function input defin predic residu essenti place constraint chang valu input variabl satisfi provid us new input desir path follow definit predic residu branch predic input valu correspond predic function comput execut predic slice input branch predic relat oper non zero predic residu give exact amount valu predic function chang modifi input branch evalu desir outcom otherwis predic residu give least maximum valu predic function valu must chang allow chang modifi program input branch predic evalu continu evalu desir outcom explain exampl given branch predic evalu desir outcom given input continu evalu desir outcom case predic residu give maximum valu predic function valu allow chang modifi program input branch predic continu evalu desir outcom illustr let us consid path p exampl program figur 1 use input branch predic bp2 evalu desir branch path p travers valu predic function f2 1 2 110 henc predic residu input 8 therefor valu predic function allow decreas 8 due chang program input predic function continu evalu evalu posit valu hand predic evalu desir outcom predic residu give least valu predic function valu must chang modifi program input branch predic evalu desir outcom exampl use input branch predic bp2 evalu desir branch path p tra vers valu predic function henc predic residu gamma99 therefor input modifi valu predic function increas least 99 branch predic bp2 evalu desir outcom predic residu essenti guid search program input caus branch predic given path p evalu desir outcom comput predic residu current input branch predic given path predic residu linear arithmet represent current input predic function appli relax techniqu refin input refin input linear arithmet represent predic residu predic function input essenti allow us map chang valu predic function chang program input predic function path p deriv linear constraint increment program input use linear represent predic function valu correspond predic residu set linear constraint solv simultan use gaussian elimin comput increment input increment ad input obtain new input illustr deriv linear constraint correspond predic function f 2 branch predic bp2 evalu fals sbp2 p execut arbitrarili chosen input evalu true path p travers residu valu gamma99 linear function use deriv linear constraint note constant term appear con straint intuit mean increment input i0 valu predic function f2 chang 99 forc f2 evalu posit valu therefor forc correspond branch predic bp2 evalu desir outcom ie true new input instanc one solut constraint see bp2 evalu true sbp2p execut linear constraint deriv predic residu comput increment current input import step method constraint valu predic function current input provid feedback increment comput deriv new input sinc method comput new program input previou input residu relax method iter refin program input obtain desir solut would like point relat oper branch predic path method reduc newton method iter refin approxim root system nonlinear function sever variabl illustr let us consid linear constraint equat 2 let us assum relat oper correspond branch predic bp2 simplic let f2 function singl variabl x linear constraint equat 2 reduc 99which form gener branch predic path equal well inequ case method differ newton method comput root system nonlinear function sever variabl sinc increment input comput step along tangent plane function current input expect method converg properti similar newton method discuss far assum condit sourc predic function howev practic addit predic also consid test data gener first constraint input may exist may requir introduct addit predic eg input variabl requir posit valu predic 0 introduc second must introduc predic constrain input variabl valu avoid execut error eg array bound check divis zero consid predic togeth predic condit path desir input found simplic exampl consid paper consid predic condit 3 descript algorithm section present algorithm gener test data program numer input array assign condit loop techniqu extend nonnumer input charact string provid map numer nonnumer valu main step algorithm outlin figur 3 describ step algorithm detail time illustr step algorithm gener test data path along predic function linear function input exampl nonlinear predic function given next section method begin given path p arbitrarili chosen input i0 input domain program program execut i0 p travers use i0 i0 desir program input algorithm ter minat otherwis step iter refin use relax techniqu execut illustr algorithm use exampl section 2 path program figur 1 initi program input consid path p travers program execut use i0 thu iter relax method discuss employ refin input step 1 comput predic slice node n p repres branch predic comput predic slice sn backward pass static data depend graph input assign statement along path p n predic slice branch predic path p step 2 identifi input depend set everi node n p repres branch predic identifi input depend set idn variabl n data depend execut predic slice sn current input ik take dynam slice dynam data depend graph input depend set branch predic path p comput execut respect predic slice p use input note input assign statement along path p need execut comput input depend set branch predic along path step 3 deriv linear arithmet represent predic function step construct linear arithmet represent predic function correspond branch predic p branch predic n p first formul gener linear function input variabl set idn exampl linear formul predic function correspond branch predic path p coeffici b c input variabl linear function repres slope th predic function respect input variabl xy z respect approxim slope respect divid differ comput slope coeffici respect variabl execut predic slice sn evalu predic function f current input ik divid differ give valu coeffici j linear function predic function f correspond node p similarli comput slope coeffici linear function exampl consid evalu f1 execut comput divid differ respect x get larli f2 f 4 get 2 comput divid differ respect use 1 2 comput divid differ respect z use 1 2 1 2 4 get comput constant term execut correspond predic slice ik evalu valu predic function valu input variabl ik slope coeffici found substitut linear function equat valu predic function ik comput give linear equat one unknown solv valu constant term exampl consid substitut slope coeffici b c comput gener linear formul predic function f 1 f2 f 4 equat gener linear formul respect valu obtain follow equat solv constant term get therefor linear arithmet represent three predic function p given predic function linear function input variabl slope comput exact method result exact represent predic function input path initi program input i0 output program input p travers procedur testgenpi0 p travers i0 step 1 branch predic n p comput done branch predic n p step 2 execut sn input ik comput input depend set idn step 3 comput linear represent lidn predic function n step 4 comput step 5 construct linear constraint use rn comput increment ik endfor step inequ constraint set equal step 7 solv system equat comput increment current program input comput new program input ik1 ad comput increment ik execut program input ik1 follow path p els k endif endwhil endprocedur figur 3 algorithm gener test data use iter relax method predic function comput nonlinear function linear function comput repres tangent plane predic function ik neighborhood ik inequ deriv tangent plane close approxim branch predic therefor predic function evalu posit valu program input neighborhood ik linear function vice versa linear represent predic residu comput subsequ step use deriv set linear constraint use refin ik obtain ik1 step 4 comput predic residu execut predic slice correspond branch predic p current program input ik evalu valu predic function valu predic function predic residu valu rn current program input ik branch predic n predic residu i0 branch predic p step 5 construct system linear constraint solv obtain increment current input step construct linear constraint comput increment deltai k current input ik use linear represent comput step 3 predic residu valu comput step 4 first convert linear arithmet represent predic function set inequ equal iti branch predic evalu true given path travers correspond predic function convert inequalityequ relat oper branch predic hand branch predic evalu fals given path correspond predic function convert inequ revers relat oper use branch predic branch predic relat oper evalu fals given path travers convert two inequ one relat oper relat oper correspond predic function evalu posit valu ik consid inequ oper els consid one oper discuss also hold branch predic 6 relat oper evalu true given path travers set inequalitiesequ give linear represent branch predic p evalu given path travers convert linear arithmet represent predic function path p inequ get use linear arithmet represent ik branch predic evalu travers path p use predic residu comput ik appli relax techniqu describ previou section deriv set linear constraint increment input appli relax techniqu linear arithmet represent comput predic residu comput previou step set linear constraint increment i0 deriv given note constant term linear arithmet represent appear constraint step convers inequ equal gener set linear constraint increment deriv previou step may mix inequ equal autom method comput solut set inequ convert system equal solv use gaussian elimin convert inequ equal addit new variabl simultan solut system equat give us increment ik obtain next program input ik1 convert inequ equal constraint set exampl consid introduc three new variabl u v w get requir u v w 0 step 7 solut system linear equat simultan solv system linear equat obtain previou step use gaussian elimin number branch predic path equal number unknown input variabl new variabl consist nonsingular system equat straightforward applic gaussian elimin give solut system equat number branch predic path number unknown system equat overdetermin may may exist solut depend whether system equat consist system equat consist solut found appli gaussian elimin subsystem number constraint equal number vari abl verifi solut satisfi remain constraint system equat consist possibl path infeas case consist subsystem set linear constraint solv use gaussian elimin use program input next iter repeat occurr inconsist system equat subsequ iter strengthen possibl path infeas test tool may choos termin algorithm certain number occurr inconsist system conclus path like infeas number branch predic path less number unknown system equat underdetermin infinit number solut system consist case n branch predic select n unknown formul system n equat express n unknown unknown free variabl n unknown select result system equat set n linearli independ equat system n equat n unknown solv term free variabl use gaussian elimin valu free variabl chosen valu n depend variabl com pute solut obtain step give valu current program input ik increment obtain next approxim ik1 program input execut predic slice evalu predic function new program input ik1 branch predic evalu desir branch ik1 solut test data gener problem otherwis algorithm goe back step 2 ik1 current program input k th iter explain previou section input depend set linear represent depend current input data therefor comput next iter use ik1 exampl consid three linear constraint six unknown therefor underdetermin system equat consid system three equat three unknown three unknown free variabl consid system three equat three variabl deltax deltay deltaz gaussian elimin use triangular coeffici matrix find third equat depend first equat third row reduc row zero result singular matrix therefor consid system equat deltax deltaz w4 deltax deltaz valu free variabl chosen arbitrarili u v w 0 choos free variabl u v deltay equal 1 solv deltax deltaz w get 2 ad increment i0 get execut predic slice path p use input i1 evalu correspond predic function see three branch predic evalu desir branch lead travers p therefor algorithm termin success one iter method new approxim program input obtain previou approxim residu therefor fall class relax meth od relax techniqu use iter obtain new program input branch predic evalu desir outcom execut correspond predic slice found method termin given time possibl either time allot test data gener insuffici accumul round error gauss elimin method due finit precis arithmet use gaussian elimin well establish method solv system linear equat implement sever pivot strategi avail avoid accumul round error due finit precis arithmet besid two possibl reason method termin given time path infeas clear construct linear represent step 3 function input comput predic function linear correspond linear represent construct method exact represent function comput predic function prove case desir program input obtain one iter theorem 1 function input comput predic function path p linear either desir program input travers path p obtain one iter path guarante infeas proof let us assum input variabl program contain given path p n branch predic bp1bp2 bpn path p n1 use use relat linear represent predic function correspond predic p comput method describ step 3 algorithm note represent exact function input comput predic function linear write branch predic path p term represent follow eq set 1 note coeffici correspond input variabl input depend set predic function zero approxim solut set equat eq set 2 r ij residu valu obtain execut correspond predic slice use i0 evalu correspond predic function let solut eq set 1 execut given program would result travers path p goal comput solut substitut eq set 1 get eq set 3 subtract eq set 2 eq set 3 get precis set constraint increment input must satisfi obtain desir input increment deltax x i0 comput set constraint give desir solut illustr requir one iter inde set constraint use step 5 method test data gener therefor given arbitrarili chosen input i0 program domain method deriv desir input one iter solv constraint found set inconsist given path p infeas therefor method either deriv desir solut one iter guarante given path infeas 31 path nonlinear predic slice function input comput predic function nonlinear predic function local approxim tangent plane neighborhood current input ik residu valu comput ik provid feedback tangent plane ik comput increment ik tangent plane exact represent predic function predic function evalu desir outcom next iter slope correspond tangent plane predic function local current iter point ik may take one iter comput program input execut predic slice result evalu branch predic desir branch outcom let us consid path predic function comput second degre function input exampl program figur 1 initi program input path p travers i0 therefor input i0 iter refin predic slice input depend set branch predic bp1bp2 bp4 exampl path linear predic slice bp 3 also linear represent predic function f1 f2 f4 exampl previou section f 3 slope f3 respect z comput evalu divid differ 123 124 linear function repres tangent plane i0 nonlinear function comput predic function correspond branch predic bp 3 convert function inequ relat oper branch predic evalu get note relat oper represent bp2 differ exampl previou section differ branch taken predic residu i0 predic slice p set linear constraint use comput increment i0 use result two step 2 inequ constraint set convert equal introduc new variabl result system equat deltax deltay deltaz v solv use gaussian elimination61 deltax deltay deltaz free variabl u arbitrarili chosen equal 1 system solv deltax deltay deltaz v solut system 2 increment ad i0 obtain new input i1 execut predic slice p use program input i1 find four branch predic evalu desir branch result travers p fore algorithm termin success one iter summar result follow tabl iter exampl illustr tangent plane current input good enough linear approxim predic function neighborhood current input consid path predic function comput sine function input let us consid follow path p program figur 1 initi program input path p travers i0 bp2 evalu undesir branch i0 therefor step iter refin i0 execut summar result execut test data gener algorithm exampl tabl given path p travers branch predic bp1 bp4 evalu fals branch predic bp2 bp5 evalu true shown tabl iter 1 4 algorithm bp 1 bp 2 bp4 continu evalu desir outcom valu input x z increment f5 move closer zero iter final iter 4 f5 becom posit program input i4 therefor bp5 becom true would like point linear arithmet represent branch predic exact branch predic evalu desir outcom first iter continu subsequ erat wherea linear arithmet represent approxim branch predic neighborhood current input case bp5 tangent plane although iter refin input evalu desir outcom respect tangent plane may take sever iter refin input correspond branch predic evalu desir outcom exampl bp5 evalu trueit desir come i0 evalu fals i1 predic residu provid feedback linear represent ie tangent plane sine function bp5 input modifi step along linear arithmet represent result linear represent evalu posit valu i1 chang program input still fall short make predic function f5 evalu posit valu i1 subsequ iter input get refin final fourth iter predic function f5 evalu posit valu illustr exampl first iter branch predic comput linear function input continu evalu desir outcom input refin satisfi branch predic comput nonlinear function input regress test ing branch predic statement given path may chang gener test data modifi path travers input branch predic alreadi evalu desir outcom good initi input refin method therefor regress test use exist test data initi input refin gener new test data 32 array loop array input procedur one problem face test data gener method size input array test data gener method consid array element referenc predic slice branch predic path execut correspond predic function evalu input depend set given input identifi input variabl relev predic function fore test data gener algorithm use refin array element relev make test data gener independ size input array illustr method handl array loop gener test data program 10 given figur 4 take path initi input 10 compar perform two program execut base test data gener method therefor denot j th execut predic p initi program input path p travers i0 therefor step iter refin i0 execut let l h denot low high step respect predic slice input depend set branch predic p linear represent predic function correspond branch predic p h predic residu i0 predic function branch predic p set linear constraint use comput increment i0 use result two step inequ convert equal introduc seven new variabl b c e f g f 0 b c e g 0 consid system equat express unknown deltal delta deltax deltay b e get66 664 deltal delta deltax deltay unknown free variabl select obtain nonsingular system equat valu free variabl chosen arbitrarili constraint f 0 b c e g 0 valu free variabl f deltaz deltah g chosen 1 valu free variabl 3 integ arithmet solv unknown variabl use gaussian elimin get 3 new input gener first iter input valu a39 a51 a63 copi a89 a91 a93 respect increment comput iter ad a89 a91 a93 give step import increment comput current iter ad input use current iter result valu copi array element use next itera tion element a89 a91 a93 relev next iter execut predic slice p program input i1 evalu correspond predic func tion see branch predic evalu desir branch outcom result travers p predic function correspond branch predic p comput linear function input therefor expect algorithm termin success one itera tion summar result exampl tabl figur 4 korel 10 obtain test data path 21 program execut wherea method find solut one iter 8 program exe cution one program execut use begin test whether path p travers i0 six addit program execut requir comput slope comput linear represent one program execut requir test whether path p travers i1 choos path set linear constraint obtain step 3 consist sinc predic function path comput linear function input theorem 1 conclud path must infeas easi check p inde infeas path var array1100 integ min max iinteg 1 inputlowhighstepa 2 min alow 3 4 low 5 p3 min ai 7 8 outputminmax iter low high step a39 a51 a63 a89 a91 a93 iter bp11 bp21 bp31 bp12 bp22 bp32 bp13 figur 4 exampl use array loop 4 relat work popular approach autom test data gener path orient method symbol evalu actual program execut one earliest system automat gener test data use evalu linear path constraint describ 4 detect infeas path linear path constraint limit abil handl array refer depend program input recent attempt use symbol evalu test data gener fault base criteria describ 6 work test data gener system base collect heurist solv system constraint develop constraint deriv often imprecis result approxim solut path may travers sinc test data refin eventu obtain desir input method fail path travers approxim solut program execut base approach requir partial solut test data gener problem comput hand use valu integ input variabl describ 14 indic autom step requir comput hand program execut base approach autom test data gener describ 11 8 develop statement branch test criteria approach automat gener test data given path use actual execut program present 10 anoth program execut base approach use program instrument test data gener given path report 7 approach consid one branch predic one input variabl time use backtrack therefor may requir larg number iter even branch condit along path linear function input sever condit select path depend common input variabl lot effort wast backtrack consid branch predic path simultan path may travers intermedi input concept predic slice allow us evalu branch predic path independ intermedi input even though path may travers input make techniqu effici execut base method method scalabl larg program sinc number program execut iter independ path length equal number input variabl plu one input variabl iter execut input assign statement given path requir comput slope coeffici valu predic function input ik known previou iter one execut input assign statement path requir test whether path travers ik1 method use gaussian elimin solv system linear equat well establish wide implement techniqu solv system linear equat therefor method suitabl automa tion size system linear equat solv increas increas number branch condit path increas cost solv larger system significantli less exist execut base method conclus paper present new program execut base method use well establish mathemat tech niqu automat gener test data given path method innov applic tradit relax techniqu use numer analysi obtain exact solut equat iter improv approxim solut result obtain method test data gener promis provid practic solut autom test data gener problem easi implement tool requir alreadi avail effici exist program execut base approach requir fewer program execut branch predic path consid simultan back track also detect infeas larg class path singl iter execut base handl differ program languag featur work extend techniqu string pointer r test plan gener use formal grammar automat gener random selfcheck test adic extens automat differenti tool ansic system gener test data symbol execut program rule base softwar test data gener constraintbas automat test data gener adtest test data gener suit ada softwar system automat test data gener use constraint solv techniqu atla autom softwar test system autom softwar test data gener dynam approach test data gener ation automat data gener system data base simul test automat gener testcas dataset automat gener floatingpoint test numer analysi tr automat gener random selfcheck test case autom softwar test data gener constraintbas automat test data gener adtest automat test data gener use constraint solv techniqu rulebas softwar test data gener test plan gener use formal grammar atlasan autom softwar test system ctr jinhui ji wang zhichang qi jianp wu improv method gener pathwis test data journal comput scienc technolog v18 n2 p235240 march nguyen tran sy yve devil consist techniqu interprocedur test data gener acm sigsoft softwar engin note v28 n5 septemb jon edvardsson mariam kamkar analysi constraint solver una base test data gener acm sigsoft softwar engin note v26 n5 sept 2001 xun yuan atif memon use gui runtim state feedback gener test case proceed 29th intern confer softwar engin p396405 may 2026 2007 stephen thoma lauri william use autom fix gener secur sql statement proceed third intern workshop softwar engin secur system p9 may 2026 2007 mengluo ji ji wang shuhao li zhichang qi autom wcet analysi base program mode proceed 2006 intern workshop autom softwar test may 2323 2006 shanghai china hari hampapuram yue yang manuvir da symbol path simul pathsensit dataflow analysi acm sigsoft softwar engin note v31 n1 januari 2006 paolo tonella evolutionari test class acm sigsoft softwar engin note v29 n4 juli 2004 lu pin zhou wei liu yuanyuan zhou josep torrella pathexpand architectur support increas path coverag dynam bug detect proceed 39th annual ieeeacm intern symposium microarchitectur p3852 decemb 0913 2006 torsten robschink gregor snelt effici path condit depend graph proceed 24th intern confer softwar engin may 1925 2002 orlando florida david chay saikat dan phylli g frankl filippo vokolo elain j weber framework test databas applic acm sigsoft softwar engin note v25 n5 p147157 sept 2000 rupak majumdar koushik sen hybrid concol test proceed 29th intern confer softwar engin p416426 may 2026 2007 wei zhao lu zhang yin liu jiasu sun fuqe yang sniafl toward static noninteract approach featur locat acm transact softwar engin methodolog tosem v15 n2 p195226 april 2006 gregor snelt torsten robschink jen krink effici path condit depend graph softwar safeti analysi acm transact softwar engin methodolog tosem v15 n4 p410457 octob 2006 cristian cadar vijay ganesh peter pawlowski david l dill dawson r engler exe automat gener input death proceed 13th acm confer comput commun secur octob 30novemb 03 2006 alexandria virginia usa marc fisher ii gregg rothermel darren brown mingm cao curti cook margaret burnett integr autom test gener wysiwyt spreadsheet test methodolog acm transact softwar engin methodolog tosem v15 n2 p150194 april 2006