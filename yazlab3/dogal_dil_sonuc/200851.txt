effici imag process algorithm scan line array processor abstractw develop effici algorithm low intermedi level imag process scan line array processor simd machin consist linear array cell process imag scan line fashion low level process present algorithm block dft block dct convolut templat match shrink expand run realtim realtim mean requir process base neighborhood size mm output line gener rate om oper per line latenc om scan line best achiev model also develop algorithm median filter run almost realtim cost omrm logm time per scan line latenc bf lfloorunderlin 2rfloor scan line intermedi level process present optim algorithm translat histogram comput scale rotat also develop effici algorithm label connect compon determin convex hull multipl figur run onrm logn onrm log2n time respect latter algorithm significantli simpler easier implement alreadi report literatur linear array b introduct 11 motiv realtim imag process understand long regard particularli demand problem comput implement comput complex larg io bandwidth requir task involv consid exampl io bandwidth requir perform realtim hdtv simula tion task typic involv handl 1k 1k frame rate 60 frame per second result bandwidth requir approxim 500 mbyte per second progress scan imag surprisingli problem gener lie well beyond capac exist sequenti processor consequ great deal effort devot develop parallel architectur algorithm realtim imag process simplest categori propos architectur twodimension array mesh exampl class includ mpp 1 clipp seri 2 maspar 3 dap 4 gapp 5 gener intent behind simd singl instruct stream singl data stream machin dimens mesh match input imag pixel assign processor maintain spatial relationship imag consequ machin perform local window oper typic low level imag process extrem effici cours consider cost usual associ larg number processor furthermor nearestneighbor link might make local interprocessor commun quit fast commun two processor either end n theta n array requir n time reduc cost global commun retain advantag mesh second class architectur propos categori improv mesh link sequenc progress smaller mesh mesh dimens one half predecessor result pyramid structur global commun cost n theta n array reduc thetan thetalog n step thu pyramid architectur appropri intermedi level task requir global exchang inform exampl pyramid machin includ papia 6 gam 7 system cours compar mesh increas cost associ pyramid due increas complex gener high level imag process requir simultan execut sever independ task appropri mimd multipl instruct stream multipl data stream machin disadvantag use pure mimd machin simul simd oper consider overhead control synchron henc expect perform data parallel comput typic low level imag process effici display truli simd machin recogn rel advantag simd mimd oper ation number machin propos gener consist elabor combin reconfigur simd mimd modul basic idea behind creat hybrid enabl programm util effici architectur whatev particular problem present exampl class architectur includ imag understand architectur iua 8 associ string processor asp 9 netra 10 strategi architectur design probabl offer best hope achiev optim perform across spectrum process task also expens fortun applic requir level imag process situat limit low intermedi level task either simd architectur alreadi mention might well suffici howev one particularli simpl exampl avoid cost constraint mention far still achiev optim perform low intermedi level oper architectur propos case implement varieti name includ scan line array processor slap 11 12 princeton engin 13 sarnoff engin 14 architectur refer slap basic topolog simd machin linear array processor number processor correspond number pixel row imag incom data load line line processor array distinct processor receiv imag column cours result high io bandwidth memori architectur entir distribut among individu processor processor commun directli two immedi neighbor whenev exist obviou disadvantag interconnect scheme small commun bandwidth would seem make global commun ineffici howev number compens compar altern anyth els would involv either elabor interconnect network share memori accompani increas cost complex scale slap simpli requir ad processor end exist array unlik bu base system obviou technic limit mani processor link togeth without degrad perform henc seem reason suspect linear array architectur might offer one lowest cost option achiev optim low intermedi level imag process howev true necessari argu technolog rel cheap effici algorithm written run architectur surprisingli design algorithm util linear array architectur receiv modest attent date literatur specif algorithm propos sort 15 matrix multipl 16 hough transform 17 algorithm also propos solv number graph 18 geometr problem 19 assum imag data alreadi partit among processor accord shuffl rowmajor distribut advantag shuffl rowmajor distribut significantli reduc cost global commun differ contigu region imag disadvantag rather time consum implement appreci recal imag load line line slap henc pixel line initi assign processor like index achiev shuffl rowmajor distribut interprocessor broadcast would oper per processor n theta n imag would make unsuit realtim applic contrast initi distribut requir singl load oper per processor scan line accordingli assum straightforward data distribut start point develop effici algorithm select low intermedi level imag process task 12 comput model comput model use paper defin follow slap architectur linear array n processor imag process size n theta n processor index ascend order 0 n gamma 1 scan line receiv processor p k latch valu correspond column index k processor p k connect bidirect commun link processor p kgamma1 p k1 whenev exist processor p kgamma1 p k1 refer left right neighbor processor p k respect bandwidth commun link assum word word defin olog n bit processor commun constant number word immedi neighbor unit time processor oper togeth simd fashion processor gener purpos sequenti processor capac condit command execut local address gener unit time processor comput o1 basic logic arithmet oper final processor associ random access memori hold word unit time processor access local memori read write word 13 problem formul paper problem develop algorithm low level imag process treat separ intermedi level task case low level oper assum need achiev smallest possibl latenc consist optim run time end requir process scan line begin immedi receiv correspond output line gener amount time independ imag size formal suppos requir process base neighborhood size theta requir output line gener rate om oper per line initi delay om line algorithm achiev level perform run real time case intermedi level oper entir imag must avail examin output line gener henc assum outset entir imag alreadi store local memori processor way receiv column store processor like index alreadi note straightforward input distribut requir time requir subsequ preprocess includ time estim intermedi level oper call algorithm optim either run time shown faster algorithm possibl 14 result result summar follow low level oper develop realtim algorithm block dft block dct convolut templat match shrink expand 20 also develop algorithm median filter run almost realtim cost om log time per scan line latenc b mc scan line 20 intermedi level oper develop optim algorithm translat histogram comput scale translat 20 although sake breviti omit discuss latter two algorithm also develop algorithm label connect compon determin convex hull multipl compon run log n time log 2 n respect 20 complex last two algorithm compar favor exist algorithm respect requir log n time also assum shuffl rowmajor distribut 19 addit algorithm significantli simpler easier implement thu expect perform better practic process oper 21 median filter median filter process replac pixel given imag median pixel contain window center around pixel filter oper use remov isol line pixel preserv spatial resolut specif let x input imag size n theta n let window size theta assum odd conveni filter imag defin 1 1 straightforward approach solv problem slap comput median independ output pixel specif produc row j output imag processor p k first accumul 2 pixel valu necessari comput j k median 2 valu comput best known sequenti algorithm thetam 2 time next scan line receiv processor p k updat current set pixel valu replac least recent valu current locat either side processor p k clearli simpl method yield desir latenc om scan line also oper per scan line howev effici procedur allow median filter imag perform rate om log oper per scan line desir latenc procedur base observ window surround pixel j k window surround pixel j differ 2m pixel immedi suggest store 2 valu contain window pixel j k appropri data structur allow us 1 effici updat data structur reflect window pixel j quickli find median valu store data structur one data structur orderstatist tree 21 allow us dynam 1 delet element 2 insert element 3 locat p th smallest element integ p time proport logarithm tree size henc use data structur produc algorithm perform median filter om log oper per scan line assum realtim implement oper input j th row input imag x initi processor p k broadcast valu input pixel xj k set gamma 1 processor fk gamma window includ xj k sinc essenti involv left shift input scan line mc posit follow right shift b mc posit clearli accomplish om time next processor p k delet oldest valu orderstatist tree insert valu xj k valu receiv neighbor alreadi note accomplish om log time final olog time processor p k determin median updat orderstatist tree output result valu pixel j gamma b mc k output imag thu shown follow theorem theorem 1 given slap n processor median filter oper n theta n imag window size theta perform almost realtim cost om log oper per scan line latenc b mc scan line 22 block 2ddft 2ddct block transform given type imag involv partit imag nonoverlap block appli desir transform result block two wide use transform two dimension discret fourier transform 2ddft two dimension discret cosin transform 2ddct section present algorithm implement either transform theta block imag matrix realtim sinc two problem essenti analog restrict discuss task comput block 2ddft let n theta n input imag x partit nonoverlap theta block assum conveni divid n evenli denot one block x ab g 2ddft x ab defin 1 straightforward approach appli transform slap would independ evalu contribut input line comput coeffici would line howev 2ddft separ transform rewrit definit follow notic given row g input block given column output block singl valu 0 ab g comput om oper ab g calcul evalu contribut g th input row th output column om oper thu take advantag separ comput block dft realtim assum realtim implement oper input j th row imag x initi processor p k broadcast valu input pixel xj k set gamma 1 processor fbkmc theta bkmc theta 1 bkmc theta mm gamma 1g share block requir om time follow processor p k comput k mod th coeffici 1ddft j mod th row block specif processor p k evalu express clearli involv om oper next processor p k use result updat column partial comput 2ddft coeffici held array local memori precis valu c 0 c perform follow oper clearli involv om oper last row block process valu held array partial gamma dft k k mod th column 2ddft block process final processor p k output bjmcgamma1bkmc j mod k mod pixel j gamma k output imag henc follow theorem theorem 2 given slap n processor block dft dct imag size n theta n block size theta comput realtim cost om oper per scan line latenc scan line 23 convolut templat match convolut templat match fundament imag process oper comput demand section present method perform convolut imag size n theta n kernel size theta realtim rate om oper per scan line method extend perform templat match within time bound given imag x size n theta n kernel w size theta convolut x w imag size n gamma 1 theta n gamma 1 defin assum implicitli equal zero whenev j gamma r interv 0 n gamma 1 straightforward comput convolut would requir oper therefor would requir minimum omegagamma oper per scan line slap suppos instead employ overlapandadd strategi 22 specif partit input imag x nonoverlap theta block refer x 0 index b convolv block x 0 ab theta kernel w obtain ab let easi verifi valu j k defin 6 obtain simpli ad four entri 0 noth appar gain comput redefin matrix convolut problem term block convolut howev zero pad block x accord follow rule ab ab 1 also zero pad kernel w analog manner obtain w 00 done abl obtain linear convolut x 0 ab w perform circular convolut zeropad counterpart x 00 ab w 00 advantag circular convolut lie fact circular convolut two matric obtain simpli find respect dft multipli ident index element two dft final find idft result product matrix express concis follow let j denot circular convolut n denot elementwis multipl ab alreadi demonstr previou section comput block dft n theta n imag theta block om oper per scan line henc would also expect abl obtain dft 2m theta 2m zeropad block om time well result dft block distribut two column per processor clear elementwis multipl dft x 00 ab dft w would requir om oper per processor well final sinc comput idft essenti analog comput dft would expect modif algorithm find block dft would also yield idft dft x 00 ab oper per input line cours would need complet comput dft x 00 ab could begin comput idft henc would actual overlap comput dft x 00 ab comput idft dft x 00 ab rather comput idft dft x 00 n dft w 00 thu see convert problem convolut one block convolut take advantag properti fourier transform reduc cost convolut om 2 oper per scan line om oper per scan line detail present algorithm see 23 henc follow theorem theorem 3 given slap n processor convolut imag size n theta n kernel size theta comput realtim cost om oper per scan line latenc 2m scan line similarli templat match problem solv rate templat size theta 24 shrink expand given posit integ mstep shrink n theta n imag x n theta n imag defin recurs follow 1 similarli mstep expans n theta n imag x n theta n imag e defin replac minimum maximum definit easi verifi mstep shrink mstep expans simpli involv replac pixel x respect minimum maximum 2m pixel contain 2m center pixel essenti similar shrink expans problem discuss algorithm former assum realtim algorithm processor p k hold local memori queue refer queue k hold previou 2m input processor new pixel xj k receiv processor p k queue k updat minimum min k valu queue k comput next processor p k broadcast min k set processor whose window encompass column k complet processor 2m repres minima column contain window center processor processor p k comput smallest 2m output pixel output imag henc follow theorem theorem 4 given slap n processor mstep shrink expans imag size n theta n comput realtim cost om oper per scan line latenc scan line 3 intermedi level imag process oper 31 convex hull given set point distinguish common label convex hull defin smallest convex polygon contain point set extrem point defin corner smallest polygon section consid n theta n input imag x pixel one possibl label pixel share particular label said belong set even though may spatial unconnect one anoth set wish determin extrem point convex hull present algorithm comput convex hull log 2 n time simplifi present concentr problem determin upper hull sinc task find lower hull entir analog divideandconqu algorithm first divid input imag two subimag one consist leftmost n column consist rightmost n column label upper hull two subimag recurs comput parallel novel strategi use merg two upper hull merg procedur consist first concaten sequenc extrem point defin right upper hull sequenc extrem point defin left upper hull done remov subsequ point fp point lie line connect adjac point p l p r algorithm perform make olog n lefttoright righttoleft sweep across imag label time elimin fraction nonextrem point extens pipelin use insur time sweep complet everi one label set spite simplic algorithm analysi requir somewhat tricki geometr argument establish olog n sweep suffici henc first present algorithm provid proof correct 311 algorithm begin algorithm two preprocess step reduc complex task first preprocess step processor p k sequenti examin correspondingli index column input imag x local memori label encount retain uppermost occurr label potenti candid point upper hull set second preprocess step label make lefttoright sweep across processor array pass processor p k identifi candid point processor candid point processor 0 k maximum row index similarli label also make righttoleft sweep across processor array pass processor p k identifi candid point processor candid point processor k maximum row index pipelin sweep label whole process complet time processor p k examin candid point see lie line connect respect left right maxima point elimin possibl candid point label sequenc candid point left two preprocess step actual consist two characterist subsequ one may empti first subsequ monoton increas subsequ monoton decreas signific properti becom appar discuss proof algorithm comput extrem point upper hull proce follow divid n theta n input imag x two subimag x 1 x 2 x 1 consist column consist column n n gamma 1 label recurs comput parallel uh 1 uh 2 respect upper hull set point label found x 1 x 2 comput complet uh 1 uh 2 repres given label remain candid point column 0 ngamma 1 column n n gamma 1 respect merg uh 1 uh 2 therebi obtain complet upper hull uh proceed follow first comput candid point p coordin immedi successor sp label accomplish make singl righttoleft pass across processor array carri along coordin recent encount candid point label pipelin sweep label whole process complet time next olog n repetit perform follow comput label make lefttoright pass across processor array carri along coordin recent encount candid point label henc arriv candid point p avail coordin current predecessor p p denot angl form point p p open away interior convex hull candid point p check see p p correspond ask whether p lie line segment connect p p sp elimin point consider carri along coordin p p new valu predecessor sp complet lefttoright pass begin analog righttoleft pass back across processor array howev concern delet previou lefttoright pass may left successor valu outdat henc bring along candid point p coordin immedi successor pipelin insur complet two pass label time olog n repetit candid point remain set extrem point upper hull set 312 proof made claim log 2 n time suffici determin extrem point convex hull arbitrari set basi claim content olog n pass across processor array suffici merg two arbitrari upper hull first prove latter claim demonstr overal run time follow proof upper limit run time merg algorithm base geometr argument therefor clearli present diagram shown figur 1 figur 1 illustr process merg two arbitrari upper hull defin subsequ extrem point fp 1 uh 2 defin subsequ extrem point fp j1 g order point subsequ correspond rel order column indic assum uh 1 span portion column 0 ngamma 1 uh 2 span portion column n n gamma 1 upper hull defin n extrem point accord way drawn uh 1 uh 2 figur 1 upper hull uh result merg uh 1 uh 2 line segment sake clariti allow number distort figur 1 first repres uh 1 uh 2 continu curv rather concaten line segment second allow angl p j open away interior convex hull less 90 ffi fact preprocess make imposs final drawn uh 1 uh 2 merg elimin entir subsequ g yet subsequ compos two smaller subsequ one shown monoton decreas shown monoton increas understand difficulti recal preprocess procedur insur origin se figur 1 merg two upper hull quenc candid point monoton increas one two maximum point monoton decreas thereaft clearli maximum point must also extrem point complet convex hull impli subsequ candid point lie either left right qualifi elimin therefor subsequ nonextrem candid point need elimin must either monoton increas decreas g howev situat pictur figur 1 could still aris allow rotat imag line segment p 1 p k parallel horizont axi imag grid permit chang describ enhanc clariti present without affect valid proof consid arbitrari lefttoright pass across imag describ algorithm sweep extend tangent uh 2 secondto last point remain uh 1 therebi elimin interven point fall line assum arbitrari number pass made across processor array time elimin point end uh 1 pl last point remain sequenc next lefttoright pass extend line segment p p l p shown figur 1 follow succeed righttoleft pass draw tangent sp p two fact concern point pa must hold first pa must lie left line segment p p l g perpendicular p 1 pass point p p l see recal subsequ candid point requir elimin must either monoton increas monoton decreas consequ angl form three point p u p v pw u must greater 90 ffi turn mean perpendicular p 1 must divid subsequ exactli two part thu everi point remain uh1 asid pl p p l must lie left line segment p p l g pa also requir point pa lie line segment p c line segment parallel pass guarante fact angl form three consecut point upper hull must greater 180 ffi henc p u p v pw three consecut point determin uh 1 slope p v pw defin respect p p l g must steeper p u p v consequ slope sp p defin respect p p l g must steeper must lie p c follow righttoleft pass drawn tangent sp p succeed left toright pass draw tangent p p p b notic reason point pa must lie line segment must lie line segment pa h line segment parallel pass pa moreov point pb must lie right line pass point p p l p sinc angl form three consecut point upper hull must greater 180 ffi final defin point f point line pass point p p l p distanc p p p l divid region right line two halv indic figur 1 enabl us make follow two observ 1 pb lie region 1 project p p p b p 1 p k must greater equal project p p l f sinc definit project p p l f exactli twice project p p l p follow project second tangent p p p b must least twice project previou tangent p p l p 2 sinc point pa must lie p c left p p l g follow slope p p p b defin respect p p l g must less slope dpb pb lie region 2 slope dpb must less slope df sinc definit slope df exactli half slope p p l f follow slope second tangent p p p b must less half slope previou tangent p p l p henc conclud tangent drawn lefttoright pass either half slope doubl project tangent drawn previou lefttoright pass imag digit easili shown smallest possibl nonzero project tangent either p 1 p k perpendicular omegagamma 1 cours maximum possibl project p u p v either p 1 p k perpendicular obvious follow maximum minimum possibl slope p u defin respect 2 repect therefor sinc tangent drawn lefttoright pass either half slope doubl project tangent drawn previou lefttoright pass follow olog n pass suffici comput upper bound overal run time determin possibl convex hull note solut merg problem two n theta psubimag 2 p n still requir thetan log ntime henc upper bound run time divideandconqu algorithm govern follow recurr log n whose solut log 2 n henc shown follow theorem theorem 5 assum slap n processor input imag size n theta n distribut one column per processor also assum pixel label one possibl label determin extrem point convex hull label set log 2 n time also use algorithm solv anoth problem involv convex hull consid n theta n imag pixel belong one 2 set distinguish common label requir pixel belong particular set must form connect compon appropri preprocess use algorithm find extrem point convex hull 2 set log 2 n time justifi claim consid arbitrari vertic line divid imag two part requir member particular set belong connect compon n set member side arbitrari line henc algorithm call us make pass across processor array given set obvious need make pass across arbitrari line set one n set therefor move one processor anoth coordin candid point label need carri along henc log 2 n time suffic case well henc also follow theorem theorem assum slap n processor input imag size n theta n distribut one column per processor also assum pixel label one 2 possibl label restrict pixel share particular label must form connect compon determin extrem point convex hull label set log 2 n time 32 connect compon given binari imag x two pixel call neighbor word two pixel said neighbor adjac horizont vertic diagon two pixel p j 1 said connect exist sequenc pixel p j h k h share properti p j hgamma1 k hgamma1 neighbor p j h k h section present algorithm label connect compon n theta n input imag slap log n time algorithm find connect compon employ divideandconqu strategi assum processor p k hold k th column input imag divid n theta n input imag x two subimag x 1 x 2 x 1 consist column 0 ngamma 1 x 2 consist column n n gamma 1 recurs parallel identifi label connect compon two subimag x 1 x 2 complet identifi merg connect compon span column n easili done use exist sequenti algorithm time either processor p ngamma1 processor p n broadcast label chang across two subimag sinc connect compon span two column henc label chang accomplish pipelin time clearli whole merg oper complet time comput upper bound run time label connect compon note solut merg problem two n theta psubimag 2 requir thetan time henc upper bound run time divideandconqu algorithm govern follow recurr whose solut log n henc follow theorem theorem 7 given slap n processor input imag size nthetan distribut one column per processor connect compon imag label log n time 33 translat translat process map pixel locat j k n theta n input imag x new posit j n theta n output imag 1g assum simplic b integ jaj jbj n2 sinc case either jaj n2 jbj n2 reformul jaj jbj n2 algorithm proce follow initi shift row jbj posit right correctli reloc jbj column follow wrap around remain jbj column end processor array pipelin columnbycolumn broadcast task translat pixel within particular column jaj posit easili accommod insur pixel reach correct processor store properli shift memori locat straightforward verifi upper bound run time algorithm onjbj comparison lower bound deriv note problem requir us move n gamma jbj column pixel distanc jbj processor jbj column distanc n gamma jbj processor sinc processor perform constant number transfer per unit time n processor follow lower bound omegagamma njbj henc follow theorem theorem 8 given slap n processor input imag size n theta n distribut one column per processor translat imag distanc vertic direct distanc b horizont direct complet thetanjbj time bound optim 34 histogram comput histogram n theta n input imag x comput determin rel frequenc occurr variou possibl pixel valu imag develop algorithm assum simplic possibl pixel intens constrain integ valu rang 0 gamma 1 noth assum rel size n algorithm proce follow first processor p k comput histogram k th column input imag processor simpli examin n pixel increment entri array call whose index correspond pixel valu next comput imag matrix histogram ad togeth ident index valu local histogram h k simpli requir righttoleft pass across processor array leav complet histogram valu array h 0 kept processor p 0 pipelin pass whole procedur complet om n time clearli optim henc follow theorem theorem 9 given slap n processor input imag size n theta distribut one column per processor assum possibl pixel valu constrain integ valu interv 0 gamma 1 histogram imag comput time paper present effici algorithm slap varieti low intermedi level imag process task low level oper algorithm run realtim clearli best achiev model intermedi level oper algorithm either optim compar favor exist algorithm moreov algorithm achiev perform without assum input imag alreadi partit accord shuffl rowmajor distribut taken togeth result suggest slap promis architectur realtim imag process r design massiv parallel processor clip7a imag processor design maspar mp1 cost effect massiv parallel comput distribut processor array geometr arithmet parallel processor papia gam pyramid imag understand architectur asp costeffect parallel microcomput netra architectur larg scale multiprocessor vision system realtim imag process scan line array pro cessor scan line array processor imag comput princeton engin realtim video system simul sarnoff engin massiv parallel comput high definit system simul optim sort algorithm parallel comput modular matrix multipl linear ar ray comput hough transform scanlin array processor optim graph algorithm fixeds linear array optim geometr algorithm digit imag fixeds linear array scanlin array fundament digit imag process introduct algorithm effici imag process algorithm scan line array proce sor tr ctr ronald greenberg find connect compon scan line array processor proceed seventh annual acm symposium parallel algorithm architectur p195202 june 2426 1995 santa barbara california unit state francesco gregoretti roberto passeron leonardo maria reyneri claudio sanso high speed vlsi architectur handwrit recognit journal vlsi signal process system v28 n3 p259278 juli 2001 shorin kyo shinichiro okazaki tamio arai integr memori array processor architectur embed imag recognit system acm sigarch comput architectur news v33 n2 p134145 may 2005