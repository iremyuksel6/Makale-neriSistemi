parallel mine associ rule abstractw consid problem mine associ rule sharednoth multiprocessor present three algorithm explor spectrum tradeoff comput commun memori usag synchron use problemspecif inform best algorithm exhibit near perfect scaleup behavior yet requir minim overhead compar current best serial algorithm b introduct avail inexpens storag progress data captur technolog mani organ creat ultralarg databas busi scientif data trend expect grow complementari technolog trend progress network memori processor technolog open possibl access manipul massiv databas reason amount time data mine also call knowledg discoveri databas effici discoveri previous unknown pattern larg databas promis data mine deliv technolog enabl develop new breed decisionsupport applic discov associ rule import data mine problem 1 recent consider research design fast algorithm task 1 3 5 6 8 12 9 11 howev except 10 work far concentr design serial algorithm sinc databas mine often larg measur gigabyt even terabyt parallel algorithm requir present paper three parallel algorithm mine associ rule order determin best method mine rule parallel explor spectrum tradeoff comput commun memori usag synchron use problemspecif inform parallel data mine specif 1 focu count distribut algorithm minim commun even expens carri redund duplic comput parallel 2 data distribut algorithm attempt util aggreg main memori system effect communicationhappi algorithm requir node broadcast local data node also depart comput scienc univers wisconsin madison 3 candid distribut algorithm exploit semant particular problem hand reduc synchron processor segment databas base upon pattern differ transact support algorithm also incorpor load balanc algorithm base upon serial algorithm apriori first present 3 chose apriori algorithm superior perform earlier algorithm 1 6 shown 3 prefer apriori apriorihybrid somewhat faster algorithm 3 apriorihybrid harder parallel perform apriorihybrid sensit heurist determin paramet furthermor perform apriori made approxim apriorihybrid combin small workload sever apriori cycl singl workload requir one cycl algorithm 8 quit similar apriori parallel techniqu directli appli algorithm well algorithm 11 perform well apriori larg dataset larg number item algorithm 9 attempt improv perform apriori use hash filter howev see section 43 optim actual slow apriori algorithm concurr work algorithm parallel recent present simul studi 10 suffer use hashfilt despit use special commun oper build discuss section 43 three parallel algorithm implement ibm powerparallel system sp2 henceforth refer simpli sp2 sharednoth machine7 present measur implement evalu effect design tradeoff win algorithm part ibm datamin product use field organ rest paper follow section 2 give brief review problem mine associ rules1 apriori algorithm3 propos parallel algorithm base section 3 give descript parallel algorithm section 4 present result perform measur algorithm section 5 contain conclus detail version paper found 2 2 overview serial algorithm 21 associ rule basic problem find associ rule introduc 1 follow let set liter call item let set transact transact itemset say transact contain x set item x associ rule implic form x rule x hold transact set confid c c transact contain x also contain rule x support transact set transact contain x given set transact problem mine associ rule gener associ rule certain userspecifi minimum support call minsup confid call minconf problem decomposit problem mine associ rule decompos two subproblem 1 1 find set item itemset whose support greater userspecifi minimumsupport itemset minimum support call frequent itemset kitemset itemset k item lk set frequent kitemset minimum support member set two field itemset ii support count ck set candid kitemset potenti frequent itemset member set two field itemset ii support count dataset local processor p dr dataset local processor p repartit candid set maintain processor p kth pass k item candid figur 1 notat l1 ffrequent 1itemsetsg repres pass number begin ck new candid size k gener transact 2 increment count candid ck contain lk candid ck minimum support answer figur 2 apriori algorithm 2 use frequent itemset gener desir rule gener idea say abcd ab frequent itemset determin rule ab cd hold comput ratio supportabcdsupportab conf minimum confid rule hold rule minimum support abcd frequent much research focuss first subproblem databas access part comput sever algorithm propos 1 3 6 8 9 11 review section 22 apriori algorithm 3 parallel algorithm base 22 apriori algorithm figur 2 give overview apriori algorithm find frequent itemset use notat given figur 1 first pass algorithm simpli count item occurr determin frequent 1itemset subsequ pass say pass k consist two phase first frequent itemset l kgamma1 found pass use gener candid itemset c k use apriori candid gener procedur describ next databas scan support candid c k count fast count need effici determin candid c k contain given transact hashtre data structur 3 use purpos candid gener given l kgamma1 set frequent 1itemset want gener superset set frequent kitemset intuit behind apriori candid gener procedur itemset x minimum support subset x simplic assum item itemset lexicograph order candid gener take two step first join step join l kgamma1 l insert ck select pitem1 pitem2 next prune step delet itemset c 2 c k k gamma 1subset c l kgamma1 exampl let l 3 ff1 2 3g f1 2 4g f1 3 4g f1 3 5g f2 3 4gg join step c 4 ff1 2 3 g prune step delet itemset f1 3 4 5g itemset f1 4 5g l 3 left f1 2 3 4g c 4 3 parallel algorithm first present three parallel algorithm first subproblem problem find frequent itemset give parallel algorithm second subproblem problem gener rule frequent itemset refer figur 1 summari notat use algorithm descript use superscript indic processor id subscript indic pass number also size itemset algorithm assum sharednoth architectur n processor privat memori privat disk processor connect commun network commun pass messag commun primit use algorithm part mpi messag pass commun librari support sp2 candid messagepass commun standard current discuss 4 data evenli distribut disk attach processor ie processor disk roughli equal number transact requir transact place disk special way 31 algorithm 1 count distribut algorithm use simpl principl allow redund comput parallel otherwis idl processor avoid commun first pass special pass k 1 algorithm work follow 1 processor p gener complet c k use complet frequent itemset l kgamma1 creat end pass k gamma 1 observ sinc processor ident l kgamma1 gener ident 2 processor p make pass data partit develop local support count candid 3 processor p exchang local c k count processor develop global c k count processor forc synchron step 4 processor p comput l k c k 5 processor p independ make decis termin continu next pass decis ident processor ident l k first pass processor p dynam gener local candid itemset c 1 depend item actual present local data partit henc candid count differ processor may ident care must taken exchang local count determin global c 1 thu everi pass processor scan local data asynchron parallel howev must synchron end pass develop global count perform consider step 12 45 similar serial algorithm nonobvi step processor exchang local count arriv global c k count sinc processor exact c k processor put count valu common order count array need perform parallel vector sum array requir commun count valu done ologn commun step also avoid timeconsum logic would otherwis need assur combin count belong candid full detail process includ mpi commun primit use describ 2 32 algorithm 2 data distribut attract featur count distribut algorithm data tupl exchang processor count exchang thu processor oper independ asynchron read data howev disadvantag algorithm exploit aggreg memori system effect suppos processor memori size jm j number candid count one pass determin jm j increas number processor 1 n system n theta jm j total memori still count number candid one pass processor count ident candid count distribut algorithm count candid per pass serial algorithm data distribut algorithm design exploit better total system memori number processor increas algorithm processor count mutual exclus candid thu number processor increas larger number candid count pass nprocessor configur data abl count singl pass candid set would requir n pass count downsid algorithm everi processor must broadcast local data processor everi pass therefor algorithm becom viabl machin fast commun pass 1 count distribut algorithm 1 processor p gener c k l kgamma1 retain 1nth itemset form candid subset k count 1n itemset retain determin processor id comput without commun processor implement itemset assign roundrobin fashion c k set disjoint union c k set origin c k 2 processor p develop support count itemset local candid set c use local data page data page receiv processor 3 end pass data processor p calcul l k use local c k l set disjoint union l k set l k 4 processor exchang l k everi processor complet l k gener c k1 next pass step requir processor synchron obtain complet l k processor independ ident decid whether termin continu next pass interest step step 2 processor develop support count local candid c chronous step processor broadcast local data well receiv local data processor must care avoid network congest use asynchron commun overlap commun time count support see 2 full detail 33 algorithm 3 candid distribut one limit count data distribut algorithm sinc databas transact could support candid itemset transact must compar entir candid set requir count duplic candid set everi processor data broadcast everi databas transact addit count data distribut algorithm requir processor synchron end pass exchang count frequent itemset respect workload perfectli balanc caus processor wait whichev processor finish last everi pass problem due fact neither count data exploit problemspecif knowledg data tupl candid itemset partit mere equal divid work processor must consult inform gather proceed onto next pass candid distribut algorithm attempt away depend partit data candid way processor may proceed independ pass l l heurist determin algorithm divid frequent itemset l lgamma1 processor way processor p gener uniqu c independ processor c time data repartit processor count candid c independ processor note depend upon qualiti itemset partit part databas may replic sever processor itemset partit algorithm consid aspect identifi segment l lgamma1 like support differ databas transact choic redistribut pass tradeoff decoupl processor depend soon possibl wait itemset becom easili equit partition partit algorithm exploit semant apriori candid gener procedur describ section 22 candid distribut processor proce independ count portion global candid set use local data commun count data tupl ever requir depend processor processor prune local candid set prune step candid gener howev inform sent asynchron processor wait complet prune inform arriv processor prune step candid gener prune candid set much possibl use whatev inform arriv opportunist start count candid late arriv prune inform instead use subsequ pass algorithm describ use either count data distribut algorithm pass 1 partit l kgamma1 among n processor l kgamma1 set well balanc discuss partit done record frequent itemset l kgamma1 processor assign itemset partit ident done parallel processor 2 processor p gener c logic use l kgamma1 partit assign note p still access complet l kgamma1 henc use standard prune gener c k pass 3 p develop global count candid c k databas repartit dr time 4 p process local data data receiv processor post asynchron receiv buffer receiv l j k processor l j need prune c prune step candid gener 5 processor p comput l k c k asynchron broadcast processor use send 1 processor p collect frequent itemset sent processor use prune step candid gener join step itemset receiv processor j could length greater keep track processor p j largest size frequent itemset sent receiv buffer frequent itemset repost process 2 k use local l happen p receiv l j kgamma1 processor p need care time prune need distinguish itemset long subset candid itemset present l j itemset present set yet receiv processor p probe l rememb repartit took place pass l use l gamma 1 long prefix itemset question find processor respons check l j receiv processor 3 p make pass dr count c k comput l k c k asynchron broadcast k everi processor use send data distribut algorithm step 3 pass commun local data support count develop one differ local data need broadcast everi processor candid partit processor inform transact use develop support count processor allow processor send less data network full detail filter describ 2 partit l k motiv algorithm partit l k exampl let l 3 fabc abd abe acd ace bcd bce bde cdeg l fabcdeg l whose member common prefix ab note candid abcd abc abd abcd also prefix ab apriori candid gener procedur section 22 gener candid join item e therefor assum item itemset lexicograph order partit itemset l k base common long prefix ensur partit assign one processor ensur processor gener candid independ ignor prune step suppos also repartit databas way tupl support itemset contain l k partit assign processor copi local disk processor processor proceed complet asynchron actual algorithm involv two reason processor may obtain frequent itemset comput processor prune step candid gener exampl processor assign set e know whether bcde frequent abl decid whether prune candid abcd set prefix bc may assign differ processor problem need balanc load across processor detail full partit algorithm given 2 34 parallel rule gener present parallel implement second subproblem problem gener rule frequent itemset gener rule much less expens discov frequent itemset requir examin data given frequent itemset l rule gener examin nonempti subset gener rule lgammaa comput effici done examin largest subset l first proceed smaller subset gener rule requir minimum confid 3 exampl given frequent itemset abcd rule abc minimum confid neither ab cd need consid gener rule parallel simpli involv partit set frequent itemset among processor processor gener rule partit use algorithm sinc number rule gener itemset sensit itemset size attempt equit balanc partit itemset length equal across processor note calcul confid rule processor may need examin support itemset respons reason processor must access frequent itemset rule gener begin problem count data distribut algorithm end last pass processor frequent itemset candid distribut algorithm fast processor may need wait slower processor discov transmit frequent itemset reason rule gener step rel cheap may better candid distribut algorithm simpli discov frequent itemset gener rule offlin possibl serial processor would allow processor freed run job soon done find frequent itemset even processor system still work 35 discuss tradeoff initi clear us three algorithm would win would even singl overal winner count minim commun expens ignor aggreg memori workstationclust environ approach probabl ideal may howev sp2 data distribut fulli exploit aggreg memori cost heavi commun help us explor issu also data abil count singl pass n time mani candid count could make algorithm strong contend third algorithm candid distribut see incorpor detail problemknowledg yield benefit count data distribut algorithm also see benefici remov processor depend synchron commun perform evalu ran experi 32node ibm sp2 model 302 node multiprocessor thin consist power2 processor run 667mhz 256mb real memori attach node 2gb disk less 500mb avail test processor run aix level 325 commun highperform switch hps2 adaptor combin commun hardwar rate peak bandwidth 80 megabyt per second latenc less 40 microsecond test base commun routin actual pointtopoint bandwidth reach 20mb experi run otherwis idl system see 7 detail sp2 architectur name 1 averag transact length averag size frequent itemset averag number transact tabl 1 data paramet use synthet dataset vari complex gener use procedur describ 3 characterist six dataset use shown tabl 1 dataset vari mani short transact frequent itemset fewer larger transact mani frequent itemset dataset 100mb per processor size could use larger dataset due constraint amount storag avail local disk candid algorithm write redistribut databas local disk candid partit run disk space larger dataset howev includ result experi 400 mb per processor count distribut algorithm show trend larger amount data per processor experi repeat multipl time obtain stabl valu data point 41 rel perform tradeoff figur 3 show respons time three parallel algorithm six dataset 16 node configur total databas size approxim 16gb respons time measur time elaps initi execut end time last processor finish comput respons time serial version run one node worth data 116th total databas run serial algorithm entir data enough disk space avail obtain similar result node configur dataset size experi candid distribut repartit done fourth pass test choic yield best perform result encourag count candid distribut algorithm respons time close serial algorithm especi true count overhead count less 75 compar serial version run 1n data one third overhead 25 spend wait processor synchron among parallel algorithm data distribut fare well two expect data inde abl better exploit aggreg memori multiprocessor make fewer pass case dataset larg averag transact frequent itemset length see tabl 2 howev respons time candid data count serial 1n data figur 3 rel perform algorithms20006000100001400018000 respons time normal commun figur 4 commun cost data distribut name serial count data candid tabl 2 number data pass requir perform turn markedli lower two reason extra commun fact everi node system must process everi singl databas transact commun worst two problem show figur 4 even machin sp2 fast commun point label normal correspond respons time normal data distribut algorithm 16node configur 100mb data replic node point label commun correspond modifi version data distribut algorithm instead receiv data node node simpli process local data 15 time sinc node exact data yield exact result differ time spent commun manag three six dataset discov fulli half time taken data distribut commun algorithm also almost entir cpubound make io save due data make fewer pass practic neglig hope better result candid distribut algorithm consid one exploit problemspecif semant sinc candid algorithm must also commun entir dataset redistribut pass suffer problem data candid howev perform redistribut also unlik data processor may select filter transact send processor depend upon depend graph partit greatli reduc amount data travel network unfortun even singl pass filter data redistribut costli question whether subsequ pass processor run complet independ smaller candid set compens cost perform result show redistribut simpli cost much also unlik data distribut candid algorithm unabl capit optim use aggreg memori larg candid set forc count multipl subpass occur candid take redistribut pass candid thu make mani data pass count insuffici gain coupl high redistribut cost allow count small overhead emerg overal winner although experi show count overhead fairli small synchron cost becom quit larg data distribut skew node equal capabl differ memori size processor speed io bandwidth capac investig issu broad topic futur plan howev one think sever altern ad load balanc count distribut algorithm requir redistribut complet databas case candid distribut algorithm extrapol result studi sens count distribut algorithm embellish appropri load balanc strategi like continu domin 42 sensit analysi examin scaleup sizeup speedup characterist count distribut algorithm report result data candid distribut algorithm inferior perform scaleup see well count distribut algorithm handl larger problem set processor avail perform scaleup experi increas size databas direct proport number node system use dataset d2016kt10i2 d1456kt15i4 d1140kt20i6 previou experi except number transact increas decreas depend upon multiprocessor size databas size singl 32 node configur shown tabl 1 100mb per node three dataset rang 100mb singl node case almost 32gb node case figur 5 show perform result three dataset addit absolut respons time number processor increas also plot scaleup respons time normal respect respons time singl processor clearli count algorithm scale well abl keep respons time almost constant databas multiprocessor size increas slight increas respons time due entir processor involv commun sinc itemset found algorithm chang databas size increas number candid whose support must sum commun phase remain constant sizeup experi fix size multiprocessor node grow databas 25 mb per node 400 mb per node plot respons time sizeup figur 5 sizeup respons time normal respect respons time 25mb per node result show sublinear perform count algorithm program actual effici databas size increas sinc result chang databas size increas neither amount cost commun increas size databas simpli make noncommun portion code take time due io transact process result reduc percentag overal time spent commun sinc io cpu process scale perfectli sizeup get sublinear perform scaleup rel scaleup5001500250035004500 respons time number processor scaleup number processor sizeup rel sizeup200060001000014000 respons time amount data per node mb sizeup amount data per node mb speedup rel speedup200060001000014000 respons time number processor number processor figur 5 perform count distribut respons time hash filter count figur effect hash filter speedup last set experi kept databas constant vari number processor constraint avail disk space size three databas fix 400mb figur 5 show result run count algorithm configur 16 processor run larger configur amount data node becom small speedup figur respons time normal respect respons time singl processor graph show count good speedup perform perform howev begin fall short ideal 8 processor artifact small amount data node process 25mb per node commun time becom signific percentag overal respons time easili predict sizeup experi notic data node process less signific becom commun time give us better perform simpli see opposit effect larger dataset would shown even better speedup characterist 43 effect hash filter recent park chen yu 9 propos use hash filter reduc cost apriori particularli second pass reduc size c 2 basic idea build hash filter tupl read first pass everi 2itemset present tupl count increment correspond hash bucket thu end pass upperbound support count everi 2itemset present databas gener c 2 use l 1 candid itemset hash candid whose support count hash tabl less minimum support delet figur 6 compar combin respons time pass 1 2 count algorithm hash filter algorithm time remain pass ident count algorithm beat hash filter count never explicitli form c 2 rather use special version hashtre done 3 sinc noth c 2 prune apriori candid gener algorithm equal l 1 theta l 1 c 2 thu repres simpl twodimension count array drastic reduc memori requir function call overhead save use hash filter prune c 2 lost due cost construct hash filter use regular hashtre store count c 2 parallel version hash filter algorithm call pdm present 10 along perform result simul studi use parallel techniqu similar count except entir candid set exchang rather candid count expens commun cpu cost focu pdm effici construct hashfilt use serial algorithm speed pass two howev serial algorithm hashfilt actual hurt perform result doubl perform hit pdm conclus consid problem mine associ rule sharednoth multiprocessor data partit across node present three parallel algorithm task base upon apriori best serial algorithm mine associ rule design algorithm repres spectrum tradeoff comput commun memori usag synchron use problemspecif inform count distribut algorithm attempt minim commun replic candid set processor memori processor work local data commun count data distribut algorithm take counter approach processor work entir dataset portion candid set maxim use aggreg memori requir high commun broadcast data minim commun may best approach workstat cluster environ necessarili true sp2 lastli candid algorithm incorpor domainknowledg partit data candid allow processor work uniqu set candid without repeatedli broadcast entir dataset maxim use aggreg memori limit heavi commun singl redistribut pass also complet elimin synchron cost count data must pay end everi pass studi tradeoff evalu rel perform three algorithm implement 32node sp2 parallel machin count distribut emerg algorithm choic exhibit linear scaleup excel speedup sizeup behavior use n processor overhead less 75 compar respons time serial algorithm execut 1n amount data data distribut algorithm lost cost broadcast local data processor everi processor result show even highbandwidthlowlat system sp2 data redistribut still costli candid distribut algorithm similarli edg cost data redistribut gain processor work independ differ subset problem could make singl pass redistribut may dishearten learn care design algorithm candid beaten rel simpler algorithm like count least illumin fact problem requir intric parallel explor variou possibl shown true mine associ rule acknowledg mauric houtsma implement parallel version associationrul mine algorithm present 1 earlier version ibm powerparallel system call sp1 node diskless data funnel master node although could use implement chang architectur commun librari basic algorithm benefit experi howard ho provid us earli prototyp implement mpi commun librari get us go ramakrishnan srikant patient explain mani nuanc serial apriori implement discuss mike carey influenti initi stage work final sever sp organ particularli hieronym sharon selzo bob walkup wonder help arrang sp cycl test r mine associ rule set item larg databas parallel mine associ rule design fast algorithm mine associ rule messag pass interfac forum discoveri multiplelevel associ rule larg databas scalabl powerparallel system effici algorithm discov associ rule effect hash base algorithm mine associ rule effici parallel data mine associ rule effici algorithm mine associ rule larg databas mine gener associ rule tr ctr hongjun lu ling feng jiawei han beyond intratransact associ analysi mine multidimension intertransact associ rule acm transact inform system toi v18 n4 p423454 oct 2000 moham j zaki neal lesh mitsunori ogihara planmin predict plan failur use sequenc mine artifici intellig review v14 n6 p421446 decemb 1 2000 canasai kruengkrai chuleerat jaruskulchai parallel learn algorithm text classif proceed eighth acm sigkdd intern confer knowledg discoveri data mine juli 2326 2002 edmonton alberta canada takahiko shintani masaru kitsuregawa parallel mine algorithm gener associ rule classif hierarchi acm sigmod record v27 n2 p2536 june 1998 robert grossman yike guo data mine task method parallel method scale data mine algorithm larg data set handbook data mine knowledg discoveri oxford univers press inc new york ny 2002 assaf schuster ran wolff communicationeffici distribut mine associ rule data mine knowledg discoveri v8 n2 p171196 march 2004 dora souliou ari pagourtzi nikolao drosino panayioti tsanaka comput frequent itemset parallel use partial support tree journal system softwar v79 n12 p17351743 decemb 2006 min song ilyeol song xiaohua hu robert b allen integr associ rule ontolog semant queri expans data knowledg engin v63 n1 p6375 octob 2007 assaf schuster ran wolff communicationeffici distribut mine associ rule acm sigmod record v30 n2 p473484 june 2001 moham j zaki srinivasan parthasarathi mitsunori ogihara wei li parallel algorithm discoveri associ rule data mine knowledg discoveri v1 n4 p343373 decemb 1997 valeri guralnik georg karypi parallel treeprojectionbas sequenc mine algorithm parallel comput v30 n4 p443472 april 2004 riedel christo faloutso gregori r ganger david f nagl data mine oltp system nearli free acm sigmod record v29 n2 p1321 june 2000 raymond ng lak v lakshmanan jiawei han alex pang exploratori mine prune optim constrain associ rule acm sigmod record v27 n2 p1324 june 1998 masaru kitsuregawa masashi toyoda iko pramudiono web commun mine web log mine commod cluster base execut australian comput scienc commun v24 n2 p310 januaryfebruari 2002 massimo coppola marco vanneschi parallel distribut data mine parallel skeleton distribut object data mine opportun challeng idea group publish hershey pa steve c chiu weikeng liao alok n choudhari mahmut kandemir processorembed distribut smart disk iointens workload architectur perform model evalu journal parallel distribut comput v64 n3 p427446 march 2004 shichao zhang chengqi zhang jeffrey xu yu effici strategi mine except multidatabas inform scienc intern journal v165 n12 p120 3 septemb 2004 asif jave ashfaq khokhar frequent pattern mine messag pass multiprocessor system distribut parallel databas v16 n3 p321334 novemb 2004 wenchih peng mingsyan chen develop data alloc scheme increment mine user move pattern mobil comput system ieee transact knowledg data engin v15 n1 p7085 januari ning x sean wang sushil jajodia discov calendarbas tempor associ rule data knowledg engin v44 n2 p193218 februari ruom jin ge yang gagan agraw share memori parallel data mine algorithm techniqu program interfac perform ieee transact knowledg data engin v17 n1 p7189 januari 2005 jiawei han yongjian fu mine multiplelevel associ rule larg databas ieee transact knowledg data engin v11 n5 p798805 septemb 1999 steve c chiu weikeng liao alok n choudhari mahmut kandemir processorembed distribut smart disk iointens workload architectur perform model evalu journal parallel distribut comput v65 n4 p532551 april 2005 shengnan cong jiawei han jay hoefling david padua samplingbas framework parallel data mine proceed tenth acm sigplan symposium principl practic parallel program june 1517 2005 chicago il usa steve c chiu weikeng liao alok n choudhari distribut smart disk iointens workload switch interconnect futur gener comput system v22 n5 p643656 april 2006 gregori buehrer yenkuang chen srinivasan parthasarathi anthoni nguyen amol ghote daehyun kim effici pattern mine share memori system implic chip multiprocessor architectur proceed 2006 workshop memori system perform correct octob 2222 2006 san jose california gregori buehrer srinivasan parthasarathi shirish tatikonda tahsin kurc joel saltz toward terabyt pattern mine architectureconsci solut proceed 12th acm sigplan symposium principl practic parallel program march 1417 2007 san jose california usa assaf schuster ran wolff dan trock highperform distribut algorithm mine associ rule knowledg inform system v7 n4 p458475 may 2005 christoph r lumb jiri schindler gregori r ganger david f nagl erik riedel toward higher disk head util extract free bandwidth busi disk drive proceed 4th confer symposium oper system design implement p77 octob 2225 2000 san diego california wei li ari moze comput frequent itemset insid oracl 10g proceed thirtieth intern confer larg data base p12531256 august 31septemb 03 2004 toronto canada lak v lakshmanan carson kaisang leung raymond ng segment support map scalabl mine frequent itemset acm sigkdd explor newslett v2 n2 p2127 dec 2000 amol ghote gregori buehrer srinivasan parthasarathi daehyun kim anthoni nguyen yenkuang chen pradeep dubey cacheconsci frequent pattern mine modern emerg processor vldb journal intern journal larg data base v16 n1 p7796 januari 2007 fran coenen paul leng partit strategi distribut associ rule mine knowledg engin review v21 n1 p2547 march 2006 carson kaisang leung quamrul khan boyu hao distribut mine constrain pattern wireless sensor data proceed 2006 ieeewicacm intern confer web intellig intellig agent technolog p248251 decemb 1822 2006 masahisa tamura masaru kitsuregawa dynam load balanc parallel associ rule mine heterogen pc cluster system proceed 25th intern confer larg data base p162173 septemb 0710 1999 david w cheung yongqiao xiao effect data distribut parallel mine associ data mine knowledg discoveri v3 n3 p291314 septemb 1999 euihong han georg karypi vipin kumar scalabl parallel data mine associ rule acm sigmod record v26 n2 p277288 june 1997 riedel garth gibson christo faloutso activ storag largescal data mine multimedia proceed 24rd intern confer larg data base p6273 august 2427 1998 flip korn alexandro labrinidi yanni kotidi christo faloutso ratio rule new paradigm fast quantifi data mine proceed 24rd intern confer larg data base p582593 august 2427 1998 ling feng jeffrey xu yu hongjun lu jiawei han templat model multidimension intertransact associ rule vldb journal intern journal larg data base v11 n2 p153175 octob 2002 h ravi sankar naidu innov algorithm mine multilevel associ rule proceed 25th confer proceed 25th iast intern multiconfer artifici intellig applic p307310 februari 1214 2007 innsbruck austria john holt soon chung parallel mine associ rule text databas journal supercomput v39 n3 p273299 march 2007 congnan luo anil l pereira soon chung distribut mine maxim frequent itemset data grid system journal supercomput v37 n1 p7190 juli 2006 r j kuo lin c w shih mine associ rule integr cluster analysi ant coloni system health insur databas taiwan expert system applic intern journal v33 n3 p794808 octob 2007 distribut higher order associ rule mine use inform extract textual data acm sigkdd explor newslett v7 n1 p2635 june 2005 moham j zaki scalabl algorithm associ mine ieee transact knowledg data engin v12 n3 p372390 may 2000 tahsin kurc mustafa uysal hyeonsang eom jeff hollingsworth joel saltz alan sussman effici perform predict largescal dataintens applic intern journal high perform comput applic v14 n3 p216227 august 2000 david w cheung kan hu shaowei xia adapt algorithm mine associ rule sharedmemori parallel machin distribut parallel databas v9 n2 p99132 march 2001 moham jave zaki srinivasan parthasarathi wei li local algorithm parallel associ mine proceed ninth annual acm symposium parallel algorithm architectur p321330 june 2325 1997 newport rhode island unit state yenliang chen shihsheng chen pingyu hsu mine hybrid sequenti pattern sequenti rule inform system v27 n5 p345362 juli 2002 david w cheung kan hu shaowei xia asynchron parallel algorithm mine associ rule sharedmemori multiprocessor proceed tenth annual acm symposium parallel algorithm architectur p279288 june 28juli 02 1998 puerto vallarta mexico jian tang use increment prune increas effici dynam itemset count mine associ rule proceed seventh intern confer inform knowledg manag p273280 novemb 0207 1998 bethesda maryland unit state sung zhao li chew l tan peter ng forecast associ rule use exist data set ieee transact knowledg data engin v15 n6 p14481459 novemb sunita sarawagi shibi thoma rakesh agraw integr associ rule mine relat databas system altern implic acm sigmod record v27 n2 p343354 june 1998 qing li ling feng allan wong intratransact gener intertransact landscap multidimension context associ rule mine inform sciencesinformat comput scienc intern journal v172 n34 p361395 9 june 2005 jianchao han nick cercon xiaohua hu interact visual system mine associ rule data mine rough set granular comput physicaverlag gmbh heidelberg germani 2002 antonin rozsyp miroslav kubat associ mine timevari domain intellig data analysi v9 n3 p273288 may 2005 ferenc kovc sndor juhsz perform evalu distribut associ rule mine algorithm proceed 4th wsea intern confer softwar engin parallel distribut system p16 februari 1315 2005 salzburg austria xindong wu shichao zhang synthes highfrequ rule differ data sourc ieee transact knowledg data engin v15 n2 p353367 februari sunita sarawagi shibi thoma rakesh agraw integr associ rule mine relat databas system altern implic data mine knowledg discoveri v4 n23 p89125 juli 2000 lin z kedem effici algorithm discov maximum frequent set ieee transact knowledg data engin v14 n3 p553566 may 2002 edward r omiecinski altern interest measur mine associ databas ieee transact knowledg data engin v15 n1 p5769 januari ron kohavi llew mason rajesh parekh zijian zheng lesson challeng mine retail ecommerc data machin learn v57 n12 p83113 octobernovemb 2004 ruom jin gagan agraw methodolog detail perform model reduct comput smp machin perform evalu v60 n14 p73105 may 2005 kubat search highsupport itemset itemset tree intellig data analysi v10 n2 p105120 march 2006 caiyan jia xiep gao multisc sampl adapt sampl method discov approxim associ rule journal comput scienc technolog v20 n3 p309318 may 2005 lak v lakshmanan carson kaisang leung raymond ng effici dynam mine constrain frequent set acm transact databas system tod v28 n4 p337389 decemb miroslav kubat alaaeldin hafez vijay v raghavan jayakrishna r lekkala wei kian chen itemset tree target associ queri ieee transact knowledg data engin v15 n6 p15221534 novemb euihong sam han georg karypi vipin kumar scalabl parallel data mine associ rule ieee transact knowledg data engin v12 n3 p337352 may 2000 mara c fernndezbaizn ernestina menasalva ruiz juan fransisco martnez sarra reduct discrimin rule base frequent item set calcul new learn paradigm soft comput physicaverlag gmbh heidelberg germani 2002 maniatti moham j zaki system support scalabl data mine acm sigkdd explor newslett v2 n2 p5665 dec 2000 peiyi tang li ning ningn wu domain data partit parallel mine frequent close itemset proceed 43rd annual southeast region confer march 1820 2005 kennesaw georgia moham j zaki parallel distribut associ mine survey ieee concurr v7 n4 p1425 octob 1999 dejiang jin sotirio g ziavra superprogram approach mine associ rule parallel pc cluster ieee transact parallel distribut system v15 n9 p783794 septemb 2004 jihy kim sihui zhao steffen heber find associ rule cisregulatori element involv altern splice proceed 45th annual southeast region confer march 2324 2007 winstonsalem north carolina jack dongarra ian foster geoffrey fox william gropp ken kennedi linda torczon andi white refer sourcebook parallel comput morgan kaufmann publish inc san francisco ca p deepa shenoy k g srinivasa k r venugop lalit patnaik dynam associ rule mine use genet algorithm intellig data analysi v9 n5 p439453 septemb 2005 claudio silvestri salvator orlando distribut approxim mine frequent pattern proceed 2005 acm symposium appli comput march 1317 2005 santa fe new mexico massimo coppola marco vanneschi highperform data mine skeletonbas structur parallel program parallel comput v28 n5 p793813 may 2002 mohammad elhajj osmar r zaan parallel bifold largescal parallel pattern mine constraint distribut parallel databas v20 n3 p225243 novemb 2006 vipin kumar moham zaki high perform data mine tutori pm3 tutori note sixth acm sigkdd intern confer knowledg discoveri data mine p309425 august 2023 2000 boston massachusett unit state xun yi yanchun zhang privacypreserv distribut associ rule mine via semitrust mixer data knowledg engin v63 n2 p550567 novemb 2007