optim parallel algorithm find proxim point applic abstractconsid set p point plane sort xcoordin point p p said proxim point exist point q xaxi p closest point q point p proxim point problem determin proxim point p main contribut propos optim parallel algorithm solv instanc size n proxim point problem begin develop worktim optim algorithm run olog log n time use n log log n commoncrcw processor go show algorithm implement run olog n time use n log n erew processor addit worktim optim erew algorithm turn also timeoptim second main contribut show proxim point problem find interest quit unexpect applic digit geometri imag process first applic present worktim optim parallel algorithm find convex hull set n point plane sort xcoordin algorithm run olog log n time use n log log n commoncrcw processor show algorithm implement run olog n time use n log n erew processor next show proxim point algorithm afford us worktim optim resp timeoptim parallel algorithm variou fundament digit geometri imag process problem specif show voronoi map euclidean distanc map maxim empti circl largest empti circl relat problem involv binari imag size nn solv olog log n time usingn2 log log ncommoncrcw processor olog n time use n2 log n erew processor b introduct consid parallel algorithm solv instanc size n problem p n time use p processor tradit main complex measur assess perform work support part nsf grant ccr9522093 onr grant n000149710526 grantinaid encourag young scientist 08780265 ministri educ scienc sport cultur japan dept electr comput engin nagoya institut technolog showaku nagoya 466 japan z depart comput scienc old dominion univers norfolk virginia 23529 usa olariucsoduedu algorithm amount w n work perform algorithm defin product n algorithm term workoptim w n 2 thetat n n run time fastest sequenti algorithm problem algorithm worktim optim 20 workoptim addit run time p n best possibl among workoptim algorithm model needless say one challeng parallel algorithm design produc workoptim inde whenev possibl worktim optim algorithm occasion even stronger complex metric use socal timeoptim specif algorithm timeoptim given model problem solv faster model even unbound number processor avail paper assum parallel random access machin pram short consist synchron processor access common memori refer interest reader 20 excel discuss pram model let p set point plane sort xcoordin point p proxim point p exist point xaxi closer p point p proxim point problem ask determin proxim point p clearli proxim point problem solv use algorithm find voronoi diagram howev argu 16 comput voronoi diagram log n time even n point sort xcoordin thu naiv approach yield optim solut proxim point problem recent breu et al 6 propos lineartim algorithm proxim point problem spite optim algorithm breu et al 6 reli crucial way stack oper notori hard parallel first main contribut propos parallel algorithm solv instanc size n proxim point problem specif first exhibit algorithm run olog log n time use n log log n commoncrcw processor go show algorithm implement run olog n time use n log n erew processor commoncrcw algorithm worktim optim erew algorithm turn also timeoptim establish worktim optim commoncrcw algorithm reduct minimum find problem timeoptim erew algorithm follow reduct problem second main contribut show proxim point problem interest quit unexpect applic digit geometri imag process begin present worktim optim parallel algorithm comput convex hull set n point plane sort xcoordin algorithm run olog log n time use n log log n common crcw processor olog n time use n log n erew processor show algorithm worktim optim crcw model addit timeoptim erew numer parallel algorithm propos comput convex hull sort point plane 4 7 12 13 21 recent chen 7 present olog ntime algorithm use n log n processor chen et al 12 present workoptim algorithm run olog ntime algorithm use n log n erew processor olog log ntime algorithm use n log log n commoncrcw processor quit recent berkman et al 3 present olog log ntime algorithm use n log log n commoncrcw processor algorithm featur perform 3 7 12 howev algorithm much simpler intuit best knowledg worktim optim crcw version timeoptim erew version algorithm solv yet given binari imag voronoi map assign pixel imag posit nearest black pixel euclidean distanc map assign pixel euclidean distanc nearest black pixel empti circl imag circl whose interior contain white pixel maxim empti circl empti circl contain empti circl largest empti circl empti circl largest radiu refer reader figur 1 illustr largest squar diamond ngon etc defin similarli comput known numer applic rang cluster shape analysi 2 17 handoff manag cellular system 26 imag compress decomposit reconstruct 5 23 27 28 31 applic propos algorithm comput voronoi map euclidean distanc map maxim empti circl largest empti circl binari imag size n theta n begin present worktim optim algorithm comput voronoi map euclidean distanc map binari imag size n theta n olog log n time use n 2 log log n commoncrcw processor olog n time use n 2 log n erew processor also show distanc map variou metric includ well known l k metric k 1 also comput manner go show maxim empti circl largest empti circl n theta n binari imag found olog log n time use n 2 log log n commoncrcw processor olog n time use n 2 log n erew processor turn minim chang algorithm applic variou kind empti figur includ squar diamond ngon etc recent chen et al 8 11 breu et al 6 present 2 time sequenti algorithm comput euclidean distanc map roughli time hirata 19 present simpler sequenti algorithm comput distanc map variou distanc metric includ euclidean 4neighbor 8neighbor chamfer octagon number parallel algorithm comput euclidean distanc map develop variou parallel model 191014 particular follow result report recent literatur lee et al 22 figur 1 illustr euclidean distanc map largest empti circl present olog 2 ntime algorithm use n 2 erew processor pavel akl 24 present algorithm run olog n time use n 2 erew processor clearli two algorithm workoptim chen 8 present workoptim n 2 time algorithm use p p log p n erew processor yield log ntime algorithm use n log n erew processor fujiwara et al 18 present workoptim algorithm run olog n time use n 2 log n erew processor log n log log n time use n 2 log log n log n commoncrcw processor although fujiwara et al 18 claim algorithm applic variou distanc map closer analysi reveal appli distanc metric main problem seem algorithm use geometr transform depend crucial way properti euclidean distanc therefor seem gener see euclidean distanc map algorithm three major advantag fujiwara algorithm first perform algorithm crcw superior second algorithm appli larg array distanc final algorithm much simpler intuit remaind paper organ follow section 2 introduc proxim point problem euclidean distanc metric discuss number technic crucial ingredi subsequ algorithm section 3 present parallel algorithm commoncrcw erew section 4 prove algorithm worktim respect timeoptim section 5 present worktim optim parallel algorithm comput convex hull sort point plane section 6 use proxim point algorithm comput voronoi map euclidean distanc map maxim empti circl largest empti circl binari imag section 7 offer conclud remark open problem final appendix discuss distanc metric algorithm present section 3 appli 2 proxim point problem first look section introduc proxim point problem along number geometr result lay foundat subsequ algorithm throughout assum point p repres cartesian coordin xp yp usual denot euclidean distanc planar point p q dp consid collect n point sort xcoordin assum without loss gener point p distinct xcoordin lie xaxi reader difficulti confirm assumpt made conveni impact complex algorithm recal everi point p p locu point plane closer point p refer voronoi polygon associ p denot v collect voronoi polygon point p partit plane voronoi diagram p see 25 p 204 let 1 n locu point q xaxi dq word q 2 q belong intersect xaxi v illustr figur 2 turn impli must interv xaxi interv may empti point p p term proxim point whenev interv nonempti thu voronoi diagram p partit xaxi proxim interv sinc point sort xcoordin correspond proxim interv order left right point q xaxi said boundari point p p j q equidist p p j dp clear p boundari point proxim point p p j q intersect close interv j summar previou discuss state follow result proposit 21 follow statement satisfi ffl interv xaxi ffl interv 1 lie xaxi order nonempti j lie left 1 2 4 6 7 figur 2 illustr proxim interv 1 2 3 4 0 figur 3 illustr addit p g ffl nonempti proxim interv j adjac boundari point refer figur 2 among seven point five point proxim point other note leftmost point p 1 rightmost point p n alway proxim point given three point say domin p p k whenev fail proxim point set consist three point clearli p j domin p p k boundari p p j right p j p k sinc boundari two point comput o1 time task decid everi tripl p whether p j domin p p k take o1 time use singl processor consid collect point plane sort xcoordin point p right p xp 1 xp interest updat proxim interv p reflect addit p p illustr figur 3 assum without loss gener point p proxim point let n correspond proxim interv let 0 p updat proxim interv p fpg let p point 0 0 adjac iii proposit 21 boundari point p p separ 0 0 consequ ii impli proxim interv 0 n must empti furthermor addit p p affect proxim interv j 1 word 1 0 empti point p domin p p thu everi point n domin otherwis boundari would left p j p would impli nonempti interv two boundari correspond 0 j contradict summar follow result lemma 22 exist uniqu point p p ffl proxim point p fpg ffl point p j domin 0 ffl domin interv 0 j empti 0 consecut xaxi separ boundari point p collect proxim point sort xcoordin let p point left p xp xp 1 refer take note follow companion result lemma 22 proof ident thu omit lemma 23 exist uniqu point p p ffl proxim point p fpg ffl domin p p j1 moreov 0 ffl point p j domin p p j1 interv 0 j empti p 0 consecut xaxi separ boundari point p uniqu point p whose exist guarante lemma 22 term contact point p p second statement lemma 22 suggest task determin uniqu contact point p point p right left p reduc essenti binari search suppos set two subset g interest updat proxim interv process merg pl pr purpos let 2n proxim interv pl pr respect sume without loss gener proxim interv nonempti let 0 proxim interv posit state prove next result turn key ingredi algorithm lemma 24 exist uniqu pair proxim point pr ffl proxim point pl pr empti 0 ffl proxim interv 0 0 consecut separ boundari point proof let smallest subscript p 2 pl contact point pl point pr similarli let j largest subscript point pr contact point pr point pl clearli point pl left p proxim point p likewis point pr left p j proxim point p final lemma 22 everi point pl left p must proxim point p similarli lemma 23 everi point pr right p must proxim point p proof lemma complet point p p j whose exist guarante theorem 24 term contact point pl pr refer reader figur 4 illustr contact point pl pr p 4 p 8 next discuss geometr properti enabl comput contact point p p j pl pr point p k pl let q k denot contact point p k pr specifi lemma 23 follow result lemma 25 point p k domin p kgamma1 q k 2 k domin otherwis 1 2 3 4 5 6 7 8 9 10 0 9 0 figur 4 illustr contact point two set point proof domin p kgamma1 q k 0 k must empti thu lemma 24 guarante p k 2 k domin p kgamma1 q k suppos p k domin p kgamma1 q k boundari point p k q k right p kgamma1 p k thu nonempti interv two boundari correspond 0 k contradict therefor p k n domin p kgamma1 q k complet proof lemma 25 suggest simpl binari searchlik approach find contact point p two set pl pr fact use similar idea breu et al 6 propos sequenti algorithm comput proxim point npoint planar set time algorithm 6 use stack store proxim point found consequ seem hard parallel 3 parallel algorithm proxim point problem begin discuss parallel algorithm solv proxim point problem commoncrcw algorithm convert run erew reli part solut wellknown leftmoston problem given sequenc b 1 determin smallest 1 n b lemma 31 20 instanc size n leftmoston problem solv o1 time use n commoncrcw processor consid set point xp 1 captur neighbor proxim point point use three indic c l r defin follow nonproxim point proxim point figur 5 illustr indic l c r point p 1 proxim pointg 2 l proxim pointg 3 r proxim pointg refer reader figur 5 illustr note must l proxim point p j l c next interest find contact point set new point p xp n assum everi 1 n c l r avail n processor dispos algorithm essenti perform mari search use lemma 22 algorithm findcontactpointp p extract sampl sp size consist point p c p everi k k 0 check whether point p c k n domin p l k n p whether domin p c k n p p c k n domin p r k n domin desir contact point point p r k n domin p c k n p p c k1 n domin p l k1 n p step 3 execut recurs algorithm set point p g find contact point 1 set p 0 contain l k1 n point henc depth recurs log n log notic algorithm findcontactpoint perform concurr read write thu follow result lemma 32 given set n point plane sort xcoordin point p xp n task find contact point p p perform log n log use erew processor next consid two set point plane xp 1 assum everi indic c l r given processor avail us follow algorithm find contact point pl pr mari search use lemma 25 algorithm findcontactpointsbetweensetspl pr sampl point spl pl use algorithm findcontactpoint p processor avail determin sampl point 1 correspond contact point q c k n pr step 2 k 0 k check whether point p c k n domin p l k n q c k n whether point p r k n domin p c k n q c k n p c k n domin yet p r k n output q c k n desir contact point step 3 find k point p r k n domin p c k n q c k n domin p l k1 n q c k1 n step 4 execut recurs algorithm findcontactpointsbetweenset set p 0 pr return desir contact point hard see algorithm findcontactpointsbetweenset involv concurr read sever processor may access point concurr involv concurr oper lemma 32 step 1 take log n log time crew model step 2 3 run clearli o1 time sinc p 0 l contain n depth recurs log n log thu altogeth algorithm findcontactpointsbetweenset run log 2 n use crew processor lemma 33 given set point plane xp 1 task find contact point pl pr perform log 2 n use crew processor next interest design algorithm comput proxim point set p n point plane sort xcoordin olog log n time commoncrcw assum n processor avail us begin determin everi indic c l r inform avail remain done retain point p c detail follow algorithm findproximatepointsp partit set p n 13 subset everi k 0 k g everi point p p k 0 k n 13 gamma 1 determin indic c l r local p k comput contact point pair set p use n 13 processor avail let q ij 2 p denot contact point p p j step 3 everi p find rightmost contact point p rc among point q ij find leftmost contact point p lc point q ij j clearli xp rc ig step 4 set p proxim point lie rc lc inclus proxim point p updat c clear step 2 perform log n 23 log run o1 time use lemma 31 moment reader may wonder updat indic perform effici fact turn updat done o1 time sinc task updat l r essenti updat c focu c p point p j rc valu c j chang point p j lc j valu c j must chang lc point p j valu c j chang lc proxim point howev p contain proxim point find nearest subset contain proxim point first check whether p proxim point use n 23 processor thu total processor use task next use lemma 31 determin k contain proxim pointg p sinc p n 13 group task done o1 time n 13 processor total n 13 delta n processor use thu step 4 done o1 time use n processor let tcrcw n run time algorithm find recurr describ worst case run time algorithm findproximatepoint note step 1 execut recurs algorithm n 23 point step 2 3 4 run o1 time thu confirm tcrcw n 2 olog log n thu lemma 34 instanc size n proxim point problem solv olog log n time use n commoncrcw processor next show number processor reduc factor log log n without increas run time idea follow begin partit set p n log log n subset log log n size log log n next use algorithm sequentialproximatepoint find proxim point within subset olog log n sequenti time process remov p point proxim point everi 1 n log log n let proxim point set p moment execut algorithm findproximatepoint p 1 log log n sinc n processor requir order updat indic c l r o1 proceed slightli differ idea follow execut algorithm current proxim point ceas proxim point maintain inform effici use rang log log n log log n p fp il current proxim point execut algorithm p may contain proxim point find neighbor proxim point use pointer l 0 log log n log log n set p j contain proxim pointg set p j contain proxim pointg use strategi find contact point point p log n log use processor discuss lemma 32 thu contact point two subset found manner lemma 33 final algorithm lemma 31 updat step 4 o1 time use n log log n processor summar follow result theorem 35 instanc size n proxim point problem solv olog log n time use n log log n commoncrcw processor close section point algorithm findproximatepoint implement effici erew purpos reli part follow well known result 20 lemma 36 singl step execut mprocessor crcw simul mprocessor erew olog time lemma 36 step 2 3 4 algorithm perform olog n time use processor crcw perform step o1 time use n processor let terew n worstcas run time erew recurr describ confirm n 2 olog n consequ lemma 37 instanc size n proxim point problem solv olog n time use n erew processor use essenti idea commoncrcw reduc number processor factor log n without increas comput time specif case erew n point partit n log n subset size log n thu theorem 38 instanc size n proxim point problem solv olog n time use n log n erew processor 4 lower bound main goal section show run time commoncrcw algorithm proxim point problem develop section 3 improv retain work optim effect prove commoncrcw algorithm worktim optim show erew algorithm timeoptim workoptim algorithm obviou order solv proxim point problem everi point must access least n work requir algorithm solv problem lower bound argument reli part follow fundament result valiant 30 lemma 41 task find minimum maximum n real number log n time crcw provid n log o1 n processor avail show lower bound lemma 41 hold even item nonneg lemma 42 task find minimum maximum n nonneg nonposit real number requir log n time crcw provid n log o1 n processor avail proof assum minimum maximum n nonneg number comput olog log n time use n log o1 n crcw processor assumpt find minimum n real number olog log n time follow first o1 time check whether neg number input minimum input item comput olog log n time neg number exist replac everi nonposit number 0 find maximum absolut valu result sequenc olog log n time maximum thu comput correspond minimum origin input thu minimum n real number comput olog log n time contradict lemma 41 reli follow classic result cook et al 15 lemma 43 task find minimum maximum n real number crew therefor also erew even infinit mani processor avail shall reduc task find minimum collect n nonneg 1 proxim point problem plan show instanc size n problem find minimum collect nonneg number convert o1 time instanc size 2n proxim point problem involv sort point plane purpos let set arbitrari nonneg real number input minimum problem construct set point plane set everi 1 notic construct guarante point p sort xcoordin everi 1 n distanc point p origin exactli intuit construct place 2n point circl center origin precis everi 1 n point p p ni place circl c radiu import note construct carri o1 time use n erew processor subsequ argument find conveni reli next technic result lemma 44 p p proxim point minimum proof let minimum refer figur 6 clearli c circl smallest radiu contain p p point lie outsid c henc p p closest point p origin thu boundari lie left origin true p j would closer origin p follow simpl fact prove essenti way figur illustr p lemma 44 1 boundari point p j p lie left origin 1 right 2 boundari point p j p lie left origin 1 right point n boundari p j p lie left p j p ni p j proxim point thu j 6 either p j p jn fail proxim point point p boundari lie left origin n lie right origin origin thu p proxim point fact p proxim point follow mirror argument complet proof lemma 44 guarante minimum determin o1 time proxim point p known lemma 41 impli follow import result theorem 45 algorithm solv instanc size n proxim point problem crcw must take omegagammak log n time worst case provid n log o1 n processor avail use exactli construct combin lemma 43 obtain follow lower bound crew theorem 46 algorithm solv instanc size n proxim point problem crew also erew must take omegagammak n time even infinit number processor avail notic erew algorithm proxim point problem present section 3 run olog n time use n log n processor featur work time perform crewpram theorem 46 correspond crew algorithm also timeoptim straightforward extend previou argument handl case l k metric specif case everi 1 n point allow us find minimum thu theorem 45 46 provid lower bound solv proxim point problem distanc metric l k 5 comput convex hull main goal section show proxim point algorithm develop section 3 yield worktim optim resp timeoptim algorithm comput convex hull set point plane sort xcoordin begin discuss detail algorithm second subsect establish worktim resp time optim 51 convex hull algorithm set n point plane xp 1 line segment partit convex hull p lower hull lie segment upper hull lie focu comput lower hull comput upper hull similar sequenc 1 item prefix maxima sequenc 1 maxfa 1 g later refer state follow result 20 29 lemma 51 task comput prefix maxima prefix minima nitem sequenc perform olog n time use n log n erew processor olog log n time use n log log n commoncrcw processor set n point plane sort xcoordin xp 1 defin set let n point set everi 1 n q import note point q figur 7 illustr proof lemma 52 also sort xcoordin follow surpris result captur relationship set p q defin lemma 52 everi j 1 j n p j extrem point lower hull p q j proxim point q proof extrem point p q j proxim point q thu lemma correct consid arbitrari j rang arbitrari subscript 1 boundari q q j q j q k respect refer figur 7 clearli thu similarli obtain easi see point q j domin q q k xb notic slope line segment 2xb 2xb k respect thu point p j lie segment p p k 2xb consequ point lie segment p p k point q j domin q q k word point p j extrem point lower hull p q j proxim point q lemma 52 suggest follow algorithm determin extrem point lower hull g algorithm findlowerhullp construct set set everi 1 n determin proxim point q report p extrem point lower hull p whenev q proxim point q preprocess step 0 amount translat set p vertic way everi affin transform affect convex hull p correct simpl algorithm follow directli lemma 52 argu run time note lemma 51 step 0 take olog log n time optim work commoncrcw olog n time optim work erew step 1 run o1 time use optim work either commoncrcw erew theorem 35 38 step 2 take olog log n time optim work commoncrcw olog n time optim work erew thu prove follow result theorem 53 task comput convex hull set n point sort xcoordin perform olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor 52 optim convex hull algorithm main goal subsect show convex hull algorithm describ previou subsect worktim optim commoncrcw addit timeoptim crew erew clearli everi point must read least solv proxim point problem thu ontim requir solv problem convex hull algorithm commoncrcw workoptim next show given set n nonneg integ maximum determin use algorithm comput convex hull set sort point plane purpos exhibit o1tim reduct maximum problem convex hull problem proof techniqu similar one employ proxim point problem given construct set point plane set everi set point plane sort xcoordin follow result relat set p lemma 54 item maximum p p point upper hull p proof let maximum construct p p point upper hull p none point p belong upper hull p thu exist subscript j j 6 p j p ni belong upper hull p complet proof consequ find maximum need find index p p ni point upper hull therefor problem find upper hull 2n sort point plane least hard problem find maximum n nonneg number thu follow import result theorem 55 task find convex hull n point log n time crcw provid n log o1 n processor avail similarli follow companion result theorem 56 task find convex hull n point n time crew even infinit mani processor avail theorem 55 56 convex hull algorithm develop previou section worktim optim addit erew algorithm worktim timeoptim 6 applic imag process binari imag size n theta n maintain array b ij 1 n customari refer pixel j black b row imag number bottom start 1 likewis column number left right column 1 leftmost notat pixel b 11 southwest corner imag voronoi map associ everi pixel closest black pixel euclidean metric formal voronoi map function everi j euclidean distanc pixel euclidean distanc map imag associ everi pixel euclidean distanc closest black pixel formal euclidean distanc map function r everi j 1 subsequ argument find conveni reli solut neareston problem given sequenc 0s 1s determin closest 1 everi item direct corollari lemma 51 lemma 61 instanc size n neareston problem solv olog log n time use n log log n commoncrcw processor olog n time use n log n erew processor assum binari imag size n theta n discuss avail n 2 processor log n commoncrcw n erew outlin basic idea algorithm comput voronoi map euclidean distanc map imag begin determin everi pixel row j 1 j n nearest black pixel column subimag precis everi pixel j associ valu next construct instanc proxim point problem everi row j 1 j n imag involv set p j point plane defin p solv parallel instanc proxim point problem determin everi proxim point p ij p j correspond proxim interv j fix determin everi pixel perceiv point xaxi ident proxim interv belong allow pixel j determin ident nearest pixel task execut row parallel determin everi pixel row j nearest black pixel detail spell follow algorithm algorithm voronoiandeuclideandistancemapi step 1 pixel j comput distanc ng nearest black pixel column j subimag step 2 everi j 1 ng comput proxim point ep j p j step 3 everi point p ep j determin proxim interv p j step 4 everi 1 n determin proxim interv p j point correspond pixel j belong correct algorithm easi see turn complex step 1 perform ot n time use processor avail use lemma 61 theorem 35 38 guarante step 2 take ot use n processor lemma 61 step 3 4 perform complex thu follow import result theorem 62 task comput voronoi map euclidean distanc map binari imag size n theta n perform olog log n time use n 2 log log n commoncrcw processor olog n time use n 2 log n erew processor recal empti circl imag circl fill white pixel task comput largest empti circl imag recur theme pattern recognit robot digit geometri 17 empti circl said maxim contain empti circl empti circl said maximum radiu larg possibl clear maximum empti circl also maxim convers turn task determin maxim resp maximum empti circl input imag algorithm allmaximalemptycirclesi comput euclidean distanc map step 2 pixel j 1 comput smallest distanc u jg border imag comput r largest radiu everi empti circl center pixel j step 3 pixel check whether exist neighbor pixel 1 circl radiu r ij origin j includ circl radiu r 0 j 0 origin circl exist label circl radiu r ij center maxim empti circl g everi pixel r empti circl largest empti circl clearli step simpl algorithm perform olog log n time use n 2 log log n commoncrcw processor olog n time use n 2 log n erew processor thu corollari 63 task label maxim empti circl report maximum empti circl binari imag size n theta n perform olog log n time use n 2 log log n commoncrcw olog n time use erew n 2 log n processor conclus first main contribut propos optim parallel algorithm solv instanc size n proxim point problem first algorithm run olog log n time use n log log n commoncrcw processor algorithm fact implement run olog n time use n log n erew processor commoncrcw algorithm worktim optim erew algorithm addit timeoptim also timeoptim second main contribut show proxim point problem find interest quit unexpect applic digit geometri imag process first applic present worktim optim parallel algorithm find convex hull set n point plane sort xcoordin algorithm complex proxim point algorithm next show proxim point algorithm afford us worktim optim resp timeoptim parallel algorithm variou fundament digit geometri imag process problem specif show voronoi map euclidean distanc map maxim empti circl largest empti circl relat problem prove worktim respect time optim proxim point convex hull algorithm howev imag process problem discuss known whether algorithm develop optim conjectur problemsomegagammaobl log n time lower bound crcw provid algorithm worktim optim crew erew logicalor problem reduc imag process problem quit easili thereforeomegagammah n time lower bound crew erew r euclidean distanc transform polymorph processor array comput vision fast parallel algorithm find convex hull sort point set centr maxim disc 5711 distanc transform linear time euclidean distanc transform algorithm effici geometr algorithm erew pram optim algorithm complet euclidean distanc transform design systol architectur complet euclidean distanc tran form effici algorithm complet euclidean distanc transform meshconnect simd fast algorithm euclidean distanc map 2d binari imag optim parallel algorithm comput convex hull parallel method prefix convex hull problem simd hypercub algorithm complet euclidean distanc transform upper lower time bound parallel random access machin without simultan write comput voronoi diagram sort point set pattern classif scene analysi optim parallel algorithm euclidean distanc map unifi lineartim algorithm comput distanc map introduct parallel algorithm effici parallel geometr algorithm mesh tree parallel comput exact euclidean distanc transform modifi distanc transform raster scan valu propag effici algorithm euclidean distanc transform comput geometri introduct skeleton algorithm maxima track euclidean distanc transform find maximum parallel comparison problem gener skeleton discret euclidean distanc map tr ctr ling chen yi pan xiaohua xu scalabl effici parallel algorithm euclidean distanc transform larpb model ieee transact parallel distribut system v15 n11 p975982 novemb 2004 amitava datta subbiah soundaralakshmi fast scalabl algorithm euclidean distanc transform linear array reconfigur pipelin bu system journal parallel distribut comput v64 n3 p360369 march 2004