superstabil mutual exclus superstabil protocol protocol selfstabil mean recov arbitrarili sever transient fault ii recov local transient fault satisfi passag predic recoveri paper investig possibl superstabil protocol mutual exclus ring processor local fault consist transient fault singl processor passag predic specifi one token ring singl except spuriou token coloc transient fault first result paper imposs theorem class superstabil mutual exclus protocol two unidirect protocol present show condit imposs independ relax superstabil possibl use either addit time commun regist bidirect protocol subsequ demonstr superstabil ioi1 time possibl three superstabil protocol optim respect number commun regist use b introduct notion superstabil introduc dh95 refin self stabil superstabil continu trend recent research combin stabil form fault handl ag93 gp93 bb95 main attract stabil possibl softwar initi without requir extern signal use presenc transient fault distribut system asynchron reconfigur perhap normal cours phase comput stabil protocol typic engin worst case transient fault design mask like case fault reconfigur faulttoler behavior classifi either mask nonmask ag93 briefli put protocol mask faulttoler user preliminari report research appear proceed intern confer parallel distribut process techniqu applic pdpta95 pp 3140 1995 observ illegitim protocol behavior recoveri fault errorcorrect code exampl mask fault within limit toler stabil protocol nonmask mean observ protocol wit corrupt output variabl incorrect behavior point recoveri complet superstabil view partial mask techniqu like case transient fault reconfigur retain stabil deal arbitrarili sever transient fault focu stabil converg stabl legitim behavior arbitrari initi state choic arbitrari initi state model worst case possibl transient failur system program counter intern regist channel could set unpredict inconsist valu transient fault transient fault destroy code hardwar fact enabl system restor state converg period proper behavior system behavior converg typic concern sinc gener possibl make guarante beyond achiev converg event sever transient fault superstabil offer follow refin addit stabil protocol may abl guarante certain safeti properti period converg follow transient fault provid transient fault limit refin attract system unlik encount sever transient fault wherea certain limit transient fault occur rel often applic stabil propos dim93 domain dynam system initi state come result onlin system reconfigur dynam system protocol network layer may requir deal dynam topolog processor link ad remov concurr protocol oper stabil protocol deal initi state also appli situat dynam reconfigur superstabil investig dh95 assumpt dynam topolog chang event gener interrupt affect processor contribut research show principl superstabil also applic situat network reconfigur interrupt fundament familiar problem mutual exclus investig idea make safeti guarante case limit transient fault system model orient ring processor commun use atom link regist start point version dijkstra stabil kstate protocol d74 adapt processorregist model class local transient fault consist processorloc fault mean transient fault chang processor program counter intern variabl assum processorloc fault gener interrupt kind notif desir passag predic mutual exclus properti maintain mean two simultan token holder system follow processorloc fault legitim state passag predic may feasibl instanc equat critic section execut tokenhold processorloc fault could alway set processor program counter processor next action occur within critic section make imposs prevent two processor simultan execut critic section follow processorloc fault imposs prevent two simultan token holder fault least system contain effect fault spuriou token inject fault propag processor note techniqu use contain processorloc fault might also use context hierarch layer system design desir confin effect fault within layer modul boundari three protocol describ paper success contain processor local fault thu critic section execut could place higher layer token circul protocol mask processorloc fault elabor layer paper instead concentr follow feasibl passag predic time one token holder singl except temporari spuriou token locat processorloc fault observ preced paragraph indic faultmask least level explor research incomplet follow processorloc fault protocol illegitim state howev illegitim state observ circumst satisfi passag predic fault entir mask blow soften perhap notion faultcontain crd95 n90 closer spirit superstabil faultmask although techniqu exist work either faultmask faultcontain research may adapt purpos superstabil addit constraint stabil give present research new twist faultmask contain apparatu must abl surviv arbitrari transient fault well deal limit fault primarili intend organ paper comput model processor atom regist stabiliz ation superstabil perform measur paper defin section 2 section 3 problem mutual exclus ring introduc dijkstra stabil mutual exclus protocol present processorregist model processorloc fault introduc consid exampl motiv techniqu need superstabil section 3 also defin legitimaci passag predic ring processor section end proof imposs superstabil certain resourc time constraint section 4 describ two unidirect superstabil protocol neither protocol achiev optimum recoveri time processorloc fault section 5 present result indic optimum recoveri time like requir bidirect protocol section 6 show optim recoveri time processorloc fault possibl bidirect ring section 7 contain conclud remark system model system consist orient ring n processor number 0 n gamma 1 neighbor processor processor ident conduct modulo n processor model convent sequenti machin program counter intern variabl program statement refer variabl unsubscript name proof denot locat variabl subscript instanc variabl finit domain possibl valu processor commun read write regist regist finit domain possibl valu written one processor read one processor impli instanc processor write regist r ij processor j read processor allow read regist r ij literatur regist hv95 type regist term singleread singlewrit regist denot 1w1r processor permit read r ij well regist would type 1w2r keep ring topolog regist read j defin j gamma 1 ring unidirect j everi regist r ij local state processor specif valu program counter intern variabl global state specif local state processor valu regist state predic specif set global state processor step execut local transit chang intern variabl program counter regist read regist write processor step atom initi complet tempor overlap processor step step thu global state transit represent pair global state comput infinit sequenc global state everi consecut pair state sequenc processor step global state step enabl protocol notion infinit comput justifi case comput segment finit contigu subsequ comput comput fair contain infinit mani step processor argument protocol behavior paper assum fair comput processorloc fault processor atom event set variabl program counter arbitrari valu within domain processorloc fault chang valu regist processorloc fault processor step comput includ fault reason fault toler prove properti comput begin state gener fault legitim state protocol usual character predic respect desir properti let l weakest inclus set state close processor step start state l result state l converg everi comput start arbitrari state eventu contain state l everi state l satisfi given properti p call l set legitim state protocol equival l call legitimaci predic exist predic l protocol respect given p say protocol stabil respect p p understood context simpli call protocol stabil definit follow everi protocol stabil respect predic p j true mutual exclus p specifi two processor program counter critic section note reactiv protocol mutual exclus predic p inadequ describ desir properti need also specifi prove live properti hold comput eg everi process obtain token infinit mani time definit stabil extend includ desir live properti use result paper let oe legitim state let oe 0 obtain appli processorloc fault oe call oe 0 1faulti state protocol superstabil respect p q stabil respect p everi comput start 1faulti state satisfi predic q state predic q call passag predic protocol p q understood context simpli say protocol superstabil everi stabil protocol superstabil respect passag predic true superstabil interest passag predic satisfi use safeti properti protocol paper specifi program infinit iter sequenc statement includ read write regist statement segment comput call cycl processor contain step processor correspond complet iter program first statement program jump back first state ment note segment may start state oe program counter posit middl iter case step must complet partial iter complet entir iter segment cycl depend choic oe cycl could thu contain one onehalf iter cycl also observ one cycl processor could mani cycl processor j asynchron model processor regist use notion round measur concurr time progress event comput inform round unit time suffici processor complet cycl formal complet round comput segment includ least one cycl everi processor minim round complet round proper subseg complet round sequel use round denot minim round fair comput concaten round enabl us refer k th round comput stabil time protocol worstcas number round initi state comput legitim state reach superstabil time protocol worstcas number round initi 1faulti state comput legitim state reach stabil time measur effici protocol cope worst case transient fault superstabil time measur worstcas recoveri time singl processorloc fault legitim state follow two definit use describ bestcas time token circul ring minim round simpl concaten n segment contain step one processor round linear simpl concaten n contain step one processor first last segment step processor 3 stabil mutex consid problem mutual exclus unidirect ring model processor regist problem mutual exclus legitim behavior comput everi processor obtain access token critic section infinit mani time yet two processor simultan token access time call highlevel token behavior mutex properti encod safeti portion mutex predic p stabil mutex protocol stabil respect predic p specifi one processor access critic section legitim state two perspect evalu effici stabil superstabil protocol effici absenc fault normal behavior protocol effici recov fault use round measur worstcas time recoveri fault either stabil superstabil call comput segment complet token circul everi processor token state segment minim token circul complet token circul proper subseg comput segment complet token circul sequel use token circul denot minim token circul character effici protocol normal behavior investig best worst case token circul time best case describ term follow definit use imposs proof mutual exclus protocol ring processor call klatent k minimum valu everi legitim state oe exist token circul begin oe contain k linear round protocol optim respect latenc 1latent mean token circul ring one round legitim state effici tokenpass protocol one token pass two regist oper write r ii1 i1 read r ii1 complet transfer token somewhat less effici techniqu would pass token write two regist r ii1 ii1 follow read regist turn either techniqu use construct 1latent protocol definit 1latenc discrimin respect number regist use transfer token complic techniqu transfer token follow handshak mechan first write r ii1 read q ii1 write r ii1 final complet token transfer handshak mechan twophas interact 1 protocol use handshak mechan token circul 1latent turn nlatent protocol section 6 intuit 1latent protocol effici interact processor token pass minim implement regist base lowerlevel messag delay incur p write two regist r ii1 ii1 could roughli write one regist provid write occur parallel handshak mechan sequenti interact delay hidden 31 basic ring protocol dijkstra kstate stabil protocol unidirect ring adapt processor regist model number definit requir adjust roughli speak stateread model use d74 correspond unidirect case nregist ring processor one key differ processor read regist write wherea stateread model process read access variabl write instead associ mutual exclus privileg enabled action make r ii1 perform critic section s5 6 s6 perform critic section s8 figur 1 mutex protocol processor sens given execut demon differ represent necessari processor model similarli character legitimaci modifi suit new represent mutual exclus adapt kstate stabil protocol present figur 1 unidirect ring implicit use 1w1r regist regist n diagram figur 1 illustr processor read r igamma1i write r ii1 protocol processor two intern variabl n imag regist read c imag regist write processor zero play role except machin notat c denot c statement s4 sequel requir k larger total number variabl regist contain token valu protocol figur 1 requir 1 k 3n protocol subsequ protocol paper state oe program counter processor p locat critic section statement eg s3 s6 step p alon start state oe processor p execut critic section say p token holder state oe high level legitim behavior protocol simpl describ use mutex properti predic p formal specifi choos constraint k 3n conveni proof protocol correct smaller valu k larger valu k simplifi proof shown v94 notat s3 denot processor program counter set s3 ie processor execut critic section elsewher paper notat use quantif predic op quantifi list dummi indic rang delimit rang dummi rang may omit dummi rang understood term express nest quantif definit p specifi two processor may simultan execut critic section sequel protocol paper stabil respect version p henceforth leav p implicitli understood definit differ protocol specif statement number critic section defin legitimaci predic l detail affair simpl specif p exampl legitim state one would expect follow hold 1 word 1 say cvalu processor equal valu writeregist whenev program counter set s1 one would expect execut s8 s9 complet character legitim state term intern variabl valu regist valu program counter turn lengthi express spare reader detail leav l implicit concentr follow crucial compon l ring protocol stateread model neither program counter regist lc character legitim state lc predic state everi process either old valu x c variabl new valu x new valu present contigu segment start processor zero step protocol unidirect copi new valu replac old valu adjac result copi oper state satisfi lc old valu replac new valu initi valu lc satisfi choic existenti quantif lc definit lemma 1 mutex protocol figur 1 stabil stabil time proof proof consist show converg closur state satisfi lc verifi lc p consid arbitrari comput start arbitrari initi state number round comput start round zero complet round zero comput reach state 1 hold processor execut s8 s9 least round zero gener processor complet cycl r ii1 equal c observ permit us reason use c variabl round one higher prove detail closur lc converg lc sinc would repeat known argument see bound introduc predic note g ngamma1 impli lc protocol complet round zero processor synchron imag regist program counter g ngamma1 hold protocol stabil henceforth proof consid round one higher simpl show induct g k hold round k processor zero execut s4 round k therefor s4 execut hold consequ case c 0 uniqu equal processor c variabl g ngamma1 hold n gamma 1 addit round within mani round c 0 valu uniqu sinc n process s4 increment modulo k pigeonhol principl c 0 becom uniqu 3n execut s4 s4 introduc new c valu system k 3n impli token valu regist variabl combin observ g k see comput contain state satisfi lc round 4n base invari lc straightforward detail l concern program counter intern variabl follow p hold state follow converg structur lc also use prove processor perform critic section infinit often lemma 2 mutual exclus protocol figur 1 1latent protocol circul token n round proof consid legitim state oe either token holder last processor hold token complet cycl everi legitim state least one processor construct linear round first schedul step processor complet current cycl schedul processor 1s cycl complet round inclus cycl processor necessari schedul processor token holder linear round proof n round suffic token circul follow argument similar induct reason use lemma 1 32 processorloc fault consid event processorloc fault legitim state essenti two worstcas aspect fault fault set program counter processor s6 leav intern variabl unchang b fault set program counter s8 valu c arbitrari valu possibl first step comput follow fault write oper processor write r ii1 valu inject processorloc fault processorloc fault combin aspect b also possibl fault type b sens sever fault type one addit step processor protocol legitim state moreov state violat mutual exclus follow fault processor processor invalidli critic section fault type b possibl subsequ comput contain state three processor simultan critic section sketch scenario exampl ten processor ring show valu c variabl legitim state underscor valu indic processor token holder state consid processorloc fault set c variabl 5 suppos first subsequ step write c variabl output regist neighbor read obtain state two processor token holder subsequ step valu 5 propag state result processor inflict processorloc fault read neighbor rewrit regist lead state three processor token holder modif protocol address concern fault type b long activ critic section depend intern variabl program counter fault type imposs prevent strongest passag predic one construct must allow possibl two processor token holder howev one two processor processor inflict processorloc fault protocol satisfi mutual exclus within cycl inflict processor possibl construct protocol satisfi mutex passag predic provid effect type b fault manag remaind paper let qffi mutex passag predic defin parametr respect 1faulti global state ffi definit let cs 1 program counter critic section otherwis let cs 0 let prffi index processor inflict fault state ffi note stronger passag predic qffi desir would prefer processor prffi execut critic section one time recoveri period howev qffi satisfi comput segment prffi execut critic section numer time real token continu circul principl stronger passag predic could formal specifi use auxiliari variabl record fault comput histori prefer simpler specif qffi paper protocol subsequ section fact satisfi stronger passag predic attempt address type b fault consid follow replac statement s6 protocol s6a s6b perform critic section strengthen precondit execut critic section elimin scenario multipl token holder sketch howev follow situat still possibl processorloc fault subsequ step although shown improv protocol longer possibl three token holder exist processorloc fault legitim state mutex passag predic satisfi everi case effect processorloc fault contain singl processor follow theorem show resourc necessari order address concern theorem 1 1latent protocol mutual exclus use fewer 2n 1w1r regist superstabil respect mutex passag predic proof contradict n 3 suppos 1latent protocol exist 2n gamma 1 regist superstabil respect mutex passag predic order stabil processor read access least one regist write access least one regist otherwis could token circul regist type 1w1r processor p read access one regist r p consid legitim state oe processor q first statement cycl becom token holder cycl also suppos q 6 p q writeaccess r p choic oe q possibl n 3 protocol stabil mutual exclus protocol assumpt 1latenc exist linear round start oe everi processor token holder first cycl linear round consist step processor q ceas token holder second cycl round consist step either q 1 includ tokenhold processor prove contradict second cycl r 62 illegitim comput could construct r initi cycl r q token holder state argument structur linear round continu establish path token holder q p given linearround construct clear exist state fl oe fl ident respect ps state r p contain valu comput begin fl contain step p result p token holder therefor possibl follow processorloc fault occur state oe program counter writer r p set write r p oper first step 1faulti state write r p subsequ comput segment consist sole step p result p token holder exist processorloc fault subsequ comput violat mutex passag predic unidirect superstabil protocol condit imposs theorem 1 suggest two way one might hope construct superstabil protocol devis protocol klatent k 1 design protocol use least 2n regist possibl subject follow two subsect 41 nlatent protocol one way superstabil mutual exclus possibl increas latenc token rotat protocol present use n 1w1r regist size regist larger use protocol figur 1 regist map field k state field repres token dijkstra protocol stabil sens protocol figur 1 one token call major token control access critic section remain n token call minor token processor ring play except role way processor zero except dijkstra protocol one minor token main idea subsect protocol major token advanc one posit ring minor token circul around ring one linear round major token advanc one processor n linear round major token circul complet let regist r ij subdivid n 1 field denot r ij k processor three intern variabl w boolean two variabl c n regist imag variabl field r ij n cn nn repres major token field r ij k ck nk repres minor token except processor k present protocol processor 6 0 protocol processor zero present differ figur 2 statement s4 s12 s14 modif follow protocol figur 1 legitim state nlatent protocol satisfi three key properti 1 major minor token valu legitim natur extens lc definit introduc proof lemma 1 appropri field 2 exactli one processor p either hold token releas token wait minor token circul w p set fals hold token 3 processor q wait minor token circul field r ij q cq nq minor token valu lemma 3 protocol figur 2 stabil 2 stabil time nlatent token circul n 2 round s5 w perform critic section figur 2 nlatent mutex protocol 6 0 see appendix proof theorem 2 protocol figur 2 superstabil respect mutex passag predic superstabil time see appendix proof although superstabil guarante passag predic hold converg follow 1faulti state processorloc fault disrupt normal order processor becom major token holder instanc easi construct exampl number processor skip order tokenhold minor token stabil follow processorloc fault although protocol superstabil may entir faultmask processor p distanc processorloc fault suppos fault locat processor p fault converg legitim state complet processor p could lose turn execut critic section whether protocol faultmask processor depend user abil observ turn critic section lost comput disrupt fault specif observ power user need formal mask faulttoler close relat work ukmf97 idea superstabil protocol figur 2 improv present stateread model d74 stateread model regist program counter replac variabl processloc fault corrupt variabl process superstabil protocol ukmf97 1 n2latent major token advanc two process minor token circul n must even protocol space requir also reduc combin minor token singl minor token reduc token space lg n olg n also shown ukmf97 bn2clatent superstabil mutex protocol possibl unidirect ring stateread model 42 1latent protocol previou subsect protocol exploit increas latenc achiev superstabil approach suggest structur theorem 1 use 2n regist protocol present subsect add duplic regist q ij protocol figur 1 execut critic section depend valu two regist main idea processor 6 0 propag valu read two regist unless valu equal protocol specifi processor write valu two regist without read regist two write one way describ protocol say processor use wait strategi deal 1faulti state sinc wait input regist equal token valu figur 3 present protocol protocol let k valu satisfi k 5n sinc five token entiti per processor c n variabl plu two output regist idea wait employ processor certain initi global state would lead deadlock processor zero therefor use differ strategi deal 1faulti state code processor zero use function trval return pair natur number defin follow pair c assign trvali c nm valu c token valu processor zero valu counter valu zero legitim state 7n illegitim state valu 7n chosen simplifi proof converg first ifcas trval definit address normal situat token processor zero increment token case regist written processor n gamma 1 valid call 7n case correct valu c 0 provid case processorloc fault corrupt c 0 unfortun case initi state correct calcul c 0 repeatedli employ prevent stabil token mechan therefor counter ad protocol correct measur appli bound number time comput sinc counter also subject corrupt fault valu circul ring addit regist field legitim state state also satisfi l r defin follow processor p valu c variabl regist conform entri follow tabl r fffi fffi ffff ffff fffi fifi fifi fifi fiff fiff ffff fifi convent tabl fi row r regist show token field two valu repres r pgamma1p r pp1 respect tabl entri thu repres valu relationship processor instanc first entri show processor p 6 0 input regist equal valu ff c ps output regist equal fi final column p 6 0 head permiss configur case processor zero propag token valu either regist order wherea order fix processor look definit l r reader may appreci verif superstabiliza tion involv numer subcas sinc entri tabl subject fault consider proof somewhat tediou postpon paper appendix lemma 4 protocol figur 3 stabil 2 stabil time 1latent everi token circul n round see appendix proof conjunct lc l r lc predic token valu specifi proof lemma 1 lemma 5 comput start 1faulti state protocol figur 3 reach state satisfi l o1 round mutex passag predic hold everi state see appendix proof theorem 3 protocol figur 3 superstabil respect mutex passag predic 2 superstabil time r ii1 s5 s6 perform critic section s8 protocol 6 0 t4 t5 perform critic section t11 perform critic section t13 goto protocol figur 3 unidirect 2nregist protocol proof lemma 5 comput start 1faulti state establish invari hold state legitim see bound tight consid fault processor zero set 0 n superstabil protocol given subsect improv nlatent protocol two way first latenc improv ad regist second although superstabil time larger recoveri processorloc fault said take o1 time sinc l hold within o1 round follow fault howev even though l hold state legitim system readi mask anoth processorloc fault state legitim consid converg segment follow fault see initi part segment recov token variabl fault latter part segment kind garbag collect ad suffici robust state anoth processorloc fault toler 5 optimum latenc superstabil section describ certain limit superstabil mutex protocol 1latent result show 1latent protocol either requir techniqu beyond use previou section requir bidirect commun begin observ regard pass token superstabil protocol lemma 6 1latent protocol exist comput token circul unidirect proof contradict suppos 1latent protocol comput token circul unidirect everi suffix everi comput token pass processor sigma 1 order token pass contradict definit linear round lemma 6 cover case nondeterminist token circul exampl choic pass token processor could nondeterminist protocol 1latent must possibl legitim state token circul complet one linear round impli unidirect token movement remaind section consid 1latent protocol restrict attent comput token circul unidirect defin number token pass regist protocol minimum rang number regist write read pass token processor processor 1 protocol section 31 section 41 use one token pass regist number token pass regist protocol section 42 two superstabil mutual exclus protocol use fewer two token pass regist allow us concentr comput token pass unidirec tional lemma prove use argument similar present theorem 1 processorloc fault caus write token pass regist fool anoth processor execut critic section mutex passag predic falsifi lemma 7 impli 1latent protocol section 42 optim number regist use 1latent bidirect protocol circul token unidirect use least three regist sinc least two regist requir token pass remaind section present definit result particular type unidirect protocol given 1latent unidirect mutual exclus protocol certain number regist say k written processor read processor 1 predic exist describ legitimaci relat valu local state processor output regist processor local state processor 1 call global state detect corrupt infer local state processor content output regist processor suppos state oe detect corrupt 1 two possibl properti oe exist legitim state output regist processor equal valu state oe ii exist legitim state local state processor equal state oe ii hold oe say oe splice corrupt state sinc valu output regist legitim state 1 legitim two legitim differ state oe result splice togeth two legitim state splice corrupt state pose question design superstabil mutual exclus protocol splice corrupt state oe detect corrupt 1 processor 1 alter state p hold two possibl strategi processor 1 correct wait correct strategi consist processor read input regist detect p follow processor local state p longer hold wait strategi consist processor 1 enter protocol phase 1 continu execut cycl p hold output regist chang valu processor detect p processor state p detect wait strategi processor wait situat correct wait signal correct state fix problem stabil mutual exclus protocol regular processor j 1 whenev p j detect processor j use one strategi correct wait respons detect p j word protocol regular processor j sometim use correct strategi sometim use wait strategi depend valu local state j input regist note dijkstra protocol regular processor zero employ wait strategi effect ignor valu input regist unless appear legitim processor use correct strategi lemma 8 regular 1latent unidirect stabil mutual exclus protocol specifi least one processor use wait strategi proof contradict consid regular protocol processor use correct strategi construct illegitim state splice togeth number legitim state instanc take one segment ff processor ring size n legitim state ff token ff locat within ff anoth segment fi n gamma processor legitim state fi token fi locat within fi two segment ff fi disjoint construct new state fl splice two segment togeth possibl comput start fl follow scenario round token advanc one processor ring possibl 1latenc two processor execut correct strategi thu round two legitim segment size n gamma persist protocol fail converg assumpt processor use correct strategi therefor contradict stabil lemma 9 processor use wait strategi regular 1latent unidirect super stabil mutual exclus protocol protocol o1 superstabil time proof contradict construct 1faulti state oe 0 legitim state oe select processor j 1 employ wait strategi corrupt state j oe 0 splice corrupt state output regist j valu oe oe 0 sinc j wait strategi comput start oe 0 remain illegitim processor j write regist differ valu present state oe let us consid comput j complet mani cycl j input regist sinc variabl regist finit valu js output regist period comput exist valu js output regist repeat moreov valu possibl legitim state protocol 1 round ie constant number round sinc processor j initi detect illegitimaci signal written j 1 circul ring processor j within o1 round therefor construct comput processor j observ chang input regist 1 round time j input regist valu period argument thu protocol converg 1faulti state legitim state within o1 round contradict claim o1 superstabil time theorem 4 regular 1latent unidirect mutual exclus protocol superstabil o1 superstabil time proof result follow two previou lemma 6 bidirect protocol 2nregist protocol given section 42 2 superstabil time n regist protocol section 41 superstabil time section present protocol o1 superstabil time expens bidirect commun bidirect approach motiv theorem 4 basic idea protocol simpl adapt nregist superstabil protocol processor control minor token howev minor token circul processor gamma 1 ring therefor bidirect two 1w1r regist need processor diagram shown figur 4 illustr processor commun protocol regist two field one major token valu one minor token valu processor use c variabl major token maintain two local variabl minor token circul repres minor token v contain imag minor token valu addit local variabl n regist field imag legitim progress minor token activ processor assign execut subsequ execut read assign v processor execut processor read vfield r regist variabl final processor impli complet minor token circul addit variabl token manipul processor record two recent read valu major minor token processor gamma 1 record implement histori variabl array w v twoelement array local index variabl w toggl zero one whenev processor detect new valu pair processor gamma 1 precis processor observ minor token differ vw observ major token differ ww toggl w record major minor token valu read histori variabl strengthen condit execut critic section major token must valu two consecut record critic section execut processor correct assign s7 t7 correct assign 6 0 ident respect major token normal execut s12 correct assign t7 figur 4 standard major token assign t12 possibl repeat execut t7 converg complic proof stabil assum sinc seven major token variabl field per processor legitimaci protocol specifi three compon lc legitimaci major token l legitimaci minor token lw legitimaci histori variabl lw predic defin follow assert allow valu w v two situat end cycl processor statement s19 major token pass gamma 1 ffl c major token pass gamma 1 construct lw underli design s15s16 t15t16 correct histori variabl processor fault protocol figur 4 stabil 3 stabil time protocol nlatent token circul 3n round r ii1 xy s5 wwvw n s7 c n perform critic section els protocol 6 0 t3 n 6 ww 6 vw t7 c n t11 perform critic section t13 els t17 protocol figur 4 bidirect 2nregist protocol see appendix proof theorem 5 protocol figur 4 superstabil o1 stabil time see appendix proof protocol present paper demonstr stabil limit mask toler transient fault combin investig indic goal mask toler singl fault rapid token circul stabil may collid requir addit resourc protocol given use minimum number regist possibl optim sens nregist protocol optim superstabil protocol 2nregist protocol optim 1latent superstabil protocol bidirect protocol optim o1 superstabil time open question suggest three present protocol possibl protocol superstabil 1latent o1 superstabil time possibl optim stabil time well limit given result section 5 suggest form protocol might bidirect three regist per processor limit investig consid processorloc fault definit 1faulti state preclud consider transient fault corrupt regist although processorloc fault lead corrupt regist addit inform event regist corrupt transient fault set program counter write oper program counter set statement follow write faultinduc event use fact construct arrang protocol read verifi variabl follow write oper like techniqu use paper extend cover case regist fault well perhap expens addit resourc techniqu use superstabil paper basic method fault toler replic data entiti regist replic time implicit use minor token bidirect acknowledg differ approach problem transient fault use techniqu code theori encrypt reduc probabl transient fault violat passag predic paper y96 suggest publickey encrypt use encod token make unlik transient fault could falsifi mutex predic fool argument use theorem 1 practic refut although present studi limit problem mutual exclus processor regist ring model processorloc fault result paper gghp96 show similar limit stateread model gener transform program paper gghp96 use model process read state neighbor one atom step nonreact program consid exclud mutual exclus consider result gghp96 goal optimum stabil time o1 fault correct time 1faulti state conflict consider passag predic approach rapid stabil follow transient fault suit network model given kps97 nonreact protocol consider safeti converg paper gs95 cw97 consid limit form chang legitim state stabil algorithm maximumflow tree consid capac link asynchron chang form safe converg new legitim state guarante investig paper limit mutual exclus ring processorloc fault contrast research gp93 dh95 ag93 combin stabil form faulttoler consid gener methodolog problem systemat construc tion identifi condit variou techniqu use modular form synthes program variou fault toler nonmask toler transient fault plu mask toler failstop process forth gener method gp93 applic problem consid name nonmask toler worst case transient fault mainten specifi passag predic singl processorloc fault gener superstabil construct dh95 reli interrupt fault appli processorloc fault method suggest ag93 base program constraint specifi detail suffici address superstabil design superstabil protocol nontrivi sens stabil protocol stabil supervisor ad protocol order make stabil must overcom transient fault strike supervisor similarli mechan ad maintain passag predic follow singl local fault must guarante safe behavior converg fault well converg gener fault appar simpl solut ad redund compon use vote modul mask singl fault work vote modul mask singl fault variabl program counter approach propos ak97 develop program layer methodolog new statement success ad program use superposit oper deal differ type fault approach gener sens everi faulttoler program guard command model comput shown layer composit structur element correspond fault detect correct variou fault type problem devis faulttoler program remain howev challeng task experi paper suggest refin may appropri methodolog develop superstabil program protocol present seen refin dijkstra kstate protocol r design mask faulttoler via nonmask fault toler highli safe selfstabil mutual exclus algorithm hive fault contain sharedmemori multiprocessor closur converg foundat faulttoler comput gopal superstabil protocol dynam distribut system construct 1writer multiread multivalu atom variabl regular variabl latenc optim supersta biliz mutual exclus protocol propag timestamp scheme stabil maximum flow rout protocol maximum flow rout tr faulttoler comput unifi selfstabil faulttoler closur converg selfstabil counter flush construct 1writer multiread multivalu atom variabl regular variabl hive highli safe selfstabil mutual exclus algorithm faultcontain selfstabil algorithm timeadapt self stabil design mask faulttoler via nonmask faulttoler selfstabil system spite distribut control selfstabil mutual exclus presenc faulti node ctr yoshiaki katayama eiichiro ueda hideo fujiwara toshimitsu masuzawa latenc optim superstabil mutual exclus protocol unidirect ring journal parallel distribut comput v62 n5 p865884 may 2002 yehuda afek shlomi dolev local stabil journal parallel distribut comput v62 n5 p745765 may 2002