local analysi parallel c program abstractmani parallel architectur support memori model memori access local thu inexpens memori access remot potenti quit expens case memori refer via pointer often difficult determin memori refer guarante local thu handl via inexpens memori oper determin memori access local done programm compil combin overal goal minim work requir programm compil autom process much possibl paper report compil techniqu determin indirect memori refer local local analysi implement parallel dialect c call earthc use algorithm inspir type infer algorithm fast pointsto analysi algorithm static estim indirect refer via pointer safe assum local access local infer algorithm also use guid automat special function order take advantag local specif particular call context addit pure static techniqu also suggest finegrain coarsegrain dynam techniqu case dynam local check insert program special code local case insert finegrain case check put around singl memori refer coarsegrain case check put around larger program segment static local analysi automat special implement earthc compil produc lowlevel thread code earth multithread architectur experiment result present set benchmark oper irregular dynam alloc data structur overal techniqu give moder signific speedup combin static dynam techniqu give best perform overal b introduct one key problem parallel process provid program model simpl pro grammer one would like give programm familiar program languag programm focu highlevel aspect coarsegrain parallel perhap sort static dynam data distribut compil techniqu requir effect map highlevel program actual parallel architectur paper present compil techniqu simplifi programm job express local pointer data structur report previous develop highlevel parallel languag call earthc 1 associ compil translat earthc program lowlevel thread program execut earth multithread architectur 2 3 main emphasi effect compil program use irreg ular dynamicallyalloc data structur initi approach provid highlevel parallel construct type extens express local compil use type declar depend analysi automat produc lowlevel thread although initi approach provid good highlevel basi program earth multithread architectur found programm forc make mani function special declar appropri pointer paramet local scope pointer variabl local pointer thu order experi variou local approach programm need edit mani place hisher pro gram make sever copi function copi special particular type local order eas burden programm develop new compil techniqu infer local pointer variabl automat produc special version function allow programm make minim chang hisher highlevel program order tri variou approach problem also lead shorter sourc program programm need make sever similar copi function main idea behind approach use inform context function call memori alloc statement infer indirect memori refer must refer local memori automat creat special function appropri paramet locallyscop variabl explicitli declar local pointer inform use thread gener reduc number remot oper requir lowlevel thread order test approach implement techniqu earthmccat c compil experi collect pointerbas bench mark present experiment measur earthmanna machin compar perform benchmark without local analysi local analysi handcod version best local rest paper organ follow section present overview earthc languag earthmccat compil earthmanna architectur section 3 provid exampl motiv local analysi section 4 describ analysi section 5 give experiment result set benchmark program final section 6 discuss relat work section 7 give conclus suggest work 2 earthc languag earthc compil design accept highlevel parallel c languag call earthc produc lowlevel threadedc program execut earthmanna multithread archi tectur section provid overview import point languag target ar chitectur complet descript earth project found elsewher 2 21 earthc languag earthc languag design simpl extens c extens use express parallel via parallel statement sequenc gener type foral loop express concurr access via share variabl express data local via data declar local pointer c program valid earthc program compil automat produc correct lowlevel thread program howev usual programm make minim modif program expos coarsegrain parallel add inform data local figur 1 give two sampl list process function written earthc case function take pointer list head pointer node x return number time x occur list figur 1a use foral loop indic interact loop bodi may perform parallel sinc loop must loopcarri depend ordinari variabl use share variabl count accumul count share variabl must alway access via atom function case use builtin function writeto addto valueof figur 1b present altern solut use recurs exampl use parallel sequenc denot use indic call equal node recurs call count rec perform parallel earthc compil captur coarsegrain parallel level function invoc ordinari c function call translat lowerlevel thread c token call token call handl earth runtim load balanc call map processor runtim howev earth c also possibl programm explicitli specifi invoc execut use syntax pexpr case underli threadedc invok mechan use explicitli map invoc processor specifi expr exampl figur 1b call equal node map processor own node x wherea recurs call count rec explicitli map processor assign runtim load balanc case use token invok mecha nism activ frame alloc processor assign invoc invoc remain processor lifetim invoca tion thu earthc compil assum paramet locallyscop variabl local memori access contrari sinc invoc map runtim either use runtim load bal ancer accord express evalu runtim compil must assum access global variabl memori access via pointer direct remot memori use assumpt function count rec figur 1b see access head x c1 c2 local access access headnext remot memori ac cess note make local easier see underlin remot memori access put local pointer declar bold type target architectur earth distribut memorymachin distinct local memori access remot memori access import local memori access express gener lowerlevel threadedc program ordinari c variabl handl effici may assign regist store local data cach howev remot memori refer must resolv call underli earth runtim system thu remot memori access addit cost call appropri earth primit oper plu cost access commun network remot memori access turn actual processor request commun time minim still significantli expens make direct local memori access even though multithread architectur hide commun cost clearli advantag maxim use local memori whenev possi ble order expos local compil earthc concept local pointer programm know pointer alway point local memori keyword local may ad pointer type declar figur 1a call equal node made owner first argu ment thu declar equal node declar first paramet type node local p read right left say p pointer local node thu bodi equal node earth compil may assum pvalu local memori refer qvalu potenti remot memori refer figur 1b illustr opposit case second paramet equal node local pointer case earth compil must assum pvalu potenti remot wherea qvalu local earthc also includ anoth form function declar also express local function may declar use keyword basic basic function must refer local memori may call ordinari remot function basic function translat cheap function invoc target threadedc code memori refer within bodi ordinari c variabl refer thu sometim programm use basic function indic local variabl refer int countnod head node x share int count node p equalnodepxownerofp int equalnodenod local p node q returnpvalu qvalu int countrecnod head node x node next int c1 c2 head null els int equalnodenod p node local q iter solut b recurs solut figur 1 exampl function written earthc within function bodi purpos paper help autom gener local pointer declar automat provid special version function differ call context thu programm concentr express comput map compil infer local inform pointer insert correct local pointer declar reduc burden program mer lead shorter sourc program make chang sourc program less error prone exampl figur 1 programm would need declar one version equal node compil would automat gener appropri special depend call context 22 earthmccat c compil paper build upon exist earthmccat c compil overal structur compil given figur 2 compil split three phase phase contain standard transform anal yse import point sourc program simplifi astbas simpl intermedi represent 4 point program made structur via gotoelimin statement simplifi seri simpl basic statement statement includ assign statement condit loop function call result sideeffect analysi give set locat readwritten statement avail readwrit inform allow local analysi simpl effici method present paper found phase ii parallel local enhanc done phase use result analys phase order transform simpl program represent semant equival program transform present paper introduc local declar produc new special version function phase iii take transform simpl program phase ii gener thread produc tar simplifi gotoelimin local function inlin heap analysi rw set analysi array depend tester phase analys transform parallel function special loop partit local analysi pointsto analysi thread gener build hierarch ddg code gener local enhanc figur 2 overal structur compil get threadedc code expos local phase ii allow thread gener deal fewer remot memori access lead fewer thread fewer call earth primit effici parallel program 23 earthmanna architectur earth model multiprocessor consist multipl earth node interconnect network 2 3 illustr figur 3 earth node consist execut unit eu synchron unit su link togeth buffer su eu share local memori part distribut share memori architectur aggreg local memori node repres global memori address space eu process instruct activ thread activ thread initi execut eu fetch thread id readi queue eu execut thread complet move anoth thread interact su network place messag event queue su fetch messag plu messag come remot processor via network su respond remot synchron command request data also determin thread run add thread id readi queue eu su eu su network figur 3 earth architectur experi perform multithread emul built top manna parallel machine5 manna node consist two intel cpu clock 50mhz 32mb dynam ram bidirect network interfac capabl transfer 50mb direct two processor node map earth eu su earth runtim system support effici remot oper sequenti load remot word take 7s call remot function perform 9s spawn new remot thread take 4s issu pipelin oper take one third time motiv exampl preced section figur 1 present exampl local analysi could use make special version equal node function section present typic exampl local inform use earthc program show local analysi special lead better program exampl give intuit idea behind actual local analysi present section 4 exampl program remot variabl refer underlin thu program fewer underlin refer exhibit local effici 31 pointer local variabl paramet outlin section 21 underli earth runtim system map function activ frame processor execut invoc thu safe assum paramet locallyscop variabl refer local memori assumpt extend pointer variabl shown pointer must point locallyscop variabl andor paramet figur 4a give somewhat contriv exampl serv illustr basic point function foo pointer p pointsto x x param ter sinc paramet alloc local memori safe assum p point local memori pointer q point either paramet x local scope variabl sinc x local assum q local well figur 4b give local version function foo note indirect p q remot underlin refer origin version foo local refer local version int fooint x int p int q expr els int fooint x int local p int local q expr els local infer b local infer figur 4 local pointer 32 dynam memori alloc rich sourc local inform come fact dynam memori alloc alway alloc memori processor alloc call thu function f call memori alloc function like malloc memori return malloc local within bodi f consid exampl figur 5a without local infer type declar compil must assum pointer may refer remot memori thu indic underlin section indirect refer via must assum possibl remot howev one note point memori return malloc thu safe declar local pointer illustr figur 5b case memori access bodi alloc point assum local 33 map comput owner data common kind local inform come programm map function invoc owner piec data use owner ex pression typic exampl given figur 6a function count equal recurs descend binari tree count number node valu v first recurs call left subtre explicitli map particular processor local inform howev second recurs call explicitli sent owner right subtre mean invoc assum refer via pointer local illustr figur 6b express properli special copi count equal must creat call node allocpointdoubl x doubl int colour node node allocpointdoubl x doubl int colour node local local infer b local infer figur 5 local dynam memori alloc count equal spec exampl copi paramet declar local pointer thu memori access bodi local 34 map comput home anoth common method map comput specif processor use function call form fhome indic f invok processor execut call local standpoint give us two kind inform first f return pointer valu local within f must also local within bodi function call f second argument f local caller correspond paramet must local bodi f figur 7a give exampl figur 7b give result appli local analysi first note infer local pointer function newnod use idea present dynam alloc given section 32 thu two call newnod f must return local pointer p q must local pointer consid call lessthan f sinc argument p q local point er correspond formal b bodi lessthan must also local pointer 4 local analysi last section identifi languageprogram featur sourc local inform section present complet algorithm associ analysi rule local analysi overal algorithm present figur 8 work iter two interrel intra interprocedur step begin analysi function program consid candid special put set spclpool local attribut formal paramet global variabl initi remot unless programm given explicit local pointer declar pointer explicitli declar local program local attribut initi local ini tializ analysi proce follow two step step step individu analyz function pool function special spclpool start current local attribut variabl propag inform throughout procedur use flowinsensit intraprocedur approach detail step given subsect 41 step ii step perform interprocedur propag local procedur special ap plicabl look call site function belong spclpool call either home owner primit base local inform callsit infer local inform formal paramet calle function illustr section 33 34 special version calle function local alreadi exist callsit modifi invok function instead otherwis newli special version calle function creat given callsit local attribut paramet newlycr function appropri initi callsit within special function trigger special newlycr function put spclpool end step spclpool nonempti go back first step clearli process termin finit number func tionsparamet special special alway add local inform actual implement creat new local context repres special function actual creat complet new function decis actual creat special function taken analysi depend upon benefit achiev particular special detail special step given subsect 42 41 intraprocedur local propag perform intraprocedur propag local inform use typeinfer techniqu 6 previous adapt perform almost linear pointsto analysis7 basic idea type infer algorithm partit program variabl set equival class achiev classif mergingbas approach use exampl simpl assign lead assign type class variabl x gener term merg current type class x one want collect pointsto inform instead assign would lead merg pointsto class variabl x pointsto class variabl contain set locat may point runtim fast unionfind data struc int countequaltre int v int c1 c2 c3 els int countequaltre int v int c1 c2 c3 els int countequalspectre local int v int c1 c2 c3 els local infer b local infer special figur local gener use owner ture use make merg fast techniqu use steensgaard 7 collect local inform enhanc techniqu attach addit local attribut pointsto class local attribut one three possibl valu indic local inform yet determin ii local locat definit alloc local memori iii remot locat may alloc remot memori two pointsto class merg new local attribut obtain merg local attribut two class use merg oper defin follow remot remot remot remot give small program fragment pointsto local inform obtain typeinfer base algorithm int b c int x z els pointsto local inform differ program point follow localg localg localg localg local attribut local three pointer contain address local variabl one also note inform provid flow insensit kill inform otherwis x pointsto class b statement s2 thu final inform s3 conserv valid entir program fragment local analysi use typeinfer base algorithm intraprocedur set focu analysi accur comput local attribut comput complet pointsto inform thu analysi account pointsto inform hold due alias paramet global howev sinc make worst case assumpt local paramet global loss inform affect correct techniqu found loss inform affect qualiti local inform find thu appear inexpens intraprocedur propag good choic follow subsect provid detail rule intraprocedur local analysi analysi perform simpl intermedi represent earthmccat compil simpl represent provid eight basic statement affect pointstoloc inform provid void f node p q lessthanpqhom node newnodeint val node int lessthannod node b void f node local p local q lessthanpqhom node newnodeint val node local int lessthannod local node local b local infer b local infer figur 7 local gener use home local analysi rule statement 411 address assign point variabl merg pointsto class x class variabl belong els 412 dynam alloc statement contain mal loc call relat memori alloc call creat new variabl call heap also creat class local attribut class initi local done earth program model requir malloc call alway alloc memori local processor creat new class merg pointsto class variabl x give follow rule 413 pointer assign statement belong categori includ rule analyz discuss statement operand z righthand side conserv safe result depend oper perform type operand statement need follow addit level indirect lefthand side need know x pointsto perform appropri merg ie find pointstoclass pointsto class x class yet exist simpli creat class get fill analysi proce argument appli statement x respect righthand side follow tabl summar rule 414 function call function call consider affect local inform use pointer argument global variabl modifi local attribut set pointsto class avoid alway make worstcas assumpt function call local analysi use result interprocedur readwrit modref analysi comput readwrit set analysi step compil fer figur 2 section 22 base readwrit inform two import case case function call write pointer variabl visibl caller includ global guarante call affect pointsto henc also local inform caller case statement statement affect pointsto relationshiploc attribut variabl x local attribut pointsto class x updat depend upon local attribut pointsto class return f return f symbol name repres valu return function f option expr use call function f basic function call home f return pointer return f point local ie localitypointstoclassreturn f local impli locat point return f resid fun local need analyz function initi initi localityprog spclpool function analyz nongammaempti propag localityspclpool fun propag localityprog foreach func spclpool intraprocedur propag propag intraprocedur localityfunc deletfromsplcpoolfunc need analyz foreach callsit prog interprocedur propag newli special function creat addtospclpoolcallsitefunc spclpoollambdanew func need analyz fun propag intraprocedur localityfunc foreach assignmentstmt func local analyz stmtassignmentstmt localityset foreach callstmt local analyz callcallstmt localityset callsitetyp home jj callsitetyp owner find param local calle function specialz version alreadi exist local set specialfuncexistscallsitefunc return new function creat els new func callsit local new return new special function creat foreach func prog conserv assum paramet global pointgammato remot memori figur 8 overal algorithm local analysi processor case new local attribut pointsto class x obtain merg localitypointstoclassreturn f otherwis simpli assign remot per rule expr home isbasicfuncf els case ii altern function call possibl write pointer variabl caller case make worstcas assumpt set local attribut pointsto class argument remot recurs pointsto class variabl reachabl via indirect argument ie also set localityp ointst oclass arg remot need consid global alreadi initi local attribut remot start analysi 42 special function complet step ii algorithm comput set possibl special associ local use static estim number remot access save decid special function actual creat given local context function comput follow data weight correspond callsit reflect potenti execut frequenc ii count remot access elimin creat special function special function creat given local context find weight count estim greater threshold set 20 default comput weight callsit first initi weight call site one loop recurs cycl callsit embed weight multipli ten count remot access save similarli estim simpl remot access save count one remot access save insid loop count ten call site insid special function also special also add number remot access save chainspeci count 5 experiment result order evalu approach experi five benchmark olden suit 8 describ tabl 1 benchmark use dynam data structur tree list except quicksort use dynamicallyalloc array benchmark suit suitabl evalu local analysi focus pointer benchmark descript problem size power optim problem base variabl knari tree 10000 leav perimet comput perimet quadtre encod raster imag maximum tree depth 11 quicksort parallel version quicksort 256k integ tsp find suboptim tour travel problem cite health simul colombian healthcar system use 4way tree 6 level 100 iter tabl 1 benchmark program benchmark provid result three ver sion simpl earthc version local earth c version advanc earthc version henc forth refer respect simpl local advanc version simpl version implement benchmark best data distribut discov date benchmark exploit local use owner home primit use neither local pointer basic function purpos howev use basic function perform comput local version benchmark obtain appli local analysi subsequ function special simpl version version tri find mani local pointer possibl advanc version handcod benchmark user tri optim exploit local use local pointer basic function possibl trick version base best effort group produc good speedup none advanc version implement author note three version use gener dynam data distribut howev gener lowlevel program exploit local differ degre stat ical divid memori refer must local might remot refer must local translat ordinari c variabl refer may alloc regist target compil may cach architectur refer might remot translat call earth runtim system call runtim system may resolv memori request local memori remot mem ori depend call context runtim resolv local memori refer call pseudoremot memori access note pseudo remot refer much expens local refer expens real remot refer must read write data commun network local analysi special effect introduc static declar local pointer vari abl thu runtim execut fewer pseudo remot refer local refer explain previou section done automat introduc local pointer declar introduc special version function captur local specif call context tabl 2 summar static effect appli local analysi special simpl version benchmark benchmark first two column list number local pointer declar introduc number function special made produc local version benchmark third column give rel size line code simpl advanc version note simpl version shorter sometim substanti shorter advanc hand special program benchmark local spcl sizesimpl power perimet tabl 2 static measur tabl 3 provid data actual execut time millisecond three version benchmark experi perform earthmanna architectur describ section 23 last two column give percentag speedup obtain simpl version local advanc version respect exampl column label local vs simpl report simpl gamma local simpl 100 column label ad vanc vs simpl report simpl gammat advanc simpl 100 provid data benchmark run 1 8 processor tabl 4 present actual number remot data access remot call perform differ version benchmark last two column tabl give percentag reduct number remot data accessesremot call simpl version local advanc version respect benchmark simpl local advanc local advanc earthc earthc earthc vs simpl vs simpl msec msec msec impr impr power 1 proc 6715806 6465942 6348245 372 547 8 proc 913292 884654 865186 314 527 perimet 1 proc 709555 596637 525503 1591 2590 8 proc 122071 89486 87259 2670 2850 proc 74831 54623 52332 2700 3006 8 proc 539466 502013 458774 694 1500 8 proc 1719355 1510478 111616 1210 9350 tabl 3 execut time note number remot access perform independ number processor use given program differenti real remot access pseudoremot access data tabl 3 4 indic local version alway perform better simpl version ie local analysi alway abl identifi addit local percentag improv vari lot depend upon bench mark local version come close advanc version first three five bench mark last two case local version give improv compet handcod advanc version analyz result detail individu benchmark power benchmark implement power system optim problem 9 use fourlevel tree structur differ branch width level local analysi achiev 34 improv simpl version execut time quit close advanc version 5 howev abl achiev 80 reduct number remot data access tabl 4 happen function call benchmark typic format comput nodenodeown ofnod function perform numer scalar data access form nodeitem analysi captur local pointer node elimin remot data access respect signific reduct remot access reflect execut time benchmark spend time perform float point oper far exce time spent data access advanc version achiev 93 reduct number remot call simpl local version use basic function factor enabl achiev slightli better speedup local version perimet benchmark comput perimet quadtre encod raster imag 9 unit squar imag recurs divid four quadrant one one point tree travers bottomup comput perimet quadrant local version achiev 1527 speedup come close advanc version 8 processor run local version 32 fewer remot access reduct significantli affect execut time power benchmark benchmark involv much comput spend time travers quadtre henc perform data access irregular benchmark comput requir access tree node may physic close due characterist advanc version exploit addit local use basic function local version thu compet well quicksort benchmark parallel version standard quicksort algorithm two recurs call quicksort execut parallel call bigger subarray invok home size subarray recurs sort phase unknown advanc dynamicallyalloc array use simpl version function qsort copi incom array local array use blkmov end copi back local array incom array use anoth blkmov local analysi abl identifi local incom array home call gener special version recurs qsort function incom array declar local pointer two blkmov instruct substitut call basic function memcpi transform enabl local version achiev signific 80 speedup simpl version within 1 speedup obtain advanc version advanc version use addit basic function complet elimin remot call perform littl better local version benchmark simpl local advanc local advanc earthc earthc earthc vs simpl vs simpl power 2294179 451179 204179 8033 9110 perimet 2421800 1635111 1586323 3248 3449 quicksort 8498635 29128 216 9965 9999 tsp 4421050 2672068 829790 3956 8123 health 41409726 33148575 606 1994 9999 tabl 4 remot access save tsp benchmark solv travel salesman problem use divideandconqu approach base close point algorithm 9 algorithm first search suboptim tour subtreeregion merg subtour bigger one tour found built circular link list sit top root node subtre similar perimet benchmark irregular natur spend signific amount time data access local version achiev 68 speedup 39 reduct remot data access local version howev fail compet advanc version achiev upto 20 speedup result 81 reduct remot data ac cess happen link list repres tour distribut segment link across processor knowledg entir sublist local advanc version exploit signific data local use basic function travers local sublist local analysi design identifi local recurs field kind local implicit programm organ data difficult find compil analys benchmark simul colombian healthcar system use 4way tree 9 villag four child villag villag hospit treat patient villag subtre time step tree travers patient assess either treat pass parent tree node 4way tree evenli distribut among processor toplevel tree node children spread among differ processor local analysi abl achiev 12 speedup result 19 reduct remot data access benchmark similar power call pattern howev call format foovillag nodeown ofvillag node recurs data structur villag node link list patient oppos scalar data item like power analysi abl elimin remot access respect villag node like list villag nodelist access like listpati thu local version get decent speedup simpl version compet advanc version knowledg top level tree node remot children advanc version elimin almost remot data access call regard benchmark similar tsp 51 summari summari find local analysi give signific improv case howev case local analysi compet handcod local map declar provid pro grammer programm may implicit knowledg data local import retain abil explicitli declar local pointer sinc mani case declar auto mate local analysi special sourcetosourc transform one could imagin programm could use output compil produc local version program test program see accept speedup achiev local program programm could add local declar order improv program final note experi perform earth manna compar distribut memori system like ibm sp2 network workstat earthmanna much smaller memori latenc sometim hidden multithread techniqu therefor expect better speedup local analysi machin larger memori latenc support multithread techniqu 6 relat work intraprocedur local propag approach similar steensgaard 7 linear pointsto analysi al gorithm relat work area parallel program dynam data structur carlisl 9 distribut memori machin rinard diniz 10 share memori machin particular carlisl 9 affin analysi similar goal local analysi albeit target differ kind local steensgaard propos typeinfer base algorithm pointsto analysi almost linear time com plexiti algorithm flowinsensit context insensit encount callsit simpli merg formal paramet respect actual argu ment thu algorithm distinguish inform arriv function differ call context local analysi call context inform crucial invoc specif home owner call site major sourc local inform thu want merg local inform arriv differ call context contrari want creat special version function call context provid us substanti local end use typeinfer propag inform intraprocedur employ differ techniqu interprocedur propag explain section 4 howev ensur intraprocedur propag collect conserv safe inform need make conserv assumpt start procedur encount callsit use readwrit set inform thu although approach origin inspir pointsto analysi realli specif tailor captur inform relev local analysi carlisl affin analysi design exploit local respect link field analysi reli upon inform regard probabl affin iti node access travers link field resid processor affin high put runtim check elimin remot access howev affin inform infer compil provid via programm annot local analysi design exploit local achiev via link field discuss section want analysi automat compil analysi want burden user addit detail inform local recurs field explicitli declar use local pointer declar earthc 7 conclus work paper present local analysi parallel c program base typeinfer techniqu analysi tri exploit addit finegrain local coarsegrain local inform alreadi provid user program characterist like malloc site evalu effect set benchmark found elimin signific number pseudoremot access provid speedup rang modest 4 80 origin parallel program sever benchmark speedup also come close speedup obtain advanc handcod version found local analysi reduc burden programm allow us develop shorter gener benchmark base encourag result paper plan evalu analysi wider set bench mark also plan use flowsensit local propag techniqu exploit local pointer even local within specif section program anoth goal automat identifi basic function final local inform link field sometim provid signific speedup benchmark health tsp plan extend analysi captur type local use profil inform efficientlyschedul runtim check acknowledg grate acknowledg support peopl earth group special prof guang r gao olivi maquelin research fund part nserc canada r compil c earth multithread architectur studi earthmanna multithread system poll watchdog combin poll interrupt effici messag handl design mccat compil base famili structur intermedi represent la tenci hide messagepass architectur effici type infer higherord bindingtim analysi pointsto analysi almost linear time support dynam data structur distributedmemori machin olden parallel program dynam data structur distributedmemori machin commut analysi new analysi framework parallel compil tr ctr francisco corbera rafael asenjo emilio l zapata framework captur dynam data structur pointerbas code ieee transact parallel distribut system v15 n2 p151166 februari 2004 oscar plata rafael asenjo eladio gutirrez francisco corbera angel navarro emilio l zapata parallel irregular dynam program parallel comput v31 n6 p544562 june 2005